/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen9_screen/Screen9ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen9ViewBase::Screen9ViewBase()
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, -1, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(7, 17, 35));

    boxWithBorder1.setPosition(0, 0, 418, 66);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(7, 17, 35));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderSize(4);

    textArea1.setXY(38, 7);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID868));

    box2.setPosition(10, 80, 398, 174);
    box2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    pre_finished.setXY(20, 83);
    pre_finished.setVisible(false);
    pre_finished.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pre_finished.setLinespacing(0);
    pre_finished.setTypedText(touchgfx::TypedText(T_SINGLEUSEID869));

    precharg_minus.setXY(20, 144);
    precharg_minus.setVisible(false);
    precharg_minus.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    precharg_minus.setLinespacing(0);
    precharg_minus.setTypedText(touchgfx::TypedText(T_SINGLEUSEID870));

    box3.setPosition(10, 382, 398, 87);
    box3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    textArea5.setXY(449, 64);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID872));

    textArea6.setXY(449, 7);
    textArea6.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea6.setLinespacing(0);
    textArea6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID873));

    boxWithBorder1_1.setPosition(0, 304, 418, 66);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFromRGB(7, 17, 35));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1.setBorderSize(4);

    textArea1_1.setXY(38, 311);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID874));

    sd_open.setXY(20, 402);
    sd_open.setVisible(false);
    sd_open.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sd_open.setLinespacing(0);
    sd_open.setTypedText(touchgfx::TypedText(T_SINGLEUSEID875));

    textArea8.setXY(449, 123);
    textArea8.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea8.setLinespacing(0);
    textArea8.setTypedText(touchgfx::TypedText(T_SINGLEUSEID876));

    textArea9.setXY(449, 181);
    textArea9.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea9.setLinespacing(0);
    textArea9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID877));

    textArea10.setXY(449, 239);
    textArea10.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea10.setLinespacing(0);
    textArea10.setTypedText(touchgfx::TypedText(T_SINGLEUSEID878));

    textArea11.setXY(449, 348);
    textArea11.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea11.setLinespacing(0);
    textArea11.setTypedText(touchgfx::TypedText(T_SINGLEUSEID879));

    precharg_plus.setXY(20, 200);
    precharg_plus.setVisible(false);
    precharg_plus.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    precharg_plus.setLinespacing(0);
    precharg_plus.setTypedText(touchgfx::TypedText(T_SINGLEUSEID880));

    textArea11_1.setXY(449, 296);
    textArea11_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea11_1.setLinespacing(0);
    textArea11_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID881));

    pre_notf.setXY(20, 83);
    pre_notf.setVisible(false);
    pre_notf.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pre_notf.setLinespacing(0);
    pre_notf.setTypedText(touchgfx::TypedText(T_SINGLEUSEID882));

    sd_closed.setXY(20, 402);
    sd_closed.setVisible(false);
    sd_closed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    sd_closed.setLinespacing(0);
    sd_closed.setTypedText(touchgfx::TypedText(T_SINGLEUSEID883));

    circle_air_plus.setPosition(687, 7, 40, 40);
    circle_air_plus.setCenter(20, 20);
    circle_air_plus.setRadius(20);
    circle_air_plus.setLineWidth(0);
    circle_air_plus.setArc(0, 360);
    circle_air_plusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_air_plus.setPainter(circle_air_plusPainter);

    circle_air_minus.setPosition(687, 64, 40, 40);
    circle_air_minus.setCenter(20, 20);
    circle_air_minus.setRadius(20);
    circle_air_minus.setLineWidth(0);
    circle_air_minus.setArc(0, 360);
    circle_air_minusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_air_minus.setPainter(circle_air_minusPainter);

    circle_relay.setPosition(687, 126, 40, 40);
    circle_relay.setCenter(20, 20);
    circle_relay.setRadius(20);
    circle_relay.setLineWidth(0);
    circle_relay.setArc(0, 360);
    circle_relayPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_relay.setPainter(circle_relayPainter);

    circle_shd_cmd.setPosition(687, 184, 40, 40);
    circle_shd_cmd.setCenter(20, 20);
    circle_shd_cmd.setRadius(20);
    circle_shd_cmd.setLineWidth(0);
    circle_shd_cmd.setArc(0, 360);
    circle_shd_cmdPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_shd_cmd.setPainter(circle_shd_cmdPainter);

    circle_imd.setPosition(687, 239, 40, 40);
    circle_imd.setCenter(20, 20);
    circle_imd.setRadius(20);
    circle_imd.setLineWidth(0);
    circle_imd.setArc(0, 360);
    circle_imdPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_imd.setPainter(circle_imdPainter);

    circle_voltage.setPosition(687, 299, 40, 40);
    circle_voltage.setCenter(20, 20);
    circle_voltage.setRadius(20);
    circle_voltage.setLineWidth(0);
    circle_voltage.setArc(0, 360);
    circle_voltagePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_voltage.setPainter(circle_voltagePainter);

    circle_current.setPosition(687, 355, 40, 40);
    circle_current.setCenter(20, 20);
    circle_current.setRadius(20);
    circle_current.setLineWidth(0);
    circle_current.setArc(0, 360);
    circle_currentPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_current.setPainter(circle_currentPainter);

    fatal_error.setXY(449, 406);
    fatal_error.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fatal_error.setLinespacing(0);
    fatal_error.setTypedText(touchgfx::TypedText(T_SINGLEUSEID887));

    circle_fatal_error.setPosition(687, 412, 40, 40);
    circle_fatal_error.setCenter(20, 20);
    circle_fatal_error.setRadius(20);
    circle_fatal_error.setLineWidth(0);
    circle_fatal_error.setArc(0, 360);
    circle_fatal_errorPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle_fatal_error.setPainter(circle_fatal_errorPainter);

    add(__background);
    add(box1);
    add(boxWithBorder1);
    add(textArea1);
    add(box2);
    add(pre_finished);
    add(precharg_minus);
    add(box3);
    add(textArea5);
    add(textArea6);
    add(boxWithBorder1_1);
    add(textArea1_1);
    add(sd_open);
    add(textArea8);
    add(textArea9);
    add(textArea10);
    add(textArea11);
    add(precharg_plus);
    add(textArea11_1);
    add(pre_notf);
    add(sd_closed);
    add(circle_air_plus);
    add(circle_air_minus);
    add(circle_relay);
    add(circle_shd_cmd);
    add(circle_imd);
    add(circle_voltage);
    add(circle_current);
    add(fatal_error);
    add(circle_fatal_error);
}

void Screen9ViewBase::setupScreen()
{

}

//Handles when a key is pressed
void Screen9ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
    {
        //Interaction1
        //When hardware button 1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
