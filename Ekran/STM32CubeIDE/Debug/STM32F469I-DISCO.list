
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c4c4  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000371c  0801c684  0801c684  0002c684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000020  0801fda0  0801fda0  0002fda0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801fdc0  0801fdc0  00041ec4  2**0
                  CONTENTS
  5 .ARM          00000008  0801fdc0  0801fdc0  0002fdc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801fdc8  0801fdc8  00041ec4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801fdc8  0801fdc8  0002fdc8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801fde0  0801fde0  0002fde0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801fde8  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a5c4  20000140  0801ff28  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000a704  0801ff28  0003a704  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00041ec4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00001650  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00000848  90001650  90001650  00041650  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000002c  90001e98  90001e98  00041e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00049d64  00000000  00000000  00041ef4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   0009c962  00000000  00000000  0008bc58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001347b  00000000  00000000  001285ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000028d8  00000000  00000000  0013ba38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012b830  00000000  00000000  0013e310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004100  00000000  00000000  00269b40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00025693  00000000  00000000  0026dc40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037c98  00000000  00000000  002932d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  002caf6b  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007bfc  00000000  00000000  002cb040  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801c66c 	.word	0x0801c66c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801c66c 	.word	0x0801c66c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f003 f9b1 	bl	8003928 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f01b f821 	bl	801b60c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff6b 	bl	80014a4 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0801fde8 	.word	0x0801fde8
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000a704 	.word	0x2000a704

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bde5 	b.w	80011b8 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be53 	b.w	8001298 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f002 bcff 	b.w	8002ff8 <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f002 bd36 	b.w	800306c <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f01a ff67 	bl	801b51a <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f01a ff26 	bl	801b51a <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f01a ff1e 	bl	801b51a <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f003 f867 	bl	80037c0 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f01a ff35 	bl	801b578 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	0801c71c 	.word	0x0801c71c
 8000718:	0801c72f 	.word	0x0801c72f
 800071c:	0801c759 	.word	0x0801c759

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f003 f885 	bl	800383c <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f004 b8ff 	b.w	800496c <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f004 b8e3 	b.w	800496c <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f004 b8d1 	b.w	8004976 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f004 f8b1 	bl	8004960 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd8a 	bl	800139c <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa17 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f003 fe33 	bl	800453e <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa0a 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000a494 	.word	0x2000a494

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f009 fcb2 	bl	800a258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd4a 	b.w	800139a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd61 	b.w	80013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd61 	b.w	80013d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd33 	b.w	8001378 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd39 	b.w	8001388 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd5d 	b.w	80013d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800091c:	4b02      	ldr	r3, [pc, #8]	; (8000928 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000922:	f008 be8b 	b.w	800963c <_ZN8touchgfx3HAL10beginFrameEv>
 8000926:	bf00      	nop
 8000928:	20000014 	.word	0x20000014

0800092c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800092c:	b510      	push	{r4, lr}
 800092e:	4604      	mov	r4, r0
    HAL::endFrame();
 8000930:	f008 fe90 	bl	8009654 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000934:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000938:	b113      	cbz	r3, 8000940 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800093a:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800093c:	2201      	movs	r2, #1
 800093e:	701a      	strb	r2, [r3, #0]
    }
}
 8000940:	bd10      	pop	{r4, pc}
 8000942:	bf00      	nop
 8000944:	20000014 	.word	0x20000014

08000948 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000948:	f008 be3e 	b.w	80095c8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094c <_ZN11TouchGFXHALD0Ev>:
 800094c:	b510      	push	{r4, lr}
 800094e:	217c      	movs	r1, #124	; 0x7c
 8000950:	4604      	mov	r4, r0
 8000952:	f01a fde2 	bl	801b51a <_ZdlPvj>
 8000956:	4620      	mov	r0, r4
 8000958:	bd10      	pop	{r4, pc}

0800095a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800095e:	b11b      	cbz	r3, 8000968 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000960:	6840      	ldr	r0, [r0, #4]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4718      	bx	r3
    }
 8000968:	4618      	mov	r0, r3
 800096a:	4770      	bx	lr

0800096c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800096c:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800096e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000972:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000976:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000978:	428c      	cmp	r4, r1
 800097a:	781a      	ldrb	r2, [r3, #0]
 800097c:	d00d      	beq.n	800099a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800097e:	b95a      	cbnz	r2, 8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000980:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000982:	490f      	ldr	r1, [pc, #60]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000984:	480f      	ldr	r0, [pc, #60]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000986:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000988:	4d0f      	ldr	r5, [pc, #60]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800098a:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800098c:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800098e:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000990:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8000992:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000994:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000996:	701a      	strb	r2, [r3, #0]
    }
 8000998:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800099a:	2a00      	cmp	r2, #0
 800099c:	d0fc      	beq.n	8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800099e:	4809      	ldr	r0, [pc, #36]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80009a0:	4a07      	ldr	r2, [pc, #28]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80009a2:	8801      	ldrh	r1, [r0, #0]
 80009a4:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80009a6:	4a05      	ldr	r2, [pc, #20]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80009a8:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80009aa:	8814      	ldrh	r4, [r2, #0]
 80009ac:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80009ae:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80009b0:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80009b2:	2200      	movs	r2, #0
 80009b4:	e7ef      	b.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80009b6:	bf00      	nop
 80009b8:	2000a190 	.word	0x2000a190
 80009bc:	2000a18c 	.word	0x2000a18c
 80009c0:	2000a192 	.word	0x2000a192
 80009c4:	2000a18e 	.word	0x2000a18e
 80009c8:	2000a194 	.word	0x2000a194

080009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009cc:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009ce:	4c0c      	ldr	r4, [pc, #48]	; (8000a00 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009d0:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009d2:	b931      	cbnz	r1, 80009e2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009d4:	4b0b      	ldr	r3, [pc, #44]	; (8000a04 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009d6:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009da:	f44f 7125 	mov.w	r1, #660	; 0x294
 80009de:	f01a fdcb 	bl	801b578 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009e6:	3a00      	subs	r2, #0
 80009e8:	4909      	ldr	r1, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ec:	bf18      	it	ne
 80009ee:	2201      	movne	r2, #1
 80009f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009f2:	3b00      	subs	r3, #0
 80009f4:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009f6:	bf18      	it	ne
 80009f8:	2301      	movne	r3, #1
 80009fa:	7013      	strb	r3, [r2, #0]
}
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000174 	.word	0x20000174
 8000a04:	0801c7d0 	.word	0x0801c7d0
 8000a08:	0801c808 	.word	0x0801c808
 8000a0c:	0801c856 	.word	0x0801c856
 8000a10:	2000a196 	.word	0x2000a196
 8000a14:	2000a197 	.word	0x2000a197

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f003 fd88 	bl	800453e <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f003 fd8d 	bl	8004560 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000a494 	.word	0x2000a494

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f003 fd7b 	bl	8004560 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f003 fd63 	bl	800453e <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	2000018c 	.word	0x2000018c
 8000a80:	2000a494 	.word	0x2000a494

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc80 	b.w	8001398 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f003 fd57 	bl	8004560 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000a494 	.word	0x2000a494

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f009 fbab 	bl	800a258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f003 fd06 	bl	800451e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000a198 	.word	0x2000a198
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	2000018e 	.word	0x2000018e
 8000b24:	20000178 	.word	0x20000178

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f003 bcc4 	b.w	800451e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	69db      	ldr	r3, [r3, #28]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	20000178 	.word	0x20000178
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000174 	.word	0x20000174
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	2000018e 	.word	0x2000018e
 8000c14:	2000a198 	.word	0x2000a198

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f009 fb32 	bl	800a28c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000a198 	.word	0x2000a198

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	20000180 	.word	0x20000180
 8000c4c:	2000017c 	.word	0x2000017c
 8000c50:	0801c6e0 	.word	0x0801c6e0
 8000c54:	0801c708 	.word	0x0801c708

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f005 fef5 	bl	8006a4e <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f01a fc81 	bl	801b578 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f005 ff86 	bl	8006b8c <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	212b      	movs	r1, #43	; 0x2b
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	20000194 	.word	0x20000194
 8000c94:	0801c968 	.word	0x0801c968
 8000c98:	0801c9b1 	.word	0x0801c9b1
 8000c9c:	0801c9e0 	.word	0x0801c9e0
 8000ca0:	20000190 	.word	0x20000190
 8000ca4:	0801ca3e 	.word	0x0801ca3e

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f005 bf18 	b.w	8006ae4 <osSemaphoreAcquire>
 8000cb4:	20000194 	.word	0x20000194

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f005 bf3e 	b.w	8006b3c <osSemaphoreRelease>
 8000cc0:	20000194 	.word	0x20000194

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f005 bf0b 	b.w	8006ae4 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	20000194 	.word	0x20000194

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f005 bf8f 	b.w	8006c04 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	20000190 	.word	0x20000190
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f005 ffb2 	bl	8006c64 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f005 ffab 	bl	8006c64 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190

08000d18 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d18:	6803      	ldr	r3, [r0, #0]
 8000d1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d1c:	4718      	bx	r3

08000d1e <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d1e:	2001      	movs	r0, #1
 8000d20:	4770      	bx	lr

08000d22 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d22:	6803      	ldr	r3, [r0, #0]
 8000d24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d26:	4718      	bx	r3

08000d28 <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d28:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	9301      	str	r3, [sp, #4]
 8000d2e:	4b0d      	ldr	r3, [pc, #52]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d32:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d36:	631a      	str	r2, [r3, #48]	; 0x30
 8000d38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d3e:	9201      	str	r2, [sp, #4]
 8000d40:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d42:	691a      	ldr	r2, [r3, #16]
 8000d44:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d48:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4a:	691a      	ldr	r2, [r3, #16]
 8000d4c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d50:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b05      	ldr	r3, [pc, #20]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d54:	4a05      	ldr	r2, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d56:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d58:	4b05      	ldr	r3, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d5e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d60:	b002      	add	sp, #8
 8000d62:	4770      	bx	lr
 8000d64:	40023800 	.word	0x40023800
 8000d68:	2000a55c 	.word	0x2000a55c
 8000d6c:	08000d7d 	.word	0x08000d7d
 8000d70:	e000e100 	.word	0xe000e100

08000d74 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d74:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000d78:	4770      	bx	lr
	...

08000d7c <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000d7c:	4b02      	ldr	r3, [pc, #8]	; (8000d88 <DMA2D_XferCpltCallback+0xc>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d82:	6803      	ldr	r3, [r0, #0]
 8000d84:	695b      	ldr	r3, [r3, #20]
 8000d86:	4718      	bx	r3
 8000d88:	2000a198 	.word	0x2000a198

08000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d8c:	b508      	push	{r3, lr}
 8000d8e:	280b      	cmp	r0, #11
 8000d90:	d80b      	bhi.n	8000daa <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d92:	e8df f000 	tbb	[pc, r0]
 8000d96:	0612      	.short	0x0612
 8000d98:	0a0a0a10 	.word	0x0a0a0a10
 8000d9c:	0808080a 	.word	0x0808080a
 8000da0:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da2:	2001      	movs	r0, #1
}
 8000da4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000da6:	2005      	movs	r0, #5
        break;
 8000da8:	e7fc      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000daa:	4b05      	ldr	r3, [pc, #20]	; (8000dc0 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dac:	4a05      	ldr	r2, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dae:	4806      	ldr	r0, [pc, #24]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db0:	2165      	movs	r1, #101	; 0x65
 8000db2:	f01a fbe1 	bl	801b578 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000db6:	2000      	movs	r0, #0
 8000db8:	e7f4      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dbc:	e7f2      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dbe:	bf00      	nop
 8000dc0:	0801ca80 	.word	0x0801ca80
 8000dc4:	0801ca9b 	.word	0x0801ca9b
 8000dc8:	0801cae7 	.word	0x0801cae7

08000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dcc:	b508      	push	{r3, lr}
 8000dce:	280a      	cmp	r0, #10
 8000dd0:	d809      	bhi.n	8000de6 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd2:	e8df f000 	tbb	[pc, r0]
 8000dd6:	0610      	.short	0x0610
 8000dd8:	0808080e 	.word	0x0808080e
 8000ddc:	06060608 	.word	0x06060608
 8000de0:	06          	.byte	0x06
 8000de1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de2:	2001      	movs	r0, #1
}
 8000de4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000de6:	4b05      	ldr	r3, [pc, #20]	; (8000dfc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000de8:	4a05      	ldr	r2, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dea:	4806      	ldr	r0, [pc, #24]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dec:	2186      	movs	r1, #134	; 0x86
 8000dee:	f01a fbc3 	bl	801b578 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df2:	2000      	movs	r0, #0
 8000df4:	e7f6      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000df6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000df8:	e7f4      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfa:	bf00      	nop
 8000dfc:	0801ca80 	.word	0x0801ca80
 8000e00:	0801cb43 	.word	0x0801cb43
 8000e04:	0801cae7 	.word	0x0801cae7

08000e08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e12:	4640      	mov	r0, r8
 8000e14:	f7ff ffba 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e18:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	4638      	mov	r0, r7
 8000e1e:	f7ff ffb5 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e22:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e24:	4638      	mov	r0, r7
 8000e26:	f7ff ffd1 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2a:	8aa1      	ldrh	r1, [r4, #20]
 8000e2c:	8b62      	ldrh	r2, [r4, #26]
 8000e2e:	4b50      	ldr	r3, [pc, #320]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000e30:	1a52      	subs	r2, r2, r1
 8000e32:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e34:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e36:	8b22      	ldrh	r2, [r4, #24]
 8000e38:	1a52      	subs	r2, r2, r1
 8000e3a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e3c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e3e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e44:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e46:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e48:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e4e:	f8d4 c000 	ldr.w	ip, [r4]
 8000e52:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e56:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e5a:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e5e:	469e      	mov	lr, r3
 8000e60:	d03a      	beq.n	8000ed8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000e62:	d814      	bhi.n	8000e8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000e64:	f1bc 0f20 	cmp.w	ip, #32
 8000e68:	ea45 0002 	orr.w	r0, r5, r2
 8000e6c:	d072      	beq.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
 8000e6e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e72:	d06f      	beq.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
 8000e74:	f1bc 0f04 	cmp.w	ip, #4
 8000e78:	d02a      	beq.n	8000ed0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e7a:	4b3d      	ldr	r3, [pc, #244]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000e7c:	432a      	orrs	r2, r5
 8000e7e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e82:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e84:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e86:	d152      	bne.n	8000f2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000e88:	f240 2201 	movw	r2, #513	; 0x201
 8000e8c:	e01e      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
    switch (blitOp.operation)
 8000e8e:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000e92:	d007      	beq.n	8000ea4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000e94:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000e98:	d1ef      	bne.n	8000e7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e9a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000e9e:	f042 0209 	orr.w	r2, r2, #9
 8000ea2:	e003      	b.n	8000eac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ea8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eac:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000eae:	68e0      	ldr	r0, [r4, #12]
 8000eb0:	0202      	lsls	r2, r0, #8
 8000eb2:	0144      	lsls	r4, r0, #5
 8000eb4:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000eb8:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ebc:	00c0      	lsls	r0, r0, #3
 8000ebe:	4322      	orrs	r2, r4
 8000ec0:	b2c0      	uxtb	r0, r0
 8000ec2:	4302      	orrs	r2, r0
 8000ec4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ec6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ec8:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000eca:	4a2a      	ldr	r2, [pc, #168]	; (8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ecc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ece:	e04c      	b.n	8000f6a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed0:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000ed4:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ed6:	e7f6      	b.n	8000ec6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ed8:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eda:	432a      	orrs	r2, r5
 8000edc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ee0:	1d04      	adds	r4, r0, #4
 8000ee2:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee4:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000ee6:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ee8:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000eea:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000eec:	b142      	cbz	r2, 8000f00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
 8000eee:	2a01      	cmp	r2, #1
 8000ef0:	d01f      	beq.n	8000f32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
                assert(0 && "Unsupported format");
 8000ef2:	4b21      	ldr	r3, [pc, #132]	; (8000f78 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 8000ef4:	4a21      	ldr	r2, [pc, #132]	; (8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000ef6:	4822      	ldr	r0, [pc, #136]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000ef8:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000efc:	f01a fb3c 	bl	801b578 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f00:	8842      	ldrh	r2, [r0, #2]
 8000f02:	69d9      	ldr	r1, [r3, #28]
 8000f04:	1e50      	subs	r0, r2, #1
 8000f06:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f0a:	f022 0210 	bic.w	r2, r2, #16
 8000f0e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f12:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f14:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f16:	4b16      	ldr	r3, [pc, #88]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f18:	69da      	ldr	r2, [r3, #28]
 8000f1a:	f042 0220 	orr.w	r2, r2, #32
 8000f1e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f20:	69da      	ldr	r2, [r3, #28]
 8000f22:	0692      	lsls	r2, r2, #26
 8000f24:	d4fc      	bmi.n	8000f20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x118>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f26:	2210      	movs	r2, #16
 8000f28:	609a      	str	r2, [r3, #8]
            if (blend)
 8000f2a:	2c00      	cmp	r4, #0
 8000f2c:	d1cd      	bne.n	8000eca <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f2e:	4a15      	ldr	r2, [pc, #84]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
 8000f30:	e7cc      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f32:	8842      	ldrh	r2, [r0, #2]
 8000f34:	69d9      	ldr	r1, [r3, #28]
 8000f36:	1e50      	subs	r0, r2, #1
 8000f38:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f3c:	f022 0210 	bic.w	r2, r2, #16
 8000f40:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000f44:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f48:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000f4c:	bf18      	it	ne
 8000f4e:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f50:	61da      	str	r2, [r3, #28]
                break;
 8000f52:	e7e0      	b.n	8000f16 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f54:	4b07      	ldr	r3, [pc, #28]	; (8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f56:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f5a:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f5e:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f62:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f66:	f8ce 3000 	str.w	r3, [lr]
}
 8000f6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f6e:	bf00      	nop
 8000f70:	4002b000 	.word	0x4002b000
 8000f74:	00020201 	.word	0x00020201
 8000f78:	0801cb90 	.word	0x0801cb90
 8000f7c:	0801cbaa 	.word	0x0801cbaa
 8000f80:	0801cae7 	.word	0x0801cae7
 8000f84:	00010201 	.word	0x00010201

08000f88 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f8a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000f8c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f8e:	4630      	mov	r0, r6
 8000f90:	f7ff ff1c 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f94:	8aa7      	ldrh	r7, [r4, #20]
 8000f96:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f98:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f9a:	4b1e      	ldr	r3, [pc, #120]	; (8001014 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f9c:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f9e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa0:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fa4:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa6:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa8:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000faa:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fac:	6821      	ldr	r1, [r4, #0]
 8000fae:	2908      	cmp	r1, #8
 8000fb0:	d118      	bne.n	8000fe4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fb8:	7f21      	ldrb	r1, [r4, #28]
 8000fba:	4a17      	ldr	r2, [pc, #92]	; (8001018 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fbc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fc0:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fc2:	68e1      	ldr	r1, [r4, #12]
 8000fc4:	020a      	lsls	r2, r1, #8
 8000fc6:	0148      	lsls	r0, r1, #5
 8000fc8:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fcc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fd0:	00c9      	lsls	r1, r1, #3
 8000fd2:	4302      	orrs	r2, r0
 8000fd4:	b2c9      	uxtb	r1, r1
 8000fd6:	430a      	orrs	r2, r1
 8000fd8:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fda:	4a10      	ldr	r2, [pc, #64]	; (800101c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fdc:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fde:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000fe0:	601a      	str	r2, [r3, #0]
    }
}
 8000fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe4:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fe6:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe8:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000fea:	68e1      	ldr	r1, [r4, #12]
 8000fec:	b91e      	cbnz	r6, 8000ff6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000fee:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff0:	4b08      	ldr	r3, [pc, #32]	; (8001014 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8000ff2:	4a0b      	ldr	r2, [pc, #44]	; (8001020 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8000ff4:	e7f4      	b.n	8000fe0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000ff6:	020a      	lsls	r2, r1, #8
 8000ff8:	0148      	lsls	r0, r1, #5
 8000ffa:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000ffe:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001002:	00c9      	lsls	r1, r1, #3
 8001004:	b2c9      	uxtb	r1, r1
 8001006:	4302      	orrs	r2, r0
 8001008:	430a      	orrs	r2, r1
 800100a:	7f21      	ldrb	r1, [r4, #28]
 800100c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001010:	639a      	str	r2, [r3, #56]	; 0x38
 8001012:	e7ed      	b.n	8000ff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001014:	4002b000 	.word	0x4002b000
 8001018:	00010009 	.word	0x00010009
 800101c:	00020201 	.word	0x00020201
 8001020:	00030201 	.word	0x00030201

08001024 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001024:	4b05      	ldr	r3, [pc, #20]	; (800103c <_ZN10STM32F4DMAD1Ev+0x18>)
 8001026:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001028:	4b05      	ldr	r3, [pc, #20]	; (8001040 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800102a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800102e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001032:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001036:	f3bf 8f6f 	isb	sy
}
 800103a:	4770      	bx	lr
 800103c:	0801cbf4 	.word	0x0801cbf4
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001044:	b510      	push	{r4, lr}
 8001046:	4604      	mov	r4, r0
}
 8001048:	f7ff ffec 	bl	8001024 <_ZN10STM32F4DMAD1Ev>
 800104c:	4620      	mov	r0, r4
 800104e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001052:	f01a fa62 	bl	801b51a <_ZdlPvj>
 8001056:	4620      	mov	r0, r4
 8001058:	bd10      	pop	{r4, pc}
	...

0800105c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800105c:	b570      	push	{r4, r5, r6, lr}
 800105e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001060:	4625      	mov	r5, r4
 8001062:	4b0a      	ldr	r3, [pc, #40]	; (800108c <_ZN10STM32F4DMAC1Ev+0x30>)
 8001064:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001066:	2600      	movs	r6, #0
 8001068:	6060      	str	r0, [r4, #4]
 800106a:	7226      	strb	r6, [r4, #8]
 800106c:	7266      	strb	r6, [r4, #9]
 800106e:	f845 3b20 	str.w	r3, [r5], #32
 8001072:	2260      	movs	r2, #96	; 0x60
 8001074:	4629      	mov	r1, r5
 8001076:	f009 fa41 	bl	800a4fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800107a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800107e:	60ee      	str	r6, [r5, #12]
 8001080:	3520      	adds	r5, #32
 8001082:	42ab      	cmp	r3, r5
 8001084:	d1fb      	bne.n	800107e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8001086:	4620      	mov	r0, r4
 8001088:	bd70      	pop	{r4, r5, r6, pc}
 800108a:	bf00      	nop
 800108c:	0801cbf4 	.word	0x0801cbf4

08001090 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001090:	2001      	movs	r0, #1
 8001092:	4770      	bx	lr

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001094:	200c      	movs	r0, #12
 8001096:	4770      	bx	lr

08001098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001098:	230c      	movs	r3, #12
 800109a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800109e:	3008      	adds	r0, #8
 80010a0:	4770      	bx	lr

080010a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010a2:	230c      	movs	r3, #12
 80010a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010a8:	3008      	adds	r0, #8
 80010aa:	4770      	bx	lr

080010ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010ac:	2001      	movs	r0, #1
 80010ae:	4770      	bx	lr

080010b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010b0:	f44f 70ec 	mov.w	r0, #472	; 0x1d8
 80010b4:	4770      	bx	lr

080010b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010b6:	f44f 73ec 	mov.w	r3, #472	; 0x1d8
 80010ba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010be:	3008      	adds	r0, #8
 80010c0:	4770      	bx	lr

080010c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010c2:	f44f 73ec 	mov.w	r3, #472	; 0x1d8
 80010c6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ca:	3008      	adds	r0, #8
 80010cc:	4770      	bx	lr

080010ce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010ce:	2001      	movs	r0, #1
 80010d0:	4770      	bx	lr

080010d2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d2:	2010      	movs	r0, #16
 80010d4:	4770      	bx	lr

080010d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010da:	3008      	adds	r0, #8
 80010dc:	4770      	bx	lr

080010de <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010de:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010e2:	3008      	adds	r0, #8
 80010e4:	4770      	bx	lr

080010e6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010e6:	4608      	mov	r0, r1
 80010e8:	f001 b82c 	b.w	8002144 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

080010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4b03      	ldr	r3, [pc, #12]	; (80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010f0:	6003      	str	r3, [r0, #0]
 80010f2:	4604      	mov	r4, r0
 80010f4:	f007 fdd0 	bl	8008c98 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}
 80010fc:	0801ccac 	.word	0x0801ccac

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001100:	b510      	push	{r4, lr}
 8001102:	4604      	mov	r4, r0
 8001104:	f7ff fff2 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001108:	4620      	mov	r0, r4
 800110a:	2114      	movs	r1, #20
 800110c:	f01a fa05 	bl	801b51a <_ZdlPvj>
 8001110:	4620      	mov	r0, r4
 8001112:	bd10      	pop	{r4, pc}

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f007 fdbc 	bl	8008c98 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	0801cc78 	.word	0x0801cc78

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001136:	f01a f9f0 	bl	801b51a <_ZdlPvj>
 800113a:	4620      	mov	r0, r4
 800113c:	bd10      	pop	{r4, pc}
	...

08001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001140:	b510      	push	{r4, lr}
 8001142:	4b03      	ldr	r3, [pc, #12]	; (8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001144:	6003      	str	r3, [r0, #0]
 8001146:	4604      	mov	r4, r0
 8001148:	f007 fda6 	bl	8008c98 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800114c:	4620      	mov	r0, r4
 800114e:	bd10      	pop	{r4, pc}
 8001150:	0801cc44 	.word	0x0801cc44

08001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001154:	b510      	push	{r4, lr}
 8001156:	4604      	mov	r4, r0
 8001158:	f7ff fff2 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800115c:	4620      	mov	r0, r4
 800115e:	2118      	movs	r1, #24
 8001160:	f01a f9db 	bl	801b51a <_ZdlPvj>
 8001164:	4620      	mov	r0, r4
 8001166:	bd10      	pop	{r4, pc}

08001168 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001168:	b510      	push	{r4, lr}
 800116a:	4b08      	ldr	r3, [pc, #32]	; (800118c <_ZN12FrontendHeapD1Ev+0x24>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f500 7003 	add.w	r0, r0, #524	; 0x20c
 8001174:	f7ff ffba 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001178:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800117c:	f7ff ffca 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001180:	f104 0014 	add.w	r0, r4, #20
 8001184:	f7ff ffdc 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001188:	4620      	mov	r0, r4
 800118a:	bd10      	pop	{r4, pc}
 800118c:	0801cce0 	.word	0x0801cce0

08001190 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001190:	b508      	push	{r3, lr}
 8001192:	4802      	ldr	r0, [pc, #8]	; (800119c <__tcf_0+0xc>)
 8001194:	f7ff ffe8 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 8001198:	bd08      	pop	{r3, pc}
 800119a:	bf00      	nop
 800119c:	2000019c 	.word	0x2000019c

080011a0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011a0:	b510      	push	{r4, lr}
 80011a2:	4604      	mov	r4, r0
 80011a4:	f7ff ffe0 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 80011a8:	4620      	mov	r0, r4
 80011aa:	f44f 715f 	mov.w	r1, #892	; 0x37c
 80011ae:	f01a f9b4 	bl	801b51a <_ZdlPvj>
 80011b2:	4620      	mov	r0, r4
 80011b4:	bd10      	pop	{r4, pc}
	...

080011b8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011bc:	f000 ff04 	bl	8001fc8 <_ZN14BitmapDatabase11getInstanceEv>
 80011c0:	4605      	mov	r5, r0
 80011c2:	f000 ff05 	bl	8001fd0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011c6:	2400      	movs	r4, #0
 80011c8:	4601      	mov	r1, r0
 80011ca:	4623      	mov	r3, r4
 80011cc:	4628      	mov	r0, r5
 80011ce:	4622      	mov	r2, r4
 80011d0:	9400      	str	r4, [sp, #0]
 80011d2:	f00e faef 	bl	800f7b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011d6:	4b25      	ldr	r3, [pc, #148]	; (800126c <touchgfx_init+0xb4>)
 80011d8:	4a25      	ldr	r2, [pc, #148]	; (8001270 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011da:	4d26      	ldr	r5, [pc, #152]	; (8001274 <touchgfx_init+0xbc>)
 80011dc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011de:	4620      	mov	r0, r4
 80011e0:	f001 fb18 	bl	8002814 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011e4:	4824      	ldr	r0, [pc, #144]	; (8001278 <touchgfx_init+0xc0>)
 80011e6:	f00e fa27 	bl	800f638 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011ea:	782b      	ldrb	r3, [r5, #0]
 80011ec:	f3bf 8f5b 	dmb	ish
 80011f0:	07db      	lsls	r3, r3, #31
 80011f2:	d435      	bmi.n	8001260 <touchgfx_init+0xa8>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f01a f992 	bl	801b51e <__cxa_guard_acquire>
 80011fa:	b388      	cbz	r0, 8001260 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80011fc:	4c1f      	ldr	r4, [pc, #124]	; (800127c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80011fe:	4b20      	ldr	r3, [pc, #128]	; (8001280 <touchgfx_init+0xc8>)
 8001200:	6023      	str	r3, [r4, #0]
 8001202:	f504 7609 	add.w	r6, r4, #548	; 0x224
 8001206:	f104 0014 	add.w	r0, r4, #20
 800120a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800120e:	f504 7703 	add.w	r7, r4, #524	; 0x20c
 8001212:	6060      	str	r0, [r4, #4]
 8001214:	f8c4 8008 	str.w	r8, [r4, #8]
 8001218:	60e7      	str	r7, [r4, #12]
 800121a:	6126      	str	r6, [r4, #16]
 800121c:	f007 fd3e 	bl	8008c9c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001220:	4b18      	ldr	r3, [pc, #96]	; (8001284 <touchgfx_init+0xcc>)
 8001222:	6163      	str	r3, [r4, #20]
 8001224:	4640      	mov	r0, r8
 8001226:	f007 fd39 	bl	8008c9c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800122a:	4b17      	ldr	r3, [pc, #92]	; (8001288 <touchgfx_init+0xd0>)
 800122c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800122e:	4638      	mov	r0, r7
 8001230:	f007 fd34 	bl	8008c9c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001234:	4b15      	ldr	r3, [pc, #84]	; (800128c <touchgfx_init+0xd4>)
 8001236:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
 800123a:	f504 7008 	add.w	r0, r4, #544	; 0x220
 800123e:	f001 fb65 	bl	800290c <_ZN5ModelC1Ev>
 8001242:	4622      	mov	r2, r4
 8001244:	f504 7108 	add.w	r1, r4, #544	; 0x220
 8001248:	4630      	mov	r0, r6
 800124a:	f001 fb55 	bl	80028f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800124e:	4630      	mov	r0, r6
 8001250:	f000 ff78 	bl	8002144 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001254:	4628      	mov	r0, r5
 8001256:	f01a f96e 	bl	801b536 <__cxa_guard_release>
 800125a:	480d      	ldr	r0, [pc, #52]	; (8001290 <touchgfx_init+0xd8>)
 800125c:	f01a f9aa 	bl	801b5b4 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001260:	480c      	ldr	r0, [pc, #48]	; (8001294 <touchgfx_init+0xdc>)
}
 8001262:	b002      	add	sp, #8
 8001264:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001268:	f7ff bb06 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 800126c:	2000a1f4 	.word	0x2000a1f4
 8001270:	200011b8 	.word	0x200011b8
 8001274:	20000198 	.word	0x20000198
 8001278:	2000001c 	.word	0x2000001c
 800127c:	2000019c 	.word	0x2000019c
 8001280:	0801cce0 	.word	0x0801cce0
 8001284:	0801cc44 	.word	0x0801cc44
 8001288:	0801cc78 	.word	0x0801cc78
 800128c:	0801ccac 	.word	0x0801ccac
 8001290:	08001191 	.word	0x08001191
 8001294:	2000113c 	.word	0x2000113c

08001298 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001298:	4801      	ldr	r0, [pc, #4]	; (80012a0 <touchgfx_taskEntry+0x8>)
 800129a:	f7ff bb07 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 800129e:	bf00      	nop
 80012a0:	2000113c 	.word	0x2000113c

080012a4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012a4:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012a6:	4c24      	ldr	r4, [pc, #144]	; (8001338 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012a8:	4e24      	ldr	r6, [pc, #144]	; (800133c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012aa:	4b25      	ldr	r3, [pc, #148]	; (8001340 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012ac:	4d25      	ldr	r5, [pc, #148]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012ae:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012b0:	4630      	mov	r0, r6
 80012b2:	f7ff fed3 	bl	800105c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012b6:	4628      	mov	r0, r5
 80012b8:	f011 fb00 	bl	80128bc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012bc:	4b22      	ldr	r3, [pc, #136]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012be:	2200      	movs	r2, #0
 80012c0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012c4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012c8:	4920      	ldr	r1, [pc, #128]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012ca:	60dc      	str	r4, [r3, #12]
 80012cc:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012d0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012d4:	6759      	str	r1, [r3, #116]	; 0x74
 80012d6:	2101      	movs	r1, #1
 80012d8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012dc:	491c      	ldr	r1, [pc, #112]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012de:	4c1d      	ldr	r4, [pc, #116]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 80012e0:	600b      	str	r3, [r1, #0]
        DISPLAY_WIDTH = width;
 80012e2:	491d      	ldr	r1, [pc, #116]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012e4:	851a      	strh	r2, [r3, #40]	; 0x28
 80012e6:	f44f 7050 	mov.w	r0, #832	; 0x340
 80012ea:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 80012ec:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 80012f0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80012f4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012f8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012fc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001300:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001304:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001308:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 800130c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001310:	62da      	str	r2, [r3, #44]	; 0x2c
 8001312:	861a      	strh	r2, [r3, #48]	; 0x30
 8001314:	661a      	str	r2, [r3, #96]	; 0x60
 8001316:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800131a:	671a      	str	r2, [r3, #112]	; 0x70
 800131c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_HEIGHT = height;
 8001320:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001322:	4c0e      	ldr	r4, [pc, #56]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001324:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8001328:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800132a:	4c0d      	ldr	r4, [pc, #52]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800132c:	4a0d      	ldr	r2, [pc, #52]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800132e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001330:	480d      	ldr	r0, [pc, #52]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001332:	601a      	str	r2, [r3, #0]
 8001334:	8001      	strh	r1, [r0, #0]
}
 8001336:	bd70      	pop	{r4, r5, r6, pc}
 8001338:	20000518 	.word	0x20000518
 800133c:	2000051c 	.word	0x2000051c
 8001340:	0801c7c0 	.word	0x0801c7c0
 8001344:	200011bc 	.word	0x200011bc
 8001348:	2000113c 	.word	0x2000113c
 800134c:	01000001 	.word	0x01000001
 8001350:	2000a198 	.word	0x2000a198
 8001354:	2000a18e 	.word	0x2000a18e
 8001358:	2000a18c 	.word	0x2000a18c
 800135c:	2000a190 	.word	0x2000a190
 8001360:	2000a192 	.word	0x2000a192
 8001364:	0801c8a4 	.word	0x0801c8a4
 8001368:	2000a194 	.word	0x2000a194

0800136c <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 800136c:	4801      	ldr	r0, [pc, #4]	; (8001374 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800136e:	f7ff be59 	b.w	8001024 <_ZN10STM32F4DMAD1Ev>
 8001372:	bf00      	nop
 8001374:	2000051c 	.word	0x2000051c

08001378 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001378:	4b02      	ldr	r3, [pc, #8]	; (8001384 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800137a:	2290      	movs	r2, #144	; 0x90
 800137c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001380:	4770      	bx	lr
 8001382:	bf00      	nop
 8001384:	e000e100 	.word	0xe000e100

08001388 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001388:	4b02      	ldr	r3, [pc, #8]	; (8001394 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800138a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800138e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001390:	4770      	bx	lr
 8001392:	bf00      	nop
 8001394:	e000e100 	.word	0xe000e100

08001398 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001398:	4770      	bx	lr

0800139a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 800139a:	4770      	bx	lr

0800139c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	4604      	mov	r4, r0
    HAL::initialize();
 80013a0:	f008 f965 	bl	800966e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013a4:	6823      	ldr	r3, [r4, #0]
 80013a6:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 80013a8:	f00b f8e8 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80013ac:	4601      	mov	r1, r0
 80013ae:	4620      	mov	r0, r4
 80013b0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013b2:	6823      	ldr	r3, [r4, #0]
 80013b4:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 80013b8:	2300      	movs	r3, #0
 80013ba:	461a      	mov	r2, r3
 80013bc:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013c0:	4620      	mov	r0, r4
 80013c2:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013c4:	2301      	movs	r3, #1
 80013c6:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013ca:	bd38      	pop	{r3, r4, r5, pc}

080013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013cc:	f008 b902 	b.w	80095d4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013d0:	f008 ba5b 	b.w	800988a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013d4:	4b04      	ldr	r3, [pc, #16]	; (80013e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013da:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013e2:	f3bf 8f6f 	isb	sy
}
 80013e6:	4770      	bx	lr
 80013e8:	e000e100 	.word	0xe000e100

080013ec <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013ec:	4901      	ldr	r1, [pc, #4]	; (80013f4 <vApplicationIdleHook+0x8>)
 80013ee:	2000      	movs	r0, #0
 80013f0:	f006 bf7a 	b.w	80082e8 <vTaskSetApplicationTaskTag>
 80013f4:	08000c19 	.word	0x08000c19

080013f8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80013f8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80013fa:	2064      	movs	r0, #100	; 0x64
 80013fc:	f005 fb1b 	bl	8006a36 <osDelay>
  for(;;)
 8001400:	e7fb      	b.n	80013fa <StartDefaultTask+0x2>
	...

08001404 <SystemClock_Config>:
{
 8001404:	b530      	push	{r4, r5, lr}
 8001406:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001408:	2210      	movs	r2, #16
 800140a:	2100      	movs	r1, #0
 800140c:	a809      	add	r0, sp, #36	; 0x24
 800140e:	f01a f93f 	bl	801b690 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001412:	2214      	movs	r2, #20
 8001414:	2100      	movs	r1, #0
 8001416:	a802      	add	r0, sp, #8
 8001418:	f01a f93a 	bl	801b690 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800141c:	2400      	movs	r4, #0
 800141e:	4b1f      	ldr	r3, [pc, #124]	; (800149c <SystemClock_Config+0x98>)
 8001420:	9400      	str	r4, [sp, #0]
 8001422:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001424:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001428:	641a      	str	r2, [r3, #64]	; 0x40
 800142a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800142c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001430:	9300      	str	r3, [sp, #0]
 8001432:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001434:	4b1a      	ldr	r3, [pc, #104]	; (80014a0 <SystemClock_Config+0x9c>)
 8001436:	9401      	str	r4, [sp, #4]
 8001438:	681a      	ldr	r2, [r3, #0]
 800143a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800143e:	601a      	str	r2, [r3, #0]
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001446:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001448:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800144a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800144c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001450:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001454:	2502      	movs	r5, #2
 8001456:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800145a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800145c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001460:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001464:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001468:	2004      	movs	r0, #4
 800146a:	2306      	movs	r3, #6
 800146c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001470:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001472:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001474:	f004 fe2c 	bl	80060d0 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001478:	f004 f87c 	bl	8005574 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800147c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800147e:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001482:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001484:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001488:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800148c:	2105      	movs	r1, #5
 800148e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001490:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001494:	f004 fbf0 	bl	8005c78 <HAL_RCC_ClockConfig>
}
 8001498:	b015      	add	sp, #84	; 0x54
 800149a:	bd30      	pop	{r4, r5, pc}
 800149c:	40023800 	.word	0x40023800
 80014a0:	40007000 	.word	0x40007000

080014a4 <main>:
{
 80014a4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014a8:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014aa:	f002 fa4b 	bl	8003944 <HAL_Init>
  SystemClock_Config();
 80014ae:	f7ff ffa9 	bl	8001404 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014b2:	2214      	movs	r2, #20
 80014b4:	2100      	movs	r1, #0
 80014b6:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ba:	f01a f8e9 	bl	801b690 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014be:	4bc9      	ldr	r3, [pc, #804]	; (80017e4 <main+0x340>)
 80014c0:	9402      	str	r4, [sp, #8]
 80014c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014c4:	48c8      	ldr	r0, [pc, #800]	; (80017e8 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c6:	f042 0210 	orr.w	r2, r2, #16
 80014ca:	631a      	str	r2, [r3, #48]	; 0x30
 80014cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ce:	f002 0210 	and.w	r2, r2, #16
 80014d2:	9202      	str	r2, [sp, #8]
 80014d4:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014d6:	9403      	str	r4, [sp, #12]
 80014d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014da:	f042 0202 	orr.w	r2, r2, #2
 80014de:	631a      	str	r2, [r3, #48]	; 0x30
 80014e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e2:	f002 0202 	and.w	r2, r2, #2
 80014e6:	9203      	str	r2, [sp, #12]
 80014e8:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014ea:	9404      	str	r4, [sp, #16]
 80014ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80014fa:	9204      	str	r2, [sp, #16]
 80014fc:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014fe:	9405      	str	r4, [sp, #20]
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f042 0208 	orr.w	r2, r2, #8
 8001506:	631a      	str	r2, [r3, #48]	; 0x30
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f002 0208 	and.w	r2, r2, #8
 800150e:	9205      	str	r2, [sp, #20]
 8001510:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001512:	9406      	str	r4, [sp, #24]
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800151a:	631a      	str	r2, [r3, #48]	; 0x30
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001522:	9206      	str	r2, [sp, #24]
 8001524:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001526:	9407      	str	r4, [sp, #28]
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f042 0220 	orr.w	r2, r2, #32
 800152e:	631a      	str	r2, [r3, #48]	; 0x30
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f002 0220 	and.w	r2, r2, #32
 8001536:	9207      	str	r2, [sp, #28]
 8001538:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800153a:	9408      	str	r4, [sp, #32]
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001542:	631a      	str	r2, [r3, #48]	; 0x30
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800154a:	9208      	str	r2, [sp, #32]
 800154c:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800154e:	9409      	str	r4, [sp, #36]	; 0x24
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001556:	631a      	str	r2, [r3, #48]	; 0x30
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800155e:	9209      	str	r2, [sp, #36]	; 0x24
 8001560:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001562:	940a      	str	r4, [sp, #40]	; 0x28
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f042 0204 	orr.w	r2, r2, #4
 800156a:	631a      	str	r2, [r3, #48]	; 0x30
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f002 0204 	and.w	r2, r2, #4
 8001572:	920a      	str	r2, [sp, #40]	; 0x28
 8001574:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001576:	940b      	str	r4, [sp, #44]	; 0x2c
 8001578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800157e:	631a      	str	r2, [r3, #48]	; 0x30
 8001580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001582:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001586:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001588:	2201      	movs	r2, #1
 800158a:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800158c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 800158e:	f003 f9ed 	bl	800496c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001592:	4896      	ldr	r0, [pc, #600]	; (80017ec <main+0x348>)
 8001594:	4622      	mov	r2, r4
 8001596:	2110      	movs	r1, #16
 8001598:	f003 f9e8 	bl	800496c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 800159c:	4894      	ldr	r0, [pc, #592]	; (80017f0 <main+0x34c>)
 800159e:	4622      	mov	r2, r4
 80015a0:	2140      	movs	r1, #64	; 0x40
 80015a2:	f003 f9e3 	bl	800496c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015a6:	4622      	mov	r2, r4
 80015a8:	4892      	ldr	r0, [pc, #584]	; (80017f4 <main+0x350>)
 80015aa:	2180      	movs	r1, #128	; 0x80
 80015ac:	f003 f9de 	bl	800496c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015b0:	2611      	movs	r6, #17
 80015b2:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015b4:	488c      	ldr	r0, [pc, #560]	; (80017e8 <main+0x344>)
 80015b6:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015b8:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ba:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015be:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c2:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c6:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015ca:	f003 f841 	bl	8004650 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ce:	4887      	ldr	r0, [pc, #540]	; (80017ec <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015d2:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d4:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d8:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015dc:	f003 f838 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015e0:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015e2:	4883      	ldr	r0, [pc, #524]	; (80017f0 <main+0x34c>)
 80015e4:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015e6:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e8:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ec:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015f0:	f003 f82e 	bl	8004650 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015f4:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f6:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015f8:	487e      	ldr	r0, [pc, #504]	; (80017f4 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015fa:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015fc:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001600:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001602:	f003 f825 	bl	8004650 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001606:	487c      	ldr	r0, [pc, #496]	; (80017f8 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001608:	4e7c      	ldr	r6, [pc, #496]	; (80017fc <main+0x358>)
  hcrc.Instance = CRC;
 800160a:	4b7d      	ldr	r3, [pc, #500]	; (8001800 <main+0x35c>)
 800160c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800160e:	f002 fa3f 	bl	8003a90 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001612:	4b7c      	ldr	r3, [pc, #496]	; (8001804 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001614:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001618:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800161c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800161e:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001622:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001626:	f002 fb47 	bl	8003cb8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800162a:	4639      	mov	r1, r7
 800162c:	4630      	mov	r0, r6
 800162e:	f002 fbfb 	bl	8003e28 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001632:	4629      	mov	r1, r5
 8001634:	4622      	mov	r2, r4
 8001636:	486f      	ldr	r0, [pc, #444]	; (80017f4 <main+0x350>)
  hdsi.Instance = DSI;
 8001638:	4e73      	ldr	r6, [pc, #460]	; (8001808 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800163a:	f003 f997 	bl	800496c <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800163e:	2014      	movs	r0, #20
 8001640:	f002 f9ac 	bl	800399c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001644:	4629      	mov	r1, r5
 8001646:	463a      	mov	r2, r7
 8001648:	486a      	ldr	r0, [pc, #424]	; (80017f4 <main+0x350>)
 800164a:	f003 f98f 	bl	800496c <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800164e:	200a      	movs	r0, #10
 8001650:	f002 f9a4 	bl	800399c <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001654:	2224      	movs	r2, #36	; 0x24
 8001656:	4621      	mov	r1, r4
 8001658:	a815      	add	r0, sp, #84	; 0x54
 800165a:	f01a f819 	bl	801b690 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800165e:	2218      	movs	r2, #24
 8001660:	4621      	mov	r1, r4
 8001662:	a80f      	add	r0, sp, #60	; 0x3c
 8001664:	f01a f814 	bl	801b690 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001668:	2234      	movs	r2, #52	; 0x34
 800166a:	4621      	mov	r1, r4
 800166c:	a82b      	add	r0, sp, #172	; 0xac
 800166e:	f01a f80f 	bl	801b690 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001672:	222c      	movs	r2, #44	; 0x2c
 8001674:	4621      	mov	r1, r4
 8001676:	a81e      	add	r0, sp, #120	; 0x78
 8001678:	f01a f80a 	bl	801b690 <memset>
  hdsi.Instance = DSI;
 800167c:	4b63      	ldr	r3, [pc, #396]	; (800180c <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 800167e:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001680:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001682:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001686:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001688:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800168a:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 800168c:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001690:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001694:	f002 fc90 	bl	8003fb8 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001698:	a915      	add	r1, sp, #84	; 0x54
 800169a:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 800169c:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016a0:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016a4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016a8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016ac:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ae:	f002 fead 	bl	800440c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016b2:	221c      	movs	r2, #28
 80016b4:	2321      	movs	r3, #33	; 0x21
 80016b6:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016ba:	210f      	movs	r1, #15
 80016bc:	2319      	movs	r3, #25
 80016be:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016c2:	4630      	mov	r0, r6
 80016c4:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016c6:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016ca:	f002 fe62 	bl	8004392 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016ce:	4629      	mov	r1, r5
 80016d0:	4630      	mov	r0, r6
 80016d2:	f002 fe4d 	bl	8004370 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016d6:	f242 7110 	movw	r1, #10000	; 0x2710
 80016da:	4630      	mov	r0, r6
 80016dc:	f002 ffa1 	bl	8004622 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016e0:	4621      	mov	r1, r4
 80016e2:	4630      	mov	r0, r6
 80016e4:	f002 fc05 	bl	8003ef2 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016e8:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016ec:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016f0:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80016f4:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 80016f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80016fc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001700:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001704:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001708:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800170c:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 8001710:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001714:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001718:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800171c:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001720:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001724:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001728:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800172c:	a92b      	add	r1, sp, #172	; 0xac
 800172e:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001730:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001734:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001738:	f002 fde6 	bl	8004308 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 800173c:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800173e:	a91e      	add	r1, sp, #120	; 0x78
 8001740:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001742:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001746:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 800174a:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800174e:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001752:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001756:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001758:	f002 fd64 	bl	8004224 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800175c:	4621      	mov	r1, r4
 800175e:	4630      	mov	r0, r6
 8001760:	f002 fd4f 	bl	8004202 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001764:	482a      	ldr	r0, [pc, #168]	; (8001810 <main+0x36c>)
 8001766:	492b      	ldr	r1, [pc, #172]	; (8001814 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001768:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800176a:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800176e:	2340      	movs	r3, #64	; 0x40
 8001770:	2120      	movs	r1, #32
 8001772:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001776:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800177a:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800177e:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001780:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001782:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 8001786:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 800178a:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800178c:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 800178e:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001792:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001796:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 800179a:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 800179e:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017a2:	f004 fe4b 	bl	800643c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017a6:	f001 fff5 	bl	8003794 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017aa:	f001 ffa5 	bl	80036f8 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ae:	2234      	movs	r2, #52	; 0x34
 80017b0:	4621      	mov	r1, r4
 80017b2:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017b4:	4d18      	ldr	r5, [pc, #96]	; (8001818 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017b6:	f019 ff6b 	bl	801b690 <memset>
  hltdc.Instance = LTDC;
 80017ba:	4a18      	ldr	r2, [pc, #96]	; (800181c <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017bc:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017be:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017c2:	23ca      	movs	r3, #202	; 0xca
 80017c4:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017c8:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017cc:	21cb      	movs	r1, #203	; 0xcb
 80017ce:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017d2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017d4:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017d8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017dc:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017e0:	e01e      	b.n	8001820 <main+0x37c>
 80017e2:	bf00      	nop
 80017e4:	40023800 	.word	0x40023800
 80017e8:	40022800 	.word	0x40022800
 80017ec:	40020c00 	.word	0x40020c00
 80017f0:	40021800 	.word	0x40021800
 80017f4:	40021c00 	.word	0x40021c00
 80017f8:	2000a48c 	.word	0x2000a48c
 80017fc:	2000a55c 	.word	0x2000a55c
 8001800:	40023000 	.word	0x40023000
 8001804:	4002b000 	.word	0x4002b000
 8001808:	2000a494 	.word	0x2000a494
 800180c:	40016c00 	.word	0x40016c00
 8001810:	2000a59c 	.word	0x2000a59c
 8001814:	a0000140 	.word	0xa0000140
 8001818:	2000a4b0 	.word	0x2000a4b0
 800181c:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001820:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001824:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001828:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800182c:	f003 fd6c 	bl	8005308 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001830:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 8001832:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001834:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001838:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 800183c:	2005      	movs	r0, #5
 800183e:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001842:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 8001846:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800184a:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800184c:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001850:	4628      	mov	r0, r5
 8001852:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001854:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001858:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800185a:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 800185e:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 8001862:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001866:	f003 fe1b 	bl	80054a0 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 800186a:	682a      	ldr	r2, [r5, #0]
 800186c:	6993      	ldr	r3, [r2, #24]
 800186e:	f023 0301 	bic.w	r3, r3, #1
 8001872:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001874:	4630      	mov	r0, r6
 8001876:	f002 fe2f 	bl	80044d8 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 800187a:	4639      	mov	r1, r7
 800187c:	4640      	mov	r0, r8
 800187e:	f001 f8fd 	bl	8002a7c <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001882:	2328      	movs	r3, #40	; 0x28
 8001884:	2215      	movs	r2, #21
 8001886:	4621      	mov	r1, r4
 8001888:	4630      	mov	r0, r6
 800188a:	9400      	str	r4, [sp, #0]
 800188c:	f002 fe57 	bl	800453e <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001890:	a92b      	add	r1, sp, #172	; 0xac
 8001892:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001894:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001898:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 800189c:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018a0:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018a4:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018a8:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018aa:	f002 fd2d 	bl	8004308 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018ae:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018b2:	4622      	mov	r2, r4
 80018b4:	4628      	mov	r0, r5
 80018b6:	f003 fe21 	bl	80054fc <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018ba:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018bc:	481e      	ldr	r0, [pc, #120]	; (8001938 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018be:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018c0:	4d1e      	ldr	r5, [pc, #120]	; (800193c <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018c2:	4e1f      	ldr	r6, [pc, #124]	; (8001940 <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018c4:	433b      	orrs	r3, r7
 80018c6:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018c8:	4b1e      	ldr	r3, [pc, #120]	; (8001944 <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018ca:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018cc:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018d0:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018d2:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018d6:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018da:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018de:	f003 ff61 	bl	80057a4 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018e2:	f001 fdcf 	bl	8003484 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018e6:	f001 fd03 	bl	80032f0 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018ea:	f001 fc79 	bl	80031e0 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018ee:	4b16      	ldr	r3, [pc, #88]	; (8001948 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018f0:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018f2:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80018f4:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 80018f8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80018fc:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001900:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001904:	f003 fa1c 	bl	8004d40 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001908:	4628      	mov	r0, r5
 800190a:	f003 fac1 	bl	8004e90 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800190e:	f7fe fe6c 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 8001912:	f005 f81b 	bl	800694c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001916:	4a0d      	ldr	r2, [pc, #52]	; (800194c <main+0x4a8>)
 8001918:	480d      	ldr	r0, [pc, #52]	; (8001950 <main+0x4ac>)
 800191a:	4621      	mov	r1, r4
 800191c:	f005 f842 	bl	80069a4 <osThreadNew>
 8001920:	4b0c      	ldr	r3, [pc, #48]	; (8001954 <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001922:	4a0d      	ldr	r2, [pc, #52]	; (8001958 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001924:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001926:	4621      	mov	r1, r4
 8001928:	480c      	ldr	r0, [pc, #48]	; (800195c <main+0x4b8>)
 800192a:	f005 f83b 	bl	80069a4 <osThreadNew>
 800192e:	4b0c      	ldr	r3, [pc, #48]	; (8001960 <main+0x4bc>)
 8001930:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001932:	f005 f81d 	bl	8006970 <osKernelStart>
  while (1)
 8001936:	e7fe      	b.n	8001936 <main+0x492>
 8001938:	2000a5d0 	.word	0x2000a5d0
 800193c:	2000a438 	.word	0x2000a438
 8001940:	40005400 	.word	0x40005400
 8001944:	a0001000 	.word	0xa0001000
 8001948:	00061a80 	.word	0x00061a80
 800194c:	0801cd2c 	.word	0x0801cd2c
 8001950:	080013f9 	.word	0x080013f9
 8001954:	2000a434 	.word	0x2000a434
 8001958:	0801cd08 	.word	0x0801cd08
 800195c:	080005ef 	.word	0x080005ef
 8001960:	2000a558 	.word	0x2000a558

08001964 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001964:	6802      	ldr	r2, [r0, #0]
 8001966:	4b03      	ldr	r3, [pc, #12]	; (8001974 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001968:	429a      	cmp	r2, r3
 800196a:	d101      	bne.n	8001970 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800196c:	f002 b804 	b.w	8003978 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop
 8001974:	40001000 	.word	0x40001000

08001978 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001978:	4770      	bx	lr
	...

0800197c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800197c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800197e:	4b0e      	ldr	r3, [pc, #56]	; (80019b8 <HAL_MspInit+0x3c>)
 8001980:	2200      	movs	r2, #0
 8001982:	9200      	str	r2, [sp, #0]
 8001984:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001986:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800198a:	6459      	str	r1, [r3, #68]	; 0x44
 800198c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800198e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001992:	9100      	str	r1, [sp, #0]
 8001994:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001996:	9201      	str	r2, [sp, #4]
 8001998:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800199a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800199e:	6419      	str	r1, [r3, #64]	; 0x40
 80019a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019a6:	9301      	str	r3, [sp, #4]
 80019a8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019aa:	210f      	movs	r1, #15
 80019ac:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019b0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019b2:	f002 b819 	b.w	80039e8 <HAL_NVIC_SetPriority>
 80019b6:	bf00      	nop
 80019b8:	40023800 	.word	0x40023800

080019bc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019bc:	6802      	ldr	r2, [r0, #0]
 80019be:	4b09      	ldr	r3, [pc, #36]	; (80019e4 <HAL_CRC_MspInit+0x28>)
 80019c0:	429a      	cmp	r2, r3
{
 80019c2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019c4:	d10b      	bne.n	80019de <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019c6:	2300      	movs	r3, #0
 80019c8:	9301      	str	r3, [sp, #4]
 80019ca:	4b07      	ldr	r3, [pc, #28]	; (80019e8 <HAL_CRC_MspInit+0x2c>)
 80019cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ce:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019d2:	631a      	str	r2, [r3, #48]	; 0x30
 80019d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019da:	9301      	str	r3, [sp, #4]
 80019dc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019de:	b002      	add	sp, #8
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40023000 	.word	0x40023000
 80019e8:	40023800 	.word	0x40023800

080019ec <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80019ec:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80019ee:	4b0f      	ldr	r3, [pc, #60]	; (8001a2c <HAL_DMA2D_MspInit+0x40>)
 80019f0:	6802      	ldr	r2, [r0, #0]
 80019f2:	429a      	cmp	r2, r3
 80019f4:	d116      	bne.n	8001a24 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019f6:	2200      	movs	r2, #0
 80019f8:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80019fc:	9201      	str	r2, [sp, #4]
 80019fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a00:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a04:	6319      	str	r1, [r3, #48]	; 0x30
 8001a06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a08:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a0c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a0e:	2105      	movs	r1, #5
 8001a10:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a12:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a14:	f001 ffe8 	bl	80039e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a18:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a1a:	b003      	add	sp, #12
 8001a1c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a20:	f002 b814 	b.w	8003a4c <HAL_NVIC_EnableIRQ>
}
 8001a24:	b003      	add	sp, #12
 8001a26:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a2a:	bf00      	nop
 8001a2c:	4002b000 	.word	0x4002b000

08001a30 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a30:	b510      	push	{r4, lr}
 8001a32:	4604      	mov	r4, r0
 8001a34:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a36:	2214      	movs	r2, #20
 8001a38:	2100      	movs	r1, #0
 8001a3a:	a803      	add	r0, sp, #12
 8001a3c:	f019 fe28 	bl	801b690 <memset>
  if(hdsi->Instance==DSI)
 8001a40:	6822      	ldr	r2, [r4, #0]
 8001a42:	4b18      	ldr	r3, [pc, #96]	; (8001aa4 <HAL_DSI_MspInit+0x74>)
 8001a44:	429a      	cmp	r2, r3
 8001a46:	d12a      	bne.n	8001a9e <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a48:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a4c:	2400      	movs	r4, #0
 8001a4e:	9401      	str	r4, [sp, #4]
 8001a50:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a52:	4815      	ldr	r0, [pc, #84]	; (8001aa8 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a54:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a58:	645a      	str	r2, [r3, #68]	; 0x44
 8001a5a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a5c:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a60:	9201      	str	r2, [sp, #4]
 8001a62:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a64:	9402      	str	r4, [sp, #8]
 8001a66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a68:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a6c:	631a      	str	r2, [r3, #48]	; 0x30
 8001a6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a70:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a74:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a76:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a78:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a7a:	2302      	movs	r3, #2
 8001a7c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a80:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001a82:	230d      	movs	r3, #13
 8001a84:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a86:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a8a:	f002 fde1 	bl	8004650 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001a8e:	205c      	movs	r0, #92	; 0x5c
 8001a90:	4622      	mov	r2, r4
 8001a92:	2105      	movs	r1, #5
 8001a94:	f001 ffa8 	bl	80039e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001a98:	205c      	movs	r0, #92	; 0x5c
 8001a9a:	f001 ffd7 	bl	8003a4c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001a9e:	b008      	add	sp, #32
 8001aa0:	bd10      	pop	{r4, pc}
 8001aa2:	bf00      	nop
 8001aa4:	40016c00 	.word	0x40016c00
 8001aa8:	40022400 	.word	0x40022400

08001aac <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001aac:	b530      	push	{r4, r5, lr}
 8001aae:	4604      	mov	r4, r0
 8001ab0:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ab2:	2214      	movs	r2, #20
 8001ab4:	2100      	movs	r1, #0
 8001ab6:	a803      	add	r0, sp, #12
 8001ab8:	f019 fdea 	bl	801b690 <memset>
  if(hi2c->Instance==I2C1)
 8001abc:	6822      	ldr	r2, [r4, #0]
 8001abe:	4b1a      	ldr	r3, [pc, #104]	; (8001b28 <HAL_I2C_MspInit+0x7c>)
 8001ac0:	429a      	cmp	r2, r3
 8001ac2:	d12f      	bne.n	8001b24 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ac4:	4c19      	ldr	r4, [pc, #100]	; (8001b2c <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ac6:	481a      	ldr	r0, [pc, #104]	; (8001b30 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ac8:	2500      	movs	r5, #0
 8001aca:	9501      	str	r5, [sp, #4]
 8001acc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ace:	f043 0302 	orr.w	r3, r3, #2
 8001ad2:	6323      	str	r3, [r4, #48]	; 0x30
 8001ad4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ad6:	f003 0302 	and.w	r3, r3, #2
 8001ada:	9301      	str	r3, [sp, #4]
 8001adc:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ade:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001ae2:	2312      	movs	r3, #18
 8001ae4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ae8:	2101      	movs	r1, #1
 8001aea:	2303      	movs	r3, #3
 8001aec:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001af0:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001af2:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001af4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001af6:	f002 fdab 	bl	8004650 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001afa:	9502      	str	r5, [sp, #8]
 8001afc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001afe:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b02:	6423      	str	r3, [r4, #64]	; 0x40
 8001b04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b06:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b0a:	9302      	str	r3, [sp, #8]
 8001b0c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b0e:	6a23      	ldr	r3, [r4, #32]
 8001b10:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b14:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b16:	6a23      	ldr	r3, [r4, #32]
 8001b18:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b1c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b1e:	2064      	movs	r0, #100	; 0x64
 8001b20:	f001 ff3c 	bl	800399c <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b24:	b009      	add	sp, #36	; 0x24
 8001b26:	bd30      	pop	{r4, r5, pc}
 8001b28:	40005400 	.word	0x40005400
 8001b2c:	40023800 	.word	0x40023800
 8001b30:	40020400 	.word	0x40020400

08001b34 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b34:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b36:	6802      	ldr	r2, [r0, #0]
 8001b38:	4b0a      	ldr	r3, [pc, #40]	; (8001b64 <HAL_I2C_MspDeInit+0x30>)
 8001b3a:	429a      	cmp	r2, r3
 8001b3c:	d110      	bne.n	8001b60 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b3e:	4a0a      	ldr	r2, [pc, #40]	; (8001b68 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b40:	480a      	ldr	r0, [pc, #40]	; (8001b6c <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b42:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b44:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b48:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b4a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b4e:	f002 fe65 	bl	800481c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b56:	4805      	ldr	r0, [pc, #20]	; (8001b6c <HAL_I2C_MspDeInit+0x38>)
 8001b58:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b5c:	f002 be5e 	b.w	800481c <HAL_GPIO_DeInit>
}
 8001b60:	bd08      	pop	{r3, pc}
 8001b62:	bf00      	nop
 8001b64:	40005400 	.word	0x40005400
 8001b68:	40023800 	.word	0x40023800
 8001b6c:	40020400 	.word	0x40020400

08001b70 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b70:	b510      	push	{r4, lr}
 8001b72:	4604      	mov	r4, r0
 8001b74:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b76:	223c      	movs	r2, #60	; 0x3c
 8001b78:	2100      	movs	r1, #0
 8001b7a:	a801      	add	r0, sp, #4
 8001b7c:	f019 fd88 	bl	801b690 <memset>
  if(hltdc->Instance==LTDC)
 8001b80:	6822      	ldr	r2, [r4, #0]
 8001b82:	4b13      	ldr	r3, [pc, #76]	; (8001bd0 <HAL_LTDC_MspInit+0x60>)
 8001b84:	429a      	cmp	r2, r3
 8001b86:	d121      	bne.n	8001bcc <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001b88:	2308      	movs	r3, #8
 8001b8a:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001b8c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001b90:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b92:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b94:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b96:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b98:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b9a:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b9c:	f004 f936 	bl	8005e0c <HAL_RCCEx_PeriphCLKConfig>
 8001ba0:	b108      	cbz	r0, 8001ba6 <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001ba2:	f7ff fee9 	bl	8001978 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ba6:	4b0b      	ldr	r3, [pc, #44]	; (8001bd4 <HAL_LTDC_MspInit+0x64>)
 8001ba8:	9400      	str	r4, [sp, #0]
 8001baa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bac:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bb0:	645a      	str	r2, [r3, #68]	; 0x44
 8001bb2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bb4:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001bb8:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bba:	2058      	movs	r0, #88	; 0x58
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bc0:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bc2:	f001 ff11 	bl	80039e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bc6:	2058      	movs	r0, #88	; 0x58
 8001bc8:	f001 ff40 	bl	8003a4c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bcc:	b010      	add	sp, #64	; 0x40
 8001bce:	bd10      	pop	{r4, pc}
 8001bd0:	40016800 	.word	0x40016800
 8001bd4:	40023800 	.word	0x40023800

08001bd8 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bda:	4604      	mov	r4, r0
 8001bdc:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bde:	2214      	movs	r2, #20
 8001be0:	2100      	movs	r1, #0
 8001be2:	a803      	add	r0, sp, #12
 8001be4:	f019 fd54 	bl	801b690 <memset>
  if(hqspi->Instance==QUADSPI)
 8001be8:	6822      	ldr	r2, [r4, #0]
 8001bea:	4b24      	ldr	r3, [pc, #144]	; (8001c7c <HAL_QSPI_MspInit+0xa4>)
 8001bec:	429a      	cmp	r2, r3
 8001bee:	d143      	bne.n	8001c78 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001bf0:	4b23      	ldr	r3, [pc, #140]	; (8001c80 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bf2:	4824      	ldr	r0, [pc, #144]	; (8001c84 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001bf4:	2400      	movs	r4, #0
 8001bf6:	9400      	str	r4, [sp, #0]
 8001bf8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001bfa:	f042 0202 	orr.w	r2, r2, #2
 8001bfe:	639a      	str	r2, [r3, #56]	; 0x38
 8001c00:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c02:	f002 0202 	and.w	r2, r2, #2
 8001c06:	9200      	str	r2, [sp, #0]
 8001c08:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c0a:	9401      	str	r4, [sp, #4]
 8001c0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c0e:	f042 0202 	orr.w	r2, r2, #2
 8001c12:	631a      	str	r2, [r3, #48]	; 0x30
 8001c14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c16:	f002 0202 	and.w	r2, r2, #2
 8001c1a:	9201      	str	r2, [sp, #4]
 8001c1c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c1e:	9402      	str	r4, [sp, #8]
 8001c20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c22:	f042 0220 	orr.w	r2, r2, #32
 8001c26:	631a      	str	r2, [r3, #48]	; 0x30
 8001c28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c2a:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2c:	f003 0320 	and.w	r3, r3, #32
 8001c30:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c32:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c34:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c36:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c38:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3a:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3e:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c42:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c46:	f002 fd03 	bl	8004650 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c4a:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4e:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c52:	480d      	ldr	r0, [pc, #52]	; (8001c88 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c54:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c56:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c58:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c5a:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c5e:	f002 fcf7 	bl	8004650 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c62:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c66:	4808      	ldr	r0, [pc, #32]	; (8001c88 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c68:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c6c:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c70:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c74:	f002 fcec 	bl	8004650 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001c78:	b009      	add	sp, #36	; 0x24
 8001c7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c7c:	a0001000 	.word	0xa0001000
 8001c80:	40023800 	.word	0x40023800
 8001c84:	40020400 	.word	0x40020400
 8001c88:	40021400 	.word	0x40021400

08001c8c <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001c8c:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001c8e:	6802      	ldr	r2, [r0, #0]
 8001c90:	4b09      	ldr	r3, [pc, #36]	; (8001cb8 <HAL_QSPI_MspDeInit+0x2c>)
 8001c92:	429a      	cmp	r2, r3
 8001c94:	d10f      	bne.n	8001cb6 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c96:	4a09      	ldr	r2, [pc, #36]	; (8001cbc <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001c98:	4809      	ldr	r0, [pc, #36]	; (8001cc0 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c9a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001c9c:	f023 0302 	bic.w	r3, r3, #2
 8001ca0:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001ca2:	2140      	movs	r1, #64	; 0x40
 8001ca4:	f002 fdba 	bl	800481c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001ca8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001cac:	4805      	ldr	r0, [pc, #20]	; (8001cc4 <HAL_QSPI_MspDeInit+0x38>)
 8001cae:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001cb2:	f002 bdb3 	b.w	800481c <HAL_GPIO_DeInit>
}
 8001cb6:	bd08      	pop	{r3, pc}
 8001cb8:	a0001000 	.word	0xa0001000
 8001cbc:	40023800 	.word	0x40023800
 8001cc0:	40020400 	.word	0x40020400
 8001cc4:	40021400 	.word	0x40021400

08001cc8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cca:	4b31      	ldr	r3, [pc, #196]	; (8001d90 <HAL_SDRAM_MspInit+0xc8>)
 8001ccc:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cce:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001cd0:	2c00      	cmp	r4, #0
 8001cd2:	d15b      	bne.n	8001d8c <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001cd4:	2201      	movs	r2, #1
 8001cd6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cd8:	4b2e      	ldr	r3, [pc, #184]	; (8001d94 <HAL_SDRAM_MspInit+0xcc>)
 8001cda:	9400      	str	r4, [sp, #0]
 8001cdc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cde:	482e      	ldr	r0, [pc, #184]	; (8001d98 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ce0:	f042 0201 	orr.w	r2, r2, #1
 8001ce4:	639a      	str	r2, [r3, #56]	; 0x38
 8001ce6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ce8:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cea:	f003 0301 	and.w	r3, r3, #1
 8001cee:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cf2:	2603      	movs	r6, #3
 8001cf4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cf6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cf8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfa:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001cfe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d02:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d06:	f002 fca3 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d0a:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d0e:	4823      	ldr	r0, [pc, #140]	; (8001d9c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d10:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d12:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d14:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d18:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d1c:	f002 fc98 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d20:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d24:	481e      	ldr	r0, [pc, #120]	; (8001da0 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d26:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d28:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d2e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d32:	f002 fc8d 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d36:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d3a:	481a      	ldr	r0, [pc, #104]	; (8001da4 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d3c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d3e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d40:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d44:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d48:	f002 fc82 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d4c:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d50:	4815      	ldr	r0, [pc, #84]	; (8001da8 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d52:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d54:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d56:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d5a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d5e:	f002 fc77 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d62:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d66:	4811      	ldr	r0, [pc, #68]	; (8001dac <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d68:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d6a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d70:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d74:	f002 fc6c 	bl	8004650 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001d78:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d7a:	480d      	ldr	r0, [pc, #52]	; (8001db0 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d88:	f002 fc62 	bl	8004650 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d8c:	b007      	add	sp, #28
 8001d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d90:	20001238 	.word	0x20001238
 8001d94:	40023800 	.word	0x40023800
 8001d98:	40021000 	.word	0x40021000
 8001d9c:	40021800 	.word	0x40021800
 8001da0:	40020c00 	.word	0x40020c00
 8001da4:	40022000 	.word	0x40022000
 8001da8:	40021400 	.word	0x40021400
 8001dac:	40021c00 	.word	0x40021c00
 8001db0:	40020800 	.word	0x40020800

08001db4 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001db4:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001db6:	4b17      	ldr	r3, [pc, #92]	; (8001e14 <HAL_SDRAM_MspDeInit+0x60>)
 8001db8:	681a      	ldr	r2, [r3, #0]
 8001dba:	bb52      	cbnz	r2, 8001e12 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001dbc:	2201      	movs	r2, #1
 8001dbe:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dc0:	4a15      	ldr	r2, [pc, #84]	; (8001e18 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dc2:	4816      	ldr	r0, [pc, #88]	; (8001e1c <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dc4:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dc6:	f023 0301 	bic.w	r3, r3, #1
 8001dca:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dcc:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001dd0:	f002 fd24 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dd4:	4812      	ldr	r0, [pc, #72]	; (8001e20 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dd6:	f248 1133 	movw	r1, #33075	; 0x8133
 8001dda:	f002 fd1f 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001dde:	4811      	ldr	r0, [pc, #68]	; (8001e24 <HAL_SDRAM_MspDeInit+0x70>)
 8001de0:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001de4:	f002 fd1a 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001de8:	480f      	ldr	r0, [pc, #60]	; (8001e28 <HAL_SDRAM_MspDeInit+0x74>)
 8001dea:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001dee:	f002 fd15 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001df2:	480e      	ldr	r0, [pc, #56]	; (8001e2c <HAL_SDRAM_MspDeInit+0x78>)
 8001df4:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001df8:	f002 fd10 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dfc:	480c      	ldr	r0, [pc, #48]	; (8001e30 <HAL_SDRAM_MspDeInit+0x7c>)
 8001dfe:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e02:	f002 fd0b 	bl	800481c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e0a:	480a      	ldr	r0, [pc, #40]	; (8001e34 <HAL_SDRAM_MspDeInit+0x80>)
 8001e0c:	210d      	movs	r1, #13
 8001e0e:	f002 bd05 	b.w	800481c <HAL_GPIO_DeInit>
}
 8001e12:	bd08      	pop	{r3, pc}
 8001e14:	20001234 	.word	0x20001234
 8001e18:	40023800 	.word	0x40023800
 8001e1c:	40021000 	.word	0x40021000
 8001e20:	40021800 	.word	0x40021800
 8001e24:	40020c00 	.word	0x40020c00
 8001e28:	40022000 	.word	0x40022000
 8001e2c:	40021400 	.word	0x40021400
 8001e30:	40021c00 	.word	0x40021c00
 8001e34:	40020800 	.word	0x40020800

08001e38 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e38:	b530      	push	{r4, r5, lr}
 8001e3a:	4601      	mov	r1, r0
 8001e3c:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e3e:	2200      	movs	r2, #0
 8001e40:	2036      	movs	r0, #54	; 0x36
 8001e42:	f001 fdd1 	bl	80039e8 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e46:	2036      	movs	r0, #54	; 0x36
 8001e48:	f001 fe00 	bl	8003a4c <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e4c:	2500      	movs	r5, #0
 8001e4e:	4b15      	ldr	r3, [pc, #84]	; (8001ea4 <HAL_InitTick+0x6c>)
 8001e50:	9502      	str	r5, [sp, #8]
 8001e52:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e54:	4c14      	ldr	r4, [pc, #80]	; (8001ea8 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e56:	f042 0210 	orr.w	r2, r2, #16
 8001e5a:	641a      	str	r2, [r3, #64]	; 0x40
 8001e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e5e:	f003 0310 	and.w	r3, r3, #16
 8001e62:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e64:	a901      	add	r1, sp, #4
 8001e66:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e68:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e6a:	f003 ffb1 	bl	8005dd0 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e6e:	f003 ff9f 	bl	8005db0 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e72:	4b0e      	ldr	r3, [pc, #56]	; (8001eac <HAL_InitTick+0x74>)
 8001e74:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e76:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e7a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e7c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e7e:	4b0c      	ldr	r3, [pc, #48]	; (8001eb0 <HAL_InitTick+0x78>)
 8001e80:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e84:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e86:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e88:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e8a:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e8c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e8e:	f004 fc73 	bl	8006778 <HAL_TIM_Base_Init>
 8001e92:	b920      	cbnz	r0, 8001e9e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e94:	4620      	mov	r0, r4
 8001e96:	f004 fb29 	bl	80064ec <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001e9a:	b009      	add	sp, #36	; 0x24
 8001e9c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001e9e:	2001      	movs	r0, #1
 8001ea0:	e7fb      	b.n	8001e9a <HAL_InitTick+0x62>
 8001ea2:	bf00      	nop
 8001ea4:	40023800 	.word	0x40023800
 8001ea8:	2000a61c 	.word	0x2000a61c
 8001eac:	40001000 	.word	0x40001000
 8001eb0:	000f4240 	.word	0x000f4240

08001eb4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001eb4:	4770      	bx	lr

08001eb6 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eb6:	e7fe      	b.n	8001eb6 <HardFault_Handler>

08001eb8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001eb8:	e7fe      	b.n	8001eb8 <MemManage_Handler>

08001eba <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001eba:	e7fe      	b.n	8001eba <BusFault_Handler>

08001ebc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ebc:	e7fe      	b.n	8001ebc <UsageFault_Handler>

08001ebe <DebugMon_Handler>:
 8001ebe:	4770      	bx	lr

08001ec0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ec0:	4801      	ldr	r0, [pc, #4]	; (8001ec8 <TIM6_DAC_IRQHandler+0x8>)
 8001ec2:	f004 bb51 	b.w	8006568 <HAL_TIM_IRQHandler>
 8001ec6:	bf00      	nop
 8001ec8:	2000a61c 	.word	0x2000a61c

08001ecc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ecc:	4801      	ldr	r0, [pc, #4]	; (8001ed4 <LTDC_IRQHandler+0x8>)
 8001ece:	f003 ba8a 	b.w	80053e6 <HAL_LTDC_IRQHandler>
 8001ed2:	bf00      	nop
 8001ed4:	2000a4b0 	.word	0x2000a4b0

08001ed8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ed8:	4801      	ldr	r0, [pc, #4]	; (8001ee0 <DMA2D_IRQHandler+0x8>)
 8001eda:	f001 bf1b 	b.w	8003d14 <HAL_DMA2D_IRQHandler>
 8001ede:	bf00      	nop
 8001ee0:	2000a55c 	.word	0x2000a55c

08001ee4 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001ee4:	4801      	ldr	r0, [pc, #4]	; (8001eec <DSI_IRQHandler+0x8>)
 8001ee6:	f002 b91a 	b.w	800411e <HAL_DSI_IRQHandler>
 8001eea:	bf00      	nop
 8001eec:	2000a494 	.word	0x2000a494

08001ef0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001ef0:	2001      	movs	r0, #1
 8001ef2:	4770      	bx	lr

08001ef4 <_kill>:

int _kill(int pid, int sig)
{
 8001ef4:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001ef6:	f019 fb71 	bl	801b5dc <__errno>
 8001efa:	2316      	movs	r3, #22
 8001efc:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001efe:	f04f 30ff 	mov.w	r0, #4294967295
 8001f02:	bd08      	pop	{r3, pc}

08001f04 <_exit>:

void _exit (int status)
{
 8001f04:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f06:	f019 fb69 	bl	801b5dc <__errno>
 8001f0a:	2316      	movs	r3, #22
 8001f0c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f0e:	e7fe      	b.n	8001f0e <_exit+0xa>

08001f10 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f10:	b570      	push	{r4, r5, r6, lr}
 8001f12:	460e      	mov	r6, r1
 8001f14:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f16:	2500      	movs	r5, #0
 8001f18:	42a5      	cmp	r5, r4
 8001f1a:	db01      	blt.n	8001f20 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f1c:	4620      	mov	r0, r4
 8001f1e:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f20:	f3af 8000 	nop.w
 8001f24:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f26:	3501      	adds	r5, #1
 8001f28:	e7f6      	b.n	8001f18 <_read+0x8>

08001f2a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f2a:	b570      	push	{r4, r5, r6, lr}
 8001f2c:	460e      	mov	r6, r1
 8001f2e:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f30:	2500      	movs	r5, #0
 8001f32:	42a5      	cmp	r5, r4
 8001f34:	db01      	blt.n	8001f3a <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f36:	4620      	mov	r0, r4
 8001f38:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f3a:	5d70      	ldrb	r0, [r6, r5]
 8001f3c:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f40:	3501      	adds	r5, #1
 8001f42:	e7f6      	b.n	8001f32 <_write+0x8>

08001f44 <_close>:

int _close(int file)
{
	return -1;
}
 8001f44:	f04f 30ff 	mov.w	r0, #4294967295
 8001f48:	4770      	bx	lr

08001f4a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f4a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f4e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f50:	2000      	movs	r0, #0
 8001f52:	4770      	bx	lr

08001f54 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f54:	2001      	movs	r0, #1
 8001f56:	4770      	bx	lr

08001f58 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f58:	2000      	movs	r0, #0
 8001f5a:	4770      	bx	lr

08001f5c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f5c:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f5e:	4b0a      	ldr	r3, [pc, #40]	; (8001f88 <_sbrk+0x2c>)
 8001f60:	6819      	ldr	r1, [r3, #0]
{
 8001f62:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f64:	b909      	cbnz	r1, 8001f6a <_sbrk+0xe>
		heap_end = &end;
 8001f66:	4909      	ldr	r1, [pc, #36]	; (8001f8c <_sbrk+0x30>)
 8001f68:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f6a:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f6c:	4669      	mov	r1, sp
 8001f6e:	4402      	add	r2, r0
 8001f70:	428a      	cmp	r2, r1
 8001f72:	d906      	bls.n	8001f82 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f74:	f019 fb32 	bl	801b5dc <__errno>
 8001f78:	230c      	movs	r3, #12
 8001f7a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f7c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f80:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f82:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f84:	e7fc      	b.n	8001f80 <_sbrk+0x24>
 8001f86:	bf00      	nop
 8001f88:	2000123c 	.word	0x2000123c
 8001f8c:	2000a708 	.word	0x2000a708

08001f90 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f90:	4770      	bx	lr

08001f92 <_ZN23ApplicationFontProviderD0Ev>:
 8001f92:	b510      	push	{r4, lr}
 8001f94:	2104      	movs	r1, #4
 8001f96:	4604      	mov	r4, r0
 8001f98:	f019 fabf 	bl	801b51a <_ZdlPvj>
 8001f9c:	4620      	mov	r0, r4
 8001f9e:	bd10      	pop	{r4, pc}

08001fa0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001fa0:	2901      	cmp	r1, #1
{
 8001fa2:	b508      	push	{r3, lr}
    switch (typography)
 8001fa4:	d006      	beq.n	8001fb4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001fa6:	2902      	cmp	r1, #2
 8001fa8:	d008      	beq.n	8001fbc <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001faa:	b959      	cbnz	r1, 8001fc4 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fac:	f000 fc7e 	bl	80028ac <_ZN17TypedTextDatabase8getFontsEv>
 8001fb0:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001fb2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fb4:	f000 fc7a 	bl	80028ac <_ZN17TypedTextDatabase8getFontsEv>
 8001fb8:	6840      	ldr	r0, [r0, #4]
 8001fba:	e7fa      	b.n	8001fb2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fbc:	f000 fc76 	bl	80028ac <_ZN17TypedTextDatabase8getFontsEv>
 8001fc0:	6880      	ldr	r0, [r0, #8]
 8001fc2:	e7f6      	b.n	8001fb2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fc4:	2000      	movs	r0, #0
 8001fc6:	e7f4      	b.n	8001fb2 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fc8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fc8:	4800      	ldr	r0, [pc, #0]	; (8001fcc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fca:	4770      	bx	lr
 8001fcc:	0801cd64 	.word	0x0801cd64

08001fd0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fd0:	2001      	movs	r0, #1
 8001fd2:	4770      	bx	lr

08001fd4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fd4:	b513      	push	{r0, r1, r4, lr}
 8001fd6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001fd8:	b151      	cbz	r1, 8001ff0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fda:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001fdc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001fde:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fe2:	aa01      	add	r2, sp, #4
 8001fe4:	689c      	ldr	r4, [r3, #8]
 8001fe6:	f10d 0303 	add.w	r3, sp, #3
 8001fea:	47a0      	blx	r4
        return glyph;
    }
 8001fec:	b002      	add	sp, #8
 8001fee:	bd10      	pop	{r4, pc}
            return 0;
 8001ff0:	4608      	mov	r0, r1
 8001ff2:	e7fb      	b.n	8001fec <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001ff4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001ff4:	8940      	ldrh	r0, [r0, #10]
 8001ff6:	4770      	bx	lr

08001ff8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001ff8:	8980      	ldrh	r0, [r0, #12]
 8001ffa:	4770      	bx	lr

08001ffc <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001ffc:	8880      	ldrh	r0, [r0, #4]
 8001ffe:	4770      	bx	lr

08002000 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002000:	7983      	ldrb	r3, [r0, #6]
 8002002:	8880      	ldrh	r0, [r0, #4]
 8002004:	4418      	add	r0, r3
    }
 8002006:	b280      	uxth	r0, r0
 8002008:	4770      	bx	lr

0800200a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800200a:	79c0      	ldrb	r0, [r0, #7]
    }
 800200c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002010:	4770      	bx	lr

08002012 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002012:	79c0      	ldrb	r0, [r0, #7]
    }
 8002014:	09c0      	lsrs	r0, r0, #7
 8002016:	4770      	bx	lr

08002018 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002018:	4770      	bx	lr

0800201a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800201a:	b510      	push	{r4, lr}
    }
 800201c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800201e:	4604      	mov	r4, r0
    }
 8002020:	f019 fa7b 	bl	801b51a <_ZdlPvj>
 8002024:	4620      	mov	r0, r4
 8002026:	bd10      	pop	{r4, pc}

08002028 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002028:	4770      	bx	lr

0800202a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800202a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800202e:	6808      	ldr	r0, [r1, #0]
 8002030:	6849      	ldr	r1, [r1, #4]
 8002032:	c303      	stmia	r3!, {r0, r1}
    }
 8002034:	4770      	bx	lr

08002036 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002036:	4770      	bx	lr

08002038 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002038:	4770      	bx	lr

0800203a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800203a:	6041      	str	r1, [r0, #4]
    }
 800203c:	4770      	bx	lr

0800203e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002040:	2301      	movs	r3, #1
 8002042:	7203      	strb	r3, [r0, #8]
    }
 8002044:	4770      	bx	lr

08002046 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002046:	4770      	bx	lr

08002048 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002048:	4770      	bx	lr

0800204a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800204a:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800204c:	68c2      	ldr	r2, [r0, #12]
 800204e:	6841      	ldr	r1, [r0, #4]
 8002050:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002052:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002054:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002058:	07d2      	lsls	r2, r2, #31
 800205a:	bf48      	it	mi
 800205c:	590a      	ldrmi	r2, [r1, r4]
 800205e:	689b      	ldr	r3, [r3, #8]
    }
 8002060:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002064:	bf48      	it	mi
 8002066:	58d3      	ldrmi	r3, [r2, r3]
 8002068:	4718      	bx	r3

0800206a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800206a:	6843      	ldr	r3, [r0, #4]
 800206c:	b12b      	cbz	r3, 800207a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800206e:	6883      	ldr	r3, [r0, #8]
 8002070:	b92b      	cbnz	r3, 800207e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002072:	68c0      	ldr	r0, [r0, #12]
 8002074:	f000 0001 	and.w	r0, r0, #1
 8002078:	4770      	bx	lr
 800207a:	4618      	mov	r0, r3
 800207c:	4770      	bx	lr
 800207e:	2001      	movs	r0, #1
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002082:	b510      	push	{r4, lr}
 8002084:	210c      	movs	r1, #12
 8002086:	4604      	mov	r4, r0
 8002088:	f019 fa47 	bl	801b51a <_ZdlPvj>
 800208c:	4620      	mov	r0, r4
 800208e:	bd10      	pop	{r4, pc}

08002090 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002090:	b510      	push	{r4, lr}
 8002092:	2110      	movs	r1, #16
 8002094:	4604      	mov	r4, r0
 8002096:	f019 fa40 	bl	801b51a <_ZdlPvj>
 800209a:	4620      	mov	r0, r4
 800209c:	bd10      	pop	{r4, pc}

0800209e <_ZN23FrontendApplicationBaseD0Ev>:
 800209e:	b510      	push	{r4, lr}
 80020a0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80020a4:	4604      	mov	r4, r0
 80020a6:	f019 fa38 	bl	801b51a <_ZdlPvj>
 80020aa:	4620      	mov	r0, r4
 80020ac:	bd10      	pop	{r4, pc}

080020ae <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80020ae:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80020b0:	f00a fa64 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80020b4:	6803      	ldr	r3, [r0, #0]
    }
 80020b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80020ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020bc:	4718      	bx	r3

080020be <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80020be:	b510      	push	{r4, lr}
 80020c0:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80020c2:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80020c6:	b158      	cbz	r0, 80020e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80020c8:	6803      	ldr	r3, [r0, #0]
 80020ca:	68db      	ldr	r3, [r3, #12]
 80020cc:	4798      	blx	r3
 80020ce:	b138      	cbz	r0, 80020e0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80020d0:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80020d4:	6803      	ldr	r3, [r0, #0]
 80020d6:	689b      	ldr	r3, [r3, #8]
 80020d8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80020da:	2300      	movs	r3, #0
 80020dc:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80020e0:	bd10      	pop	{r4, pc}
	...

080020e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80020e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020e6:	4604      	mov	r4, r0
 80020e8:	4617      	mov	r7, r2
 80020ea:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80020ec:	f00a faae 	bl	800c64c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80020f0:	4b10      	ldr	r3, [pc, #64]	; (8002134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80020f2:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80020f4:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80020f8:	4e0f      	ldr	r6, [pc, #60]	; (8002138 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80020fa:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80020fc:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002100:	4b0e      	ldr	r3, [pc, #56]	; (800213c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002102:	6830      	ldr	r0, [r6, #0]
 8002104:	6023      	str	r3, [r4, #0]
 8002106:	4b0e      	ldr	r3, [pc, #56]	; (8002140 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002108:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800210c:	6803      	ldr	r3, [r0, #0]
 800210e:	4629      	mov	r1, r5
 8002110:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002112:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002116:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002118:	4628      	mov	r0, r5
 800211a:	f000 fb7b 	bl	8002814 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800211e:	6833      	ldr	r3, [r6, #0]
 8002120:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002124:	b10a      	cbz	r2, 800212a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002126:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002128:	b900      	cbnz	r0, 800212c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800212a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800212c:	f012 f8f9 	bl	8014322 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002130:	4620      	mov	r0, r4
 8002132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002134:	2000a1e4 	.word	0x2000a1e4
 8002138:	2000a198 	.word	0x2000a198
 800213c:	0801d0c8 	.word	0x0801d0c8
 8002140:	0801d0b0 	.word	0x0801d0b0

08002144 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002144:	4b06      	ldr	r3, [pc, #24]	; (8002160 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002146:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800214a:	2300      	movs	r3, #0
 800214c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002150:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002154:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002158:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800215c:	4770      	bx	lr
 800215e:	bf00      	nop
 8002160:	080022a5 	.word	0x080022a5

08002164 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002164:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002168:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800216a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800216c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002170:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002172:	6803      	ldr	r3, [r0, #0]
 8002174:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002176:	4688      	mov	r8, r1
 8002178:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800217a:	4798      	blx	r3
 800217c:	f5b0 7fec 	cmp.w	r0, #472	; 0x1d8
 8002180:	d205      	bcs.n	800218e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8002182:	4b42      	ldr	r3, [pc, #264]	; (800228c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002184:	4a42      	ldr	r2, [pc, #264]	; (8002290 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002186:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002188:	4842      	ldr	r0, [pc, #264]	; (8002294 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800218a:	f019 f9f5 	bl	801b578 <__assert_func>
 800218e:	6860      	ldr	r0, [r4, #4]
 8002190:	6803      	ldr	r3, [r0, #0]
 8002192:	6a1b      	ldr	r3, [r3, #32]
 8002194:	4798      	blx	r3
 8002196:	280f      	cmp	r0, #15
 8002198:	d803      	bhi.n	80021a2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 800219a:	4b3f      	ldr	r3, [pc, #252]	; (8002298 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800219c:	4a3c      	ldr	r2, [pc, #240]	; (8002290 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800219e:	21a4      	movs	r1, #164	; 0xa4
 80021a0:	e7f2      	b.n	8002188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021a2:	68e0      	ldr	r0, [r4, #12]
 80021a4:	6803      	ldr	r3, [r0, #0]
 80021a6:	6a1b      	ldr	r3, [r3, #32]
 80021a8:	4798      	blx	r3
 80021aa:	280b      	cmp	r0, #11
 80021ac:	d803      	bhi.n	80021b6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80021ae:	4b3b      	ldr	r3, [pc, #236]	; (800229c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80021b0:	4a37      	ldr	r2, [pc, #220]	; (8002290 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80021b2:	21a5      	movs	r1, #165	; 0xa5
 80021b4:	e7e8      	b.n	8002188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80021b6:	f00a f9e1 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80021ba:	f00a fa2d 	bl	800c618 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021be:	f8d9 0000 	ldr.w	r0, [r9]
 80021c2:	b110      	cbz	r0, 80021ca <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80021c4:	6803      	ldr	r3, [r0, #0]
 80021c6:	68db      	ldr	r3, [r3, #12]
 80021c8:	4798      	blx	r3
    if (*currentTrans)
 80021ca:	f8d9 0000 	ldr.w	r0, [r9]
 80021ce:	b110      	cbz	r0, 80021d6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 80021d0:	6803      	ldr	r3, [r0, #0]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	4798      	blx	r3
    if (*currentScreen)
 80021d6:	6838      	ldr	r0, [r7, #0]
 80021d8:	b110      	cbz	r0, 80021e0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 80021da:	6803      	ldr	r3, [r0, #0]
 80021dc:	695b      	ldr	r3, [r3, #20]
 80021de:	4798      	blx	r3
    if (*currentPresenter)
 80021e0:	f8d8 0000 	ldr.w	r0, [r8]
 80021e4:	b110      	cbz	r0, 80021ec <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 80021e6:	6803      	ldr	r3, [r0, #0]
 80021e8:	685b      	ldr	r3, [r3, #4]
 80021ea:	4798      	blx	r3
    if (*currentScreen)
 80021ec:	6838      	ldr	r0, [r7, #0]
 80021ee:	b110      	cbz	r0, 80021f6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 80021f0:	6803      	ldr	r3, [r0, #0]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	4798      	blx	r3
    if (*currentPresenter)
 80021f6:	f8d8 0000 	ldr.w	r0, [r8]
 80021fa:	b110      	cbz	r0, 8002202 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 80021fc:	6803      	ldr	r3, [r0, #0]
 80021fe:	689b      	ldr	r3, [r3, #8]
 8002200:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002202:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002204:	6803      	ldr	r3, [r0, #0]
 8002206:	2100      	movs	r1, #0
 8002208:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800220a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800220c:	f04f 0b00 	mov.w	fp, #0
 8002210:	4b23      	ldr	r3, [pc, #140]	; (80022a0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002212:	6003      	str	r3, [r0, #0]
 8002214:	4605      	mov	r5, r0
 8002216:	f8c0 b004 	str.w	fp, [r0, #4]
 800221a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800221e:	68a0      	ldr	r0, [r4, #8]
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	4659      	mov	r1, fp
 8002224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002226:	4798      	blx	r3
 8002228:	4606      	mov	r6, r0
 800222a:	f000 fb9b 	bl	8002964 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800222e:	6860      	ldr	r0, [r4, #4]
 8002230:	6803      	ldr	r3, [r0, #0]
 8002232:	4659      	mov	r1, fp
 8002234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002236:	4798      	blx	r3
 8002238:	4631      	mov	r1, r6
 800223a:	4604      	mov	r4, r0
 800223c:	f000 fb78 	bl	8002930 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002240:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002244:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002248:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800224a:	b1e4      	cbz	r4, 8002286 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 800224c:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800224e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002252:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002254:	f8c4 a008 	str.w	sl, [r4, #8]
 8002258:	4630      	mov	r0, r6
 800225a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800225c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800225e:	4798      	blx	r3
    newPresenter->activate();
 8002260:	6823      	ldr	r3, [r4, #0]
 8002262:	4620      	mov	r0, r4
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002268:	4629      	mov	r1, r5
 800226a:	4630      	mov	r0, r6
 800226c:	f00b fe8b 	bl	800df86 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002270:	682b      	ldr	r3, [r5, #0]
 8002272:	4628      	mov	r0, r5
 8002274:	691b      	ldr	r3, [r3, #16]
 8002276:	4798      	blx	r3
    newTransition->invalidate();
 8002278:	682b      	ldr	r3, [r5, #0]
 800227a:	4628      	mov	r0, r5
 800227c:	695b      	ldr	r3, [r3, #20]
 800227e:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002280:	4620      	mov	r0, r4
 8002282:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002286:	4623      	mov	r3, r4
 8002288:	e7e1      	b.n	800224e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 800228a:	bf00      	nop
 800228c:	0801cd88 	.word	0x0801cd88
 8002290:	0801ce16 	.word	0x0801ce16
 8002294:	0801cf1a 	.word	0x0801cf1a
 8002298:	0801cf61 	.word	0x0801cf61
 800229c:	0801d004 	.word	0x0801d004
 80022a0:	0801d10c 	.word	0x0801d10c

080022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80022a4:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022a6:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80022aa:	9300      	str	r3, [sp, #0]
 80022ac:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80022b0:	4b04      	ldr	r3, [pc, #16]	; (80022c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80022b2:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80022b6:	4804      	ldr	r0, [pc, #16]	; (80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80022b8:	f7ff ff54 	bl	8002164 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80022bc:	b003      	add	sp, #12
 80022be:	f85d fb04 	ldr.w	pc, [sp], #4
 80022c2:	bf00      	nop
 80022c4:	2000a1d8 	.word	0x2000a1d8
 80022c8:	2000a1d4 	.word	0x2000a1d4

080022cc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80022cc:	6a00      	ldr	r0, [r0, #32]
 80022ce:	4770      	bx	lr

080022d0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80022d0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80022d2:	4770      	bx	lr

080022d4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80022d4:	4770      	bx	lr

080022d6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80022d6:	888b      	ldrh	r3, [r1, #4]
 80022d8:	6980      	ldr	r0, [r0, #24]
 80022da:	680a      	ldr	r2, [r1, #0]
 80022dc:	0adb      	lsrs	r3, r3, #11
 80022de:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80022e2:	4410      	add	r0, r2
 80022e4:	4770      	bx	lr

080022e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80022e6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80022e8:	b1c2      	cbz	r2, 800231c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80022ea:	7b13      	ldrb	r3, [r2, #12]
 80022ec:	b1b3      	cbz	r3, 800231c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80022ee:	7b54      	ldrb	r4, [r2, #13]
 80022f0:	7ad2      	ldrb	r2, [r2, #11]
 80022f2:	0224      	lsls	r4, r4, #8
 80022f4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022f8:	4314      	orrs	r4, r2
 80022fa:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80022fc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022fe:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002302:	8813      	ldrh	r3, [r2, #0]
 8002304:	428b      	cmp	r3, r1
 8002306:	d102      	bne.n	800230e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002308:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800230c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800230e:	d805      	bhi.n	800231c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002310:	3801      	subs	r0, #1
 8002312:	b280      	uxth	r0, r0
 8002314:	3204      	adds	r2, #4
 8002316:	2800      	cmp	r0, #0
 8002318:	d1f3      	bne.n	8002302 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800231a:	e7f7      	b.n	800230c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800231c:	2000      	movs	r0, #0
 800231e:	e7f5      	b.n	800230c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002320 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002320:	b510      	push	{r4, lr}
 8002322:	2128      	movs	r1, #40	; 0x28
 8002324:	4604      	mov	r4, r0
 8002326:	f019 f8f8 	bl	801b51a <_ZdlPvj>
 800232a:	4620      	mov	r0, r4
 800232c:	bd10      	pop	{r4, pc}
	...

08002330 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002330:	b530      	push	{r4, r5, lr}
 8002332:	b089      	sub	sp, #36	; 0x24
 8002334:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002336:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800233a:	9506      	str	r5, [sp, #24]
 800233c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002340:	9505      	str	r5, [sp, #20]
 8002342:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002346:	9504      	str	r5, [sp, #16]
 8002348:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800234c:	9503      	str	r5, [sp, #12]
 800234e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002352:	9502      	str	r5, [sp, #8]
 8002354:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002358:	9501      	str	r5, [sp, #4]
 800235a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800235e:	9500      	str	r5, [sp, #0]
 8002360:	f00b f98c 	bl	800d67c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002364:	4b06      	ldr	r3, [pc, #24]	; (8002380 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002366:	6023      	str	r3, [r4, #0]
 8002368:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800236a:	61a3      	str	r3, [r4, #24]
 800236c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800236e:	61e3      	str	r3, [r4, #28]
 8002370:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002372:	6223      	str	r3, [r4, #32]
 8002374:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002376:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002378:	4620      	mov	r0, r4
 800237a:	b009      	add	sp, #36	; 0x24
 800237c:	bd30      	pop	{r4, r5, pc}
 800237e:	bf00      	nop
 8002380:	0801d130 	.word	0x0801d130

08002384 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002384:	2000      	movs	r0, #0
 8002386:	4770      	bx	lr

08002388 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002388:	8081      	strh	r1, [r0, #4]
    }
 800238a:	4770      	bx	lr

0800238c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800238c:	80c1      	strh	r1, [r0, #6]
    }
 800238e:	4770      	bx	lr

08002390 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002390:	8101      	strh	r1, [r0, #8]
    }
 8002392:	4770      	bx	lr

08002394 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002394:	8141      	strh	r1, [r0, #10]
    }
 8002396:	4770      	bx	lr

08002398 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002398:	4770      	bx	lr

0800239a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800239a:	4770      	bx	lr

0800239c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800239c:	4770      	bx	lr

0800239e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800239e:	4770      	bx	lr

080023a0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80023a0:	4770      	bx	lr

080023a2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80023a2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80023a4:	88c4      	ldrh	r4, [r0, #6]
 80023a6:	6803      	ldr	r3, [r0, #0]
 80023a8:	1b12      	subs	r2, r2, r4
 80023aa:	8884      	ldrh	r4, [r0, #4]
 80023ac:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80023ae:	1b09      	subs	r1, r1, r4
 80023b0:	b212      	sxth	r2, r2
    }
 80023b2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80023b6:	b209      	sxth	r1, r1
 80023b8:	4718      	bx	r3

080023ba <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80023ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023be:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80023c0:	f04f 33ff 	mov.w	r3, #4294967295
 80023c4:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80023c6:	6813      	ldr	r3, [r2, #0]
 80023c8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80023ca:	6010      	str	r0, [r2, #0]
    }
 80023cc:	4770      	bx	lr

080023ce <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80023ce:	4770      	bx	lr

080023d0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80023d0:	4770      	bx	lr

080023d2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80023d2:	4770      	bx	lr

080023d4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80023d4:	4770      	bx	lr

080023d6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80023d6:	4770      	bx	lr

080023d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80023d8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023dc:	b11a      	cbz	r2, 80023e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80023de:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80023e2:	b102      	cbz	r2, 80023e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80023e4:	6018      	str	r0, [r3, #0]
        }
    }
 80023e6:	4770      	bx	lr

080023e8 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80023e8:	4770      	bx	lr

080023ea <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80023ea:	4770      	bx	lr

080023ec <_ZN15Screen1ViewBaseD0Ev>:
 80023ec:	b510      	push	{r4, lr}
 80023ee:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 80023f2:	4604      	mov	r4, r0
 80023f4:	f019 f891 	bl	801b51a <_ZdlPvj>
 80023f8:	4620      	mov	r0, r4
 80023fa:	bd10      	pop	{r4, pc}

080023fc <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80023fc:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80023fe:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002400:	4604      	mov	r4, r0
        setX(x);
 8002402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002404:	4615      	mov	r5, r2
        setX(x);
 8002406:	4798      	blx	r3
        setY(y);
 8002408:	6823      	ldr	r3, [r4, #0]
 800240a:	4629      	mov	r1, r5
 800240c:	4620      	mov	r0, r4
 800240e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002414:	4718      	bx	r3

08002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8002416:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 8002418:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 800241a:	4604      	mov	r4, r0
        setWidth(width);
 800241c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 800241e:	4615      	mov	r5, r2
        setWidth(width);
 8002420:	4798      	blx	r3
        setHeight(height);
 8002422:	6823      	ldr	r3, [r4, #0]
 8002424:	4629      	mov	r1, r5
 8002426:	4620      	mov	r0, r4
 8002428:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800242a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800242e:	4718      	bx	r3

08002430 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002430:	4a09      	ldr	r2, [pc, #36]	; (8002458 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002432:	6002      	str	r2, [r0, #0]
          visible(true)
 8002434:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002438:	2200      	movs	r2, #0
 800243a:	8481      	strh	r1, [r0, #36]	; 0x24
 800243c:	21ff      	movs	r1, #255	; 0xff
 800243e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002442:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002446:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800244a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800244e:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 8002452:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 8002454:	4770      	bx	lr
 8002456:	bf00      	nop
 8002458:	0801e528 	.word	0x0801e528

0800245c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 800245c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002460:	4604      	mov	r4, r0
 8002462:	b087      	sub	sp, #28
 8002464:	4627      	mov	r7, r4
        : presenter(0)
 8002466:	2500      	movs	r5, #0
 8002468:	f00b fc10 	bl	800dc8c <_ZN8touchgfx6ScreenC1Ev>
 800246c:	4b54      	ldr	r3, [pc, #336]	; (80025c0 <_ZN15Screen1ViewBaseC1Ev+0x164>)
 800246e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002470:	f847 3b40 	str.w	r3, [r7], #64
 8002474:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002478:	4638      	mov	r0, r7
 800247a:	f7ff ffd9 	bl	8002430 <_ZN8touchgfx3BoxC1Ev>
 800247e:	4640      	mov	r0, r8
 8002480:	f7ff ffd6 	bl	8002430 <_ZN8touchgfx3BoxC1Ev>
 8002484:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002488:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800248c:	4b4d      	ldr	r3, [pc, #308]	; (80025c4 <_ZN15Screen1ViewBaseC1Ev+0x168>)
 800248e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 8002492:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002496:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 800249a:	f8df a12c 	ldr.w	sl, [pc, #300]	; 80025c8 <_ZN15Screen1ViewBaseC1Ev+0x16c>
 800249e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 80024a2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80024a6:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(0), y(0), width(0), height(0)
 80024aa:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80024ae:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80024b2:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80024b6:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 80024ba:	f8c4 a0c0 	str.w	sl, [r4, #192]	; 0xc0
        : color(col)
 80024be:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80024c2:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 80024c6:	4630      	mov	r0, r6
 80024c8:	f006 fc8e 	bl	8008de8 <_ZN8touchgfx12TextProgressC1Ev>
        setXY(x, y);
 80024cc:	462a      	mov	r2, r5
 80024ce:	4629      	mov	r1, r5
 80024d0:	4638      	mov	r0, r7
 80024d2:	f7ff ff93 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80024d6:	f04f 4b7f 	mov.w	fp, #4278190080	; 0xff000000
        setWidthHeight(width, height);
 80024da:	4638      	mov	r0, r7
 80024dc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80024e0:	f44f 7148 	mov.w	r1, #800	; 0x320
 80024e4:	f7ff ff97 	bl	8002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 80024e8:	462a      	mov	r2, r5
 80024ea:	4629      	mov	r1, r5
 80024ec:	4640      	mov	r0, r8
 80024ee:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 80024f2:	f7ff ff83 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80024f6:	4640      	mov	r0, r8
 80024f8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80024fc:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002500:	f7ff ff89 	bl	8002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8002504:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8002508:	f04f 33ff 	mov.w	r3, #4294967295
 800250c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    textArea1.setXY(308, 183);
 8002510:	22b7      	movs	r2, #183	; 0xb7
 8002512:	4648      	mov	r0, r9
 8002514:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002518:	f7ff ff70 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 800251c:	a904      	add	r1, sp, #16
 800251e:	4648      	mov	r0, r9
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002520:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002524:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
 8002528:	f8cd a010 	str.w	sl, [sp, #16]
 800252c:	f8ad 5014 	strh.w	r5, [sp, #20]
 8002530:	f008 f9dd 	bl	800a8ee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textProgress1.setXY(308, 274);
 8002534:	4630      	mov	r0, r6
 8002536:	f44f 7289 	mov.w	r2, #274	; 0x112
 800253a:	f44f 719a 	mov.w	r1, #308	; 0x134
 800253e:	f7ff ff5d 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
    textProgress1.setProgressIndicatorPosition(0, 0, 84, 34);
 8002542:	2322      	movs	r3, #34	; 0x22
 8002544:	9300      	str	r3, [sp, #0]
 8002546:	462a      	mov	r2, r5
 8002548:	4629      	mov	r1, r5
 800254a:	4630      	mov	r0, r6
 800254c:	2354      	movs	r3, #84	; 0x54
 800254e:	f006 fc2d 	bl	8008dac <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>
    textProgress1.setRange(0, 100);
 8002552:	2264      	movs	r2, #100	; 0x64
 8002554:	462b      	mov	r3, r5
 8002556:	4629      	mov	r1, r5
 8002558:	4630      	mov	r0, r6
 800255a:	9500      	str	r5, [sp, #0]
 800255c:	f006 fd32 	bl	8008fc4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    textProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8002560:	4659      	mov	r1, fp
 8002562:	4630      	mov	r0, r6
 8002564:	f006 fbac 	bl	8008cc0 <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>
    textProgress1.setNumberOfDecimals(0);
 8002568:	4629      	mov	r1, r5
 800256a:	4630      	mov	r0, r6
 800256c:	f006 fbae 	bl	8008ccc <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>
 8002570:	2301      	movs	r3, #1
    textProgress1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8002572:	a904      	add	r1, sp, #16
 8002574:	4630      	mov	r0, r6
 8002576:	f8ad 3014 	strh.w	r3, [sp, #20]
 800257a:	f8cd a010 	str.w	sl, [sp, #16]
 800257e:	f006 fbc4 	bl	8008d0a <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>
    textProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_TEXT_PROGRESS_BG_SQUARE_ID));
 8002582:	a904      	add	r1, sp, #16
 8002584:	4630      	mov	r0, r6
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002586:	f8ad 5010 	strh.w	r5, [sp, #16]
 800258a:	f006 fddc 	bl	8009146 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    textProgress1.setValue(60);
 800258e:	4630      	mov	r0, r6
 8002590:	213c      	movs	r1, #60	; 0x3c
 8002592:	f006 fbc5 	bl	8008d20 <_ZN8touchgfx12TextProgress8setValueEi>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002596:	1d20      	adds	r0, r4, #4
 8002598:	4639      	mov	r1, r7
 800259a:	9003      	str	r0, [sp, #12]
 800259c:	f006 fed4 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80025a0:	9803      	ldr	r0, [sp, #12]
 80025a2:	4641      	mov	r1, r8
 80025a4:	f006 fed0 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80025a8:	9803      	ldr	r0, [sp, #12]
 80025aa:	4649      	mov	r1, r9
 80025ac:	f006 fecc 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80025b0:	9803      	ldr	r0, [sp, #12]
 80025b2:	4631      	mov	r1, r6
 80025b4:	f006 fec8 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80025b8:	4620      	mov	r0, r4
 80025ba:	b007      	add	sp, #28
 80025bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025c0:	0801d188 	.word	0x0801d188
 80025c4:	0801e480 	.word	0x0801e480
 80025c8:	0801cd80 	.word	0x0801cd80

080025cc <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025cc:	4770      	bx	lr
	...

080025d0 <_Z23getFont_verdana_10_4bppv>:
{
 80025d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025d2:	4d15      	ldr	r5, [pc, #84]	; (8002628 <_Z23getFont_verdana_10_4bppv+0x58>)
 80025d4:	782c      	ldrb	r4, [r5, #0]
 80025d6:	f3bf 8f5b 	dmb	ish
 80025da:	f014 0401 	ands.w	r4, r4, #1
{
 80025de:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025e0:	d11e      	bne.n	8002620 <_Z23getFont_verdana_10_4bppv+0x50>
 80025e2:	4628      	mov	r0, r5
 80025e4:	f018 ff9b 	bl	801b51e <__cxa_guard_acquire>
 80025e8:	b1d0      	cbz	r0, 8002620 <_Z23getFont_verdana_10_4bppv+0x50>
 80025ea:	233f      	movs	r3, #63	; 0x3f
 80025ec:	9307      	str	r3, [sp, #28]
 80025ee:	4b0f      	ldr	r3, [pc, #60]	; (800262c <_Z23getFont_verdana_10_4bppv+0x5c>)
 80025f0:	9306      	str	r3, [sp, #24]
 80025f2:	4b0f      	ldr	r3, [pc, #60]	; (8002630 <_Z23getFont_verdana_10_4bppv+0x60>)
 80025f4:	490f      	ldr	r1, [pc, #60]	; (8002634 <_Z23getFont_verdana_10_4bppv+0x64>)
 80025f6:	4810      	ldr	r0, [pc, #64]	; (8002638 <_Z23getFont_verdana_10_4bppv+0x68>)
 80025f8:	9408      	str	r4, [sp, #32]
 80025fa:	2201      	movs	r2, #1
 80025fc:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002600:	2304      	movs	r3, #4
 8002602:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002606:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800260a:	230a      	movs	r3, #10
 800260c:	9403      	str	r4, [sp, #12]
 800260e:	9400      	str	r4, [sp, #0]
 8002610:	f7ff fe8e 	bl	8002330 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002614:	4628      	mov	r0, r5
 8002616:	f018 ff8e 	bl	801b536 <__cxa_guard_release>
 800261a:	4808      	ldr	r0, [pc, #32]	; (800263c <_Z23getFont_verdana_10_4bppv+0x6c>)
 800261c:	f018 ffca 	bl	801b5b4 <atexit>
    return verdana_10_4bpp;
}
 8002620:	4805      	ldr	r0, [pc, #20]	; (8002638 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002622:	b00d      	add	sp, #52	; 0x34
 8002624:	bd30      	pop	{r4, r5, pc}
 8002626:	bf00      	nop
 8002628:	20001240 	.word	0x20001240
 800262c:	0801fda0 	.word	0x0801fda0
 8002630:	0801d1b4 	.word	0x0801d1b4
 8002634:	90001d60 	.word	0x90001d60
 8002638:	20001244 	.word	0x20001244
 800263c:	080025cd 	.word	0x080025cd

08002640 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 20, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002640:	4770      	bx	lr
	...

08002644 <_Z23getFont_verdana_20_4bppv>:
{
 8002644:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 20, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002646:	4d15      	ldr	r5, [pc, #84]	; (800269c <_Z23getFont_verdana_20_4bppv+0x58>)
 8002648:	782c      	ldrb	r4, [r5, #0]
 800264a:	f3bf 8f5b 	dmb	ish
 800264e:	f014 0401 	ands.w	r4, r4, #1
{
 8002652:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 20, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002654:	d11f      	bne.n	8002696 <_Z23getFont_verdana_20_4bppv+0x52>
 8002656:	4628      	mov	r0, r5
 8002658:	f018 ff61 	bl	801b51e <__cxa_guard_acquire>
 800265c:	b1d8      	cbz	r0, 8002696 <_Z23getFont_verdana_20_4bppv+0x52>
 800265e:	233f      	movs	r3, #63	; 0x3f
 8002660:	9307      	str	r3, [sp, #28]
 8002662:	4b0f      	ldr	r3, [pc, #60]	; (80026a0 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002664:	9306      	str	r3, [sp, #24]
 8002666:	4b0f      	ldr	r3, [pc, #60]	; (80026a4 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002668:	9305      	str	r3, [sp, #20]
 800266a:	2301      	movs	r3, #1
 800266c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002670:	9302      	str	r3, [sp, #8]
 8002672:	2304      	movs	r3, #4
 8002674:	e9cd 4300 	strd	r4, r3, [sp]
 8002678:	2314      	movs	r3, #20
 800267a:	490b      	ldr	r1, [pc, #44]	; (80026a8 <_Z23getFont_verdana_20_4bppv+0x64>)
 800267c:	480b      	ldr	r0, [pc, #44]	; (80026ac <_Z23getFont_verdana_20_4bppv+0x68>)
 800267e:	9408      	str	r4, [sp, #32]
 8002680:	461a      	mov	r2, r3
 8002682:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002686:	f7ff fe53 	bl	8002330 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800268a:	4628      	mov	r0, r5
 800268c:	f018 ff53 	bl	801b536 <__cxa_guard_release>
 8002690:	4807      	ldr	r0, [pc, #28]	; (80026b0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002692:	f018 ff8f 	bl	801b5b4 <atexit>
    return verdana_20_4bpp;
}
 8002696:	4805      	ldr	r0, [pc, #20]	; (80026ac <_Z23getFont_verdana_20_4bppv+0x68>)
 8002698:	b00d      	add	sp, #52	; 0x34
 800269a:	bd30      	pop	{r4, r5, pc}
 800269c:	2000126c 	.word	0x2000126c
 80026a0:	0801fda4 	.word	0x0801fda4
 80026a4:	0801d1b8 	.word	0x0801d1b8
 80026a8:	90001d70 	.word	0x90001d70
 80026ac:	20001270 	.word	0x20001270
 80026b0:	08002641 	.word	0x08002641

080026b4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026b4:	4770      	bx	lr
	...

080026b8 <_Z23getFont_verdana_40_4bppv>:
{
 80026b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026ba:	4d15      	ldr	r5, [pc, #84]	; (8002710 <_Z23getFont_verdana_40_4bppv+0x58>)
 80026bc:	782c      	ldrb	r4, [r5, #0]
 80026be:	f3bf 8f5b 	dmb	ish
 80026c2:	f014 0401 	ands.w	r4, r4, #1
{
 80026c6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026c8:	d11e      	bne.n	8002708 <_Z23getFont_verdana_40_4bppv+0x50>
 80026ca:	4628      	mov	r0, r5
 80026cc:	f018 ff27 	bl	801b51e <__cxa_guard_acquire>
 80026d0:	b1d0      	cbz	r0, 8002708 <_Z23getFont_verdana_40_4bppv+0x50>
 80026d2:	233f      	movs	r3, #63	; 0x3f
 80026d4:	9307      	str	r3, [sp, #28]
 80026d6:	4b0f      	ldr	r3, [pc, #60]	; (8002714 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80026d8:	9306      	str	r3, [sp, #24]
 80026da:	4b0f      	ldr	r3, [pc, #60]	; (8002718 <_Z23getFont_verdana_40_4bppv+0x60>)
 80026dc:	490f      	ldr	r1, [pc, #60]	; (800271c <_Z23getFont_verdana_40_4bppv+0x64>)
 80026de:	4810      	ldr	r0, [pc, #64]	; (8002720 <_Z23getFont_verdana_40_4bppv+0x68>)
 80026e0:	9408      	str	r4, [sp, #32]
 80026e2:	2201      	movs	r2, #1
 80026e4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80026e8:	2304      	movs	r3, #4
 80026ea:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026ee:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80026f2:	2328      	movs	r3, #40	; 0x28
 80026f4:	9403      	str	r4, [sp, #12]
 80026f6:	9400      	str	r4, [sp, #0]
 80026f8:	f7ff fe1a 	bl	8002330 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80026fc:	4628      	mov	r0, r5
 80026fe:	f018 ff1a 	bl	801b536 <__cxa_guard_release>
 8002702:	4808      	ldr	r0, [pc, #32]	; (8002724 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002704:	f018 ff56 	bl	801b5b4 <atexit>
    return verdana_40_4bpp;
}
 8002708:	4805      	ldr	r0, [pc, #20]	; (8002720 <_Z23getFont_verdana_40_4bppv+0x68>)
 800270a:	b00d      	add	sp, #52	; 0x34
 800270c:	bd30      	pop	{r4, r5, pc}
 800270e:	bf00      	nop
 8002710:	20001298 	.word	0x20001298
 8002714:	0801fdbc 	.word	0x0801fdbc
 8002718:	0801d1bc 	.word	0x0801d1bc
 800271c:	90001e88 	.word	0x90001e88
 8002720:	2000129c 	.word	0x2000129c
 8002724:	080026b5 	.word	0x080026b5

08002728 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002728:	2000      	movs	r0, #0
 800272a:	4770      	bx	lr

0800272c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800272c:	2000      	movs	r0, #0
 800272e:	4770      	bx	lr

08002730 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002730:	b40e      	push	{r1, r2, r3}
 8002732:	b503      	push	{r0, r1, lr}
 8002734:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002736:	2100      	movs	r1, #0
{
 8002738:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800273c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800273e:	f00a fdbb 	bl	800d2b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002742:	b002      	add	sp, #8
 8002744:	f85d eb04 	ldr.w	lr, [sp], #4
 8002748:	b003      	add	sp, #12
 800274a:	4770      	bx	lr

0800274c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800274c:	b40c      	push	{r2, r3}
 800274e:	b507      	push	{r0, r1, r2, lr}
 8002750:	ab04      	add	r3, sp, #16
 8002752:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002756:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002758:	f00a fdae 	bl	800d2b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800275c:	b003      	add	sp, #12
 800275e:	f85d eb04 	ldr.w	lr, [sp], #4
 8002762:	b002      	add	sp, #8
 8002764:	4770      	bx	lr
	...

08002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002768:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800276a:	b510      	push	{r4, lr}
 800276c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800276e:	b373      	cbz	r3, 80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002770:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002772:	b92b      	cbnz	r3, 8002780 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002774:	4b18      	ldr	r3, [pc, #96]	; (80027d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002776:	4a19      	ldr	r2, [pc, #100]	; (80027dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002778:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800277a:	4819      	ldr	r0, [pc, #100]	; (80027e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800277c:	f018 fefc 	bl	801b578 <__assert_func>
            return buffer[pos];
 8002780:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002782:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002786:	8b5b      	ldrh	r3, [r3, #26]
 8002788:	b30b      	cbz	r3, 80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800278a:	f00c f98d 	bl	800eaa8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800278e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002790:	2b01      	cmp	r3, #1
 8002792:	d803      	bhi.n	800279c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002794:	4b13      	ldr	r3, [pc, #76]	; (80027e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002796:	4a14      	ldr	r2, [pc, #80]	; (80027e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002798:	21c4      	movs	r1, #196	; 0xc4
 800279a:	e7ee      	b.n	800277a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800279c:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800279e:	1c53      	adds	r3, r2, #1
 80027a0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80027a2:	2b09      	cmp	r3, #9
 80027a4:	4619      	mov	r1, r3
 80027a6:	bf88      	it	hi
 80027a8:	f1a3 010a 	subhi.w	r1, r3, #10
 80027ac:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80027b0:	f640 103f 	movw	r0, #2367	; 0x93f
 80027b4:	8b49      	ldrh	r1, [r1, #26]
 80027b6:	4281      	cmp	r1, r0
 80027b8:	d109      	bne.n	80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80027ba:	2b0a      	cmp	r3, #10
 80027bc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80027c0:	bf28      	it	cs
 80027c2:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80027c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80027c8:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80027ca:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80027cc:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80027ce:	4620      	mov	r0, r4
}
 80027d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80027d4:	f00c b84c 	b.w	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80027d8:	0801d1c0 	.word	0x0801d1c0
 80027dc:	0801d1c9 	.word	0x0801d1c9
 80027e0:	0801d274 	.word	0x0801d274
 80027e4:	0801d2be 	.word	0x0801d2be
 80027e8:	0801d2cc 	.word	0x0801d2cc

080027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80027ec:	f00b bffa 	b.w	800e7e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080027f0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80027f0:	b510      	push	{r4, lr}
 80027f2:	b086      	sub	sp, #24
 80027f4:	ac02      	add	r4, sp, #8
 80027f6:	e884 0006 	stmia.w	r4, {r1, r2}
 80027fa:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80027fc:	ab0a      	add	r3, sp, #40	; 0x28
 80027fe:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002800:	9301      	str	r3, [sp, #4]
 8002802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002804:	9300      	str	r3, [sp, #0]
 8002806:	4621      	mov	r1, r4
 8002808:	9b08      	ldr	r3, [sp, #32]
 800280a:	f009 fa3a 	bl	800bc82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800280e:	b006      	add	sp, #24
 8002810:	bd10      	pop	{r4, pc}
	...

08002814 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002814:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002816:	bb18      	cbnz	r0, 8002860 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002818:	4b12      	ldr	r3, [pc, #72]	; (8002864 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800281a:	4813      	ldr	r0, [pc, #76]	; (8002868 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	4913      	ldr	r1, [pc, #76]	; (800286c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002820:	b1b3      	cbz	r3, 8002850 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002822:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002824:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002826:	441a      	add	r2, r3
 8002828:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800282a:	685a      	ldr	r2, [r3, #4]
 800282c:	441a      	add	r2, r3
 800282e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002830:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002832:	4b0f      	ldr	r3, [pc, #60]	; (8002870 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002834:	2200      	movs	r2, #0
 8002836:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002838:	f000 f838 	bl	80028ac <_ZN17TypedTextDatabase8getFontsEv>
 800283c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800283e:	f000 f833 	bl	80028a8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002842:	4b0c      	ldr	r3, [pc, #48]	; (8002874 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002844:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002846:	4b0c      	ldr	r3, [pc, #48]	; (8002878 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002848:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800284a:	4b0c      	ldr	r3, [pc, #48]	; (800287c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800284c:	8018      	strh	r0, [r3, #0]
    }
}
 800284e:	e007      	b.n	8002860 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002850:	4b0b      	ldr	r3, [pc, #44]	; (8002880 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002852:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002854:	4b0b      	ldr	r3, [pc, #44]	; (8002884 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002856:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002858:	4b0b      	ldr	r3, [pc, #44]	; (8002888 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800285a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800285c:	2c00      	cmp	r4, #0
 800285e:	d1e8      	bne.n	8002832 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002860:	bd38      	pop	{r3, r4, r5, pc}
 8002862:	bf00      	nop
 8002864:	200012c4 	.word	0x200012c4
 8002868:	200012c8 	.word	0x200012c8
 800286c:	200012cc 	.word	0x200012cc
 8002870:	200012d0 	.word	0x200012d0
 8002874:	2000a1e8 	.word	0x2000a1e8
 8002878:	2000a1f0 	.word	0x2000a1f0
 800287c:	2000a1ec 	.word	0x2000a1ec
 8002880:	90001ea0 	.word	0x90001ea0
 8002884:	90001e98 	.word	0x90001e98
 8002888:	90001ec0 	.word	0x90001ec0

0800288c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800288c:	4b04      	ldr	r3, [pc, #16]	; (80028a0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002894:	4b03      	ldr	r3, [pc, #12]	; (80028a4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002896:	681b      	ldr	r3, [r3, #0]
}
 8002898:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800289c:	4770      	bx	lr
 800289e:	bf00      	nop
 80028a0:	200012cc 	.word	0x200012cc
 80028a4:	200012c8 	.word	0x200012c8

080028a8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80028a8:	2002      	movs	r0, #2
 80028aa:	4770      	bx	lr

080028ac <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80028ac:	4800      	ldr	r0, [pc, #0]	; (80028b0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80028ae:	4770      	bx	lr
 80028b0:	200012d4 	.word	0x200012d4

080028b4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80028b4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80028b6:	f7ff fec5 	bl	8002644 <_Z23getFont_verdana_20_4bppv>
};
 80028ba:	4c04      	ldr	r4, [pc, #16]	; (80028cc <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80028bc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80028be:	f7ff fefb 	bl	80026b8 <_Z23getFont_verdana_40_4bppv>
};
 80028c2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80028c4:	f7ff fe84 	bl	80025d0 <_Z23getFont_verdana_10_4bppv>
};
 80028c8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80028ca:	bd10      	pop	{r4, pc}
 80028cc:	200012d4 	.word	0x200012d4

080028d0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80028d0:	4770      	bx	lr

080028d2 <_ZN19FrontendApplicationD0Ev>:
 80028d2:	b510      	push	{r4, lr}
 80028d4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80028d8:	4604      	mov	r4, r0
 80028da:	f018 fe1e 	bl	801b51a <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80028e2:	b510      	push	{r4, lr}
 80028e4:	4604      	mov	r4, r0
    {
        model.tick();
 80028e6:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80028ea:	f000 f812 	bl	8002912 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80028ee:	4620      	mov	r0, r4
    }
 80028f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80028f4:	f009 bd1a 	b.w	800c32c <_ZN8touchgfx11Application15handleTickEventEv>

080028f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80028f8:	b510      	push	{r4, lr}
 80028fa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80028fc:	f7ff fbf2 	bl	80020e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002900:	4b01      	ldr	r3, [pc, #4]	; (8002908 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002902:	6023      	str	r3, [r4, #0]
{

}
 8002904:	4620      	mov	r0, r4
 8002906:	bd10      	pop	{r4, pc}
 8002908:	0801d3a8 	.word	0x0801d3a8

0800290c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800290c:	2200      	movs	r2, #0
 800290e:	6002      	str	r2, [r0, #0]
{

}
 8002910:	4770      	bx	lr

08002912 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002912:	4770      	bx	lr

08002914 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002914:	4770      	bx	lr

08002916 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002916:	3804      	subs	r0, #4
 8002918:	4770      	bx	lr

0800291a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800291a:	4770      	bx	lr

0800291c <_ZN16Screen1PresenterD0Ev>:
 800291c:	b510      	push	{r4, lr}
 800291e:	2110      	movs	r1, #16
 8002920:	4604      	mov	r4, r0
 8002922:	f018 fdfa 	bl	801b51a <_ZdlPvj>
 8002926:	4620      	mov	r0, r4
 8002928:	bd10      	pop	{r4, pc}

0800292a <_ZThn4_N16Screen1PresenterD0Ev>:
 800292a:	f1a0 0004 	sub.w	r0, r0, #4
 800292e:	e7f5      	b.n	800291c <_ZN16Screen1PresenterD0Ev>

08002930 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002930:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002932:	2200      	movs	r2, #0
 8002934:	6082      	str	r2, [r0, #8]
    : view(v)
 8002936:	4a04      	ldr	r2, [pc, #16]	; (8002948 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002938:	60c1      	str	r1, [r0, #12]
 800293a:	f102 0408 	add.w	r4, r2, #8
 800293e:	3220      	adds	r2, #32
 8002940:	6004      	str	r4, [r0, #0]
 8002942:	6042      	str	r2, [r0, #4]
}
 8002944:	bd10      	pop	{r4, pc}
 8002946:	bf00      	nop
 8002948:	0801d3e4 	.word	0x0801d3e4

0800294c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800294c:	4770      	bx	lr

0800294e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800294e:	4770      	bx	lr

08002950 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002950:	f7ff bd4b 	b.w	80023ea <_ZN15Screen1ViewBase11setupScreenEv>

08002954 <_ZN11Screen1ViewD0Ev>:
 8002954:	b510      	push	{r4, lr}
 8002956:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 800295a:	4604      	mov	r4, r0
 800295c:	f018 fddd 	bl	801b51a <_ZdlPvj>
 8002960:	4620      	mov	r0, r4
 8002962:	bd10      	pop	{r4, pc}

08002964 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002964:	b510      	push	{r4, lr}
 8002966:	4604      	mov	r4, r0
 8002968:	f7ff fd78 	bl	800245c <_ZN15Screen1ViewBaseC1Ev>
 800296c:	4b01      	ldr	r3, [pc, #4]	; (8002974 <_ZN11Screen1ViewC1Ev+0x10>)
 800296e:	6023      	str	r3, [r4, #0]
}
 8002970:	4620      	mov	r0, r4
 8002972:	bd10      	pop	{r4, pc}
 8002974:	0801d414 	.word	0x0801d414

08002978 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002978:	4770      	bx	lr

0800297a <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800297a:	2000      	movs	r0, #0
 800297c:	4770      	bx	lr

0800297e <ft6x06_ReadID>:
{
 800297e:	b510      	push	{r4, lr}
 8002980:	4604      	mov	r4, r0
  TS_IO_Init();
 8002982:	f000 fb7d 	bl	8003080 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002986:	21a8      	movs	r1, #168	; 0xa8
 8002988:	b2e0      	uxtb	r0, r4
 800298a:	f000 fb93 	bl	80030b4 <TS_IO_Read>
}
 800298e:	b280      	uxth	r0, r0
 8002990:	bd10      	pop	{r4, pc}
	...

08002994 <ft6x06_TS_DetectTouch>:
{
 8002994:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002996:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002998:	2102      	movs	r1, #2
 800299a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800299c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80029a0:	f000 fb88 	bl	80030b4 <TS_IO_Read>
 80029a4:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80029a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80029ac:	f003 030f 	and.w	r3, r3, #15
 80029b0:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80029b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80029b8:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80029ba:	bf88      	it	hi
 80029bc:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80029c0:	4b04      	ldr	r3, [pc, #16]	; (80029d4 <ft6x06_TS_DetectTouch+0x40>)
 80029c2:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80029c6:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80029ca:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80029cc:	2200      	movs	r2, #0
 80029ce:	709a      	strb	r2, [r3, #2]
}
 80029d0:	b002      	add	sp, #8
 80029d2:	bd10      	pop	{r4, pc}
 80029d4:	200012e2 	.word	0x200012e2

080029d8 <ft6x06_TS_GetXY>:
{
 80029d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80029da:	4c15      	ldr	r4, [pc, #84]	; (8002a30 <ft6x06_TS_GetXY+0x58>)
{
 80029dc:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80029de:	78a3      	ldrb	r3, [r4, #2]
 80029e0:	7862      	ldrb	r2, [r4, #1]
 80029e2:	429a      	cmp	r2, r3
{
 80029e4:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80029e6:	d91f      	bls.n	8002a28 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 80029e8:	b303      	cbz	r3, 8002a2c <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 80029ea:	2b01      	cmp	r3, #1
 80029ec:	bf14      	ite	ne
 80029ee:	2100      	movne	r1, #0
 80029f0:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80029f2:	2304      	movs	r3, #4
 80029f4:	eb0d 0203 	add.w	r2, sp, r3
 80029f8:	b2c0      	uxtb	r0, r0
 80029fa:	f000 fb77 	bl	80030ec <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80029fe:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002a02:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002a06:	021b      	lsls	r3, r3, #8
 8002a08:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002a0c:	4313      	orrs	r3, r2
 8002a0e:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002a10:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002a14:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002a18:	021b      	lsls	r3, r3, #8
 8002a1a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002a1e:	4313      	orrs	r3, r2
 8002a20:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002a22:	78a3      	ldrb	r3, [r4, #2]
 8002a24:	3301      	adds	r3, #1
 8002a26:	70a3      	strb	r3, [r4, #2]
}
 8002a28:	b002      	add	sp, #8
 8002a2a:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002a2c:	2103      	movs	r1, #3
 8002a2e:	e7e0      	b.n	80029f2 <ft6x06_TS_GetXY+0x1a>
 8002a30:	200012e2 	.word	0x200012e2

08002a34 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002a34:	2201      	movs	r2, #1
 8002a36:	21a4      	movs	r1, #164	; 0xa4
 8002a38:	b2c0      	uxtb	r0, r0
 8002a3a:	f000 bb23 	b.w	8003084 <TS_IO_Write>

08002a3e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002a3e:	2200      	movs	r2, #0
 8002a40:	21a4      	movs	r1, #164	; 0xa4
 8002a42:	b2c0      	uxtb	r0, r0
 8002a44:	f000 bb1e 	b.w	8003084 <TS_IO_Write>

08002a48 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002a48:	f7ff bff9 	b.w	8002a3e <ft6x06_TS_DisableIT>

08002a4c <ft6x06_TS_ClearIT>:
 8002a4c:	4770      	bx	lr
	...

08002a50 <ft6x06_Init>:
{  
 8002a50:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002a52:	4b09      	ldr	r3, [pc, #36]	; (8002a78 <ft6x06_Init+0x28>)
 8002a54:	781a      	ldrb	r2, [r3, #0]
 8002a56:	4290      	cmp	r0, r2
 8002a58:	d00a      	beq.n	8002a70 <ft6x06_Init+0x20>
 8002a5a:	7859      	ldrb	r1, [r3, #1]
 8002a5c:	4288      	cmp	r0, r1
 8002a5e:	d007      	beq.n	8002a70 <ft6x06_Init+0x20>
 8002a60:	b10a      	cbz	r2, 8002a66 <ft6x06_Init+0x16>
 8002a62:	b929      	cbnz	r1, 8002a70 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002a64:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002a66:	5498      	strb	r0, [r3, r2]
}
 8002a68:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002a6c:	f000 bb08 	b.w	8003080 <TS_IO_Init>
}
 8002a70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002a74:	4770      	bx	lr
 8002a76:	bf00      	nop
 8002a78:	200012e0 	.word	0x200012e0

08002a7c <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002a7c:	b538      	push	{r3, r4, r5, lr}
 8002a7e:	4604      	mov	r4, r0
 8002a80:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002a82:	2000      	movs	r0, #0
 8002a84:	49cb      	ldr	r1, [pc, #812]	; (8002db4 <OTM8009A_Init+0x338>)
 8002a86:	f7fd ffc7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002a8a:	49cb      	ldr	r1, [pc, #812]	; (8002db8 <OTM8009A_Init+0x33c>)
 8002a8c:	2003      	movs	r0, #3
 8002a8e:	f7fd ffc3 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002a92:	49ca      	ldr	r1, [pc, #808]	; (8002dbc <OTM8009A_Init+0x340>)
 8002a94:	2000      	movs	r0, #0
 8002a96:	f7fd ffbf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002a9a:	49c9      	ldr	r1, [pc, #804]	; (8002dc0 <OTM8009A_Init+0x344>)
 8002a9c:	2002      	movs	r0, #2
 8002a9e:	f7fd ffbb 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002aa2:	49c6      	ldr	r1, [pc, #792]	; (8002dbc <OTM8009A_Init+0x340>)
 8002aa4:	2000      	movs	r0, #0
 8002aa6:	f7fd ffb7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002aaa:	49c6      	ldr	r1, [pc, #792]	; (8002dc4 <OTM8009A_Init+0x348>)
 8002aac:	2000      	movs	r0, #0
 8002aae:	f7fd ffb3 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002ab2:	200a      	movs	r0, #10
 8002ab4:	f000 fb30 	bl	8003118 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002ab8:	49c3      	ldr	r1, [pc, #780]	; (8002dc8 <OTM8009A_Init+0x34c>)
 8002aba:	2000      	movs	r0, #0
 8002abc:	f7fd ffac 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002ac0:	49c2      	ldr	r1, [pc, #776]	; (8002dcc <OTM8009A_Init+0x350>)
 8002ac2:	2000      	movs	r0, #0
 8002ac4:	f7fd ffa8 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002ac8:	200a      	movs	r0, #10
 8002aca:	f000 fb25 	bl	8003118 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002ace:	49c0      	ldr	r1, [pc, #768]	; (8002dd0 <OTM8009A_Init+0x354>)
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	f7fd ffa1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002ad6:	49bf      	ldr	r1, [pc, #764]	; (8002dd4 <OTM8009A_Init+0x358>)
 8002ad8:	2000      	movs	r0, #0
 8002ada:	f7fd ff9d 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002ade:	49be      	ldr	r1, [pc, #760]	; (8002dd8 <OTM8009A_Init+0x35c>)
 8002ae0:	2000      	movs	r0, #0
 8002ae2:	f7fd ff99 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002ae6:	49bd      	ldr	r1, [pc, #756]	; (8002ddc <OTM8009A_Init+0x360>)
 8002ae8:	2000      	movs	r0, #0
 8002aea:	f7fd ff95 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002aee:	49bc      	ldr	r1, [pc, #752]	; (8002de0 <OTM8009A_Init+0x364>)
 8002af0:	2000      	movs	r0, #0
 8002af2:	f7fd ff91 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002af6:	49bb      	ldr	r1, [pc, #748]	; (8002de4 <OTM8009A_Init+0x368>)
 8002af8:	2000      	movs	r0, #0
 8002afa:	f7fd ff8d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002afe:	49ad      	ldr	r1, [pc, #692]	; (8002db4 <OTM8009A_Init+0x338>)
 8002b00:	2000      	movs	r0, #0
 8002b02:	f7fd ff89 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002b06:	49b8      	ldr	r1, [pc, #736]	; (8002de8 <OTM8009A_Init+0x36c>)
 8002b08:	2000      	movs	r0, #0
 8002b0a:	f7fd ff85 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002b0e:	49b7      	ldr	r1, [pc, #732]	; (8002dec <OTM8009A_Init+0x370>)
 8002b10:	2000      	movs	r0, #0
 8002b12:	f7fd ff81 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002b16:	49b6      	ldr	r1, [pc, #728]	; (8002df0 <OTM8009A_Init+0x374>)
 8002b18:	2000      	movs	r0, #0
 8002b1a:	f7fd ff7d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002b1e:	49b5      	ldr	r1, [pc, #724]	; (8002df4 <OTM8009A_Init+0x378>)
 8002b20:	2000      	movs	r0, #0
 8002b22:	f7fd ff79 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002b26:	49b4      	ldr	r1, [pc, #720]	; (8002df8 <OTM8009A_Init+0x37c>)
 8002b28:	2000      	movs	r0, #0
 8002b2a:	f7fd ff75 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002b2e:	49b3      	ldr	r1, [pc, #716]	; (8002dfc <OTM8009A_Init+0x380>)
 8002b30:	2000      	movs	r0, #0
 8002b32:	f7fd ff71 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002b36:	49b2      	ldr	r1, [pc, #712]	; (8002e00 <OTM8009A_Init+0x384>)
 8002b38:	2000      	movs	r0, #0
 8002b3a:	f7fd ff6d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002b3e:	49b1      	ldr	r1, [pc, #708]	; (8002e04 <OTM8009A_Init+0x388>)
 8002b40:	2000      	movs	r0, #0
 8002b42:	f7fd ff69 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002b46:	49a5      	ldr	r1, [pc, #660]	; (8002ddc <OTM8009A_Init+0x360>)
 8002b48:	2000      	movs	r0, #0
 8002b4a:	f7fd ff65 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b4e:	4999      	ldr	r1, [pc, #612]	; (8002db4 <OTM8009A_Init+0x338>)
 8002b50:	2000      	movs	r0, #0
 8002b52:	f7fd ff61 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002b56:	49ac      	ldr	r1, [pc, #688]	; (8002e08 <OTM8009A_Init+0x38c>)
 8002b58:	2002      	movs	r0, #2
 8002b5a:	f7fd ff5d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002b5e:	49ab      	ldr	r1, [pc, #684]	; (8002e0c <OTM8009A_Init+0x390>)
 8002b60:	2000      	movs	r0, #0
 8002b62:	f7fd ff59 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002b66:	49aa      	ldr	r1, [pc, #680]	; (8002e10 <OTM8009A_Init+0x394>)
 8002b68:	2000      	movs	r0, #0
 8002b6a:	f7fd ff55 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002b6e:	49a9      	ldr	r1, [pc, #676]	; (8002e14 <OTM8009A_Init+0x398>)
 8002b70:	2000      	movs	r0, #0
 8002b72:	f7fd ff51 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002b76:	49a8      	ldr	r1, [pc, #672]	; (8002e18 <OTM8009A_Init+0x39c>)
 8002b78:	2000      	movs	r0, #0
 8002b7a:	f7fd ff4d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002b7e:	49a7      	ldr	r1, [pc, #668]	; (8002e1c <OTM8009A_Init+0x3a0>)
 8002b80:	2000      	movs	r0, #0
 8002b82:	f7fd ff49 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002b86:	49a6      	ldr	r1, [pc, #664]	; (8002e20 <OTM8009A_Init+0x3a4>)
 8002b88:	2000      	movs	r0, #0
 8002b8a:	f7fd ff45 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002b8e:	4997      	ldr	r1, [pc, #604]	; (8002dec <OTM8009A_Init+0x370>)
 8002b90:	2000      	movs	r0, #0
 8002b92:	f7fd ff41 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002b96:	49a3      	ldr	r1, [pc, #652]	; (8002e24 <OTM8009A_Init+0x3a8>)
 8002b98:	2000      	movs	r0, #0
 8002b9a:	f7fd ff3d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002b9e:	4995      	ldr	r1, [pc, #596]	; (8002df4 <OTM8009A_Init+0x378>)
 8002ba0:	2000      	movs	r0, #0
 8002ba2:	f7fd ff39 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002ba6:	49a0      	ldr	r1, [pc, #640]	; (8002e28 <OTM8009A_Init+0x3ac>)
 8002ba8:	2000      	movs	r0, #0
 8002baa:	f7fd ff35 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002bae:	499f      	ldr	r1, [pc, #636]	; (8002e2c <OTM8009A_Init+0x3b0>)
 8002bb0:	2000      	movs	r0, #0
 8002bb2:	f7fd ff31 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002bb6:	499e      	ldr	r1, [pc, #632]	; (8002e30 <OTM8009A_Init+0x3b4>)
 8002bb8:	2002      	movs	r0, #2
 8002bba:	f7fd ff2d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002bbe:	497f      	ldr	r1, [pc, #508]	; (8002dbc <OTM8009A_Init+0x340>)
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	f7fd ff29 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002bc6:	499b      	ldr	r1, [pc, #620]	; (8002e34 <OTM8009A_Init+0x3b8>)
 8002bc8:	2006      	movs	r0, #6
 8002bca:	f7fd ff25 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002bce:	499a      	ldr	r1, [pc, #616]	; (8002e38 <OTM8009A_Init+0x3bc>)
 8002bd0:	2000      	movs	r0, #0
 8002bd2:	f7fd ff21 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002bd6:	4999      	ldr	r1, [pc, #612]	; (8002e3c <OTM8009A_Init+0x3c0>)
 8002bd8:	200e      	movs	r0, #14
 8002bda:	f7fd ff1d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002bde:	4998      	ldr	r1, [pc, #608]	; (8002e40 <OTM8009A_Init+0x3c4>)
 8002be0:	2000      	movs	r0, #0
 8002be2:	f7fd ff19 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002be6:	4997      	ldr	r1, [pc, #604]	; (8002e44 <OTM8009A_Init+0x3c8>)
 8002be8:	200e      	movs	r0, #14
 8002bea:	f7fd ff15 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002bee:	4996      	ldr	r1, [pc, #600]	; (8002e48 <OTM8009A_Init+0x3cc>)
 8002bf0:	2000      	movs	r0, #0
 8002bf2:	f7fd ff11 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002bf6:	4995      	ldr	r1, [pc, #596]	; (8002e4c <OTM8009A_Init+0x3d0>)
 8002bf8:	200a      	movs	r0, #10
 8002bfa:	f7fd ff0d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002bfe:	4994      	ldr	r1, [pc, #592]	; (8002e50 <OTM8009A_Init+0x3d4>)
 8002c00:	2000      	movs	r0, #0
 8002c02:	f7fd ff09 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002c06:	4993      	ldr	r1, [pc, #588]	; (8002e54 <OTM8009A_Init+0x3d8>)
 8002c08:	2000      	movs	r0, #0
 8002c0a:	f7fd ff05 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002c0e:	496b      	ldr	r1, [pc, #428]	; (8002dbc <OTM8009A_Init+0x340>)
 8002c10:	2000      	movs	r0, #0
 8002c12:	f7fd ff01 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002c16:	4990      	ldr	r1, [pc, #576]	; (8002e58 <OTM8009A_Init+0x3dc>)
 8002c18:	200a      	movs	r0, #10
 8002c1a:	f7fd fefd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002c1e:	498f      	ldr	r1, [pc, #572]	; (8002e5c <OTM8009A_Init+0x3e0>)
 8002c20:	2000      	movs	r0, #0
 8002c22:	f7fd fef9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002c26:	498e      	ldr	r1, [pc, #568]	; (8002e60 <OTM8009A_Init+0x3e4>)
 8002c28:	200f      	movs	r0, #15
 8002c2a:	f7fd fef5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002c2e:	4982      	ldr	r1, [pc, #520]	; (8002e38 <OTM8009A_Init+0x3bc>)
 8002c30:	2000      	movs	r0, #0
 8002c32:	f7fd fef1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002c36:	498b      	ldr	r1, [pc, #556]	; (8002e64 <OTM8009A_Init+0x3e8>)
 8002c38:	200f      	movs	r0, #15
 8002c3a:	f7fd feed 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002c3e:	4980      	ldr	r1, [pc, #512]	; (8002e40 <OTM8009A_Init+0x3c4>)
 8002c40:	2000      	movs	r0, #0
 8002c42:	f7fd fee9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002c46:	4988      	ldr	r1, [pc, #544]	; (8002e68 <OTM8009A_Init+0x3ec>)
 8002c48:	200a      	movs	r0, #10
 8002c4a:	f7fd fee5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002c4e:	497e      	ldr	r1, [pc, #504]	; (8002e48 <OTM8009A_Init+0x3cc>)
 8002c50:	2000      	movs	r0, #0
 8002c52:	f7fd fee1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002c56:	4985      	ldr	r1, [pc, #532]	; (8002e6c <OTM8009A_Init+0x3f0>)
 8002c58:	200f      	movs	r0, #15
 8002c5a:	f7fd fedd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002c5e:	497c      	ldr	r1, [pc, #496]	; (8002e50 <OTM8009A_Init+0x3d4>)
 8002c60:	2000      	movs	r0, #0
 8002c62:	f7fd fed9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002c66:	4982      	ldr	r1, [pc, #520]	; (8002e70 <OTM8009A_Init+0x3f4>)
 8002c68:	200f      	movs	r0, #15
 8002c6a:	f7fd fed5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002c6e:	4981      	ldr	r1, [pc, #516]	; (8002e74 <OTM8009A_Init+0x3f8>)
 8002c70:	2000      	movs	r0, #0
 8002c72:	f7fd fed1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002c76:	4980      	ldr	r1, [pc, #512]	; (8002e78 <OTM8009A_Init+0x3fc>)
 8002c78:	200a      	movs	r0, #10
 8002c7a:	f7fd fecd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002c7e:	497f      	ldr	r1, [pc, #508]	; (8002e7c <OTM8009A_Init+0x400>)
 8002c80:	2000      	movs	r0, #0
 8002c82:	f7fd fec9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002c86:	497e      	ldr	r1, [pc, #504]	; (8002e80 <OTM8009A_Init+0x404>)
 8002c88:	200a      	movs	r0, #10
 8002c8a:	f7fd fec5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002c8e:	494b      	ldr	r1, [pc, #300]	; (8002dbc <OTM8009A_Init+0x340>)
 8002c90:	2000      	movs	r0, #0
 8002c92:	f7fd fec1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002c96:	497b      	ldr	r1, [pc, #492]	; (8002e84 <OTM8009A_Init+0x408>)
 8002c98:	200a      	movs	r0, #10
 8002c9a:	f7fd febd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002c9e:	496f      	ldr	r1, [pc, #444]	; (8002e5c <OTM8009A_Init+0x3e0>)
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fd feb9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002ca6:	4978      	ldr	r1, [pc, #480]	; (8002e88 <OTM8009A_Init+0x40c>)
 8002ca8:	200f      	movs	r0, #15
 8002caa:	f7fd feb5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002cae:	4962      	ldr	r1, [pc, #392]	; (8002e38 <OTM8009A_Init+0x3bc>)
 8002cb0:	2000      	movs	r0, #0
 8002cb2:	f7fd feb1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002cb6:	4975      	ldr	r1, [pc, #468]	; (8002e8c <OTM8009A_Init+0x410>)
 8002cb8:	200f      	movs	r0, #15
 8002cba:	f7fd fead 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002cbe:	4960      	ldr	r1, [pc, #384]	; (8002e40 <OTM8009A_Init+0x3c4>)
 8002cc0:	2000      	movs	r0, #0
 8002cc2:	f7fd fea9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002cc6:	4972      	ldr	r1, [pc, #456]	; (8002e90 <OTM8009A_Init+0x414>)
 8002cc8:	200a      	movs	r0, #10
 8002cca:	f7fd fea5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002cce:	495e      	ldr	r1, [pc, #376]	; (8002e48 <OTM8009A_Init+0x3cc>)
 8002cd0:	2000      	movs	r0, #0
 8002cd2:	f7fd fea1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002cd6:	496f      	ldr	r1, [pc, #444]	; (8002e94 <OTM8009A_Init+0x418>)
 8002cd8:	200f      	movs	r0, #15
 8002cda:	f7fd fe9d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002cde:	495c      	ldr	r1, [pc, #368]	; (8002e50 <OTM8009A_Init+0x3d4>)
 8002ce0:	2000      	movs	r0, #0
 8002ce2:	f7fd fe99 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002ce6:	496c      	ldr	r1, [pc, #432]	; (8002e98 <OTM8009A_Init+0x41c>)
 8002ce8:	200f      	movs	r0, #15
 8002cea:	f7fd fe95 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002cee:	493f      	ldr	r1, [pc, #252]	; (8002dec <OTM8009A_Init+0x370>)
 8002cf0:	2000      	movs	r0, #0
 8002cf2:	f7fd fe91 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002cf6:	4969      	ldr	r1, [pc, #420]	; (8002e9c <OTM8009A_Init+0x420>)
 8002cf8:	2000      	movs	r0, #0
 8002cfa:	f7fd fe8d 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002cfe:	4968      	ldr	r1, [pc, #416]	; (8002ea0 <OTM8009A_Init+0x424>)
 8002d00:	2000      	movs	r0, #0
 8002d02:	f7fd fe89 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002d06:	4967      	ldr	r1, [pc, #412]	; (8002ea4 <OTM8009A_Init+0x428>)
 8002d08:	2000      	movs	r0, #0
 8002d0a:	f7fd fe85 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002d0e:	4966      	ldr	r1, [pc, #408]	; (8002ea8 <OTM8009A_Init+0x42c>)
 8002d10:	2000      	movs	r0, #0
 8002d12:	f7fd fe81 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002d16:	4965      	ldr	r1, [pc, #404]	; (8002eac <OTM8009A_Init+0x430>)
 8002d18:	2000      	movs	r0, #0
 8002d1a:	f7fd fe7d 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d1e:	4925      	ldr	r1, [pc, #148]	; (8002db4 <OTM8009A_Init+0x338>)
 8002d20:	2000      	movs	r0, #0
 8002d22:	f7fd fe79 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002d26:	4962      	ldr	r1, [pc, #392]	; (8002eb0 <OTM8009A_Init+0x434>)
 8002d28:	2003      	movs	r0, #3
 8002d2a:	f7fd fe75 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d2e:	4921      	ldr	r1, [pc, #132]	; (8002db4 <OTM8009A_Init+0x338>)
 8002d30:	2000      	movs	r0, #0
 8002d32:	f7fd fe71 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d36:	491f      	ldr	r1, [pc, #124]	; (8002db4 <OTM8009A_Init+0x338>)
 8002d38:	2000      	movs	r0, #0
 8002d3a:	f7fd fe6d 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002d3e:	495d      	ldr	r1, [pc, #372]	; (8002eb4 <OTM8009A_Init+0x438>)
 8002d40:	2010      	movs	r0, #16
 8002d42:	f7fd fe69 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d46:	491b      	ldr	r1, [pc, #108]	; (8002db4 <OTM8009A_Init+0x338>)
 8002d48:	2000      	movs	r0, #0
 8002d4a:	f7fd fe65 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002d4e:	495a      	ldr	r1, [pc, #360]	; (8002eb8 <OTM8009A_Init+0x43c>)
 8002d50:	2010      	movs	r0, #16
 8002d52:	f7fd fe61 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002d56:	2000      	movs	r0, #0
 8002d58:	4958      	ldr	r1, [pc, #352]	; (8002ebc <OTM8009A_Init+0x440>)
 8002d5a:	f7fd fe5d 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002d5e:	2078      	movs	r0, #120	; 0x78
 8002d60:	f000 f9da 	bl	8003118 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002d64:	2c00      	cmp	r4, #0
 8002d66:	f000 80c9 	beq.w	8002efc <OTM8009A_Init+0x480>
 8002d6a:	2c02      	cmp	r4, #2
 8002d6c:	d103      	bne.n	8002d76 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002d6e:	4954      	ldr	r1, [pc, #336]	; (8002ec0 <OTM8009A_Init+0x444>)
 8002d70:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002d72:	f7fd fe51 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002d76:	2d01      	cmp	r5, #1
 8002d78:	d10b      	bne.n	8002d92 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002d7a:	4952      	ldr	r1, [pc, #328]	; (8002ec4 <OTM8009A_Init+0x448>)
 8002d7c:	2000      	movs	r0, #0
 8002d7e:	f7fd fe4b 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002d82:	4951      	ldr	r1, [pc, #324]	; (8002ec8 <OTM8009A_Init+0x44c>)
 8002d84:	2004      	movs	r0, #4
 8002d86:	f7fd fe47 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002d8a:	4950      	ldr	r1, [pc, #320]	; (8002ecc <OTM8009A_Init+0x450>)
 8002d8c:	2004      	movs	r0, #4
 8002d8e:	f7fd fe43 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002d92:	494f      	ldr	r1, [pc, #316]	; (8002ed0 <OTM8009A_Init+0x454>)
 8002d94:	2000      	movs	r0, #0
 8002d96:	f7fd fe3f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002d9a:	494e      	ldr	r1, [pc, #312]	; (8002ed4 <OTM8009A_Init+0x458>)
 8002d9c:	2000      	movs	r0, #0
 8002d9e:	f7fd fe3b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002da2:	494d      	ldr	r1, [pc, #308]	; (8002ed8 <OTM8009A_Init+0x45c>)
 8002da4:	2000      	movs	r0, #0
 8002da6:	f7fd fe37 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8002daa:	494c      	ldr	r1, [pc, #304]	; (8002edc <OTM8009A_Init+0x460>)
 8002dac:	2000      	movs	r0, #0
 8002dae:	f7fd fe33 	bl	8000a18 <DSI_IO_WriteCmd>
 8002db2:	e095      	b.n	8002ee0 <OTM8009A_Init+0x464>
 8002db4:	0801d440 	.word	0x0801d440
 8002db8:	0801d4a6 	.word	0x0801d4a6
 8002dbc:	0801d456 	.word	0x0801d456
 8002dc0:	0801d52c 	.word	0x0801d52c
 8002dc4:	0801d46c 	.word	0x0801d46c
 8002dc8:	0801d482 	.word	0x0801d482
 8002dcc:	0801d498 	.word	0x0801d498
 8002dd0:	0801d49e 	.word	0x0801d49e
 8002dd4:	0801d4a0 	.word	0x0801d4a0
 8002dd8:	0801d4a2 	.word	0x0801d4a2
 8002ddc:	0801d4a4 	.word	0x0801d4a4
 8002de0:	0801d442 	.word	0x0801d442
 8002de4:	0801d444 	.word	0x0801d444
 8002de8:	0801d446 	.word	0x0801d446
 8002dec:	0801d448 	.word	0x0801d448
 8002df0:	0801d44a 	.word	0x0801d44a
 8002df4:	0801d44c 	.word	0x0801d44c
 8002df8:	0801d44e 	.word	0x0801d44e
 8002dfc:	0801d450 	.word	0x0801d450
 8002e00:	0801d452 	.word	0x0801d452
 8002e04:	0801d454 	.word	0x0801d454
 8002e08:	0801d5aa 	.word	0x0801d5aa
 8002e0c:	0801d458 	.word	0x0801d458
 8002e10:	0801d45a 	.word	0x0801d45a
 8002e14:	0801d45c 	.word	0x0801d45c
 8002e18:	0801d45e 	.word	0x0801d45e
 8002e1c:	0801d460 	.word	0x0801d460
 8002e20:	0801d462 	.word	0x0801d462
 8002e24:	0801d464 	.word	0x0801d464
 8002e28:	0801d466 	.word	0x0801d466
 8002e2c:	0801d468 	.word	0x0801d468
 8002e30:	0801d5ad 	.word	0x0801d5ad
 8002e34:	0801d5b0 	.word	0x0801d5b0
 8002e38:	0801d46a 	.word	0x0801d46a
 8002e3c:	0801d5b7 	.word	0x0801d5b7
 8002e40:	0801d46e 	.word	0x0801d46e
 8002e44:	0801d5c6 	.word	0x0801d5c6
 8002e48:	0801d470 	.word	0x0801d470
 8002e4c:	0801d4aa 	.word	0x0801d4aa
 8002e50:	0801d472 	.word	0x0801d472
 8002e54:	0801d490 	.word	0x0801d490
 8002e58:	0801d4b5 	.word	0x0801d4b5
 8002e5c:	0801d474 	.word	0x0801d474
 8002e60:	0801d4c0 	.word	0x0801d4c0
 8002e64:	0801d4d0 	.word	0x0801d4d0
 8002e68:	0801d4e0 	.word	0x0801d4e0
 8002e6c:	0801d4eb 	.word	0x0801d4eb
 8002e70:	0801d4fb 	.word	0x0801d4fb
 8002e74:	0801d476 	.word	0x0801d476
 8002e78:	0801d50b 	.word	0x0801d50b
 8002e7c:	0801d478 	.word	0x0801d478
 8002e80:	0801d516 	.word	0x0801d516
 8002e84:	0801d521 	.word	0x0801d521
 8002e88:	0801d52f 	.word	0x0801d52f
 8002e8c:	0801d53f 	.word	0x0801d53f
 8002e90:	0801d54f 	.word	0x0801d54f
 8002e94:	0801d55a 	.word	0x0801d55a
 8002e98:	0801d56a 	.word	0x0801d56a
 8002e9c:	0801d492 	.word	0x0801d492
 8002ea0:	0801d494 	.word	0x0801d494
 8002ea4:	0801d496 	.word	0x0801d496
 8002ea8:	0801d49a 	.word	0x0801d49a
 8002eac:	0801d49c 	.word	0x0801d49c
 8002eb0:	0801d57a 	.word	0x0801d57a
 8002eb4:	0801d588 	.word	0x0801d588
 8002eb8:	0801d599 	.word	0x0801d599
 8002ebc:	0801d47a 	.word	0x0801d47a
 8002ec0:	0801d47c 	.word	0x0801d47c
 8002ec4:	0801d480 	.word	0x0801d480
 8002ec8:	0801d57e 	.word	0x0801d57e
 8002ecc:	0801d583 	.word	0x0801d583
 8002ed0:	0801d484 	.word	0x0801d484
 8002ed4:	0801d486 	.word	0x0801d486
 8002ed8:	0801d488 	.word	0x0801d488
 8002edc:	0801d48a 	.word	0x0801d48a

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8002ee0:	4908      	ldr	r1, [pc, #32]	; (8002f04 <OTM8009A_Init+0x488>)
 8002ee2:	2000      	movs	r0, #0
 8002ee4:	f7fd fd98 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002ee8:	4907      	ldr	r1, [pc, #28]	; (8002f08 <OTM8009A_Init+0x48c>)
 8002eea:	2000      	movs	r0, #0
 8002eec:	f7fd fd94 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8002ef0:	4906      	ldr	r1, [pc, #24]	; (8002f0c <OTM8009A_Init+0x490>)
 8002ef2:	2000      	movs	r0, #0
 8002ef4:	f7fd fd90 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 8002ef8:	2000      	movs	r0, #0
 8002efa:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002efc:	4904      	ldr	r1, [pc, #16]	; (8002f10 <OTM8009A_Init+0x494>)
 8002efe:	4620      	mov	r0, r4
 8002f00:	e737      	b.n	8002d72 <OTM8009A_Init+0x2f6>
 8002f02:	bf00      	nop
 8002f04:	0801d48c 	.word	0x0801d48c
 8002f08:	0801d440 	.word	0x0801d440
 8002f0c:	0801d48e 	.word	0x0801d48e
 8002f10:	0801d47e 	.word	0x0801d47e

08002f14 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8002f14:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002f16:	4d2e      	ldr	r5, [pc, #184]	; (8002fd0 <I2C1_Init+0xbc>)
{
 8002f18:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002f1a:	4628      	mov	r0, r5
 8002f1c:	f002 f96a 	bl	80051f4 <HAL_I2C_GetState>
 8002f20:	4604      	mov	r4, r0
 8002f22:	2800      	cmp	r0, #0
 8002f24:	d151      	bne.n	8002fca <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002f26:	4a2b      	ldr	r2, [pc, #172]	; (8002fd4 <I2C1_Init+0xc0>)
 8002f28:	4b2b      	ldr	r3, [pc, #172]	; (8002fd8 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002f2a:	4e2c      	ldr	r6, [pc, #176]	; (8002fdc <I2C1_Init+0xc8>)
 8002f2c:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002f2e:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8002f32:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8002f36:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002f3a:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002f3e:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8002f42:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002f44:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8002f46:	f043 0302 	orr.w	r3, r3, #2
 8002f4a:	6333      	str	r3, [r6, #48]	; 0x30
 8002f4c:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8002f4e:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002f50:	f003 0302 	and.w	r3, r3, #2
 8002f54:	9301      	str	r3, [sp, #4]
 8002f56:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002f58:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002f5c:	2312      	movs	r3, #18
 8002f5e:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8002f62:	2002      	movs	r0, #2
 8002f64:	2304      	movs	r3, #4
 8002f66:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002f6a:	a903      	add	r1, sp, #12
 8002f6c:	481c      	ldr	r0, [pc, #112]	; (8002fe0 <I2C1_Init+0xcc>)
 8002f6e:	f001 fb6f 	bl	8004650 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002f72:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002f76:	481a      	ldr	r0, [pc, #104]	; (8002fe0 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002f78:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002f7a:	a903      	add	r1, sp, #12
 8002f7c:	f001 fb68 	bl	8004650 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8002f80:	9402      	str	r4, [sp, #8]
 8002f82:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002f84:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002f88:	6433      	str	r3, [r6, #64]	; 0x40
 8002f8a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002f8c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002f90:	9302      	str	r3, [sp, #8]
 8002f92:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8002f94:	6a33      	ldr	r3, [r6, #32]
 8002f96:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002f9a:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8002f9c:	6a33      	ldr	r3, [r6, #32]
 8002f9e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002fa2:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8002fa4:	4622      	mov	r2, r4
 8002fa6:	2105      	movs	r1, #5
 8002fa8:	201f      	movs	r0, #31
 8002faa:	f000 fd1d 	bl	80039e8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8002fae:	201f      	movs	r0, #31
 8002fb0:	f000 fd4c 	bl	8003a4c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8002fb4:	4622      	mov	r2, r4
 8002fb6:	2105      	movs	r1, #5
 8002fb8:	2020      	movs	r0, #32
 8002fba:	f000 fd15 	bl	80039e8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8002fbe:	2020      	movs	r0, #32
 8002fc0:	f000 fd44 	bl	8003a4c <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8002fc4:	4628      	mov	r0, r5
 8002fc6:	f001 febb 	bl	8004d40 <HAL_I2C_Init>
  }
}
 8002fca:	b008      	add	sp, #32
 8002fcc:	bd70      	pop	{r4, r5, r6, pc}
 8002fce:	bf00      	nop
 8002fd0:	200012e8 	.word	0x200012e8
 8002fd4:	40005400 	.word	0x40005400
 8002fd8:	00061a80 	.word	0x00061a80
 8002fdc:	40023800 	.word	0x40023800
 8002fe0:	40020400 	.word	0x40020400

08002fe4 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8002fe4:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 8002fe6:	4803      	ldr	r0, [pc, #12]	; (8002ff4 <I2C1_Error.isra.0+0x10>)
 8002fe8:	f001 ff52 	bl	8004e90 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8002fec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8002ff0:	f7ff bf90 	b.w	8002f14 <I2C1_Init>
 8002ff4:	200012e8 	.word	0x200012e8

08002ff8 <BSP_PB_Init>:
{
 8002ff8:	b510      	push	{r4, lr}
 8002ffa:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8002ffc:	4b19      	ldr	r3, [pc, #100]	; (8003064 <BSP_PB_Init+0x6c>)
 8002ffe:	2400      	movs	r4, #0
 8003000:	9400      	str	r4, [sp, #0]
 8003002:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003004:	f042 0201 	orr.w	r2, r2, #1
 8003008:	631a      	str	r2, [r3, #48]	; 0x30
 800300a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800300c:	f003 0301 	and.w	r3, r3, #1
 8003010:	9300      	str	r3, [sp, #0]
 8003012:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003014:	b969      	cbnz	r1, 8003032 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003016:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8003018:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800301c:	2302      	movs	r3, #2
 800301e:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003020:	4b11      	ldr	r3, [pc, #68]	; (8003068 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003022:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003024:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003028:	a901      	add	r1, sp, #4
 800302a:	f001 fb11 	bl	8004650 <HAL_GPIO_Init>
}
 800302e:	b006      	add	sp, #24
 8003030:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003032:	2901      	cmp	r1, #1
 8003034:	d1fb      	bne.n	800302e <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003036:	2302      	movs	r3, #2
 8003038:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800303a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800303e:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003040:	4b09      	ldr	r3, [pc, #36]	; (8003068 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003042:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003044:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003048:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800304a:	a901      	add	r1, sp, #4
 800304c:	f001 fb00 	bl	8004650 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003050:	4622      	mov	r2, r4
 8003052:	210f      	movs	r1, #15
 8003054:	2006      	movs	r0, #6
 8003056:	f000 fcc7 	bl	80039e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800305a:	2006      	movs	r0, #6
 800305c:	f000 fcf6 	bl	8003a4c <HAL_NVIC_EnableIRQ>
}
 8003060:	e7e5      	b.n	800302e <BSP_PB_Init+0x36>
 8003062:	bf00      	nop
 8003064:	40023800 	.word	0x40023800
 8003068:	20000048 	.word	0x20000048

0800306c <BSP_PB_GetState>:
{
 800306c:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800306e:	4b03      	ldr	r3, [pc, #12]	; (800307c <BSP_PB_GetState+0x10>)
 8003070:	2101      	movs	r1, #1
 8003072:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003076:	f001 fc73 	bl	8004960 <HAL_GPIO_ReadPin>
}
 800307a:	bd08      	pop	{r3, pc}
 800307c:	20000048 	.word	0x20000048

08003080 <TS_IO_Init>:
 8003080:	f7ff bf48 	b.w	8002f14 <I2C1_Init>

08003084 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003084:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003086:	2301      	movs	r3, #1
 8003088:	f88d 2017 	strb.w	r2, [sp, #23]
 800308c:	2264      	movs	r2, #100	; 0x64
 800308e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003092:	f10d 0217 	add.w	r2, sp, #23
 8003096:	9200      	str	r2, [sp, #0]
 8003098:	460a      	mov	r2, r1
 800309a:	4601      	mov	r1, r0
 800309c:	4804      	ldr	r0, [pc, #16]	; (80030b0 <TS_IO_Write+0x2c>)
 800309e:	f001 ff11 	bl	8004ec4 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80030a2:	b108      	cbz	r0, 80030a8 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 80030a4:	f7ff ff9e 	bl	8002fe4 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 80030a8:	b007      	add	sp, #28
 80030aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80030ae:	bf00      	nop
 80030b0:	200012e8 	.word	0x200012e8

080030b4 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80030b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80030b6:	2300      	movs	r3, #0
{
 80030b8:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80030ba:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80030be:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80030c2:	2301      	movs	r3, #1
 80030c4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80030c8:	f10d 0117 	add.w	r1, sp, #23
 80030cc:	9100      	str	r1, [sp, #0]
 80030ce:	4601      	mov	r1, r0
 80030d0:	4805      	ldr	r0, [pc, #20]	; (80030e8 <TS_IO_Read+0x34>)
 80030d2:	f001 ff87 	bl	8004fe4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80030d6:	b108      	cbz	r0, 80030dc <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 80030d8:	f7ff ff84 	bl	8002fe4 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 80030dc:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80030e0:	b007      	add	sp, #28
 80030e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80030e6:	bf00      	nop
 80030e8:	200012e8 	.word	0x200012e8

080030ec <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80030ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80030ee:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80030f2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80030f6:	9200      	str	r2, [sp, #0]
 80030f8:	2301      	movs	r3, #1
 80030fa:	460a      	mov	r2, r1
 80030fc:	4601      	mov	r1, r0
 80030fe:	4805      	ldr	r0, [pc, #20]	; (8003114 <TS_IO_ReadMultiple+0x28>)
 8003100:	f001 ff70 	bl	8004fe4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003104:	4604      	mov	r4, r0
 8003106:	b108      	cbz	r0, 800310c <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 8003108:	f7ff ff6c 	bl	8002fe4 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800310c:	b2a0      	uxth	r0, r4
 800310e:	b004      	add	sp, #16
 8003110:	bd10      	pop	{r4, pc}
 8003112:	bf00      	nop
 8003114:	200012e8 	.word	0x200012e8

08003118 <OTM8009A_IO_Delay>:
 8003118:	f000 bc40 	b.w	800399c <HAL_Delay>

0800311c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800311c:	b500      	push	{lr}
 800311e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003120:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003124:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003126:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800312a:	2205      	movs	r2, #5
 800312c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800312e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003130:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003132:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003134:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003138:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800313c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003140:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003142:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003144:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003146:	2210      	movs	r2, #16
 8003148:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800314a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800314e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003150:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003152:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003154:	a906      	add	r1, sp, #24
 8003156:	466a      	mov	r2, sp
 8003158:	4804      	ldr	r0, [pc, #16]	; (800316c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800315a:	f002 fbce 	bl	80058fa <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800315e:	3800      	subs	r0, #0
 8003160:	bf18      	it	ne
 8003162:	2001      	movne	r0, #1
 8003164:	b015      	add	sp, #84	; 0x54
 8003166:	f85d fb04 	ldr.w	pc, [sp], #4
 800316a:	bf00      	nop
 800316c:	2000a664 	.word	0x2000a664

08003170 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003170:	b500      	push	{lr}
 8003172:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003174:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003178:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800317a:	2306      	movs	r3, #6
 800317c:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800317e:	4817      	ldr	r0, [pc, #92]	; (80031dc <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003180:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003182:	f241 3288 	movw	r2, #5000	; 0x1388
 8003186:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003188:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800318c:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003190:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003192:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003194:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003196:	f002 fb6c 	bl	8005872 <HAL_QSPI_Command>
 800319a:	b9e0      	cbnz	r0, 80031d6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 800319c:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800319e:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80031a2:	2201      	movs	r2, #1
 80031a4:	2310      	movs	r3, #16
 80031a6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80031aa:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80031ae:	2305      	movs	r3, #5
 80031b0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80031b4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80031b8:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80031ba:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031bc:	4807      	ldr	r0, [pc, #28]	; (80031dc <QSPI_WriteEnable.constprop.0+0x6c>)
 80031be:	f241 3388 	movw	r3, #5000	; 0x1388
 80031c2:	466a      	mov	r2, sp
 80031c4:	a906      	add	r1, sp, #24
 80031c6:	f002 fb98 	bl	80058fa <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80031ca:	3800      	subs	r0, #0
 80031cc:	bf18      	it	ne
 80031ce:	2001      	movne	r0, #1
}
 80031d0:	b015      	add	sp, #84	; 0x54
 80031d2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80031d6:	2001      	movs	r0, #1
 80031d8:	e7fa      	b.n	80031d0 <QSPI_WriteEnable.constprop.0+0x60>
 80031da:	bf00      	nop
 80031dc:	2000a664 	.word	0x2000a664

080031e0 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80031e0:	b500      	push	{lr}
 80031e2:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80031e4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80031e8:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80031ea:	23eb      	movs	r3, #235	; 0xeb
 80031ec:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80031ee:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80031f2:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80031f4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80031f8:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80031fa:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80031fe:	2300      	movs	r3, #0
 8003200:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003204:	220a      	movs	r2, #10
 8003206:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003208:	a902      	add	r1, sp, #8
 800320a:	466a      	mov	r2, sp
 800320c:	4806      	ldr	r0, [pc, #24]	; (8003228 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800320e:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003210:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003214:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003216:	f002 fbc0 	bl	800599a <HAL_QSPI_MemoryMapped>
}
 800321a:	3800      	subs	r0, #0
 800321c:	bf18      	it	ne
 800321e:	2001      	movne	r0, #1
 8003220:	b011      	add	sp, #68	; 0x44
 8003222:	f85d fb04 	ldr.w	pc, [sp], #4
 8003226:	bf00      	nop
 8003228:	2000a664 	.word	0x2000a664

0800322c <BSP_QSPI_MspInit>:
{
 800322c:	b570      	push	{r4, r5, r6, lr}
 800322e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003230:	4b2c      	ldr	r3, [pc, #176]	; (80032e4 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003232:	482d      	ldr	r0, [pc, #180]	; (80032e8 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003234:	2400      	movs	r4, #0
 8003236:	9400      	str	r4, [sp, #0]
 8003238:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800323a:	f042 0202 	orr.w	r2, r2, #2
 800323e:	639a      	str	r2, [r3, #56]	; 0x38
 8003240:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003242:	f002 0202 	and.w	r2, r2, #2
 8003246:	9200      	str	r2, [sp, #0]
 8003248:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800324a:	699a      	ldr	r2, [r3, #24]
 800324c:	f042 0202 	orr.w	r2, r2, #2
 8003250:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003252:	699a      	ldr	r2, [r3, #24]
 8003254:	f022 0202 	bic.w	r2, r2, #2
 8003258:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800325a:	9401      	str	r4, [sp, #4]
 800325c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800325e:	f042 0202 	orr.w	r2, r2, #2
 8003262:	631a      	str	r2, [r3, #48]	; 0x30
 8003264:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003266:	f002 0202 	and.w	r2, r2, #2
 800326a:	9201      	str	r2, [sp, #4]
 800326c:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800326e:	9402      	str	r4, [sp, #8]
 8003270:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003272:	f042 0220 	orr.w	r2, r2, #32
 8003276:	631a      	str	r2, [r3, #48]	; 0x30
 8003278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800327a:	f003 0320 	and.w	r3, r3, #32
 800327e:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003280:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003282:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003284:	2302      	movs	r3, #2
 8003286:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800328a:	2101      	movs	r1, #1
 800328c:	2303      	movs	r3, #3
 800328e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003292:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003294:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003296:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003298:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800329a:	f001 f9d9 	bl	8004650 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800329e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80032a2:	a903      	add	r1, sp, #12
 80032a4:	4811      	ldr	r0, [pc, #68]	; (80032ec <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80032a6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80032a8:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80032aa:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80032ac:	f001 f9d0 	bl	8004650 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80032b0:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80032b4:	a903      	add	r1, sp, #12
 80032b6:	480d      	ldr	r0, [pc, #52]	; (80032ec <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80032b8:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80032ba:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80032bc:	f001 f9c8 	bl	8004650 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80032c0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80032c2:	a903      	add	r1, sp, #12
 80032c4:	4809      	ldr	r0, [pc, #36]	; (80032ec <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80032c6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80032c8:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80032ca:	f001 f9c1 	bl	8004650 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80032ce:	4622      	mov	r2, r4
 80032d0:	210f      	movs	r1, #15
 80032d2:	205b      	movs	r0, #91	; 0x5b
 80032d4:	f000 fb88 	bl	80039e8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80032d8:	205b      	movs	r0, #91	; 0x5b
 80032da:	f000 fbb7 	bl	8003a4c <HAL_NVIC_EnableIRQ>
}
 80032de:	b008      	add	sp, #32
 80032e0:	bd70      	pop	{r4, r5, r6, pc}
 80032e2:	bf00      	nop
 80032e4:	40023800 	.word	0x40023800
 80032e8:	40020400 	.word	0x40020400
 80032ec:	40021400 	.word	0x40021400

080032f0 <BSP_QSPI_Init>:
{
 80032f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80032f2:	4c48      	ldr	r4, [pc, #288]	; (8003414 <BSP_QSPI_Init+0x124>)
 80032f4:	4b48      	ldr	r3, [pc, #288]	; (8003418 <BSP_QSPI_Init+0x128>)
 80032f6:	6023      	str	r3, [r4, #0]
{
 80032f8:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80032fa:	4620      	mov	r0, r4
 80032fc:	f002 faa6 	bl	800584c <HAL_QSPI_DeInit>
 8003300:	4605      	mov	r5, r0
 8003302:	b110      	cbz	r0, 800330a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003304:	2001      	movs	r0, #1
}
 8003306:	b011      	add	sp, #68	; 0x44
 8003308:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800330a:	4601      	mov	r1, r0
 800330c:	4620      	mov	r0, r4
 800330e:	f7ff ff8d 	bl	800322c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003312:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003314:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003316:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800331a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800331c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003320:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003324:	fab3 f383 	clz	r3, r3
 8003328:	3b01      	subs	r3, #1
 800332a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800332c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800332e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003332:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003336:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800333a:	f002 fa33 	bl	80057a4 <HAL_QSPI_Init>
 800333e:	2800      	cmp	r0, #0
 8003340:	d1e0      	bne.n	8003304 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003342:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003346:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800334a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800334e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003350:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003352:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003354:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003356:	f241 3288 	movw	r2, #5000	; 0x1388
 800335a:	a902      	add	r1, sp, #8
 800335c:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800335e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003360:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003362:	f002 fa86 	bl	8005872 <HAL_QSPI_Command>
 8003366:	b108      	cbz	r0, 800336c <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003368:	2004      	movs	r0, #4
 800336a:	e7cc      	b.n	8003306 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800336c:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800336e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003372:	a902      	add	r1, sp, #8
 8003374:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003376:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003378:	f002 fa7b 	bl	8005872 <HAL_QSPI_Command>
 800337c:	2800      	cmp	r0, #0
 800337e:	d1f3      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003380:	f241 3088 	movw	r0, #5000	; 0x1388
 8003384:	f7ff feca 	bl	800311c <QSPI_AutoPollingMemReady.constprop.0>
 8003388:	2800      	cmp	r0, #0
 800338a:	d1ed      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800338c:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003390:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003394:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003398:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800339a:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800339c:	f241 3288 	movw	r2, #5000	; 0x1388
 80033a0:	a902      	add	r1, sp, #8
 80033a2:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80033a4:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80033a6:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80033a8:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033aa:	f002 fa62 	bl	8005872 <HAL_QSPI_Command>
 80033ae:	2800      	cmp	r0, #0
 80033b0:	d1da      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033b2:	f241 3288 	movw	r2, #5000	; 0x1388
 80033b6:	f10d 0107 	add.w	r1, sp, #7
 80033ba:	4620      	mov	r0, r4
 80033bc:	f002 fbcc 	bl	8005b58 <HAL_QSPI_Receive>
 80033c0:	2800      	cmp	r0, #0
 80033c2:	d1d1      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80033c4:	f7ff fed4 	bl	8003170 <QSPI_WriteEnable.constprop.0>
 80033c8:	2800      	cmp	r0, #0
 80033ca:	d1cd      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80033cc:	2381      	movs	r3, #129	; 0x81
 80033ce:	9302      	str	r3, [sp, #8]
 80033d0:	22f0      	movs	r2, #240	; 0xf0
 80033d2:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80033d6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80033da:	210a      	movs	r1, #10
 80033dc:	fab2 f282 	clz	r2, r2
 80033e0:	fa01 f202 	lsl.w	r2, r1, r2
 80033e4:	f003 030f 	and.w	r3, r3, #15
 80033e8:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033ea:	a902      	add	r1, sp, #8
 80033ec:	f241 3288 	movw	r2, #5000	; 0x1388
 80033f0:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80033f2:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033f6:	f002 fa3c 	bl	8005872 <HAL_QSPI_Command>
 80033fa:	2800      	cmp	r0, #0
 80033fc:	d1b4      	bne.n	8003368 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033fe:	f241 3288 	movw	r2, #5000	; 0x1388
 8003402:	f10d 0107 	add.w	r1, sp, #7
 8003406:	4620      	mov	r0, r4
 8003408:	f002 fb4a 	bl	8005aa0 <HAL_QSPI_Transmit>
 800340c:	2800      	cmp	r0, #0
 800340e:	f43f af7a 	beq.w	8003306 <BSP_QSPI_Init+0x16>
 8003412:	e7a9      	b.n	8003368 <BSP_QSPI_Init+0x78>
 8003414:	2000a664 	.word	0x2000a664
 8003418:	a0001000 	.word	0xa0001000

0800341c <BSP_QSPI_MspDeInit>:
{
 800341c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800341e:	205b      	movs	r0, #91	; 0x5b
 8003420:	f000 fb22 	bl	8003a68 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003424:	4814      	ldr	r0, [pc, #80]	; (8003478 <BSP_QSPI_MspDeInit+0x5c>)
 8003426:	2140      	movs	r1, #64	; 0x40
 8003428:	f001 f9f8 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800342c:	4813      	ldr	r0, [pc, #76]	; (800347c <BSP_QSPI_MspDeInit+0x60>)
 800342e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003432:	f001 f9f3 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8003436:	4811      	ldr	r0, [pc, #68]	; (800347c <BSP_QSPI_MspDeInit+0x60>)
 8003438:	f44f 7180 	mov.w	r1, #256	; 0x100
 800343c:	f001 f9ee 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003440:	480e      	ldr	r0, [pc, #56]	; (800347c <BSP_QSPI_MspDeInit+0x60>)
 8003442:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003446:	f001 f9e9 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800344a:	480c      	ldr	r0, [pc, #48]	; (800347c <BSP_QSPI_MspDeInit+0x60>)
 800344c:	2180      	movs	r1, #128	; 0x80
 800344e:	f001 f9e5 	bl	800481c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003452:	480a      	ldr	r0, [pc, #40]	; (800347c <BSP_QSPI_MspDeInit+0x60>)
 8003454:	2140      	movs	r1, #64	; 0x40
 8003456:	f001 f9e1 	bl	800481c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800345a:	4b09      	ldr	r3, [pc, #36]	; (8003480 <BSP_QSPI_MspDeInit+0x64>)
 800345c:	699a      	ldr	r2, [r3, #24]
 800345e:	f042 0202 	orr.w	r2, r2, #2
 8003462:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003464:	699a      	ldr	r2, [r3, #24]
 8003466:	f022 0202 	bic.w	r2, r2, #2
 800346a:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800346c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800346e:	f022 0202 	bic.w	r2, r2, #2
 8003472:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003474:	bd08      	pop	{r3, pc}
 8003476:	bf00      	nop
 8003478:	40020400 	.word	0x40020400
 800347c:	40021400 	.word	0x40021400
 8003480:	40023800 	.word	0x40023800

08003484 <BSP_QSPI_DeInit>:
{
 8003484:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8003486:	4d08      	ldr	r5, [pc, #32]	; (80034a8 <BSP_QSPI_DeInit+0x24>)
 8003488:	4b08      	ldr	r3, [pc, #32]	; (80034ac <BSP_QSPI_DeInit+0x28>)
 800348a:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800348c:	4628      	mov	r0, r5
 800348e:	f002 f9dd 	bl	800584c <HAL_QSPI_DeInit>
 8003492:	4604      	mov	r4, r0
 8003494:	b928      	cbnz	r0, 80034a2 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8003496:	4601      	mov	r1, r0
 8003498:	4628      	mov	r0, r5
 800349a:	f7ff ffbf 	bl	800341c <BSP_QSPI_MspDeInit>
}
 800349e:	4620      	mov	r0, r4
 80034a0:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80034a2:	2401      	movs	r4, #1
 80034a4:	e7fb      	b.n	800349e <BSP_QSPI_DeInit+0x1a>
 80034a6:	bf00      	nop
 80034a8:	2000a664 	.word	0x2000a664
 80034ac:	a0001000 	.word	0xa0001000

080034b0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80034b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80034b4:	4c21      	ldr	r4, [pc, #132]	; (800353c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034b6:	4d22      	ldr	r5, [pc, #136]	; (8003540 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80034b8:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80034ba:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80034be:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034c0:	4621      	mov	r1, r4
{
 80034c2:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80034c8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80034ca:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80034ce:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80034d2:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034d6:	f002 ffdf 	bl	8006498 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80034da:	4630      	mov	r0, r6
 80034dc:	f000 fa5e 	bl	800399c <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80034e0:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034e2:	4621      	mov	r1, r4
 80034e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80034e8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80034ea:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80034ee:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034f2:	f002 ffd1 	bl	8006498 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80034f6:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80034f8:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034fc:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80034fe:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003500:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003504:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003506:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800350a:	f002 ffc5 	bl	8006498 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800350e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003512:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003514:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003516:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800351a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800351c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800351e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003520:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003524:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003526:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003528:	f002 ffb6 	bl	8006498 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800352c:	4649      	mov	r1, r9
 800352e:	4628      	mov	r0, r5
}
 8003530:	b003      	add	sp, #12
 8003532:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003536:	f002 bfc6 	b.w	80064c6 <HAL_SDRAM_ProgramRefreshRate>
 800353a:	bf00      	nop
 800353c:	2000133c 	.word	0x2000133c
 8003540:	20001428 	.word	0x20001428

08003544 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003544:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003546:	4606      	mov	r6, r0
{
 8003548:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800354a:	2800      	cmp	r0, #0
 800354c:	f000 80bd 	beq.w	80036ca <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003550:	4b5f      	ldr	r3, [pc, #380]	; (80036d0 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003552:	4860      	ldr	r0, [pc, #384]	; (80036d4 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003554:	4c60      	ldr	r4, [pc, #384]	; (80036d8 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8003556:	2500      	movs	r5, #0
 8003558:	9500      	str	r5, [sp, #0]
 800355a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800355c:	f042 0201 	orr.w	r2, r2, #1
 8003560:	639a      	str	r2, [r3, #56]	; 0x38
 8003562:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003564:	f002 0201 	and.w	r2, r2, #1
 8003568:	9200      	str	r2, [sp, #0]
 800356a:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 800356c:	9501      	str	r5, [sp, #4]
 800356e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003570:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003574:	631a      	str	r2, [r3, #48]	; 0x30
 8003576:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003578:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800357c:	9201      	str	r2, [sp, #4]
 800357e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003580:	9502      	str	r5, [sp, #8]
 8003582:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003584:	f042 0204 	orr.w	r2, r2, #4
 8003588:	631a      	str	r2, [r3, #48]	; 0x30
 800358a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800358c:	f002 0204 	and.w	r2, r2, #4
 8003590:	9202      	str	r2, [sp, #8]
 8003592:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003594:	9503      	str	r5, [sp, #12]
 8003596:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003598:	f042 0208 	orr.w	r2, r2, #8
 800359c:	631a      	str	r2, [r3, #48]	; 0x30
 800359e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035a0:	f002 0208 	and.w	r2, r2, #8
 80035a4:	9203      	str	r2, [sp, #12]
 80035a6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80035a8:	9504      	str	r5, [sp, #16]
 80035aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035ac:	f042 0210 	orr.w	r2, r2, #16
 80035b0:	631a      	str	r2, [r3, #48]	; 0x30
 80035b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035b4:	f002 0210 	and.w	r2, r2, #16
 80035b8:	9204      	str	r2, [sp, #16]
 80035ba:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80035bc:	9505      	str	r5, [sp, #20]
 80035be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035c0:	f042 0220 	orr.w	r2, r2, #32
 80035c4:	631a      	str	r2, [r3, #48]	; 0x30
 80035c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035c8:	f002 0220 	and.w	r2, r2, #32
 80035cc:	9205      	str	r2, [sp, #20]
 80035ce:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80035d0:	9506      	str	r5, [sp, #24]
 80035d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035d4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80035d8:	631a      	str	r2, [r3, #48]	; 0x30
 80035da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035dc:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80035e0:	9206      	str	r2, [sp, #24]
 80035e2:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80035e4:	9507      	str	r5, [sp, #28]
 80035e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035e8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80035ec:	631a      	str	r2, [r3, #48]	; 0x30
 80035ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035f0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80035f4:	9207      	str	r2, [sp, #28]
 80035f6:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80035f8:	9508      	str	r5, [sp, #32]
 80035fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80035fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003600:	631a      	str	r2, [r3, #48]	; 0x30
 8003602:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003604:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003608:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800360a:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800360c:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800360e:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003610:	2301      	movs	r3, #1
 8003612:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003616:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003618:	220c      	movs	r2, #12
 800361a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800361c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800361e:	f001 f817 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003622:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003626:	482d      	ldr	r0, [pc, #180]	; (80036dc <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003628:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800362a:	a909      	add	r1, sp, #36	; 0x24
 800362c:	f001 f810 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003630:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003634:	482a      	ldr	r0, [pc, #168]	; (80036e0 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003636:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003638:	a909      	add	r1, sp, #36	; 0x24
 800363a:	f001 f809 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800363e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003642:	4828      	ldr	r0, [pc, #160]	; (80036e4 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003644:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003646:	a909      	add	r1, sp, #36	; 0x24
 8003648:	f001 f802 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800364c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003650:	4825      	ldr	r0, [pc, #148]	; (80036e8 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003652:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003654:	a909      	add	r1, sp, #36	; 0x24
 8003656:	f000 fffb 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800365a:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800365e:	4823      	ldr	r0, [pc, #140]	; (80036ec <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003660:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003662:	a909      	add	r1, sp, #36	; 0x24
 8003664:	f000 fff4 	bl	8004650 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003668:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800366c:	4820      	ldr	r0, [pc, #128]	; (80036f0 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800366e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003670:	a909      	add	r1, sp, #36	; 0x24
 8003672:	f000 ffed 	bl	8004650 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003676:	2280      	movs	r2, #128	; 0x80
 8003678:	f44f 7300 	mov.w	r3, #512	; 0x200
 800367c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003680:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003684:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003688:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800368c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003690:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003694:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003698:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800369c:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800369e:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80036a2:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80036a4:	4b13      	ldr	r3, [pc, #76]	; (80036f4 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80036a6:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80036a8:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80036aa:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80036ac:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80036ae:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80036b0:	f000 fa94 	bl	8003bdc <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80036b4:	4620      	mov	r0, r4
 80036b6:	f000 fa11 	bl	8003adc <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80036ba:	2038      	movs	r0, #56	; 0x38
 80036bc:	462a      	mov	r2, r5
 80036be:	2105      	movs	r1, #5
 80036c0:	f000 f992 	bl	80039e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80036c4:	2038      	movs	r0, #56	; 0x38
 80036c6:	f000 f9c1 	bl	8003a4c <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80036ca:	b00e      	add	sp, #56	; 0x38
 80036cc:	bd70      	pop	{r4, r5, r6, pc}
 80036ce:	bf00      	nop
 80036d0:	40023800 	.word	0x40023800
 80036d4:	40020800 	.word	0x40020800
 80036d8:	20001368 	.word	0x20001368
 80036dc:	40020c00 	.word	0x40020c00
 80036e0:	40021000 	.word	0x40021000
 80036e4:	40021400 	.word	0x40021400
 80036e8:	40021800 	.word	0x40021800
 80036ec:	40021c00 	.word	0x40021c00
 80036f0:	40022000 	.word	0x40022000
 80036f4:	40026410 	.word	0x40026410

080036f8 <BSP_SDRAM_Init>:
{
 80036f8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80036fa:	4c19      	ldr	r4, [pc, #100]	; (8003760 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80036fc:	4d19      	ldr	r5, [pc, #100]	; (8003764 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80036fe:	4b1a      	ldr	r3, [pc, #104]	; (8003768 <BSP_SDRAM_Init+0x70>)
 8003700:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003702:	2107      	movs	r1, #7
 8003704:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003706:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003708:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800370c:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003710:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003714:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003716:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003718:	2340      	movs	r3, #64	; 0x40
 800371a:	2220      	movs	r2, #32
 800371c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003720:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003722:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003726:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800372a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800372e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003732:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003736:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003738:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800373c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800373e:	f7ff ff01 	bl	8003544 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003742:	4629      	mov	r1, r5
 8003744:	4620      	mov	r0, r4
 8003746:	f002 fe79 	bl	800643c <HAL_SDRAM_Init>
 800374a:	4c08      	ldr	r4, [pc, #32]	; (800376c <BSP_SDRAM_Init+0x74>)
 800374c:	3800      	subs	r0, #0
 800374e:	bf18      	it	ne
 8003750:	2001      	movne	r0, #1
 8003752:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003754:	f240 5069 	movw	r0, #1385	; 0x569
 8003758:	f7ff feaa 	bl	80034b0 <BSP_SDRAM_Initialization_sequence>
}
 800375c:	7820      	ldrb	r0, [r4, #0]
 800375e:	bd38      	pop	{r3, r4, r5, pc}
 8003760:	20001428 	.word	0x20001428
 8003764:	2000134c 	.word	0x2000134c
 8003768:	a0000140 	.word	0xa0000140
 800376c:	2000004c 	.word	0x2000004c

08003770 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003770:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003772:	b148      	cbz	r0, 8003788 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003774:	2038      	movs	r0, #56	; 0x38
 8003776:	f000 f977 	bl	8003a68 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800377a:	4804      	ldr	r0, [pc, #16]	; (800378c <BSP_SDRAM_MspDeInit+0x1c>)
 800377c:	4b04      	ldr	r3, [pc, #16]	; (8003790 <BSP_SDRAM_MspDeInit+0x20>)
 800377e:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003780:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003784:	f000 ba2a 	b.w	8003bdc <HAL_DMA_DeInit>
}
 8003788:	bd08      	pop	{r3, pc}
 800378a:	bf00      	nop
 800378c:	200013c8 	.word	0x200013c8
 8003790:	40026410 	.word	0x40026410

08003794 <BSP_SDRAM_DeInit>:
{
 8003794:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003796:	4c07      	ldr	r4, [pc, #28]	; (80037b4 <BSP_SDRAM_DeInit+0x20>)
 8003798:	4b07      	ldr	r3, [pc, #28]	; (80037b8 <BSP_SDRAM_DeInit+0x24>)
 800379a:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800379c:	4620      	mov	r0, r4
 800379e:	f002 fe6d 	bl	800647c <HAL_SDRAM_DeInit>
 80037a2:	4d06      	ldr	r5, [pc, #24]	; (80037bc <BSP_SDRAM_DeInit+0x28>)
 80037a4:	4601      	mov	r1, r0
 80037a6:	b918      	cbnz	r0, 80037b0 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80037a8:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80037aa:	4620      	mov	r0, r4
 80037ac:	f7ff ffe0 	bl	8003770 <BSP_SDRAM_MspDeInit>
}
 80037b0:	7828      	ldrb	r0, [r5, #0]
 80037b2:	bd38      	pop	{r3, r4, r5, pc}
 80037b4:	20001428 	.word	0x20001428
 80037b8:	a0000140 	.word	0xa0000140
 80037bc:	2000004d 	.word	0x2000004d

080037c0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80037c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80037c4:	4d19      	ldr	r5, [pc, #100]	; (800382c <BSP_TS_Init+0x6c>)
 80037c6:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8003838 <BSP_TS_Init+0x78>
 80037ca:	682b      	ldr	r3, [r5, #0]
{
 80037cc:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80037ce:	f898 0000 	ldrb.w	r0, [r8]
{
 80037d2:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80037d4:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80037d6:	686b      	ldr	r3, [r5, #4]
 80037d8:	2054      	movs	r0, #84	; 0x54
 80037da:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80037dc:	b2c0      	uxtb	r0, r0
 80037de:	2811      	cmp	r0, #17
 80037e0:	4646      	mov	r6, r8
 80037e2:	46a9      	mov	r9, r5
 80037e4:	d00b      	beq.n	80037fe <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 80037e6:	686b      	ldr	r3, [r5, #4]
 80037e8:	2070      	movs	r0, #112	; 0x70
 80037ea:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80037ec:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80037ee:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80037f0:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80037f2:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80037f6:	d005      	beq.n	8003804 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 80037f8:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 80037fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 80037fe:	2354      	movs	r3, #84	; 0x54
 8003800:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8003804:	4b0a      	ldr	r3, [pc, #40]	; (8003830 <BSP_TS_Init+0x70>)
 8003806:	4d0b      	ldr	r5, [pc, #44]	; (8003834 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8003808:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800380a:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800380e:	42bc      	cmp	r4, r7
 8003810:	bf34      	ite	cc
 8003812:	2101      	movcc	r1, #1
 8003814:	210c      	movcs	r1, #12
 8003816:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003818:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800381c:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800381e:	682b      	ldr	r3, [r5, #0]
 8003820:	7830      	ldrb	r0, [r6, #0]
 8003822:	68db      	ldr	r3, [r3, #12]
 8003824:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003826:	2000      	movs	r0, #0
 8003828:	e7e7      	b.n	80037fa <BSP_TS_Init+0x3a>
 800382a:	bf00      	nop
 800382c:	20000020 	.word	0x20000020
 8003830:	20001474 	.word	0x20001474
 8003834:	20001470 	.word	0x20001470
 8003838:	2000145c 	.word	0x2000145c

0800383c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800383c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003840:	4c34      	ldr	r4, [pc, #208]	; (8003914 <BSP_TS_GetState+0xd8>)
 8003842:	4d35      	ldr	r5, [pc, #212]	; (8003918 <BSP_TS_GetState+0xdc>)
 8003844:	6823      	ldr	r3, [r4, #0]
{
 8003846:	b085      	sub	sp, #20
 8003848:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800384a:	691b      	ldr	r3, [r3, #16]
 800384c:	7828      	ldrb	r0, [r5, #0]
 800384e:	4798      	blx	r3
 8003850:	46a1      	mov	r9, r4
 8003852:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003854:	9501      	str	r5, [sp, #4]
 8003856:	b158      	cbz	r0, 8003870 <BSP_TS_GetState+0x34>
 8003858:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003924 <BSP_TS_GetState+0xe8>
 800385c:	4f2f      	ldr	r7, [pc, #188]	; (800391c <BSP_TS_GetState+0xe0>)
 800385e:	f106 0b02 	add.w	fp, r6, #2
 8003862:	ad03      	add	r5, sp, #12
 8003864:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003866:	f04f 0a00 	mov.w	sl, #0
 800386a:	7833      	ldrb	r3, [r6, #0]
 800386c:	4553      	cmp	r3, sl
 800386e:	d803      	bhi.n	8003878 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003870:	2000      	movs	r0, #0
 8003872:	b005      	add	sp, #20
 8003874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003878:	f8d9 3000 	ldr.w	r3, [r9]
 800387c:	9801      	ldr	r0, [sp, #4]
 800387e:	695b      	ldr	r3, [r3, #20]
 8003880:	7800      	ldrb	r0, [r0, #0]
 8003882:	9100      	str	r1, [sp, #0]
 8003884:	462a      	mov	r2, r5
 8003886:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003888:	4b25      	ldr	r3, [pc, #148]	; (8003920 <BSP_TS_GetState+0xe4>)
 800388a:	9900      	ldr	r1, [sp, #0]
 800388c:	781b      	ldrb	r3, [r3, #0]
 800388e:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003892:	bf1f      	itttt	ne
 8003894:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003896:	8828      	ldrhne	r0, [r5, #0]
 8003898:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800389a:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800389c:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800389e:	bf41      	itttt	mi
 80038a0:	880a      	ldrhmi	r2, [r1, #0]
 80038a2:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80038a6:	3203      	addmi	r2, #3
 80038a8:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80038aa:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80038ac:	bf48      	it	mi
 80038ae:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80038b0:	f8d8 2000 	ldr.w	r2, [r8]
 80038b4:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80038b8:	bf42      	ittt	mi
 80038ba:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80038be:	3301      	addmi	r3, #1
 80038c0:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80038c2:	b293      	uxth	r3, r2
 80038c4:	4290      	cmp	r0, r2
 80038c6:	bf8c      	ite	hi
 80038c8:	1ac3      	subhi	r3, r0, r3
 80038ca:	1a1b      	subls	r3, r3, r0
 80038cc:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80038ce:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80038d2:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80038d4:	683b      	ldr	r3, [r7, #0]
 80038d6:	b29c      	uxth	r4, r3
 80038d8:	429a      	cmp	r2, r3
 80038da:	bf88      	it	hi
 80038dc:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80038de:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80038e0:	bf98      	it	ls
 80038e2:	1aa4      	subls	r4, r4, r2
 80038e4:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80038e6:	441c      	add	r4, r3
 80038e8:	46c4      	mov	ip, r8
 80038ea:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 80038ec:	bfc8      	it	gt
 80038ee:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 80038f2:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 80038f6:	bfc8      	it	gt
 80038f8:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 80038fa:	46be      	mov	lr, r7
 80038fc:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8003900:	f8de 3000 	ldr.w	r3, [lr]
 8003904:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003908:	f108 0804 	add.w	r8, r8, #4
 800390c:	3704      	adds	r7, #4
 800390e:	f10a 0a01 	add.w	sl, sl, #1
 8003912:	e7aa      	b.n	800386a <BSP_TS_GetState+0x2e>
 8003914:	20001470 	.word	0x20001470
 8003918:	2000145c 	.word	0x2000145c
 800391c:	20001468 	.word	0x20001468
 8003920:	20001474 	.word	0x20001474
 8003924:	20001460 	.word	0x20001460

08003928 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003928:	4b05      	ldr	r3, [pc, #20]	; (8003940 <SystemInit+0x18>)
 800392a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800392e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003932:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003936:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800393a:	609a      	str	r2, [r3, #8]
#endif
}
 800393c:	4770      	bx	lr
 800393e:	bf00      	nop
 8003940:	e000ed00 	.word	0xe000ed00

08003944 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003944:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003946:	4b0b      	ldr	r3, [pc, #44]	; (8003974 <HAL_Init+0x30>)
 8003948:	681a      	ldr	r2, [r3, #0]
 800394a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800394e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003950:	681a      	ldr	r2, [r3, #0]
 8003952:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003956:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003958:	681a      	ldr	r2, [r3, #0]
 800395a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800395e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003960:	2003      	movs	r0, #3
 8003962:	f000 f82f 	bl	80039c4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003966:	2000      	movs	r0, #0
 8003968:	f7fe fa66 	bl	8001e38 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800396c:	f7fe f806 	bl	800197c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003970:	2000      	movs	r0, #0
 8003972:	bd08      	pop	{r3, pc}
 8003974:	40023c00 	.word	0x40023c00

08003978 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003978:	4a03      	ldr	r2, [pc, #12]	; (8003988 <HAL_IncTick+0x10>)
 800397a:	4b04      	ldr	r3, [pc, #16]	; (800398c <HAL_IncTick+0x14>)
 800397c:	6811      	ldr	r1, [r2, #0]
 800397e:	781b      	ldrb	r3, [r3, #0]
 8003980:	440b      	add	r3, r1
 8003982:	6013      	str	r3, [r2, #0]
}
 8003984:	4770      	bx	lr
 8003986:	bf00      	nop
 8003988:	2000a6b0 	.word	0x2000a6b0
 800398c:	20000054 	.word	0x20000054

08003990 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003990:	4b01      	ldr	r3, [pc, #4]	; (8003998 <HAL_GetTick+0x8>)
 8003992:	6818      	ldr	r0, [r3, #0]
}
 8003994:	4770      	bx	lr
 8003996:	bf00      	nop
 8003998:	2000a6b0 	.word	0x2000a6b0

0800399c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800399c:	b538      	push	{r3, r4, r5, lr}
 800399e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80039a0:	f7ff fff6 	bl	8003990 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80039a4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80039a6:	bf1c      	itt	ne
 80039a8:	4b05      	ldrne	r3, [pc, #20]	; (80039c0 <HAL_Delay+0x24>)
 80039aa:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80039ac:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80039ae:	bf18      	it	ne
 80039b0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80039b2:	f7ff ffed 	bl	8003990 <HAL_GetTick>
 80039b6:	1b43      	subs	r3, r0, r5
 80039b8:	42a3      	cmp	r3, r4
 80039ba:	d3fa      	bcc.n	80039b2 <HAL_Delay+0x16>
  {
  }
}
 80039bc:	bd38      	pop	{r3, r4, r5, pc}
 80039be:	bf00      	nop
 80039c0:	20000054 	.word	0x20000054

080039c4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80039c4:	4907      	ldr	r1, [pc, #28]	; (80039e4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80039c6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80039c8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80039cc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80039ce:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80039d0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80039d4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80039d6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80039d8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80039dc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80039e0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80039e2:	4770      	bx	lr
 80039e4:	e000ed00 	.word	0xe000ed00

080039e8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80039e8:	4b16      	ldr	r3, [pc, #88]	; (8003a44 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80039ea:	b530      	push	{r4, r5, lr}
 80039ec:	68dc      	ldr	r4, [r3, #12]
 80039ee:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80039f2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80039f6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80039f8:	2d04      	cmp	r5, #4
 80039fa:	bf28      	it	cs
 80039fc:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80039fe:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a00:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003a04:	bf8c      	ite	hi
 8003a06:	3c03      	subhi	r4, #3
 8003a08:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a0a:	fa03 f505 	lsl.w	r5, r3, r5
 8003a0e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003a12:	40a3      	lsls	r3, r4
 8003a14:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a18:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003a1a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a1c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003a20:	bfac      	ite	ge
 8003a22:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003a26:	4a08      	ldrlt	r2, [pc, #32]	; (8003a48 <HAL_NVIC_SetPriority+0x60>)
 8003a28:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003a2c:	bfb8      	it	lt
 8003a2e:	f000 000f 	andlt.w	r0, r0, #15
 8003a32:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003a34:	bfaa      	itet	ge
 8003a36:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003a3a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003a3c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003a40:	bd30      	pop	{r4, r5, pc}
 8003a42:	bf00      	nop
 8003a44:	e000ed00 	.word	0xe000ed00
 8003a48:	e000ed14 	.word	0xe000ed14

08003a4c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003a4c:	2800      	cmp	r0, #0
 8003a4e:	db08      	blt.n	8003a62 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003a50:	0942      	lsrs	r2, r0, #5
 8003a52:	2301      	movs	r3, #1
 8003a54:	f000 001f 	and.w	r0, r0, #31
 8003a58:	fa03 f000 	lsl.w	r0, r3, r0
 8003a5c:	4b01      	ldr	r3, [pc, #4]	; (8003a64 <HAL_NVIC_EnableIRQ+0x18>)
 8003a5e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003a62:	4770      	bx	lr
 8003a64:	e000e100 	.word	0xe000e100

08003a68 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003a68:	2800      	cmp	r0, #0
 8003a6a:	db0d      	blt.n	8003a88 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003a6c:	0943      	lsrs	r3, r0, #5
 8003a6e:	2201      	movs	r2, #1
 8003a70:	f000 001f 	and.w	r0, r0, #31
 8003a74:	fa02 f000 	lsl.w	r0, r2, r0
 8003a78:	3320      	adds	r3, #32
 8003a7a:	4a04      	ldr	r2, [pc, #16]	; (8003a8c <HAL_NVIC_DisableIRQ+0x24>)
 8003a7c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003a80:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003a84:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003a88:	4770      	bx	lr
 8003a8a:	bf00      	nop
 8003a8c:	e000e100 	.word	0xe000e100

08003a90 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003a90:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003a92:	4604      	mov	r4, r0
 8003a94:	b150      	cbz	r0, 8003aac <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003a96:	7943      	ldrb	r3, [r0, #5]
 8003a98:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003a9c:	b913      	cbnz	r3, 8003aa4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003a9e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003aa0:	f7fd ff8c 	bl	80019bc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003aa4:	2301      	movs	r3, #1
 8003aa6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003aa8:	2000      	movs	r0, #0
}
 8003aaa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003aac:	2001      	movs	r0, #1
 8003aae:	e7fc      	b.n	8003aaa <HAL_CRC_Init+0x1a>

08003ab0 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003ab0:	6803      	ldr	r3, [r0, #0]
{
 8003ab2:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003ab4:	4c08      	ldr	r4, [pc, #32]	; (8003ad8 <DMA_CalcBaseAndBitshift+0x28>)
{
 8003ab6:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003ab8:	b2d9      	uxtb	r1, r3
 8003aba:	3910      	subs	r1, #16
 8003abc:	2018      	movs	r0, #24
 8003abe:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003ac2:	5c20      	ldrb	r0, [r4, r0]
 8003ac4:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8003ac6:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003aca:	f020 0003 	bic.w	r0, r0, #3
 8003ace:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003ad0:	bf88      	it	hi
 8003ad2:	3004      	addhi	r0, #4
 8003ad4:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003ad6:	bd10      	pop	{r4, pc}
 8003ad8:	0801d5ed 	.word	0x0801d5ed

08003adc <HAL_DMA_Init>:
{
 8003adc:	b570      	push	{r4, r5, r6, lr}
 8003ade:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003ae0:	f7ff ff56 	bl	8003990 <HAL_GetTick>
 8003ae4:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003ae6:	2c00      	cmp	r4, #0
 8003ae8:	d073      	beq.n	8003bd2 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003aea:	2302      	movs	r3, #2
 8003aec:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003af0:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003af2:	2300      	movs	r3, #0
 8003af4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003af8:	6813      	ldr	r3, [r2, #0]
 8003afa:	f023 0301 	bic.w	r3, r3, #1
 8003afe:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003b00:	6821      	ldr	r1, [r4, #0]
 8003b02:	680b      	ldr	r3, [r1, #0]
 8003b04:	07d8      	lsls	r0, r3, #31
 8003b06:	d42f      	bmi.n	8003b68 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003b08:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003b0a:	4d33      	ldr	r5, [pc, #204]	; (8003bd8 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003b0c:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003b0e:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003b10:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003b14:	4313      	orrs	r3, r2
 8003b16:	68e2      	ldr	r2, [r4, #12]
 8003b18:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003b1a:	6922      	ldr	r2, [r4, #16]
 8003b1c:	4313      	orrs	r3, r2
 8003b1e:	6962      	ldr	r2, [r4, #20]
 8003b20:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003b22:	69e2      	ldr	r2, [r4, #28]
 8003b24:	4303      	orrs	r3, r0
 8003b26:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003b28:	6a22      	ldr	r2, [r4, #32]
 8003b2a:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003b2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003b2e:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003b30:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003b34:	bf02      	ittt	eq
 8003b36:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003b3a:	4335      	orreq	r5, r6
 8003b3c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003b3e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003b40:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003b42:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003b44:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003b48:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003b4c:	d133      	bne.n	8003bb6 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003b4e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003b50:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003b52:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003b54:	b37d      	cbz	r5, 8003bb6 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003b56:	b990      	cbnz	r0, 8003b7e <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003b58:	2a01      	cmp	r2, #1
 8003b5a:	d021      	beq.n	8003ba0 <HAL_DMA_Init+0xc4>
 8003b5c:	f032 0202 	bics.w	r2, r2, #2
 8003b60:	d129      	bne.n	8003bb6 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003b62:	01ea      	lsls	r2, r5, #7
 8003b64:	d527      	bpl.n	8003bb6 <HAL_DMA_Init+0xda>
 8003b66:	e01e      	b.n	8003ba6 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003b68:	f7ff ff12 	bl	8003990 <HAL_GetTick>
 8003b6c:	1b40      	subs	r0, r0, r5
 8003b6e:	2805      	cmp	r0, #5
 8003b70:	d9c6      	bls.n	8003b00 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003b72:	2320      	movs	r3, #32
 8003b74:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003b76:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003b78:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003b7c:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003b7e:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003b82:	d114      	bne.n	8003bae <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003b84:	2a03      	cmp	r2, #3
 8003b86:	d816      	bhi.n	8003bb6 <HAL_DMA_Init+0xda>
 8003b88:	a001      	add	r0, pc, #4	; (adr r0, 8003b90 <HAL_DMA_Init+0xb4>)
 8003b8a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003b8e:	bf00      	nop
 8003b90:	08003ba7 	.word	0x08003ba7
 8003b94:	08003b63 	.word	0x08003b63
 8003b98:	08003ba7 	.word	0x08003ba7
 8003b9c:	08003ba1 	.word	0x08003ba1
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003ba0:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003ba4:	d107      	bne.n	8003bb6 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003ba6:	2340      	movs	r3, #64	; 0x40
 8003ba8:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003baa:	2001      	movs	r0, #1
 8003bac:	e7e4      	b.n	8003b78 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003bae:	2a02      	cmp	r2, #2
 8003bb0:	d9f9      	bls.n	8003ba6 <HAL_DMA_Init+0xca>
 8003bb2:	2a03      	cmp	r2, #3
 8003bb4:	d0d5      	beq.n	8003b62 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003bb6:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003bb8:	4620      	mov	r0, r4
 8003bba:	f7ff ff79 	bl	8003ab0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003bbe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003bc0:	233f      	movs	r3, #63	; 0x3f
 8003bc2:	4093      	lsls	r3, r2
 8003bc4:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003bc6:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003bc8:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003bca:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003bcc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003bd0:	e7d4      	b.n	8003b7c <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003bd2:	2001      	movs	r0, #1
 8003bd4:	e7d2      	b.n	8003b7c <HAL_DMA_Init+0xa0>
 8003bd6:	bf00      	nop
 8003bd8:	f010803f 	.word	0xf010803f

08003bdc <HAL_DMA_DeInit>:
{
 8003bdc:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003bde:	4605      	mov	r5, r0
 8003be0:	b320      	cbz	r0, 8003c2c <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003be2:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003be6:	2b02      	cmp	r3, #2
 8003be8:	b2dc      	uxtb	r4, r3
 8003bea:	d01d      	beq.n	8003c28 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003bec:	6803      	ldr	r3, [r0, #0]
 8003bee:	681a      	ldr	r2, [r3, #0]
 8003bf0:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003bf4:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003bf6:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003bf8:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003bfa:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003bfc:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003bfe:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003c00:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003c02:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003c04:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003c06:	f7ff ff53 	bl	8003ab0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c0a:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003c0c:	233f      	movs	r3, #63	; 0x3f
 8003c0e:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003c10:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003c14:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003c18:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c1c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003c1e:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003c20:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003c24:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003c28:	4620      	mov	r0, r4
 8003c2a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003c2c:	2401      	movs	r4, #1
 8003c2e:	e7fb      	b.n	8003c28 <HAL_DMA_DeInit+0x4c>

08003c30 <HAL_DMA_Abort>:
{
 8003c30:	b570      	push	{r4, r5, r6, lr}
 8003c32:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003c34:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003c36:	f7ff feab 	bl	8003990 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003c3a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003c3e:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003c40:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003c42:	d006      	beq.n	8003c52 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003c44:	2380      	movs	r3, #128	; 0x80
 8003c46:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003c48:	2300      	movs	r3, #0
 8003c4a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003c4e:	2001      	movs	r0, #1
}
 8003c50:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c52:	6823      	ldr	r3, [r4, #0]
 8003c54:	681a      	ldr	r2, [r3, #0]
 8003c56:	f022 0216 	bic.w	r2, r2, #22
 8003c5a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003c5c:	695a      	ldr	r2, [r3, #20]
 8003c5e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003c62:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003c64:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003c66:	b90a      	cbnz	r2, 8003c6c <HAL_DMA_Abort+0x3c>
 8003c68:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003c6a:	b11a      	cbz	r2, 8003c74 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c6c:	681a      	ldr	r2, [r3, #0]
 8003c6e:	f022 0208 	bic.w	r2, r2, #8
 8003c72:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003c74:	681a      	ldr	r2, [r3, #0]
 8003c76:	f022 0201 	bic.w	r2, r2, #1
 8003c7a:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003c7c:	6823      	ldr	r3, [r4, #0]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f013 0301 	ands.w	r3, r3, #1
 8003c84:	d10a      	bne.n	8003c9c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c86:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003c88:	223f      	movs	r2, #63	; 0x3f
 8003c8a:	408a      	lsls	r2, r1
 8003c8c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003c8e:	2201      	movs	r2, #1
 8003c90:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003c94:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003c98:	4618      	mov	r0, r3
 8003c9a:	e7d9      	b.n	8003c50 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003c9c:	f7ff fe78 	bl	8003990 <HAL_GetTick>
 8003ca0:	1b40      	subs	r0, r0, r5
 8003ca2:	2805      	cmp	r0, #5
 8003ca4:	d9ea      	bls.n	8003c7c <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003ca6:	2320      	movs	r3, #32
 8003ca8:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003caa:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003cac:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003cae:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003cb2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003cb6:	e7cb      	b.n	8003c50 <HAL_DMA_Abort+0x20>

08003cb8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003cb8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003cba:	4604      	mov	r4, r0
 8003cbc:	b330      	cbz	r0, 8003d0c <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003cbe:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003cc2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003cc6:	b91b      	cbnz	r3, 8003cd0 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003cc8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003ccc:	f7fd fe8e 	bl	80019ec <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003cd0:	6822      	ldr	r2, [r4, #0]
 8003cd2:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003cd4:	2302      	movs	r3, #2
 8003cd6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003cda:	6813      	ldr	r3, [r2, #0]
 8003cdc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003ce0:	430b      	orrs	r3, r1
 8003ce2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003ce4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003ce6:	68a1      	ldr	r1, [r4, #8]
 8003ce8:	f023 0307 	bic.w	r3, r3, #7
 8003cec:	430b      	orrs	r3, r1
 8003cee:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003cf0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003cf2:	68e1      	ldr	r1, [r4, #12]
 8003cf4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003cf8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003cfc:	430b      	orrs	r3, r1
 8003cfe:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003d00:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003d02:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003d04:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003d06:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003d0a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003d0c:	2001      	movs	r0, #1
 8003d0e:	e7fc      	b.n	8003d0a <HAL_DMA2D_Init+0x52>

08003d10 <HAL_DMA2D_LineEventCallback>:
 8003d10:	4770      	bx	lr

08003d12 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003d12:	4770      	bx	lr

08003d14 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003d14:	6803      	ldr	r3, [r0, #0]
{
 8003d16:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003d18:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003d1a:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003d1c:	07f2      	lsls	r2, r6, #31
{
 8003d1e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003d20:	d514      	bpl.n	8003d4c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003d22:	05e9      	lsls	r1, r5, #23
 8003d24:	d512      	bpl.n	8003d4c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003d26:	681a      	ldr	r2, [r3, #0]
 8003d28:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003d2c:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003d2e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003d30:	f042 0201 	orr.w	r2, r2, #1
 8003d34:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003d36:	2201      	movs	r2, #1
 8003d38:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d3a:	2304      	movs	r3, #4
 8003d3c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d40:	2300      	movs	r3, #0
 8003d42:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003d46:	6943      	ldr	r3, [r0, #20]
 8003d48:	b103      	cbz	r3, 8003d4c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003d4a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003d4c:	06b2      	lsls	r2, r6, #26
 8003d4e:	d516      	bpl.n	8003d7e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003d50:	04ab      	lsls	r3, r5, #18
 8003d52:	d514      	bpl.n	8003d7e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003d54:	6823      	ldr	r3, [r4, #0]
 8003d56:	681a      	ldr	r2, [r3, #0]
 8003d58:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003d5c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003d5e:	2220      	movs	r2, #32
 8003d60:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003d62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d64:	f043 0302 	orr.w	r3, r3, #2
 8003d68:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d6a:	2304      	movs	r3, #4
 8003d6c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d70:	2300      	movs	r3, #0
 8003d72:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003d76:	6963      	ldr	r3, [r4, #20]
 8003d78:	b10b      	cbz	r3, 8003d7e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003d7a:	4620      	mov	r0, r4
 8003d7c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003d7e:	0730      	lsls	r0, r6, #28
 8003d80:	d516      	bpl.n	8003db0 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003d82:	0529      	lsls	r1, r5, #20
 8003d84:	d514      	bpl.n	8003db0 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003d86:	6823      	ldr	r3, [r4, #0]
 8003d88:	681a      	ldr	r2, [r3, #0]
 8003d8a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003d8e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003d90:	2208      	movs	r2, #8
 8003d92:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003d94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d96:	f043 0304 	orr.w	r3, r3, #4
 8003d9a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d9c:	2304      	movs	r3, #4
 8003d9e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003da2:	2300      	movs	r3, #0
 8003da4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003da8:	6963      	ldr	r3, [r4, #20]
 8003daa:	b10b      	cbz	r3, 8003db0 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003dac:	4620      	mov	r0, r4
 8003dae:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003db0:	0772      	lsls	r2, r6, #29
 8003db2:	d50b      	bpl.n	8003dcc <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003db4:	056b      	lsls	r3, r5, #21
 8003db6:	d509      	bpl.n	8003dcc <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003db8:	6823      	ldr	r3, [r4, #0]
 8003dba:	681a      	ldr	r2, [r3, #0]
 8003dbc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003dc0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003dc2:	2204      	movs	r2, #4
 8003dc4:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003dc6:	4620      	mov	r0, r4
 8003dc8:	f7ff ffa2 	bl	8003d10 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003dcc:	07b0      	lsls	r0, r6, #30
 8003dce:	d514      	bpl.n	8003dfa <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003dd0:	05a9      	lsls	r1, r5, #22
 8003dd2:	d512      	bpl.n	8003dfa <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003dd4:	6823      	ldr	r3, [r4, #0]
 8003dd6:	681a      	ldr	r2, [r3, #0]
 8003dd8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003ddc:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003dde:	2202      	movs	r2, #2
 8003de0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003de2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003de4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003de6:	2301      	movs	r3, #1
 8003de8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003dec:	2300      	movs	r3, #0
 8003dee:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8003df2:	6923      	ldr	r3, [r4, #16]
 8003df4:	b10b      	cbz	r3, 8003dfa <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003df6:	4620      	mov	r0, r4
 8003df8:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003dfa:	06f2      	lsls	r2, r6, #27
 8003dfc:	d513      	bpl.n	8003e26 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003dfe:	04eb      	lsls	r3, r5, #19
 8003e00:	d511      	bpl.n	8003e26 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003e02:	6823      	ldr	r3, [r4, #0]
 8003e04:	681a      	ldr	r2, [r3, #0]
 8003e06:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003e0a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003e0c:	2210      	movs	r2, #16
 8003e0e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003e10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003e12:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e14:	2301      	movs	r3, #1
 8003e16:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003e1a:	2300      	movs	r3, #0
 8003e1c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003e20:	4620      	mov	r0, r4
 8003e22:	f7ff ff76 	bl	8003d12 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003e26:	bd70      	pop	{r4, r5, r6, pc}

08003e28 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003e28:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003e2a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003e2e:	2b01      	cmp	r3, #1
 8003e30:	f04f 0302 	mov.w	r3, #2
 8003e34:	d02b      	beq.n	8003e8e <HAL_DMA2D_ConfigLayer+0x66>
 8003e36:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003e38:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003e3c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003e40:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003e44:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8003e48:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003e4a:	4f18      	ldr	r7, [pc, #96]	; (8003eac <HAL_DMA2D_ConfigLayer+0x84>)
 8003e4c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e50:	3c09      	subs	r4, #9
 8003e52:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003e54:	bf9c      	itt	ls
 8003e56:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8003e5a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003e5c:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8003e60:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003e62:	bf88      	it	hi
 8003e64:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003e68:	b999      	cbnz	r1, 8003e92 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003e6a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003e6c:	4039      	ands	r1, r7
 8003e6e:	430a      	orrs	r2, r1
 8003e70:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e72:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003e74:	6982      	ldr	r2, [r0, #24]
 8003e76:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e78:	d803      	bhi.n	8003e82 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003e7a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003e7c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003e80:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e82:	2301      	movs	r3, #1
 8003e84:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003e88:	2300      	movs	r3, #0
 8003e8a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003e8e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003e92:	69d9      	ldr	r1, [r3, #28]
 8003e94:	4039      	ands	r1, r7
 8003e96:	430a      	orrs	r2, r1
 8003e98:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003e9a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e9c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003e9e:	6992      	ldr	r2, [r2, #24]
 8003ea0:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003ea2:	bf9c      	itt	ls
 8003ea4:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8003ea8:	621d      	strls	r5, [r3, #32]
 8003eaa:	e7ea      	b.n	8003e82 <HAL_DMA2D_ConfigLayer+0x5a>
 8003eac:	00fcfff0 	.word	0x00fcfff0

08003eb0 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8003eb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003eb4:	4607      	mov	r7, r0
 8003eb6:	460d      	mov	r5, r1
 8003eb8:	4614      	mov	r4, r2
 8003eba:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8003ebc:	f7ff fd68 	bl	8003990 <HAL_GetTick>
 8003ec0:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8003ec2:	683a      	ldr	r2, [r7, #0]
 8003ec4:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8003ec6:	07db      	lsls	r3, r3, #31
 8003ec8:	d50a      	bpl.n	8003ee0 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8003eca:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 8003ece:	9c06      	ldr	r4, [sp, #24]
 8003ed0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8003ed4:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8003ed8:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 8003eda:	2000      	movs	r0, #0
}
 8003edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8003ee0:	f7ff fd56 	bl	8003990 <HAL_GetTick>
 8003ee4:	eba0 0008 	sub.w	r0, r0, r8
 8003ee8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003eec:	d9e9      	bls.n	8003ec2 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8003eee:	2003      	movs	r0, #3
 8003ef0:	e7f4      	b.n	8003edc <DSI_ShortWrite+0x2c>

08003ef2 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8003ef2:	7c03      	ldrb	r3, [r0, #16]
 8003ef4:	2b01      	cmp	r3, #1
 8003ef6:	d05d      	beq.n	8003fb4 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8003ef8:	6803      	ldr	r3, [r0, #0]
 8003efa:	2200      	movs	r2, #0
 8003efc:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003f00:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8003f04:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003f06:	bf48      	it	mi
 8003f08:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8003f0c:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003f0e:	bf42      	ittt	mi
 8003f10:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8003f14:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8003f18:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8003f1c:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8003f1e:	bf42      	ittt	mi
 8003f20:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8003f24:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8003f28:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8003f2c:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8003f2e:	bf42      	ittt	mi
 8003f30:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f34:	f042 0201 	orrmi.w	r2, r2, #1
 8003f38:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8003f3c:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8003f3e:	bf42      	ittt	mi
 8003f40:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f44:	f042 0202 	orrmi.w	r2, r2, #2
 8003f48:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8003f4c:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8003f4e:	bf42      	ittt	mi
 8003f50:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f54:	f042 020c 	orrmi.w	r2, r2, #12
 8003f58:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8003f5c:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8003f5e:	bf42      	ittt	mi
 8003f60:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f64:	f042 0210 	orrmi.w	r2, r2, #16
 8003f68:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8003f6c:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8003f6e:	bf42      	ittt	mi
 8003f70:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f74:	f042 0220 	orrmi.w	r2, r2, #32
 8003f78:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8003f7c:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8003f7e:	bf42      	ittt	mi
 8003f80:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f84:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8003f88:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8003f8c:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8003f8e:	bf42      	ittt	mi
 8003f90:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f94:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8003f98:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8003f9c:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8003f9e:	bf42      	ittt	mi
 8003fa0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003fa4:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8003fa8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8003fac:	2300      	movs	r3, #0
 8003fae:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8003fb0:	4618      	mov	r0, r3
 8003fb2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8003fb4:	2002      	movs	r0, #2
}
 8003fb6:	4770      	bx	lr

08003fb8 <HAL_DSI_Init>:
{
 8003fb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003fba:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8003fbc:	4604      	mov	r4, r0
 8003fbe:	2800      	cmp	r0, #0
 8003fc0:	f000 80a7 	beq.w	8004112 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8003fc4:	7c43      	ldrb	r3, [r0, #17]
 8003fc6:	b90b      	cbnz	r3, 8003fcc <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8003fc8:	f7fd fd32 	bl	8001a30 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8003fcc:	2303      	movs	r3, #3
 8003fce:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8003fd0:	2300      	movs	r3, #0
 8003fd2:	9300      	str	r3, [sp, #0]
 8003fd4:	6823      	ldr	r3, [r4, #0]
 8003fd6:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8003fda:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003fde:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8003fe2:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8003fe6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003fea:	9300      	str	r3, [sp, #0]
 8003fec:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8003fee:	f7ff fccf 	bl	8003990 <HAL_GetTick>
 8003ff2:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8003ff4:	6822      	ldr	r2, [r4, #0]
 8003ff6:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8003ffa:	04d9      	lsls	r1, r3, #19
 8003ffc:	d578      	bpl.n	80040f0 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8003ffe:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004002:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8004006:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800400a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800400e:	e9d5 0300 	ldrd	r0, r3, [r5]
 8004012:	02db      	lsls	r3, r3, #11
 8004014:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8004018:	68a8      	ldr	r0, [r5, #8]
 800401a:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800401e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004022:	430b      	orrs	r3, r1
 8004024:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004028:	2300      	movs	r3, #0
 800402a:	9301      	str	r3, [sp, #4]
 800402c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004030:	f043 0301 	orr.w	r3, r3, #1
 8004034:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004038:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800403c:	f003 0301 	and.w	r3, r3, #1
 8004040:	9301      	str	r3, [sp, #4]
 8004042:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8004044:	f7ff fca4 	bl	8003990 <HAL_GetTick>
 8004048:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800404a:	6823      	ldr	r3, [r4, #0]
 800404c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004050:	05d2      	lsls	r2, r2, #23
 8004052:	d557      	bpl.n	8004104 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004054:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004058:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800405a:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800405c:	f042 0206 	orr.w	r2, r2, #6
 8004060:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004064:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004068:	f022 0203 	bic.w	r2, r2, #3
 800406c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004070:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004074:	430a      	orrs	r2, r1
 8004076:	f042 0201 	orr.w	r2, r2, #1
 800407a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800407e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004082:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004084:	f022 0203 	bic.w	r2, r2, #3
 8004088:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800408c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004090:	430a      	orrs	r2, r1
 8004092:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004096:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004098:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800409a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800409e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80040a0:	689a      	ldr	r2, [r3, #8]
 80040a2:	430a      	orrs	r2, r1
 80040a4:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80040a6:	686a      	ldr	r2, [r5, #4]
 80040a8:	2a01      	cmp	r2, #1
 80040aa:	bf38      	it	cc
 80040ac:	2201      	movcc	r2, #1
 80040ae:	4611      	mov	r1, r2
 80040b0:	4a19      	ldr	r2, [pc, #100]	; (8004118 <HAL_DSI_Init+0x160>)
 80040b2:	434a      	muls	r2, r1
 80040b4:	68a9      	ldr	r1, [r5, #8]
 80040b6:	f001 0103 	and.w	r1, r1, #3
 80040ba:	408a      	lsls	r2, r1
 80040bc:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 80040c0:	4341      	muls	r1, r0
 80040c2:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 80040c6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80040ca:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80040ce:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80040d2:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80040d6:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80040d8:	430a      	orrs	r2, r1
 80040da:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80040de:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80040e2:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80040e6:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80040e8:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80040ea:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 80040ec:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 80040ee:	e007      	b.n	8004100 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80040f0:	f7ff fc4e 	bl	8003990 <HAL_GetTick>
 80040f4:	1b80      	subs	r0, r0, r6
 80040f6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80040fa:	f67f af7b 	bls.w	8003ff4 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 80040fe:	2003      	movs	r0, #3
}
 8004100:	b002      	add	sp, #8
 8004102:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004104:	f7ff fc44 	bl	8003990 <HAL_GetTick>
 8004108:	1b80      	subs	r0, r0, r6
 800410a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800410e:	d99c      	bls.n	800404a <HAL_DSI_Init+0x92>
 8004110:	e7f5      	b.n	80040fe <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8004112:	2001      	movs	r0, #1
 8004114:	e7f4      	b.n	8004100 <HAL_DSI_Init+0x148>
 8004116:	bf00      	nop
 8004118:	003d0900 	.word	0x003d0900

0800411c <HAL_DSI_ErrorCallback>:
 800411c:	4770      	bx	lr

0800411e <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800411e:	6803      	ldr	r3, [r0, #0]
 8004120:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004124:	07d1      	lsls	r1, r2, #31
{
 8004126:	b510      	push	{r4, lr}
 8004128:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800412a:	d508      	bpl.n	800413e <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800412c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004130:	07d2      	lsls	r2, r2, #31
 8004132:	d504      	bpl.n	800413e <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004134:	2201      	movs	r2, #1
 8004136:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800413a:	f7fc fcc1 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800413e:	6823      	ldr	r3, [r4, #0]
 8004140:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004144:	0791      	lsls	r1, r2, #30
 8004146:	d509      	bpl.n	800415c <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004148:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800414c:	0792      	lsls	r2, r2, #30
 800414e:	d505      	bpl.n	800415c <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004150:	2202      	movs	r2, #2
 8004152:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004156:	4620      	mov	r0, r4
 8004158:	f7fc fce6 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800415c:	69a3      	ldr	r3, [r4, #24]
 800415e:	2b00      	cmp	r3, #0
 8004160:	d04e      	beq.n	8004200 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004162:	6821      	ldr	r1, [r4, #0]
 8004164:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004168:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800416c:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004170:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004172:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004176:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004178:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800417a:	b119      	cbz	r1, 8004184 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800417c:	6961      	ldr	r1, [r4, #20]
 800417e:	f041 0101 	orr.w	r1, r1, #1
 8004182:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004184:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004188:	bf1e      	ittt	ne
 800418a:	6962      	ldrne	r2, [r4, #20]
 800418c:	f042 0202 	orrne.w	r2, r2, #2
 8004190:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004192:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004194:	bf42      	ittt	mi
 8004196:	6962      	ldrmi	r2, [r4, #20]
 8004198:	f042 0204 	orrmi.w	r2, r2, #4
 800419c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800419e:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80041a0:	bf42      	ittt	mi
 80041a2:	6962      	ldrmi	r2, [r4, #20]
 80041a4:	f042 0208 	orrmi.w	r2, r2, #8
 80041a8:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80041aa:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80041ae:	bf1e      	ittt	ne
 80041b0:	6962      	ldrne	r2, [r4, #20]
 80041b2:	f042 0210 	orrne.w	r2, r2, #16
 80041b6:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80041b8:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80041ba:	bf42      	ittt	mi
 80041bc:	6962      	ldrmi	r2, [r4, #20]
 80041be:	f042 0220 	orrmi.w	r2, r2, #32
 80041c2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80041c4:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 80041c6:	bf42      	ittt	mi
 80041c8:	6962      	ldrmi	r2, [r4, #20]
 80041ca:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80041ce:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80041d0:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80041d2:	bf42      	ittt	mi
 80041d4:	6962      	ldrmi	r2, [r4, #20]
 80041d6:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 80041da:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 80041dc:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 80041de:	bf42      	ittt	mi
 80041e0:	6962      	ldrmi	r2, [r4, #20]
 80041e2:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 80041e6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80041e8:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 80041ec:	bf1e      	ittt	ne
 80041ee:	6963      	ldrne	r3, [r4, #20]
 80041f0:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 80041f4:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 80041f6:	6963      	ldr	r3, [r4, #20]
 80041f8:	b113      	cbz	r3, 8004200 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 80041fa:	4620      	mov	r0, r4
 80041fc:	f7ff ff8e 	bl	800411c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004200:	bd10      	pop	{r4, pc}

08004202 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004202:	7c03      	ldrb	r3, [r0, #16]
 8004204:	2b01      	cmp	r3, #1
 8004206:	d00b      	beq.n	8004220 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004208:	6803      	ldr	r3, [r0, #0]
 800420a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800420c:	f022 0203 	bic.w	r2, r2, #3
 8004210:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004212:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004214:	4311      	orrs	r1, r2
 8004216:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004218:	2300      	movs	r3, #0
 800421a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800421c:	4618      	mov	r0, r3
 800421e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004220:	2002      	movs	r0, #2
}
 8004222:	4770      	bx	lr

08004224 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004224:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004226:	7c03      	ldrb	r3, [r0, #16]
 8004228:	2b01      	cmp	r3, #1
 800422a:	d06a      	beq.n	8004302 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800422c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800422e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004230:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004232:	f042 0201 	orr.w	r2, r2, #1
 8004236:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004238:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800423c:	f022 0201 	bic.w	r2, r2, #1
 8004240:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004244:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004248:	f042 0201 	orr.w	r2, r2, #1
 800424c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004250:	68da      	ldr	r2, [r3, #12]
 8004252:	f022 0203 	bic.w	r2, r2, #3
 8004256:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004258:	68da      	ldr	r2, [r3, #12]
 800425a:	4322      	orrs	r2, r4
 800425c:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800425e:	695a      	ldr	r2, [r3, #20]
 8004260:	f022 0207 	bic.w	r2, r2, #7
 8004264:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8004266:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800426a:	432a      	orrs	r2, r5
 800426c:	694d      	ldr	r5, [r1, #20]
 800426e:	695c      	ldr	r4, [r3, #20]
 8004270:	432a      	orrs	r2, r5
 8004272:	4322      	orrs	r2, r4
 8004274:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004276:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004278:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800427a:	f022 020f 	bic.w	r2, r2, #15
 800427e:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004280:	691c      	ldr	r4, [r3, #16]
 8004282:	432c      	orrs	r4, r5
 8004284:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004286:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800428a:	f024 040e 	bic.w	r4, r4, #14
 800428e:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004292:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004296:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004298:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800429c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80042a0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80042a2:	0c12      	lsrs	r2, r2, #16
 80042a4:	0412      	lsls	r2, r2, #16
 80042a6:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80042a8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80042aa:	4322      	orrs	r2, r4
 80042ac:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80042ae:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80042b2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80042b6:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80042ba:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80042be:	432a      	orrs	r2, r5
 80042c0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80042c2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80042c6:	432a      	orrs	r2, r5
 80042c8:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80042ca:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80042cc:	432a      	orrs	r2, r5
 80042ce:	4322      	orrs	r2, r4
 80042d0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80042d4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80042d6:	f022 0201 	bic.w	r2, r2, #1
 80042da:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80042dc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80042de:	430a      	orrs	r2, r1
 80042e0:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80042e2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80042e6:	f042 0201 	orr.w	r2, r2, #1
 80042ea:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80042ee:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80042f2:	f042 0202 	orr.w	r2, r2, #2
 80042f6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80042fa:	2300      	movs	r3, #0
 80042fc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80042fe:	4618      	mov	r0, r3
}
 8004300:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004302:	2002      	movs	r0, #2
 8004304:	e7fc      	b.n	8004300 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004308 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004308:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800430a:	7c03      	ldrb	r3, [r0, #16]
 800430c:	2b01      	cmp	r3, #1
 800430e:	d02a      	beq.n	8004366 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004310:	6802      	ldr	r2, [r0, #0]
 8004312:	4b16      	ldr	r3, [pc, #88]	; (800436c <HAL_DSI_ConfigCommand+0x64>)
 8004314:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004316:	4023      	ands	r3, r4
 8004318:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800431a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800431e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004320:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004322:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004324:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8004326:	68cd      	ldr	r5, [r1, #12]
 8004328:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800432a:	690d      	ldr	r5, [r1, #16]
 800432c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800432e:	694d      	ldr	r5, [r1, #20]
 8004330:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8004332:	698d      	ldr	r5, [r1, #24]
 8004334:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8004336:	69cd      	ldr	r5, [r1, #28]
 8004338:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800433a:	6a0d      	ldr	r5, [r1, #32]
 800433c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800433e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004340:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8004342:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004344:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8004346:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004348:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800434a:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800434c:	4323      	orrs	r3, r4
 800434e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004350:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004352:	f023 0302 	bic.w	r3, r3, #2
 8004356:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004358:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800435a:	430b      	orrs	r3, r1
 800435c:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800435e:	2300      	movs	r3, #0
 8004360:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004362:	4618      	mov	r0, r3
}
 8004364:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004366:	2002      	movs	r0, #2
 8004368:	e7fc      	b.n	8004364 <HAL_DSI_ConfigCommand+0x5c>
 800436a:	bf00      	nop
 800436c:	fef080ff 	.word	0xfef080ff

08004370 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004370:	7c03      	ldrb	r3, [r0, #16]
 8004372:	2b01      	cmp	r3, #1
 8004374:	d00b      	beq.n	800438e <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8004376:	6803      	ldr	r3, [r0, #0]
 8004378:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800437a:	f022 021f 	bic.w	r2, r2, #31
 800437e:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004380:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004382:	4311      	orrs	r1, r2
 8004384:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004386:	2300      	movs	r3, #0
 8004388:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800438a:	4618      	mov	r0, r3
 800438c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800438e:	2002      	movs	r0, #2
}
 8004390:	4770      	bx	lr

08004392 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004392:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004394:	7c03      	ldrb	r3, [r0, #16]
 8004396:	2b01      	cmp	r3, #1
 8004398:	d035      	beq.n	8004406 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800439a:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800439e:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80043a0:	4294      	cmp	r4, r2
 80043a2:	bf38      	it	cc
 80043a4:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80043a6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80043aa:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80043ae:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80043b2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80043b6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80043ba:	4322      	orrs	r2, r4
 80043bc:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80043c0:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80043c4:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 80043c8:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80043cc:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80043d0:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80043d2:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80043d6:	690d      	ldr	r5, [r1, #16]
 80043d8:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80043dc:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80043de:	432a      	orrs	r2, r5
 80043e0:	4322      	orrs	r2, r4
 80043e2:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80043e6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80043ea:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80043ee:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80043f2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80043f6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80043fa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80043fe:	2300      	movs	r3, #0
 8004400:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004402:	4618      	mov	r0, r3
}
 8004404:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004406:	2002      	movs	r0, #2
 8004408:	e7fc      	b.n	8004404 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800440c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800440c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800440e:	7c03      	ldrb	r3, [r0, #16]
 8004410:	2b01      	cmp	r3, #1
 8004412:	d05c      	beq.n	80044ce <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004414:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004416:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004418:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800441a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800441c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004420:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004422:	689a      	ldr	r2, [r3, #8]
 8004424:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004428:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800442a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800442c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800442e:	b292      	uxth	r2, r2
 8004430:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004432:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004434:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004438:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800443a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800443c:	4a25      	ldr	r2, [pc, #148]	; (80044d4 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800443e:	4014      	ands	r4, r2
 8004440:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004442:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004444:	432c      	orrs	r4, r5
 8004446:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004448:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800444a:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800444c:	4014      	ands	r4, r2
 800444e:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004450:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8004452:	432c      	orrs	r4, r5
 8004454:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004456:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800445a:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800445c:	4014      	ands	r4, r2
 800445e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004462:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8004466:	432c      	orrs	r4, r5
 8004468:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800446c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004470:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004472:	4014      	ands	r4, r2
 8004474:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004478:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800447c:	432c      	orrs	r4, r5
 800447e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004482:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004486:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800448a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800448e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004492:	698d      	ldr	r5, [r1, #24]
 8004494:	432c      	orrs	r4, r5
 8004496:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800449a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800449e:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80044a0:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80044a2:	4014      	ands	r4, r2
 80044a4:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80044a8:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80044ac:	432c      	orrs	r4, r5
 80044ae:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80044b2:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80044b6:	4022      	ands	r2, r4
 80044b8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80044bc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80044c0:	430a      	orrs	r2, r1
 80044c2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80044c6:	2300      	movs	r3, #0
 80044c8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80044ca:	4618      	mov	r0, r3
}
 80044cc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80044ce:	2002      	movs	r0, #2
 80044d0:	e7fc      	b.n	80044cc <HAL_DSI_ConfigHostTimeouts+0xc0>
 80044d2:	bf00      	nop
 80044d4:	ffff0000 	.word	0xffff0000

080044d8 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80044d8:	7c03      	ldrb	r3, [r0, #16]
 80044da:	2b01      	cmp	r3, #1
{
 80044dc:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80044de:	d01c      	beq.n	800451a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80044e0:	6802      	ldr	r2, [r0, #0]
 80044e2:	2300      	movs	r3, #0
 80044e4:	9300      	str	r3, [sp, #0]
 80044e6:	6851      	ldr	r1, [r2, #4]
 80044e8:	f041 0101 	orr.w	r1, r1, #1
 80044ec:	6051      	str	r1, [r2, #4]
 80044ee:	6851      	ldr	r1, [r2, #4]
 80044f0:	f001 0101 	and.w	r1, r1, #1
 80044f4:	9100      	str	r1, [sp, #0]
 80044f6:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80044f8:	9301      	str	r3, [sp, #4]
 80044fa:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 80044fe:	f041 0108 	orr.w	r1, r1, #8
 8004502:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004506:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800450a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800450c:	f002 0208 	and.w	r2, r2, #8
 8004510:	9201      	str	r2, [sp, #4]
 8004512:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004514:	4618      	mov	r0, r3
}
 8004516:	b002      	add	sp, #8
 8004518:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800451a:	2002      	movs	r0, #2
 800451c:	e7fb      	b.n	8004516 <HAL_DSI_Start+0x3e>

0800451e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800451e:	7c03      	ldrb	r3, [r0, #16]
 8004520:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8004522:	bf1f      	itttt	ne
 8004524:	6802      	ldrne	r2, [r0, #0]
 8004526:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800452a:	f043 0304 	orrne.w	r3, r3, #4
 800452e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004532:	bf1d      	ittte	ne
 8004534:	2300      	movne	r3, #0
 8004536:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004538:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800453a:	2002      	moveq	r0, #2
}
 800453c:	4770      	bx	lr

0800453e <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800453e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004540:	7c05      	ldrb	r5, [r0, #16]
 8004542:	2d01      	cmp	r5, #1
{
 8004544:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004546:	d009      	beq.n	800455c <HAL_DSI_ShortWrite+0x1e>
 8004548:	2501      	movs	r5, #1
 800454a:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800454c:	9d06      	ldr	r5, [sp, #24]
 800454e:	9500      	str	r5, [sp, #0]
 8004550:	f7ff fcae 	bl	8003eb0 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004554:	2300      	movs	r3, #0
 8004556:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004558:	b003      	add	sp, #12
 800455a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800455c:	2002      	movs	r0, #2
 800455e:	e7fb      	b.n	8004558 <HAL_DSI_ShortWrite+0x1a>

08004560 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004560:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004564:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004566:	7c03      	ldrb	r3, [r0, #16]
 8004568:	2b01      	cmp	r3, #1
{
 800456a:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800456e:	4606      	mov	r6, r0
 8004570:	460f      	mov	r7, r1
 8004572:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004574:	d053      	beq.n	800461e <HAL_DSI_LongWrite+0xbe>
 8004576:	2301      	movs	r3, #1
 8004578:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800457a:	f7ff fa09 	bl	8003990 <HAL_GetTick>
 800457e:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004580:	6832      	ldr	r2, [r6, #0]
 8004582:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8004584:	f013 0a01 	ands.w	sl, r3, #1
 8004588:	d01a      	beq.n	80045c0 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800458a:	2c03      	cmp	r4, #3
 800458c:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800458e:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004592:	bf28      	it	cs
 8004594:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 8004596:	4288      	cmp	r0, r1
 8004598:	d11e      	bne.n	80045d8 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800459a:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800459c:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 80045a0:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80045a2:	bb1b      	cbnz	r3, 80045ec <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80045a4:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80045a6:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 80045aa:	0225      	lsls	r5, r4, #8
 80045ac:	b2ad      	uxth	r5, r5
 80045ae:	0224      	lsls	r4, r4, #8
 80045b0:	430d      	orrs	r5, r1
 80045b2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80045b6:	432c      	orrs	r4, r5
 80045b8:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80045ba:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80045bc:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80045be:	e009      	b.n	80045d4 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80045c0:	f7ff f9e6 	bl	8003990 <HAL_GetTick>
 80045c4:	eba0 000b 	sub.w	r0, r0, fp
 80045c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80045cc:	d9d8      	bls.n	8004580 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 80045ce:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 80045d2:	2003      	movs	r0, #3
}
 80045d4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80045d8:	f818 3000 	ldrb.w	r3, [r8, r0]
 80045dc:	3001      	adds	r0, #1
 80045de:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 80045e2:	fa03 f30c 	lsl.w	r3, r3, ip
 80045e6:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80045ea:	e7d4      	b.n	8004596 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80045ec:	2b04      	cmp	r3, #4
    fifoword = 0U;
 80045ee:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80045f2:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 80045f4:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80045f6:	bf28      	it	cs
 80045f8:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80045fc:	f810 8001 	ldrb.w	r8, [r0, r1]
 8004600:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004604:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004606:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800460a:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800460c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004610:	d1f4      	bne.n	80045fc <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004612:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8004616:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800461a:	4470      	add	r0, lr
 800461c:	e7c1      	b.n	80045a2 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800461e:	2002      	movs	r0, #2
 8004620:	e7d8      	b.n	80045d4 <HAL_DSI_LongWrite+0x74>

08004622 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004622:	7c03      	ldrb	r3, [r0, #16]
 8004624:	2b01      	cmp	r3, #1
 8004626:	d010      	beq.n	800464a <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004628:	6803      	ldr	r3, [r0, #0]
 800462a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800462e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004632:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004636:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800463a:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800463e:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004642:	2300      	movs	r3, #0
 8004644:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004646:	4618      	mov	r0, r3
 8004648:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800464a:	2002      	movs	r0, #2
}
 800464c:	4770      	bx	lr
	...

08004650 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004650:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004654:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004818 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004658:	4a6d      	ldr	r2, [pc, #436]	; (8004810 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800465a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800465c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800465e:	2401      	movs	r4, #1
 8004660:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004662:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004666:	43ac      	bics	r4, r5
 8004668:	f040 80b9 	bne.w	80047de <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800466c:	684d      	ldr	r5, [r1, #4]
 800466e:	f005 0403 	and.w	r4, r5, #3
 8004672:	ea4f 0843 	mov.w	r8, r3, lsl #1
 8004676:	2603      	movs	r6, #3
 8004678:	1e67      	subs	r7, r4, #1
 800467a:	fa06 f608 	lsl.w	r6, r6, r8
 800467e:	2f01      	cmp	r7, #1
 8004680:	ea6f 0606 	mvn.w	r6, r6
 8004684:	d834      	bhi.n	80046f0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004686:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004688:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800468c:	68cf      	ldr	r7, [r1, #12]
 800468e:	fa07 f708 	lsl.w	r7, r7, r8
 8004692:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004696:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004698:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800469a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800469e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80046a2:	409f      	lsls	r7, r3
 80046a4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80046a8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80046aa:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80046ac:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80046b0:	688f      	ldr	r7, [r1, #8]
 80046b2:	fa07 f708 	lsl.w	r7, r7, r8
 80046b6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80046ba:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80046bc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80046be:	d119      	bne.n	80046f4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80046c0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80046c4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80046c8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80046cc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80046d0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80046d4:	f04f 0e0f 	mov.w	lr, #15
 80046d8:	fa0e fe0b 	lsl.w	lr, lr, fp
 80046dc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80046e0:	690f      	ldr	r7, [r1, #16]
 80046e2:	fa07 f70b 	lsl.w	r7, r7, fp
 80046e6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80046ea:	f8ca 7020 	str.w	r7, [sl, #32]
 80046ee:	e001      	b.n	80046f4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80046f0:	2c03      	cmp	r4, #3
 80046f2:	d1da      	bne.n	80046aa <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80046f4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80046f6:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80046fa:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80046fc:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80046fe:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8004702:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004704:	d06b      	beq.n	80047de <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004706:	f04f 0a00 	mov.w	sl, #0
 800470a:	f8cd a004 	str.w	sl, [sp, #4]
 800470e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004712:	4c40      	ldr	r4, [pc, #256]	; (8004814 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004714:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004718:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800471c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8004720:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8004724:	9601      	str	r6, [sp, #4]
 8004726:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004728:	f023 0603 	bic.w	r6, r3, #3
 800472c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004730:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004734:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004738:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800473c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004740:	270f      	movs	r7, #15
 8004742:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004746:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004748:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800474c:	d04e      	beq.n	80047ec <HAL_GPIO_Init+0x19c>
 800474e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004752:	42a0      	cmp	r0, r4
 8004754:	d04c      	beq.n	80047f0 <HAL_GPIO_Init+0x1a0>
 8004756:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800475a:	42a0      	cmp	r0, r4
 800475c:	d04a      	beq.n	80047f4 <HAL_GPIO_Init+0x1a4>
 800475e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004762:	42a0      	cmp	r0, r4
 8004764:	d048      	beq.n	80047f8 <HAL_GPIO_Init+0x1a8>
 8004766:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800476a:	42a0      	cmp	r0, r4
 800476c:	d046      	beq.n	80047fc <HAL_GPIO_Init+0x1ac>
 800476e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004772:	42a0      	cmp	r0, r4
 8004774:	d044      	beq.n	8004800 <HAL_GPIO_Init+0x1b0>
 8004776:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800477a:	42a0      	cmp	r0, r4
 800477c:	d042      	beq.n	8004804 <HAL_GPIO_Init+0x1b4>
 800477e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004782:	42a0      	cmp	r0, r4
 8004784:	d040      	beq.n	8004808 <HAL_GPIO_Init+0x1b8>
 8004786:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800478a:	42a0      	cmp	r0, r4
 800478c:	d03e      	beq.n	800480c <HAL_GPIO_Init+0x1bc>
 800478e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004792:	42a0      	cmp	r0, r4
 8004794:	bf0c      	ite	eq
 8004796:	2409      	moveq	r4, #9
 8004798:	240a      	movne	r4, #10
 800479a:	fa04 f40e 	lsl.w	r4, r4, lr
 800479e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80047a0:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 80047a2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80047a4:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80047a8:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80047aa:	bf54      	ite	pl
 80047ac:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80047ae:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80047b2:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 80047b4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80047b6:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 80047b8:	bf54      	ite	pl
 80047ba:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80047bc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80047c0:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80047c2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80047c4:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80047c6:	bf54      	ite	pl
 80047c8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80047ca:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80047ce:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80047d0:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80047d2:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80047d4:	bf54      	ite	pl
 80047d6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80047d8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80047dc:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80047de:	3301      	adds	r3, #1
 80047e0:	2b10      	cmp	r3, #16
 80047e2:	f47f af3b 	bne.w	800465c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80047e6:	b003      	add	sp, #12
 80047e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80047ec:	4654      	mov	r4, sl
 80047ee:	e7d4      	b.n	800479a <HAL_GPIO_Init+0x14a>
 80047f0:	2401      	movs	r4, #1
 80047f2:	e7d2      	b.n	800479a <HAL_GPIO_Init+0x14a>
 80047f4:	2402      	movs	r4, #2
 80047f6:	e7d0      	b.n	800479a <HAL_GPIO_Init+0x14a>
 80047f8:	2403      	movs	r4, #3
 80047fa:	e7ce      	b.n	800479a <HAL_GPIO_Init+0x14a>
 80047fc:	2404      	movs	r4, #4
 80047fe:	e7cc      	b.n	800479a <HAL_GPIO_Init+0x14a>
 8004800:	2405      	movs	r4, #5
 8004802:	e7ca      	b.n	800479a <HAL_GPIO_Init+0x14a>
 8004804:	2406      	movs	r4, #6
 8004806:	e7c8      	b.n	800479a <HAL_GPIO_Init+0x14a>
 8004808:	2407      	movs	r4, #7
 800480a:	e7c6      	b.n	800479a <HAL_GPIO_Init+0x14a>
 800480c:	2408      	movs	r4, #8
 800480e:	e7c4      	b.n	800479a <HAL_GPIO_Init+0x14a>
 8004810:	40013c00 	.word	0x40013c00
 8004814:	40020000 	.word	0x40020000
 8004818:	40023800 	.word	0x40023800

0800481c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800481c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004820:	4c4a      	ldr	r4, [pc, #296]	; (800494c <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004822:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004954 <HAL_GPIO_DeInit+0x138>
 8004826:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004958 <HAL_GPIO_DeInit+0x13c>
 800482a:	f8df b130 	ldr.w	fp, [pc, #304]	; 800495c <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800482e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004830:	2301      	movs	r3, #1
 8004832:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004836:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800483a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800483e:	d16e      	bne.n	800491e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004840:	f022 0503 	bic.w	r5, r2, #3
 8004844:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004848:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800484c:	4b40      	ldr	r3, [pc, #256]	; (8004950 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800484e:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004852:	f002 0c03 	and.w	ip, r2, #3
 8004856:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800485a:	260f      	movs	r6, #15
 800485c:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004860:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004862:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004866:	d05f      	beq.n	8004928 <HAL_GPIO_DeInit+0x10c>
 8004868:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800486c:	4298      	cmp	r0, r3
 800486e:	d05d      	beq.n	800492c <HAL_GPIO_DeInit+0x110>
 8004870:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004874:	4298      	cmp	r0, r3
 8004876:	d05b      	beq.n	8004930 <HAL_GPIO_DeInit+0x114>
 8004878:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800487c:	4298      	cmp	r0, r3
 800487e:	d059      	beq.n	8004934 <HAL_GPIO_DeInit+0x118>
 8004880:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004884:	4298      	cmp	r0, r3
 8004886:	d057      	beq.n	8004938 <HAL_GPIO_DeInit+0x11c>
 8004888:	4548      	cmp	r0, r9
 800488a:	d057      	beq.n	800493c <HAL_GPIO_DeInit+0x120>
 800488c:	4550      	cmp	r0, sl
 800488e:	d057      	beq.n	8004940 <HAL_GPIO_DeInit+0x124>
 8004890:	4558      	cmp	r0, fp
 8004892:	d057      	beq.n	8004944 <HAL_GPIO_DeInit+0x128>
 8004894:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004898:	4298      	cmp	r0, r3
 800489a:	d055      	beq.n	8004948 <HAL_GPIO_DeInit+0x12c>
 800489c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80048a0:	4298      	cmp	r0, r3
 80048a2:	bf0c      	ite	eq
 80048a4:	2309      	moveq	r3, #9
 80048a6:	230a      	movne	r3, #10
 80048a8:	fa03 f30c 	lsl.w	r3, r3, ip
 80048ac:	4543      	cmp	r3, r8
 80048ae:	d113      	bne.n	80048d8 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80048b0:	6823      	ldr	r3, [r4, #0]
 80048b2:	ea23 0307 	bic.w	r3, r3, r7
 80048b6:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80048b8:	6863      	ldr	r3, [r4, #4]
 80048ba:	ea23 0307 	bic.w	r3, r3, r7
 80048be:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80048c0:	68a3      	ldr	r3, [r4, #8]
 80048c2:	ea23 0307 	bic.w	r3, r3, r7
 80048c6:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80048c8:	68e3      	ldr	r3, [r4, #12]
 80048ca:	ea23 0707 	bic.w	r7, r3, r7
 80048ce:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80048d0:	68ab      	ldr	r3, [r5, #8]
 80048d2:	ea23 0606 	bic.w	r6, r3, r6
 80048d6:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80048d8:	6805      	ldr	r5, [r0, #0]
 80048da:	2603      	movs	r6, #3
 80048dc:	0053      	lsls	r3, r2, #1
 80048de:	fa06 f303 	lsl.w	r3, r6, r3
 80048e2:	ea25 0503 	bic.w	r5, r5, r3
 80048e6:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80048e8:	fa22 f506 	lsr.w	r5, r2, r6
 80048ec:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80048f0:	f002 0c07 	and.w	ip, r2, #7
 80048f4:	6a2e      	ldr	r6, [r5, #32]
 80048f6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80048fa:	270f      	movs	r7, #15
 80048fc:	fa07 f70c 	lsl.w	r7, r7, ip
 8004900:	ea26 0707 	bic.w	r7, r6, r7
 8004904:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004906:	68c5      	ldr	r5, [r0, #12]
 8004908:	ea25 0503 	bic.w	r5, r5, r3
 800490c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800490e:	6845      	ldr	r5, [r0, #4]
 8004910:	ea25 050e 	bic.w	r5, r5, lr
 8004914:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004916:	6885      	ldr	r5, [r0, #8]
 8004918:	ea25 0303 	bic.w	r3, r5, r3
 800491c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800491e:	3201      	adds	r2, #1
 8004920:	2a10      	cmp	r2, #16
 8004922:	d185      	bne.n	8004830 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004928:	2300      	movs	r3, #0
 800492a:	e7bd      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 800492c:	2301      	movs	r3, #1
 800492e:	e7bb      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004930:	2302      	movs	r3, #2
 8004932:	e7b9      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004934:	2303      	movs	r3, #3
 8004936:	e7b7      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004938:	2304      	movs	r3, #4
 800493a:	e7b5      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 800493c:	2305      	movs	r3, #5
 800493e:	e7b3      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004940:	2306      	movs	r3, #6
 8004942:	e7b1      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004944:	2307      	movs	r3, #7
 8004946:	e7af      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 8004948:	2308      	movs	r3, #8
 800494a:	e7ad      	b.n	80048a8 <HAL_GPIO_DeInit+0x8c>
 800494c:	40013c00 	.word	0x40013c00
 8004950:	40020000 	.word	0x40020000
 8004954:	40021400 	.word	0x40021400
 8004958:	40021800 	.word	0x40021800
 800495c:	40021c00 	.word	0x40021c00

08004960 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004960:	6903      	ldr	r3, [r0, #16]
 8004962:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004964:	bf14      	ite	ne
 8004966:	2001      	movne	r0, #1
 8004968:	2000      	moveq	r0, #0
 800496a:	4770      	bx	lr

0800496c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800496c:	b10a      	cbz	r2, 8004972 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800496e:	6181      	str	r1, [r0, #24]
  }
}
 8004970:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004972:	0409      	lsls	r1, r1, #16
 8004974:	e7fb      	b.n	800496e <HAL_GPIO_WritePin+0x2>

08004976 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8004976:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004978:	ea01 0203 	and.w	r2, r1, r3
 800497c:	ea21 0103 	bic.w	r1, r1, r3
 8004980:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004984:	6181      	str	r1, [r0, #24]
}
 8004986:	4770      	bx	lr

08004988 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004988:	6801      	ldr	r1, [r0, #0]
 800498a:	694b      	ldr	r3, [r1, #20]
 800498c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004990:	f04f 0200 	mov.w	r2, #0
 8004994:	d010      	beq.n	80049b8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004996:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800499a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800499c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800499e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80049a0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049a4:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80049a8:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80049aa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80049ae:	f043 0304 	orr.w	r3, r3, #4
 80049b2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80049b4:	2001      	movs	r0, #1
 80049b6:	4770      	bx	lr
  }
  return HAL_OK;
 80049b8:	4618      	mov	r0, r3
}
 80049ba:	4770      	bx	lr

080049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80049bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80049c0:	4604      	mov	r4, r0
 80049c2:	460f      	mov	r7, r1
 80049c4:	4616      	mov	r6, r2
 80049c6:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80049c8:	6825      	ldr	r5, [r4, #0]
 80049ca:	6968      	ldr	r0, [r5, #20]
 80049cc:	ea27 0000 	bic.w	r0, r7, r0
 80049d0:	b280      	uxth	r0, r0
 80049d2:	b1b8      	cbz	r0, 8004a04 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80049d4:	696b      	ldr	r3, [r5, #20]
 80049d6:	055a      	lsls	r2, r3, #21
 80049d8:	d516      	bpl.n	8004a08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80049da:	682b      	ldr	r3, [r5, #0]
 80049dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80049e0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80049e2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80049e6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80049e8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80049ea:	2300      	movs	r3, #0
 80049ec:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80049ee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049f2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80049f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80049f8:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80049fc:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80049fe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004a02:	2001      	movs	r0, #1
}
 8004a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004a08:	1c73      	adds	r3, r6, #1
 8004a0a:	d0de      	beq.n	80049ca <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a0c:	f7fe ffc0 	bl	8003990 <HAL_GetTick>
 8004a10:	eba0 0008 	sub.w	r0, r0, r8
 8004a14:	42b0      	cmp	r0, r6
 8004a16:	d801      	bhi.n	8004a1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004a18:	2e00      	cmp	r6, #0
 8004a1a:	d1d5      	bne.n	80049c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a1c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004a1e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a20:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004a22:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a26:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004a2c:	f042 0220 	orr.w	r2, r2, #32
 8004a30:	e7e4      	b.n	80049fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004a32 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004a32:	b570      	push	{r4, r5, r6, lr}
 8004a34:	4604      	mov	r4, r0
 8004a36:	460d      	mov	r5, r1
 8004a38:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004a3a:	6823      	ldr	r3, [r4, #0]
 8004a3c:	695b      	ldr	r3, [r3, #20]
 8004a3e:	075b      	lsls	r3, r3, #29
 8004a40:	d501      	bpl.n	8004a46 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004a42:	2000      	movs	r0, #0
}
 8004a44:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004a46:	4620      	mov	r0, r4
 8004a48:	f7ff ff9e 	bl	8004988 <I2C_IsAcknowledgeFailed>
 8004a4c:	b9a8      	cbnz	r0, 8004a7a <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004a4e:	1c6a      	adds	r2, r5, #1
 8004a50:	d0f3      	beq.n	8004a3a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a52:	f7fe ff9d 	bl	8003990 <HAL_GetTick>
 8004a56:	1b80      	subs	r0, r0, r6
 8004a58:	42a8      	cmp	r0, r5
 8004a5a:	d801      	bhi.n	8004a60 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004a5c:	2d00      	cmp	r5, #0
 8004a5e:	d1ec      	bne.n	8004a3a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004a60:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004a62:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004a64:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004a66:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004a6a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004a6e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004a70:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004a74:	f042 0220 	orr.w	r2, r2, #32
 8004a78:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004a7a:	2001      	movs	r0, #1
 8004a7c:	e7e2      	b.n	8004a44 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004a7e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004a7e:	b570      	push	{r4, r5, r6, lr}
 8004a80:	4604      	mov	r4, r0
 8004a82:	460d      	mov	r5, r1
 8004a84:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004a86:	6821      	ldr	r1, [r4, #0]
 8004a88:	694b      	ldr	r3, [r1, #20]
 8004a8a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004a8e:	d001      	beq.n	8004a94 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004a90:	2000      	movs	r0, #0
 8004a92:	e010      	b.n	8004ab6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004a94:	694a      	ldr	r2, [r1, #20]
 8004a96:	06d2      	lsls	r2, r2, #27
 8004a98:	d50e      	bpl.n	8004ab8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004a9a:	f06f 0210 	mvn.w	r2, #16
 8004a9e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004aa0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004aa2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004aa4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004aa8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004aac:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004aae:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ab0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004ab4:	2001      	movs	r0, #1
}
 8004ab6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ab8:	f7fe ff6a 	bl	8003990 <HAL_GetTick>
 8004abc:	1b80      	subs	r0, r0, r6
 8004abe:	42a8      	cmp	r0, r5
 8004ac0:	d801      	bhi.n	8004ac6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004ac2:	2d00      	cmp	r5, #0
 8004ac4:	d1df      	bne.n	8004a86 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004ac6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004ac8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004aca:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004acc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004ad0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004ad4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ad6:	f042 0220 	orr.w	r2, r2, #32
 8004ada:	e7e8      	b.n	8004aae <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004adc <I2C_WaitOnFlagUntilTimeout>:
{
 8004adc:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004ae0:	4606      	mov	r6, r0
 8004ae2:	460f      	mov	r7, r1
 8004ae4:	4691      	mov	r9, r2
 8004ae6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004ae8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004aec:	6833      	ldr	r3, [r6, #0]
 8004aee:	f1ba 0f01 	cmp.w	sl, #1
 8004af2:	bf0c      	ite	eq
 8004af4:	695c      	ldreq	r4, [r3, #20]
 8004af6:	699c      	ldrne	r4, [r3, #24]
 8004af8:	ea27 0404 	bic.w	r4, r7, r4
 8004afc:	b2a4      	uxth	r4, r4
 8004afe:	fab4 f484 	clz	r4, r4
 8004b02:	0964      	lsrs	r4, r4, #5
 8004b04:	45a1      	cmp	r9, r4
 8004b06:	d001      	beq.n	8004b0c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004b08:	2000      	movs	r0, #0
 8004b0a:	e017      	b.n	8004b3c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004b0c:	1c6a      	adds	r2, r5, #1
 8004b0e:	d0ee      	beq.n	8004aee <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b10:	f7fe ff3e 	bl	8003990 <HAL_GetTick>
 8004b14:	9b08      	ldr	r3, [sp, #32]
 8004b16:	1ac0      	subs	r0, r0, r3
 8004b18:	42a8      	cmp	r0, r5
 8004b1a:	d801      	bhi.n	8004b20 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004b1c:	2d00      	cmp	r5, #0
 8004b1e:	d1e5      	bne.n	8004aec <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004b20:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004b22:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004b24:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004b26:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004b2a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b2e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004b30:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b34:	f042 0220 	orr.w	r2, r2, #32
 8004b38:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004b3a:	2001      	movs	r0, #1
}
 8004b3c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004b40 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004b40:	b570      	push	{r4, r5, r6, lr}
 8004b42:	4604      	mov	r4, r0
 8004b44:	460d      	mov	r5, r1
 8004b46:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004b48:	6823      	ldr	r3, [r4, #0]
 8004b4a:	695b      	ldr	r3, [r3, #20]
 8004b4c:	061b      	lsls	r3, r3, #24
 8004b4e:	d501      	bpl.n	8004b54 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004b50:	2000      	movs	r0, #0
}
 8004b52:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004b54:	4620      	mov	r0, r4
 8004b56:	f7ff ff17 	bl	8004988 <I2C_IsAcknowledgeFailed>
 8004b5a:	b9a8      	cbnz	r0, 8004b88 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004b5c:	1c6a      	adds	r2, r5, #1
 8004b5e:	d0f3      	beq.n	8004b48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b60:	f7fe ff16 	bl	8003990 <HAL_GetTick>
 8004b64:	1b80      	subs	r0, r0, r6
 8004b66:	42a8      	cmp	r0, r5
 8004b68:	d801      	bhi.n	8004b6e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004b6a:	2d00      	cmp	r5, #0
 8004b6c:	d1ec      	bne.n	8004b48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004b6e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004b70:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004b72:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004b74:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004b78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b7c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004b7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b82:	f042 0220 	orr.w	r2, r2, #32
 8004b86:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004b88:	2001      	movs	r0, #1
 8004b8a:	e7e2      	b.n	8004b52 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004b8c <I2C_RequestMemoryWrite>:
{
 8004b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004b90:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b92:	6802      	ldr	r2, [r0, #0]
{
 8004b94:	b085      	sub	sp, #20
 8004b96:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8004b9a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b9c:	6813      	ldr	r3, [r2, #0]
 8004b9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ba2:	6013      	str	r3, [r2, #0]
{
 8004ba4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004ba6:	463b      	mov	r3, r7
 8004ba8:	f8cd 8000 	str.w	r8, [sp]
 8004bac:	2200      	movs	r2, #0
 8004bae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004bb2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004bb4:	f7ff ff92 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8004bb8:	6823      	ldr	r3, [r4, #0]
 8004bba:	b138      	cbz	r0, 8004bcc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	05db      	lsls	r3, r3, #23
 8004bc0:	d502      	bpl.n	8004bc8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004bc2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004bc6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004bc8:	2003      	movs	r0, #3
 8004bca:	e00a      	b.n	8004be2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004bcc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004bd0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004bd2:	4919      	ldr	r1, [pc, #100]	; (8004c38 <I2C_RequestMemoryWrite+0xac>)
 8004bd4:	4643      	mov	r3, r8
 8004bd6:	463a      	mov	r2, r7
 8004bd8:	4620      	mov	r0, r4
 8004bda:	f7ff feef 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004bde:	b118      	cbz	r0, 8004be8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8004be0:	2001      	movs	r0, #1
}
 8004be2:	b005      	add	sp, #20
 8004be4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004be8:	6823      	ldr	r3, [r4, #0]
 8004bea:	9003      	str	r0, [sp, #12]
 8004bec:	695a      	ldr	r2, [r3, #20]
 8004bee:	9203      	str	r2, [sp, #12]
 8004bf0:	699b      	ldr	r3, [r3, #24]
 8004bf2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004bf4:	4642      	mov	r2, r8
 8004bf6:	4639      	mov	r1, r7
 8004bf8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004bfa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004bfc:	f7ff ffa0 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c00:	b140      	cbz	r0, 8004c14 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004c02:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c04:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004c06:	bf01      	itttt	eq
 8004c08:	6822      	ldreq	r2, [r4, #0]
 8004c0a:	6813      	ldreq	r3, [r2, #0]
 8004c0c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004c10:	6013      	streq	r3, [r2, #0]
 8004c12:	e7e5      	b.n	8004be0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004c14:	f1b9 0f01 	cmp.w	r9, #1
 8004c18:	6823      	ldr	r3, [r4, #0]
 8004c1a:	d102      	bne.n	8004c22 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c1c:	b2ed      	uxtb	r5, r5
 8004c1e:	611d      	str	r5, [r3, #16]
 8004c20:	e7df      	b.n	8004be2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004c22:	0a2a      	lsrs	r2, r5, #8
 8004c24:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c26:	4639      	mov	r1, r7
 8004c28:	4642      	mov	r2, r8
 8004c2a:	4620      	mov	r0, r4
 8004c2c:	f7ff ff88 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c30:	2800      	cmp	r0, #0
 8004c32:	d1e6      	bne.n	8004c02 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c34:	6823      	ldr	r3, [r4, #0]
 8004c36:	e7f1      	b.n	8004c1c <I2C_RequestMemoryWrite+0x90>
 8004c38:	00010002 	.word	0x00010002

08004c3c <I2C_RequestMemoryRead>:
{
 8004c3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004c40:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004c42:	6803      	ldr	r3, [r0, #0]
{
 8004c44:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004c46:	681a      	ldr	r2, [r3, #0]
 8004c48:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004c4c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c4e:	681a      	ldr	r2, [r3, #0]
{
 8004c50:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c54:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004c58:	601a      	str	r2, [r3, #0]
{
 8004c5a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c5c:	463b      	mov	r3, r7
 8004c5e:	f8cd 8000 	str.w	r8, [sp]
 8004c62:	2200      	movs	r2, #0
 8004c64:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004c68:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c6a:	f7ff ff37 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8004c6e:	6823      	ldr	r3, [r4, #0]
 8004c70:	b148      	cbz	r0, 8004c86 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c72:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c74:	05db      	lsls	r3, r3, #23
 8004c76:	d502      	bpl.n	8004c7e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004c78:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004c7c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004c7e:	2003      	movs	r0, #3
}
 8004c80:	b004      	add	sp, #16
 8004c82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004c86:	fa5f f986 	uxtb.w	r9, r6
 8004c8a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004c8e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c90:	492a      	ldr	r1, [pc, #168]	; (8004d3c <I2C_RequestMemoryRead+0x100>)
 8004c92:	4643      	mov	r3, r8
 8004c94:	463a      	mov	r2, r7
 8004c96:	4620      	mov	r0, r4
 8004c98:	f7ff fe90 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c9c:	b108      	cbz	r0, 8004ca2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004c9e:	2001      	movs	r0, #1
 8004ca0:	e7ee      	b.n	8004c80 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ca2:	6823      	ldr	r3, [r4, #0]
 8004ca4:	9003      	str	r0, [sp, #12]
 8004ca6:	695a      	ldr	r2, [r3, #20]
 8004ca8:	9203      	str	r2, [sp, #12]
 8004caa:	699b      	ldr	r3, [r3, #24]
 8004cac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cae:	4642      	mov	r2, r8
 8004cb0:	4639      	mov	r1, r7
 8004cb2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cb4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cb6:	f7ff ff43 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004cba:	b140      	cbz	r0, 8004cce <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004cbc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cbe:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cc0:	bf01      	itttt	eq
 8004cc2:	6822      	ldreq	r2, [r4, #0]
 8004cc4:	6813      	ldreq	r3, [r2, #0]
 8004cc6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004cca:	6013      	streq	r3, [r2, #0]
 8004ccc:	e7e7      	b.n	8004c9e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004cce:	f1ba 0f01 	cmp.w	sl, #1
 8004cd2:	6823      	ldr	r3, [r4, #0]
 8004cd4:	d11a      	bne.n	8004d0c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004cd6:	b2ed      	uxtb	r5, r5
 8004cd8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cda:	4642      	mov	r2, r8
 8004cdc:	4639      	mov	r1, r7
 8004cde:	4620      	mov	r0, r4
 8004ce0:	f7ff ff2e 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ce4:	2800      	cmp	r0, #0
 8004ce6:	d1e9      	bne.n	8004cbc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ce8:	6822      	ldr	r2, [r4, #0]
 8004cea:	6813      	ldr	r3, [r2, #0]
 8004cec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004cf0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004cf2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004cf6:	4602      	mov	r2, r0
 8004cf8:	f8cd 8000 	str.w	r8, [sp]
 8004cfc:	463b      	mov	r3, r7
 8004cfe:	4620      	mov	r0, r4
 8004d00:	f7ff feec 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8004d04:	6822      	ldr	r2, [r4, #0]
 8004d06:	b160      	cbz	r0, 8004d22 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004d08:	6813      	ldr	r3, [r2, #0]
 8004d0a:	e7b3      	b.n	8004c74 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004d0c:	0a2a      	lsrs	r2, r5, #8
 8004d0e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d10:	4639      	mov	r1, r7
 8004d12:	4642      	mov	r2, r8
 8004d14:	4620      	mov	r0, r4
 8004d16:	f7ff ff13 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004d1a:	2800      	cmp	r0, #0
 8004d1c:	d1ce      	bne.n	8004cbc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004d1e:	6823      	ldr	r3, [r4, #0]
 8004d20:	e7d9      	b.n	8004cd6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004d22:	f049 0301 	orr.w	r3, r9, #1
 8004d26:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d28:	4904      	ldr	r1, [pc, #16]	; (8004d3c <I2C_RequestMemoryRead+0x100>)
 8004d2a:	4643      	mov	r3, r8
 8004d2c:	463a      	mov	r2, r7
 8004d2e:	4620      	mov	r0, r4
 8004d30:	f7ff fe44 	bl	80049bc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004d34:	3800      	subs	r0, #0
 8004d36:	bf18      	it	ne
 8004d38:	2001      	movne	r0, #1
 8004d3a:	e7a1      	b.n	8004c80 <I2C_RequestMemoryRead+0x44>
 8004d3c:	00010002 	.word	0x00010002

08004d40 <HAL_I2C_Init>:
{
 8004d40:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004d42:	4604      	mov	r4, r0
 8004d44:	b908      	cbnz	r0, 8004d4a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004d46:	2001      	movs	r0, #1
}
 8004d48:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004d4a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004d4e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004d52:	b91b      	cbnz	r3, 8004d5c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004d54:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004d58:	f7fc fea8 	bl	8001aac <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004d5c:	2324      	movs	r3, #36	; 0x24
 8004d5e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004d62:	6823      	ldr	r3, [r4, #0]
 8004d64:	681a      	ldr	r2, [r3, #0]
 8004d66:	f022 0201 	bic.w	r2, r2, #1
 8004d6a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004d6c:	681a      	ldr	r2, [r3, #0]
 8004d6e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004d72:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004d74:	681a      	ldr	r2, [r3, #0]
 8004d76:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004d7a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004d7c:	f001 f818 	bl	8005db0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004d80:	4a3f      	ldr	r2, [pc, #252]	; (8004e80 <HAL_I2C_Init+0x140>)
 8004d82:	6863      	ldr	r3, [r4, #4]
 8004d84:	4293      	cmp	r3, r2
 8004d86:	bf94      	ite	ls
 8004d88:	4a3e      	ldrls	r2, [pc, #248]	; (8004e84 <HAL_I2C_Init+0x144>)
 8004d8a:	4a3f      	ldrhi	r2, [pc, #252]	; (8004e88 <HAL_I2C_Init+0x148>)
 8004d8c:	4290      	cmp	r0, r2
 8004d8e:	bf8c      	ite	hi
 8004d90:	2200      	movhi	r2, #0
 8004d92:	2201      	movls	r2, #1
 8004d94:	2a00      	cmp	r2, #0
 8004d96:	d1d6      	bne.n	8004d46 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d98:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004d9a:	4e3c      	ldr	r6, [pc, #240]	; (8004e8c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d9c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004d9e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004da2:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8004da6:	4332      	orrs	r2, r6
 8004da8:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004daa:	4a35      	ldr	r2, [pc, #212]	; (8004e80 <HAL_I2C_Init+0x140>)
 8004dac:	6a0d      	ldr	r5, [r1, #32]
 8004dae:	4293      	cmp	r3, r2
 8004db0:	bf84      	itt	hi
 8004db2:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 8004db6:	4372      	mulhi	r2, r6
 8004db8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004dbc:	bf91      	iteee	ls
 8004dbe:	1c72      	addls	r2, r6, #1
 8004dc0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8004dc4:	fbb2 f2f6 	udivhi	r2, r2, r6
 8004dc8:	3201      	addhi	r2, #1
 8004dca:	432a      	orrs	r2, r5
 8004dcc:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004dce:	69cd      	ldr	r5, [r1, #28]
 8004dd0:	1e42      	subs	r2, r0, #1
 8004dd2:	482b      	ldr	r0, [pc, #172]	; (8004e80 <HAL_I2C_Init+0x140>)
 8004dd4:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8004dd8:	4283      	cmp	r3, r0
 8004dda:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8004dde:	d832      	bhi.n	8004e46 <HAL_I2C_Init+0x106>
 8004de0:	005b      	lsls	r3, r3, #1
 8004de2:	fbb2 f3f3 	udiv	r3, r2, r3
 8004de6:	f640 72fc 	movw	r2, #4092	; 0xffc
 8004dea:	3301      	adds	r3, #1
 8004dec:	4213      	tst	r3, r2
 8004dee:	d042      	beq.n	8004e76 <HAL_I2C_Init+0x136>
 8004df0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004df4:	432b      	orrs	r3, r5
 8004df6:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004df8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004dfc:	680a      	ldr	r2, [r1, #0]
 8004dfe:	4303      	orrs	r3, r0
 8004e00:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8004e04:	4313      	orrs	r3, r2
 8004e06:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004e08:	688a      	ldr	r2, [r1, #8]
 8004e0a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004e0e:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8004e12:	4303      	orrs	r3, r0
 8004e14:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004e18:	4313      	orrs	r3, r2
 8004e1a:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004e1c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004e20:	68ca      	ldr	r2, [r1, #12]
 8004e22:	4303      	orrs	r3, r0
 8004e24:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004e28:	4313      	orrs	r3, r2
 8004e2a:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004e2c:	680b      	ldr	r3, [r1, #0]
 8004e2e:	f043 0301 	orr.w	r3, r3, #1
 8004e32:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e34:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004e36:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e38:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004e3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e3e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e40:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004e44:	e780      	b.n	8004d48 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004e46:	68a0      	ldr	r0, [r4, #8]
 8004e48:	b950      	cbnz	r0, 8004e60 <HAL_I2C_Init+0x120>
 8004e4a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004e4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8004e52:	3301      	adds	r3, #1
 8004e54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e58:	b17b      	cbz	r3, 8004e7a <HAL_I2C_Init+0x13a>
 8004e5a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004e5e:	e7c9      	b.n	8004df4 <HAL_I2C_Init+0xb4>
 8004e60:	2019      	movs	r0, #25
 8004e62:	4343      	muls	r3, r0
 8004e64:	fbb2 f3f3 	udiv	r3, r2, r3
 8004e68:	3301      	adds	r3, #1
 8004e6a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e6e:	b123      	cbz	r3, 8004e7a <HAL_I2C_Init+0x13a>
 8004e70:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004e74:	e7be      	b.n	8004df4 <HAL_I2C_Init+0xb4>
 8004e76:	2304      	movs	r3, #4
 8004e78:	e7bc      	b.n	8004df4 <HAL_I2C_Init+0xb4>
 8004e7a:	2301      	movs	r3, #1
 8004e7c:	e7ba      	b.n	8004df4 <HAL_I2C_Init+0xb4>
 8004e7e:	bf00      	nop
 8004e80:	000186a0 	.word	0x000186a0
 8004e84:	001e847f 	.word	0x001e847f
 8004e88:	003d08ff 	.word	0x003d08ff
 8004e8c:	000f4240 	.word	0x000f4240

08004e90 <HAL_I2C_DeInit>:
{
 8004e90:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004e92:	4604      	mov	r4, r0
 8004e94:	b198      	cbz	r0, 8004ebe <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004e96:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004e98:	2324      	movs	r3, #36	; 0x24
 8004e9a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004e9e:	6813      	ldr	r3, [r2, #0]
 8004ea0:	f023 0301 	bic.w	r3, r3, #1
 8004ea4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004ea6:	f7fc fe45 	bl	8001b34 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8004eaa:	2000      	movs	r0, #0
 8004eac:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8004eae:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8004eb2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004eb6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8004eb8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8004ebc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004ebe:	2001      	movs	r0, #1
 8004ec0:	e7fc      	b.n	8004ebc <HAL_I2C_DeInit+0x2c>
	...

08004ec4 <HAL_I2C_Mem_Write>:
{
 8004ec4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ec8:	4604      	mov	r4, r0
 8004eca:	4699      	mov	r9, r3
 8004ecc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004ece:	460f      	mov	r7, r1
 8004ed0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004ed2:	f7fe fd5d 	bl	8003990 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ed6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004eda:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004edc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ede:	d003      	beq.n	8004ee8 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004ee0:	2002      	movs	r0, #2
}
 8004ee2:	b003      	add	sp, #12
 8004ee4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004ee8:	9000      	str	r0, [sp, #0]
 8004eea:	493c      	ldr	r1, [pc, #240]	; (8004fdc <HAL_I2C_Mem_Write+0x118>)
 8004eec:	2319      	movs	r3, #25
 8004eee:	2201      	movs	r2, #1
 8004ef0:	4620      	mov	r0, r4
 8004ef2:	f7ff fdf3 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8004ef6:	2800      	cmp	r0, #0
 8004ef8:	d1f2      	bne.n	8004ee0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004efa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004efe:	2b01      	cmp	r3, #1
 8004f00:	d0ee      	beq.n	8004ee0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004f02:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004f04:	2301      	movs	r3, #1
 8004f06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004f0a:	6803      	ldr	r3, [r0, #0]
 8004f0c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004f0e:	bf5e      	ittt	pl
 8004f10:	6803      	ldrpl	r3, [r0, #0]
 8004f12:	f043 0301 	orrpl.w	r3, r3, #1
 8004f16:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004f18:	6803      	ldr	r3, [r0, #0]
 8004f1a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004f1e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004f20:	2321      	movs	r3, #33	; 0x21
 8004f22:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004f26:	2340      	movs	r3, #64	; 0x40
 8004f28:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004f2c:	2300      	movs	r3, #0
 8004f2e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004f30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004f32:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004f34:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004f38:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004f3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f3c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004f3e:	4b28      	ldr	r3, [pc, #160]	; (8004fe0 <HAL_I2C_Mem_Write+0x11c>)
 8004f40:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004f42:	e9cd 6500 	strd	r6, r5, [sp]
 8004f46:	464b      	mov	r3, r9
 8004f48:	4642      	mov	r2, r8
 8004f4a:	4639      	mov	r1, r7
 8004f4c:	4620      	mov	r0, r4
 8004f4e:	f7ff fe1d 	bl	8004b8c <I2C_RequestMemoryWrite>
 8004f52:	2800      	cmp	r0, #0
 8004f54:	d02a      	beq.n	8004fac <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004f56:	2001      	movs	r0, #1
 8004f58:	e7c3      	b.n	8004ee2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f5a:	f7ff fdf1 	bl	8004b40 <I2C_WaitOnTXEFlagUntilTimeout>
 8004f5e:	b140      	cbz	r0, 8004f72 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004f60:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f62:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f64:	bf01      	itttt	eq
 8004f66:	6822      	ldreq	r2, [r4, #0]
 8004f68:	6813      	ldreq	r3, [r2, #0]
 8004f6a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004f6e:	6013      	streq	r3, [r2, #0]
 8004f70:	e7f1      	b.n	8004f56 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004f72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f74:	6827      	ldr	r7, [r4, #0]
 8004f76:	461a      	mov	r2, r3
 8004f78:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004f7c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004f7e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004f80:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004f82:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004f84:	3a01      	subs	r2, #1
 8004f86:	b292      	uxth	r2, r2
 8004f88:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f8a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004f8c:	1e48      	subs	r0, r1, #1
 8004f8e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f90:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004f92:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f94:	d50a      	bpl.n	8004fac <HAL_I2C_Mem_Write+0xe8>
 8004f96:	b148      	cbz	r0, 8004fac <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004f98:	785a      	ldrb	r2, [r3, #1]
 8004f9a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004f9c:	3302      	adds	r3, #2
 8004f9e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004fa0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004fa2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004fa4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004fa6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004fa8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004faa:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004fac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fae:	462a      	mov	r2, r5
 8004fb0:	4631      	mov	r1, r6
 8004fb2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d1d0      	bne.n	8004f5a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fb8:	f7ff fd3b 	bl	8004a32 <I2C_WaitOnBTFFlagUntilTimeout>
 8004fbc:	2800      	cmp	r0, #0
 8004fbe:	d1cf      	bne.n	8004f60 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004fc0:	6822      	ldr	r2, [r4, #0]
 8004fc2:	6813      	ldr	r3, [r2, #0]
 8004fc4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004fc8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004fca:	2320      	movs	r3, #32
 8004fcc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004fd0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fd4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004fd8:	e783      	b.n	8004ee2 <HAL_I2C_Mem_Write+0x1e>
 8004fda:	bf00      	nop
 8004fdc:	00100002 	.word	0x00100002
 8004fe0:	ffff0000 	.word	0xffff0000

08004fe4 <HAL_I2C_Mem_Read>:
{
 8004fe4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004fe8:	4604      	mov	r4, r0
 8004fea:	b087      	sub	sp, #28
 8004fec:	4699      	mov	r9, r3
 8004fee:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004ff0:	460d      	mov	r5, r1
 8004ff2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004ff4:	f7fe fccc 	bl	8003990 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ff8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004ffc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004ffe:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005000:	d004      	beq.n	800500c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005002:	2502      	movs	r5, #2
}
 8005004:	4628      	mov	r0, r5
 8005006:	b007      	add	sp, #28
 8005008:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800500c:	9000      	str	r0, [sp, #0]
 800500e:	4976      	ldr	r1, [pc, #472]	; (80051e8 <HAL_I2C_Mem_Read+0x204>)
 8005010:	2319      	movs	r3, #25
 8005012:	2201      	movs	r2, #1
 8005014:	4620      	mov	r0, r4
 8005016:	f7ff fd61 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 800501a:	2800      	cmp	r0, #0
 800501c:	d1f1      	bne.n	8005002 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800501e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005022:	2b01      	cmp	r3, #1
 8005024:	d0ed      	beq.n	8005002 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005026:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005028:	2301      	movs	r3, #1
 800502a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800502e:	6803      	ldr	r3, [r0, #0]
 8005030:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005032:	bf5e      	ittt	pl
 8005034:	6803      	ldrpl	r3, [r0, #0]
 8005036:	f043 0301 	orrpl.w	r3, r3, #1
 800503a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800503c:	6803      	ldr	r3, [r0, #0]
 800503e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005042:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005044:	2322      	movs	r3, #34	; 0x22
 8005046:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800504a:	2340      	movs	r3, #64	; 0x40
 800504c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005050:	2300      	movs	r3, #0
 8005052:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005054:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005056:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005058:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800505c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800505e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005060:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005062:	4b62      	ldr	r3, [pc, #392]	; (80051ec <HAL_I2C_Mem_Read+0x208>)
 8005064:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005066:	4629      	mov	r1, r5
 8005068:	e9cd 7600 	strd	r7, r6, [sp]
 800506c:	464b      	mov	r3, r9
 800506e:	4642      	mov	r2, r8
 8005070:	4620      	mov	r0, r4
 8005072:	f7ff fde3 	bl	8004c3c <I2C_RequestMemoryRead>
 8005076:	4605      	mov	r5, r0
 8005078:	b108      	cbz	r0, 800507e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800507a:	2501      	movs	r5, #1
 800507c:	e7c2      	b.n	8005004 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800507e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8005080:	6823      	ldr	r3, [r4, #0]
 8005082:	b9b2      	cbnz	r2, 80050b2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005084:	9002      	str	r0, [sp, #8]
 8005086:	695a      	ldr	r2, [r3, #20]
 8005088:	9202      	str	r2, [sp, #8]
 800508a:	699a      	ldr	r2, [r3, #24]
 800508c:	9202      	str	r2, [sp, #8]
 800508e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005090:	681a      	ldr	r2, [r3, #0]
 8005092:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005096:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005098:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80051f0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800509c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d12c      	bne.n	80050fc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80050a2:	2220      	movs	r2, #32
 80050a4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80050a8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80050ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80050b0:	e7a8      	b.n	8005004 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80050b2:	2a01      	cmp	r2, #1
 80050b4:	d10a      	bne.n	80050cc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050b6:	681a      	ldr	r2, [r3, #0]
 80050b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050bc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050be:	9003      	str	r0, [sp, #12]
 80050c0:	695a      	ldr	r2, [r3, #20]
 80050c2:	9203      	str	r2, [sp, #12]
 80050c4:	699a      	ldr	r2, [r3, #24]
 80050c6:	9203      	str	r2, [sp, #12]
 80050c8:	9a03      	ldr	r2, [sp, #12]
 80050ca:	e7e1      	b.n	8005090 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80050cc:	2a02      	cmp	r2, #2
 80050ce:	d10e      	bne.n	80050ee <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050d0:	681a      	ldr	r2, [r3, #0]
 80050d2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050d6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80050d8:	681a      	ldr	r2, [r3, #0]
 80050da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80050de:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050e0:	9004      	str	r0, [sp, #16]
 80050e2:	695a      	ldr	r2, [r3, #20]
 80050e4:	9204      	str	r2, [sp, #16]
 80050e6:	699b      	ldr	r3, [r3, #24]
 80050e8:	9304      	str	r3, [sp, #16]
 80050ea:	9b04      	ldr	r3, [sp, #16]
 80050ec:	e7d4      	b.n	8005098 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050ee:	9005      	str	r0, [sp, #20]
 80050f0:	695a      	ldr	r2, [r3, #20]
 80050f2:	9205      	str	r2, [sp, #20]
 80050f4:	699b      	ldr	r3, [r3, #24]
 80050f6:	9305      	str	r3, [sp, #20]
 80050f8:	9b05      	ldr	r3, [sp, #20]
 80050fa:	e7cd      	b.n	8005098 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80050fc:	2b03      	cmp	r3, #3
 80050fe:	d856      	bhi.n	80051ae <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005100:	2b01      	cmp	r3, #1
 8005102:	d115      	bne.n	8005130 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005104:	4632      	mov	r2, r6
 8005106:	4639      	mov	r1, r7
 8005108:	4620      	mov	r0, r4
 800510a:	f7ff fcb8 	bl	8004a7e <I2C_WaitOnRXNEFlagUntilTimeout>
 800510e:	2800      	cmp	r0, #0
 8005110:	d1b3      	bne.n	800507a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005112:	6823      	ldr	r3, [r4, #0]
 8005114:	691a      	ldr	r2, [r3, #16]
 8005116:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005118:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800511a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800511c:	3301      	adds	r3, #1
 800511e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005120:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005122:	3b01      	subs	r3, #1
 8005124:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005126:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005128:	3b01      	subs	r3, #1
 800512a:	b29b      	uxth	r3, r3
 800512c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800512e:	e7b5      	b.n	800509c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005130:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005132:	9600      	str	r6, [sp, #0]
 8005134:	463b      	mov	r3, r7
 8005136:	f04f 0200 	mov.w	r2, #0
 800513a:	4641      	mov	r1, r8
 800513c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800513e:	d119      	bne.n	8005174 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005140:	f7ff fccc 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8005144:	2800      	cmp	r0, #0
 8005146:	d198      	bne.n	800507a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005148:	6823      	ldr	r3, [r4, #0]
 800514a:	681a      	ldr	r2, [r3, #0]
 800514c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005150:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005152:	691a      	ldr	r2, [r3, #16]
 8005154:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005156:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005158:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800515a:	1c53      	adds	r3, r2, #1
 800515c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800515e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005160:	3b01      	subs	r3, #1
 8005162:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005164:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005166:	3b01      	subs	r3, #1
 8005168:	b29b      	uxth	r3, r3
 800516a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800516c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800516e:	691b      	ldr	r3, [r3, #16]
 8005170:	7053      	strb	r3, [r2, #1]
 8005172:	e7d2      	b.n	800511a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005174:	f7ff fcb2 	bl	8004adc <I2C_WaitOnFlagUntilTimeout>
 8005178:	2800      	cmp	r0, #0
 800517a:	f47f af7e 	bne.w	800507a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800517e:	6823      	ldr	r3, [r4, #0]
 8005180:	681a      	ldr	r2, [r3, #0]
 8005182:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005186:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005188:	691a      	ldr	r2, [r3, #16]
 800518a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800518c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800518e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005190:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005192:	3301      	adds	r3, #1
 8005194:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005196:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005198:	3b01      	subs	r3, #1
 800519a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800519c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800519e:	3b01      	subs	r3, #1
 80051a0:	b29b      	uxth	r3, r3
 80051a2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80051a4:	4602      	mov	r2, r0
 80051a6:	463b      	mov	r3, r7
 80051a8:	4641      	mov	r1, r8
 80051aa:	4620      	mov	r0, r4
 80051ac:	e7c8      	b.n	8005140 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80051ae:	4632      	mov	r2, r6
 80051b0:	4639      	mov	r1, r7
 80051b2:	4620      	mov	r0, r4
 80051b4:	f7ff fc63 	bl	8004a7e <I2C_WaitOnRXNEFlagUntilTimeout>
 80051b8:	2800      	cmp	r0, #0
 80051ba:	f47f af5e 	bne.w	800507a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80051be:	6823      	ldr	r3, [r4, #0]
 80051c0:	691a      	ldr	r2, [r3, #16]
 80051c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80051c4:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80051c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80051c8:	1c53      	adds	r3, r2, #1
 80051ca:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80051cc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80051ce:	3b01      	subs	r3, #1
 80051d0:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80051d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80051d4:	3b01      	subs	r3, #1
 80051d6:	b29b      	uxth	r3, r3
 80051d8:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80051da:	6823      	ldr	r3, [r4, #0]
 80051dc:	6959      	ldr	r1, [r3, #20]
 80051de:	0749      	lsls	r1, r1, #29
 80051e0:	f57f af5c 	bpl.w	800509c <HAL_I2C_Mem_Read+0xb8>
 80051e4:	e7c3      	b.n	800516e <HAL_I2C_Mem_Read+0x18a>
 80051e6:	bf00      	nop
 80051e8:	00100002 	.word	0x00100002
 80051ec:	ffff0000 	.word	0xffff0000
 80051f0:	00010004 	.word	0x00010004

080051f4 <HAL_I2C_GetState>:
  return hi2c->State;
 80051f4:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 80051f8:	4770      	bx	lr

080051fa <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80051fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80051fe:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005200:	6804      	ldr	r4, [r0, #0]
 8005202:	684f      	ldr	r7, [r1, #4]
 8005204:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005206:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800520a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800520e:	3284      	adds	r2, #132	; 0x84
 8005210:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005212:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005216:	6858      	ldr	r0, [r3, #4]
 8005218:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800521c:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800521e:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005220:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005224:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8005228:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800522a:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800522c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005230:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005232:	68e0      	ldr	r0, [r4, #12]
 8005234:	68cd      	ldr	r5, [r1, #12]
 8005236:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800523a:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800523c:	6898      	ldr	r0, [r3, #8]
 800523e:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005242:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005244:	68e6      	ldr	r6, [r4, #12]
 8005246:	6888      	ldr	r0, [r1, #8]
 8005248:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800524c:	3001      	adds	r0, #1
 800524e:	4430      	add	r0, r6
 8005250:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005254:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005256:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005258:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800525a:	f020 0007 	bic.w	r0, r0, #7
 800525e:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005260:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005264:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005266:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005268:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800526c:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005270:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005274:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005278:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800527c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005280:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005284:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005286:	6958      	ldr	r0, [r3, #20]
 8005288:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800528c:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800528e:	6948      	ldr	r0, [r1, #20]
 8005290:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005292:	69d8      	ldr	r0, [r3, #28]
 8005294:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8005298:	f020 0007 	bic.w	r0, r0, #7
 800529c:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800529e:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80052a2:	4305      	orrs	r5, r0
 80052a4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80052a6:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80052a8:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80052aa:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80052ae:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80052b0:	b31e      	cbz	r6, 80052fa <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80052b2:	2e01      	cmp	r6, #1
 80052b4:	d023      	beq.n	80052fe <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80052b6:	1eb0      	subs	r0, r6, #2
 80052b8:	2802      	cmp	r0, #2
 80052ba:	d922      	bls.n	8005302 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80052bc:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80052be:	bf0c      	ite	eq
 80052c0:	2002      	moveq	r0, #2
 80052c2:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80052c4:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80052c6:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80052ca:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80052cc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80052ce:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80052d0:	eba7 070c 	sub.w	r7, r7, ip
 80052d4:	4345      	muls	r5, r0
 80052d6:	4378      	muls	r0, r7
 80052d8:	3003      	adds	r0, #3
 80052da:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80052de:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80052e0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80052e2:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80052e6:	f020 0007 	bic.w	r0, r0, #7
 80052ea:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80052ec:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80052ee:	58a3      	ldr	r3, [r4, r2]
 80052f0:	f043 0301 	orr.w	r3, r3, #1
 80052f4:	50a3      	str	r3, [r4, r2]
}
 80052f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80052fa:	2004      	movs	r0, #4
 80052fc:	e7e2      	b.n	80052c4 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80052fe:	2003      	movs	r0, #3
 8005300:	e7e0      	b.n	80052c4 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005302:	2002      	movs	r0, #2
 8005304:	e7de      	b.n	80052c4 <LTDC_SetConfig+0xca>
	...

08005308 <HAL_LTDC_Init>:
{
 8005308:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800530a:	4604      	mov	r4, r0
 800530c:	2800      	cmp	r0, #0
 800530e:	d063      	beq.n	80053d8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005310:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005314:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005318:	b91b      	cbnz	r3, 8005322 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800531a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800531e:	f7fc fc27 	bl	8001b70 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005322:	2302      	movs	r3, #2
 8005324:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005328:	6823      	ldr	r3, [r4, #0]
 800532a:	699a      	ldr	r2, [r3, #24]
 800532c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005330:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005332:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005336:	4302      	orrs	r2, r0
 8005338:	68e0      	ldr	r0, [r4, #12]
 800533a:	6999      	ldr	r1, [r3, #24]
 800533c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800533e:	6920      	ldr	r0, [r4, #16]
 8005340:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005342:	430a      	orrs	r2, r1
 8005344:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005346:	689a      	ldr	r2, [r3, #8]
 8005348:	4924      	ldr	r1, [pc, #144]	; (80053dc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800534a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800534c:	400a      	ands	r2, r1
 800534e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005350:	689a      	ldr	r2, [r3, #8]
 8005352:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005356:	69a0      	ldr	r0, [r4, #24]
 8005358:	4302      	orrs	r2, r0
 800535a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800535c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800535e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005360:	400a      	ands	r2, r1
 8005362:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005364:	68da      	ldr	r2, [r3, #12]
 8005366:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800536a:	6a20      	ldr	r0, [r4, #32]
 800536c:	4302      	orrs	r2, r0
 800536e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005370:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005372:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005374:	400a      	ands	r2, r1
 8005376:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005378:	691a      	ldr	r2, [r3, #16]
 800537a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800537e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005380:	4302      	orrs	r2, r0
 8005382:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005384:	695a      	ldr	r2, [r3, #20]
 8005386:	4011      	ands	r1, r2
 8005388:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800538a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800538c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800538e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005392:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005394:	430a      	orrs	r2, r1
 8005396:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005398:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800539a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800539e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80053a2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80053a6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80053a8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80053aa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80053ae:	430a      	orrs	r2, r1
 80053b0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80053b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80053b8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80053ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053bc:	f042 0206 	orr.w	r2, r2, #6
 80053c0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80053c2:	699a      	ldr	r2, [r3, #24]
 80053c4:	f042 0201 	orr.w	r2, r2, #1
 80053c8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80053ca:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80053cc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80053ce:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80053d2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80053d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80053d8:	2001      	movs	r0, #1
 80053da:	e7fc      	b.n	80053d6 <HAL_LTDC_Init+0xce>
 80053dc:	f000f800 	.word	0xf000f800

080053e0 <HAL_LTDC_ErrorCallback>:
 80053e0:	4770      	bx	lr

080053e2 <HAL_LTDC_LineEventCallback>:
 80053e2:	4770      	bx	lr

080053e4 <HAL_LTDC_ReloadEventCallback>:
 80053e4:	4770      	bx	lr

080053e6 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80053e6:	6803      	ldr	r3, [r0, #0]
{
 80053e8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80053ea:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80053ec:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80053ee:	0772      	lsls	r2, r6, #29
{
 80053f0:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80053f2:	d514      	bpl.n	800541e <HAL_LTDC_IRQHandler+0x38>
 80053f4:	0769      	lsls	r1, r5, #29
 80053f6:	d512      	bpl.n	800541e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80053f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053fa:	f022 0204 	bic.w	r2, r2, #4
 80053fe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005400:	2204      	movs	r2, #4
 8005402:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005404:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005408:	f043 0301 	orr.w	r3, r3, #1
 800540c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005410:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005412:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005416:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800541a:	f7ff ffe1 	bl	80053e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800541e:	07b2      	lsls	r2, r6, #30
 8005420:	d516      	bpl.n	8005450 <HAL_LTDC_IRQHandler+0x6a>
 8005422:	07ab      	lsls	r3, r5, #30
 8005424:	d514      	bpl.n	8005450 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005426:	6823      	ldr	r3, [r4, #0]
 8005428:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800542a:	f022 0202 	bic.w	r2, r2, #2
 800542e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005430:	2202      	movs	r2, #2
 8005432:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005434:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005438:	4313      	orrs	r3, r2
 800543a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800543e:	2304      	movs	r3, #4
 8005440:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005444:	2300      	movs	r3, #0
 8005446:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800544a:	4620      	mov	r0, r4
 800544c:	f7ff ffc8 	bl	80053e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005450:	07f0      	lsls	r0, r6, #31
 8005452:	d510      	bpl.n	8005476 <HAL_LTDC_IRQHandler+0x90>
 8005454:	07e9      	lsls	r1, r5, #31
 8005456:	d50e      	bpl.n	8005476 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005458:	6823      	ldr	r3, [r4, #0]
 800545a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800545c:	f022 0201 	bic.w	r2, r2, #1
 8005460:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005462:	2201      	movs	r2, #1
 8005464:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005466:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005468:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800546c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005470:	4620      	mov	r0, r4
 8005472:	f7ff ffb6 	bl	80053e2 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005476:	0732      	lsls	r2, r6, #28
 8005478:	d511      	bpl.n	800549e <HAL_LTDC_IRQHandler+0xb8>
 800547a:	072b      	lsls	r3, r5, #28
 800547c:	d50f      	bpl.n	800549e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800547e:	6823      	ldr	r3, [r4, #0]
 8005480:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005482:	f022 0208 	bic.w	r2, r2, #8
 8005486:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005488:	2208      	movs	r2, #8
 800548a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800548c:	2301      	movs	r3, #1
 800548e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005492:	2300      	movs	r3, #0
 8005494:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005498:	4620      	mov	r0, r4
 800549a:	f7ff ffa3 	bl	80053e4 <HAL_LTDC_ReloadEventCallback>
}
 800549e:	bd70      	pop	{r4, r5, r6, pc}

080054a0 <HAL_LTDC_ConfigLayer>:
{
 80054a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80054a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80054a8:	2b01      	cmp	r3, #1
{
 80054aa:	4606      	mov	r6, r0
 80054ac:	460f      	mov	r7, r1
 80054ae:	4694      	mov	ip, r2
 80054b0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80054b4:	d01f      	beq.n	80054f6 <HAL_LTDC_ConfigLayer+0x56>
 80054b6:	f04f 0801 	mov.w	r8, #1
 80054ba:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80054be:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80054c2:	2434      	movs	r4, #52	; 0x34
 80054c4:	460d      	mov	r5, r1
 80054c6:	fb04 6402 	mla	r4, r4, r2, r6
 80054ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054cc:	3438      	adds	r4, #56	; 0x38
 80054ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80054d8:	682b      	ldr	r3, [r5, #0]
 80054da:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80054dc:	4630      	mov	r0, r6
 80054de:	4662      	mov	r2, ip
 80054e0:	4639      	mov	r1, r7
 80054e2:	f7ff fe8a 	bl	80051fa <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80054e6:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80054e8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80054ea:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80054ee:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80054f2:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80054f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080054fc <HAL_LTDC_SetPitch>:
{
 80054fc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 80054fe:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005502:	2b01      	cmp	r3, #1
 8005504:	f04f 0302 	mov.w	r3, #2
 8005508:	d02c      	beq.n	8005564 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800550a:	2434      	movs	r4, #52	; 0x34
 800550c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005510:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005514:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005516:	b33c      	cbz	r4, 8005568 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005518:	2c01      	cmp	r4, #1
 800551a:	d027      	beq.n	800556c <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800551c:	1ea5      	subs	r5, r4, #2
 800551e:	429d      	cmp	r5, r3
 8005520:	d902      	bls.n	8005528 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8005522:	2c07      	cmp	r4, #7
 8005524:	bf18      	it	ne
 8005526:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005528:	6804      	ldr	r4, [r0, #0]
 800552a:	01d2      	lsls	r2, r2, #7
 800552c:	3284      	adds	r2, #132	; 0x84
 800552e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005530:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005532:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005534:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005538:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800553c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800553e:	4c0c      	ldr	r4, [pc, #48]	; (8005570 <HAL_LTDC_SetPitch+0x74>)
 8005540:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005542:	f045 0501 	orr.w	r5, r5, #1
 8005546:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005548:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800554a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800554e:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005550:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005552:	f043 0301 	orr.w	r3, r3, #1
 8005556:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005558:	2301      	movs	r3, #1
 800555a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800555e:	2300      	movs	r3, #0
 8005560:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005564:	4618      	mov	r0, r3
 8005566:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005568:	2304      	movs	r3, #4
 800556a:	e7dd      	b.n	8005528 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800556c:	2303      	movs	r3, #3
 800556e:	e7db      	b.n	8005528 <HAL_LTDC_SetPitch+0x2c>
 8005570:	40016800 	.word	0x40016800

08005574 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005574:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005576:	2300      	movs	r3, #0
 8005578:	9301      	str	r3, [sp, #4]
 800557a:	4b18      	ldr	r3, [pc, #96]	; (80055dc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800557c:	4d18      	ldr	r5, [pc, #96]	; (80055e0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800557e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005580:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005584:	641a      	str	r2, [r3, #64]	; 0x40
 8005586:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005588:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800558c:	9301      	str	r3, [sp, #4]
 800558e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005590:	4b14      	ldr	r3, [pc, #80]	; (80055e4 <HAL_PWREx_EnableOverDrive+0x70>)
 8005592:	2201      	movs	r2, #1
 8005594:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005596:	f7fe f9fb 	bl	8003990 <HAL_GetTick>
 800559a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800559c:	686b      	ldr	r3, [r5, #4]
 800559e:	03da      	lsls	r2, r3, #15
 80055a0:	d50b      	bpl.n	80055ba <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80055a2:	4b11      	ldr	r3, [pc, #68]	; (80055e8 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80055a4:	4d0e      	ldr	r5, [pc, #56]	; (80055e0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80055a6:	2201      	movs	r2, #1
 80055a8:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80055aa:	f7fe f9f1 	bl	8003990 <HAL_GetTick>
 80055ae:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80055b0:	686b      	ldr	r3, [r5, #4]
 80055b2:	039b      	lsls	r3, r3, #14
 80055b4:	d50a      	bpl.n	80055cc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80055b6:	2000      	movs	r0, #0
 80055b8:	e006      	b.n	80055c8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80055ba:	f7fe f9e9 	bl	8003990 <HAL_GetTick>
 80055be:	1b00      	subs	r0, r0, r4
 80055c0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80055c4:	d9ea      	bls.n	800559c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80055c6:	2003      	movs	r0, #3
}
 80055c8:	b003      	add	sp, #12
 80055ca:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80055cc:	f7fe f9e0 	bl	8003990 <HAL_GetTick>
 80055d0:	1b00      	subs	r0, r0, r4
 80055d2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80055d6:	d9eb      	bls.n	80055b0 <HAL_PWREx_EnableOverDrive+0x3c>
 80055d8:	e7f5      	b.n	80055c6 <HAL_PWREx_EnableOverDrive+0x52>
 80055da:	bf00      	nop
 80055dc:	40023800 	.word	0x40023800
 80055e0:	40007000 	.word	0x40007000
 80055e4:	420e0040 	.word	0x420e0040
 80055e8:	420e0044 	.word	0x420e0044

080055ec <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80055ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80055f0:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 80055f2:	b13e      	cbz	r6, 8005604 <QSPI_Config+0x18>
 80055f4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80055f8:	bf1f      	itttt	ne
 80055fa:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 80055fc:	6804      	ldrne	r4, [r0, #0]
 80055fe:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005602:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005604:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8005608:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800560c:	f1ba 0f00 	cmp.w	sl, #0
 8005610:	d04e      	beq.n	80056b0 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005612:	694b      	ldr	r3, [r1, #20]
 8005614:	6805      	ldr	r5, [r0, #0]
 8005616:	f8d1 8000 	ldr.w	r8, [r1]
 800561a:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800561c:	ea46 0a0a 	orr.w	sl, r6, sl
 8005620:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 8005624:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8005628:	ea4a 0a02 	orr.w	sl, sl, r2
 800562c:	f1bc 0f00 	cmp.w	ip, #0
 8005630:	d026      	beq.n	8005680 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005632:	688b      	ldr	r3, [r1, #8]
 8005634:	690e      	ldr	r6, [r1, #16]
 8005636:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005638:	ea4c 0c0a 	orr.w	ip, ip, sl
 800563c:	b1a7      	cbz	r7, 8005668 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800563e:	ea48 0307 	orr.w	r3, r8, r7
 8005642:	4323      	orrs	r3, r4
 8005644:	ea43 0309 	orr.w	r3, r3, r9
 8005648:	4303      	orrs	r3, r0
 800564a:	68c8      	ldr	r0, [r1, #12]
 800564c:	4333      	orrs	r3, r6
 800564e:	4303      	orrs	r3, r0
 8005650:	ea43 030e 	orr.w	r3, r3, lr
 8005654:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005658:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800565c:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800565e:	d001      	beq.n	8005664 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005660:	684b      	ldr	r3, [r1, #4]
 8005662:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005664:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005668:	ea48 0304 	orr.w	r3, r8, r4
 800566c:	ea43 0309 	orr.w	r3, r3, r9
 8005670:	4303      	orrs	r3, r0
 8005672:	4333      	orrs	r3, r6
 8005674:	ea43 030e 	orr.w	r3, r3, lr
 8005678:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800567c:	616b      	str	r3, [r5, #20]
 800567e:	e7f1      	b.n	8005664 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005680:	b167      	cbz	r7, 800569c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005682:	ea48 0307 	orr.w	r3, r8, r7
 8005686:	4323      	orrs	r3, r4
 8005688:	ea43 0309 	orr.w	r3, r3, r9
 800568c:	4303      	orrs	r3, r0
 800568e:	68c8      	ldr	r0, [r1, #12]
 8005690:	4303      	orrs	r3, r0
 8005692:	ea43 030e 	orr.w	r3, r3, lr
 8005696:	ea43 030a 	orr.w	r3, r3, sl
 800569a:	e7dd      	b.n	8005658 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800569c:	ea48 0304 	orr.w	r3, r8, r4
 80056a0:	ea43 0309 	orr.w	r3, r3, r9
 80056a4:	4303      	orrs	r3, r0
 80056a6:	ea43 030e 	orr.w	r3, r3, lr
 80056aa:	ea43 030a 	orr.w	r3, r3, sl
 80056ae:	e7e5      	b.n	800567c <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80056b0:	f1bc 0f00 	cmp.w	ip, #0
 80056b4:	d028      	beq.n	8005708 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80056b6:	6804      	ldr	r4, [r0, #0]
 80056b8:	688b      	ldr	r3, [r1, #8]
 80056ba:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80056bc:	ea46 030c 	orr.w	r3, r6, ip
 80056c0:	694e      	ldr	r6, [r1, #20]
 80056c2:	6908      	ldr	r0, [r1, #16]
 80056c4:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80056c8:	ea43 0502 	orr.w	r5, r3, r2
 80056cc:	04b6      	lsls	r6, r6, #18
 80056ce:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 80056d2:	b187      	cbz	r7, 80056f6 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056d4:	4338      	orrs	r0, r7
 80056d6:	ea40 0008 	orr.w	r0, r0, r8
 80056da:	4303      	orrs	r3, r0
 80056dc:	68c8      	ldr	r0, [r1, #12]
 80056de:	ea43 030c 	orr.w	r3, r3, ip
 80056e2:	4303      	orrs	r3, r0
 80056e4:	4333      	orrs	r3, r6
 80056e6:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80056e8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056ec:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80056ee:	d0b9      	beq.n	8005664 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80056f0:	684b      	ldr	r3, [r1, #4]
 80056f2:	61a3      	str	r3, [r4, #24]
 80056f4:	e7b6      	b.n	8005664 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056f6:	ea40 0008 	orr.w	r0, r0, r8
 80056fa:	4303      	orrs	r3, r0
 80056fc:	ea43 030c 	orr.w	r3, r3, ip
 8005700:	4333      	orrs	r3, r6
 8005702:	432b      	orrs	r3, r5
 8005704:	6163      	str	r3, [r4, #20]
 8005706:	e7ad      	b.n	8005664 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005708:	b1af      	cbz	r7, 8005736 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800570a:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800570c:	6800      	ldr	r0, [r0, #0]
 800570e:	ea46 0307 	orr.w	r3, r6, r7
 8005712:	4313      	orrs	r3, r2
 8005714:	4323      	orrs	r3, r4
 8005716:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005718:	4323      	orrs	r3, r4
 800571a:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800571c:	4323      	orrs	r3, r4
 800571e:	68cc      	ldr	r4, [r1, #12]
 8005720:	4323      	orrs	r3, r4
 8005722:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005724:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005728:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800572c:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800572e:	d099      	beq.n	8005664 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005730:	684b      	ldr	r3, [r1, #4]
 8005732:	6183      	str	r3, [r0, #24]
 8005734:	e796      	b.n	8005664 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005736:	2e00      	cmp	r6, #0
 8005738:	d094      	beq.n	8005664 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800573a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800573c:	6800      	ldr	r0, [r0, #0]
 800573e:	4333      	orrs	r3, r6
 8005740:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005742:	431a      	orrs	r2, r3
 8005744:	4332      	orrs	r2, r6
 8005746:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005748:	694b      	ldr	r3, [r1, #20]
 800574a:	4332      	orrs	r2, r6
 800574c:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005750:	6142      	str	r2, [r0, #20]
}
 8005752:	e787      	b.n	8005664 <QSPI_Config+0x78>

08005754 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005758:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800575c:	4604      	mov	r4, r0
 800575e:	460e      	mov	r6, r1
 8005760:	4615      	mov	r5, r2
 8005762:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005764:	6822      	ldr	r2, [r4, #0]
 8005766:	6893      	ldr	r3, [r2, #8]
 8005768:	4233      	tst	r3, r6
 800576a:	bf14      	ite	ne
 800576c:	2301      	movne	r3, #1
 800576e:	2300      	moveq	r3, #0
 8005770:	42ab      	cmp	r3, r5
 8005772:	d101      	bne.n	8005778 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005774:	2000      	movs	r0, #0
 8005776:	e012      	b.n	800579e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005778:	f1b8 3fff 	cmp.w	r8, #4294967295
 800577c:	d0f3      	beq.n	8005766 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800577e:	f7fe f907 	bl	8003990 <HAL_GetTick>
 8005782:	1bc0      	subs	r0, r0, r7
 8005784:	4540      	cmp	r0, r8
 8005786:	d802      	bhi.n	800578e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005788:	f1b8 0f00 	cmp.w	r8, #0
 800578c:	d1ea      	bne.n	8005764 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800578e:	2304      	movs	r3, #4
 8005790:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005794:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005796:	f043 0301 	orr.w	r3, r3, #1
 800579a:	6463      	str	r3, [r4, #68]	; 0x44
 800579c:	2001      	movs	r0, #1
}
 800579e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080057a4 <HAL_QSPI_Init>:
{
 80057a4:	b530      	push	{r4, r5, lr}
 80057a6:	b085      	sub	sp, #20
 80057a8:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80057aa:	f7fe f8f1 	bl	8003990 <HAL_GetTick>
 80057ae:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80057b0:	2c00      	cmp	r4, #0
 80057b2:	d047      	beq.n	8005844 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80057b4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80057b8:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80057bc:	b94a      	cbnz	r2, 80057d2 <HAL_QSPI_Init+0x2e>
 80057be:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80057c0:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80057c4:	4620      	mov	r0, r4
 80057c6:	f7fc fa07 	bl	8001bd8 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80057ca:	f241 3288 	movw	r2, #5000	; 0x1388
 80057ce:	9b03      	ldr	r3, [sp, #12]
 80057d0:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80057d2:	6820      	ldr	r0, [r4, #0]
 80057d4:	68a1      	ldr	r1, [r4, #8]
 80057d6:	6802      	ldr	r2, [r0, #0]
 80057d8:	3901      	subs	r1, #1
 80057da:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80057de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80057e2:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80057e4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80057e6:	9200      	str	r2, [sp, #0]
 80057e8:	2120      	movs	r1, #32
 80057ea:	2200      	movs	r2, #0
 80057ec:	4620      	mov	r0, r4
 80057ee:	f7ff ffb1 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80057f2:	bb10      	cbnz	r0, 800583a <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80057f4:	69e5      	ldr	r5, [r4, #28]
 80057f6:	68e3      	ldr	r3, [r4, #12]
 80057f8:	6822      	ldr	r2, [r4, #0]
 80057fa:	432b      	orrs	r3, r5
 80057fc:	6a25      	ldr	r5, [r4, #32]
 80057fe:	6811      	ldr	r1, [r2, #0]
 8005800:	432b      	orrs	r3, r5
 8005802:	6865      	ldr	r5, [r4, #4]
 8005804:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005808:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800580c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005810:	430b      	orrs	r3, r1
 8005812:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005814:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005818:	430b      	orrs	r3, r1
 800581a:	6921      	ldr	r1, [r4, #16]
 800581c:	6855      	ldr	r5, [r2, #4]
 800581e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005822:	4909      	ldr	r1, [pc, #36]	; (8005848 <HAL_QSPI_Init+0xa4>)
 8005824:	4029      	ands	r1, r5
 8005826:	430b      	orrs	r3, r1
 8005828:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800582a:	6813      	ldr	r3, [r2, #0]
 800582c:	f043 0301 	orr.w	r3, r3, #1
 8005830:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005832:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005834:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005836:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800583a:	2300      	movs	r3, #0
 800583c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005840:	b005      	add	sp, #20
 8005842:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005844:	2001      	movs	r0, #1
 8005846:	e7fb      	b.n	8005840 <HAL_QSPI_Init+0x9c>
 8005848:	ffe0f8fe 	.word	0xffe0f8fe

0800584c <HAL_QSPI_DeInit>:
{
 800584c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800584e:	4604      	mov	r4, r0
 8005850:	b168      	cbz	r0, 800586e <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005852:	6802      	ldr	r2, [r0, #0]
 8005854:	6813      	ldr	r3, [r2, #0]
 8005856:	f023 0301 	bic.w	r3, r3, #1
 800585a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800585c:	f7fc fa16 	bl	8001c8c <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005860:	2000      	movs	r0, #0
 8005862:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005864:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005868:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800586c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800586e:	2001      	movs	r0, #1
 8005870:	e7fc      	b.n	800586c <HAL_QSPI_DeInit+0x20>

08005872 <HAL_QSPI_Command>:
{
 8005872:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005876:	4604      	mov	r4, r0
 8005878:	b085      	sub	sp, #20
 800587a:	4617      	mov	r7, r2
 800587c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800587e:	f7fe f887 	bl	8003990 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005882:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005886:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005888:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800588a:	d034      	beq.n	80058f6 <HAL_QSPI_Command+0x84>
 800588c:	2201      	movs	r2, #1
 800588e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005892:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005896:	2a01      	cmp	r2, #1
 8005898:	fa5f f882 	uxtb.w	r8, r2
 800589c:	f04f 0602 	mov.w	r6, #2
 80058a0:	d127      	bne.n	80058f2 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058a2:	2200      	movs	r2, #0
 80058a4:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80058a6:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80058a8:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80058ac:	9700      	str	r7, [sp, #0]
 80058ae:	2120      	movs	r1, #32
 80058b0:	4620      	mov	r0, r4
 80058b2:	f7ff ff4f 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80058b6:	4605      	mov	r5, r0
 80058b8:	b9a0      	cbnz	r0, 80058e4 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80058ba:	4602      	mov	r2, r0
 80058bc:	4649      	mov	r1, r9
 80058be:	4620      	mov	r0, r4
 80058c0:	f7ff fe94 	bl	80055ec <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80058c4:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80058c8:	9b03      	ldr	r3, [sp, #12]
 80058ca:	b94a      	cbnz	r2, 80058e0 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80058cc:	9700      	str	r7, [sp, #0]
 80058ce:	4642      	mov	r2, r8
 80058d0:	4631      	mov	r1, r6
 80058d2:	4620      	mov	r0, r4
 80058d4:	f7ff ff3e 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80058d8:	4605      	mov	r5, r0
 80058da:	b918      	cbnz	r0, 80058e4 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80058dc:	6823      	ldr	r3, [r4, #0]
 80058de:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80058e0:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80058e4:	2300      	movs	r3, #0
 80058e6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80058ea:	4628      	mov	r0, r5
 80058ec:	b005      	add	sp, #20
 80058ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80058f2:	4635      	mov	r5, r6
 80058f4:	e7f6      	b.n	80058e4 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80058f6:	2502      	movs	r5, #2
 80058f8:	e7f7      	b.n	80058ea <HAL_QSPI_Command+0x78>

080058fa <HAL_QSPI_AutoPolling>:
{
 80058fa:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80058fe:	4604      	mov	r4, r0
 8005900:	4615      	mov	r5, r2
 8005902:	461e      	mov	r6, r3
 8005904:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005906:	f7fe f843 	bl	8003990 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800590a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800590e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005910:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005912:	d040      	beq.n	8005996 <HAL_QSPI_AutoPolling+0x9c>
 8005914:	2201      	movs	r2, #1
 8005916:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800591a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800591e:	2a01      	cmp	r2, #1
 8005920:	b2d7      	uxtb	r7, r2
 8005922:	d136      	bne.n	8005992 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005924:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005926:	2200      	movs	r2, #0
 8005928:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800592a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800592c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005930:	9600      	str	r6, [sp, #0]
 8005932:	2120      	movs	r1, #32
 8005934:	4620      	mov	r0, r4
 8005936:	f7ff ff0d 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800593a:	bb20      	cbnz	r0, 8005986 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800593c:	6821      	ldr	r1, [r4, #0]
 800593e:	682a      	ldr	r2, [r5, #0]
 8005940:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005942:	686a      	ldr	r2, [r5, #4]
 8005944:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005946:	68aa      	ldr	r2, [r5, #8]
 8005948:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800594a:	680a      	ldr	r2, [r1, #0]
 800594c:	6928      	ldr	r0, [r5, #16]
 800594e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005952:	4302      	orrs	r2, r0
 8005954:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005958:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800595a:	68ea      	ldr	r2, [r5, #12]
 800595c:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005960:	4641      	mov	r1, r8
 8005962:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005966:	4620      	mov	r0, r4
 8005968:	f7ff fe40 	bl	80055ec <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800596c:	9b03      	ldr	r3, [sp, #12]
 800596e:	9600      	str	r6, [sp, #0]
 8005970:	463a      	mov	r2, r7
 8005972:	2108      	movs	r1, #8
 8005974:	4620      	mov	r0, r4
 8005976:	f7ff feed 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800597a:	b920      	cbnz	r0, 8005986 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800597c:	6823      	ldr	r3, [r4, #0]
 800597e:	2208      	movs	r2, #8
 8005980:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005982:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005986:	2300      	movs	r3, #0
 8005988:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800598c:	b004      	add	sp, #16
 800598e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005992:	2002      	movs	r0, #2
 8005994:	e7f7      	b.n	8005986 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005996:	2002      	movs	r0, #2
 8005998:	e7f8      	b.n	800598c <HAL_QSPI_AutoPolling+0x92>

0800599a <HAL_QSPI_MemoryMapped>:
{
 800599a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800599c:	4604      	mov	r4, r0
 800599e:	4616      	mov	r6, r2
 80059a0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80059a2:	f7fd fff5 	bl	8003990 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80059a6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80059aa:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80059ac:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80059ae:	d032      	beq.n	8005a16 <HAL_QSPI_MemoryMapped+0x7c>
 80059b0:	2201      	movs	r2, #1
 80059b2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80059b6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80059ba:	2a01      	cmp	r2, #1
 80059bc:	d129      	bne.n	8005a12 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80059be:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80059c0:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80059c2:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80059c4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80059c8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80059ca:	9100      	str	r1, [sp, #0]
 80059cc:	4620      	mov	r0, r4
 80059ce:	2120      	movs	r1, #32
 80059d0:	f7ff fec0 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80059d4:	4605      	mov	r5, r0
 80059d6:	b9b0      	cbnz	r0, 8005a06 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80059d8:	6823      	ldr	r3, [r4, #0]
 80059da:	6872      	ldr	r2, [r6, #4]
 80059dc:	6818      	ldr	r0, [r3, #0]
 80059de:	f020 0008 	bic.w	r0, r0, #8
 80059e2:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80059e4:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80059e6:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80059e8:	d107      	bne.n	80059fa <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80059ea:	6832      	ldr	r2, [r6, #0]
 80059ec:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80059ee:	2210      	movs	r2, #16
 80059f0:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80059f2:	681a      	ldr	r2, [r3, #0]
 80059f4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80059f8:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80059fa:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80059fe:	4639      	mov	r1, r7
 8005a00:	4620      	mov	r0, r4
 8005a02:	f7ff fdf3 	bl	80055ec <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005a06:	2300      	movs	r3, #0
 8005a08:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005a0c:	4628      	mov	r0, r5
 8005a0e:	b003      	add	sp, #12
 8005a10:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005a12:	2502      	movs	r5, #2
 8005a14:	e7f7      	b.n	8005a06 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005a16:	2502      	movs	r5, #2
 8005a18:	e7f8      	b.n	8005a0c <HAL_QSPI_MemoryMapped+0x72>

08005a1a <HAL_QSPI_Abort>:
{
 8005a1a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005a1c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005a1e:	f7fd ffb7 	bl	8003990 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005a22:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8005a26:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005a28:	f012 0002 	ands.w	r0, r2, #2
 8005a2c:	d036      	beq.n	8005a9c <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8005a2e:	2200      	movs	r2, #0
 8005a30:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005a34:	6822      	ldr	r2, [r4, #0]
 8005a36:	6811      	ldr	r1, [r2, #0]
 8005a38:	0749      	lsls	r1, r1, #29
 8005a3a:	d50d      	bpl.n	8005a58 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005a3c:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005a3e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005a40:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005a42:	f021 0104 	bic.w	r1, r1, #4
 8005a46:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005a48:	f7fe f8f2 	bl	8003c30 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005a4c:	9b03      	ldr	r3, [sp, #12]
 8005a4e:	b118      	cbz	r0, 8005a58 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005a50:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005a52:	f042 0204 	orr.w	r2, r2, #4
 8005a56:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005a58:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005a5a:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005a5c:	680a      	ldr	r2, [r1, #0]
 8005a5e:	f042 0202 	orr.w	r2, r2, #2
 8005a62:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005a64:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005a66:	9200      	str	r2, [sp, #0]
 8005a68:	2102      	movs	r1, #2
 8005a6a:	2201      	movs	r2, #1
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	f7ff fe71 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005a72:	9b03      	ldr	r3, [sp, #12]
 8005a74:	b990      	cbnz	r0, 8005a9c <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005a76:	6822      	ldr	r2, [r4, #0]
 8005a78:	2102      	movs	r1, #2
 8005a7a:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005a7c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005a7e:	9200      	str	r2, [sp, #0]
 8005a80:	2120      	movs	r1, #32
 8005a82:	4602      	mov	r2, r0
 8005a84:	4620      	mov	r0, r4
 8005a86:	f7ff fe65 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005a8a:	b938      	cbnz	r0, 8005a9c <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005a8c:	6822      	ldr	r2, [r4, #0]
 8005a8e:	6953      	ldr	r3, [r2, #20]
 8005a90:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005a94:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005a96:	2301      	movs	r3, #1
 8005a98:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005a9c:	b004      	add	sp, #16
 8005a9e:	bd10      	pop	{r4, pc}

08005aa0 <HAL_QSPI_Transmit>:
{
 8005aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005aa2:	4604      	mov	r4, r0
 8005aa4:	b085      	sub	sp, #20
 8005aa6:	4616      	mov	r6, r2
 8005aa8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005aaa:	f7fd ff71 	bl	8003990 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005aae:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005ab2:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005ab4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005ab6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005ab8:	d04c      	beq.n	8005b54 <HAL_QSPI_Transmit+0xb4>
 8005aba:	2201      	movs	r2, #1
 8005abc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005ac0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005ac4:	2a01      	cmp	r2, #1
 8005ac6:	b2d0      	uxtb	r0, r2
 8005ac8:	d142      	bne.n	8005b50 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005aca:	2200      	movs	r2, #0
 8005acc:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005ace:	2f00      	cmp	r7, #0
 8005ad0:	d039      	beq.n	8005b46 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005ad2:	2212      	movs	r2, #18
 8005ad4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ad8:	692a      	ldr	r2, [r5, #16]
 8005ada:	3201      	adds	r2, #1
 8005adc:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ade:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005ae0:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ae2:	3201      	adds	r2, #1
 8005ae4:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005ae6:	696a      	ldr	r2, [r5, #20]
 8005ae8:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005aec:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005aee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005af0:	b9a2      	cbnz	r2, 8005b1c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005af2:	9600      	str	r6, [sp, #0]
 8005af4:	2201      	movs	r2, #1
 8005af6:	2102      	movs	r1, #2
 8005af8:	4620      	mov	r0, r4
 8005afa:	f7ff fe2b 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005afe:	b928      	cbnz	r0, 8005b0c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005b00:	6823      	ldr	r3, [r4, #0]
 8005b02:	2202      	movs	r2, #2
 8005b04:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005b06:	4620      	mov	r0, r4
 8005b08:	f7ff ff87 	bl	8005a1a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005b0c:	2301      	movs	r3, #1
 8005b0e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005b12:	2300      	movs	r3, #0
 8005b14:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005b18:	b005      	add	sp, #20
 8005b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005b1c:	9600      	str	r6, [sp, #0]
 8005b1e:	2201      	movs	r2, #1
 8005b20:	2104      	movs	r1, #4
 8005b22:	4620      	mov	r0, r4
 8005b24:	9303      	str	r3, [sp, #12]
 8005b26:	f7ff fe15 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005b2a:	2800      	cmp	r0, #0
 8005b2c:	d1ee      	bne.n	8005b0c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005b2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005b30:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005b32:	7812      	ldrb	r2, [r2, #0]
 8005b34:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005b38:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005b3a:	3201      	adds	r2, #1
 8005b3c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005b3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005b40:	3a01      	subs	r2, #1
 8005b42:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005b44:	e7d3      	b.n	8005aee <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005b46:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005b48:	f043 0308 	orr.w	r3, r3, #8
 8005b4c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005b4e:	e7e0      	b.n	8005b12 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005b50:	2002      	movs	r0, #2
 8005b52:	e7de      	b.n	8005b12 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005b54:	2002      	movs	r0, #2
 8005b56:	e7df      	b.n	8005b18 <HAL_QSPI_Transmit+0x78>

08005b58 <HAL_QSPI_Receive>:
{
 8005b58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b5a:	4604      	mov	r4, r0
 8005b5c:	b085      	sub	sp, #20
 8005b5e:	4616      	mov	r6, r2
 8005b60:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005b62:	f7fd ff15 	bl	8003990 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005b66:	6825      	ldr	r5, [r4, #0]
 8005b68:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005b6c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005b70:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005b72:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005b74:	d050      	beq.n	8005c18 <HAL_QSPI_Receive+0xc0>
 8005b76:	2201      	movs	r2, #1
 8005b78:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005b7c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005b80:	2a01      	cmp	r2, #1
 8005b82:	b2d0      	uxtb	r0, r2
 8005b84:	d146      	bne.n	8005c14 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b86:	2200      	movs	r2, #0
 8005b88:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005b8a:	2f00      	cmp	r7, #0
 8005b8c:	d03d      	beq.n	8005c0a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005b8e:	2222      	movs	r2, #34	; 0x22
 8005b90:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b94:	692a      	ldr	r2, [r5, #16]
 8005b96:	3201      	adds	r2, #1
 8005b98:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b9a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005b9c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b9e:	3201      	adds	r2, #1
 8005ba0:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005ba2:	6969      	ldr	r1, [r5, #20]
 8005ba4:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005ba8:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8005bac:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005bae:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005bb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005bb4:	b9a2      	cbnz	r2, 8005be0 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005bb6:	9600      	str	r6, [sp, #0]
 8005bb8:	2201      	movs	r2, #1
 8005bba:	2102      	movs	r1, #2
 8005bbc:	4620      	mov	r0, r4
 8005bbe:	f7ff fdc9 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005bc2:	b928      	cbnz	r0, 8005bd0 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005bc4:	6823      	ldr	r3, [r4, #0]
 8005bc6:	2202      	movs	r2, #2
 8005bc8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005bca:	4620      	mov	r0, r4
 8005bcc:	f7ff ff25 	bl	8005a1a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005bd0:	2301      	movs	r3, #1
 8005bd2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005bd6:	2300      	movs	r3, #0
 8005bd8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005bdc:	b005      	add	sp, #20
 8005bde:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005be0:	9600      	str	r6, [sp, #0]
 8005be2:	2201      	movs	r2, #1
 8005be4:	2106      	movs	r1, #6
 8005be6:	4620      	mov	r0, r4
 8005be8:	9303      	str	r3, [sp, #12]
 8005bea:	f7ff fdb3 	bl	8005754 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005bee:	2800      	cmp	r0, #0
 8005bf0:	d1ee      	bne.n	8005bd0 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005bf2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005bf4:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005bf8:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005bfa:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005bfc:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005bfe:	3201      	adds	r2, #1
 8005c00:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005c02:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005c04:	3a01      	subs	r2, #1
 8005c06:	63a2      	str	r2, [r4, #56]	; 0x38
 8005c08:	e7d3      	b.n	8005bb2 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005c0a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005c0c:	f043 0308 	orr.w	r3, r3, #8
 8005c10:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005c12:	e7e0      	b.n	8005bd6 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005c14:	2002      	movs	r0, #2
 8005c16:	e7de      	b.n	8005bd6 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005c18:	2002      	movs	r0, #2
 8005c1a:	e7df      	b.n	8005bdc <HAL_QSPI_Receive+0x84>

08005c1c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005c1c:	4913      	ldr	r1, [pc, #76]	; (8005c6c <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005c1e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005c20:	688b      	ldr	r3, [r1, #8]
 8005c22:	f003 030c 	and.w	r3, r3, #12
 8005c26:	2b04      	cmp	r3, #4
 8005c28:	d01c      	beq.n	8005c64 <HAL_RCC_GetSysClockFreq+0x48>
 8005c2a:	2b08      	cmp	r3, #8
 8005c2c:	d11c      	bne.n	8005c68 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005c2e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005c30:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005c32:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005c34:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005c38:	bf14      	ite	ne
 8005c3a:	480d      	ldrne	r0, [pc, #52]	; (8005c70 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005c3c:	480d      	ldreq	r0, [pc, #52]	; (8005c74 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005c3e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005c42:	bf18      	it	ne
 8005c44:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005c46:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005c4a:	fba1 0100 	umull	r0, r1, r1, r0
 8005c4e:	f7fa fb27 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005c52:	4b06      	ldr	r3, [pc, #24]	; (8005c6c <HAL_RCC_GetSysClockFreq+0x50>)
 8005c54:	685b      	ldr	r3, [r3, #4]
 8005c56:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005c5a:	3301      	adds	r3, #1
 8005c5c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005c5e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005c62:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005c64:	4802      	ldr	r0, [pc, #8]	; (8005c70 <HAL_RCC_GetSysClockFreq+0x54>)
 8005c66:	e7fc      	b.n	8005c62 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005c68:	4802      	ldr	r0, [pc, #8]	; (8005c74 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005c6a:	e7fa      	b.n	8005c62 <HAL_RCC_GetSysClockFreq+0x46>
 8005c6c:	40023800 	.word	0x40023800
 8005c70:	007a1200 	.word	0x007a1200
 8005c74:	00f42400 	.word	0x00f42400

08005c78 <HAL_RCC_ClockConfig>:
{
 8005c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c7c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005c7e:	4604      	mov	r4, r0
 8005c80:	b910      	cbnz	r0, 8005c88 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005c82:	2001      	movs	r0, #1
}
 8005c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005c88:	4b44      	ldr	r3, [pc, #272]	; (8005d9c <HAL_RCC_ClockConfig+0x124>)
 8005c8a:	681a      	ldr	r2, [r3, #0]
 8005c8c:	f002 020f 	and.w	r2, r2, #15
 8005c90:	428a      	cmp	r2, r1
 8005c92:	d328      	bcc.n	8005ce6 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005c94:	6822      	ldr	r2, [r4, #0]
 8005c96:	0797      	lsls	r7, r2, #30
 8005c98:	d42d      	bmi.n	8005cf6 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005c9a:	07d0      	lsls	r0, r2, #31
 8005c9c:	d441      	bmi.n	8005d22 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005c9e:	4b3f      	ldr	r3, [pc, #252]	; (8005d9c <HAL_RCC_ClockConfig+0x124>)
 8005ca0:	681a      	ldr	r2, [r3, #0]
 8005ca2:	f002 020f 	and.w	r2, r2, #15
 8005ca6:	42aa      	cmp	r2, r5
 8005ca8:	d866      	bhi.n	8005d78 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005caa:	6822      	ldr	r2, [r4, #0]
 8005cac:	0751      	lsls	r1, r2, #29
 8005cae:	d46c      	bmi.n	8005d8a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005cb0:	0713      	lsls	r3, r2, #28
 8005cb2:	d507      	bpl.n	8005cc4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005cb4:	4a3a      	ldr	r2, [pc, #232]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005cb6:	6921      	ldr	r1, [r4, #16]
 8005cb8:	6893      	ldr	r3, [r2, #8]
 8005cba:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005cbe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005cc2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005cc4:	f7ff ffaa 	bl	8005c1c <HAL_RCC_GetSysClockFreq>
 8005cc8:	4b35      	ldr	r3, [pc, #212]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005cca:	4a36      	ldr	r2, [pc, #216]	; (8005da4 <HAL_RCC_ClockConfig+0x12c>)
 8005ccc:	689b      	ldr	r3, [r3, #8]
 8005cce:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005cd2:	5cd3      	ldrb	r3, [r2, r3]
 8005cd4:	40d8      	lsrs	r0, r3
 8005cd6:	4b34      	ldr	r3, [pc, #208]	; (8005da8 <HAL_RCC_ClockConfig+0x130>)
 8005cd8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005cda:	4b34      	ldr	r3, [pc, #208]	; (8005dac <HAL_RCC_ClockConfig+0x134>)
 8005cdc:	6818      	ldr	r0, [r3, #0]
 8005cde:	f7fc f8ab 	bl	8001e38 <HAL_InitTick>
  return HAL_OK;
 8005ce2:	2000      	movs	r0, #0
 8005ce4:	e7ce      	b.n	8005c84 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005ce6:	b2ca      	uxtb	r2, r1
 8005ce8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	f003 030f 	and.w	r3, r3, #15
 8005cf0:	428b      	cmp	r3, r1
 8005cf2:	d1c6      	bne.n	8005c82 <HAL_RCC_ClockConfig+0xa>
 8005cf4:	e7ce      	b.n	8005c94 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005cf6:	4b2a      	ldr	r3, [pc, #168]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005cf8:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005cfc:	bf1e      	ittt	ne
 8005cfe:	6899      	ldrne	r1, [r3, #8]
 8005d00:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005d04:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005d06:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005d08:	bf42      	ittt	mi
 8005d0a:	6899      	ldrmi	r1, [r3, #8]
 8005d0c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005d10:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005d12:	4923      	ldr	r1, [pc, #140]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005d14:	68a0      	ldr	r0, [r4, #8]
 8005d16:	688b      	ldr	r3, [r1, #8]
 8005d18:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005d1c:	4303      	orrs	r3, r0
 8005d1e:	608b      	str	r3, [r1, #8]
 8005d20:	e7bb      	b.n	8005c9a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005d22:	6862      	ldr	r2, [r4, #4]
 8005d24:	4b1e      	ldr	r3, [pc, #120]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005d26:	2a01      	cmp	r2, #1
 8005d28:	d11c      	bne.n	8005d64 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005d30:	d0a7      	beq.n	8005c82 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005d32:	4e1b      	ldr	r6, [pc, #108]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005d34:	68b3      	ldr	r3, [r6, #8]
 8005d36:	f023 0303 	bic.w	r3, r3, #3
 8005d3a:	4313      	orrs	r3, r2
 8005d3c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005d3e:	f7fd fe27 	bl	8003990 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005d42:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005d46:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005d48:	68b3      	ldr	r3, [r6, #8]
 8005d4a:	6862      	ldr	r2, [r4, #4]
 8005d4c:	f003 030c 	and.w	r3, r3, #12
 8005d50:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005d54:	d0a3      	beq.n	8005c9e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005d56:	f7fd fe1b 	bl	8003990 <HAL_GetTick>
 8005d5a:	1bc0      	subs	r0, r0, r7
 8005d5c:	4540      	cmp	r0, r8
 8005d5e:	d9f3      	bls.n	8005d48 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005d60:	2003      	movs	r0, #3
 8005d62:	e78f      	b.n	8005c84 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005d64:	1e91      	subs	r1, r2, #2
 8005d66:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d68:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005d6a:	d802      	bhi.n	8005d72 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d6c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005d70:	e7de      	b.n	8005d30 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005d72:	f013 0f02 	tst.w	r3, #2
 8005d76:	e7db      	b.n	8005d30 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005d78:	b2ea      	uxtb	r2, r5
 8005d7a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	f003 030f 	and.w	r3, r3, #15
 8005d82:	42ab      	cmp	r3, r5
 8005d84:	f47f af7d 	bne.w	8005c82 <HAL_RCC_ClockConfig+0xa>
 8005d88:	e78f      	b.n	8005caa <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005d8a:	4905      	ldr	r1, [pc, #20]	; (8005da0 <HAL_RCC_ClockConfig+0x128>)
 8005d8c:	68e0      	ldr	r0, [r4, #12]
 8005d8e:	688b      	ldr	r3, [r1, #8]
 8005d90:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005d94:	4303      	orrs	r3, r0
 8005d96:	608b      	str	r3, [r1, #8]
 8005d98:	e78a      	b.n	8005cb0 <HAL_RCC_ClockConfig+0x38>
 8005d9a:	bf00      	nop
 8005d9c:	40023c00 	.word	0x40023c00
 8005da0:	40023800 	.word	0x40023800
 8005da4:	0801d5d5 	.word	0x0801d5d5
 8005da8:	20000050 	.word	0x20000050
 8005dac:	20000058 	.word	0x20000058

08005db0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005db0:	4b04      	ldr	r3, [pc, #16]	; (8005dc4 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005db2:	4a05      	ldr	r2, [pc, #20]	; (8005dc8 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005db4:	689b      	ldr	r3, [r3, #8]
 8005db6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005dba:	5cd3      	ldrb	r3, [r2, r3]
 8005dbc:	4a03      	ldr	r2, [pc, #12]	; (8005dcc <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005dbe:	6810      	ldr	r0, [r2, #0]
}
 8005dc0:	40d8      	lsrs	r0, r3
 8005dc2:	4770      	bx	lr
 8005dc4:	40023800 	.word	0x40023800
 8005dc8:	0801d5e5 	.word	0x0801d5e5
 8005dcc:	20000050 	.word	0x20000050

08005dd0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005dd0:	230f      	movs	r3, #15
 8005dd2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005dd4:	4b0b      	ldr	r3, [pc, #44]	; (8005e04 <HAL_RCC_GetClockConfig+0x34>)
 8005dd6:	689a      	ldr	r2, [r3, #8]
 8005dd8:	f002 0203 	and.w	r2, r2, #3
 8005ddc:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005dde:	689a      	ldr	r2, [r3, #8]
 8005de0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005de4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005de6:	689a      	ldr	r2, [r3, #8]
 8005de8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005dec:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005dee:	689b      	ldr	r3, [r3, #8]
 8005df0:	08db      	lsrs	r3, r3, #3
 8005df2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005df6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005df8:	4b03      	ldr	r3, [pc, #12]	; (8005e08 <HAL_RCC_GetClockConfig+0x38>)
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	f003 030f 	and.w	r3, r3, #15
 8005e00:	600b      	str	r3, [r1, #0]
}
 8005e02:	4770      	bx	lr
 8005e04:	40023800 	.word	0x40023800
 8005e08:	40023c00 	.word	0x40023c00

08005e0c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005e0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005e0e:	6802      	ldr	r2, [r0, #0]
{
 8005e10:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005e12:	0610      	lsls	r0, r2, #24
 8005e14:	d508      	bpl.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005e16:	49a8      	ldr	r1, [pc, #672]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e18:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005e1a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005e1e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8005e22:	4303      	orrs	r3, r0
 8005e24:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8005e28:	05d1      	lsls	r1, r2, #23
 8005e2a:	d508      	bpl.n	8005e3e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8005e2c:	49a2      	ldr	r1, [pc, #648]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e2e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005e30:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005e34:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005e38:	4303      	orrs	r3, r0
 8005e3a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005e3e:	f012 0f43 	tst.w	r2, #67	; 0x43
 8005e42:	d172      	bne.n	8005f2a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005e44:	6823      	ldr	r3, [r4, #0]
 8005e46:	f013 0f0c 	tst.w	r3, #12
 8005e4a:	f000 80bf 	beq.w	8005fcc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005e4e:	4d9b      	ldr	r5, [pc, #620]	; (80060bc <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005e50:	4e99      	ldr	r6, [pc, #612]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005e52:	2300      	movs	r3, #0
 8005e54:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005e56:	f7fd fd9b 	bl	8003990 <HAL_GetTick>
 8005e5a:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005e5c:	6833      	ldr	r3, [r6, #0]
 8005e5e:	009a      	lsls	r2, r3, #2
 8005e60:	f100 80f9 	bmi.w	8006056 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005e64:	6822      	ldr	r2, [r4, #0]
 8005e66:	0753      	lsls	r3, r2, #29
 8005e68:	d51a      	bpl.n	8005ea0 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005e6a:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005e6e:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8005e72:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005e76:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8005e7a:	430b      	orrs	r3, r1
 8005e7c:	6921      	ldr	r1, [r4, #16]
 8005e7e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8005e82:	69a1      	ldr	r1, [r4, #24]
 8005e84:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8005e88:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005e8c:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8005e90:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005e92:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005e96:	3901      	subs	r1, #1
 8005e98:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005e9c:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005ea0:	0717      	lsls	r7, r2, #28
 8005ea2:	d519      	bpl.n	8005ed8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005ea4:	4984      	ldr	r1, [pc, #528]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005ea6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005eaa:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8005eae:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005eb2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8005eb6:	4303      	orrs	r3, r0
 8005eb8:	6920      	ldr	r0, [r4, #16]
 8005eba:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005ebe:	69e0      	ldr	r0, [r4, #28]
 8005ec0:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8005ec4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005ec8:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005ecc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005ece:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005ed2:	4303      	orrs	r3, r0
 8005ed4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8005ed8:	0616      	lsls	r6, r2, #24
 8005eda:	d517      	bpl.n	8005f0c <HAL_RCCEx_PeriphCLKConfig+0x100>
 8005edc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005ede:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005ee2:	d113      	bne.n	8005f0c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005ee4:	4974      	ldr	r1, [pc, #464]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005ee6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005eea:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8005eee:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8005ef2:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005ef6:	4313      	orrs	r3, r2
 8005ef8:	6922      	ldr	r2, [r4, #16]
 8005efa:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005efe:	6962      	ldr	r2, [r4, #20]
 8005f00:	0852      	lsrs	r2, r2, #1
 8005f02:	3a01      	subs	r2, #1
 8005f04:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005f08:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005f0c:	2301      	movs	r3, #1
 8005f0e:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005f10:	f7fd fd3e 	bl	8003990 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005f14:	4e68      	ldr	r6, [pc, #416]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005f16:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005f18:	6833      	ldr	r3, [r6, #0]
 8005f1a:	0098      	lsls	r0, r3, #2
 8005f1c:	d458      	bmi.n	8005fd0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005f1e:	f7fd fd37 	bl	8003990 <HAL_GetTick>
 8005f22:	1b40      	subs	r0, r0, r5
 8005f24:	2802      	cmp	r0, #2
 8005f26:	d9f7      	bls.n	8005f18 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005f28:	e04d      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 8005f2a:	4d65      	ldr	r5, [pc, #404]	; (80060c0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005f2c:	4f62      	ldr	r7, [pc, #392]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005f2e:	2300      	movs	r3, #0
 8005f30:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005f32:	f7fd fd2d 	bl	8003990 <HAL_GetTick>
 8005f36:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005f38:	683b      	ldr	r3, [r7, #0]
 8005f3a:	011b      	lsls	r3, r3, #4
 8005f3c:	d43e      	bmi.n	8005fbc <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005f3e:	6821      	ldr	r1, [r4, #0]
 8005f40:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005f42:	bf41      	itttt	mi
 8005f44:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005f48:	071b      	lslmi	r3, r3, #28
 8005f4a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005f4e:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005f52:	078a      	lsls	r2, r1, #30
 8005f54:	d515      	bpl.n	8005f82 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005f56:	4a58      	ldr	r2, [pc, #352]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005f58:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005f5a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005f5e:	6866      	ldr	r6, [r4, #4]
 8005f60:	061b      	lsls	r3, r3, #24
 8005f62:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8005f66:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8005f6a:	4303      	orrs	r3, r0
 8005f6c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005f70:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005f74:	6a23      	ldr	r3, [r4, #32]
 8005f76:	f020 001f 	bic.w	r0, r0, #31
 8005f7a:	3b01      	subs	r3, #1
 8005f7c:	4303      	orrs	r3, r0
 8005f7e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005f82:	064b      	lsls	r3, r1, #25
 8005f84:	d50a      	bpl.n	8005f9c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005f86:	68e3      	ldr	r3, [r4, #12]
 8005f88:	6862      	ldr	r2, [r4, #4]
 8005f8a:	061b      	lsls	r3, r3, #24
 8005f8c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005f90:	68a2      	ldr	r2, [r4, #8]
 8005f92:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005f96:	4a48      	ldr	r2, [pc, #288]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005f98:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005f9c:	2301      	movs	r3, #1
 8005f9e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005fa0:	f7fd fcf6 	bl	8003990 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005fa4:	4e44      	ldr	r6, [pc, #272]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005fa6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005fa8:	6833      	ldr	r3, [r6, #0]
 8005faa:	011f      	lsls	r7, r3, #4
 8005fac:	f53f af4a 	bmi.w	8005e44 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005fb0:	f7fd fcee 	bl	8003990 <HAL_GetTick>
 8005fb4:	1b40      	subs	r0, r0, r5
 8005fb6:	2802      	cmp	r0, #2
 8005fb8:	d9f6      	bls.n	8005fa8 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8005fba:	e004      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005fbc:	f7fd fce8 	bl	8003990 <HAL_GetTick>
 8005fc0:	1b80      	subs	r0, r0, r6
 8005fc2:	2802      	cmp	r0, #2
 8005fc4:	d9b8      	bls.n	8005f38 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005fc6:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8005fc8:	b003      	add	sp, #12
 8005fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8005fcc:	0618      	lsls	r0, r3, #24
 8005fce:	d43d      	bmi.n	800604c <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005fd0:	6823      	ldr	r3, [r4, #0]
 8005fd2:	0699      	lsls	r1, r3, #26
 8005fd4:	d530      	bpl.n	8006038 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 8005fd6:	2300      	movs	r3, #0
 8005fd8:	9301      	str	r3, [sp, #4]
 8005fda:	4b37      	ldr	r3, [pc, #220]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 8005fdc:	4d39      	ldr	r5, [pc, #228]	; (80060c4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005fde:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005fe0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005fe4:	641a      	str	r2, [r3, #64]	; 0x40
 8005fe6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fe8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005fec:	9301      	str	r3, [sp, #4]
 8005fee:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005ff0:	682b      	ldr	r3, [r5, #0]
 8005ff2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ff6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005ff8:	f7fd fcca 	bl	8003990 <HAL_GetTick>
 8005ffc:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005ffe:	682b      	ldr	r3, [r5, #0]
 8006000:	05d9      	lsls	r1, r3, #23
 8006002:	d52f      	bpl.n	8006064 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006004:	4d2c      	ldr	r5, [pc, #176]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8006006:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006008:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800600c:	d130      	bne.n	8006070 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800600e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006010:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006014:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006018:	4a27      	ldr	r2, [pc, #156]	; (80060b8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800601a:	d148      	bne.n	80060ae <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800601c:	6891      	ldr	r1, [r2, #8]
 800601e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006022:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006026:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800602a:	4301      	orrs	r1, r0
 800602c:	6091      	str	r1, [r2, #8]
 800602e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006030:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006034:	430b      	orrs	r3, r1
 8006036:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006038:	6820      	ldr	r0, [r4, #0]
 800603a:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800603e:	bf1f      	itttt	ne
 8006040:	4b21      	ldrne	r3, [pc, #132]	; (80060c8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8006042:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006046:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8006048:	2000      	movne	r0, #0
 800604a:	e7bd      	b.n	8005fc8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800604c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800604e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006052:	d1bd      	bne.n	8005fd0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8006054:	e6fb      	b.n	8005e4e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006056:	f7fd fc9b 	bl	8003990 <HAL_GetTick>
 800605a:	1bc0      	subs	r0, r0, r7
 800605c:	2802      	cmp	r0, #2
 800605e:	f67f aefd 	bls.w	8005e5c <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006062:	e7b0      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006064:	f7fd fc94 	bl	8003990 <HAL_GetTick>
 8006068:	1b80      	subs	r0, r0, r6
 800606a:	2802      	cmp	r0, #2
 800606c:	d9c7      	bls.n	8005ffe <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800606e:	e7aa      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006070:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006072:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006076:	4293      	cmp	r3, r2
 8006078:	d0c9      	beq.n	800600e <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800607a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800607c:	4a13      	ldr	r2, [pc, #76]	; (80060cc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800607e:	2101      	movs	r1, #1
 8006080:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006082:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006086:	2100      	movs	r1, #0
 8006088:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800608a:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800608c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800608e:	07da      	lsls	r2, r3, #31
 8006090:	d5bd      	bpl.n	800600e <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8006092:	f7fd fc7d 	bl	8003990 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006096:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800609a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800609c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800609e:	079b      	lsls	r3, r3, #30
 80060a0:	d4b5      	bmi.n	800600e <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80060a2:	f7fd fc75 	bl	8003990 <HAL_GetTick>
 80060a6:	1b80      	subs	r0, r0, r6
 80060a8:	42b8      	cmp	r0, r7
 80060aa:	d9f7      	bls.n	800609c <HAL_RCCEx_PeriphCLKConfig+0x290>
 80060ac:	e78b      	b.n	8005fc6 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80060ae:	6891      	ldr	r1, [r2, #8]
 80060b0:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80060b4:	e7ba      	b.n	800602c <HAL_RCCEx_PeriphCLKConfig+0x220>
 80060b6:	bf00      	nop
 80060b8:	40023800 	.word	0x40023800
 80060bc:	42470070 	.word	0x42470070
 80060c0:	42470068 	.word	0x42470068
 80060c4:	40007000 	.word	0x40007000
 80060c8:	424711e0 	.word	0x424711e0
 80060cc:	42470e40 	.word	0x42470e40

080060d0 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80060d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80060d4:	4604      	mov	r4, r0
 80060d6:	b340      	cbz	r0, 800612a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80060d8:	6803      	ldr	r3, [r0, #0]
 80060da:	07dd      	lsls	r5, r3, #31
 80060dc:	d410      	bmi.n	8006100 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80060de:	6823      	ldr	r3, [r4, #0]
 80060e0:	0798      	lsls	r0, r3, #30
 80060e2:	d45e      	bmi.n	80061a2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80060e4:	6823      	ldr	r3, [r4, #0]
 80060e6:	071a      	lsls	r2, r3, #28
 80060e8:	f100 80a0 	bmi.w	800622c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80060ec:	6823      	ldr	r3, [r4, #0]
 80060ee:	075b      	lsls	r3, r3, #29
 80060f0:	f100 80be 	bmi.w	8006270 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80060f4:	69a0      	ldr	r0, [r4, #24]
 80060f6:	2800      	cmp	r0, #0
 80060f8:	f040 811f 	bne.w	800633a <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80060fc:	2000      	movs	r0, #0
 80060fe:	e02b      	b.n	8006158 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006100:	4ba7      	ldr	r3, [pc, #668]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 8006102:	689a      	ldr	r2, [r3, #8]
 8006104:	f002 020c 	and.w	r2, r2, #12
 8006108:	2a04      	cmp	r2, #4
 800610a:	d007      	beq.n	800611c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800610c:	689a      	ldr	r2, [r3, #8]
 800610e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006112:	2a08      	cmp	r2, #8
 8006114:	d10b      	bne.n	800612e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006116:	685a      	ldr	r2, [r3, #4]
 8006118:	0251      	lsls	r1, r2, #9
 800611a:	d508      	bpl.n	800612e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800611c:	4ba0      	ldr	r3, [pc, #640]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	039a      	lsls	r2, r3, #14
 8006122:	d5dc      	bpl.n	80060de <HAL_RCC_OscConfig+0xe>
 8006124:	6863      	ldr	r3, [r4, #4]
 8006126:	2b00      	cmp	r3, #0
 8006128:	d1d9      	bne.n	80060de <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800612a:	2001      	movs	r0, #1
 800612c:	e014      	b.n	8006158 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800612e:	6862      	ldr	r2, [r4, #4]
 8006130:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006134:	d113      	bne.n	800615e <HAL_RCC_OscConfig+0x8e>
 8006136:	681a      	ldr	r2, [r3, #0]
 8006138:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800613c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800613e:	f7fd fc27 	bl	8003990 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006142:	4e97      	ldr	r6, [pc, #604]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006144:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006146:	6833      	ldr	r3, [r6, #0]
 8006148:	039b      	lsls	r3, r3, #14
 800614a:	d4c8      	bmi.n	80060de <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800614c:	f7fd fc20 	bl	8003990 <HAL_GetTick>
 8006150:	1b40      	subs	r0, r0, r5
 8006152:	2864      	cmp	r0, #100	; 0x64
 8006154:	d9f7      	bls.n	8006146 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006156:	2003      	movs	r0, #3
}
 8006158:	b002      	add	sp, #8
 800615a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800615e:	4d90      	ldr	r5, [pc, #576]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 8006160:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006164:	682b      	ldr	r3, [r5, #0]
 8006166:	d107      	bne.n	8006178 <HAL_RCC_OscConfig+0xa8>
 8006168:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800616c:	602b      	str	r3, [r5, #0]
 800616e:	682b      	ldr	r3, [r5, #0]
 8006170:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006174:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006176:	e7e2      	b.n	800613e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006178:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800617c:	602b      	str	r3, [r5, #0]
 800617e:	682b      	ldr	r3, [r5, #0]
 8006180:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006184:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006186:	2a00      	cmp	r2, #0
 8006188:	d1d9      	bne.n	800613e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800618a:	f7fd fc01 	bl	8003990 <HAL_GetTick>
 800618e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006190:	682b      	ldr	r3, [r5, #0]
 8006192:	039f      	lsls	r7, r3, #14
 8006194:	d5a3      	bpl.n	80060de <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006196:	f7fd fbfb 	bl	8003990 <HAL_GetTick>
 800619a:	1b80      	subs	r0, r0, r6
 800619c:	2864      	cmp	r0, #100	; 0x64
 800619e:	d9f7      	bls.n	8006190 <HAL_RCC_OscConfig+0xc0>
 80061a0:	e7d9      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80061a2:	4b7f      	ldr	r3, [pc, #508]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 80061a4:	689a      	ldr	r2, [r3, #8]
 80061a6:	f012 0f0c 	tst.w	r2, #12
 80061aa:	d007      	beq.n	80061bc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80061ac:	689a      	ldr	r2, [r3, #8]
 80061ae:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80061b2:	2a08      	cmp	r2, #8
 80061b4:	d111      	bne.n	80061da <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80061b6:	685b      	ldr	r3, [r3, #4]
 80061b8:	025e      	lsls	r6, r3, #9
 80061ba:	d40e      	bmi.n	80061da <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80061bc:	4b78      	ldr	r3, [pc, #480]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 80061be:	681a      	ldr	r2, [r3, #0]
 80061c0:	0795      	lsls	r5, r2, #30
 80061c2:	d502      	bpl.n	80061ca <HAL_RCC_OscConfig+0xfa>
 80061c4:	68e2      	ldr	r2, [r4, #12]
 80061c6:	2a01      	cmp	r2, #1
 80061c8:	d1af      	bne.n	800612a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80061ca:	681a      	ldr	r2, [r3, #0]
 80061cc:	6921      	ldr	r1, [r4, #16]
 80061ce:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80061d2:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 80061d6:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80061d8:	e784      	b.n	80060e4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80061da:	68e2      	ldr	r2, [r4, #12]
 80061dc:	4b71      	ldr	r3, [pc, #452]	; (80063a4 <HAL_RCC_OscConfig+0x2d4>)
 80061de:	b1b2      	cbz	r2, 800620e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80061e0:	2201      	movs	r2, #1
 80061e2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80061e4:	f7fd fbd4 	bl	8003990 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80061e8:	4d6d      	ldr	r5, [pc, #436]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80061ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80061ec:	682b      	ldr	r3, [r5, #0]
 80061ee:	0798      	lsls	r0, r3, #30
 80061f0:	d507      	bpl.n	8006202 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80061f2:	682b      	ldr	r3, [r5, #0]
 80061f4:	6922      	ldr	r2, [r4, #16]
 80061f6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80061fa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80061fe:	602b      	str	r3, [r5, #0]
 8006200:	e770      	b.n	80060e4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006202:	f7fd fbc5 	bl	8003990 <HAL_GetTick>
 8006206:	1b80      	subs	r0, r0, r6
 8006208:	2802      	cmp	r0, #2
 800620a:	d9ef      	bls.n	80061ec <HAL_RCC_OscConfig+0x11c>
 800620c:	e7a3      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800620e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006210:	f7fd fbbe 	bl	8003990 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006214:	4e62      	ldr	r6, [pc, #392]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006216:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006218:	6833      	ldr	r3, [r6, #0]
 800621a:	0799      	lsls	r1, r3, #30
 800621c:	f57f af62 	bpl.w	80060e4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006220:	f7fd fbb6 	bl	8003990 <HAL_GetTick>
 8006224:	1b40      	subs	r0, r0, r5
 8006226:	2802      	cmp	r0, #2
 8006228:	d9f6      	bls.n	8006218 <HAL_RCC_OscConfig+0x148>
 800622a:	e794      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800622c:	6962      	ldr	r2, [r4, #20]
 800622e:	4b5e      	ldr	r3, [pc, #376]	; (80063a8 <HAL_RCC_OscConfig+0x2d8>)
 8006230:	b17a      	cbz	r2, 8006252 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006232:	2201      	movs	r2, #1
 8006234:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006236:	f7fd fbab 	bl	8003990 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800623a:	4e59      	ldr	r6, [pc, #356]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800623c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800623e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006240:	079f      	lsls	r7, r3, #30
 8006242:	f53f af53 	bmi.w	80060ec <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006246:	f7fd fba3 	bl	8003990 <HAL_GetTick>
 800624a:	1b40      	subs	r0, r0, r5
 800624c:	2802      	cmp	r0, #2
 800624e:	d9f6      	bls.n	800623e <HAL_RCC_OscConfig+0x16e>
 8006250:	e781      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006252:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006254:	f7fd fb9c 	bl	8003990 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006258:	4e51      	ldr	r6, [pc, #324]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800625a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800625c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800625e:	0798      	lsls	r0, r3, #30
 8006260:	f57f af44 	bpl.w	80060ec <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006264:	f7fd fb94 	bl	8003990 <HAL_GetTick>
 8006268:	1b40      	subs	r0, r0, r5
 800626a:	2802      	cmp	r0, #2
 800626c:	d9f6      	bls.n	800625c <HAL_RCC_OscConfig+0x18c>
 800626e:	e772      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006270:	4b4b      	ldr	r3, [pc, #300]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 8006272:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006274:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006278:	d128      	bne.n	80062cc <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800627a:	9201      	str	r2, [sp, #4]
 800627c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800627e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006282:	641a      	str	r2, [r3, #64]	; 0x40
 8006284:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006286:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800628a:	9301      	str	r3, [sp, #4]
 800628c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800628e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006290:	4d46      	ldr	r5, [pc, #280]	; (80063ac <HAL_RCC_OscConfig+0x2dc>)
 8006292:	682b      	ldr	r3, [r5, #0]
 8006294:	05d9      	lsls	r1, r3, #23
 8006296:	d51b      	bpl.n	80062d0 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006298:	68a3      	ldr	r3, [r4, #8]
 800629a:	4d41      	ldr	r5, [pc, #260]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 800629c:	2b01      	cmp	r3, #1
 800629e:	d127      	bne.n	80062f0 <HAL_RCC_OscConfig+0x220>
 80062a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80062a2:	f043 0301 	orr.w	r3, r3, #1
 80062a6:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80062a8:	f7fd fb72 	bl	8003990 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80062ac:	4e3c      	ldr	r6, [pc, #240]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80062ae:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062b0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80062b4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80062b6:	079b      	lsls	r3, r3, #30
 80062b8:	d539      	bpl.n	800632e <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 80062ba:	2f00      	cmp	r7, #0
 80062bc:	f43f af1a 	beq.w	80060f4 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80062c0:	4a37      	ldr	r2, [pc, #220]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 80062c2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80062c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80062c8:	6413      	str	r3, [r2, #64]	; 0x40
 80062ca:	e713      	b.n	80060f4 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80062cc:	2700      	movs	r7, #0
 80062ce:	e7df      	b.n	8006290 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80062d0:	682b      	ldr	r3, [r5, #0]
 80062d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80062d6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80062d8:	f7fd fb5a 	bl	8003990 <HAL_GetTick>
 80062dc:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80062de:	682b      	ldr	r3, [r5, #0]
 80062e0:	05da      	lsls	r2, r3, #23
 80062e2:	d4d9      	bmi.n	8006298 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80062e4:	f7fd fb54 	bl	8003990 <HAL_GetTick>
 80062e8:	1b80      	subs	r0, r0, r6
 80062ea:	2802      	cmp	r0, #2
 80062ec:	d9f7      	bls.n	80062de <HAL_RCC_OscConfig+0x20e>
 80062ee:	e732      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80062f0:	2b05      	cmp	r3, #5
 80062f2:	d104      	bne.n	80062fe <HAL_RCC_OscConfig+0x22e>
 80062f4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80062f6:	f043 0304 	orr.w	r3, r3, #4
 80062fa:	672b      	str	r3, [r5, #112]	; 0x70
 80062fc:	e7d0      	b.n	80062a0 <HAL_RCC_OscConfig+0x1d0>
 80062fe:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006300:	f022 0201 	bic.w	r2, r2, #1
 8006304:	672a      	str	r2, [r5, #112]	; 0x70
 8006306:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006308:	f022 0204 	bic.w	r2, r2, #4
 800630c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800630e:	2b00      	cmp	r3, #0
 8006310:	d1ca      	bne.n	80062a8 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8006312:	f7fd fb3d 	bl	8003990 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006316:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800631a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800631c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800631e:	0798      	lsls	r0, r3, #30
 8006320:	d5cb      	bpl.n	80062ba <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006322:	f7fd fb35 	bl	8003990 <HAL_GetTick>
 8006326:	1b80      	subs	r0, r0, r6
 8006328:	4540      	cmp	r0, r8
 800632a:	d9f7      	bls.n	800631c <HAL_RCC_OscConfig+0x24c>
 800632c:	e713      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800632e:	f7fd fb2f 	bl	8003990 <HAL_GetTick>
 8006332:	1b40      	subs	r0, r0, r5
 8006334:	4540      	cmp	r0, r8
 8006336:	d9bd      	bls.n	80062b4 <HAL_RCC_OscConfig+0x1e4>
 8006338:	e70d      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800633a:	4d19      	ldr	r5, [pc, #100]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
 800633c:	68ab      	ldr	r3, [r5, #8]
 800633e:	f003 030c 	and.w	r3, r3, #12
 8006342:	2b08      	cmp	r3, #8
 8006344:	d049      	beq.n	80063da <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006346:	4e1a      	ldr	r6, [pc, #104]	; (80063b0 <HAL_RCC_OscConfig+0x2e0>)
 8006348:	2300      	movs	r3, #0
 800634a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800634c:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800634e:	d137      	bne.n	80063c0 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006350:	f7fd fb1e 	bl	8003990 <HAL_GetTick>
 8006354:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006356:	682b      	ldr	r3, [r5, #0]
 8006358:	0199      	lsls	r1, r3, #6
 800635a:	d42b      	bmi.n	80063b4 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800635c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006360:	4313      	orrs	r3, r2
 8006362:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006364:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006368:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800636a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800636e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006370:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006374:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006376:	0852      	lsrs	r2, r2, #1
 8006378:	3a01      	subs	r2, #1
 800637a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800637e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006380:	2301      	movs	r3, #1
 8006382:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006384:	f7fd fb04 	bl	8003990 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006388:	4d05      	ldr	r5, [pc, #20]	; (80063a0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800638a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800638c:	682b      	ldr	r3, [r5, #0]
 800638e:	019a      	lsls	r2, r3, #6
 8006390:	f53f aeb4 	bmi.w	80060fc <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006394:	f7fd fafc 	bl	8003990 <HAL_GetTick>
 8006398:	1b00      	subs	r0, r0, r4
 800639a:	2802      	cmp	r0, #2
 800639c:	d9f6      	bls.n	800638c <HAL_RCC_OscConfig+0x2bc>
 800639e:	e6da      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
 80063a0:	40023800 	.word	0x40023800
 80063a4:	42470000 	.word	0x42470000
 80063a8:	42470e80 	.word	0x42470e80
 80063ac:	40007000 	.word	0x40007000
 80063b0:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80063b4:	f7fd faec 	bl	8003990 <HAL_GetTick>
 80063b8:	1bc0      	subs	r0, r0, r7
 80063ba:	2802      	cmp	r0, #2
 80063bc:	d9cb      	bls.n	8006356 <HAL_RCC_OscConfig+0x286>
 80063be:	e6ca      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80063c0:	f7fd fae6 	bl	8003990 <HAL_GetTick>
 80063c4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80063c6:	682b      	ldr	r3, [r5, #0]
 80063c8:	019b      	lsls	r3, r3, #6
 80063ca:	f57f ae97 	bpl.w	80060fc <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80063ce:	f7fd fadf 	bl	8003990 <HAL_GetTick>
 80063d2:	1b00      	subs	r0, r0, r4
 80063d4:	2802      	cmp	r0, #2
 80063d6:	d9f6      	bls.n	80063c6 <HAL_RCC_OscConfig+0x2f6>
 80063d8:	e6bd      	b.n	8006156 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80063da:	2801      	cmp	r0, #1
 80063dc:	f43f aebc 	beq.w	8006158 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80063e0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80063e2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80063e4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80063e8:	4291      	cmp	r1, r2
 80063ea:	f47f ae9e 	bne.w	800612a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80063ee:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80063f0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80063f4:	428a      	cmp	r2, r1
 80063f6:	f47f ae98 	bne.w	800612a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80063fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80063fc:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006400:	401a      	ands	r2, r3
 8006402:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006406:	f47f ae90 	bne.w	800612a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800640a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800640c:	0852      	lsrs	r2, r2, #1
 800640e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006412:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006414:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006418:	f47f ae87 	bne.w	800612a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800641c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800641e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006422:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8006426:	f47f ae80 	bne.w	800612a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800642a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800642c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006430:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8006434:	f43f ae62 	beq.w	80060fc <HAL_RCC_OscConfig+0x2c>
 8006438:	e677      	b.n	800612a <HAL_RCC_OscConfig+0x5a>
 800643a:	bf00      	nop

0800643c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800643c:	b538      	push	{r3, r4, r5, lr}
 800643e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006440:	4604      	mov	r4, r0
 8006442:	b1c8      	cbz	r0, 8006478 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006444:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006448:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800644c:	b91b      	cbnz	r3, 8006456 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800644e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006452:	f7fb fc39 	bl	8001cc8 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006456:	2302      	movs	r3, #2
 8006458:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800645c:	1d21      	adds	r1, r4, #4
 800645e:	6820      	ldr	r0, [r4, #0]
 8006460:	f000 f9b8 	bl	80067d4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006464:	6862      	ldr	r2, [r4, #4]
 8006466:	6820      	ldr	r0, [r4, #0]
 8006468:	4629      	mov	r1, r5
 800646a:	f000 f9e9 	bl	8006840 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800646e:	2301      	movs	r3, #1
 8006470:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006474:	2000      	movs	r0, #0
}
 8006476:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006478:	2001      	movs	r0, #1
 800647a:	e7fc      	b.n	8006476 <HAL_SDRAM_Init+0x3a>

0800647c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800647c:	b510      	push	{r4, lr}
 800647e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006480:	f7fb fc98 	bl	8001db4 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006484:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006488:	f000 fa16 	bl	80068b8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800648c:	2000      	movs	r0, #0
 800648e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006492:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006496:	bd10      	pop	{r4, pc}

08006498 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006498:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800649a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800649e:	2b02      	cmp	r3, #2
{
 80064a0:	4604      	mov	r4, r0
 80064a2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80064a4:	b2d8      	uxtb	r0, r3
 80064a6:	d00d      	beq.n	80064c4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80064a8:	2302      	movs	r3, #2
 80064aa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80064ae:	6820      	ldr	r0, [r4, #0]
 80064b0:	f000 fa11 	bl	80068d6 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80064b4:	682b      	ldr	r3, [r5, #0]
 80064b6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80064b8:	bf0c      	ite	eq
 80064ba:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80064bc:	2301      	movne	r3, #1
 80064be:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80064c2:	2000      	movs	r0, #0
}
 80064c4:	bd38      	pop	{r3, r4, r5, pc}

080064c6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80064c6:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80064c8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80064cc:	2b02      	cmp	r3, #2
{
 80064ce:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80064d0:	b2d8      	uxtb	r0, r3
 80064d2:	d009      	beq.n	80064e8 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80064d4:	2302      	movs	r3, #2
 80064d6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80064da:	6820      	ldr	r0, [r4, #0]
 80064dc:	f000 fa22 	bl	8006924 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80064e0:	2301      	movs	r3, #1
 80064e2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80064e6:	2000      	movs	r0, #0
}
 80064e8:	bd10      	pop	{r4, pc}

080064ea <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80064ea:	4770      	bx	lr

080064ec <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80064ec:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80064f0:	2b01      	cmp	r3, #1
 80064f2:	d130      	bne.n	8006556 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80064f4:	2302      	movs	r3, #2
 80064f6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80064fa:	6803      	ldr	r3, [r0, #0]
 80064fc:	68da      	ldr	r2, [r3, #12]
 80064fe:	f042 0201 	orr.w	r2, r2, #1
 8006502:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006504:	4a15      	ldr	r2, [pc, #84]	; (800655c <HAL_TIM_Base_Start_IT+0x70>)
 8006506:	4293      	cmp	r3, r2
 8006508:	d01a      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 800650a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800650e:	d017      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006510:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006514:	4293      	cmp	r3, r2
 8006516:	d013      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006518:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800651c:	4293      	cmp	r3, r2
 800651e:	d00f      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006520:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006524:	4293      	cmp	r3, r2
 8006526:	d00b      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006528:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800652c:	4293      	cmp	r3, r2
 800652e:	d007      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006530:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006534:	4293      	cmp	r3, r2
 8006536:	d003      	beq.n	8006540 <HAL_TIM_Base_Start_IT+0x54>
 8006538:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800653c:	4293      	cmp	r3, r2
 800653e:	d104      	bne.n	800654a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006540:	689a      	ldr	r2, [r3, #8]
 8006542:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006546:	2a06      	cmp	r2, #6
 8006548:	d003      	beq.n	8006552 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800654a:	681a      	ldr	r2, [r3, #0]
 800654c:	f042 0201 	orr.w	r2, r2, #1
 8006550:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006552:	2000      	movs	r0, #0
}
 8006554:	4770      	bx	lr
    return HAL_ERROR;
 8006556:	2001      	movs	r0, #1
 8006558:	4770      	bx	lr
 800655a:	bf00      	nop
 800655c:	40010000 	.word	0x40010000

08006560 <HAL_TIM_OC_DelayElapsedCallback>:
 8006560:	4770      	bx	lr

08006562 <HAL_TIM_IC_CaptureCallback>:
 8006562:	4770      	bx	lr

08006564 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006564:	4770      	bx	lr

08006566 <HAL_TIM_TriggerCallback>:
 8006566:	4770      	bx	lr

08006568 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006568:	6803      	ldr	r3, [r0, #0]
 800656a:	691a      	ldr	r2, [r3, #16]
 800656c:	0791      	lsls	r1, r2, #30
{
 800656e:	b510      	push	{r4, lr}
 8006570:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006572:	d50e      	bpl.n	8006592 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006574:	68da      	ldr	r2, [r3, #12]
 8006576:	0792      	lsls	r2, r2, #30
 8006578:	d50b      	bpl.n	8006592 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800657a:	f06f 0202 	mvn.w	r2, #2
 800657e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006580:	2201      	movs	r2, #1
 8006582:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006584:	699b      	ldr	r3, [r3, #24]
 8006586:	079b      	lsls	r3, r3, #30
 8006588:	d077      	beq.n	800667a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800658a:	f7ff ffea 	bl	8006562 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800658e:	2300      	movs	r3, #0
 8006590:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006592:	6823      	ldr	r3, [r4, #0]
 8006594:	691a      	ldr	r2, [r3, #16]
 8006596:	0750      	lsls	r0, r2, #29
 8006598:	d510      	bpl.n	80065bc <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800659a:	68da      	ldr	r2, [r3, #12]
 800659c:	0751      	lsls	r1, r2, #29
 800659e:	d50d      	bpl.n	80065bc <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80065a0:	f06f 0204 	mvn.w	r2, #4
 80065a4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80065a6:	2202      	movs	r2, #2
 80065a8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80065aa:	699b      	ldr	r3, [r3, #24]
 80065ac:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80065b0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80065b2:	d068      	beq.n	8006686 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80065b4:	f7ff ffd5 	bl	8006562 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80065b8:	2300      	movs	r3, #0
 80065ba:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80065bc:	6823      	ldr	r3, [r4, #0]
 80065be:	691a      	ldr	r2, [r3, #16]
 80065c0:	0712      	lsls	r2, r2, #28
 80065c2:	d50f      	bpl.n	80065e4 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80065c4:	68da      	ldr	r2, [r3, #12]
 80065c6:	0710      	lsls	r0, r2, #28
 80065c8:	d50c      	bpl.n	80065e4 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80065ca:	f06f 0208 	mvn.w	r2, #8
 80065ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80065d0:	2204      	movs	r2, #4
 80065d2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80065d4:	69db      	ldr	r3, [r3, #28]
 80065d6:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80065d8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80065da:	d05a      	beq.n	8006692 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80065dc:	f7ff ffc1 	bl	8006562 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80065e0:	2300      	movs	r3, #0
 80065e2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80065e4:	6823      	ldr	r3, [r4, #0]
 80065e6:	691a      	ldr	r2, [r3, #16]
 80065e8:	06d2      	lsls	r2, r2, #27
 80065ea:	d510      	bpl.n	800660e <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80065ec:	68da      	ldr	r2, [r3, #12]
 80065ee:	06d0      	lsls	r0, r2, #27
 80065f0:	d50d      	bpl.n	800660e <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80065f2:	f06f 0210 	mvn.w	r2, #16
 80065f6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80065f8:	2208      	movs	r2, #8
 80065fa:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80065fc:	69db      	ldr	r3, [r3, #28]
 80065fe:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006602:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006604:	d04b      	beq.n	800669e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006606:	f7ff ffac 	bl	8006562 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800660a:	2300      	movs	r3, #0
 800660c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800660e:	6823      	ldr	r3, [r4, #0]
 8006610:	691a      	ldr	r2, [r3, #16]
 8006612:	07d1      	lsls	r1, r2, #31
 8006614:	d508      	bpl.n	8006628 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006616:	68da      	ldr	r2, [r3, #12]
 8006618:	07d2      	lsls	r2, r2, #31
 800661a:	d505      	bpl.n	8006628 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800661c:	f06f 0201 	mvn.w	r2, #1
 8006620:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006622:	4620      	mov	r0, r4
 8006624:	f7fb f99e 	bl	8001964 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006628:	6823      	ldr	r3, [r4, #0]
 800662a:	691a      	ldr	r2, [r3, #16]
 800662c:	0610      	lsls	r0, r2, #24
 800662e:	d508      	bpl.n	8006642 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006630:	68da      	ldr	r2, [r3, #12]
 8006632:	0611      	lsls	r1, r2, #24
 8006634:	d505      	bpl.n	8006642 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006636:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800663a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800663c:	4620      	mov	r0, r4
 800663e:	f000 f8c8 	bl	80067d2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006642:	6823      	ldr	r3, [r4, #0]
 8006644:	691a      	ldr	r2, [r3, #16]
 8006646:	0652      	lsls	r2, r2, #25
 8006648:	d508      	bpl.n	800665c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800664a:	68da      	ldr	r2, [r3, #12]
 800664c:	0650      	lsls	r0, r2, #25
 800664e:	d505      	bpl.n	800665c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006650:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006654:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006656:	4620      	mov	r0, r4
 8006658:	f7ff ff85 	bl	8006566 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800665c:	6823      	ldr	r3, [r4, #0]
 800665e:	691a      	ldr	r2, [r3, #16]
 8006660:	0691      	lsls	r1, r2, #26
 8006662:	d522      	bpl.n	80066aa <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006664:	68da      	ldr	r2, [r3, #12]
 8006666:	0692      	lsls	r2, r2, #26
 8006668:	d51f      	bpl.n	80066aa <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800666a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800666e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006670:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006676:	f000 b8ab 	b.w	80067d0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800667a:	f7ff ff71 	bl	8006560 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800667e:	4620      	mov	r0, r4
 8006680:	f7ff ff70 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8006684:	e783      	b.n	800658e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006686:	f7ff ff6b 	bl	8006560 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800668a:	4620      	mov	r0, r4
 800668c:	f7ff ff6a 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8006690:	e792      	b.n	80065b8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006692:	f7ff ff65 	bl	8006560 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006696:	4620      	mov	r0, r4
 8006698:	f7ff ff64 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 800669c:	e7a0      	b.n	80065e0 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800669e:	f7ff ff5f 	bl	8006560 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066a2:	4620      	mov	r0, r4
 80066a4:	f7ff ff5e 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 80066a8:	e7af      	b.n	800660a <HAL_TIM_IRQHandler+0xa2>
}
 80066aa:	bd10      	pop	{r4, pc}

080066ac <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80066ac:	4a30      	ldr	r2, [pc, #192]	; (8006770 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80066ae:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80066b0:	4290      	cmp	r0, r2
 80066b2:	d012      	beq.n	80066da <TIM_Base_SetConfig+0x2e>
 80066b4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80066b8:	d00f      	beq.n	80066da <TIM_Base_SetConfig+0x2e>
 80066ba:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80066be:	4290      	cmp	r0, r2
 80066c0:	d00b      	beq.n	80066da <TIM_Base_SetConfig+0x2e>
 80066c2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066c6:	4290      	cmp	r0, r2
 80066c8:	d007      	beq.n	80066da <TIM_Base_SetConfig+0x2e>
 80066ca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066ce:	4290      	cmp	r0, r2
 80066d0:	d003      	beq.n	80066da <TIM_Base_SetConfig+0x2e>
 80066d2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80066d6:	4290      	cmp	r0, r2
 80066d8:	d119      	bne.n	800670e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80066da:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80066dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80066e0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80066e2:	4a23      	ldr	r2, [pc, #140]	; (8006770 <TIM_Base_SetConfig+0xc4>)
 80066e4:	4290      	cmp	r0, r2
 80066e6:	d029      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 80066e8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80066ec:	d026      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 80066ee:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80066f2:	4290      	cmp	r0, r2
 80066f4:	d022      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 80066f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066fa:	4290      	cmp	r0, r2
 80066fc:	d01e      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 80066fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006702:	4290      	cmp	r0, r2
 8006704:	d01a      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 8006706:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800670a:	4290      	cmp	r0, r2
 800670c:	d016      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 800670e:	4a19      	ldr	r2, [pc, #100]	; (8006774 <TIM_Base_SetConfig+0xc8>)
 8006710:	4290      	cmp	r0, r2
 8006712:	d013      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 8006714:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006718:	4290      	cmp	r0, r2
 800671a:	d00f      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 800671c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006720:	4290      	cmp	r0, r2
 8006722:	d00b      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 8006724:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006728:	4290      	cmp	r0, r2
 800672a:	d007      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 800672c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006730:	4290      	cmp	r0, r2
 8006732:	d003      	beq.n	800673c <TIM_Base_SetConfig+0x90>
 8006734:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006738:	4290      	cmp	r0, r2
 800673a:	d103      	bne.n	8006744 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800673c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800673e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006742:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006744:	694a      	ldr	r2, [r1, #20]
 8006746:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800674a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800674c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800674e:	688b      	ldr	r3, [r1, #8]
 8006750:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006752:	680b      	ldr	r3, [r1, #0]
 8006754:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006756:	4b06      	ldr	r3, [pc, #24]	; (8006770 <TIM_Base_SetConfig+0xc4>)
 8006758:	4298      	cmp	r0, r3
 800675a:	d003      	beq.n	8006764 <TIM_Base_SetConfig+0xb8>
 800675c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006760:	4298      	cmp	r0, r3
 8006762:	d101      	bne.n	8006768 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006764:	690b      	ldr	r3, [r1, #16]
 8006766:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006768:	2301      	movs	r3, #1
 800676a:	6143      	str	r3, [r0, #20]
}
 800676c:	4770      	bx	lr
 800676e:	bf00      	nop
 8006770:	40010000 	.word	0x40010000
 8006774:	40014000 	.word	0x40014000

08006778 <HAL_TIM_Base_Init>:
{
 8006778:	b510      	push	{r4, lr}
  if (htim == NULL)
 800677a:	4604      	mov	r4, r0
 800677c:	b330      	cbz	r0, 80067cc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800677e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006782:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006786:	b91b      	cbnz	r3, 8006790 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006788:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800678c:	f7ff fead 	bl	80064ea <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006790:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006792:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006794:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006798:	1d21      	adds	r1, r4, #4
 800679a:	f7ff ff87 	bl	80066ac <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800679e:	2301      	movs	r3, #1
 80067a0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80067a4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80067a6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80067aa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80067ae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80067b2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80067b6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80067ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80067be:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80067c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80067c6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80067ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80067cc:	2001      	movs	r0, #1
 80067ce:	e7fc      	b.n	80067ca <HAL_TIM_Base_Init+0x52>

080067d0 <HAL_TIMEx_CommutCallback>:
 80067d0:	4770      	bx	lr

080067d2 <HAL_TIMEx_BreakCallback>:
 80067d2:	4770      	bx	lr

080067d4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80067d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067d8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80067da:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 80067de:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80067e2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80067e6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80067ea:	6809      	ldr	r1, [r1, #0]
 80067ec:	2901      	cmp	r1, #1
 80067ee:	ea43 0304 	orr.w	r3, r3, r4
 80067f2:	4912      	ldr	r1, [pc, #72]	; (800683c <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80067f4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80067f6:	d00f      	beq.n	8006818 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80067f8:	431a      	orrs	r2, r3
 80067fa:	432a      	orrs	r2, r5
 80067fc:	ea42 0308 	orr.w	r3, r2, r8
 8006800:	ea43 030e 	orr.w	r3, r3, lr
 8006804:	ea43 030c 	orr.w	r3, r3, ip
 8006808:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800680a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800680c:	4333      	orrs	r3, r6
 800680e:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006810:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006812:	2000      	movs	r0, #0
 8006814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006818:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800681a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800681c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800681e:	ea45 0208 	orr.w	r2, r5, r8
 8006822:	ea42 020e 	orr.w	r2, r2, lr
 8006826:	ea42 020c 	orr.w	r2, r2, ip
 800682a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800682c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006830:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006832:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006834:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006836:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006838:	6042      	str	r2, [r0, #4]
 800683a:	e7ea      	b.n	8006812 <FMC_SDRAM_Init+0x3e>
 800683c:	ffff8000 	.word	0xffff8000

08006840 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8006840:	68cb      	ldr	r3, [r1, #12]
{
 8006842:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006844:	680c      	ldr	r4, [r1, #0]
 8006846:	688e      	ldr	r6, [r1, #8]
 8006848:	690d      	ldr	r5, [r1, #16]
 800684a:	1e5f      	subs	r7, r3, #1
 800684c:	694b      	ldr	r3, [r1, #20]
 800684e:	f104 3cff 	add.w	ip, r4, #4294967295
 8006852:	684c      	ldr	r4, [r1, #4]
 8006854:	6989      	ldr	r1, [r1, #24]
 8006856:	3b01      	subs	r3, #1
 8006858:	051b      	lsls	r3, r3, #20
 800685a:	3c01      	subs	r4, #1
 800685c:	3e01      	subs	r6, #1
 800685e:	3d01      	subs	r5, #1
 8006860:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8006862:	2a01      	cmp	r2, #1
 8006864:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006868:	ea4f 2606 	mov.w	r6, r6, lsl #8
 800686c:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006870:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006874:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006878:	d00c      	beq.n	8006894 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800687a:	ea43 030c 	orr.w	r3, r3, ip
 800687e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006880:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006882:	4333      	orrs	r3, r6
 8006884:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006886:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800688a:	430b      	orrs	r3, r1
 800688c:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800688e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006890:	2000      	movs	r0, #0
 8006892:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006894:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006896:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800689a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800689e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80068a0:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068a2:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80068a6:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80068a8:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068aa:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80068ac:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068b0:	430a      	orrs	r2, r1
 80068b2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80068b4:	60c2      	str	r2, [r0, #12]
 80068b6:	e7eb      	b.n	8006890 <FMC_SDRAM_Timing_Init+0x50>

080068b8 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80068b8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80068bc:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80068c0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 80068c4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80068c8:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80068ca:	2300      	movs	r3, #0
 80068cc:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80068ce:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80068d0:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80068d2:	4618      	mov	r0, r3
 80068d4:	4770      	bx	lr

080068d6 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80068d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 80068d8:	2300      	movs	r3, #0
 80068da:	9301      	str	r3, [sp, #4]
{
 80068dc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80068de:	e9d1 3200 	ldrd	r3, r2, [r1]
 80068e2:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 80068e4:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80068e6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80068ea:	688a      	ldr	r2, [r1, #8]
 80068ec:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80068ee:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80068f2:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80068f4:	9b01      	ldr	r3, [sp, #4]
 80068f6:	6103      	str	r3, [r0, #16]
{
 80068f8:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80068fa:	f7fd f849 	bl	8003990 <HAL_GetTick>
 80068fe:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006900:	69a3      	ldr	r3, [r4, #24]
 8006902:	f013 0320 	ands.w	r3, r3, #32
 8006906:	d101      	bne.n	800690c <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006908:	4618      	mov	r0, r3
 800690a:	e003      	b.n	8006914 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800690c:	1c6b      	adds	r3, r5, #1
 800690e:	d0f7      	beq.n	8006900 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006910:	b915      	cbnz	r5, 8006918 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8006912:	2003      	movs	r0, #3
}
 8006914:	b002      	add	sp, #8
 8006916:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006918:	f7fd f83a 	bl	8003990 <HAL_GetTick>
 800691c:	1b80      	subs	r0, r0, r6
 800691e:	42a8      	cmp	r0, r5
 8006920:	d9ee      	bls.n	8006900 <FMC_SDRAM_SendCommand+0x2a>
 8006922:	e7f6      	b.n	8006912 <FMC_SDRAM_SendCommand+0x3c>

08006924 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8006924:	6943      	ldr	r3, [r0, #20]
 8006926:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800692a:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800692c:	2000      	movs	r0, #0
 800692e:	4770      	bx	lr

08006930 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006930:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006932:	4b05      	ldr	r3, [pc, #20]	; (8006948 <SysTick_Handler+0x18>)
 8006934:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006936:	f001 fe4d 	bl	80085d4 <xTaskGetSchedulerState>
 800693a:	2801      	cmp	r0, #1
 800693c:	d003      	beq.n	8006946 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800693e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006942:	f000 bbdf 	b.w	8007104 <xPortSysTickHandler>
}
 8006946:	bd08      	pop	{r3, pc}
 8006948:	e000e010 	.word	0xe000e010

0800694c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800694c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006950:	b92b      	cbnz	r3, 800695e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006952:	4b06      	ldr	r3, [pc, #24]	; (800696c <osKernelInitialize+0x20>)
 8006954:	6818      	ldr	r0, [r3, #0]
 8006956:	b928      	cbnz	r0, 8006964 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006958:	2201      	movs	r2, #1
 800695a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800695c:	4770      	bx	lr
    stat = osErrorISR;
 800695e:	f06f 0005 	mvn.w	r0, #5
 8006962:	4770      	bx	lr
    } else {
      stat = osError;
 8006964:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006968:	4770      	bx	lr
 800696a:	bf00      	nop
 800696c:	200016d8 	.word	0x200016d8

08006970 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006970:	b510      	push	{r4, lr}
 8006972:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006976:	b95c      	cbnz	r4, 8006990 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006978:	4b08      	ldr	r3, [pc, #32]	; (800699c <osKernelStart+0x2c>)
 800697a:	681a      	ldr	r2, [r3, #0]
 800697c:	2a01      	cmp	r2, #1
 800697e:	d10a      	bne.n	8006996 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006980:	4a07      	ldr	r2, [pc, #28]	; (80069a0 <osKernelStart+0x30>)
 8006982:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006984:	2202      	movs	r2, #2
 8006986:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006988:	f001 fcca 	bl	8008320 <vTaskStartScheduler>
      stat = osOK;
 800698c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800698e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006990:	f06f 0005 	mvn.w	r0, #5
 8006994:	e7fb      	b.n	800698e <osKernelStart+0x1e>
      stat = osError;
 8006996:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800699a:	e7f8      	b.n	800698e <osKernelStart+0x1e>
 800699c:	200016d8 	.word	0x200016d8
 80069a0:	e000ed00 	.word	0xe000ed00

080069a4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80069a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069a6:	b087      	sub	sp, #28
 80069a8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80069aa:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80069ac:	460b      	mov	r3, r1
  hTask = NULL;
 80069ae:	9205      	str	r2, [sp, #20]
 80069b0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80069b4:	b9d2      	cbnz	r2, 80069ec <osThreadNew+0x48>
 80069b6:	b1c8      	cbz	r0, 80069ec <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80069b8:	2c00      	cmp	r4, #0
 80069ba:	d02f      	beq.n	8006a1c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80069bc:	69a5      	ldr	r5, [r4, #24]
 80069be:	2d00      	cmp	r5, #0
 80069c0:	bf08      	it	eq
 80069c2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80069c4:	1e69      	subs	r1, r5, #1
 80069c6:	2937      	cmp	r1, #55	; 0x37
 80069c8:	46ac      	mov	ip, r5
 80069ca:	d82b      	bhi.n	8006a24 <osThreadNew+0x80>
 80069cc:	6861      	ldr	r1, [r4, #4]
 80069ce:	07c9      	lsls	r1, r1, #31
 80069d0:	d428      	bmi.n	8006a24 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80069d2:	6966      	ldr	r6, [r4, #20]
 80069d4:	b16e      	cbz	r6, 80069f2 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80069d6:	08b2      	lsrs	r2, r6, #2
 80069d8:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80069dc:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80069de:	b157      	cbz	r7, 80069f6 <osThreadNew+0x52>
 80069e0:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80069e4:	d902      	bls.n	80069ec <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80069e6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80069e8:	b104      	cbz	r4, 80069ec <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80069ea:	b9ee      	cbnz	r6, 8006a28 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80069ec:	9805      	ldr	r0, [sp, #20]
}
 80069ee:	b007      	add	sp, #28
 80069f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80069f2:	2280      	movs	r2, #128	; 0x80
 80069f4:	e7f0      	b.n	80069d8 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80069f6:	f1be 0f00 	cmp.w	lr, #0
 80069fa:	d1f7      	bne.n	80069ec <osThreadNew+0x48>
      if (mem == 0) {
 80069fc:	6924      	ldr	r4, [r4, #16]
 80069fe:	2c00      	cmp	r4, #0
 8006a00:	d1f4      	bne.n	80069ec <osThreadNew+0x48>
 8006a02:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006a04:	a905      	add	r1, sp, #20
 8006a06:	e9cd c100 	strd	ip, r1, [sp]
 8006a0a:	b292      	uxth	r2, r2
 8006a0c:	4621      	mov	r1, r4
 8006a0e:	f001 fb01 	bl	8008014 <xTaskCreate>
 8006a12:	2801      	cmp	r0, #1
            hTask = NULL;
 8006a14:	bf1c      	itt	ne
 8006a16:	2300      	movne	r3, #0
 8006a18:	9305      	strne	r3, [sp, #20]
 8006a1a:	e7e7      	b.n	80069ec <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006a1c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006a20:	2280      	movs	r2, #128	; 0x80
 8006a22:	e7ef      	b.n	8006a04 <osThreadNew+0x60>
        return (NULL);
 8006a24:	4610      	mov	r0, r2
 8006a26:	e7e2      	b.n	80069ee <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006a28:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006a2c:	9500      	str	r5, [sp, #0]
 8006a2e:	f001 fab9 	bl	8007fa4 <xTaskCreateStatic>
 8006a32:	9005      	str	r0, [sp, #20]
 8006a34:	e7da      	b.n	80069ec <osThreadNew+0x48>

08006a36 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006a36:	b510      	push	{r4, lr}
 8006a38:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006a3c:	b924      	cbnz	r4, 8006a48 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006a3e:	b110      	cbz	r0, 8006a46 <osDelay+0x10>
      vTaskDelay(ticks);
 8006a40:	f001 fc2e 	bl	80082a0 <vTaskDelay>
    stat = osOK;
 8006a44:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006a46:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006a48:	f06f 0005 	mvn.w	r0, #5
 8006a4c:	e7fb      	b.n	8006a46 <osDelay+0x10>

08006a4e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006a4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006a50:	4604      	mov	r4, r0
 8006a52:	460e      	mov	r6, r1
 8006a54:	4615      	mov	r5, r2
 8006a56:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006a5a:	b11a      	cbz	r2, 8006a64 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006a5c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006a5e:	4620      	mov	r0, r4
 8006a60:	b003      	add	sp, #12
 8006a62:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006a64:	2800      	cmp	r0, #0
 8006a66:	d0f9      	beq.n	8006a5c <osSemaphoreNew+0xe>
 8006a68:	4288      	cmp	r0, r1
 8006a6a:	d3f7      	bcc.n	8006a5c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006a6c:	b1e5      	cbz	r5, 8006aa8 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006a6e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006a72:	b1bb      	cbz	r3, 8006aa4 <osSemaphoreNew+0x56>
 8006a74:	2f4f      	cmp	r7, #79	; 0x4f
 8006a76:	d9f1      	bls.n	8006a5c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006a78:	2801      	cmp	r0, #1
 8006a7a:	d12a      	bne.n	8006ad2 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006a7c:	2103      	movs	r1, #3
 8006a7e:	9100      	str	r1, [sp, #0]
 8006a80:	4611      	mov	r1, r2
 8006a82:	f000 fcef 	bl	8007464 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006a86:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006a88:	2800      	cmp	r0, #0
 8006a8a:	d0e7      	beq.n	8006a5c <osSemaphoreNew+0xe>
 8006a8c:	b1de      	cbz	r6, 8006ac6 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006a8e:	2300      	movs	r3, #0
 8006a90:	461a      	mov	r2, r3
 8006a92:	4619      	mov	r1, r3
 8006a94:	f000 fd9c 	bl	80075d0 <xQueueGenericSend>
 8006a98:	2801      	cmp	r0, #1
 8006a9a:	d014      	beq.n	8006ac6 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006a9c:	4620      	mov	r0, r4
 8006a9e:	f001 f8dd 	bl	8007c5c <vQueueDelete>
 8006aa2:	e7db      	b.n	8006a5c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006aa4:	2f00      	cmp	r7, #0
 8006aa6:	d1d9      	bne.n	8006a5c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006aa8:	2c01      	cmp	r4, #1
 8006aaa:	d105      	bne.n	8006ab8 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006aac:	2203      	movs	r2, #3
 8006aae:	2100      	movs	r1, #0
 8006ab0:	4620      	mov	r0, r4
 8006ab2:	f000 fd25 	bl	8007500 <xQueueGenericCreate>
 8006ab6:	e7e6      	b.n	8006a86 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006ab8:	4620      	mov	r0, r4
 8006aba:	4631      	mov	r1, r6
 8006abc:	f000 fd69 	bl	8007592 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006ac0:	4604      	mov	r4, r0
 8006ac2:	2800      	cmp	r0, #0
 8006ac4:	d0ca      	beq.n	8006a5c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006ac6:	b955      	cbnz	r5, 8006ade <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006ac8:	4629      	mov	r1, r5
 8006aca:	4620      	mov	r0, r4
 8006acc:	f001 f89c 	bl	8007c08 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006ad0:	e7c5      	b.n	8006a5e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006ad2:	461a      	mov	r2, r3
 8006ad4:	f000 fd3b 	bl	800754e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006ad8:	4604      	mov	r4, r0
 8006ada:	2800      	cmp	r0, #0
 8006adc:	d0be      	beq.n	8006a5c <osSemaphoreNew+0xe>
          name = attr->name;
 8006ade:	682d      	ldr	r5, [r5, #0]
 8006ae0:	e7f2      	b.n	8006ac8 <osSemaphoreNew+0x7a>
	...

08006ae4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006ae4:	b513      	push	{r0, r1, r4, lr}
 8006ae6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006ae8:	b1f8      	cbz	r0, 8006b2a <osSemaphoreAcquire+0x46>
 8006aea:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006aee:	b1a3      	cbz	r3, 8006b1a <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 8006af0:	b9d9      	cbnz	r1, 8006b2a <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006af2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006af4:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006af6:	f001 f837 	bl	8007b68 <xQueueReceiveFromISR>
 8006afa:	2801      	cmp	r0, #1
 8006afc:	d112      	bne.n	8006b24 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006afe:	9b01      	ldr	r3, [sp, #4]
 8006b00:	b913      	cbnz	r3, 8006b08 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006b02:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006b04:	b002      	add	sp, #8
 8006b06:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006b08:	4b0b      	ldr	r3, [pc, #44]	; (8006b38 <osSemaphoreAcquire+0x54>)
 8006b0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b0e:	601a      	str	r2, [r3, #0]
 8006b10:	f3bf 8f4f 	dsb	sy
 8006b14:	f3bf 8f6f 	isb	sy
 8006b18:	e7f3      	b.n	8006b02 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006b1a:	f000 ff61 	bl	80079e0 <xQueueSemaphoreTake>
 8006b1e:	2801      	cmp	r0, #1
 8006b20:	d0ef      	beq.n	8006b02 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006b22:	b92c      	cbnz	r4, 8006b30 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8006b24:	f06f 0002 	mvn.w	r0, #2
 8006b28:	e7ec      	b.n	8006b04 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006b2a:	f06f 0003 	mvn.w	r0, #3
 8006b2e:	e7e9      	b.n	8006b04 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006b30:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006b34:	e7e6      	b.n	8006b04 <osSemaphoreAcquire+0x20>
 8006b36:	bf00      	nop
 8006b38:	e000ed04 	.word	0xe000ed04

08006b3c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006b3c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006b3e:	b300      	cbz	r0, 8006b82 <osSemaphoreRelease+0x46>
 8006b40:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006b44:	b1a3      	cbz	r3, 8006b70 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 8006b46:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006b48:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006b4a:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006b4c:	f000 fe54 	bl	80077f8 <xQueueGiveFromISR>
 8006b50:	2801      	cmp	r0, #1
 8006b52:	d113      	bne.n	8006b7c <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006b54:	9b01      	ldr	r3, [sp, #4]
 8006b56:	b913      	cbnz	r3, 8006b5e <osSemaphoreRelease+0x22>
  stat = osOK;
 8006b58:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006b5a:	b002      	add	sp, #8
 8006b5c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006b5e:	4b0a      	ldr	r3, [pc, #40]	; (8006b88 <osSemaphoreRelease+0x4c>)
 8006b60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b64:	601a      	str	r2, [r3, #0]
 8006b66:	f3bf 8f4f 	dsb	sy
 8006b6a:	f3bf 8f6f 	isb	sy
 8006b6e:	e7f3      	b.n	8006b58 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006b70:	461a      	mov	r2, r3
 8006b72:	4619      	mov	r1, r3
 8006b74:	f000 fd2c 	bl	80075d0 <xQueueGenericSend>
 8006b78:	2801      	cmp	r0, #1
 8006b7a:	d0ed      	beq.n	8006b58 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006b7c:	f06f 0002 	mvn.w	r0, #2
 8006b80:	e7eb      	b.n	8006b5a <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006b82:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006b86:	e7e8      	b.n	8006b5a <osSemaphoreRelease+0x1e>
 8006b88:	e000ed04 	.word	0xe000ed04

08006b8c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006b8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b8e:	4606      	mov	r6, r0
 8006b90:	460d      	mov	r5, r1
 8006b92:	4614      	mov	r4, r2
 8006b94:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006b98:	b11f      	cbz	r7, 8006ba2 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006b9a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006b9c:	4628      	mov	r0, r5
 8006b9e:	b003      	add	sp, #12
 8006ba0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006ba2:	2800      	cmp	r0, #0
 8006ba4:	d0f9      	beq.n	8006b9a <osMessageQueueNew+0xe>
 8006ba6:	2900      	cmp	r1, #0
 8006ba8:	d0f7      	beq.n	8006b9a <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006baa:	b1da      	cbz	r2, 8006be4 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006bac:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006bb0:	b183      	cbz	r3, 8006bd4 <osMessageQueueNew+0x48>
 8006bb2:	2a4f      	cmp	r2, #79	; 0x4f
 8006bb4:	d9f1      	bls.n	8006b9a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006bb6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006bb8:	2a00      	cmp	r2, #0
 8006bba:	d0ee      	beq.n	8006b9a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006bbc:	6966      	ldr	r6, [r4, #20]
 8006bbe:	4345      	muls	r5, r0
 8006bc0:	42ae      	cmp	r6, r5
 8006bc2:	d3ea      	bcc.n	8006b9a <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006bc4:	9700      	str	r7, [sp, #0]
 8006bc6:	f000 fc4d 	bl	8007464 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006bca:	4605      	mov	r5, r0
 8006bcc:	2800      	cmp	r0, #0
 8006bce:	d0e4      	beq.n	8006b9a <osMessageQueueNew+0xe>
        name = attr->name;
 8006bd0:	6824      	ldr	r4, [r4, #0]
 8006bd2:	e011      	b.n	8006bf8 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006bd4:	2a00      	cmp	r2, #0
 8006bd6:	d1e0      	bne.n	8006b9a <osMessageQueueNew+0xe>
 8006bd8:	6923      	ldr	r3, [r4, #16]
 8006bda:	2b00      	cmp	r3, #0
 8006bdc:	d1dd      	bne.n	8006b9a <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006bde:	6963      	ldr	r3, [r4, #20]
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d1da      	bne.n	8006b9a <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006be4:	4629      	mov	r1, r5
 8006be6:	2200      	movs	r2, #0
 8006be8:	4630      	mov	r0, r6
 8006bea:	f000 fc89 	bl	8007500 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006bee:	4605      	mov	r5, r0
 8006bf0:	2800      	cmp	r0, #0
 8006bf2:	d0d2      	beq.n	8006b9a <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006bf4:	2c00      	cmp	r4, #0
 8006bf6:	d1eb      	bne.n	8006bd0 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006bf8:	4621      	mov	r1, r4
 8006bfa:	4628      	mov	r0, r5
 8006bfc:	f001 f804 	bl	8007c08 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006c00:	e7cc      	b.n	8006b9c <osMessageQueueNew+0x10>
	...

08006c04 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006c04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006c06:	461c      	mov	r4, r3
 8006c08:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006c0c:	b1b6      	cbz	r6, 8006c3c <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006c0e:	b308      	cbz	r0, 8006c54 <osMessageQueuePut+0x50>
 8006c10:	b301      	cbz	r1, 8006c54 <osMessageQueuePut+0x50>
 8006c12:	b9fb      	cbnz	r3, 8006c54 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006c14:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006c16:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006c18:	f000 fd8c 	bl	8007734 <xQueueGenericSendFromISR>
 8006c1c:	2801      	cmp	r0, #1
 8006c1e:	d116      	bne.n	8006c4e <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006c20:	9b01      	ldr	r3, [sp, #4]
 8006c22:	b913      	cbnz	r3, 8006c2a <osMessageQueuePut+0x26>
  stat = osOK;
 8006c24:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006c26:	b002      	add	sp, #8
 8006c28:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006c2a:	4b0d      	ldr	r3, [pc, #52]	; (8006c60 <osMessageQueuePut+0x5c>)
 8006c2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c30:	601a      	str	r2, [r3, #0]
 8006c32:	f3bf 8f4f 	dsb	sy
 8006c36:	f3bf 8f6f 	isb	sy
 8006c3a:	e7f3      	b.n	8006c24 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006c3c:	b150      	cbz	r0, 8006c54 <osMessageQueuePut+0x50>
 8006c3e:	b149      	cbz	r1, 8006c54 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006c40:	4633      	mov	r3, r6
 8006c42:	4622      	mov	r2, r4
 8006c44:	f000 fcc4 	bl	80075d0 <xQueueGenericSend>
 8006c48:	2801      	cmp	r0, #1
 8006c4a:	d0eb      	beq.n	8006c24 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006c4c:	b92c      	cbnz	r4, 8006c5a <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8006c4e:	f06f 0002 	mvn.w	r0, #2
 8006c52:	e7e8      	b.n	8006c26 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006c54:	f06f 0003 	mvn.w	r0, #3
 8006c58:	e7e5      	b.n	8006c26 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006c5a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006c5e:	e7e2      	b.n	8006c26 <osMessageQueuePut+0x22>
 8006c60:	e000ed04 	.word	0xe000ed04

08006c64 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006c64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006c66:	461c      	mov	r4, r3
 8006c68:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006c6c:	b1b3      	cbz	r3, 8006c9c <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006c6e:	b300      	cbz	r0, 8006cb2 <osMessageQueueGet+0x4e>
 8006c70:	b1f9      	cbz	r1, 8006cb2 <osMessageQueueGet+0x4e>
 8006c72:	b9f4      	cbnz	r4, 8006cb2 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006c74:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006c76:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006c78:	f000 ff76 	bl	8007b68 <xQueueReceiveFromISR>
 8006c7c:	2801      	cmp	r0, #1
 8006c7e:	d115      	bne.n	8006cac <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006c80:	9b01      	ldr	r3, [sp, #4]
 8006c82:	b913      	cbnz	r3, 8006c8a <osMessageQueueGet+0x26>
  stat = osOK;
 8006c84:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006c86:	b003      	add	sp, #12
 8006c88:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006c8a:	4b0d      	ldr	r3, [pc, #52]	; (8006cc0 <osMessageQueueGet+0x5c>)
 8006c8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c90:	601a      	str	r2, [r3, #0]
 8006c92:	f3bf 8f4f 	dsb	sy
 8006c96:	f3bf 8f6f 	isb	sy
 8006c9a:	e7f3      	b.n	8006c84 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006c9c:	b148      	cbz	r0, 8006cb2 <osMessageQueueGet+0x4e>
 8006c9e:	b141      	cbz	r1, 8006cb2 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006ca0:	4622      	mov	r2, r4
 8006ca2:	f000 fdfd 	bl	80078a0 <xQueueReceive>
 8006ca6:	2801      	cmp	r0, #1
 8006ca8:	d0ec      	beq.n	8006c84 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006caa:	b92c      	cbnz	r4, 8006cb8 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 8006cac:	f06f 0002 	mvn.w	r0, #2
 8006cb0:	e7e9      	b.n	8006c86 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8006cb2:	f06f 0003 	mvn.w	r0, #3
 8006cb6:	e7e6      	b.n	8006c86 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006cb8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006cbc:	e7e3      	b.n	8006c86 <osMessageQueueGet+0x22>
 8006cbe:	bf00      	nop
 8006cc0:	e000ed04 	.word	0xe000ed04

08006cc4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006cc4:	4b03      	ldr	r3, [pc, #12]	; (8006cd4 <vApplicationGetIdleTaskMemory+0x10>)
 8006cc6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006cc8:	4b03      	ldr	r3, [pc, #12]	; (8006cd8 <vApplicationGetIdleTaskMemory+0x14>)
 8006cca:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006ccc:	2380      	movs	r3, #128	; 0x80
 8006cce:	6013      	str	r3, [r2, #0]
}
 8006cd0:	4770      	bx	lr
 8006cd2:	bf00      	nop
 8006cd4:	20001678 	.word	0x20001678
 8006cd8:	20001478 	.word	0x20001478

08006cdc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006cdc:	4b03      	ldr	r3, [pc, #12]	; (8006cec <vApplicationGetTimerTaskMemory+0x10>)
 8006cde:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006ce0:	4b03      	ldr	r3, [pc, #12]	; (8006cf0 <vApplicationGetTimerTaskMemory+0x14>)
 8006ce2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006ce4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006ce8:	6013      	str	r3, [r2, #0]
}
 8006cea:	4770      	bx	lr
 8006cec:	20001adc 	.word	0x20001adc
 8006cf0:	200016dc 	.word	0x200016dc

08006cf4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006cf4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006cf6:	4b0f      	ldr	r3, [pc, #60]	; (8006d34 <prvInsertBlockIntoFreeList+0x40>)
 8006cf8:	461a      	mov	r2, r3
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	4283      	cmp	r3, r0
 8006cfe:	d3fb      	bcc.n	8006cf8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006d00:	6854      	ldr	r4, [r2, #4]
 8006d02:	1911      	adds	r1, r2, r4
 8006d04:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006d06:	bf01      	itttt	eq
 8006d08:	6841      	ldreq	r1, [r0, #4]
 8006d0a:	4610      	moveq	r0, r2
 8006d0c:	1909      	addeq	r1, r1, r4
 8006d0e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006d10:	6844      	ldr	r4, [r0, #4]
 8006d12:	1901      	adds	r1, r0, r4
 8006d14:	428b      	cmp	r3, r1
 8006d16:	d107      	bne.n	8006d28 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006d18:	4907      	ldr	r1, [pc, #28]	; (8006d38 <prvInsertBlockIntoFreeList+0x44>)
 8006d1a:	6809      	ldr	r1, [r1, #0]
 8006d1c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006d1e:	bf1f      	itttt	ne
 8006d20:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006d22:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006d24:	1909      	addne	r1, r1, r4
 8006d26:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006d28:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006d2a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006d2c:	bf18      	it	ne
 8006d2e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006d30:	bd10      	pop	{r4, pc}
 8006d32:	bf00      	nop
 8006d34:	20009b54 	.word	0x20009b54
 8006d38:	20001b3c 	.word	0x20001b3c

08006d3c <pvPortMalloc>:
{
 8006d3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d40:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006d42:	f001 f995 	bl	8008070 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006d46:	4b3e      	ldr	r3, [pc, #248]	; (8006e40 <pvPortMalloc+0x104>)
 8006d48:	483e      	ldr	r0, [pc, #248]	; (8006e44 <pvPortMalloc+0x108>)
 8006d4a:	681a      	ldr	r2, [r3, #0]
 8006d4c:	469c      	mov	ip, r3
 8006d4e:	b9d2      	cbnz	r2, 8006d86 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8006d50:	4a3d      	ldr	r2, [pc, #244]	; (8006e48 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006d52:	4b3e      	ldr	r3, [pc, #248]	; (8006e4c <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006d54:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006d56:	bf1c      	itt	ne
 8006d58:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006d5a:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006d5e:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006d60:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8006d62:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8006d64:	4b3a      	ldr	r3, [pc, #232]	; (8006e50 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006d66:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8006d6a:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006d6e:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006d70:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8006d74:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006d78:	4b36      	ldr	r3, [pc, #216]	; (8006e54 <pvPortMalloc+0x118>)
 8006d7a:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006d7c:	4b36      	ldr	r3, [pc, #216]	; (8006e58 <pvPortMalloc+0x11c>)
 8006d7e:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006d80:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006d84:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006d86:	6807      	ldr	r7, [r0, #0]
 8006d88:	4227      	tst	r7, r4
 8006d8a:	d153      	bne.n	8006e34 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8006d8c:	2c00      	cmp	r4, #0
 8006d8e:	d044      	beq.n	8006e1a <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 8006d90:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006d94:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006d96:	bf1c      	itt	ne
 8006d98:	f023 0307 	bicne.w	r3, r3, #7
 8006d9c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006d9e:	2b00      	cmp	r3, #0
 8006da0:	d048      	beq.n	8006e34 <pvPortMalloc+0xf8>
 8006da2:	4a2d      	ldr	r2, [pc, #180]	; (8006e58 <pvPortMalloc+0x11c>)
 8006da4:	6816      	ldr	r6, [r2, #0]
 8006da6:	429e      	cmp	r6, r3
 8006da8:	4690      	mov	r8, r2
 8006daa:	d343      	bcc.n	8006e34 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 8006dac:	4a27      	ldr	r2, [pc, #156]	; (8006e4c <pvPortMalloc+0x110>)
 8006dae:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006db0:	6869      	ldr	r1, [r5, #4]
 8006db2:	4299      	cmp	r1, r3
 8006db4:	d201      	bcs.n	8006dba <pvPortMalloc+0x7e>
 8006db6:	6828      	ldr	r0, [r5, #0]
 8006db8:	b9a8      	cbnz	r0, 8006de6 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 8006dba:	f8dc 0000 	ldr.w	r0, [ip]
 8006dbe:	42a8      	cmp	r0, r5
 8006dc0:	d038      	beq.n	8006e34 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006dc2:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006dc4:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006dc6:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006dc8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006dca:	2910      	cmp	r1, #16
 8006dcc:	d912      	bls.n	8006df4 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006dce:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006dd0:	0742      	lsls	r2, r0, #29
 8006dd2:	d00b      	beq.n	8006dec <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006dd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dd8:	f383 8811 	msr	BASEPRI, r3
 8006ddc:	f3bf 8f6f 	isb	sy
 8006de0:	f3bf 8f4f 	dsb	sy
 8006de4:	e7fe      	b.n	8006de4 <pvPortMalloc+0xa8>
 8006de6:	462a      	mov	r2, r5
 8006de8:	4605      	mov	r5, r0
 8006dea:	e7e1      	b.n	8006db0 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006dec:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006dee:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006df0:	f7ff ff80 	bl	8006cf4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006df4:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006df6:	4917      	ldr	r1, [pc, #92]	; (8006e54 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 8006df8:	4a18      	ldr	r2, [pc, #96]	; (8006e5c <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006dfa:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006dfc:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006dfe:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8006e00:	2300      	movs	r3, #0
 8006e02:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8006e04:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006e06:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006e0a:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8006e0c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006e10:	bf38      	it	cc
 8006e12:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006e14:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006e16:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8006e18:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8006e1a:	f001 f9cd 	bl	80081b8 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006e1e:	0763      	lsls	r3, r4, #29
 8006e20:	d00a      	beq.n	8006e38 <pvPortMalloc+0xfc>
 8006e22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e26:	f383 8811 	msr	BASEPRI, r3
 8006e2a:	f3bf 8f6f 	isb	sy
 8006e2e:	f3bf 8f4f 	dsb	sy
 8006e32:	e7fe      	b.n	8006e32 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 8006e34:	2400      	movs	r4, #0
 8006e36:	e7f0      	b.n	8006e1a <pvPortMalloc+0xde>
}
 8006e38:	4620      	mov	r0, r4
 8006e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006e3e:	bf00      	nop
 8006e40:	20001b3c 	.word	0x20001b3c
 8006e44:	20009b40 	.word	0x20009b40
 8006e48:	20001b40 	.word	0x20001b40
 8006e4c:	20009b54 	.word	0x20009b54
 8006e50:	20009b38 	.word	0x20009b38
 8006e54:	20009b48 	.word	0x20009b48
 8006e58:	20009b44 	.word	0x20009b44
 8006e5c:	20009b4c 	.word	0x20009b4c

08006e60 <vPortFree>:
{
 8006e60:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006e62:	4604      	mov	r4, r0
 8006e64:	b390      	cbz	r0, 8006ecc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006e66:	4a1a      	ldr	r2, [pc, #104]	; (8006ed0 <vPortFree+0x70>)
 8006e68:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006e6c:	6812      	ldr	r2, [r2, #0]
 8006e6e:	4213      	tst	r3, r2
 8006e70:	d108      	bne.n	8006e84 <vPortFree+0x24>
 8006e72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e76:	f383 8811 	msr	BASEPRI, r3
 8006e7a:	f3bf 8f6f 	isb	sy
 8006e7e:	f3bf 8f4f 	dsb	sy
 8006e82:	e7fe      	b.n	8006e82 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006e84:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006e88:	b141      	cbz	r1, 8006e9c <vPortFree+0x3c>
 8006e8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e8e:	f383 8811 	msr	BASEPRI, r3
 8006e92:	f3bf 8f6f 	isb	sy
 8006e96:	f3bf 8f4f 	dsb	sy
 8006e9a:	e7fe      	b.n	8006e9a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006e9c:	ea23 0302 	bic.w	r3, r3, r2
 8006ea0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006ea4:	f001 f8e4 	bl	8008070 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006ea8:	4a0a      	ldr	r2, [pc, #40]	; (8006ed4 <vPortFree+0x74>)
 8006eaa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006eae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006eb0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006eb4:	440b      	add	r3, r1
 8006eb6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006eb8:	f7ff ff1c 	bl	8006cf4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8006ebc:	4a06      	ldr	r2, [pc, #24]	; (8006ed8 <vPortFree+0x78>)
 8006ebe:	6813      	ldr	r3, [r2, #0]
}
 8006ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8006ec4:	3301      	adds	r3, #1
 8006ec6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8006ec8:	f001 b976 	b.w	80081b8 <xTaskResumeAll>
}
 8006ecc:	bd10      	pop	{r4, pc}
 8006ece:	bf00      	nop
 8006ed0:	20009b40 	.word	0x20009b40
 8006ed4:	20009b44 	.word	0x20009b44
 8006ed8:	20009b50 	.word	0x20009b50

08006edc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006edc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006ee0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ee4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ee8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006eea:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006eec:	2300      	movs	r3, #0
 8006eee:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006ef0:	4770      	bx	lr

08006ef2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006ef2:	2300      	movs	r3, #0
 8006ef4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006ef6:	4770      	bx	lr

08006ef8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006ef8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006efa:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006efc:	689a      	ldr	r2, [r3, #8]
 8006efe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006f00:	689a      	ldr	r2, [r3, #8]
 8006f02:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006f04:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006f06:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006f08:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006f0a:	3301      	adds	r3, #1
 8006f0c:	6003      	str	r3, [r0, #0]
}
 8006f0e:	4770      	bx	lr

08006f10 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8006f10:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006f12:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006f14:	1c63      	adds	r3, r4, #1
 8006f16:	d10a      	bne.n	8006f2e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006f18:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006f1a:	685a      	ldr	r2, [r3, #4]
 8006f1c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006f1e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006f20:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006f22:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006f24:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006f26:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006f28:	3301      	adds	r3, #1
 8006f2a:	6003      	str	r3, [r0, #0]
}
 8006f2c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006f2e:	f100 0208 	add.w	r2, r0, #8
 8006f32:	4613      	mov	r3, r2
 8006f34:	6852      	ldr	r2, [r2, #4]
 8006f36:	6815      	ldr	r5, [r2, #0]
 8006f38:	42a5      	cmp	r5, r4
 8006f3a:	d9fa      	bls.n	8006f32 <vListInsert+0x22>
 8006f3c:	e7ed      	b.n	8006f1a <vListInsert+0xa>

08006f3e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006f3e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8006f42:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006f44:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8006f46:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8006f48:	6859      	ldr	r1, [r3, #4]
 8006f4a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8006f4c:	bf08      	it	eq
 8006f4e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8006f50:	2200      	movs	r2, #0
 8006f52:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8006f54:	681a      	ldr	r2, [r3, #0]
 8006f56:	3a01      	subs	r2, #1
 8006f58:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8006f5a:	6818      	ldr	r0, [r3, #0]
}
 8006f5c:	4770      	bx	lr
	...

08006f60 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006f60:	4808      	ldr	r0, [pc, #32]	; (8006f84 <prvPortStartFirstTask+0x24>)
 8006f62:	6800      	ldr	r0, [r0, #0]
 8006f64:	6800      	ldr	r0, [r0, #0]
 8006f66:	f380 8808 	msr	MSP, r0
 8006f6a:	f04f 0000 	mov.w	r0, #0
 8006f6e:	f380 8814 	msr	CONTROL, r0
 8006f72:	b662      	cpsie	i
 8006f74:	b661      	cpsie	f
 8006f76:	f3bf 8f4f 	dsb	sy
 8006f7a:	f3bf 8f6f 	isb	sy
 8006f7e:	df00      	svc	0
 8006f80:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8006f82:	0000      	.short	0x0000
 8006f84:	e000ed08 	.word	0xe000ed08

08006f88 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006f88:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006f98 <vPortEnableVFP+0x10>
 8006f8c:	6801      	ldr	r1, [r0, #0]
 8006f8e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006f92:	6001      	str	r1, [r0, #0]
 8006f94:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8006f96:	0000      	.short	0x0000
 8006f98:	e000ed88 	.word	0xe000ed88

08006f9c <prvTaskExitError>:
{
 8006f9c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006f9e:	2300      	movs	r3, #0
 8006fa0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8006fa2:	4b0d      	ldr	r3, [pc, #52]	; (8006fd8 <prvTaskExitError+0x3c>)
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	3301      	adds	r3, #1
 8006fa8:	d008      	beq.n	8006fbc <prvTaskExitError+0x20>
 8006faa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fae:	f383 8811 	msr	BASEPRI, r3
 8006fb2:	f3bf 8f6f 	isb	sy
 8006fb6:	f3bf 8f4f 	dsb	sy
 8006fba:	e7fe      	b.n	8006fba <prvTaskExitError+0x1e>
 8006fbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fc0:	f383 8811 	msr	BASEPRI, r3
 8006fc4:	f3bf 8f6f 	isb	sy
 8006fc8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8006fcc:	9b01      	ldr	r3, [sp, #4]
 8006fce:	2b00      	cmp	r3, #0
 8006fd0:	d0fc      	beq.n	8006fcc <prvTaskExitError+0x30>
}
 8006fd2:	b002      	add	sp, #8
 8006fd4:	4770      	bx	lr
 8006fd6:	bf00      	nop
 8006fd8:	2000005c 	.word	0x2000005c

08006fdc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8006fdc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006fe0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006fe4:	4b07      	ldr	r3, [pc, #28]	; (8007004 <pxPortInitialiseStack+0x28>)
 8006fe6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006fea:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006fee:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006ff2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006ff6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006ffa:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8006ffe:	3844      	subs	r0, #68	; 0x44
 8007000:	4770      	bx	lr
 8007002:	bf00      	nop
 8007004:	08006f9d 	.word	0x08006f9d
	...

08007010 <SVC_Handler>:
	__asm volatile (
 8007010:	4b07      	ldr	r3, [pc, #28]	; (8007030 <pxCurrentTCBConst2>)
 8007012:	6819      	ldr	r1, [r3, #0]
 8007014:	6808      	ldr	r0, [r1, #0]
 8007016:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800701a:	f380 8809 	msr	PSP, r0
 800701e:	f3bf 8f6f 	isb	sy
 8007022:	f04f 0000 	mov.w	r0, #0
 8007026:	f380 8811 	msr	BASEPRI, r0
 800702a:	4770      	bx	lr
 800702c:	f3af 8000 	nop.w

08007030 <pxCurrentTCBConst2>:
 8007030:	20009b64 	.word	0x20009b64

08007034 <vPortEnterCritical>:
 8007034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007038:	f383 8811 	msr	BASEPRI, r3
 800703c:	f3bf 8f6f 	isb	sy
 8007040:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007044:	4a0a      	ldr	r2, [pc, #40]	; (8007070 <vPortEnterCritical+0x3c>)
 8007046:	6813      	ldr	r3, [r2, #0]
 8007048:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800704a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800704c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800704e:	d10d      	bne.n	800706c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007050:	4b08      	ldr	r3, [pc, #32]	; (8007074 <vPortEnterCritical+0x40>)
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007058:	d008      	beq.n	800706c <vPortEnterCritical+0x38>
 800705a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800705e:	f383 8811 	msr	BASEPRI, r3
 8007062:	f3bf 8f6f 	isb	sy
 8007066:	f3bf 8f4f 	dsb	sy
 800706a:	e7fe      	b.n	800706a <vPortEnterCritical+0x36>
}
 800706c:	4770      	bx	lr
 800706e:	bf00      	nop
 8007070:	2000005c 	.word	0x2000005c
 8007074:	e000ed04 	.word	0xe000ed04

08007078 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007078:	4a08      	ldr	r2, [pc, #32]	; (800709c <vPortExitCritical+0x24>)
 800707a:	6813      	ldr	r3, [r2, #0]
 800707c:	b943      	cbnz	r3, 8007090 <vPortExitCritical+0x18>
 800707e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007082:	f383 8811 	msr	BASEPRI, r3
 8007086:	f3bf 8f6f 	isb	sy
 800708a:	f3bf 8f4f 	dsb	sy
 800708e:	e7fe      	b.n	800708e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007090:	3b01      	subs	r3, #1
 8007092:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007094:	b90b      	cbnz	r3, 800709a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007096:	f383 8811 	msr	BASEPRI, r3
}
 800709a:	4770      	bx	lr
 800709c:	2000005c 	.word	0x2000005c

080070a0 <PendSV_Handler>:
	__asm volatile
 80070a0:	f3ef 8009 	mrs	r0, PSP
 80070a4:	f3bf 8f6f 	isb	sy
 80070a8:	4b15      	ldr	r3, [pc, #84]	; (8007100 <pxCurrentTCBConst>)
 80070aa:	681a      	ldr	r2, [r3, #0]
 80070ac:	f01e 0f10 	tst.w	lr, #16
 80070b0:	bf08      	it	eq
 80070b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80070b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070ba:	6010      	str	r0, [r2, #0]
 80070bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80070c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80070c4:	f380 8811 	msr	BASEPRI, r0
 80070c8:	f3bf 8f4f 	dsb	sy
 80070cc:	f3bf 8f6f 	isb	sy
 80070d0:	f001 f970 	bl	80083b4 <vTaskSwitchContext>
 80070d4:	f04f 0000 	mov.w	r0, #0
 80070d8:	f380 8811 	msr	BASEPRI, r0
 80070dc:	bc09      	pop	{r0, r3}
 80070de:	6819      	ldr	r1, [r3, #0]
 80070e0:	6808      	ldr	r0, [r1, #0]
 80070e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070e6:	f01e 0f10 	tst.w	lr, #16
 80070ea:	bf08      	it	eq
 80070ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80070f0:	f380 8809 	msr	PSP, r0
 80070f4:	f3bf 8f6f 	isb	sy
 80070f8:	4770      	bx	lr
 80070fa:	bf00      	nop
 80070fc:	f3af 8000 	nop.w

08007100 <pxCurrentTCBConst>:
 8007100:	20009b64 	.word	0x20009b64

08007104 <xPortSysTickHandler>:
{
 8007104:	b508      	push	{r3, lr}
	__asm volatile
 8007106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800710a:	f383 8811 	msr	BASEPRI, r3
 800710e:	f3bf 8f6f 	isb	sy
 8007112:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007116:	f000 ffb9 	bl	800808c <xTaskIncrementTick>
 800711a:	b118      	cbz	r0, 8007124 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800711c:	4b03      	ldr	r3, [pc, #12]	; (800712c <xPortSysTickHandler+0x28>)
 800711e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007122:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007124:	2300      	movs	r3, #0
 8007126:	f383 8811 	msr	BASEPRI, r3
}
 800712a:	bd08      	pop	{r3, pc}
 800712c:	e000ed04 	.word	0xe000ed04

08007130 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007130:	4a08      	ldr	r2, [pc, #32]	; (8007154 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007132:	4909      	ldr	r1, [pc, #36]	; (8007158 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007134:	2300      	movs	r3, #0
 8007136:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007138:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800713a:	4b08      	ldr	r3, [pc, #32]	; (800715c <vPortSetupTimerInterrupt+0x2c>)
 800713c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	fbb3 f3f1 	udiv	r3, r3, r1
 8007146:	4906      	ldr	r1, [pc, #24]	; (8007160 <vPortSetupTimerInterrupt+0x30>)
 8007148:	3b01      	subs	r3, #1
 800714a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800714c:	2307      	movs	r3, #7
 800714e:	6013      	str	r3, [r2, #0]
}
 8007150:	4770      	bx	lr
 8007152:	bf00      	nop
 8007154:	e000e010 	.word	0xe000e010
 8007158:	e000e018 	.word	0xe000e018
 800715c:	20000050 	.word	0x20000050
 8007160:	e000e014 	.word	0xe000e014

08007164 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007164:	4b38      	ldr	r3, [pc, #224]	; (8007248 <xPortStartScheduler+0xe4>)
 8007166:	4a39      	ldr	r2, [pc, #228]	; (800724c <xPortStartScheduler+0xe8>)
{
 8007168:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800716a:	6819      	ldr	r1, [r3, #0]
 800716c:	4291      	cmp	r1, r2
 800716e:	d108      	bne.n	8007182 <xPortStartScheduler+0x1e>
	__asm volatile
 8007170:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007174:	f383 8811 	msr	BASEPRI, r3
 8007178:	f3bf 8f6f 	isb	sy
 800717c:	f3bf 8f4f 	dsb	sy
 8007180:	e7fe      	b.n	8007180 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007182:	681a      	ldr	r2, [r3, #0]
 8007184:	4b32      	ldr	r3, [pc, #200]	; (8007250 <xPortStartScheduler+0xec>)
 8007186:	429a      	cmp	r2, r3
 8007188:	d108      	bne.n	800719c <xPortStartScheduler+0x38>
 800718a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800718e:	f383 8811 	msr	BASEPRI, r3
 8007192:	f3bf 8f6f 	isb	sy
 8007196:	f3bf 8f4f 	dsb	sy
 800719a:	e7fe      	b.n	800719a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800719c:	4b2d      	ldr	r3, [pc, #180]	; (8007254 <xPortStartScheduler+0xf0>)
 800719e:	781a      	ldrb	r2, [r3, #0]
 80071a0:	b2d2      	uxtb	r2, r2
 80071a2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80071a4:	22ff      	movs	r2, #255	; 0xff
 80071a6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80071a8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80071aa:	4a2b      	ldr	r2, [pc, #172]	; (8007258 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80071ac:	b2db      	uxtb	r3, r3
 80071ae:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80071b2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80071b6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80071ba:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80071bc:	4a27      	ldr	r2, [pc, #156]	; (800725c <xPortStartScheduler+0xf8>)
 80071be:	2307      	movs	r3, #7
 80071c0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80071c2:	2100      	movs	r1, #0
 80071c4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80071c8:	0600      	lsls	r0, r0, #24
 80071ca:	f103 34ff 	add.w	r4, r3, #4294967295
 80071ce:	d40c      	bmi.n	80071ea <xPortStartScheduler+0x86>
 80071d0:	b111      	cbz	r1, 80071d8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80071d2:	2b03      	cmp	r3, #3
 80071d4:	6013      	str	r3, [r2, #0]
 80071d6:	d011      	beq.n	80071fc <xPortStartScheduler+0x98>
 80071d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071dc:	f383 8811 	msr	BASEPRI, r3
 80071e0:	f3bf 8f6f 	isb	sy
 80071e4:	f3bf 8f4f 	dsb	sy
 80071e8:	e7fe      	b.n	80071e8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80071ea:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80071ee:	005b      	lsls	r3, r3, #1
 80071f0:	b2db      	uxtb	r3, r3
 80071f2:	f88d 3003 	strb.w	r3, [sp, #3]
 80071f6:	2101      	movs	r1, #1
 80071f8:	4623      	mov	r3, r4
 80071fa:	e7e3      	b.n	80071c4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80071fc:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007200:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007202:	9b01      	ldr	r3, [sp, #4]
 8007204:	4a13      	ldr	r2, [pc, #76]	; (8007254 <xPortStartScheduler+0xf0>)
 8007206:	b2db      	uxtb	r3, r3
 8007208:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800720a:	4b15      	ldr	r3, [pc, #84]	; (8007260 <xPortStartScheduler+0xfc>)
 800720c:	681a      	ldr	r2, [r3, #0]
 800720e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007212:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007214:	681a      	ldr	r2, [r3, #0]
 8007216:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800721a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800721c:	f7ff ff88 	bl	8007130 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007220:	4b10      	ldr	r3, [pc, #64]	; (8007264 <xPortStartScheduler+0x100>)
 8007222:	2400      	movs	r4, #0
 8007224:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8007226:	f7ff feaf 	bl	8006f88 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800722a:	4a0f      	ldr	r2, [pc, #60]	; (8007268 <xPortStartScheduler+0x104>)
 800722c:	6813      	ldr	r3, [r2, #0]
 800722e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007232:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007234:	f7ff fe94 	bl	8006f60 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007238:	f001 f8bc 	bl	80083b4 <vTaskSwitchContext>
	prvTaskExitError();
 800723c:	f7ff feae 	bl	8006f9c <prvTaskExitError>
}
 8007240:	4620      	mov	r0, r4
 8007242:	b002      	add	sp, #8
 8007244:	bd10      	pop	{r4, pc}
 8007246:	bf00      	nop
 8007248:	e000ed00 	.word	0xe000ed00
 800724c:	410fc271 	.word	0x410fc271
 8007250:	410fc270 	.word	0x410fc270
 8007254:	e000e400 	.word	0xe000e400
 8007258:	20009b5c 	.word	0x20009b5c
 800725c:	20009b60 	.word	0x20009b60
 8007260:	e000ed20 	.word	0xe000ed20
 8007264:	2000005c 	.word	0x2000005c
 8007268:	e000ef34 	.word	0xe000ef34

0800726c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800726c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007270:	2b0f      	cmp	r3, #15
 8007272:	d90e      	bls.n	8007292 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007274:	4a10      	ldr	r2, [pc, #64]	; (80072b8 <vPortValidateInterruptPriority+0x4c>)
 8007276:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007278:	4a10      	ldr	r2, [pc, #64]	; (80072bc <vPortValidateInterruptPriority+0x50>)
 800727a:	7812      	ldrb	r2, [r2, #0]
 800727c:	429a      	cmp	r2, r3
 800727e:	d908      	bls.n	8007292 <vPortValidateInterruptPriority+0x26>
 8007280:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007284:	f383 8811 	msr	BASEPRI, r3
 8007288:	f3bf 8f6f 	isb	sy
 800728c:	f3bf 8f4f 	dsb	sy
 8007290:	e7fe      	b.n	8007290 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007292:	4b0b      	ldr	r3, [pc, #44]	; (80072c0 <vPortValidateInterruptPriority+0x54>)
 8007294:	4a0b      	ldr	r2, [pc, #44]	; (80072c4 <vPortValidateInterruptPriority+0x58>)
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	6812      	ldr	r2, [r2, #0]
 800729a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800729e:	4293      	cmp	r3, r2
 80072a0:	d908      	bls.n	80072b4 <vPortValidateInterruptPriority+0x48>
 80072a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072a6:	f383 8811 	msr	BASEPRI, r3
 80072aa:	f3bf 8f6f 	isb	sy
 80072ae:	f3bf 8f4f 	dsb	sy
 80072b2:	e7fe      	b.n	80072b2 <vPortValidateInterruptPriority+0x46>
	}
 80072b4:	4770      	bx	lr
 80072b6:	bf00      	nop
 80072b8:	e000e3f0 	.word	0xe000e3f0
 80072bc:	20009b5c 	.word	0x20009b5c
 80072c0:	e000ed0c 	.word	0xe000ed0c
 80072c4:	20009b60 	.word	0x20009b60

080072c8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80072c8:	b510      	push	{r4, lr}
 80072ca:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80072cc:	f7ff feb2 	bl	8007034 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80072d0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80072d2:	f7ff fed1 	bl	8007078 <vPortExitCritical>

	return xReturn;
}
 80072d6:	fab4 f084 	clz	r0, r4
 80072da:	0940      	lsrs	r0, r0, #5
 80072dc:	bd10      	pop	{r4, pc}

080072de <prvCopyDataToQueue>:
{
 80072de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072e0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80072e2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80072e4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80072e6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80072e8:	b952      	cbnz	r2, 8007300 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80072ea:	6807      	ldr	r7, [r0, #0]
 80072ec:	bb47      	cbnz	r7, 8007340 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80072ee:	6880      	ldr	r0, [r0, #8]
 80072f0:	f001 f9c2 	bl	8008678 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80072f4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80072f6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80072f8:	3601      	adds	r6, #1
 80072fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80072fc:	4628      	mov	r0, r5
 80072fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007300:	b965      	cbnz	r5, 800731c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007302:	6840      	ldr	r0, [r0, #4]
 8007304:	f014 f9b6 	bl	801b674 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007308:	6863      	ldr	r3, [r4, #4]
 800730a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800730c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800730e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007310:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007312:	4293      	cmp	r3, r2
 8007314:	d3f0      	bcc.n	80072f8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007316:	6823      	ldr	r3, [r4, #0]
 8007318:	6063      	str	r3, [r4, #4]
 800731a:	e7ed      	b.n	80072f8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800731c:	68c0      	ldr	r0, [r0, #12]
 800731e:	f014 f9a9 	bl	801b674 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007322:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007324:	68e3      	ldr	r3, [r4, #12]
 8007326:	4251      	negs	r1, r2
 8007328:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800732a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800732c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800732e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007330:	bf3e      	ittt	cc
 8007332:	68a3      	ldrcc	r3, [r4, #8]
 8007334:	185b      	addcc	r3, r3, r1
 8007336:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007338:	2d02      	cmp	r5, #2
 800733a:	d101      	bne.n	8007340 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800733c:	b116      	cbz	r6, 8007344 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800733e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007340:	2500      	movs	r5, #0
 8007342:	e7d9      	b.n	80072f8 <prvCopyDataToQueue+0x1a>
 8007344:	4635      	mov	r5, r6
 8007346:	e7d7      	b.n	80072f8 <prvCopyDataToQueue+0x1a>

08007348 <prvCopyDataFromQueue>:
{
 8007348:	4603      	mov	r3, r0
 800734a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800734c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800734e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007350:	b16a      	cbz	r2, 800736e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007352:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007354:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007356:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007358:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800735a:	bf28      	it	cs
 800735c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800735e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007360:	bf28      	it	cs
 8007362:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007364:	68d9      	ldr	r1, [r3, #12]
}
 8007366:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800736a:	f014 b983 	b.w	801b674 <memcpy>
}
 800736e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007372:	4770      	bx	lr

08007374 <prvUnlockQueue>:
{
 8007374:	b570      	push	{r4, r5, r6, lr}
 8007376:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007378:	f7ff fe5c 	bl	8007034 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800737c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007380:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007384:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007386:	2d00      	cmp	r5, #0
 8007388:	dc14      	bgt.n	80073b4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800738a:	23ff      	movs	r3, #255	; 0xff
 800738c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007390:	f7ff fe72 	bl	8007078 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007394:	f7ff fe4e 	bl	8007034 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007398:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800739c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80073a0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80073a2:	2d00      	cmp	r5, #0
 80073a4:	dc12      	bgt.n	80073cc <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80073a6:	23ff      	movs	r3, #255	; 0xff
 80073a8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80073ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80073b0:	f7ff be62 	b.w	8007078 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80073b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	d0e7      	beq.n	800738a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80073ba:	4630      	mov	r0, r6
 80073bc:	f001 f878 	bl	80084b0 <xTaskRemoveFromEventList>
 80073c0:	b108      	cbz	r0, 80073c6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80073c2:	f001 f901 	bl	80085c8 <vTaskMissedYield>
			--cTxLock;
 80073c6:	3d01      	subs	r5, #1
 80073c8:	b26d      	sxtb	r5, r5
 80073ca:	e7dc      	b.n	8007386 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80073cc:	6923      	ldr	r3, [r4, #16]
 80073ce:	2b00      	cmp	r3, #0
 80073d0:	d0e9      	beq.n	80073a6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80073d2:	4630      	mov	r0, r6
 80073d4:	f001 f86c 	bl	80084b0 <xTaskRemoveFromEventList>
 80073d8:	b108      	cbz	r0, 80073de <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80073da:	f001 f8f5 	bl	80085c8 <vTaskMissedYield>
				--cRxLock;
 80073de:	3d01      	subs	r5, #1
 80073e0:	b26d      	sxtb	r5, r5
 80073e2:	e7de      	b.n	80073a2 <prvUnlockQueue+0x2e>

080073e4 <xQueueGenericReset>:
{
 80073e4:	b538      	push	{r3, r4, r5, lr}
 80073e6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80073e8:	4604      	mov	r4, r0
 80073ea:	b940      	cbnz	r0, 80073fe <xQueueGenericReset+0x1a>
 80073ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073f0:	f383 8811 	msr	BASEPRI, r3
 80073f4:	f3bf 8f6f 	isb	sy
 80073f8:	f3bf 8f4f 	dsb	sy
 80073fc:	e7fe      	b.n	80073fc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80073fe:	f7ff fe19 	bl	8007034 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007402:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007406:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007408:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800740a:	434b      	muls	r3, r1
 800740c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800740e:	1a5b      	subs	r3, r3, r1
 8007410:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007412:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007414:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007416:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007418:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800741a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800741c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007420:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007424:	b995      	cbnz	r5, 800744c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007426:	6923      	ldr	r3, [r4, #16]
 8007428:	b163      	cbz	r3, 8007444 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800742a:	f104 0010 	add.w	r0, r4, #16
 800742e:	f001 f83f 	bl	80084b0 <xTaskRemoveFromEventList>
 8007432:	b138      	cbz	r0, 8007444 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007434:	4b0a      	ldr	r3, [pc, #40]	; (8007460 <xQueueGenericReset+0x7c>)
 8007436:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800743a:	601a      	str	r2, [r3, #0]
 800743c:	f3bf 8f4f 	dsb	sy
 8007440:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007444:	f7ff fe18 	bl	8007078 <vPortExitCritical>
}
 8007448:	2001      	movs	r0, #1
 800744a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800744c:	f104 0010 	add.w	r0, r4, #16
 8007450:	f7ff fd44 	bl	8006edc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007454:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007458:	f7ff fd40 	bl	8006edc <vListInitialise>
 800745c:	e7f2      	b.n	8007444 <xQueueGenericReset+0x60>
 800745e:	bf00      	nop
 8007460:	e000ed04 	.word	0xe000ed04

08007464 <xQueueGenericCreateStatic>:
	{
 8007464:	b513      	push	{r0, r1, r4, lr}
 8007466:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007468:	b940      	cbnz	r0, 800747c <xQueueGenericCreateStatic+0x18>
 800746a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800746e:	f383 8811 	msr	BASEPRI, r3
 8007472:	f3bf 8f6f 	isb	sy
 8007476:	f3bf 8f4f 	dsb	sy
 800747a:	e7fe      	b.n	800747a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800747c:	b943      	cbnz	r3, 8007490 <xQueueGenericCreateStatic+0x2c>
 800747e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007482:	f383 8811 	msr	BASEPRI, r3
 8007486:	f3bf 8f6f 	isb	sy
 800748a:	f3bf 8f4f 	dsb	sy
 800748e:	e7fe      	b.n	800748e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007490:	b14a      	cbz	r2, 80074a6 <xQueueGenericCreateStatic+0x42>
 8007492:	b991      	cbnz	r1, 80074ba <xQueueGenericCreateStatic+0x56>
 8007494:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007498:	f383 8811 	msr	BASEPRI, r3
 800749c:	f3bf 8f6f 	isb	sy
 80074a0:	f3bf 8f4f 	dsb	sy
 80074a4:	e7fe      	b.n	80074a4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80074a6:	b141      	cbz	r1, 80074ba <xQueueGenericCreateStatic+0x56>
 80074a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074ac:	f383 8811 	msr	BASEPRI, r3
 80074b0:	f3bf 8f6f 	isb	sy
 80074b4:	f3bf 8f4f 	dsb	sy
 80074b8:	e7fe      	b.n	80074b8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80074ba:	2350      	movs	r3, #80	; 0x50
 80074bc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80074be:	9b01      	ldr	r3, [sp, #4]
 80074c0:	2b50      	cmp	r3, #80	; 0x50
 80074c2:	d008      	beq.n	80074d6 <xQueueGenericCreateStatic+0x72>
 80074c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074c8:	f383 8811 	msr	BASEPRI, r3
 80074cc:	f3bf 8f6f 	isb	sy
 80074d0:	f3bf 8f4f 	dsb	sy
 80074d4:	e7fe      	b.n	80074d4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80074d6:	2900      	cmp	r1, #0
 80074d8:	bf08      	it	eq
 80074da:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80074dc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80074de:	6022      	str	r2, [r4, #0]
 80074e0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80074e2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80074e6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80074ea:	4619      	mov	r1, r3
 80074ec:	4620      	mov	r0, r4
 80074ee:	f7ff ff79 	bl	80073e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80074f2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80074f6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80074fa:	4620      	mov	r0, r4
 80074fc:	b002      	add	sp, #8
 80074fe:	bd10      	pop	{r4, pc}

08007500 <xQueueGenericCreate>:
	{
 8007500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007502:	460d      	mov	r5, r1
 8007504:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007506:	4606      	mov	r6, r0
 8007508:	b940      	cbnz	r0, 800751c <xQueueGenericCreate+0x1c>
 800750a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800750e:	f383 8811 	msr	BASEPRI, r3
 8007512:	f3bf 8f6f 	isb	sy
 8007516:	f3bf 8f4f 	dsb	sy
 800751a:	e7fe      	b.n	800751a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800751c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800751e:	3050      	adds	r0, #80	; 0x50
 8007520:	f7ff fc0c 	bl	8006d3c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007524:	4604      	mov	r4, r0
 8007526:	b170      	cbz	r0, 8007546 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007528:	2300      	movs	r3, #0
 800752a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800752e:	b165      	cbz	r5, 800754a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007530:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007534:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007538:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800753a:	2101      	movs	r1, #1
 800753c:	4620      	mov	r0, r4
 800753e:	f7ff ff51 	bl	80073e4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007542:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007546:	4620      	mov	r0, r4
 8007548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800754a:	4603      	mov	r3, r0
 800754c:	e7f2      	b.n	8007534 <xQueueGenericCreate+0x34>

0800754e <xQueueCreateCountingSemaphoreStatic>:
	{
 800754e:	b513      	push	{r0, r1, r4, lr}
 8007550:	4613      	mov	r3, r2
 8007552:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007554:	b940      	cbnz	r0, 8007568 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007556:	f04f 0350 	mov.w	r3, #80	; 0x50
 800755a:	f383 8811 	msr	BASEPRI, r3
 800755e:	f3bf 8f6f 	isb	sy
 8007562:	f3bf 8f4f 	dsb	sy
 8007566:	e7fe      	b.n	8007566 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007568:	4288      	cmp	r0, r1
 800756a:	d208      	bcs.n	800757e <xQueueCreateCountingSemaphoreStatic+0x30>
 800756c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007570:	f383 8811 	msr	BASEPRI, r3
 8007574:	f3bf 8f6f 	isb	sy
 8007578:	f3bf 8f4f 	dsb	sy
 800757c:	e7fe      	b.n	800757c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800757e:	2202      	movs	r2, #2
 8007580:	9200      	str	r2, [sp, #0]
 8007582:	2200      	movs	r2, #0
 8007584:	4611      	mov	r1, r2
 8007586:	f7ff ff6d 	bl	8007464 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800758a:	b100      	cbz	r0, 800758e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800758c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800758e:	b002      	add	sp, #8
 8007590:	bd10      	pop	{r4, pc}

08007592 <xQueueCreateCountingSemaphore>:
	{
 8007592:	b510      	push	{r4, lr}
 8007594:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007596:	b940      	cbnz	r0, 80075aa <xQueueCreateCountingSemaphore+0x18>
 8007598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800759c:	f383 8811 	msr	BASEPRI, r3
 80075a0:	f3bf 8f6f 	isb	sy
 80075a4:	f3bf 8f4f 	dsb	sy
 80075a8:	e7fe      	b.n	80075a8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80075aa:	4288      	cmp	r0, r1
 80075ac:	d208      	bcs.n	80075c0 <xQueueCreateCountingSemaphore+0x2e>
 80075ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075b2:	f383 8811 	msr	BASEPRI, r3
 80075b6:	f3bf 8f6f 	isb	sy
 80075ba:	f3bf 8f4f 	dsb	sy
 80075be:	e7fe      	b.n	80075be <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80075c0:	2202      	movs	r2, #2
 80075c2:	2100      	movs	r1, #0
 80075c4:	f7ff ff9c 	bl	8007500 <xQueueGenericCreate>
		if( xHandle != NULL )
 80075c8:	b100      	cbz	r0, 80075cc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80075ca:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80075cc:	bd10      	pop	{r4, pc}
	...

080075d0 <xQueueGenericSend>:
{
 80075d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075d4:	4688      	mov	r8, r1
 80075d6:	9201      	str	r2, [sp, #4]
 80075d8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80075da:	4604      	mov	r4, r0
 80075dc:	b940      	cbnz	r0, 80075f0 <xQueueGenericSend+0x20>
 80075de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075e2:	f383 8811 	msr	BASEPRI, r3
 80075e6:	f3bf 8f6f 	isb	sy
 80075ea:	f3bf 8f4f 	dsb	sy
 80075ee:	e7fe      	b.n	80075ee <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80075f0:	b951      	cbnz	r1, 8007608 <xQueueGenericSend+0x38>
 80075f2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80075f4:	b143      	cbz	r3, 8007608 <xQueueGenericSend+0x38>
 80075f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075fa:	f383 8811 	msr	BASEPRI, r3
 80075fe:	f3bf 8f6f 	isb	sy
 8007602:	f3bf 8f4f 	dsb	sy
 8007606:	e7fe      	b.n	8007606 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007608:	2f02      	cmp	r7, #2
 800760a:	d10b      	bne.n	8007624 <xQueueGenericSend+0x54>
 800760c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800760e:	2b01      	cmp	r3, #1
 8007610:	d008      	beq.n	8007624 <xQueueGenericSend+0x54>
 8007612:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007616:	f383 8811 	msr	BASEPRI, r3
 800761a:	f3bf 8f6f 	isb	sy
 800761e:	f3bf 8f4f 	dsb	sy
 8007622:	e7fe      	b.n	8007622 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007624:	f000 ffd6 	bl	80085d4 <xTaskGetSchedulerState>
 8007628:	4606      	mov	r6, r0
 800762a:	b950      	cbnz	r0, 8007642 <xQueueGenericSend+0x72>
 800762c:	9b01      	ldr	r3, [sp, #4]
 800762e:	b14b      	cbz	r3, 8007644 <xQueueGenericSend+0x74>
 8007630:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007634:	f383 8811 	msr	BASEPRI, r3
 8007638:	f3bf 8f6f 	isb	sy
 800763c:	f3bf 8f4f 	dsb	sy
 8007640:	e7fe      	b.n	8007640 <xQueueGenericSend+0x70>
 8007642:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007644:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007730 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007648:	f04f 0900 	mov.w	r9, #0
 800764c:	e037      	b.n	80076be <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800764e:	9d01      	ldr	r5, [sp, #4]
 8007650:	b91d      	cbnz	r5, 800765a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007652:	f7ff fd11 	bl	8007078 <vPortExitCritical>
			return errQUEUE_FULL;
 8007656:	2000      	movs	r0, #0
 8007658:	e050      	b.n	80076fc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800765a:	b916      	cbnz	r6, 8007662 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800765c:	a802      	add	r0, sp, #8
 800765e:	f000 ff6b 	bl	8008538 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007662:	f7ff fd09 	bl	8007078 <vPortExitCritical>
		vTaskSuspendAll();
 8007666:	f000 fd03 	bl	8008070 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800766a:	f7ff fce3 	bl	8007034 <vPortEnterCritical>
 800766e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007672:	2bff      	cmp	r3, #255	; 0xff
 8007674:	bf08      	it	eq
 8007676:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800767a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800767e:	2bff      	cmp	r3, #255	; 0xff
 8007680:	bf08      	it	eq
 8007682:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007686:	f7ff fcf7 	bl	8007078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800768a:	a901      	add	r1, sp, #4
 800768c:	a802      	add	r0, sp, #8
 800768e:	f000 ff5f 	bl	8008550 <xTaskCheckForTimeOut>
 8007692:	2800      	cmp	r0, #0
 8007694:	d146      	bne.n	8007724 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007696:	f7ff fccd 	bl	8007034 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800769a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800769c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800769e:	429a      	cmp	r2, r3
 80076a0:	d12f      	bne.n	8007702 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80076a2:	f7ff fce9 	bl	8007078 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80076a6:	9901      	ldr	r1, [sp, #4]
 80076a8:	f104 0010 	add.w	r0, r4, #16
 80076ac:	f000 fec8 	bl	8008440 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80076b0:	4620      	mov	r0, r4
 80076b2:	f7ff fe5f 	bl	8007374 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80076b6:	f000 fd7f 	bl	80081b8 <xTaskResumeAll>
 80076ba:	b350      	cbz	r0, 8007712 <xQueueGenericSend+0x142>
 80076bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80076be:	f7ff fcb9 	bl	8007034 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80076c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80076c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076c6:	429a      	cmp	r2, r3
 80076c8:	d301      	bcc.n	80076ce <xQueueGenericSend+0xfe>
 80076ca:	2f02      	cmp	r7, #2
 80076cc:	d1bf      	bne.n	800764e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80076ce:	463a      	mov	r2, r7
 80076d0:	4641      	mov	r1, r8
 80076d2:	4620      	mov	r0, r4
 80076d4:	f7ff fe03 	bl	80072de <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80076d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80076da:	b11b      	cbz	r3, 80076e4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80076dc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80076e0:	f000 fee6 	bl	80084b0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80076e4:	b138      	cbz	r0, 80076f6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 80076e6:	4b12      	ldr	r3, [pc, #72]	; (8007730 <xQueueGenericSend+0x160>)
 80076e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80076ec:	601a      	str	r2, [r3, #0]
 80076ee:	f3bf 8f4f 	dsb	sy
 80076f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80076f6:	f7ff fcbf 	bl	8007078 <vPortExitCritical>
				return pdPASS;
 80076fa:	2001      	movs	r0, #1
}
 80076fc:	b004      	add	sp, #16
 80076fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007702:	f7ff fcb9 	bl	8007078 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007706:	4620      	mov	r0, r4
 8007708:	f7ff fe34 	bl	8007374 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800770c:	f000 fd54 	bl	80081b8 <xTaskResumeAll>
 8007710:	e7d4      	b.n	80076bc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007712:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007716:	f8ca 3000 	str.w	r3, [sl]
 800771a:	f3bf 8f4f 	dsb	sy
 800771e:	f3bf 8f6f 	isb	sy
 8007722:	e7cb      	b.n	80076bc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8007724:	4620      	mov	r0, r4
 8007726:	f7ff fe25 	bl	8007374 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800772a:	f000 fd45 	bl	80081b8 <xTaskResumeAll>
 800772e:	e792      	b.n	8007656 <xQueueGenericSend+0x86>
 8007730:	e000ed04 	.word	0xe000ed04

08007734 <xQueueGenericSendFromISR>:
{
 8007734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007738:	4689      	mov	r9, r1
 800773a:	4690      	mov	r8, r2
 800773c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800773e:	4604      	mov	r4, r0
 8007740:	b940      	cbnz	r0, 8007754 <xQueueGenericSendFromISR+0x20>
 8007742:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007746:	f383 8811 	msr	BASEPRI, r3
 800774a:	f3bf 8f6f 	isb	sy
 800774e:	f3bf 8f4f 	dsb	sy
 8007752:	e7fe      	b.n	8007752 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007754:	b951      	cbnz	r1, 800776c <xQueueGenericSendFromISR+0x38>
 8007756:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007758:	b143      	cbz	r3, 800776c <xQueueGenericSendFromISR+0x38>
 800775a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800775e:	f383 8811 	msr	BASEPRI, r3
 8007762:	f3bf 8f6f 	isb	sy
 8007766:	f3bf 8f4f 	dsb	sy
 800776a:	e7fe      	b.n	800776a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800776c:	2f02      	cmp	r7, #2
 800776e:	d10b      	bne.n	8007788 <xQueueGenericSendFromISR+0x54>
 8007770:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007772:	2b01      	cmp	r3, #1
 8007774:	d008      	beq.n	8007788 <xQueueGenericSendFromISR+0x54>
 8007776:	f04f 0350 	mov.w	r3, #80	; 0x50
 800777a:	f383 8811 	msr	BASEPRI, r3
 800777e:	f3bf 8f6f 	isb	sy
 8007782:	f3bf 8f4f 	dsb	sy
 8007786:	e7fe      	b.n	8007786 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007788:	f7ff fd70 	bl	800726c <vPortValidateInterruptPriority>
	__asm volatile
 800778c:	f3ef 8611 	mrs	r6, BASEPRI
 8007790:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007794:	f383 8811 	msr	BASEPRI, r3
 8007798:	f3bf 8f6f 	isb	sy
 800779c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80077a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80077a4:	429a      	cmp	r2, r3
 80077a6:	d301      	bcc.n	80077ac <xQueueGenericSendFromISR+0x78>
 80077a8:	2f02      	cmp	r7, #2
 80077aa:	d123      	bne.n	80077f4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 80077ac:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80077b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80077b2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80077b4:	463a      	mov	r2, r7
 80077b6:	4649      	mov	r1, r9
 80077b8:	4620      	mov	r0, r4
 80077ba:	f7ff fd90 	bl	80072de <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80077be:	1c6b      	adds	r3, r5, #1
 80077c0:	d113      	bne.n	80077ea <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077c4:	b90b      	cbnz	r3, 80077ca <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 80077c6:	2001      	movs	r0, #1
 80077c8:	e00b      	b.n	80077e2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80077ce:	f000 fe6f 	bl	80084b0 <xTaskRemoveFromEventList>
 80077d2:	2800      	cmp	r0, #0
 80077d4:	d0f7      	beq.n	80077c6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80077d6:	f1b8 0f00 	cmp.w	r8, #0
 80077da:	d0f4      	beq.n	80077c6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80077dc:	2001      	movs	r0, #1
 80077de:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80077e2:	f386 8811 	msr	BASEPRI, r6
}
 80077e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80077ea:	3501      	adds	r5, #1
 80077ec:	b26d      	sxtb	r5, r5
 80077ee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80077f2:	e7e8      	b.n	80077c6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 80077f4:	2000      	movs	r0, #0
 80077f6:	e7f4      	b.n	80077e2 <xQueueGenericSendFromISR+0xae>

080077f8 <xQueueGiveFromISR>:
{
 80077f8:	b570      	push	{r4, r5, r6, lr}
 80077fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80077fc:	4604      	mov	r4, r0
 80077fe:	b940      	cbnz	r0, 8007812 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007800:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007804:	f383 8811 	msr	BASEPRI, r3
 8007808:	f3bf 8f6f 	isb	sy
 800780c:	f3bf 8f4f 	dsb	sy
 8007810:	e7fe      	b.n	8007810 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007812:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007814:	b143      	cbz	r3, 8007828 <xQueueGiveFromISR+0x30>
 8007816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800781a:	f383 8811 	msr	BASEPRI, r3
 800781e:	f3bf 8f6f 	isb	sy
 8007822:	f3bf 8f4f 	dsb	sy
 8007826:	e7fe      	b.n	8007826 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007828:	6803      	ldr	r3, [r0, #0]
 800782a:	b953      	cbnz	r3, 8007842 <xQueueGiveFromISR+0x4a>
 800782c:	6883      	ldr	r3, [r0, #8]
 800782e:	b143      	cbz	r3, 8007842 <xQueueGiveFromISR+0x4a>
 8007830:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007834:	f383 8811 	msr	BASEPRI, r3
 8007838:	f3bf 8f6f 	isb	sy
 800783c:	f3bf 8f4f 	dsb	sy
 8007840:	e7fe      	b.n	8007840 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007842:	f7ff fd13 	bl	800726c <vPortValidateInterruptPriority>
	__asm volatile
 8007846:	f3ef 8611 	mrs	r6, BASEPRI
 800784a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800784e:	f383 8811 	msr	BASEPRI, r3
 8007852:	f3bf 8f6f 	isb	sy
 8007856:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800785a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800785c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800785e:	4293      	cmp	r3, r2
 8007860:	d91c      	bls.n	800789c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007862:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007866:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007868:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800786a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800786c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800786e:	d110      	bne.n	8007892 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007870:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007872:	b90b      	cbnz	r3, 8007878 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007874:	2001      	movs	r0, #1
 8007876:	e009      	b.n	800788c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007878:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800787c:	f000 fe18 	bl	80084b0 <xTaskRemoveFromEventList>
 8007880:	2800      	cmp	r0, #0
 8007882:	d0f7      	beq.n	8007874 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007884:	2d00      	cmp	r5, #0
 8007886:	d0f5      	beq.n	8007874 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007888:	2001      	movs	r0, #1
 800788a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800788c:	f386 8811 	msr	BASEPRI, r6
}
 8007890:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007892:	3301      	adds	r3, #1
 8007894:	b25b      	sxtb	r3, r3
 8007896:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800789a:	e7eb      	b.n	8007874 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800789c:	2000      	movs	r0, #0
 800789e:	e7f5      	b.n	800788c <xQueueGiveFromISR+0x94>

080078a0 <xQueueReceive>:
{
 80078a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80078a4:	b085      	sub	sp, #20
 80078a6:	460f      	mov	r7, r1
 80078a8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80078aa:	4604      	mov	r4, r0
 80078ac:	b940      	cbnz	r0, 80078c0 <xQueueReceive+0x20>
	__asm volatile
 80078ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078b2:	f383 8811 	msr	BASEPRI, r3
 80078b6:	f3bf 8f6f 	isb	sy
 80078ba:	f3bf 8f4f 	dsb	sy
 80078be:	e7fe      	b.n	80078be <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80078c0:	b951      	cbnz	r1, 80078d8 <xQueueReceive+0x38>
 80078c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80078c4:	b143      	cbz	r3, 80078d8 <xQueueReceive+0x38>
 80078c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ca:	f383 8811 	msr	BASEPRI, r3
 80078ce:	f3bf 8f6f 	isb	sy
 80078d2:	f3bf 8f4f 	dsb	sy
 80078d6:	e7fe      	b.n	80078d6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80078d8:	f000 fe7c 	bl	80085d4 <xTaskGetSchedulerState>
 80078dc:	4606      	mov	r6, r0
 80078de:	b950      	cbnz	r0, 80078f6 <xQueueReceive+0x56>
 80078e0:	9b01      	ldr	r3, [sp, #4]
 80078e2:	b14b      	cbz	r3, 80078f8 <xQueueReceive+0x58>
 80078e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078e8:	f383 8811 	msr	BASEPRI, r3
 80078ec:	f3bf 8f6f 	isb	sy
 80078f0:	f3bf 8f4f 	dsb	sy
 80078f4:	e7fe      	b.n	80078f4 <xQueueReceive+0x54>
 80078f6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80078f8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80079dc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 80078fc:	f04f 0800 	mov.w	r8, #0
 8007900:	e03b      	b.n	800797a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007902:	9d01      	ldr	r5, [sp, #4]
 8007904:	b91d      	cbnz	r5, 800790e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8007906:	f7ff fbb7 	bl	8007078 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800790a:	2000      	movs	r0, #0
 800790c:	e052      	b.n	80079b4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800790e:	b916      	cbnz	r6, 8007916 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007910:	a802      	add	r0, sp, #8
 8007912:	f000 fe11 	bl	8008538 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007916:	f7ff fbaf 	bl	8007078 <vPortExitCritical>
		vTaskSuspendAll();
 800791a:	f000 fba9 	bl	8008070 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800791e:	f7ff fb89 	bl	8007034 <vPortEnterCritical>
 8007922:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007926:	2bff      	cmp	r3, #255	; 0xff
 8007928:	bf08      	it	eq
 800792a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800792e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007932:	2bff      	cmp	r3, #255	; 0xff
 8007934:	bf08      	it	eq
 8007936:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800793a:	f7ff fb9d 	bl	8007078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800793e:	a901      	add	r1, sp, #4
 8007940:	a802      	add	r0, sp, #8
 8007942:	f000 fe05 	bl	8008550 <xTaskCheckForTimeOut>
 8007946:	2800      	cmp	r0, #0
 8007948:	d13d      	bne.n	80079c6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800794a:	4620      	mov	r0, r4
 800794c:	f7ff fcbc 	bl	80072c8 <prvIsQueueEmpty>
 8007950:	b398      	cbz	r0, 80079ba <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007952:	9901      	ldr	r1, [sp, #4]
 8007954:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007958:	f000 fd72 	bl	8008440 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800795c:	4620      	mov	r0, r4
 800795e:	f7ff fd09 	bl	8007374 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007962:	f000 fc29 	bl	80081b8 <xTaskResumeAll>
 8007966:	b938      	cbnz	r0, 8007978 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8007968:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800796c:	f8c9 3000 	str.w	r3, [r9]
 8007970:	f3bf 8f4f 	dsb	sy
 8007974:	f3bf 8f6f 	isb	sy
 8007978:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800797a:	f7ff fb5b 	bl	8007034 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800797e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007980:	2d00      	cmp	r5, #0
 8007982:	d0be      	beq.n	8007902 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007984:	4639      	mov	r1, r7
 8007986:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007988:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800798a:	f7ff fcdd 	bl	8007348 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800798e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007990:	6923      	ldr	r3, [r4, #16]
 8007992:	b163      	cbz	r3, 80079ae <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007994:	f104 0010 	add.w	r0, r4, #16
 8007998:	f000 fd8a 	bl	80084b0 <xTaskRemoveFromEventList>
 800799c:	b138      	cbz	r0, 80079ae <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800799e:	4b0f      	ldr	r3, [pc, #60]	; (80079dc <xQueueReceive+0x13c>)
 80079a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80079a4:	601a      	str	r2, [r3, #0]
 80079a6:	f3bf 8f4f 	dsb	sy
 80079aa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80079ae:	f7ff fb63 	bl	8007078 <vPortExitCritical>
				return pdPASS;
 80079b2:	2001      	movs	r0, #1
}
 80079b4:	b005      	add	sp, #20
 80079b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 80079ba:	4620      	mov	r0, r4
 80079bc:	f7ff fcda 	bl	8007374 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80079c0:	f000 fbfa 	bl	80081b8 <xTaskResumeAll>
 80079c4:	e7d8      	b.n	8007978 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 80079c6:	4620      	mov	r0, r4
 80079c8:	f7ff fcd4 	bl	8007374 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80079cc:	f000 fbf4 	bl	80081b8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80079d0:	4620      	mov	r0, r4
 80079d2:	f7ff fc79 	bl	80072c8 <prvIsQueueEmpty>
 80079d6:	2800      	cmp	r0, #0
 80079d8:	d0ce      	beq.n	8007978 <xQueueReceive+0xd8>
 80079da:	e796      	b.n	800790a <xQueueReceive+0x6a>
 80079dc:	e000ed04 	.word	0xe000ed04

080079e0 <xQueueSemaphoreTake>:
{
 80079e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80079e4:	4604      	mov	r4, r0
{
 80079e6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80079e8:	b940      	cbnz	r0, 80079fc <xQueueSemaphoreTake+0x1c>
 80079ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079ee:	f383 8811 	msr	BASEPRI, r3
 80079f2:	f3bf 8f6f 	isb	sy
 80079f6:	f3bf 8f4f 	dsb	sy
 80079fa:	e7fe      	b.n	80079fa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80079fc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80079fe:	b145      	cbz	r5, 8007a12 <xQueueSemaphoreTake+0x32>
 8007a00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a04:	f383 8811 	msr	BASEPRI, r3
 8007a08:	f3bf 8f6f 	isb	sy
 8007a0c:	f3bf 8f4f 	dsb	sy
 8007a10:	e7fe      	b.n	8007a10 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007a12:	f000 fddf 	bl	80085d4 <xTaskGetSchedulerState>
 8007a16:	4606      	mov	r6, r0
 8007a18:	b950      	cbnz	r0, 8007a30 <xQueueSemaphoreTake+0x50>
 8007a1a:	9b01      	ldr	r3, [sp, #4]
 8007a1c:	b16b      	cbz	r3, 8007a3a <xQueueSemaphoreTake+0x5a>
 8007a1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a22:	f383 8811 	msr	BASEPRI, r3
 8007a26:	f3bf 8f6f 	isb	sy
 8007a2a:	f3bf 8f4f 	dsb	sy
 8007a2e:	e7fe      	b.n	8007a2e <xQueueSemaphoreTake+0x4e>
 8007a30:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8007a32:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8007b64 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8007a36:	2700      	movs	r7, #0
 8007a38:	e051      	b.n	8007ade <xQueueSemaphoreTake+0xfe>
 8007a3a:	4605      	mov	r5, r0
 8007a3c:	e7f9      	b.n	8007a32 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007a3e:	9b01      	ldr	r3, [sp, #4]
 8007a40:	b963      	cbnz	r3, 8007a5c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007a42:	b145      	cbz	r5, 8007a56 <xQueueSemaphoreTake+0x76>
 8007a44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a48:	f383 8811 	msr	BASEPRI, r3
 8007a4c:	f3bf 8f6f 	isb	sy
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	e7fe      	b.n	8007a54 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8007a56:	f7ff fb0f 	bl	8007078 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007a5a:	e05e      	b.n	8007b1a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 8007a5c:	b916      	cbnz	r6, 8007a64 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007a5e:	a802      	add	r0, sp, #8
 8007a60:	f000 fd6a 	bl	8008538 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007a64:	f7ff fb08 	bl	8007078 <vPortExitCritical>
		vTaskSuspendAll();
 8007a68:	f000 fb02 	bl	8008070 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007a6c:	f7ff fae2 	bl	8007034 <vPortEnterCritical>
 8007a70:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007a74:	2bff      	cmp	r3, #255	; 0xff
 8007a76:	bf08      	it	eq
 8007a78:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007a7c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a80:	2bff      	cmp	r3, #255	; 0xff
 8007a82:	bf08      	it	eq
 8007a84:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007a88:	f7ff faf6 	bl	8007078 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a8c:	a901      	add	r1, sp, #4
 8007a8e:	a802      	add	r0, sp, #8
 8007a90:	f000 fd5e 	bl	8008550 <xTaskCheckForTimeOut>
 8007a94:	2800      	cmp	r0, #0
 8007a96:	d14a      	bne.n	8007b2e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a98:	4620      	mov	r0, r4
 8007a9a:	f7ff fc15 	bl	80072c8 <prvIsQueueEmpty>
 8007a9e:	2800      	cmp	r0, #0
 8007aa0:	d03f      	beq.n	8007b22 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007aa2:	6823      	ldr	r3, [r4, #0]
 8007aa4:	b93b      	cbnz	r3, 8007ab6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8007aa6:	f7ff fac5 	bl	8007034 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007aaa:	68a0      	ldr	r0, [r4, #8]
 8007aac:	f000 fda2 	bl	80085f4 <xTaskPriorityInherit>
 8007ab0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007ab2:	f7ff fae1 	bl	8007078 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007ab6:	9901      	ldr	r1, [sp, #4]
 8007ab8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007abc:	f000 fcc0 	bl	8008440 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007ac0:	4620      	mov	r0, r4
 8007ac2:	f7ff fc57 	bl	8007374 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ac6:	f000 fb77 	bl	80081b8 <xTaskResumeAll>
 8007aca:	b938      	cbnz	r0, 8007adc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007acc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007ad0:	f8c8 3000 	str.w	r3, [r8]
 8007ad4:	f3bf 8f4f 	dsb	sy
 8007ad8:	f3bf 8f6f 	isb	sy
 8007adc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007ade:	f7ff faa9 	bl	8007034 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007ae2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007ae4:	2b00      	cmp	r3, #0
 8007ae6:	d0aa      	beq.n	8007a3e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007ae8:	3b01      	subs	r3, #1
 8007aea:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007aec:	6823      	ldr	r3, [r4, #0]
 8007aee:	b913      	cbnz	r3, 8007af6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007af0:	f000 fe58 	bl	80087a4 <pvTaskIncrementMutexHeldCount>
 8007af4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007af6:	6923      	ldr	r3, [r4, #16]
 8007af8:	b163      	cbz	r3, 8007b14 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007afa:	f104 0010 	add.w	r0, r4, #16
 8007afe:	f000 fcd7 	bl	80084b0 <xTaskRemoveFromEventList>
 8007b02:	b138      	cbz	r0, 8007b14 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8007b04:	4b17      	ldr	r3, [pc, #92]	; (8007b64 <xQueueSemaphoreTake+0x184>)
 8007b06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b0a:	601a      	str	r2, [r3, #0]
 8007b0c:	f3bf 8f4f 	dsb	sy
 8007b10:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007b14:	f7ff fab0 	bl	8007078 <vPortExitCritical>
				return pdPASS;
 8007b18:	2501      	movs	r5, #1
}
 8007b1a:	4628      	mov	r0, r5
 8007b1c:	b004      	add	sp, #16
 8007b1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007b22:	4620      	mov	r0, r4
 8007b24:	f7ff fc26 	bl	8007374 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007b28:	f000 fb46 	bl	80081b8 <xTaskResumeAll>
 8007b2c:	e7d6      	b.n	8007adc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007b2e:	4620      	mov	r0, r4
 8007b30:	f7ff fc20 	bl	8007374 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007b34:	f000 fb40 	bl	80081b8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b38:	4620      	mov	r0, r4
 8007b3a:	f7ff fbc5 	bl	80072c8 <prvIsQueueEmpty>
 8007b3e:	2800      	cmp	r0, #0
 8007b40:	d0cc      	beq.n	8007adc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007b42:	2d00      	cmp	r5, #0
 8007b44:	d0e9      	beq.n	8007b1a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8007b46:	f7ff fa75 	bl	8007034 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007b4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007b4c:	b119      	cbz	r1, 8007b56 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007b4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007b50:	6819      	ldr	r1, [r3, #0]
 8007b52:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007b56:	68a0      	ldr	r0, [r4, #8]
 8007b58:	f000 fdd2 	bl	8008700 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007b5c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007b5e:	f7ff fa8b 	bl	8007078 <vPortExitCritical>
 8007b62:	e7da      	b.n	8007b1a <xQueueSemaphoreTake+0x13a>
 8007b64:	e000ed04 	.word	0xe000ed04

08007b68 <xQueueReceiveFromISR>:
{
 8007b68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b6c:	4689      	mov	r9, r1
 8007b6e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007b70:	4605      	mov	r5, r0
 8007b72:	b940      	cbnz	r0, 8007b86 <xQueueReceiveFromISR+0x1e>
 8007b74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b78:	f383 8811 	msr	BASEPRI, r3
 8007b7c:	f3bf 8f6f 	isb	sy
 8007b80:	f3bf 8f4f 	dsb	sy
 8007b84:	e7fe      	b.n	8007b84 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b86:	b951      	cbnz	r1, 8007b9e <xQueueReceiveFromISR+0x36>
 8007b88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007b8a:	b143      	cbz	r3, 8007b9e <xQueueReceiveFromISR+0x36>
 8007b8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b90:	f383 8811 	msr	BASEPRI, r3
 8007b94:	f3bf 8f6f 	isb	sy
 8007b98:	f3bf 8f4f 	dsb	sy
 8007b9c:	e7fe      	b.n	8007b9c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b9e:	f7ff fb65 	bl	800726c <vPortValidateInterruptPriority>
	__asm volatile
 8007ba2:	f3ef 8711 	mrs	r7, BASEPRI
 8007ba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007baa:	f383 8811 	msr	BASEPRI, r3
 8007bae:	f3bf 8f6f 	isb	sy
 8007bb2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007bb6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007bb8:	b31c      	cbz	r4, 8007c02 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007bba:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007bbe:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007bc0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007bc2:	4628      	mov	r0, r5
 8007bc4:	f7ff fbc0 	bl	8007348 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007bc8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007bca:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007bcc:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007bce:	d113      	bne.n	8007bf8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007bd0:	692b      	ldr	r3, [r5, #16]
 8007bd2:	b90b      	cbnz	r3, 8007bd8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007bd4:	2001      	movs	r0, #1
 8007bd6:	e00b      	b.n	8007bf0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bd8:	f105 0010 	add.w	r0, r5, #16
 8007bdc:	f000 fc68 	bl	80084b0 <xTaskRemoveFromEventList>
 8007be0:	2800      	cmp	r0, #0
 8007be2:	d0f7      	beq.n	8007bd4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007be4:	f1b8 0f00 	cmp.w	r8, #0
 8007be8:	d0f4      	beq.n	8007bd4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007bea:	2001      	movs	r0, #1
 8007bec:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007bf0:	f387 8811 	msr	BASEPRI, r7
}
 8007bf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007bf8:	3601      	adds	r6, #1
 8007bfa:	b276      	sxtb	r6, r6
 8007bfc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007c00:	e7e8      	b.n	8007bd4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007c02:	4620      	mov	r0, r4
 8007c04:	e7f4      	b.n	8007bf0 <xQueueReceiveFromISR+0x88>
	...

08007c08 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007c08:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007c0a:	4a07      	ldr	r2, [pc, #28]	; (8007c28 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007c0c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007c0e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007c12:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007c16:	b91d      	cbnz	r5, 8007c20 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007c18:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007c1c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007c1e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007c20:	3301      	adds	r3, #1
 8007c22:	2b08      	cmp	r3, #8
 8007c24:	d1f3      	bne.n	8007c0e <vQueueAddToRegistry+0x6>
 8007c26:	e7fa      	b.n	8007c1e <vQueueAddToRegistry+0x16>
 8007c28:	2000a6b4 	.word	0x2000a6b4

08007c2c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007c2c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007c2e:	4909      	ldr	r1, [pc, #36]	; (8007c54 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007c30:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007c32:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8007c36:	4282      	cmp	r2, r0
 8007c38:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8007c3c:	d106      	bne.n	8007c4c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007c3e:	4a06      	ldr	r2, [pc, #24]	; (8007c58 <vQueueUnregisterQueue+0x2c>)
 8007c40:	2100      	movs	r1, #0
 8007c42:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007c46:	4422      	add	r2, r4
 8007c48:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007c4a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007c4c:	3301      	adds	r3, #1
 8007c4e:	2b08      	cmp	r3, #8
 8007c50:	d1ef      	bne.n	8007c32 <vQueueUnregisterQueue+0x6>
 8007c52:	e7fa      	b.n	8007c4a <vQueueUnregisterQueue+0x1e>
 8007c54:	2000a6b8 	.word	0x2000a6b8
 8007c58:	2000a6b4 	.word	0x2000a6b4

08007c5c <vQueueDelete>:
{
 8007c5c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007c5e:	b940      	cbnz	r0, 8007c72 <vQueueDelete+0x16>
	__asm volatile
 8007c60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c64:	f383 8811 	msr	BASEPRI, r3
 8007c68:	f3bf 8f6f 	isb	sy
 8007c6c:	f3bf 8f4f 	dsb	sy
 8007c70:	e7fe      	b.n	8007c70 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8007c72:	f7ff ffdb 	bl	8007c2c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007c76:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8007c7a:	b91b      	cbnz	r3, 8007c84 <vQueueDelete+0x28>
}
 8007c7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007c80:	f7ff b8ee 	b.w	8006e60 <vPortFree>
}
 8007c84:	bd10      	pop	{r4, pc}

08007c86 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007c86:	b570      	push	{r4, r5, r6, lr}
 8007c88:	4604      	mov	r4, r0
 8007c8a:	460d      	mov	r5, r1
 8007c8c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007c8e:	f7ff f9d1 	bl	8007034 <vPortEnterCritical>
 8007c92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007c96:	2bff      	cmp	r3, #255	; 0xff
 8007c98:	bf04      	itt	eq
 8007c9a:	2300      	moveq	r3, #0
 8007c9c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007ca0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007ca4:	2bff      	cmp	r3, #255	; 0xff
 8007ca6:	bf04      	itt	eq
 8007ca8:	2300      	moveq	r3, #0
 8007caa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007cae:	f7ff f9e3 	bl	8007078 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007cb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007cb4:	b92b      	cbnz	r3, 8007cc2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007cb6:	4632      	mov	r2, r6
 8007cb8:	4629      	mov	r1, r5
 8007cba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007cbe:	f000 fbd9 	bl	8008474 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007cc2:	4620      	mov	r0, r4
	}
 8007cc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007cc8:	f7ff bb54 	b.w	8007374 <prvUnlockQueue>

08007ccc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007cd0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007cd2:	f7ff f9af 	bl	8007034 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007cd6:	4b2f      	ldr	r3, [pc, #188]	; (8007d94 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007cd8:	4d2f      	ldr	r5, [pc, #188]	; (8007d98 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007cda:	681a      	ldr	r2, [r3, #0]
 8007cdc:	4f2f      	ldr	r7, [pc, #188]	; (8007d9c <prvAddNewTaskToReadyList+0xd0>)
 8007cde:	3201      	adds	r2, #1
 8007ce0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007ce2:	682e      	ldr	r6, [r5, #0]
 8007ce4:	2e00      	cmp	r6, #0
 8007ce6:	d149      	bne.n	8007d7c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007ce8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	2b01      	cmp	r3, #1
 8007cee:	d11f      	bne.n	8007d30 <prvAddNewTaskToReadyList+0x64>
 8007cf0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007cf2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007cf4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007cf6:	f7ff f8f1 	bl	8006edc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007cfa:	2e38      	cmp	r6, #56	; 0x38
 8007cfc:	f108 0814 	add.w	r8, r8, #20
 8007d00:	d1f7      	bne.n	8007cf2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007d02:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007dc8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007d06:	4e26      	ldr	r6, [pc, #152]	; (8007da0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8007d08:	4640      	mov	r0, r8
 8007d0a:	f7ff f8e7 	bl	8006edc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007d0e:	4630      	mov	r0, r6
 8007d10:	f7ff f8e4 	bl	8006edc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007d14:	4823      	ldr	r0, [pc, #140]	; (8007da4 <prvAddNewTaskToReadyList+0xd8>)
 8007d16:	f7ff f8e1 	bl	8006edc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007d1a:	4823      	ldr	r0, [pc, #140]	; (8007da8 <prvAddNewTaskToReadyList+0xdc>)
 8007d1c:	f7ff f8de 	bl	8006edc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007d20:	4822      	ldr	r0, [pc, #136]	; (8007dac <prvAddNewTaskToReadyList+0xe0>)
 8007d22:	f7ff f8db 	bl	8006edc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007d26:	4b22      	ldr	r3, [pc, #136]	; (8007db0 <prvAddNewTaskToReadyList+0xe4>)
 8007d28:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007d2c:	4b21      	ldr	r3, [pc, #132]	; (8007db4 <prvAddNewTaskToReadyList+0xe8>)
 8007d2e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007d30:	4a21      	ldr	r2, [pc, #132]	; (8007db8 <prvAddNewTaskToReadyList+0xec>)
 8007d32:	6813      	ldr	r3, [r2, #0]
 8007d34:	3301      	adds	r3, #1
 8007d36:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007d38:	4a20      	ldr	r2, [pc, #128]	; (8007dbc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007d3a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007d3c:	6811      	ldr	r1, [r2, #0]
 8007d3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007d40:	2014      	movs	r0, #20
 8007d42:	428b      	cmp	r3, r1
 8007d44:	fb00 7003 	mla	r0, r0, r3, r7
 8007d48:	f104 0104 	add.w	r1, r4, #4
 8007d4c:	bf88      	it	hi
 8007d4e:	6013      	strhi	r3, [r2, #0]
 8007d50:	f7ff f8d2 	bl	8006ef8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007d54:	f7ff f990 	bl	8007078 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007d58:	4b19      	ldr	r3, [pc, #100]	; (8007dc0 <prvAddNewTaskToReadyList+0xf4>)
 8007d5a:	681b      	ldr	r3, [r3, #0]
 8007d5c:	b163      	cbz	r3, 8007d78 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007d5e:	682b      	ldr	r3, [r5, #0]
 8007d60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007d64:	429a      	cmp	r2, r3
 8007d66:	d207      	bcs.n	8007d78 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007d68:	4b16      	ldr	r3, [pc, #88]	; (8007dc4 <prvAddNewTaskToReadyList+0xf8>)
 8007d6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d6e:	601a      	str	r2, [r3, #0]
 8007d70:	f3bf 8f4f 	dsb	sy
 8007d74:	f3bf 8f6f 	isb	sy
}
 8007d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007d7c:	4b10      	ldr	r3, [pc, #64]	; (8007dc0 <prvAddNewTaskToReadyList+0xf4>)
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	2b00      	cmp	r3, #0
 8007d82:	d1d5      	bne.n	8007d30 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007d84:	682b      	ldr	r3, [r5, #0]
 8007d86:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007d8a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007d8c:	bf98      	it	ls
 8007d8e:	602c      	strls	r4, [r5, #0]
 8007d90:	e7ce      	b.n	8007d30 <prvAddNewTaskToReadyList+0x64>
 8007d92:	bf00      	nop
 8007d94:	20009fd0 	.word	0x20009fd0
 8007d98:	20009b64 	.word	0x20009b64
 8007d9c:	20009b70 	.word	0x20009b70
 8007da0:	20009ff8 	.word	0x20009ff8
 8007da4:	2000a018 	.word	0x2000a018
 8007da8:	2000a044 	.word	0x2000a044
 8007dac:	2000a030 	.word	0x2000a030
 8007db0:	20009b68 	.word	0x20009b68
 8007db4:	20009b6c 	.word	0x20009b6c
 8007db8:	20009fdc 	.word	0x20009fdc
 8007dbc:	20009fe0 	.word	0x20009fe0
 8007dc0:	2000a02c 	.word	0x2000a02c
 8007dc4:	e000ed04 	.word	0xe000ed04
 8007dc8:	20009fe4 	.word	0x20009fe4

08007dcc <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007dcc:	4a06      	ldr	r2, [pc, #24]	; (8007de8 <prvResetNextTaskUnblockTime+0x1c>)
 8007dce:	6813      	ldr	r3, [r2, #0]
 8007dd0:	6819      	ldr	r1, [r3, #0]
 8007dd2:	4b06      	ldr	r3, [pc, #24]	; (8007dec <prvResetNextTaskUnblockTime+0x20>)
 8007dd4:	b919      	cbnz	r1, 8007dde <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007dd6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007dda:	601a      	str	r2, [r3, #0]
	}
}
 8007ddc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007dde:	6812      	ldr	r2, [r2, #0]
 8007de0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007de2:	68d2      	ldr	r2, [r2, #12]
 8007de4:	6852      	ldr	r2, [r2, #4]
 8007de6:	e7f8      	b.n	8007dda <prvResetNextTaskUnblockTime+0xe>
 8007de8:	20009b68 	.word	0x20009b68
 8007dec:	2000a00c 	.word	0x2000a00c

08007df0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007df4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007df8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007dfc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007dfe:	4606      	mov	r6, r0
 8007e00:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007e02:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007e04:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007e06:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007e08:	f013 fc42 	bl	801b690 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007e0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e0e:	f1a9 0904 	sub.w	r9, r9, #4
 8007e12:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007e14:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007e18:	2d00      	cmp	r5, #0
 8007e1a:	d037      	beq.n	8007e8c <prvInitialiseNewTask.isra.0+0x9c>
 8007e1c:	1e6b      	subs	r3, r5, #1
 8007e1e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007e22:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007e24:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007e28:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007e2c:	7819      	ldrb	r1, [r3, #0]
 8007e2e:	b109      	cbz	r1, 8007e34 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007e30:	42ab      	cmp	r3, r5
 8007e32:	d1f7      	bne.n	8007e24 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007e34:	2300      	movs	r3, #0
 8007e36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8007e3a:	9d08      	ldr	r5, [sp, #32]
 8007e3c:	2d37      	cmp	r5, #55	; 0x37
 8007e3e:	bf28      	it	cs
 8007e40:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007e42:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007e46:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007e48:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007e4a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007e4c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007e50:	f7ff f84f 	bl	8006ef2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007e54:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007e58:	f104 0018 	add.w	r0, r4, #24
 8007e5c:	f7ff f849 	bl	8006ef2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007e60:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007e64:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007e66:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007e68:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007e6a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007e6e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007e72:	463a      	mov	r2, r7
 8007e74:	4631      	mov	r1, r6
 8007e76:	4648      	mov	r0, r9
 8007e78:	f7ff f8b0 	bl	8006fdc <pxPortInitialiseStack>
 8007e7c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007e7e:	f1b8 0f00 	cmp.w	r8, #0
 8007e82:	d001      	beq.n	8007e88 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007e84:	f8c8 4000 	str.w	r4, [r8]
}
 8007e88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007e8c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007e90:	e7d3      	b.n	8007e3a <prvInitialiseNewTask.isra.0+0x4a>

08007e92 <prvDeleteTCB>:
	{
 8007e92:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e94:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007e98:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e9a:	b93b      	cbnz	r3, 8007eac <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8007e9c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007e9e:	f7fe ffdf 	bl	8006e60 <vPortFree>
				vPortFree( pxTCB );
 8007ea2:	4620      	mov	r0, r4
	}
 8007ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007ea8:	f7fe bfda 	b.w	8006e60 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007eac:	2b01      	cmp	r3, #1
 8007eae:	d0f9      	beq.n	8007ea4 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007eb0:	2b02      	cmp	r3, #2
 8007eb2:	d008      	beq.n	8007ec6 <prvDeleteTCB+0x34>
 8007eb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eb8:	f383 8811 	msr	BASEPRI, r3
 8007ebc:	f3bf 8f6f 	isb	sy
 8007ec0:	f3bf 8f4f 	dsb	sy
 8007ec4:	e7fe      	b.n	8007ec4 <prvDeleteTCB+0x32>
	}
 8007ec6:	bd10      	pop	{r4, pc}

08007ec8 <prvIdleTask>:
{
 8007ec8:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007eca:	4e14      	ldr	r6, [pc, #80]	; (8007f1c <prvIdleTask+0x54>)
				taskYIELD();
 8007ecc:	4f14      	ldr	r7, [pc, #80]	; (8007f20 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007ece:	4c15      	ldr	r4, [pc, #84]	; (8007f24 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 8007ed0:	4d15      	ldr	r5, [pc, #84]	; (8007f28 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007ed2:	6823      	ldr	r3, [r4, #0]
 8007ed4:	b96b      	cbnz	r3, 8007ef2 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007ed6:	4b15      	ldr	r3, [pc, #84]	; (8007f2c <prvIdleTask+0x64>)
 8007ed8:	681b      	ldr	r3, [r3, #0]
 8007eda:	2b01      	cmp	r3, #1
 8007edc:	d906      	bls.n	8007eec <prvIdleTask+0x24>
				taskYIELD();
 8007ede:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007ee2:	603b      	str	r3, [r7, #0]
 8007ee4:	f3bf 8f4f 	dsb	sy
 8007ee8:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8007eec:	f7f9 fa7e 	bl	80013ec <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8007ef0:	e7ed      	b.n	8007ece <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8007ef2:	f7ff f89f 	bl	8007034 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007ef6:	68f3      	ldr	r3, [r6, #12]
 8007ef8:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007efc:	f108 0004 	add.w	r0, r8, #4
 8007f00:	f7ff f81d 	bl	8006f3e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007f04:	682b      	ldr	r3, [r5, #0]
 8007f06:	3b01      	subs	r3, #1
 8007f08:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007f0a:	6823      	ldr	r3, [r4, #0]
 8007f0c:	3b01      	subs	r3, #1
 8007f0e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007f10:	f7ff f8b2 	bl	8007078 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007f14:	4640      	mov	r0, r8
 8007f16:	f7ff ffbc 	bl	8007e92 <prvDeleteTCB>
 8007f1a:	e7da      	b.n	8007ed2 <prvIdleTask+0xa>
 8007f1c:	2000a044 	.word	0x2000a044
 8007f20:	e000ed04 	.word	0xe000ed04
 8007f24:	20009fd4 	.word	0x20009fd4
 8007f28:	20009fd0 	.word	0x20009fd0
 8007f2c:	20009b70 	.word	0x20009b70

08007f30 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007f32:	4b16      	ldr	r3, [pc, #88]	; (8007f8c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007f34:	4e16      	ldr	r6, [pc, #88]	; (8007f90 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8007f36:	681d      	ldr	r5, [r3, #0]
{
 8007f38:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007f3a:	6830      	ldr	r0, [r6, #0]
 8007f3c:	3004      	adds	r0, #4
{
 8007f3e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007f40:	f7fe fffd 	bl	8006f3e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007f44:	1c63      	adds	r3, r4, #1
 8007f46:	4633      	mov	r3, r6
 8007f48:	d107      	bne.n	8007f5a <prvAddCurrentTaskToDelayedList+0x2a>
 8007f4a:	b137      	cbz	r7, 8007f5a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007f4c:	6831      	ldr	r1, [r6, #0]
 8007f4e:	4811      	ldr	r0, [pc, #68]	; (8007f94 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007f50:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007f54:	3104      	adds	r1, #4
 8007f56:	f7fe bfcf 	b.w	8006ef8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007f5a:	681a      	ldr	r2, [r3, #0]
 8007f5c:	192c      	adds	r4, r5, r4
 8007f5e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8007f60:	d307      	bcc.n	8007f72 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007f62:	4a0d      	ldr	r2, [pc, #52]	; (8007f98 <prvAddCurrentTaskToDelayedList+0x68>)
 8007f64:	6810      	ldr	r0, [r2, #0]
 8007f66:	6819      	ldr	r1, [r3, #0]
}
 8007f68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007f6c:	3104      	adds	r1, #4
 8007f6e:	f7fe bfcf 	b.w	8006f10 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007f72:	4a0a      	ldr	r2, [pc, #40]	; (8007f9c <prvAddCurrentTaskToDelayedList+0x6c>)
 8007f74:	6810      	ldr	r0, [r2, #0]
 8007f76:	6819      	ldr	r1, [r3, #0]
 8007f78:	3104      	adds	r1, #4
 8007f7a:	f7fe ffc9 	bl	8006f10 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007f7e:	4b08      	ldr	r3, [pc, #32]	; (8007fa0 <prvAddCurrentTaskToDelayedList+0x70>)
 8007f80:	681a      	ldr	r2, [r3, #0]
 8007f82:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007f84:	bf88      	it	hi
 8007f86:	601c      	strhi	r4, [r3, #0]
}
 8007f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f8a:	bf00      	nop
 8007f8c:	2000a058 	.word	0x2000a058
 8007f90:	20009b64 	.word	0x20009b64
 8007f94:	2000a030 	.word	0x2000a030
 8007f98:	20009b6c 	.word	0x20009b6c
 8007f9c:	20009b68 	.word	0x20009b68
 8007fa0:	2000a00c 	.word	0x2000a00c

08007fa4 <xTaskCreateStatic>:
	{
 8007fa4:	b570      	push	{r4, r5, r6, lr}
 8007fa6:	b086      	sub	sp, #24
 8007fa8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8007fac:	b945      	cbnz	r5, 8007fc0 <xTaskCreateStatic+0x1c>
 8007fae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fb2:	f383 8811 	msr	BASEPRI, r3
 8007fb6:	f3bf 8f6f 	isb	sy
 8007fba:	f3bf 8f4f 	dsb	sy
 8007fbe:	e7fe      	b.n	8007fbe <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007fc0:	b944      	cbnz	r4, 8007fd4 <xTaskCreateStatic+0x30>
 8007fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fc6:	f383 8811 	msr	BASEPRI, r3
 8007fca:	f3bf 8f6f 	isb	sy
 8007fce:	f3bf 8f4f 	dsb	sy
 8007fd2:	e7fe      	b.n	8007fd2 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007fd4:	2660      	movs	r6, #96	; 0x60
 8007fd6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007fd8:	9e05      	ldr	r6, [sp, #20]
 8007fda:	2e60      	cmp	r6, #96	; 0x60
 8007fdc:	d008      	beq.n	8007ff0 <xTaskCreateStatic+0x4c>
 8007fde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fe2:	f383 8811 	msr	BASEPRI, r3
 8007fe6:	f3bf 8f6f 	isb	sy
 8007fea:	f3bf 8f4f 	dsb	sy
 8007fee:	e7fe      	b.n	8007fee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007ff0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007ff2:	2502      	movs	r5, #2
 8007ff4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007ff8:	ad04      	add	r5, sp, #16
 8007ffa:	9501      	str	r5, [sp, #4]
 8007ffc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007ffe:	9402      	str	r4, [sp, #8]
 8008000:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008002:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008004:	f7ff fef4 	bl	8007df0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008008:	4620      	mov	r0, r4
 800800a:	f7ff fe5f 	bl	8007ccc <prvAddNewTaskToReadyList>
	}
 800800e:	9804      	ldr	r0, [sp, #16]
 8008010:	b006      	add	sp, #24
 8008012:	bd70      	pop	{r4, r5, r6, pc}

08008014 <xTaskCreate>:
	{
 8008014:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008018:	4607      	mov	r7, r0
 800801a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800801c:	0090      	lsls	r0, r2, #2
	{
 800801e:	4688      	mov	r8, r1
 8008020:	4616      	mov	r6, r2
 8008022:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008024:	f7fe fe8a 	bl	8006d3c <pvPortMalloc>
			if( pxStack != NULL )
 8008028:	4605      	mov	r5, r0
 800802a:	b1e8      	cbz	r0, 8008068 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800802c:	2060      	movs	r0, #96	; 0x60
 800802e:	f7fe fe85 	bl	8006d3c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008032:	4604      	mov	r4, r0
 8008034:	b1a8      	cbz	r0, 8008062 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008036:	2300      	movs	r3, #0
 8008038:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800803c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800803e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008040:	9301      	str	r3, [sp, #4]
 8008042:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008044:	9002      	str	r0, [sp, #8]
 8008046:	9300      	str	r3, [sp, #0]
 8008048:	4632      	mov	r2, r6
 800804a:	464b      	mov	r3, r9
 800804c:	4641      	mov	r1, r8
 800804e:	4638      	mov	r0, r7
 8008050:	f7ff fece 	bl	8007df0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008054:	4620      	mov	r0, r4
 8008056:	f7ff fe39 	bl	8007ccc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800805a:	2001      	movs	r0, #1
	}
 800805c:	b005      	add	sp, #20
 800805e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008062:	4628      	mov	r0, r5
 8008064:	f7fe fefc 	bl	8006e60 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008068:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800806c:	e7f6      	b.n	800805c <xTaskCreate+0x48>
	...

08008070 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008070:	4a02      	ldr	r2, [pc, #8]	; (800807c <vTaskSuspendAll+0xc>)
 8008072:	6813      	ldr	r3, [r2, #0]
 8008074:	3301      	adds	r3, #1
 8008076:	6013      	str	r3, [r2, #0]
}
 8008078:	4770      	bx	lr
 800807a:	bf00      	nop
 800807c:	20009fd8 	.word	0x20009fd8

08008080 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008080:	4b01      	ldr	r3, [pc, #4]	; (8008088 <xTaskGetTickCount+0x8>)
 8008082:	6818      	ldr	r0, [r3, #0]
}
 8008084:	4770      	bx	lr
 8008086:	bf00      	nop
 8008088:	2000a058 	.word	0x2000a058

0800808c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800808c:	4b3f      	ldr	r3, [pc, #252]	; (800818c <xTaskIncrementTick+0x100>)
 800808e:	681b      	ldr	r3, [r3, #0]
{
 8008090:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008094:	2b00      	cmp	r3, #0
 8008096:	d173      	bne.n	8008180 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008098:	4b3d      	ldr	r3, [pc, #244]	; (8008190 <xTaskIncrementTick+0x104>)
 800809a:	681d      	ldr	r5, [r3, #0]
 800809c:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800809e:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80080a0:	b9bd      	cbnz	r5, 80080d2 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80080a2:	4b3c      	ldr	r3, [pc, #240]	; (8008194 <xTaskIncrementTick+0x108>)
 80080a4:	681a      	ldr	r2, [r3, #0]
 80080a6:	6812      	ldr	r2, [r2, #0]
 80080a8:	b142      	cbz	r2, 80080bc <xTaskIncrementTick+0x30>
 80080aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080ae:	f383 8811 	msr	BASEPRI, r3
 80080b2:	f3bf 8f6f 	isb	sy
 80080b6:	f3bf 8f4f 	dsb	sy
 80080ba:	e7fe      	b.n	80080ba <xTaskIncrementTick+0x2e>
 80080bc:	4a36      	ldr	r2, [pc, #216]	; (8008198 <xTaskIncrementTick+0x10c>)
 80080be:	6819      	ldr	r1, [r3, #0]
 80080c0:	6810      	ldr	r0, [r2, #0]
 80080c2:	6018      	str	r0, [r3, #0]
 80080c4:	6011      	str	r1, [r2, #0]
 80080c6:	4a35      	ldr	r2, [pc, #212]	; (800819c <xTaskIncrementTick+0x110>)
 80080c8:	6813      	ldr	r3, [r2, #0]
 80080ca:	3301      	adds	r3, #1
 80080cc:	6013      	str	r3, [r2, #0]
 80080ce:	f7ff fe7d 	bl	8007dcc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80080d2:	4e33      	ldr	r6, [pc, #204]	; (80081a0 <xTaskIncrementTick+0x114>)
 80080d4:	4f33      	ldr	r7, [pc, #204]	; (80081a4 <xTaskIncrementTick+0x118>)
 80080d6:	6833      	ldr	r3, [r6, #0]
 80080d8:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80081b0 <xTaskIncrementTick+0x124>
 80080dc:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 80080de:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80080e2:	d211      	bcs.n	8008108 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80080e4:	f8d8 3000 	ldr.w	r3, [r8]
 80080e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80080ea:	2314      	movs	r3, #20
 80080ec:	4353      	muls	r3, r2
 80080ee:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80080f0:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80080f2:	4b2d      	ldr	r3, [pc, #180]	; (80081a8 <xTaskIncrementTick+0x11c>)
 80080f4:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80080f6:	bf28      	it	cs
 80080f8:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	bf18      	it	ne
 80080fe:	2401      	movne	r4, #1
}
 8008100:	4620      	mov	r0, r4
 8008102:	b003      	add	sp, #12
 8008104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008108:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008194 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800810c:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80081b4 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008110:	f8d9 3000 	ldr.w	r3, [r9]
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	b91b      	cbnz	r3, 8008120 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008118:	f04f 33ff 	mov.w	r3, #4294967295
 800811c:	6033      	str	r3, [r6, #0]
					break;
 800811e:	e7e1      	b.n	80080e4 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008120:	f8d9 3000 	ldr.w	r3, [r9]
 8008124:	68db      	ldr	r3, [r3, #12]
 8008126:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800812a:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800812e:	4295      	cmp	r5, r2
 8008130:	d201      	bcs.n	8008136 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008132:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008134:	e7d6      	b.n	80080e4 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008136:	f10b 0104 	add.w	r1, fp, #4
 800813a:	4608      	mov	r0, r1
 800813c:	9101      	str	r1, [sp, #4]
 800813e:	f7fe fefe 	bl	8006f3e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008142:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008146:	9901      	ldr	r1, [sp, #4]
 8008148:	b122      	cbz	r2, 8008154 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800814a:	f10b 0018 	add.w	r0, fp, #24
 800814e:	f7fe fef6 	bl	8006f3e <uxListRemove>
 8008152:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008154:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008158:	f8da 2000 	ldr.w	r2, [sl]
 800815c:	2314      	movs	r3, #20
 800815e:	4290      	cmp	r0, r2
 8008160:	bf88      	it	hi
 8008162:	f8ca 0000 	strhi.w	r0, [sl]
 8008166:	fb03 7000 	mla	r0, r3, r0, r7
 800816a:	f7fe fec5 	bl	8006ef8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800816e:	f8d8 1000 	ldr.w	r1, [r8]
 8008172:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008176:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008178:	429a      	cmp	r2, r3
 800817a:	bf28      	it	cs
 800817c:	2401      	movcs	r4, #1
 800817e:	e7c7      	b.n	8008110 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008180:	4a0a      	ldr	r2, [pc, #40]	; (80081ac <xTaskIncrementTick+0x120>)
 8008182:	6813      	ldr	r3, [r2, #0]
 8008184:	3301      	adds	r3, #1
 8008186:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008188:	2400      	movs	r4, #0
	return xSwitchRequired;
 800818a:	e7b9      	b.n	8008100 <xTaskIncrementTick+0x74>
 800818c:	20009fd8 	.word	0x20009fd8
 8008190:	2000a058 	.word	0x2000a058
 8008194:	20009b68 	.word	0x20009b68
 8008198:	20009b6c 	.word	0x20009b6c
 800819c:	2000a010 	.word	0x2000a010
 80081a0:	2000a00c 	.word	0x2000a00c
 80081a4:	20009b70 	.word	0x20009b70
 80081a8:	2000a05c 	.word	0x2000a05c
 80081ac:	2000a014 	.word	0x2000a014
 80081b0:	20009b64 	.word	0x20009b64
 80081b4:	20009fe0 	.word	0x20009fe0

080081b8 <xTaskResumeAll>:
{
 80081b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80081ba:	4c30      	ldr	r4, [pc, #192]	; (800827c <xTaskResumeAll+0xc4>)
 80081bc:	6823      	ldr	r3, [r4, #0]
 80081be:	b943      	cbnz	r3, 80081d2 <xTaskResumeAll+0x1a>
 80081c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c4:	f383 8811 	msr	BASEPRI, r3
 80081c8:	f3bf 8f6f 	isb	sy
 80081cc:	f3bf 8f4f 	dsb	sy
 80081d0:	e7fe      	b.n	80081d0 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80081d2:	f7fe ff2f 	bl	8007034 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80081d6:	6823      	ldr	r3, [r4, #0]
 80081d8:	3b01      	subs	r3, #1
 80081da:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80081dc:	6824      	ldr	r4, [r4, #0]
 80081de:	b12c      	cbz	r4, 80081ec <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80081e0:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80081e2:	f7fe ff49 	bl	8007078 <vPortExitCritical>
}
 80081e6:	4620      	mov	r0, r4
 80081e8:	b003      	add	sp, #12
 80081ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80081ec:	4b24      	ldr	r3, [pc, #144]	; (8008280 <xTaskResumeAll+0xc8>)
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	2b00      	cmp	r3, #0
 80081f2:	d0f5      	beq.n	80081e0 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80081f4:	4d23      	ldr	r5, [pc, #140]	; (8008284 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80081f6:	4e24      	ldr	r6, [pc, #144]	; (8008288 <xTaskResumeAll+0xd0>)
 80081f8:	4f24      	ldr	r7, [pc, #144]	; (800828c <xTaskResumeAll+0xd4>)
 80081fa:	e01e      	b.n	800823a <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081fc:	68eb      	ldr	r3, [r5, #12]
 80081fe:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008200:	f104 0018 	add.w	r0, r4, #24
 8008204:	f7fe fe9b 	bl	8006f3e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008208:	1d21      	adds	r1, r4, #4
 800820a:	4608      	mov	r0, r1
 800820c:	9101      	str	r1, [sp, #4]
 800820e:	f7fe fe96 	bl	8006f3e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008212:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008214:	6832      	ldr	r2, [r6, #0]
 8008216:	9901      	ldr	r1, [sp, #4]
 8008218:	2014      	movs	r0, #20
 800821a:	4293      	cmp	r3, r2
 800821c:	fb00 7003 	mla	r0, r0, r3, r7
 8008220:	bf88      	it	hi
 8008222:	6033      	strhi	r3, [r6, #0]
 8008224:	f7fe fe68 	bl	8006ef8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008228:	4b19      	ldr	r3, [pc, #100]	; (8008290 <xTaskResumeAll+0xd8>)
 800822a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800822c:	681b      	ldr	r3, [r3, #0]
 800822e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008230:	429a      	cmp	r2, r3
 8008232:	d302      	bcc.n	800823a <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008234:	4b17      	ldr	r3, [pc, #92]	; (8008294 <xTaskResumeAll+0xdc>)
 8008236:	2201      	movs	r2, #1
 8008238:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800823a:	682b      	ldr	r3, [r5, #0]
 800823c:	2b00      	cmp	r3, #0
 800823e:	d1dd      	bne.n	80081fc <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008240:	b10c      	cbz	r4, 8008246 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008242:	f7ff fdc3 	bl	8007dcc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008246:	4d14      	ldr	r5, [pc, #80]	; (8008298 <xTaskResumeAll+0xe0>)
 8008248:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800824a:	b144      	cbz	r4, 800825e <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800824c:	4e11      	ldr	r6, [pc, #68]	; (8008294 <xTaskResumeAll+0xdc>)
 800824e:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008250:	f7ff ff1c 	bl	800808c <xTaskIncrementTick>
 8008254:	b100      	cbz	r0, 8008258 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008256:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008258:	3c01      	subs	r4, #1
 800825a:	d1f9      	bne.n	8008250 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800825c:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800825e:	4b0d      	ldr	r3, [pc, #52]	; (8008294 <xTaskResumeAll+0xdc>)
 8008260:	681b      	ldr	r3, [r3, #0]
 8008262:	2b00      	cmp	r3, #0
 8008264:	d0bc      	beq.n	80081e0 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008266:	4b0d      	ldr	r3, [pc, #52]	; (800829c <xTaskResumeAll+0xe4>)
 8008268:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800826c:	601a      	str	r2, [r3, #0]
 800826e:	f3bf 8f4f 	dsb	sy
 8008272:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008276:	2401      	movs	r4, #1
 8008278:	e7b3      	b.n	80081e2 <xTaskResumeAll+0x2a>
 800827a:	bf00      	nop
 800827c:	20009fd8 	.word	0x20009fd8
 8008280:	20009fd0 	.word	0x20009fd0
 8008284:	2000a018 	.word	0x2000a018
 8008288:	20009fe0 	.word	0x20009fe0
 800828c:	20009b70 	.word	0x20009b70
 8008290:	20009b64 	.word	0x20009b64
 8008294:	2000a05c 	.word	0x2000a05c
 8008298:	2000a014 	.word	0x2000a014
 800829c:	e000ed04 	.word	0xe000ed04

080082a0 <vTaskDelay>:
	{
 80082a0:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80082a2:	b940      	cbnz	r0, 80082b6 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 80082a4:	4b0e      	ldr	r3, [pc, #56]	; (80082e0 <vTaskDelay+0x40>)
 80082a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082aa:	601a      	str	r2, [r3, #0]
 80082ac:	f3bf 8f4f 	dsb	sy
 80082b0:	f3bf 8f6f 	isb	sy
	}
 80082b4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80082b6:	4b0b      	ldr	r3, [pc, #44]	; (80082e4 <vTaskDelay+0x44>)
 80082b8:	6819      	ldr	r1, [r3, #0]
 80082ba:	b141      	cbz	r1, 80082ce <vTaskDelay+0x2e>
 80082bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082c0:	f383 8811 	msr	BASEPRI, r3
 80082c4:	f3bf 8f6f 	isb	sy
 80082c8:	f3bf 8f4f 	dsb	sy
 80082cc:	e7fe      	b.n	80082cc <vTaskDelay+0x2c>
			vTaskSuspendAll();
 80082ce:	f7ff fecf 	bl	8008070 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80082d2:	f7ff fe2d 	bl	8007f30 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80082d6:	f7ff ff6f 	bl	80081b8 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80082da:	2800      	cmp	r0, #0
 80082dc:	d0e2      	beq.n	80082a4 <vTaskDelay+0x4>
 80082de:	e7e9      	b.n	80082b4 <vTaskDelay+0x14>
 80082e0:	e000ed04 	.word	0xe000ed04
 80082e4:	20009fd8 	.word	0x20009fd8

080082e8 <vTaskSetApplicationTaskTag>:
	{
 80082e8:	b538      	push	{r3, r4, r5, lr}
 80082ea:	460d      	mov	r5, r1
		if( xTask == NULL )
 80082ec:	4604      	mov	r4, r0
 80082ee:	b908      	cbnz	r0, 80082f4 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80082f0:	4b04      	ldr	r3, [pc, #16]	; (8008304 <vTaskSetApplicationTaskTag+0x1c>)
 80082f2:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80082f4:	f7fe fe9e 	bl	8007034 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80082f8:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80082fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80082fe:	f7fe bebb 	b.w	8007078 <vPortExitCritical>
 8008302:	bf00      	nop
 8008304:	20009b64 	.word	0x20009b64

08008308 <xTaskCallApplicationTaskHook>:
	{
 8008308:	4603      	mov	r3, r0
 800830a:	4608      	mov	r0, r1
		if( xTask == NULL )
 800830c:	b90b      	cbnz	r3, 8008312 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800830e:	4b03      	ldr	r3, [pc, #12]	; (800831c <xTaskCallApplicationTaskHook+0x14>)
 8008310:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8008312:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008314:	b103      	cbz	r3, 8008318 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008316:	4718      	bx	r3
	}
 8008318:	4618      	mov	r0, r3
 800831a:	4770      	bx	lr
 800831c:	20009b64 	.word	0x20009b64

08008320 <vTaskStartScheduler>:
{
 8008320:	b510      	push	{r4, lr}
 8008322:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008324:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008326:	aa07      	add	r2, sp, #28
 8008328:	a906      	add	r1, sp, #24
 800832a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800832c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008330:	f7fe fcc8 	bl	8006cc4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008334:	9b05      	ldr	r3, [sp, #20]
 8008336:	9302      	str	r3, [sp, #8]
 8008338:	9b06      	ldr	r3, [sp, #24]
 800833a:	9a07      	ldr	r2, [sp, #28]
 800833c:	4917      	ldr	r1, [pc, #92]	; (800839c <vTaskStartScheduler+0x7c>)
 800833e:	4818      	ldr	r0, [pc, #96]	; (80083a0 <vTaskStartScheduler+0x80>)
 8008340:	e9cd 4300 	strd	r4, r3, [sp]
 8008344:	4623      	mov	r3, r4
 8008346:	f7ff fe2d 	bl	8007fa4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800834a:	b1d0      	cbz	r0, 8008382 <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
 800834c:	f000 fa88 	bl	8008860 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008350:	2801      	cmp	r0, #1
 8008352:	d118      	bne.n	8008386 <vTaskStartScheduler+0x66>
 8008354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008358:	f383 8811 	msr	BASEPRI, r3
 800835c:	f3bf 8f6f 	isb	sy
 8008360:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008364:	4b0f      	ldr	r3, [pc, #60]	; (80083a4 <vTaskStartScheduler+0x84>)
 8008366:	f04f 32ff 	mov.w	r2, #4294967295
 800836a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800836c:	4b0e      	ldr	r3, [pc, #56]	; (80083a8 <vTaskStartScheduler+0x88>)
 800836e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008370:	4b0e      	ldr	r3, [pc, #56]	; (80083ac <vTaskStartScheduler+0x8c>)
 8008372:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008374:	4b0e      	ldr	r3, [pc, #56]	; (80083b0 <vTaskStartScheduler+0x90>)
 8008376:	4621      	mov	r1, r4
 8008378:	6818      	ldr	r0, [r3, #0]
 800837a:	f7ff ffc5 	bl	8008308 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800837e:	f7fe fef1 	bl	8007164 <xPortStartScheduler>
}
 8008382:	b008      	add	sp, #32
 8008384:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008386:	3001      	adds	r0, #1
 8008388:	d1fb      	bne.n	8008382 <vTaskStartScheduler+0x62>
 800838a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800838e:	f383 8811 	msr	BASEPRI, r3
 8008392:	f3bf 8f6f 	isb	sy
 8008396:	f3bf 8f4f 	dsb	sy
 800839a:	e7fe      	b.n	800839a <vTaskStartScheduler+0x7a>
 800839c:	0801d5f5 	.word	0x0801d5f5
 80083a0:	08007ec9 	.word	0x08007ec9
 80083a4:	2000a00c 	.word	0x2000a00c
 80083a8:	2000a02c 	.word	0x2000a02c
 80083ac:	2000a058 	.word	0x2000a058
 80083b0:	20009b64 	.word	0x20009b64

080083b4 <vTaskSwitchContext>:
{
 80083b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80083b6:	4b1d      	ldr	r3, [pc, #116]	; (800842c <vTaskSwitchContext+0x78>)
 80083b8:	681a      	ldr	r2, [r3, #0]
 80083ba:	4b1d      	ldr	r3, [pc, #116]	; (8008430 <vTaskSwitchContext+0x7c>)
 80083bc:	b112      	cbz	r2, 80083c4 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80083be:	2201      	movs	r2, #1
 80083c0:	601a      	str	r2, [r3, #0]
}
 80083c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80083c4:	4e1b      	ldr	r6, [pc, #108]	; (8008434 <vTaskSwitchContext+0x80>)
		xYieldPending = pdFALSE;
 80083c6:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 80083c8:	6830      	ldr	r0, [r6, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083ca:	4d1b      	ldr	r5, [pc, #108]	; (8008438 <vTaskSwitchContext+0x84>)
		traceTASK_SWITCHED_OUT();
 80083cc:	2101      	movs	r1, #1
 80083ce:	f7ff ff9b 	bl	8008308 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083d2:	4a1a      	ldr	r2, [pc, #104]	; (800843c <vTaskSwitchContext+0x88>)
 80083d4:	682b      	ldr	r3, [r5, #0]
 80083d6:	f04f 0c14 	mov.w	ip, #20
 80083da:	4617      	mov	r7, r2
 80083dc:	fb0c f103 	mul.w	r1, ip, r3
 80083e0:	1850      	adds	r0, r2, r1
 80083e2:	5854      	ldr	r4, [r2, r1]
 80083e4:	b1ac      	cbz	r4, 8008412 <vTaskSwitchContext+0x5e>
 80083e6:	6844      	ldr	r4, [r0, #4]
 80083e8:	3108      	adds	r1, #8
 80083ea:	6864      	ldr	r4, [r4, #4]
 80083ec:	6044      	str	r4, [r0, #4]
 80083ee:	440a      	add	r2, r1
 80083f0:	4294      	cmp	r4, r2
 80083f2:	bf04      	itt	eq
 80083f4:	6862      	ldreq	r2, [r4, #4]
 80083f6:	6042      	streq	r2, [r0, #4]
 80083f8:	2214      	movs	r2, #20
 80083fa:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 80083fe:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008400:	6852      	ldr	r2, [r2, #4]
 8008402:	68d2      	ldr	r2, [r2, #12]
 8008404:	6032      	str	r2, [r6, #0]
 8008406:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 8008408:	6830      	ldr	r0, [r6, #0]
}
 800840a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800840e:	f7ff bf7b 	b.w	8008308 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008412:	b943      	cbnz	r3, 8008426 <vTaskSwitchContext+0x72>
 8008414:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008418:	f383 8811 	msr	BASEPRI, r3
 800841c:	f3bf 8f6f 	isb	sy
 8008420:	f3bf 8f4f 	dsb	sy
 8008424:	e7fe      	b.n	8008424 <vTaskSwitchContext+0x70>
 8008426:	3b01      	subs	r3, #1
 8008428:	e7d8      	b.n	80083dc <vTaskSwitchContext+0x28>
 800842a:	bf00      	nop
 800842c:	20009fd8 	.word	0x20009fd8
 8008430:	2000a05c 	.word	0x2000a05c
 8008434:	20009b64 	.word	0x20009b64
 8008438:	20009fe0 	.word	0x20009fe0
 800843c:	20009b70 	.word	0x20009b70

08008440 <vTaskPlaceOnEventList>:
{
 8008440:	b510      	push	{r4, lr}
 8008442:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008444:	b940      	cbnz	r0, 8008458 <vTaskPlaceOnEventList+0x18>
 8008446:	f04f 0350 	mov.w	r3, #80	; 0x50
 800844a:	f383 8811 	msr	BASEPRI, r3
 800844e:	f3bf 8f6f 	isb	sy
 8008452:	f3bf 8f4f 	dsb	sy
 8008456:	e7fe      	b.n	8008456 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008458:	4b05      	ldr	r3, [pc, #20]	; (8008470 <vTaskPlaceOnEventList+0x30>)
 800845a:	6819      	ldr	r1, [r3, #0]
 800845c:	3118      	adds	r1, #24
 800845e:	f7fe fd57 	bl	8006f10 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008462:	4620      	mov	r0, r4
 8008464:	2101      	movs	r1, #1
}
 8008466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800846a:	f7ff bd61 	b.w	8007f30 <prvAddCurrentTaskToDelayedList>
 800846e:	bf00      	nop
 8008470:	20009b64 	.word	0x20009b64

08008474 <vTaskPlaceOnEventListRestricted>:
	{
 8008474:	b538      	push	{r3, r4, r5, lr}
 8008476:	460d      	mov	r5, r1
 8008478:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800847a:	b940      	cbnz	r0, 800848e <vTaskPlaceOnEventListRestricted+0x1a>
 800847c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008480:	f383 8811 	msr	BASEPRI, r3
 8008484:	f3bf 8f6f 	isb	sy
 8008488:	f3bf 8f4f 	dsb	sy
 800848c:	e7fe      	b.n	800848c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800848e:	4b07      	ldr	r3, [pc, #28]	; (80084ac <vTaskPlaceOnEventListRestricted+0x38>)
 8008490:	6819      	ldr	r1, [r3, #0]
 8008492:	3118      	adds	r1, #24
 8008494:	f7fe fd30 	bl	8006ef8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008498:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800849a:	4621      	mov	r1, r4
 800849c:	bf0c      	ite	eq
 800849e:	4628      	moveq	r0, r5
 80084a0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80084a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80084a8:	f7ff bd42 	b.w	8007f30 <prvAddCurrentTaskToDelayedList>
 80084ac:	20009b64 	.word	0x20009b64

080084b0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084b0:	68c3      	ldr	r3, [r0, #12]
{
 80084b2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084b4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80084b6:	b944      	cbnz	r4, 80084ca <xTaskRemoveFromEventList+0x1a>
 80084b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084bc:	f383 8811 	msr	BASEPRI, r3
 80084c0:	f3bf 8f6f 	isb	sy
 80084c4:	f3bf 8f4f 	dsb	sy
 80084c8:	e7fe      	b.n	80084c8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80084ca:	f104 0118 	add.w	r1, r4, #24
 80084ce:	4608      	mov	r0, r1
 80084d0:	9101      	str	r1, [sp, #4]
 80084d2:	f7fe fd34 	bl	8006f3e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084d6:	4b12      	ldr	r3, [pc, #72]	; (8008520 <xTaskRemoveFromEventList+0x70>)
 80084d8:	9901      	ldr	r1, [sp, #4]
 80084da:	681b      	ldr	r3, [r3, #0]
 80084dc:	b9eb      	cbnz	r3, 800851a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80084de:	1d21      	adds	r1, r4, #4
 80084e0:	4608      	mov	r0, r1
 80084e2:	9101      	str	r1, [sp, #4]
 80084e4:	f7fe fd2b 	bl	8006f3e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80084e8:	4a0e      	ldr	r2, [pc, #56]	; (8008524 <xTaskRemoveFromEventList+0x74>)
 80084ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80084ec:	6810      	ldr	r0, [r2, #0]
 80084ee:	9901      	ldr	r1, [sp, #4]
 80084f0:	4283      	cmp	r3, r0
 80084f2:	bf88      	it	hi
 80084f4:	6013      	strhi	r3, [r2, #0]
 80084f6:	4a0c      	ldr	r2, [pc, #48]	; (8008528 <xTaskRemoveFromEventList+0x78>)
 80084f8:	2014      	movs	r0, #20
 80084fa:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80084fe:	f7fe fcfb 	bl	8006ef8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008502:	4b0a      	ldr	r3, [pc, #40]	; (800852c <xTaskRemoveFromEventList+0x7c>)
 8008504:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800850a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800850c:	bf85      	ittet	hi
 800850e:	4b08      	ldrhi	r3, [pc, #32]	; (8008530 <xTaskRemoveFromEventList+0x80>)
 8008510:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008512:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008514:	6018      	strhi	r0, [r3, #0]
}
 8008516:	b002      	add	sp, #8
 8008518:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800851a:	4806      	ldr	r0, [pc, #24]	; (8008534 <xTaskRemoveFromEventList+0x84>)
 800851c:	e7ef      	b.n	80084fe <xTaskRemoveFromEventList+0x4e>
 800851e:	bf00      	nop
 8008520:	20009fd8 	.word	0x20009fd8
 8008524:	20009fe0 	.word	0x20009fe0
 8008528:	20009b70 	.word	0x20009b70
 800852c:	20009b64 	.word	0x20009b64
 8008530:	2000a05c 	.word	0x2000a05c
 8008534:	2000a018 	.word	0x2000a018

08008538 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008538:	4b03      	ldr	r3, [pc, #12]	; (8008548 <vTaskInternalSetTimeOutState+0x10>)
 800853a:	681b      	ldr	r3, [r3, #0]
 800853c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800853e:	4b03      	ldr	r3, [pc, #12]	; (800854c <vTaskInternalSetTimeOutState+0x14>)
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	6043      	str	r3, [r0, #4]
}
 8008544:	4770      	bx	lr
 8008546:	bf00      	nop
 8008548:	2000a010 	.word	0x2000a010
 800854c:	2000a058 	.word	0x2000a058

08008550 <xTaskCheckForTimeOut>:
{
 8008550:	b570      	push	{r4, r5, r6, lr}
 8008552:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008554:	4605      	mov	r5, r0
 8008556:	b940      	cbnz	r0, 800856a <xTaskCheckForTimeOut+0x1a>
 8008558:	f04f 0350 	mov.w	r3, #80	; 0x50
 800855c:	f383 8811 	msr	BASEPRI, r3
 8008560:	f3bf 8f6f 	isb	sy
 8008564:	f3bf 8f4f 	dsb	sy
 8008568:	e7fe      	b.n	8008568 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800856a:	b941      	cbnz	r1, 800857e <xTaskCheckForTimeOut+0x2e>
 800856c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008570:	f383 8811 	msr	BASEPRI, r3
 8008574:	f3bf 8f6f 	isb	sy
 8008578:	f3bf 8f4f 	dsb	sy
 800857c:	e7fe      	b.n	800857c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800857e:	f7fe fd59 	bl	8007034 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008582:	4b0f      	ldr	r3, [pc, #60]	; (80085c0 <xTaskCheckForTimeOut+0x70>)
 8008584:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008586:	6823      	ldr	r3, [r4, #0]
 8008588:	1c5a      	adds	r2, r3, #1
 800858a:	d010      	beq.n	80085ae <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800858c:	480d      	ldr	r0, [pc, #52]	; (80085c4 <xTaskCheckForTimeOut+0x74>)
 800858e:	682e      	ldr	r6, [r5, #0]
 8008590:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008592:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008594:	4286      	cmp	r6, r0
 8008596:	d001      	beq.n	800859c <xTaskCheckForTimeOut+0x4c>
 8008598:	428a      	cmp	r2, r1
 800859a:	d90f      	bls.n	80085bc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800859c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800859e:	4283      	cmp	r3, r0
 80085a0:	d90a      	bls.n	80085b8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80085a2:	1a5b      	subs	r3, r3, r1
 80085a4:	4413      	add	r3, r2
 80085a6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80085a8:	4628      	mov	r0, r5
 80085aa:	f7ff ffc5 	bl	8008538 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80085ae:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80085b0:	f7fe fd62 	bl	8007078 <vPortExitCritical>
}
 80085b4:	4620      	mov	r0, r4
 80085b6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80085b8:	2300      	movs	r3, #0
 80085ba:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80085bc:	2401      	movs	r4, #1
 80085be:	e7f7      	b.n	80085b0 <xTaskCheckForTimeOut+0x60>
 80085c0:	2000a058 	.word	0x2000a058
 80085c4:	2000a010 	.word	0x2000a010

080085c8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80085c8:	4b01      	ldr	r3, [pc, #4]	; (80085d0 <vTaskMissedYield+0x8>)
 80085ca:	2201      	movs	r2, #1
 80085cc:	601a      	str	r2, [r3, #0]
}
 80085ce:	4770      	bx	lr
 80085d0:	2000a05c 	.word	0x2000a05c

080085d4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80085d4:	4b05      	ldr	r3, [pc, #20]	; (80085ec <xTaskGetSchedulerState+0x18>)
 80085d6:	681b      	ldr	r3, [r3, #0]
 80085d8:	b133      	cbz	r3, 80085e8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80085da:	4b05      	ldr	r3, [pc, #20]	; (80085f0 <xTaskGetSchedulerState+0x1c>)
 80085dc:	681b      	ldr	r3, [r3, #0]
 80085de:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 80085e0:	bf0c      	ite	eq
 80085e2:	2002      	moveq	r0, #2
 80085e4:	2000      	movne	r0, #0
 80085e6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80085e8:	2001      	movs	r0, #1
	}
 80085ea:	4770      	bx	lr
 80085ec:	2000a02c 	.word	0x2000a02c
 80085f0:	20009fd8 	.word	0x20009fd8

080085f4 <xTaskPriorityInherit>:
	{
 80085f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80085f6:	4604      	mov	r4, r0
 80085f8:	b350      	cbz	r0, 8008650 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80085fa:	4a1c      	ldr	r2, [pc, #112]	; (800866c <xTaskPriorityInherit+0x78>)
 80085fc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80085fe:	6811      	ldr	r1, [r2, #0]
 8008600:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008602:	428b      	cmp	r3, r1
 8008604:	4616      	mov	r6, r2
 8008606:	d229      	bcs.n	800865c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008608:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800860a:	4d19      	ldr	r5, [pc, #100]	; (8008670 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800860c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800860e:	bfa1      	itttt	ge
 8008610:	6832      	ldrge	r2, [r6, #0]
 8008612:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008614:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008618:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800861a:	2214      	movs	r2, #20
 800861c:	fb02 5303 	mla	r3, r2, r3, r5
 8008620:	6942      	ldr	r2, [r0, #20]
 8008622:	429a      	cmp	r2, r3
 8008624:	d116      	bne.n	8008654 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008626:	1d01      	adds	r1, r0, #4
 8008628:	4608      	mov	r0, r1
 800862a:	9101      	str	r1, [sp, #4]
 800862c:	f7fe fc87 	bl	8006f3e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008630:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008632:	4a10      	ldr	r2, [pc, #64]	; (8008674 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008634:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008636:	6810      	ldr	r0, [r2, #0]
 8008638:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800863a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800863c:	4283      	cmp	r3, r0
 800863e:	f04f 0014 	mov.w	r0, #20
 8008642:	fb00 5003 	mla	r0, r0, r3, r5
 8008646:	bf88      	it	hi
 8008648:	6013      	strhi	r3, [r2, #0]
 800864a:	f7fe fc55 	bl	8006ef8 <vListInsertEnd>
				xReturn = pdTRUE;
 800864e:	2001      	movs	r0, #1
	}
 8008650:	b002      	add	sp, #8
 8008652:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008654:	6833      	ldr	r3, [r6, #0]
 8008656:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008658:	62c3      	str	r3, [r0, #44]	; 0x2c
 800865a:	e7f8      	b.n	800864e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800865c:	6813      	ldr	r3, [r2, #0]
 800865e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008660:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008662:	42a0      	cmp	r0, r4
 8008664:	bf2c      	ite	cs
 8008666:	2000      	movcs	r0, #0
 8008668:	2001      	movcc	r0, #1
 800866a:	e7f1      	b.n	8008650 <xTaskPriorityInherit+0x5c>
 800866c:	20009b64 	.word	0x20009b64
 8008670:	20009b70 	.word	0x20009b70
 8008674:	20009fe0 	.word	0x20009fe0

08008678 <xTaskPriorityDisinherit>:
	{
 8008678:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800867a:	b910      	cbnz	r0, 8008682 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800867c:	2000      	movs	r0, #0
	}
 800867e:	b002      	add	sp, #8
 8008680:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008682:	4b1c      	ldr	r3, [pc, #112]	; (80086f4 <xTaskPriorityDisinherit+0x7c>)
 8008684:	681c      	ldr	r4, [r3, #0]
 8008686:	4284      	cmp	r4, r0
 8008688:	d008      	beq.n	800869c <xTaskPriorityDisinherit+0x24>
 800868a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800868e:	f383 8811 	msr	BASEPRI, r3
 8008692:	f3bf 8f6f 	isb	sy
 8008696:	f3bf 8f4f 	dsb	sy
 800869a:	e7fe      	b.n	800869a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800869c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800869e:	b943      	cbnz	r3, 80086b2 <xTaskPriorityDisinherit+0x3a>
 80086a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086a4:	f383 8811 	msr	BASEPRI, r3
 80086a8:	f3bf 8f6f 	isb	sy
 80086ac:	f3bf 8f4f 	dsb	sy
 80086b0:	e7fe      	b.n	80086b0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086b2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80086b4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80086b6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086b8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80086ba:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086bc:	d0de      	beq.n	800867c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80086be:	2b00      	cmp	r3, #0
 80086c0:	d1dc      	bne.n	800867c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80086c2:	1d21      	adds	r1, r4, #4
 80086c4:	4608      	mov	r0, r1
 80086c6:	9101      	str	r1, [sp, #4]
 80086c8:	f7fe fc39 	bl	8006f3e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80086cc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80086ce:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80086d0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086d2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80086d6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80086d8:	4a07      	ldr	r2, [pc, #28]	; (80086f8 <xTaskPriorityDisinherit+0x80>)
 80086da:	6810      	ldr	r0, [r2, #0]
 80086dc:	4283      	cmp	r3, r0
 80086de:	bf88      	it	hi
 80086e0:	6013      	strhi	r3, [r2, #0]
 80086e2:	4a06      	ldr	r2, [pc, #24]	; (80086fc <xTaskPriorityDisinherit+0x84>)
 80086e4:	2014      	movs	r0, #20
 80086e6:	fb00 2003 	mla	r0, r0, r3, r2
 80086ea:	f7fe fc05 	bl	8006ef8 <vListInsertEnd>
					xReturn = pdTRUE;
 80086ee:	2001      	movs	r0, #1
		return xReturn;
 80086f0:	e7c5      	b.n	800867e <xTaskPriorityDisinherit+0x6>
 80086f2:	bf00      	nop
 80086f4:	20009b64 	.word	0x20009b64
 80086f8:	20009fe0 	.word	0x20009fe0
 80086fc:	20009b70 	.word	0x20009b70

08008700 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008700:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008702:	4604      	mov	r4, r0
 8008704:	2800      	cmp	r0, #0
 8008706:	d044      	beq.n	8008792 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008708:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800870a:	b942      	cbnz	r2, 800871e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800870c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008710:	f383 8811 	msr	BASEPRI, r3
 8008714:	f3bf 8f6f 	isb	sy
 8008718:	f3bf 8f4f 	dsb	sy
 800871c:	e7fe      	b.n	800871c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800871e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008720:	4299      	cmp	r1, r3
 8008722:	bf38      	it	cc
 8008724:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008726:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008728:	428b      	cmp	r3, r1
 800872a:	d032      	beq.n	8008792 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800872c:	2a01      	cmp	r2, #1
 800872e:	d130      	bne.n	8008792 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008730:	4a19      	ldr	r2, [pc, #100]	; (8008798 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008732:	6812      	ldr	r2, [r2, #0]
 8008734:	4282      	cmp	r2, r0
 8008736:	d108      	bne.n	800874a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008738:	f04f 0350 	mov.w	r3, #80	; 0x50
 800873c:	f383 8811 	msr	BASEPRI, r3
 8008740:	f3bf 8f6f 	isb	sy
 8008744:	f3bf 8f4f 	dsb	sy
 8008748:	e7fe      	b.n	8008748 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800874a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800874c:	4d13      	ldr	r5, [pc, #76]	; (800879c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800874e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008750:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008752:	f04f 0214 	mov.w	r2, #20
 8008756:	fb02 5303 	mla	r3, r2, r3, r5
 800875a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800875c:	bfa4      	itt	ge
 800875e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008762:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008764:	429a      	cmp	r2, r3
 8008766:	d114      	bne.n	8008792 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008768:	1d01      	adds	r1, r0, #4
 800876a:	4608      	mov	r0, r1
 800876c:	9101      	str	r1, [sp, #4]
 800876e:	f7fe fbe6 	bl	8006f3e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008772:	4a0b      	ldr	r2, [pc, #44]	; (80087a0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008774:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008776:	6810      	ldr	r0, [r2, #0]
 8008778:	9901      	ldr	r1, [sp, #4]
 800877a:	4283      	cmp	r3, r0
 800877c:	f04f 0014 	mov.w	r0, #20
 8008780:	fb00 5003 	mla	r0, r0, r3, r5
 8008784:	bf88      	it	hi
 8008786:	6013      	strhi	r3, [r2, #0]
	}
 8008788:	b003      	add	sp, #12
 800878a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800878e:	f7fe bbb3 	b.w	8006ef8 <vListInsertEnd>
	}
 8008792:	b003      	add	sp, #12
 8008794:	bd30      	pop	{r4, r5, pc}
 8008796:	bf00      	nop
 8008798:	20009b64 	.word	0x20009b64
 800879c:	20009b70 	.word	0x20009b70
 80087a0:	20009fe0 	.word	0x20009fe0

080087a4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80087a4:	4b04      	ldr	r3, [pc, #16]	; (80087b8 <pvTaskIncrementMutexHeldCount+0x14>)
 80087a6:	681a      	ldr	r2, [r3, #0]
 80087a8:	b11a      	cbz	r2, 80087b2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80087aa:	6819      	ldr	r1, [r3, #0]
 80087ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80087ae:	3201      	adds	r2, #1
 80087b0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80087b2:	6818      	ldr	r0, [r3, #0]
	}
 80087b4:	4770      	bx	lr
 80087b6:	bf00      	nop
 80087b8:	20009b64 	.word	0x20009b64

080087bc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80087bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80087be:	4c11      	ldr	r4, [pc, #68]	; (8008804 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80087c0:	f7fe fc38 	bl	8007034 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80087c4:	6825      	ldr	r5, [r4, #0]
 80087c6:	b9bd      	cbnz	r5, 80087f8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80087c8:	4f0f      	ldr	r7, [pc, #60]	; (8008808 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80087ca:	4e10      	ldr	r6, [pc, #64]	; (800880c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80087cc:	4638      	mov	r0, r7
 80087ce:	f7fe fb85 	bl	8006edc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80087d2:	4630      	mov	r0, r6
 80087d4:	f7fe fb82 	bl	8006edc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80087d8:	4b0d      	ldr	r3, [pc, #52]	; (8008810 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087da:	4a0e      	ldr	r2, [pc, #56]	; (8008814 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80087dc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80087de:	4b0e      	ldr	r3, [pc, #56]	; (8008818 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087e0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80087e2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087e4:	200a      	movs	r0, #10
 80087e6:	4b0d      	ldr	r3, [pc, #52]	; (800881c <prvCheckForValidListAndQueue+0x60>)
 80087e8:	9500      	str	r5, [sp, #0]
 80087ea:	f7fe fe3b 	bl	8007464 <xQueueGenericCreateStatic>
 80087ee:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80087f0:	b110      	cbz	r0, 80087f8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80087f2:	490b      	ldr	r1, [pc, #44]	; (8008820 <prvCheckForValidListAndQueue+0x64>)
 80087f4:	f7ff fa08 	bl	8007c08 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80087f8:	b003      	add	sp, #12
 80087fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80087fe:	f7fe bc3b 	b.w	8007078 <vPortExitCritical>
 8008802:	bf00      	nop
 8008804:	2000a184 	.word	0x2000a184
 8008808:	2000a108 	.word	0x2000a108
 800880c:	2000a11c 	.word	0x2000a11c
 8008810:	2000a060 	.word	0x2000a060
 8008814:	2000a068 	.word	0x2000a068
 8008818:	2000a064 	.word	0x2000a064
 800881c:	2000a134 	.word	0x2000a134
 8008820:	0801d5fa 	.word	0x0801d5fa

08008824 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008824:	4291      	cmp	r1, r2
{
 8008826:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008828:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800882a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800882c:	d80a      	bhi.n	8008844 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800882e:	1ad2      	subs	r2, r2, r3
 8008830:	6983      	ldr	r3, [r0, #24]
 8008832:	429a      	cmp	r2, r3
 8008834:	d20d      	bcs.n	8008852 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008836:	4b08      	ldr	r3, [pc, #32]	; (8008858 <prvInsertTimerInActiveList+0x34>)
 8008838:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800883a:	6818      	ldr	r0, [r3, #0]
 800883c:	f7fe fb68 	bl	8006f10 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008840:	2000      	movs	r0, #0
}
 8008842:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008844:	429a      	cmp	r2, r3
 8008846:	d201      	bcs.n	800884c <prvInsertTimerInActiveList+0x28>
 8008848:	4299      	cmp	r1, r3
 800884a:	d202      	bcs.n	8008852 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800884c:	4b03      	ldr	r3, [pc, #12]	; (800885c <prvInsertTimerInActiveList+0x38>)
 800884e:	1d01      	adds	r1, r0, #4
 8008850:	e7f3      	b.n	800883a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008852:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008854:	e7f5      	b.n	8008842 <prvInsertTimerInActiveList+0x1e>
 8008856:	bf00      	nop
 8008858:	2000a064 	.word	0x2000a064
 800885c:	2000a060 	.word	0x2000a060

08008860 <xTimerCreateTimerTask>:
{
 8008860:	b510      	push	{r4, lr}
 8008862:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008864:	f7ff ffaa 	bl	80087bc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008868:	4b12      	ldr	r3, [pc, #72]	; (80088b4 <xTimerCreateTimerTask+0x54>)
 800886a:	681b      	ldr	r3, [r3, #0]
 800886c:	b1b3      	cbz	r3, 800889c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800886e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008870:	aa07      	add	r2, sp, #28
 8008872:	a906      	add	r1, sp, #24
 8008874:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008876:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800887a:	f7fe fa2f 	bl	8006cdc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800887e:	9b05      	ldr	r3, [sp, #20]
 8008880:	9302      	str	r3, [sp, #8]
 8008882:	9b06      	ldr	r3, [sp, #24]
 8008884:	9301      	str	r3, [sp, #4]
 8008886:	2302      	movs	r3, #2
 8008888:	9300      	str	r3, [sp, #0]
 800888a:	9a07      	ldr	r2, [sp, #28]
 800888c:	490a      	ldr	r1, [pc, #40]	; (80088b8 <xTimerCreateTimerTask+0x58>)
 800888e:	480b      	ldr	r0, [pc, #44]	; (80088bc <xTimerCreateTimerTask+0x5c>)
 8008890:	4623      	mov	r3, r4
 8008892:	f7ff fb87 	bl	8007fa4 <xTaskCreateStatic>
 8008896:	4b0a      	ldr	r3, [pc, #40]	; (80088c0 <xTimerCreateTimerTask+0x60>)
 8008898:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800889a:	b940      	cbnz	r0, 80088ae <xTimerCreateTimerTask+0x4e>
 800889c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088a0:	f383 8811 	msr	BASEPRI, r3
 80088a4:	f3bf 8f6f 	isb	sy
 80088a8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80088ac:	e7fe      	b.n	80088ac <xTimerCreateTimerTask+0x4c>
}
 80088ae:	2001      	movs	r0, #1
 80088b0:	b008      	add	sp, #32
 80088b2:	bd10      	pop	{r4, pc}
 80088b4:	2000a184 	.word	0x2000a184
 80088b8:	0801d5ff 	.word	0x0801d5ff
 80088bc:	08008999 	.word	0x08008999
 80088c0:	2000a188 	.word	0x2000a188

080088c4 <xTimerGenericCommand>:
{
 80088c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80088c6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80088c8:	4604      	mov	r4, r0
{
 80088ca:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80088cc:	b940      	cbnz	r0, 80088e0 <xTimerGenericCommand+0x1c>
 80088ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d2:	f383 8811 	msr	BASEPRI, r3
 80088d6:	f3bf 8f6f 	isb	sy
 80088da:	f3bf 8f4f 	dsb	sy
 80088de:	e7fe      	b.n	80088de <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80088e0:	4d0d      	ldr	r5, [pc, #52]	; (8008918 <xTimerGenericCommand+0x54>)
 80088e2:	6828      	ldr	r0, [r5, #0]
 80088e4:	b180      	cbz	r0, 8008908 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80088e6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80088e8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80088ec:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80088ee:	dc0d      	bgt.n	800890c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80088f0:	f7ff fe70 	bl	80085d4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80088f4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80088f6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80088f8:	bf08      	it	eq
 80088fa:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80088fc:	6828      	ldr	r0, [r5, #0]
 80088fe:	bf18      	it	ne
 8008900:	461a      	movne	r2, r3
 8008902:	4669      	mov	r1, sp
 8008904:	f7fe fe64 	bl	80075d0 <xQueueGenericSend>
}
 8008908:	b004      	add	sp, #16
 800890a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800890c:	2300      	movs	r3, #0
 800890e:	4669      	mov	r1, sp
 8008910:	f7fe ff10 	bl	8007734 <xQueueGenericSendFromISR>
 8008914:	e7f8      	b.n	8008908 <xTimerGenericCommand+0x44>
 8008916:	bf00      	nop
 8008918:	2000a184 	.word	0x2000a184

0800891c <prvSwitchTimerLists>:
{
 800891c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800891e:	4d1c      	ldr	r5, [pc, #112]	; (8008990 <prvSwitchTimerLists+0x74>)
{
 8008920:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008922:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008924:	682b      	ldr	r3, [r5, #0]
 8008926:	681a      	ldr	r2, [r3, #0]
 8008928:	b92a      	cbnz	r2, 8008936 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800892a:	4a1a      	ldr	r2, [pc, #104]	; (8008994 <prvSwitchTimerLists+0x78>)
 800892c:	6811      	ldr	r1, [r2, #0]
 800892e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008930:	6013      	str	r3, [r2, #0]
}
 8008932:	b005      	add	sp, #20
 8008934:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008936:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008938:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800893a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800893c:	1d21      	adds	r1, r4, #4
 800893e:	4608      	mov	r0, r1
 8008940:	9103      	str	r1, [sp, #12]
 8008942:	f7fe fafc 	bl	8006f3e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008946:	6a23      	ldr	r3, [r4, #32]
 8008948:	4620      	mov	r0, r4
 800894a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800894c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008950:	9903      	ldr	r1, [sp, #12]
 8008952:	f013 0f04 	tst.w	r3, #4
 8008956:	d0e5      	beq.n	8008924 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008958:	69a3      	ldr	r3, [r4, #24]
 800895a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800895c:	429e      	cmp	r6, r3
 800895e:	d205      	bcs.n	800896c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008960:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008962:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008964:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008966:	f7fe fad3 	bl	8006f10 <vListInsert>
 800896a:	e7db      	b.n	8008924 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800896c:	2300      	movs	r3, #0
 800896e:	9700      	str	r7, [sp, #0]
 8008970:	4632      	mov	r2, r6
 8008972:	4619      	mov	r1, r3
 8008974:	4620      	mov	r0, r4
 8008976:	f7ff ffa5 	bl	80088c4 <xTimerGenericCommand>
				configASSERT( xResult );
 800897a:	2800      	cmp	r0, #0
 800897c:	d1d2      	bne.n	8008924 <prvSwitchTimerLists+0x8>
 800897e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008982:	f383 8811 	msr	BASEPRI, r3
 8008986:	f3bf 8f6f 	isb	sy
 800898a:	f3bf 8f4f 	dsb	sy
 800898e:	e7fe      	b.n	800898e <prvSwitchTimerLists+0x72>
 8008990:	2000a060 	.word	0x2000a060
 8008994:	2000a064 	.word	0x2000a064

08008998 <prvTimerTask>:
{
 8008998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800899c:	4f77      	ldr	r7, [pc, #476]	; (8008b7c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800899e:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8008b8c <prvTimerTask+0x1f4>
{
 80089a2:	b087      	sub	sp, #28
 80089a4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80089a6:	683b      	ldr	r3, [r7, #0]
 80089a8:	f8d3 b000 	ldr.w	fp, [r3]
 80089ac:	f1bb 0f00 	cmp.w	fp, #0
 80089b0:	d028      	beq.n	8008a04 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80089b2:	68db      	ldr	r3, [r3, #12]
 80089b4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80089b8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80089ba:	4e71      	ldr	r6, [pc, #452]	; (8008b80 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 80089bc:	f7ff fb58 	bl	8008070 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80089c0:	f7ff fb5e 	bl	8008080 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80089c4:	6833      	ldr	r3, [r6, #0]
 80089c6:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80089c8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80089ca:	46b0      	mov	r8, r6
 80089cc:	d31c      	bcc.n	8008a08 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 80089ce:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80089d0:	b31c      	cbz	r4, 8008a1a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80089d2:	4b6c      	ldr	r3, [pc, #432]	; (8008b84 <prvTimerTask+0x1ec>)
 80089d4:	681b      	ldr	r3, [r3, #0]
 80089d6:	681c      	ldr	r4, [r3, #0]
 80089d8:	fab4 f484 	clz	r4, r4
 80089dc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80089de:	4b6a      	ldr	r3, [pc, #424]	; (8008b88 <prvTimerTask+0x1f0>)
 80089e0:	4622      	mov	r2, r4
 80089e2:	6818      	ldr	r0, [r3, #0]
 80089e4:	ebab 0105 	sub.w	r1, fp, r5
 80089e8:	f7ff f94d 	bl	8007c86 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80089ec:	f7ff fbe4 	bl	80081b8 <xTaskResumeAll>
 80089f0:	b978      	cbnz	r0, 8008a12 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 80089f2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80089f6:	f8ca 3000 	str.w	r3, [sl]
 80089fa:	f3bf 8f4f 	dsb	sy
 80089fe:	f3bf 8f6f 	isb	sy
 8008a02:	e006      	b.n	8008a12 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008a04:	2401      	movs	r4, #1
 8008a06:	e7d8      	b.n	80089ba <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8008a08:	f7ff ff88 	bl	800891c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008a0c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 8008a0e:	f7ff fbd3 	bl	80081b8 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008a12:	4e5d      	ldr	r6, [pc, #372]	; (8008b88 <prvTimerTask+0x1f0>)
 8008a14:	f04f 0b00 	mov.w	fp, #0
 8008a18:	e035      	b.n	8008a86 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008a1a:	4583      	cmp	fp, r0
 8008a1c:	d8df      	bhi.n	80089de <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 8008a1e:	f7ff fbcb 	bl	80081b8 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a22:	f8d9 3000 	ldr.w	r3, [r9]
 8008a26:	68db      	ldr	r3, [r3, #12]
 8008a28:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a2a:	1d30      	adds	r0, r6, #4
 8008a2c:	f7fe fa87 	bl	8006f3e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a30:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8008a34:	0758      	lsls	r0, r3, #29
 8008a36:	d518      	bpl.n	8008a6a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008a38:	69b1      	ldr	r1, [r6, #24]
 8008a3a:	465b      	mov	r3, fp
 8008a3c:	462a      	mov	r2, r5
 8008a3e:	4459      	add	r1, fp
 8008a40:	4630      	mov	r0, r6
 8008a42:	f7ff feef 	bl	8008824 <prvInsertTimerInActiveList>
 8008a46:	b1a0      	cbz	r0, 8008a72 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008a48:	9400      	str	r4, [sp, #0]
 8008a4a:	4623      	mov	r3, r4
 8008a4c:	465a      	mov	r2, fp
 8008a4e:	4621      	mov	r1, r4
 8008a50:	4630      	mov	r0, r6
 8008a52:	f7ff ff37 	bl	80088c4 <xTimerGenericCommand>
			configASSERT( xResult );
 8008a56:	b960      	cbnz	r0, 8008a72 <prvTimerTask+0xda>
 8008a58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5c:	f383 8811 	msr	BASEPRI, r3
 8008a60:	f3bf 8f6f 	isb	sy
 8008a64:	f3bf 8f4f 	dsb	sy
 8008a68:	e7fe      	b.n	8008a68 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008a6a:	f023 0301 	bic.w	r3, r3, #1
 8008a6e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a72:	6a33      	ldr	r3, [r6, #32]
 8008a74:	4630      	mov	r0, r6
 8008a76:	4798      	blx	r3
}
 8008a78:	e7cb      	b.n	8008a12 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008a7a:	9b03      	ldr	r3, [sp, #12]
 8008a7c:	9905      	ldr	r1, [sp, #20]
 8008a7e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008a80:	9b02      	ldr	r3, [sp, #8]
 8008a82:	2b00      	cmp	r3, #0
 8008a84:	da0a      	bge.n	8008a9c <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008a86:	6830      	ldr	r0, [r6, #0]
 8008a88:	2200      	movs	r2, #0
 8008a8a:	a902      	add	r1, sp, #8
 8008a8c:	f7fe ff08 	bl	80078a0 <xQueueReceive>
 8008a90:	2800      	cmp	r0, #0
 8008a92:	d088      	beq.n	80089a6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008a94:	9b02      	ldr	r3, [sp, #8]
 8008a96:	9804      	ldr	r0, [sp, #16]
 8008a98:	2b00      	cmp	r3, #0
 8008a9a:	dbee      	blt.n	8008a7a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008a9c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008a9e:	6963      	ldr	r3, [r4, #20]
 8008aa0:	b9a3      	cbnz	r3, 8008acc <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8008aa2:	f7ff faed 	bl	8008080 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008aa6:	f8d8 3000 	ldr.w	r3, [r8]
 8008aaa:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008aac:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008aae:	d201      	bcs.n	8008ab4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8008ab0:	f7ff ff34 	bl	800891c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008ab4:	9b02      	ldr	r3, [sp, #8]
 8008ab6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 8008aba:	2b09      	cmp	r3, #9
 8008abc:	d8e3      	bhi.n	8008a86 <prvTimerTask+0xee>
 8008abe:	e8df f003 	tbb	[pc, r3]
 8008ac2:	0909      	.short	0x0909
 8008ac4:	543b3409 	.word	0x543b3409
 8008ac8:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008acc:	1d20      	adds	r0, r4, #4
 8008ace:	f7fe fa36 	bl	8006f3e <uxListRemove>
 8008ad2:	e7e6      	b.n	8008aa2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ad4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008ad8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ada:	f043 0301 	orr.w	r3, r3, #1
 8008ade:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008ae2:	9b03      	ldr	r3, [sp, #12]
 8008ae4:	462a      	mov	r2, r5
 8008ae6:	4419      	add	r1, r3
 8008ae8:	4620      	mov	r0, r4
 8008aea:	f7ff fe9b 	bl	8008824 <prvInsertTimerInActiveList>
 8008aee:	2800      	cmp	r0, #0
 8008af0:	d0c9      	beq.n	8008a86 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008af2:	6a23      	ldr	r3, [r4, #32]
 8008af4:	4620      	mov	r0, r4
 8008af6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008af8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008afc:	0759      	lsls	r1, r3, #29
 8008afe:	d5c2      	bpl.n	8008a86 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008b00:	69a2      	ldr	r2, [r4, #24]
 8008b02:	9903      	ldr	r1, [sp, #12]
 8008b04:	f8cd b000 	str.w	fp, [sp]
 8008b08:	2300      	movs	r3, #0
 8008b0a:	440a      	add	r2, r1
 8008b0c:	4620      	mov	r0, r4
 8008b0e:	4619      	mov	r1, r3
 8008b10:	f7ff fed8 	bl	80088c4 <xTimerGenericCommand>
							configASSERT( xResult );
 8008b14:	2800      	cmp	r0, #0
 8008b16:	d1b6      	bne.n	8008a86 <prvTimerTask+0xee>
 8008b18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b1c:	f383 8811 	msr	BASEPRI, r3
 8008b20:	f3bf 8f6f 	isb	sy
 8008b24:	f3bf 8f4f 	dsb	sy
 8008b28:	e7fe      	b.n	8008b28 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008b2a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008b2e:	f023 0301 	bic.w	r3, r3, #1
 8008b32:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008b36:	e7a6      	b.n	8008a86 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008b38:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008b3c:	9903      	ldr	r1, [sp, #12]
 8008b3e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008b40:	f043 0301 	orr.w	r3, r3, #1
 8008b44:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008b48:	b941      	cbnz	r1, 8008b5c <prvTimerTask+0x1c4>
 8008b4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b4e:	f383 8811 	msr	BASEPRI, r3
 8008b52:	f3bf 8f6f 	isb	sy
 8008b56:	f3bf 8f4f 	dsb	sy
 8008b5a:	e7fe      	b.n	8008b5a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008b5c:	462b      	mov	r3, r5
 8008b5e:	462a      	mov	r2, r5
 8008b60:	4429      	add	r1, r5
 8008b62:	4620      	mov	r0, r4
 8008b64:	f7ff fe5e 	bl	8008824 <prvInsertTimerInActiveList>
					break;
 8008b68:	e78d      	b.n	8008a86 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008b6a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008b6e:	079a      	lsls	r2, r3, #30
 8008b70:	d4dd      	bmi.n	8008b2e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8008b72:	4620      	mov	r0, r4
 8008b74:	f7fe f974 	bl	8006e60 <vPortFree>
 8008b78:	e785      	b.n	8008a86 <prvTimerTask+0xee>
 8008b7a:	bf00      	nop
 8008b7c:	2000a060 	.word	0x2000a060
 8008b80:	2000a130 	.word	0x2000a130
 8008b84:	2000a064 	.word	0x2000a064
 8008b88:	2000a184 	.word	0x2000a184
 8008b8c:	e000ed04 	.word	0xe000ed04

08008b90 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008b90:	8880      	ldrh	r0, [r0, #4]
 8008b92:	4770      	bx	lr

08008b94 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008b94:	2300      	movs	r3, #0
 8008b96:	8083      	strh	r3, [r0, #4]
 8008b98:	4770      	bx	lr
	...

08008b9c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008b9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b9e:	6803      	ldr	r3, [r0, #0]
 8008ba0:	4605      	mov	r5, r0
 8008ba2:	460e      	mov	r6, r1
 8008ba4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ba6:	2100      	movs	r1, #0
 8008ba8:	4798      	blx	r3
 8008baa:	682b      	ldr	r3, [r5, #0]
 8008bac:	4604      	mov	r4, r0
 8008bae:	6a1b      	ldr	r3, [r3, #32]
 8008bb0:	4628      	mov	r0, r5
 8008bb2:	4798      	blx	r3
 8008bb4:	88ab      	ldrh	r3, [r5, #4]
 8008bb6:	1b34      	subs	r4, r6, r4
 8008bb8:	b2a4      	uxth	r4, r4
 8008bba:	fbb4 f4f0 	udiv	r4, r4, r0
 8008bbe:	42a3      	cmp	r3, r4
 8008bc0:	d805      	bhi.n	8008bce <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008bc2:	4b0e      	ldr	r3, [pc, #56]	; (8008bfc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008bc4:	4a0e      	ldr	r2, [pc, #56]	; (8008c00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008bc6:	211e      	movs	r1, #30
 8008bc8:	480e      	ldr	r0, [pc, #56]	; (8008c04 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008bca:	f012 fcd5 	bl	801b578 <__assert_func>
 8008bce:	682b      	ldr	r3, [r5, #0]
 8008bd0:	2100      	movs	r1, #0
 8008bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bd4:	4628      	mov	r0, r5
 8008bd6:	4798      	blx	r3
 8008bd8:	682b      	ldr	r3, [r5, #0]
 8008bda:	4607      	mov	r7, r0
 8008bdc:	6a1b      	ldr	r3, [r3, #32]
 8008bde:	4628      	mov	r0, r5
 8008be0:	4798      	blx	r3
 8008be2:	1bf3      	subs	r3, r6, r7
 8008be4:	b29b      	uxth	r3, r3
 8008be6:	fbb3 f2f0 	udiv	r2, r3, r0
 8008bea:	fb02 3010 	mls	r0, r2, r0, r3
 8008bee:	b118      	cbz	r0, 8008bf8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008bf0:	4b05      	ldr	r3, [pc, #20]	; (8008c08 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008bf2:	4a03      	ldr	r2, [pc, #12]	; (8008c00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008bf4:	211f      	movs	r1, #31
 8008bf6:	e7e7      	b.n	8008bc8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008bf8:	4620      	mov	r0, r4
 8008bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008bfc:	0801d607 	.word	0x0801d607
 8008c00:	0801d772 	.word	0x0801d772
 8008c04:	0801d61c 	.word	0x0801d61c
 8008c08:	0801d64a 	.word	0x0801d64a

08008c0c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008c0c:	b538      	push	{r3, r4, r5, lr}
 8008c0e:	6803      	ldr	r3, [r0, #0]
 8008c10:	6a1b      	ldr	r3, [r3, #32]
 8008c12:	460d      	mov	r5, r1
 8008c14:	4604      	mov	r4, r0
 8008c16:	4798      	blx	r3
 8008c18:	4285      	cmp	r5, r0
 8008c1a:	d905      	bls.n	8008c28 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008c1c:	4b0c      	ldr	r3, [pc, #48]	; (8008c50 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008c1e:	4a0d      	ldr	r2, [pc, #52]	; (8008c54 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008c20:	2130      	movs	r1, #48	; 0x30
 8008c22:	480d      	ldr	r0, [pc, #52]	; (8008c58 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008c24:	f012 fca8 	bl	801b578 <__assert_func>
 8008c28:	6823      	ldr	r3, [r4, #0]
 8008c2a:	88a5      	ldrh	r5, [r4, #4]
 8008c2c:	69db      	ldr	r3, [r3, #28]
 8008c2e:	4620      	mov	r0, r4
 8008c30:	4798      	blx	r3
 8008c32:	4285      	cmp	r5, r0
 8008c34:	d303      	bcc.n	8008c3e <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008c36:	4b09      	ldr	r3, [pc, #36]	; (8008c5c <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008c38:	4a06      	ldr	r2, [pc, #24]	; (8008c54 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008c3a:	2131      	movs	r1, #49	; 0x31
 8008c3c:	e7f1      	b.n	8008c22 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008c3e:	6823      	ldr	r3, [r4, #0]
 8008c40:	88a1      	ldrh	r1, [r4, #4]
 8008c42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c44:	4620      	mov	r0, r4
 8008c46:	4798      	blx	r3
 8008c48:	88a3      	ldrh	r3, [r4, #4]
 8008c4a:	3301      	adds	r3, #1
 8008c4c:	80a3      	strh	r3, [r4, #4]
 8008c4e:	bd38      	pop	{r3, r4, r5, pc}
 8008c50:	0801d6c4 	.word	0x0801d6c4
 8008c54:	0801d7b5 	.word	0x0801d7b5
 8008c58:	0801d61c 	.word	0x0801d61c
 8008c5c:	0801d6db 	.word	0x0801d6db

08008c60 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008c60:	b570      	push	{r4, r5, r6, lr}
 8008c62:	6803      	ldr	r3, [r0, #0]
 8008c64:	6a1b      	ldr	r3, [r3, #32]
 8008c66:	4616      	mov	r6, r2
 8008c68:	4604      	mov	r4, r0
 8008c6a:	460d      	mov	r5, r1
 8008c6c:	4798      	blx	r3
 8008c6e:	4286      	cmp	r6, r0
 8008c70:	d905      	bls.n	8008c7e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008c72:	4b06      	ldr	r3, [pc, #24]	; (8008c8c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008c74:	4a06      	ldr	r2, [pc, #24]	; (8008c90 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008c76:	4807      	ldr	r0, [pc, #28]	; (8008c94 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008c78:	213a      	movs	r1, #58	; 0x3a
 8008c7a:	f012 fc7d 	bl	801b578 <__assert_func>
 8008c7e:	6823      	ldr	r3, [r4, #0]
 8008c80:	4629      	mov	r1, r5
 8008c82:	4620      	mov	r0, r4
 8008c84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008c8a:	4718      	bx	r3
 8008c8c:	0801d6c4 	.word	0x0801d6c4
 8008c90:	0801d728 	.word	0x0801d728
 8008c94:	0801d61c 	.word	0x0801d61c

08008c98 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008c98:	4770      	bx	lr
	...

08008c9c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008c9c:	4a02      	ldr	r2, [pc, #8]	; (8008ca8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008c9e:	6002      	str	r2, [r0, #0]
 8008ca0:	2200      	movs	r2, #0
 8008ca2:	8082      	strh	r2, [r0, #4]
 8008ca4:	4770      	bx	lr
 8008ca6:	bf00      	nop
 8008ca8:	0801d6fc 	.word	0x0801d6fc

08008cac <_ZN8touchgfx9Container13getFirstChildEv>:
 8008cac:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008cae:	4770      	bx	lr

08008cb0 <_ZNK8touchgfx12TextProgress12getTypedTextEv>:
 8008cb0:	4a02      	ldr	r2, [pc, #8]	; (8008cbc <_ZNK8touchgfx12TextProgress12getTypedTextEv+0xc>)
 8008cb2:	6002      	str	r2, [r0, #0]
 8008cb4:	f8b1 20dc 	ldrh.w	r2, [r1, #220]	; 0xdc
 8008cb8:	8082      	strh	r2, [r0, #4]
 8008cba:	4770      	bx	lr
 8008cbc:	0801cd80 	.word	0x0801cd80

08008cc0 <_ZN8touchgfx12TextProgress8setColorENS_9colortypeE>:
 8008cc0:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 8008cc4:	4770      	bx	lr

08008cc6 <_ZNK8touchgfx12TextProgress8getColorEv>:
 8008cc6:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 8008cca:	4770      	bx	lr

08008ccc <_ZN8touchgfx12TextProgress19setNumberOfDecimalsEt>:
 8008ccc:	b570      	push	{r4, r5, r6, lr}
 8008cce:	2902      	cmp	r1, #2
 8008cd0:	bf28      	it	cs
 8008cd2:	2102      	movcs	r1, #2
 8008cd4:	6803      	ldr	r3, [r0, #0]
 8008cd6:	f8a0 1102 	strh.w	r1, [r0, #258]	; 0x102
 8008cda:	f8d3 50a8 	ldr.w	r5, [r3, #168]	; 0xa8
 8008cde:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008ce2:	4604      	mov	r4, r0
 8008ce4:	4798      	blx	r3
 8008ce6:	462b      	mov	r3, r5
 8008ce8:	4601      	mov	r1, r0
 8008cea:	4620      	mov	r0, r4
 8008cec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008cf0:	4718      	bx	r3

08008cf2 <_ZNK8touchgfx12TextProgress19getNumberOfDecimalsEv>:
 8008cf2:	f8b0 0102 	ldrh.w	r0, [r0, #258]	; 0x102
 8008cf6:	4770      	bx	lr

08008cf8 <_ZN8touchgfx12TextProgressD1Ev>:
 8008cf8:	4770      	bx	lr

08008cfa <_ZN8touchgfx12TextProgressD0Ev>:
 8008cfa:	b510      	push	{r4, lr}
 8008cfc:	f44f 7182 	mov.w	r1, #260	; 0x104
 8008d00:	4604      	mov	r4, r0
 8008d02:	f012 fc0a 	bl	801b51a <_ZdlPvj>
 8008d06:	4620      	mov	r0, r4
 8008d08:	bd10      	pop	{r4, pc}

08008d0a <_ZN8touchgfx12TextProgress12setTypedTextERKNS_9TypedTextE>:
 8008d0a:	30b0      	adds	r0, #176	; 0xb0
 8008d0c:	f001 bdef 	b.w	800a8ee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>

08008d10 <_ZN8touchgfx12TextProgress8setAlphaEh>:
 8008d10:	b538      	push	{r3, r4, r5, lr}
 8008d12:	4604      	mov	r4, r0
 8008d14:	460d      	mov	r5, r1
 8008d16:	f000 f8e6 	bl	8008ee6 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8008d1a:	f884 50e6 	strb.w	r5, [r4, #230]	; 0xe6
 8008d1e:	bd38      	pop	{r3, r4, r5, pc}

08008d20 <_ZN8touchgfx12TextProgress8setValueEi>:
 8008d20:	b530      	push	{r4, r5, lr}
 8008d22:	b087      	sub	sp, #28
 8008d24:	4604      	mov	r4, r0
 8008d26:	f000 f92b 	bl	8008f80 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8008d2a:	4b1d      	ldr	r3, [pc, #116]	; (8008da0 <_ZN8touchgfx12TextProgress8setValueEi+0x80>)
 8008d2c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8008d30:	ab06      	add	r3, sp, #24
 8008d32:	e903 0007 	stmdb	r3, {r0, r1, r2}
 8008d36:	f8b4 3102 	ldrh.w	r3, [r4, #258]	; 0x102
 8008d3a:	aa06      	add	r2, sp, #24
 8008d3c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008d40:	4620      	mov	r0, r4
 8008d42:	f853 1c0c 	ldr.w	r1, [r3, #-12]
 8008d46:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008d4a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8008d4e:	0089      	lsls	r1, r1, #2
 8008d50:	b289      	uxth	r1, r1
 8008d52:	f000 f9a3 	bl	800909c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8008d56:	f8b4 1102 	ldrh.w	r1, [r4, #258]	; 0x102
 8008d5a:	f104 05f0 	add.w	r5, r4, #240	; 0xf0
 8008d5e:	b1c1      	cbz	r1, 8008d92 <_ZN8touchgfx12TextProgress8setValueEi+0x72>
 8008d60:	ab06      	add	r3, sp, #24
 8008d62:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8008d66:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 8008d6a:	fb90 f3f2 	sdiv	r3, r0, r2
 8008d6e:	fb02 0213 	mls	r2, r2, r3, r0
 8008d72:	e9cd 1200 	strd	r1, r2, [sp]
 8008d76:	4628      	mov	r0, r5
 8008d78:	4a0a      	ldr	r2, [pc, #40]	; (8008da4 <_ZN8touchgfx12TextProgress8setValueEi+0x84>)
 8008d7a:	2108      	movs	r1, #8
 8008d7c:	f006 fc4e 	bl	800f61c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008d80:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 8008d84:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
 8008d88:	b007      	add	sp, #28
 8008d8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8008d8e:	f004 bbb4 	b.w	800d4fa <_ZNK8touchgfx8Drawable10invalidateEv>
 8008d92:	4603      	mov	r3, r0
 8008d94:	4a04      	ldr	r2, [pc, #16]	; (8008da8 <_ZN8touchgfx12TextProgress8setValueEi+0x88>)
 8008d96:	2108      	movs	r1, #8
 8008d98:	4628      	mov	r0, r5
 8008d9a:	f006 fc3f 	bl	800f61c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008d9e:	e7ef      	b.n	8008d80 <_ZN8touchgfx12TextProgress8setValueEi+0x60>
 8008da0:	0801c684 	.word	0x0801c684
 8008da4:	0801d7f3 	.word	0x0801d7f3
 8008da8:	0801d7fb 	.word	0x0801d7fb

08008dac <_ZN8touchgfx12TextProgress28setProgressIndicatorPositionEssss>:
 8008dac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008db0:	461d      	mov	r5, r3
 8008db2:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8008db6:	2300      	movs	r3, #0
 8008db8:	f100 07b0 	add.w	r7, r0, #176	; 0xb0
 8008dbc:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 8008dc0:	4604      	mov	r4, r0
 8008dc2:	4688      	mov	r8, r1
 8008dc4:	4638      	mov	r0, r7
 8008dc6:	4629      	mov	r1, r5
 8008dc8:	4691      	mov	r9, r2
 8008dca:	f7f9 fae1 	bl	8002390 <_ZN8touchgfx8Drawable8setWidthEs>
 8008dce:	4631      	mov	r1, r6
 8008dd0:	4638      	mov	r0, r7
 8008dd2:	f7f9 fadf 	bl	8002394 <_ZN8touchgfx8Drawable9setHeightEs>
 8008dd6:	9608      	str	r6, [sp, #32]
 8008dd8:	462b      	mov	r3, r5
 8008dda:	464a      	mov	r2, r9
 8008ddc:	4641      	mov	r1, r8
 8008dde:	4620      	mov	r0, r4
 8008de0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008de4:	f000 b990 	b.w	8009108 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

08008de8 <_ZN8touchgfx12TextProgressC1Ev>:
 8008de8:	b510      	push	{r4, lr}
 8008dea:	4604      	mov	r4, r0
 8008dec:	f000 f9b8 	bl	8009160 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8008df0:	2201      	movs	r2, #1
 8008df2:	f884 20d5 	strb.w	r2, [r4, #213]	; 0xd5
 8008df6:	4a1f      	ldr	r2, [pc, #124]	; (8008e74 <_ZN8touchgfx12TextProgressC1Ev+0x8c>)
 8008df8:	f8c4 20d8 	str.w	r2, [r4, #216]	; 0xd8
 8008dfc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008e00:	f8a4 20dc 	strh.w	r2, [r4, #220]	; 0xdc
 8008e04:	4b1c      	ldr	r3, [pc, #112]	; (8008e78 <_ZN8touchgfx12TextProgressC1Ev+0x90>)
 8008e06:	6023      	str	r3, [r4, #0]
 8008e08:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8008e0c:	2300      	movs	r3, #0
 8008e0e:	f8c4 20e4 	str.w	r2, [r4, #228]	; 0xe4
 8008e12:	4a1a      	ldr	r2, [pc, #104]	; (8008e7c <_ZN8touchgfx12TextProgressC1Ev+0x94>)
 8008e14:	f8a4 30b4 	strh.w	r3, [r4, #180]	; 0xb4
 8008e18:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008e1c:	f8a4 30b6 	strh.w	r3, [r4, #182]	; 0xb6
 8008e20:	f8a4 30b8 	strh.w	r3, [r4, #184]	; 0xb8
 8008e24:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8008e28:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 8008e2c:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8008e30:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8008e34:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 8008e38:	e9c4 3331 	strd	r3, r3, [r4, #196]	; 0xc4
 8008e3c:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8008e40:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008e44:	f8a4 30d2 	strh.w	r3, [r4, #210]	; 0xd2
 8008e48:	f884 30d4 	strb.w	r3, [r4, #212]	; 0xd4
 8008e4c:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8008e50:	f884 30e8 	strb.w	r3, [r4, #232]	; 0xe8
 8008e54:	f884 30e9 	strb.w	r3, [r4, #233]	; 0xe9
 8008e58:	f8c4 20b0 	str.w	r2, [r4, #176]	; 0xb0
 8008e5c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8008e60:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8008e64:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8008e68:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 8008e6c:	f000 fa6c 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008e70:	4620      	mov	r0, r4
 8008e72:	bd10      	pop	{r4, pc}
 8008e74:	0801cd80 	.word	0x0801cd80
 8008e78:	0801d808 	.word	0x0801d808
 8008e7c:	0801e58c 	.word	0x0801e58c

08008e80 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8008e80:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 8008e84:	4770      	bx	lr

08008e86 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8008e86:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8008e8a:	4770      	bx	lr

08008e8c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8008e8c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8008e90:	4770      	bx	lr

08008e92 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8008e92:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 8008e96:	4770      	bx	lr

08008e98 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8008e98:	b510      	push	{r4, lr}
 8008e9a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8008e9e:	600c      	str	r4, [r1, #0]
 8008ea0:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8008ea4:	6011      	str	r1, [r2, #0]
 8008ea6:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8008eaa:	801a      	strh	r2, [r3, #0]
 8008eac:	9b02      	ldr	r3, [sp, #8]
 8008eae:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 8008eb2:	801a      	strh	r2, [r3, #0]
 8008eb4:	bd10      	pop	{r4, pc}

08008eb6 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8008eb6:	b510      	push	{r4, lr}
 8008eb8:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8008ebc:	600c      	str	r4, [r1, #0]
 8008ebe:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8008ec2:	6011      	str	r1, [r2, #0]
 8008ec4:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8008ec8:	801a      	strh	r2, [r3, #0]
 8008eca:	bd10      	pop	{r4, pc}

08008ecc <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8008ecc:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8008ed0:	600b      	str	r3, [r1, #0]
 8008ed2:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8008ed6:	6013      	str	r3, [r2, #0]
 8008ed8:	4770      	bx	lr

08008eda <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8008eda:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8008ede:	4770      	bx	lr

08008ee0 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8008ee0:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 8008ee4:	4770      	bx	lr

08008ee6 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8008ee6:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8008eea:	4770      	bx	lr

08008eec <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8008eec:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8008ef0:	4770      	bx	lr

08008ef2 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 8008ef2:	4770      	bx	lr

08008ef4 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 8008ef4:	b510      	push	{r4, lr}
 8008ef6:	21b0      	movs	r1, #176	; 0xb0
 8008ef8:	4604      	mov	r4, r0
 8008efa:	f012 fb0e 	bl	801b51a <_ZdlPvj>
 8008efe:	4620      	mov	r0, r4
 8008f00:	bd10      	pop	{r4, pc}

08008f02 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8008f02:	b570      	push	{r4, r5, r6, lr}
 8008f04:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8008f08:	428d      	cmp	r5, r1
 8008f0a:	bfb8      	it	lt
 8008f0c:	460d      	movlt	r5, r1
 8008f0e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 8008f12:	428d      	cmp	r5, r1
 8008f14:	4604      	mov	r4, r0
 8008f16:	bfa8      	it	ge
 8008f18:	460d      	movge	r5, r1
 8008f1a:	4616      	mov	r6, r2
 8008f1c:	b99a      	cbnz	r2, 8008f46 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8008f1e:	6803      	ldr	r3, [r0, #0]
 8008f20:	4629      	mov	r1, r5
 8008f22:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008f26:	4798      	blx	r3
 8008f28:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8008f2c:	b338      	cbz	r0, 8008f7e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x7c>
 8008f2e:	6803      	ldr	r3, [r0, #0]
 8008f30:	68db      	ldr	r3, [r3, #12]
 8008f32:	4798      	blx	r3
 8008f34:	b318      	cbz	r0, 8008f7e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x7c>
 8008f36:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8008f3a:	6803      	ldr	r3, [r0, #0]
 8008f3c:	4621      	mov	r1, r4
 8008f3e:	689b      	ldr	r3, [r3, #8]
 8008f40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f44:	4718      	bx	r3
 8008f46:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 8008f4a:	2b00      	cmp	r3, #0
 8008f4c:	dd04      	ble.n	8008f58 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x56>
 8008f4e:	f003 fb15 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 8008f52:	4621      	mov	r1, r4
 8008f54:	f003 fb4a 	bl	800c5ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8008f58:	6823      	ldr	r3, [r4, #0]
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008f60:	4798      	blx	r3
 8008f62:	2300      	movs	r3, #0
 8008f64:	e9c4 0526 	strd	r0, r5, [r4, #152]	; 0x98
 8008f68:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 8008f6c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8008f70:	f003 fb04 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 8008f74:	4621      	mov	r1, r4
 8008f76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f7a:	f003 bb05 	b.w	800c588 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8008f7e:	bd70      	pop	{r4, r5, r6, pc}

08008f80 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8008f80:	b510      	push	{r4, lr}
 8008f82:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8008f86:	4299      	cmp	r1, r3
 8008f88:	bfb8      	it	lt
 8008f8a:	4619      	movlt	r1, r3
 8008f8c:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8008f90:	4299      	cmp	r1, r3
 8008f92:	bfa8      	it	ge
 8008f94:	4619      	movge	r1, r3
 8008f96:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8008f9a:	428b      	cmp	r3, r1
 8008f9c:	4604      	mov	r4, r0
 8008f9e:	d010      	beq.n	8008fc2 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8008fa0:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8008fa4:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8008fa8:	b158      	cbz	r0, 8008fc2 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8008faa:	6803      	ldr	r3, [r0, #0]
 8008fac:	68db      	ldr	r3, [r3, #12]
 8008fae:	4798      	blx	r3
 8008fb0:	b138      	cbz	r0, 8008fc2 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8008fb2:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
 8008fb6:	6803      	ldr	r3, [r0, #0]
 8008fb8:	4621      	mov	r1, r4
 8008fba:	689b      	ldr	r3, [r3, #8]
 8008fbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008fc0:	4718      	bx	r3
 8008fc2:	bd10      	pop	{r4, pc}

08008fc4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8008fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fc8:	4291      	cmp	r1, r2
 8008fca:	4604      	mov	r4, r0
 8008fcc:	460e      	mov	r6, r1
 8008fce:	4615      	mov	r5, r2
 8008fd0:	4698      	mov	r8, r3
 8008fd2:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8008fd6:	db05      	blt.n	8008fe4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 8008fd8:	4b11      	ldr	r3, [pc, #68]	; (8009020 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 8008fda:	4a12      	ldr	r2, [pc, #72]	; (8009024 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8008fdc:	214b      	movs	r1, #75	; 0x4b
 8008fde:	4812      	ldr	r0, [pc, #72]	; (8009028 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 8008fe0:	f012 faca 	bl	801b578 <__assert_func>
 8008fe4:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8008fe8:	6803      	ldr	r3, [r0, #0]
 8008fea:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8008fee:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008ff2:	4798      	blx	r3
 8008ff4:	f1b8 0f00 	cmp.w	r8, #0
 8008ff8:	d10c      	bne.n	8009014 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 8008ffa:	1bad      	subs	r5, r5, r6
 8008ffc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8009000:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 8009004:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 8009008:	42bb      	cmp	r3, r7
 800900a:	d806      	bhi.n	800901a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 800900c:	4b07      	ldr	r3, [pc, #28]	; (800902c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 800900e:	4a05      	ldr	r2, [pc, #20]	; (8009024 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 8009010:	2158      	movs	r1, #88	; 0x58
 8009012:	e7e4      	b.n	8008fde <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 8009014:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8009018:	e7f2      	b.n	8009000 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 800901a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800901e:	bf00      	nop
 8009020:	0801d8e4 	.word	0x0801d8e4
 8009024:	0801da2c 	.word	0x0801da2c
 8009028:	0801d8ee 	.word	0x0801d8ee
 800902c:	0801d945 	.word	0x0801d945

08009030 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8009030:	b570      	push	{r4, r5, r6, lr}
 8009032:	4604      	mov	r4, r0
 8009034:	e9d4 3226 	ldrd	r3, r2, [r4, #152]	; 0x98
 8009038:	f8d0 00a4 	ldr.w	r0, [r0, #164]	; 0xa4
 800903c:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8009040:	3001      	adds	r0, #1
 8009042:	1ad2      	subs	r2, r2, r3
 8009044:	b212      	sxth	r2, r2
 8009046:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
 800904a:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 800904e:	2100      	movs	r1, #0
 8009050:	b280      	uxth	r0, r0
 8009052:	47a8      	blx	r5
 8009054:	f8d4 1098 	ldr.w	r1, [r4, #152]	; 0x98
 8009058:	6823      	ldr	r3, [r4, #0]
 800905a:	4401      	add	r1, r0
 800905c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009060:	4620      	mov	r0, r4
 8009062:	4798      	blx	r3
 8009064:	e9d4 3228 	ldrd	r3, r2, [r4, #160]	; 0xa0
 8009068:	429a      	cmp	r2, r3
 800906a:	db16      	blt.n	800909a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 800906c:	2300      	movs	r3, #0
 800906e:	e9c4 3328 	strd	r3, r3, [r4, #160]	; 0xa0
 8009072:	f003 fa83 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 8009076:	4621      	mov	r1, r4
 8009078:	f003 fab8 	bl	800c5ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800907c:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8009080:	b158      	cbz	r0, 800909a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 8009082:	6803      	ldr	r3, [r0, #0]
 8009084:	68db      	ldr	r3, [r3, #12]
 8009086:	4798      	blx	r3
 8009088:	b138      	cbz	r0, 800909a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 800908a:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800908e:	6803      	ldr	r3, [r0, #0]
 8009090:	4621      	mov	r1, r4
 8009092:	689b      	ldr	r3, [r3, #8]
 8009094:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009098:	4718      	bx	r3
 800909a:	bd70      	pop	{r4, r5, r6, pc}

0800909c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800909c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800909e:	4604      	mov	r4, r0
 80090a0:	460d      	mov	r5, r1
 80090a2:	b1a9      	cbz	r1, 80090d0 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80090a4:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80090a8:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80090ac:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80090b0:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80090b4:	ab01      	add	r3, sp, #4
 80090b6:	1a12      	subs	r2, r2, r0
 80090b8:	1b89      	subs	r1, r1, r6
 80090ba:	1a38      	subs	r0, r7, r0
 80090bc:	f004 fbd3 	bl	800d866 <_ZN8touchgfx6muldivElllRl>
 80090c0:	4629      	mov	r1, r5
 80090c2:	ab01      	add	r3, sp, #4
 80090c4:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80090c8:	4430      	add	r0, r6
 80090ca:	f004 fbcc 	bl	800d866 <_ZN8touchgfx6muldivElllRl>
 80090ce:	b285      	uxth	r5, r0
 80090d0:	4628      	mov	r0, r5
 80090d2:	b003      	add	sp, #12
 80090d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080090d8 <_ZN8touchgfx8DrawableC1Ev>:
 80090d8:	4a0a      	ldr	r2, [pc, #40]	; (8009104 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80090da:	6002      	str	r2, [r0, #0]
 80090dc:	2200      	movs	r2, #0
 80090de:	8082      	strh	r2, [r0, #4]
 80090e0:	80c2      	strh	r2, [r0, #6]
 80090e2:	8102      	strh	r2, [r0, #8]
 80090e4:	8142      	strh	r2, [r0, #10]
 80090e6:	8182      	strh	r2, [r0, #12]
 80090e8:	81c2      	strh	r2, [r0, #14]
 80090ea:	8202      	strh	r2, [r0, #16]
 80090ec:	8242      	strh	r2, [r0, #18]
 80090ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80090f2:	61c2      	str	r2, [r0, #28]
 80090f4:	8402      	strh	r2, [r0, #32]
 80090f6:	8442      	strh	r2, [r0, #34]	; 0x22
 80090f8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80090fc:	2201      	movs	r2, #1
 80090fe:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8009102:	4770      	bx	lr
 8009104:	0801e884 	.word	0x0801e884

08009108 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8009108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800910c:	4604      	mov	r4, r0
 800910e:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8009112:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8009116:	460e      	mov	r6, r1
 8009118:	4615      	mov	r5, r2
 800911a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800911e:	4619      	mov	r1, r3
 8009120:	463a      	mov	r2, r7
 8009122:	3058      	adds	r0, #88	; 0x58
 8009124:	4698      	mov	r8, r3
 8009126:	f7f9 f976 	bl	8002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800912a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800912e:	4446      	add	r6, r8
 8009130:	42b3      	cmp	r3, r6
 8009132:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8009136:	bfb8      	it	lt
 8009138:	8126      	strhlt	r6, [r4, #8]
 800913a:	443d      	add	r5, r7
 800913c:	42ab      	cmp	r3, r5
 800913e:	bfb8      	it	lt
 8009140:	8165      	strhlt	r5, [r4, #10]
 8009142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009146 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8009146:	b510      	push	{r4, lr}
 8009148:	4604      	mov	r4, r0
 800914a:	302c      	adds	r0, #44	; 0x2c
 800914c:	f001 fd0f 	bl	800ab6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009150:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8009154:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8009158:	4620      	mov	r0, r4
 800915a:	f7f9 f95c 	bl	8002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800915e:	bd10      	pop	{r4, pc}

08009160 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8009160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009162:	4604      	mov	r4, r0
 8009164:	4626      	mov	r6, r4
 8009166:	2500      	movs	r5, #0
 8009168:	f7ff ffb6 	bl	80090d8 <_ZN8touchgfx8DrawableC1Ev>
 800916c:	4b22      	ldr	r3, [pc, #136]	; (80091f8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x98>)
 800916e:	62a5      	str	r5, [r4, #40]	; 0x28
 8009170:	f846 3b2c 	str.w	r3, [r6], #44
 8009174:	2226      	movs	r2, #38	; 0x26
 8009176:	4629      	mov	r1, r5
 8009178:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800917c:	4630      	mov	r0, r6
 800917e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009182:	f012 fa85 	bl	801b690 <memset>
 8009186:	4630      	mov	r0, r6
 8009188:	f7ff ffa6 	bl	80090d8 <_ZN8touchgfx8DrawableC1Ev>
 800918c:	a902      	add	r1, sp, #8
 800918e:	4b1b      	ldr	r3, [pc, #108]	; (80091fc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8009190:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009192:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8009196:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800919a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800919e:	4630      	mov	r0, r6
 80091a0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80091a4:	f001 fce3 	bl	800ab6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80091a8:	4638      	mov	r0, r7
 80091aa:	f7ff ff95 	bl	80090d8 <_ZN8touchgfx8DrawableC1Ev>
 80091ae:	4b14      	ldr	r3, [pc, #80]	; (8009200 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80091b0:	65a3      	str	r3, [r4, #88]	; 0x58
 80091b2:	2364      	movs	r3, #100	; 0x64
 80091b4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80091b8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80091bc:	4b11      	ldr	r3, [pc, #68]	; (8009204 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80091be:	f8c4 50ac 	str.w	r5, [r4, #172]	; 0xac
 80091c2:	e9c4 3525 	strd	r3, r5, [r4, #148]	; 0x94
 80091c6:	4629      	mov	r1, r5
 80091c8:	4630      	mov	r0, r6
 80091ca:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80091ce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80091d2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80091d6:	f7f9 f8d7 	bl	8002388 <_ZN8touchgfx8Drawable4setXEs>
 80091da:	4629      	mov	r1, r5
 80091dc:	4630      	mov	r0, r6
 80091de:	f7f9 f8d5 	bl	800238c <_ZN8touchgfx8Drawable4setYEs>
 80091e2:	4631      	mov	r1, r6
 80091e4:	4620      	mov	r0, r4
 80091e6:	f000 f8af 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80091ea:	4620      	mov	r0, r4
 80091ec:	4639      	mov	r1, r7
 80091ee:	f000 f8ab 	bl	8009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80091f2:	4620      	mov	r0, r4
 80091f4:	b003      	add	sp, #12
 80091f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091f8:	0801d968 	.word	0x0801d968
 80091fc:	0801e634 	.word	0x0801e634
 8009200:	0801db58 	.word	0x0801db58
 8009204:	0800df93 	.word	0x0800df93

08009208 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009208:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800920a:	2000      	movs	r0, #0
 800920c:	b12b      	cbz	r3, 800921a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800920e:	b920      	cbnz	r0, 800921a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009210:	1a5a      	subs	r2, r3, r1
 8009212:	4250      	negs	r0, r2
 8009214:	4150      	adcs	r0, r2
 8009216:	699b      	ldr	r3, [r3, #24]
 8009218:	e7f8      	b.n	800920c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800921a:	4770      	bx	lr

0800921c <_ZN8touchgfx9Container9removeAllEv>:
 800921c:	2200      	movs	r2, #0
 800921e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009220:	b123      	cbz	r3, 800922c <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009222:	6999      	ldr	r1, [r3, #24]
 8009224:	6281      	str	r1, [r0, #40]	; 0x28
 8009226:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800922a:	e7f8      	b.n	800921e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800922c:	4770      	bx	lr

0800922e <_ZN8touchgfx9Container6unlinkEv>:
 800922e:	2300      	movs	r3, #0
 8009230:	6283      	str	r3, [r0, #40]	; 0x28
 8009232:	4770      	bx	lr

08009234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009238:	461f      	mov	r7, r3
 800923a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800923e:	460d      	mov	r5, r1
 8009240:	4616      	mov	r6, r2
 8009242:	b103      	cbz	r3, 8009246 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009244:	6038      	str	r0, [r7, #0]
 8009246:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009248:	b314      	cbz	r4, 8009290 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800924a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800924e:	b1eb      	cbz	r3, 800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009250:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009254:	428d      	cmp	r5, r1
 8009256:	db19      	blt.n	800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009258:	8923      	ldrh	r3, [r4, #8]
 800925a:	b289      	uxth	r1, r1
 800925c:	440b      	add	r3, r1
 800925e:	b21b      	sxth	r3, r3
 8009260:	429d      	cmp	r5, r3
 8009262:	da13      	bge.n	800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009264:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009268:	4296      	cmp	r6, r2
 800926a:	db0f      	blt.n	800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800926c:	8963      	ldrh	r3, [r4, #10]
 800926e:	b292      	uxth	r2, r2
 8009270:	4413      	add	r3, r2
 8009272:	b21b      	sxth	r3, r3
 8009274:	429e      	cmp	r6, r3
 8009276:	da09      	bge.n	800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009278:	6823      	ldr	r3, [r4, #0]
 800927a:	1ab2      	subs	r2, r6, r2
 800927c:	1a69      	subs	r1, r5, r1
 800927e:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8009282:	b212      	sxth	r2, r2
 8009284:	463b      	mov	r3, r7
 8009286:	b209      	sxth	r1, r1
 8009288:	4620      	mov	r0, r4
 800928a:	47c0      	blx	r8
 800928c:	69a4      	ldr	r4, [r4, #24]
 800928e:	e7db      	b.n	8009248 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009294 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009294:	2200      	movs	r2, #0
 8009296:	8002      	strh	r2, [r0, #0]
 8009298:	8042      	strh	r2, [r0, #2]
 800929a:	8082      	strh	r2, [r0, #4]
 800929c:	80c2      	strh	r2, [r0, #6]
 800929e:	4770      	bx	lr

080092a0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80092a0:	b570      	push	{r4, r5, r6, lr}
 80092a2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80092a4:	460d      	mov	r5, r1
 80092a6:	4616      	mov	r6, r2
 80092a8:	b13c      	cbz	r4, 80092ba <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80092aa:	6823      	ldr	r3, [r4, #0]
 80092ac:	4620      	mov	r0, r4
 80092ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80092b0:	4632      	mov	r2, r6
 80092b2:	4629      	mov	r1, r5
 80092b4:	4798      	blx	r3
 80092b6:	69a4      	ldr	r4, [r4, #24]
 80092b8:	e7f6      	b.n	80092a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80092ba:	bd70      	pop	{r4, r5, r6, pc}

080092bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80092bc:	b538      	push	{r3, r4, r5, lr}
 80092be:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80092c0:	460d      	mov	r5, r1
 80092c2:	b134      	cbz	r4, 80092d2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80092c4:	682b      	ldr	r3, [r5, #0]
 80092c6:	4621      	mov	r1, r4
 80092c8:	689b      	ldr	r3, [r3, #8]
 80092ca:	4628      	mov	r0, r5
 80092cc:	4798      	blx	r3
 80092ce:	69a4      	ldr	r4, [r4, #24]
 80092d0:	e7f7      	b.n	80092c2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80092d2:	bd38      	pop	{r3, r4, r5, pc}

080092d4 <_ZN8touchgfx9ContainerD1Ev>:
 80092d4:	4770      	bx	lr

080092d6 <_ZN8touchgfx9ContainerD0Ev>:
 80092d6:	b510      	push	{r4, lr}
 80092d8:	212c      	movs	r1, #44	; 0x2c
 80092da:	4604      	mov	r4, r0
 80092dc:	f012 f91d 	bl	801b51a <_ZdlPvj>
 80092e0:	4620      	mov	r0, r4
 80092e2:	bd10      	pop	{r4, pc}

080092e4 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80092e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80092e6:	b19b      	cbz	r3, 8009310 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80092e8:	428b      	cmp	r3, r1
 80092ea:	d109      	bne.n	8009300 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80092ec:	699a      	ldr	r2, [r3, #24]
 80092ee:	2100      	movs	r1, #0
 80092f0:	6159      	str	r1, [r3, #20]
 80092f2:	6282      	str	r2, [r0, #40]	; 0x28
 80092f4:	b902      	cbnz	r2, 80092f8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80092f6:	4770      	bx	lr
 80092f8:	6199      	str	r1, [r3, #24]
 80092fa:	4770      	bx	lr
 80092fc:	4613      	mov	r3, r2
 80092fe:	b13a      	cbz	r2, 8009310 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009300:	699a      	ldr	r2, [r3, #24]
 8009302:	428a      	cmp	r2, r1
 8009304:	d1fa      	bne.n	80092fc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009306:	698a      	ldr	r2, [r1, #24]
 8009308:	619a      	str	r2, [r3, #24]
 800930a:	2300      	movs	r3, #0
 800930c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009310:	4770      	bx	lr

08009312 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009312:	b410      	push	{r4}
 8009314:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009316:	4604      	mov	r4, r0
 8009318:	b92b      	cbnz	r3, 8009326 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800931a:	6803      	ldr	r3, [r0, #0]
 800931c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009320:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009322:	4611      	mov	r1, r2
 8009324:	4718      	bx	r3
 8009326:	b941      	cbnz	r1, 800933a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009328:	6193      	str	r3, [r2, #24]
 800932a:	6282      	str	r2, [r0, #40]	; 0x28
 800932c:	6154      	str	r4, [r2, #20]
 800932e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009332:	4770      	bx	lr
 8009334:	4603      	mov	r3, r0
 8009336:	2800      	cmp	r0, #0
 8009338:	d0f9      	beq.n	800932e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800933a:	4299      	cmp	r1, r3
 800933c:	6998      	ldr	r0, [r3, #24]
 800933e:	d1f9      	bne.n	8009334 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009340:	6190      	str	r0, [r2, #24]
 8009342:	618a      	str	r2, [r1, #24]
 8009344:	e7f2      	b.n	800932c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009348 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009348:	4288      	cmp	r0, r1
 800934a:	b508      	push	{r3, lr}
 800934c:	d105      	bne.n	800935a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800934e:	4b11      	ldr	r3, [pc, #68]	; (8009394 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009350:	4a11      	ldr	r2, [pc, #68]	; (8009398 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009352:	2121      	movs	r1, #33	; 0x21
 8009354:	4811      	ldr	r0, [pc, #68]	; (800939c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8009356:	f012 f90f 	bl	801b578 <__assert_func>
 800935a:	694b      	ldr	r3, [r1, #20]
 800935c:	b11b      	cbz	r3, 8009366 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800935e:	4b10      	ldr	r3, [pc, #64]	; (80093a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009360:	4a0d      	ldr	r2, [pc, #52]	; (8009398 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009362:	2122      	movs	r1, #34	; 0x22
 8009364:	e7f6      	b.n	8009354 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009366:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800936a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800936c:	b913      	cbnz	r3, 8009374 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800936e:	6281      	str	r1, [r0, #40]	; 0x28
 8009370:	bd08      	pop	{r3, pc}
 8009372:	4613      	mov	r3, r2
 8009374:	699a      	ldr	r2, [r3, #24]
 8009376:	b12a      	cbz	r2, 8009384 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009378:	428b      	cmp	r3, r1
 800937a:	d1fa      	bne.n	8009372 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800937c:	4b09      	ldr	r3, [pc, #36]	; (80093a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800937e:	4a06      	ldr	r2, [pc, #24]	; (8009398 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009380:	2133      	movs	r1, #51	; 0x33
 8009382:	e7e7      	b.n	8009354 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009384:	428b      	cmp	r3, r1
 8009386:	d103      	bne.n	8009390 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009388:	4b06      	ldr	r3, [pc, #24]	; (80093a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800938a:	4a03      	ldr	r2, [pc, #12]	; (8009398 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800938c:	2136      	movs	r1, #54	; 0x36
 800938e:	e7e1      	b.n	8009354 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009390:	6199      	str	r1, [r3, #24]
 8009392:	e7ed      	b.n	8009370 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8009394:	0801da85 	.word	0x0801da85
 8009398:	0801dbd8 	.word	0x0801dbd8
 800939c:	0801dab1 	.word	0x0801dab1
 80093a0:	0801dae4 	.word	0x0801dae4
 80093a4:	0801db1a 	.word	0x0801db1a

080093a8 <_ZN8touchgfx4RectaNERKS0_>:
 80093a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80093ac:	f9b1 7000 	ldrsh.w	r7, [r1]
 80093b0:	888c      	ldrh	r4, [r1, #4]
 80093b2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80093b6:	443c      	add	r4, r7
 80093b8:	b2a4      	uxth	r4, r4
 80093ba:	fa0f f884 	sxth.w	r8, r4
 80093be:	45c1      	cmp	r9, r8
 80093c0:	da2f      	bge.n	8009422 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80093c2:	8882      	ldrh	r2, [r0, #4]
 80093c4:	444a      	add	r2, r9
 80093c6:	b292      	uxth	r2, r2
 80093c8:	fa0f fe82 	sxth.w	lr, r2
 80093cc:	4577      	cmp	r7, lr
 80093ce:	da28      	bge.n	8009422 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80093d0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80093d4:	88cb      	ldrh	r3, [r1, #6]
 80093d6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80093da:	442b      	add	r3, r5
 80093dc:	b21b      	sxth	r3, r3
 80093de:	429e      	cmp	r6, r3
 80093e0:	da1f      	bge.n	8009422 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80093e2:	88c3      	ldrh	r3, [r0, #6]
 80093e4:	4433      	add	r3, r6
 80093e6:	b29b      	uxth	r3, r3
 80093e8:	fa0f fc83 	sxth.w	ip, r3
 80093ec:	4565      	cmp	r5, ip
 80093ee:	da18      	bge.n	8009422 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80093f0:	454f      	cmp	r7, r9
 80093f2:	bfb8      	it	lt
 80093f4:	464f      	movlt	r7, r9
 80093f6:	42b5      	cmp	r5, r6
 80093f8:	bfb8      	it	lt
 80093fa:	4635      	movlt	r5, r6
 80093fc:	45f0      	cmp	r8, lr
 80093fe:	bfd8      	it	le
 8009400:	4622      	movle	r2, r4
 8009402:	1bd2      	subs	r2, r2, r7
 8009404:	8082      	strh	r2, [r0, #4]
 8009406:	884a      	ldrh	r2, [r1, #2]
 8009408:	88c9      	ldrh	r1, [r1, #6]
 800940a:	8007      	strh	r7, [r0, #0]
 800940c:	440a      	add	r2, r1
 800940e:	b292      	uxth	r2, r2
 8009410:	b211      	sxth	r1, r2
 8009412:	458c      	cmp	ip, r1
 8009414:	bfa8      	it	ge
 8009416:	4613      	movge	r3, r2
 8009418:	1b5b      	subs	r3, r3, r5
 800941a:	80c3      	strh	r3, [r0, #6]
 800941c:	8045      	strh	r5, [r0, #2]
 800941e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009422:	2300      	movs	r3, #0
 8009424:	8003      	strh	r3, [r0, #0]
 8009426:	8043      	strh	r3, [r0, #2]
 8009428:	8083      	strh	r3, [r0, #4]
 800942a:	80c3      	strh	r3, [r0, #6]
 800942c:	e7f7      	b.n	800941e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800942e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800942e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009432:	2b00      	cmp	r3, #0
 8009434:	dd06      	ble.n	8009444 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009436:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800943a:	2800      	cmp	r0, #0
 800943c:	bfcc      	ite	gt
 800943e:	2000      	movgt	r0, #0
 8009440:	2001      	movle	r0, #1
 8009442:	4770      	bx	lr
 8009444:	2001      	movs	r0, #1
 8009446:	4770      	bx	lr

08009448 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800944c:	2300      	movs	r3, #0
 800944e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009450:	8003      	strh	r3, [r0, #0]
 8009452:	4604      	mov	r4, r0
 8009454:	8043      	strh	r3, [r0, #2]
 8009456:	8083      	strh	r3, [r0, #4]
 8009458:	80c3      	strh	r3, [r0, #6]
 800945a:	2d00      	cmp	r5, #0
 800945c:	d040      	beq.n	80094e0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800945e:	1d28      	adds	r0, r5, #4
 8009460:	f7ff ffe5 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009464:	b988      	cbnz	r0, 800948a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009466:	4620      	mov	r0, r4
 8009468:	f7ff ffe1 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800946c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009470:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009474:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009478:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800947c:	b138      	cbz	r0, 800948e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800947e:	8022      	strh	r2, [r4, #0]
 8009480:	8063      	strh	r3, [r4, #2]
 8009482:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009486:	f8a4 c006 	strh.w	ip, [r4, #6]
 800948a:	69ad      	ldr	r5, [r5, #24]
 800948c:	e7e5      	b.n	800945a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800948e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009492:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009496:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800949a:	4290      	cmp	r0, r2
 800949c:	4607      	mov	r7, r0
 800949e:	bfa8      	it	ge
 80094a0:	4617      	movge	r7, r2
 80094a2:	4472      	add	r2, lr
 80094a4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80094a8:	8027      	strh	r7, [r4, #0]
 80094aa:	4299      	cmp	r1, r3
 80094ac:	460e      	mov	r6, r1
 80094ae:	4440      	add	r0, r8
 80094b0:	bfa8      	it	ge
 80094b2:	461e      	movge	r6, r3
 80094b4:	4471      	add	r1, lr
 80094b6:	4463      	add	r3, ip
 80094b8:	b200      	sxth	r0, r0
 80094ba:	b212      	sxth	r2, r2
 80094bc:	b209      	sxth	r1, r1
 80094be:	b21b      	sxth	r3, r3
 80094c0:	4290      	cmp	r0, r2
 80094c2:	bfac      	ite	ge
 80094c4:	ebc7 0200 	rsbge	r2, r7, r0
 80094c8:	ebc7 0202 	rsblt	r2, r7, r2
 80094cc:	4299      	cmp	r1, r3
 80094ce:	bfac      	ite	ge
 80094d0:	ebc6 0301 	rsbge	r3, r6, r1
 80094d4:	ebc6 0303 	rsblt	r3, r6, r3
 80094d8:	8066      	strh	r6, [r4, #2]
 80094da:	80a2      	strh	r2, [r4, #4]
 80094dc:	80e3      	strh	r3, [r4, #6]
 80094de:	e7d4      	b.n	800948a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80094e0:	4620      	mov	r0, r4
 80094e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080094e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80094e6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80094ea:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80094ee:	b383      	cbz	r3, 8009552 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80094f0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80094f2:	b374      	cbz	r4, 8009552 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80094f4:	f9b1 5000 	ldrsh.w	r5, [r1]
 80094f8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80094fc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009500:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009504:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009508:	b303      	cbz	r3, 800954c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800950a:	4668      	mov	r0, sp
 800950c:	1d21      	adds	r1, r4, #4
 800950e:	f8ad 5000 	strh.w	r5, [sp]
 8009512:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009516:	f8ad 7004 	strh.w	r7, [sp, #4]
 800951a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800951e:	f7ff ff43 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 8009522:	4668      	mov	r0, sp
 8009524:	f7ff ff83 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009528:	b980      	cbnz	r0, 800954c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800952a:	f8bd 3000 	ldrh.w	r3, [sp]
 800952e:	88a2      	ldrh	r2, [r4, #4]
 8009530:	1a9b      	subs	r3, r3, r2
 8009532:	f8ad 3000 	strh.w	r3, [sp]
 8009536:	88e2      	ldrh	r2, [r4, #6]
 8009538:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800953c:	1a9b      	subs	r3, r3, r2
 800953e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009542:	6823      	ldr	r3, [r4, #0]
 8009544:	4669      	mov	r1, sp
 8009546:	689b      	ldr	r3, [r3, #8]
 8009548:	4620      	mov	r0, r4
 800954a:	4798      	blx	r3
 800954c:	69a4      	ldr	r4, [r4, #24]
 800954e:	2c00      	cmp	r4, #0
 8009550:	d1d8      	bne.n	8009504 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009552:	b002      	add	sp, #8
 8009554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009558 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009558:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800955a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800955e:	460d      	mov	r5, r1
 8009560:	4616      	mov	r6, r2
 8009562:	b323      	cbz	r3, 80095ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009564:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009566:	b314      	cbz	r4, 80095ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009568:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800956c:	b1eb      	cbz	r3, 80095aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800956e:	6828      	ldr	r0, [r5, #0]
 8009570:	6869      	ldr	r1, [r5, #4]
 8009572:	466b      	mov	r3, sp
 8009574:	c303      	stmia	r3!, {r0, r1}
 8009576:	4668      	mov	r0, sp
 8009578:	1d21      	adds	r1, r4, #4
 800957a:	f7ff ff15 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800957e:	4668      	mov	r0, sp
 8009580:	f7ff ff55 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009584:	b988      	cbnz	r0, 80095aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009586:	f8bd 3000 	ldrh.w	r3, [sp]
 800958a:	88a2      	ldrh	r2, [r4, #4]
 800958c:	1a9b      	subs	r3, r3, r2
 800958e:	f8ad 3000 	strh.w	r3, [sp]
 8009592:	88e2      	ldrh	r2, [r4, #6]
 8009594:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009598:	1a9b      	subs	r3, r3, r2
 800959a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800959e:	6823      	ldr	r3, [r4, #0]
 80095a0:	4632      	mov	r2, r6
 80095a2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80095a4:	4669      	mov	r1, sp
 80095a6:	4620      	mov	r0, r4
 80095a8:	4798      	blx	r3
 80095aa:	69a4      	ldr	r4, [r4, #24]
 80095ac:	e7db      	b.n	8009566 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80095ae:	b002      	add	sp, #8
 80095b0:	bd70      	pop	{r4, r5, r6, pc}

080095b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80095b2:	b513      	push	{r0, r1, r4, lr}
 80095b4:	6803      	ldr	r3, [r0, #0]
 80095b6:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 80095ba:	2300      	movs	r3, #0
 80095bc:	e9cd 3300 	strd	r3, r3, [sp]
 80095c0:	466b      	mov	r3, sp
 80095c2:	47a0      	blx	r4
 80095c4:	b002      	add	sp, #8
 80095c6:	bd10      	pop	{r4, pc}

080095c8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80095c8:	2301      	movs	r3, #1
 80095ca:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80095ce:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80095d2:	4770      	bx	lr

080095d4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80095d4:	2301      	movs	r3, #1
 80095d6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80095da:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80095de:	4770      	bx	lr

080095e0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80095e0:	6843      	ldr	r3, [r0, #4]
 80095e2:	2201      	movs	r2, #1
 80095e4:	725a      	strb	r2, [r3, #9]
 80095e6:	6840      	ldr	r0, [r0, #4]
 80095e8:	6803      	ldr	r3, [r0, #0]
 80095ea:	691b      	ldr	r3, [r3, #16]
 80095ec:	4718      	bx	r3

080095ee <_ZN8touchgfx3HAL8flushDMAEv>:
 80095ee:	6840      	ldr	r0, [r0, #4]
 80095f0:	6803      	ldr	r3, [r0, #0]
 80095f2:	689b      	ldr	r3, [r3, #8]
 80095f4:	4718      	bx	r3

080095f6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 80095f6:	b530      	push	{r4, r5, lr}
 80095f8:	b08b      	sub	sp, #44	; 0x2c
 80095fa:	6804      	ldr	r4, [r0, #0]
 80095fc:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009600:	9508      	str	r5, [sp, #32]
 8009602:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009606:	9507      	str	r5, [sp, #28]
 8009608:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800960c:	9506      	str	r5, [sp, #24]
 800960e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009612:	9505      	str	r5, [sp, #20]
 8009614:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009618:	9504      	str	r5, [sp, #16]
 800961a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800961e:	9503      	str	r5, [sp, #12]
 8009620:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009624:	9502      	str	r5, [sp, #8]
 8009626:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800962a:	e9cd 3500 	strd	r3, r5, [sp]
 800962e:	4613      	mov	r3, r2
 8009630:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8009632:	2200      	movs	r2, #0
 8009634:	47a0      	blx	r4
 8009636:	b00b      	add	sp, #44	; 0x2c
 8009638:	bd30      	pop	{r4, r5, pc}
	...

0800963c <_ZN8touchgfx3HAL10beginFrameEv>:
 800963c:	4b04      	ldr	r3, [pc, #16]	; (8009650 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800963e:	781b      	ldrb	r3, [r3, #0]
 8009640:	b123      	cbz	r3, 800964c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009642:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009646:	f080 0001 	eor.w	r0, r0, #1
 800964a:	4770      	bx	lr
 800964c:	2001      	movs	r0, #1
 800964e:	4770      	bx	lr
 8009650:	2000a196 	.word	0x2000a196

08009654 <_ZN8touchgfx3HAL8endFrameEv>:
 8009654:	b510      	push	{r4, lr}
 8009656:	4604      	mov	r4, r0
 8009658:	6840      	ldr	r0, [r0, #4]
 800965a:	6803      	ldr	r3, [r0, #0]
 800965c:	689b      	ldr	r3, [r3, #8]
 800965e:	4798      	blx	r3
 8009660:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009664:	b113      	cbz	r3, 800966c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009666:	2301      	movs	r3, #1
 8009668:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800966c:	bd10      	pop	{r4, pc}

0800966e <_ZN8touchgfx3HAL10initializeEv>:
 800966e:	b510      	push	{r4, lr}
 8009670:	4604      	mov	r4, r0
 8009672:	f7f7 faf1 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009676:	6860      	ldr	r0, [r4, #4]
 8009678:	6803      	ldr	r3, [r0, #0]
 800967a:	68db      	ldr	r3, [r3, #12]
 800967c:	4798      	blx	r3
 800967e:	68e0      	ldr	r0, [r4, #12]
 8009680:	6803      	ldr	r3, [r0, #0]
 8009682:	689b      	ldr	r3, [r3, #8]
 8009684:	4798      	blx	r3
 8009686:	6823      	ldr	r3, [r4, #0]
 8009688:	4620      	mov	r0, r4
 800968a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800968c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009690:	4718      	bx	r3
	...

08009694 <_ZN8touchgfx3HAL4tickEv>:
 8009694:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009696:	6803      	ldr	r3, [r0, #0]
 8009698:	4d5c      	ldr	r5, [pc, #368]	; (800980c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800969a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800969e:	4604      	mov	r4, r0
 80096a0:	4798      	blx	r3
 80096a2:	2800      	cmp	r0, #0
 80096a4:	f000 8097 	beq.w	80097d6 <_ZN8touchgfx3HAL4tickEv+0x142>
 80096a8:	2001      	movs	r0, #1
 80096aa:	f7f7 f853 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80096ae:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80096b2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80096b6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80096ba:	2600      	movs	r6, #0
 80096bc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80096c0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80096c4:	b133      	cbz	r3, 80096d4 <_ZN8touchgfx3HAL4tickEv+0x40>
 80096c6:	6823      	ldr	r3, [r4, #0]
 80096c8:	4620      	mov	r0, r4
 80096ca:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80096ce:	4798      	blx	r3
 80096d0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80096d4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80096d8:	6862      	ldr	r2, [r4, #4]
 80096da:	f083 0301 	eor.w	r3, r3, #1
 80096de:	7253      	strb	r3, [r2, #9]
 80096e0:	2601      	movs	r6, #1
 80096e2:	702e      	strb	r6, [r5, #0]
 80096e4:	f002 ff4a 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80096e8:	6803      	ldr	r3, [r0, #0]
 80096ea:	4631      	mov	r1, r6
 80096ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80096ee:	4798      	blx	r3
 80096f0:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80096f4:	b90b      	cbnz	r3, 80096fa <_ZN8touchgfx3HAL4tickEv+0x66>
 80096f6:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80096fa:	f002 ff3f 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80096fe:	6803      	ldr	r3, [r0, #0]
 8009700:	695b      	ldr	r3, [r3, #20]
 8009702:	4798      	blx	r3
 8009704:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009706:	6803      	ldr	r3, [r0, #0]
 8009708:	691b      	ldr	r3, [r3, #16]
 800970a:	4798      	blx	r3
 800970c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009710:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009714:	3b01      	subs	r3, #1
 8009716:	b2db      	uxtb	r3, r3
 8009718:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800971c:	b10a      	cbz	r2, 8009722 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800971e:	2b00      	cmp	r3, #0
 8009720:	d1eb      	bne.n	80096fa <_ZN8touchgfx3HAL4tickEv+0x66>
 8009722:	4a3b      	ldr	r2, [pc, #236]	; (8009810 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009724:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009728:	7813      	ldrb	r3, [r2, #0]
 800972a:	3301      	adds	r3, #1
 800972c:	b25b      	sxtb	r3, r3
 800972e:	4299      	cmp	r1, r3
 8009730:	7013      	strb	r3, [r2, #0]
 8009732:	dc10      	bgt.n	8009756 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009734:	68e0      	ldr	r0, [r4, #12]
 8009736:	2300      	movs	r3, #0
 8009738:	7013      	strb	r3, [r2, #0]
 800973a:	6803      	ldr	r3, [r0, #0]
 800973c:	aa03      	add	r2, sp, #12
 800973e:	68db      	ldr	r3, [r3, #12]
 8009740:	a902      	add	r1, sp, #8
 8009742:	4798      	blx	r3
 8009744:	6823      	ldr	r3, [r4, #0]
 8009746:	2800      	cmp	r0, #0
 8009748:	d051      	beq.n	80097ee <_ZN8touchgfx3HAL4tickEv+0x15a>
 800974a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800974e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009752:	4620      	mov	r0, r4
 8009754:	4798      	blx	r3
 8009756:	6960      	ldr	r0, [r4, #20]
 8009758:	2300      	movs	r3, #0
 800975a:	f88d 3007 	strb.w	r3, [sp, #7]
 800975e:	b158      	cbz	r0, 8009778 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009760:	6803      	ldr	r3, [r0, #0]
 8009762:	f10d 0107 	add.w	r1, sp, #7
 8009766:	68db      	ldr	r3, [r3, #12]
 8009768:	4798      	blx	r3
 800976a:	b128      	cbz	r0, 8009778 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800976c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800976e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009772:	6803      	ldr	r3, [r0, #0]
 8009774:	68db      	ldr	r3, [r3, #12]
 8009776:	4798      	blx	r3
 8009778:	f104 001c 	add.w	r0, r4, #28
 800977c:	f011 fe14 	bl	801b3a8 <_ZN8touchgfx8Gestures4tickEv>
 8009780:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009784:	b30b      	cbz	r3, 80097ca <_ZN8touchgfx3HAL4tickEv+0x136>
 8009786:	6920      	ldr	r0, [r4, #16]
 8009788:	6803      	ldr	r3, [r0, #0]
 800978a:	691b      	ldr	r3, [r3, #16]
 800978c:	4798      	blx	r3
 800978e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009790:	4606      	mov	r6, r0
 8009792:	b903      	cbnz	r3, 8009796 <_ZN8touchgfx3HAL4tickEv+0x102>
 8009794:	6720      	str	r0, [r4, #112]	; 0x70
 8009796:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009798:	4a1e      	ldr	r2, [pc, #120]	; (8009814 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800979a:	1af3      	subs	r3, r6, r3
 800979c:	4293      	cmp	r3, r2
 800979e:	d914      	bls.n	80097ca <_ZN8touchgfx3HAL4tickEv+0x136>
 80097a0:	6920      	ldr	r0, [r4, #16]
 80097a2:	6803      	ldr	r3, [r0, #0]
 80097a4:	699b      	ldr	r3, [r3, #24]
 80097a6:	4798      	blx	r3
 80097a8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80097aa:	2264      	movs	r2, #100	; 0x64
 80097ac:	1af3      	subs	r3, r6, r3
 80097ae:	fbb3 f3f2 	udiv	r3, r3, r2
 80097b2:	fbb0 f0f3 	udiv	r0, r0, r3
 80097b6:	2800      	cmp	r0, #0
 80097b8:	dc1e      	bgt.n	80097f8 <_ZN8touchgfx3HAL4tickEv+0x164>
 80097ba:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80097be:	6920      	ldr	r0, [r4, #16]
 80097c0:	6803      	ldr	r3, [r0, #0]
 80097c2:	2100      	movs	r1, #0
 80097c4:	69db      	ldr	r3, [r3, #28]
 80097c6:	4798      	blx	r3
 80097c8:	6726      	str	r6, [r4, #112]	; 0x70
 80097ca:	f002 fed7 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 80097ce:	6803      	ldr	r3, [r0, #0]
 80097d0:	2100      	movs	r1, #0
 80097d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80097d4:	4798      	blx	r3
 80097d6:	6823      	ldr	r3, [r4, #0]
 80097d8:	4620      	mov	r0, r4
 80097da:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80097de:	4798      	blx	r3
 80097e0:	2001      	movs	r0, #1
 80097e2:	f7f6 ffd3 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80097e6:	2300      	movs	r3, #0
 80097e8:	702b      	strb	r3, [r5, #0]
 80097ea:	b004      	add	sp, #16
 80097ec:	bd70      	pop	{r4, r5, r6, pc}
 80097ee:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80097f2:	4620      	mov	r0, r4
 80097f4:	4798      	blx	r3
 80097f6:	e7ae      	b.n	8009756 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80097f8:	2863      	cmp	r0, #99	; 0x63
 80097fa:	bfcb      	itete	gt
 80097fc:	2300      	movgt	r3, #0
 80097fe:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009802:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009806:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800980a:	e7d8      	b.n	80097be <_ZN8touchgfx3HAL4tickEv+0x12a>
 800980c:	2000a19c 	.word	0x2000a19c
 8009810:	2000a19d 	.word	0x2000a19d
 8009814:	05f5e100 	.word	0x05f5e100

08009818 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009818:	f7f7 ba4e 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800981c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800981c:	6581      	str	r1, [r0, #88]	; 0x58
 800981e:	301c      	adds	r0, #28
 8009820:	f011 bdc0 	b.w	801b3a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009824 <_ZN8touchgfx3HAL5touchEll>:
 8009824:	b530      	push	{r4, r5, lr}
 8009826:	b087      	sub	sp, #28
 8009828:	4604      	mov	r4, r0
 800982a:	a804      	add	r0, sp, #16
 800982c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009830:	f002 fc64 	bl	800c0fc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009834:	9b04      	ldr	r3, [sp, #16]
 8009836:	f8ad 300c 	strh.w	r3, [sp, #12]
 800983a:	a906      	add	r1, sp, #24
 800983c:	9b05      	ldr	r3, [sp, #20]
 800983e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009842:	a803      	add	r0, sp, #12
 8009844:	f002 fc98 	bl	800c178 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009848:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800984c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009850:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009854:	f104 001c 	add.w	r0, r4, #28
 8009858:	b189      	cbz	r1, 800987e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800985a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800985e:	9300      	str	r3, [sp, #0]
 8009860:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009864:	4613      	mov	r3, r2
 8009866:	462a      	mov	r2, r5
 8009868:	f011 fdac 	bl	801b3c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800986c:	b128      	cbz	r0, 800987a <_ZN8touchgfx3HAL5touchEll+0x56>
 800986e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009872:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009874:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009878:	6623      	str	r3, [r4, #96]	; 0x60
 800987a:	b007      	add	sp, #28
 800987c:	bd30      	pop	{r4, r5, pc}
 800987e:	f011 fde5 	bl	801b44c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009882:	2301      	movs	r3, #1
 8009884:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009888:	e7f1      	b.n	800986e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800988a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800988a:	b570      	push	{r4, r5, r6, lr}
 800988c:	2b00      	cmp	r3, #0
 800988e:	d050      	beq.n	8009932 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009890:	ea81 0002 	eor.w	r0, r1, r2
 8009894:	07c6      	lsls	r6, r0, #31
 8009896:	d508      	bpl.n	80098aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009898:	3a01      	subs	r2, #1
 800989a:	18cc      	adds	r4, r1, r3
 800989c:	42a1      	cmp	r1, r4
 800989e:	d048      	beq.n	8009932 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80098a0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80098a4:	f801 0b01 	strb.w	r0, [r1], #1
 80098a8:	e7f8      	b.n	800989c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80098aa:	07d5      	lsls	r5, r2, #31
 80098ac:	bf42      	ittt	mi
 80098ae:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80098b2:	f801 0b01 	strbmi.w	r0, [r1], #1
 80098b6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80098ba:	2b01      	cmp	r3, #1
 80098bc:	d915      	bls.n	80098ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80098be:	ea82 0001 	eor.w	r0, r2, r1
 80098c2:	0784      	lsls	r4, r0, #30
 80098c4:	d02d      	beq.n	8009922 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 80098c6:	1e94      	subs	r4, r2, #2
 80098c8:	4608      	mov	r0, r1
 80098ca:	18ce      	adds	r6, r1, r3
 80098cc:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80098d0:	f820 5b02 	strh.w	r5, [r0], #2
 80098d4:	1a35      	subs	r5, r6, r0
 80098d6:	2d01      	cmp	r5, #1
 80098d8:	d8f8      	bhi.n	80098cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 80098da:	1e98      	subs	r0, r3, #2
 80098dc:	f020 0001 	bic.w	r0, r0, #1
 80098e0:	3002      	adds	r0, #2
 80098e2:	4401      	add	r1, r0
 80098e4:	4402      	add	r2, r0
 80098e6:	f003 0301 	and.w	r3, r3, #1
 80098ea:	1f14      	subs	r4, r2, #4
 80098ec:	4608      	mov	r0, r1
 80098ee:	18ce      	adds	r6, r1, r3
 80098f0:	1a35      	subs	r5, r6, r0
 80098f2:	2d03      	cmp	r5, #3
 80098f4:	d810      	bhi.n	8009918 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 80098f6:	089c      	lsrs	r4, r3, #2
 80098f8:	00a0      	lsls	r0, r4, #2
 80098fa:	4401      	add	r1, r0
 80098fc:	3801      	subs	r0, #1
 80098fe:	4402      	add	r2, r0
 8009900:	f06f 0003 	mvn.w	r0, #3
 8009904:	fb00 3404 	mla	r4, r0, r4, r3
 8009908:	440c      	add	r4, r1
 800990a:	42a1      	cmp	r1, r4
 800990c:	d011      	beq.n	8009932 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800990e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009912:	f801 3b01 	strb.w	r3, [r1], #1
 8009916:	e7f8      	b.n	800990a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009918:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800991c:	f840 5b04 	str.w	r5, [r0], #4
 8009920:	e7e6      	b.n	80098f0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8009922:	0790      	lsls	r0, r2, #30
 8009924:	d0e1      	beq.n	80098ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009926:	f832 0b02 	ldrh.w	r0, [r2], #2
 800992a:	f821 0b02 	strh.w	r0, [r1], #2
 800992e:	3b02      	subs	r3, #2
 8009930:	e7db      	b.n	80098ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009932:	2001      	movs	r0, #1
 8009934:	bd70      	pop	{r4, r5, r6, pc}

08009936 <_ZN8touchgfx3HAL7noTouchEv>:
 8009936:	b510      	push	{r4, lr}
 8009938:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800993c:	4604      	mov	r4, r0
 800993e:	b153      	cbz	r3, 8009956 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009940:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009944:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009948:	2101      	movs	r1, #1
 800994a:	301c      	adds	r0, #28
 800994c:	f011 fd7e 	bl	801b44c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009950:	2300      	movs	r3, #0
 8009952:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009956:	bd10      	pop	{r4, pc}

08009958 <_ZN8touchgfx3HAL3lcdEv>:
 8009958:	4b04      	ldr	r3, [pc, #16]	; (800996c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009960:	b10a      	cbz	r2, 8009966 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009962:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009964:	b900      	cbnz	r0, 8009968 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009966:	6898      	ldr	r0, [r3, #8]
 8009968:	4770      	bx	lr
 800996a:	bf00      	nop
 800996c:	2000a198 	.word	0x2000a198

08009970 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009970:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009974:	4604      	mov	r4, r0
 8009976:	6980      	ldr	r0, [r0, #24]
 8009978:	b085      	sub	sp, #20
 800997a:	460f      	mov	r7, r1
 800997c:	4690      	mov	r8, r2
 800997e:	4699      	mov	r9, r3
 8009980:	b930      	cbnz	r0, 8009990 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009982:	4b1c      	ldr	r3, [pc, #112]	; (80099f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009984:	4a1c      	ldr	r2, [pc, #112]	; (80099f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009986:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 800998a:	481c      	ldr	r0, [pc, #112]	; (80099fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800998c:	f011 fdf4 	bl	801b578 <__assert_func>
 8009990:	ad04      	add	r5, sp, #16
 8009992:	2600      	movs	r6, #0
 8009994:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009998:	6806      	ldr	r6, [r0, #0]
 800999a:	9501      	str	r5, [sp, #4]
 800999c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80099a0:	9500      	str	r5, [sp, #0]
 80099a2:	6835      	ldr	r5, [r6, #0]
 80099a4:	47a8      	blx	r5
 80099a6:	4d16      	ldr	r5, [pc, #88]	; (8009a00 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80099a8:	4606      	mov	r6, r0
 80099aa:	f8a5 9000 	strh.w	r9, [r5]
 80099ae:	f7ff ffd3 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 80099b2:	6803      	ldr	r3, [r0, #0]
 80099b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80099b6:	4798      	blx	r3
 80099b8:	2801      	cmp	r0, #1
 80099ba:	d012      	beq.n	80099e2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80099bc:	d306      	bcc.n	80099cc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80099be:	280d      	cmp	r0, #13
 80099c0:	d80b      	bhi.n	80099da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80099c2:	4b10      	ldr	r3, [pc, #64]	; (8009a04 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80099c4:	4a0c      	ldr	r2, [pc, #48]	; (80099f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80099c6:	f44f 71b4 	mov.w	r1, #360	; 0x168
 80099ca:	e7de      	b.n	800998a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80099cc:	882b      	ldrh	r3, [r5, #0]
 80099ce:	fb08 7203 	mla	r2, r8, r3, r7
 80099d2:	9b03      	ldr	r3, [sp, #12]
 80099d4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80099d8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80099da:	4630      	mov	r0, r6
 80099dc:	b005      	add	sp, #20
 80099de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80099e2:	882a      	ldrh	r2, [r5, #0]
 80099e4:	9b03      	ldr	r3, [sp, #12]
 80099e6:	fb08 7202 	mla	r2, r8, r2, r7
 80099ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80099ee:	1a9a      	subs	r2, r3, r2
 80099f0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80099f2:	e7f2      	b.n	80099da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80099f4:	0801dd80 	.word	0x0801dd80
 80099f8:	0801e038 	.word	0x0801e038
 80099fc:	0801ddc5 	.word	0x0801ddc5
 8009a00:	2000a192 	.word	0x2000a192
 8009a04:	0801ddeb 	.word	0x0801ddeb

08009a08 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009a08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a0a:	b08b      	sub	sp, #44	; 0x2c
 8009a0c:	4617      	mov	r7, r2
 8009a0e:	4604      	mov	r4, r0
 8009a10:	460e      	mov	r6, r1
 8009a12:	461d      	mov	r5, r3
 8009a14:	f7ff ffa0 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 8009a18:	6803      	ldr	r3, [r0, #0]
 8009a1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a1c:	4798      	blx	r3
 8009a1e:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009a22:	4b0e      	ldr	r3, [pc, #56]	; (8009a5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 8009a24:	6822      	ldr	r2, [r4, #0]
 8009a26:	881b      	ldrh	r3, [r3, #0]
 8009a28:	9306      	str	r3, [sp, #24]
 8009a2a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009a2e:	9305      	str	r3, [sp, #20]
 8009a30:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009a34:	9304      	str	r3, [sp, #16]
 8009a36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009a3a:	9303      	str	r3, [sp, #12]
 8009a3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009a40:	9302      	str	r3, [sp, #8]
 8009a42:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009a46:	e9cd 5300 	strd	r5, r3, [sp]
 8009a4a:	4631      	mov	r1, r6
 8009a4c:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8009a4e:	463b      	mov	r3, r7
 8009a50:	2200      	movs	r2, #0
 8009a52:	4620      	mov	r0, r4
 8009a54:	47a8      	blx	r5
 8009a56:	b00b      	add	sp, #44	; 0x2c
 8009a58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a5a:	bf00      	nop
 8009a5c:	2000a192 	.word	0x2000a192

08009a60 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a64:	4698      	mov	r8, r3
 8009a66:	6803      	ldr	r3, [r0, #0]
 8009a68:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 8009a6a:	4b13      	ldr	r3, [pc, #76]	; (8009ab8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009a6c:	b08b      	sub	sp, #44	; 0x2c
 8009a6e:	4617      	mov	r7, r2
 8009a70:	f8b3 9000 	ldrh.w	r9, [r3]
 8009a74:	460e      	mov	r6, r1
 8009a76:	4604      	mov	r4, r0
 8009a78:	f7ff ff6e 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 8009a7c:	6803      	ldr	r3, [r0, #0]
 8009a7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a80:	4798      	blx	r3
 8009a82:	2302      	movs	r3, #2
 8009a84:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009a88:	2301      	movs	r3, #1
 8009a8a:	9305      	str	r3, [sp, #20]
 8009a8c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009a90:	9304      	str	r3, [sp, #16]
 8009a92:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009a96:	9303      	str	r3, [sp, #12]
 8009a98:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009a9c:	9302      	str	r3, [sp, #8]
 8009a9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009aa2:	9008      	str	r0, [sp, #32]
 8009aa4:	e9cd 8300 	strd	r8, r3, [sp]
 8009aa8:	2200      	movs	r2, #0
 8009aaa:	463b      	mov	r3, r7
 8009aac:	4631      	mov	r1, r6
 8009aae:	4620      	mov	r0, r4
 8009ab0:	47a8      	blx	r5
 8009ab2:	b00b      	add	sp, #44	; 0x2c
 8009ab4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ab8:	2000a192 	.word	0x2000a192

08009abc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8009abc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ac0:	4698      	mov	r8, r3
 8009ac2:	6803      	ldr	r3, [r0, #0]
 8009ac4:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8009ac6:	4b0f      	ldr	r3, [pc, #60]	; (8009b04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009ac8:	b087      	sub	sp, #28
 8009aca:	f8b3 9000 	ldrh.w	r9, [r3]
 8009ace:	460e      	mov	r6, r1
 8009ad0:	4617      	mov	r7, r2
 8009ad2:	4604      	mov	r4, r0
 8009ad4:	f7ff ff40 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 8009ad8:	6803      	ldr	r3, [r0, #0]
 8009ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009adc:	4798      	blx	r3
 8009ade:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009ae2:	9302      	str	r3, [sp, #8]
 8009ae4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009ae8:	9301      	str	r3, [sp, #4]
 8009aea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009aee:	9300      	str	r3, [sp, #0]
 8009af0:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009af4:	4643      	mov	r3, r8
 8009af6:	463a      	mov	r2, r7
 8009af8:	4631      	mov	r1, r6
 8009afa:	4620      	mov	r0, r4
 8009afc:	47a8      	blx	r5
 8009afe:	b007      	add	sp, #28
 8009b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b04:	2000a192 	.word	0x2000a192

08009b08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b0c:	4604      	mov	r4, r0
 8009b0e:	b08f      	sub	sp, #60	; 0x3c
 8009b10:	4610      	mov	r0, r2
 8009b12:	460d      	mov	r5, r1
 8009b14:	4691      	mov	r9, r2
 8009b16:	461e      	mov	r6, r3
 8009b18:	f005 fda6 	bl	800f668 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009b1c:	2800      	cmp	r0, #0
 8009b1e:	f000 80b3 	beq.w	8009c88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 8009b22:	6823      	ldr	r3, [r4, #0]
 8009b24:	f8df b190 	ldr.w	fp, [pc, #400]	; 8009cb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 8009b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b2a:	f8df a190 	ldr.w	sl, [pc, #400]	; 8009cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009b2e:	4f5f      	ldr	r7, [pc, #380]	; (8009cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009b30:	4620      	mov	r0, r4
 8009b32:	4798      	blx	r3
 8009b34:	6823      	ldr	r3, [r4, #0]
 8009b36:	4620      	mov	r0, r4
 8009b38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009b3a:	4798      	blx	r3
 8009b3c:	f8bb 3000 	ldrh.w	r3, [fp]
 8009b40:	9300      	str	r3, [sp, #0]
 8009b42:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009b46:	f8ba 3000 	ldrh.w	r3, [sl]
 8009b4a:	9301      	str	r3, [sp, #4]
 8009b4c:	883b      	ldrh	r3, [r7, #0]
 8009b4e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009b52:	9302      	str	r3, [sp, #8]
 8009b54:	4b56      	ldr	r3, [pc, #344]	; (8009cb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009b56:	9304      	str	r3, [sp, #16]
 8009b58:	881a      	ldrh	r2, [r3, #0]
 8009b5a:	9203      	str	r2, [sp, #12]
 8009b5c:	4640      	mov	r0, r8
 8009b5e:	f005 fe3d 	bl	800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009b62:	8038      	strh	r0, [r7, #0]
 8009b64:	4640      	mov	r0, r8
 8009b66:	f005 fe73 	bl	800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009b6a:	9b04      	ldr	r3, [sp, #16]
 8009b6c:	8018      	strh	r0, [r3, #0]
 8009b6e:	4b51      	ldr	r3, [pc, #324]	; (8009cb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009b70:	781b      	ldrb	r3, [r3, #0]
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	f040 808b 	bne.w	8009c8e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 8009b78:	883b      	ldrh	r3, [r7, #0]
 8009b7a:	f8ab 3000 	strh.w	r3, [fp]
 8009b7e:	f8aa 0000 	strh.w	r0, [sl]
 8009b82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009b84:	9304      	str	r3, [sp, #16]
 8009b86:	4648      	mov	r0, r9
 8009b88:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8009b8a:	f005 fd6d 	bl	800f668 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009b8e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009b92:	2200      	movs	r2, #0
 8009b94:	4611      	mov	r1, r2
 8009b96:	4628      	mov	r0, r5
 8009b98:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009b9c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009ba0:	f7f8 fc2c 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
 8009ba4:	2301      	movs	r3, #1
 8009ba6:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009baa:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009bae:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009bb2:	2b00      	cmp	r3, #0
 8009bb4:	dd71      	ble.n	8009c9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 8009bb6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009bba:	2b00      	cmp	r3, #0
 8009bbc:	dd6d      	ble.n	8009c9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 8009bbe:	462a      	mov	r2, r5
 8009bc0:	ab0a      	add	r3, sp, #40	; 0x28
 8009bc2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009bc6:	6851      	ldr	r1, [r2, #4]
 8009bc8:	c303      	stmia	r3!, {r0, r1}
 8009bca:	4631      	mov	r1, r6
 8009bcc:	a80a      	add	r0, sp, #40	; 0x28
 8009bce:	f7ff fbeb 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 8009bd2:	4b36      	ldr	r3, [pc, #216]	; (8009cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009bd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009bd8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009bdc:	4b34      	ldr	r3, [pc, #208]	; (8009cb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009bde:	aa0a      	add	r2, sp, #40	; 0x28
 8009be0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009be4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009be8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009bec:	ab08      	add	r3, sp, #32
 8009bee:	e883 0003 	stmia.w	r3, {r0, r1}
 8009bf2:	2600      	movs	r6, #0
 8009bf4:	4618      	mov	r0, r3
 8009bf6:	a90c      	add	r1, sp, #48	; 0x30
 8009bf8:	960c      	str	r6, [sp, #48]	; 0x30
 8009bfa:	f7ff fbd5 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 8009bfe:	a807      	add	r0, sp, #28
 8009c00:	f005 ff7e 	bl	800fb00 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009c04:	4680      	mov	r8, r0
 8009c06:	f7ff fea7 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 8009c0a:	6802      	ldr	r2, [r0, #0]
 8009c0c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009c0e:	4790      	blx	r2
 8009c10:	4580      	cmp	r8, r0
 8009c12:	d049      	beq.n	8009ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 8009c14:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009c16:	b150      	cbz	r0, 8009c2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009c18:	a807      	add	r0, sp, #28
 8009c1a:	f005 ff71 	bl	800fb00 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009c1e:	4606      	mov	r6, r0
 8009c20:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009c22:	6803      	ldr	r3, [r0, #0]
 8009c24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c26:	4798      	blx	r3
 8009c28:	1a33      	subs	r3, r6, r0
 8009c2a:	4258      	negs	r0, r3
 8009c2c:	4158      	adcs	r0, r3
 8009c2e:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009c32:	2600      	movs	r6, #0
 8009c34:	682a      	ldr	r2, [r5, #0]
 8009c36:	696b      	ldr	r3, [r5, #20]
 8009c38:	616e      	str	r6, [r5, #20]
 8009c3a:	9305      	str	r3, [sp, #20]
 8009c3c:	6892      	ldr	r2, [r2, #8]
 8009c3e:	a908      	add	r1, sp, #32
 8009c40:	4628      	mov	r0, r5
 8009c42:	4790      	blx	r2
 8009c44:	9b05      	ldr	r3, [sp, #20]
 8009c46:	616b      	str	r3, [r5, #20]
 8009c48:	4652      	mov	r2, sl
 8009c4a:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009c4e:	4649      	mov	r1, r9
 8009c50:	4628      	mov	r0, r5
 8009c52:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009c56:	f7f8 fbd1 	bl	80023fc <_ZN8touchgfx8Drawable5setXYEss>
 8009c5a:	9b04      	ldr	r3, [sp, #16]
 8009c5c:	9a00      	ldr	r2, [sp, #0]
 8009c5e:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 8009c62:	4b15      	ldr	r3, [pc, #84]	; (8009cb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009c64:	801a      	strh	r2, [r3, #0]
 8009c66:	4b15      	ldr	r3, [pc, #84]	; (8009cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009c68:	9a01      	ldr	r2, [sp, #4]
 8009c6a:	801a      	strh	r2, [r3, #0]
 8009c6c:	4b0f      	ldr	r3, [pc, #60]	; (8009cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009c6e:	9a02      	ldr	r2, [sp, #8]
 8009c70:	801a      	strh	r2, [r3, #0]
 8009c72:	4b0f      	ldr	r3, [pc, #60]	; (8009cb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009c74:	9a03      	ldr	r2, [sp, #12]
 8009c76:	801a      	strh	r2, [r3, #0]
 8009c78:	6823      	ldr	r3, [r4, #0]
 8009c7a:	4620      	mov	r0, r4
 8009c7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c7e:	4798      	blx	r3
 8009c80:	6823      	ldr	r3, [r4, #0]
 8009c82:	4620      	mov	r0, r4
 8009c84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c86:	4798      	blx	r3
 8009c88:	b00f      	add	sp, #60	; 0x3c
 8009c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c8e:	883b      	ldrh	r3, [r7, #0]
 8009c90:	f8ab 0000 	strh.w	r0, [fp]
 8009c94:	f8aa 3000 	strh.w	r3, [sl]
 8009c98:	e773      	b.n	8009b82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8009c9a:	462a      	mov	r2, r5
 8009c9c:	ab0a      	add	r3, sp, #40	; 0x28
 8009c9e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009ca2:	6851      	ldr	r1, [r2, #4]
 8009ca4:	c303      	stmia	r3!, {r0, r1}
 8009ca6:	e794      	b.n	8009bd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 8009ca8:	4630      	mov	r0, r6
 8009caa:	e7c0      	b.n	8009c2e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009cac:	2000a18c 	.word	0x2000a18c
 8009cb0:	2000a18e 	.word	0x2000a18e
 8009cb4:	2000a190 	.word	0x2000a190
 8009cb8:	2000a192 	.word	0x2000a192
 8009cbc:	2000a194 	.word	0x2000a194

08009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009cc0:	b510      	push	{r4, lr}
 8009cc2:	4b07      	ldr	r3, [pc, #28]	; (8009ce0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009cc4:	781b      	ldrb	r3, [r3, #0]
 8009cc6:	4604      	mov	r4, r0
 8009cc8:	b13b      	cbz	r3, 8009cda <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009cca:	6803      	ldr	r3, [r0, #0]
 8009ccc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009cce:	4798      	blx	r3
 8009cd0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009cd2:	4283      	cmp	r3, r0
 8009cd4:	d101      	bne.n	8009cda <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009cd6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009cd8:	bd10      	pop	{r4, pc}
 8009cda:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009cdc:	e7fc      	b.n	8009cd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009cde:	bf00      	nop
 8009ce0:	2000a196 	.word	0x2000a196

08009ce4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009ce4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ce8:	b088      	sub	sp, #32
 8009cea:	461c      	mov	r4, r3
 8009cec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009cf0:	2500      	movs	r5, #0
 8009cf2:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 8009cf6:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8009cfa:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8009cfe:	9503      	str	r5, [sp, #12]
 8009d00:	e9cd 3100 	strd	r3, r1, [sp]
 8009d04:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009d08:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009d0c:	4692      	mov	sl, r2
 8009d0e:	4606      	mov	r6, r0
 8009d10:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009d14:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009d18:	f88d 501c 	strb.w	r5, [sp, #28]
 8009d1c:	f7ff ffd0 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d20:	fb09 a404 	mla	r4, r9, r4, sl
 8009d24:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8009d28:	9404      	str	r4, [sp, #16]
 8009d2a:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009d2e:	f88d 501e 	strb.w	r5, [sp, #30]
 8009d32:	f88d 501d 	strb.w	r5, [sp, #29]
 8009d36:	f1b8 0f00 	cmp.w	r8, #0
 8009d3a:	d000      	beq.n	8009d3e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 8009d3c:	b937      	cbnz	r7, 8009d4c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 8009d3e:	4b0d      	ldr	r3, [pc, #52]	; (8009d74 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 8009d40:	4a0d      	ldr	r2, [pc, #52]	; (8009d78 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009d42:	f44f 7101 	mov.w	r1, #516	; 0x204
 8009d46:	480d      	ldr	r0, [pc, #52]	; (8009d7c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009d48:	f011 fc16 	bl	801b578 <__assert_func>
 8009d4c:	6833      	ldr	r3, [r6, #0]
 8009d4e:	9c00      	ldr	r4, [sp, #0]
 8009d50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009d52:	4630      	mov	r0, r6
 8009d54:	4798      	blx	r3
 8009d56:	4220      	tst	r0, r4
 8009d58:	d104      	bne.n	8009d64 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 8009d5a:	4b09      	ldr	r3, [pc, #36]	; (8009d80 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009d5c:	4a06      	ldr	r2, [pc, #24]	; (8009d78 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009d5e:	f240 2105 	movw	r1, #517	; 0x205
 8009d62:	e7f0      	b.n	8009d46 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009d64:	6870      	ldr	r0, [r6, #4]
 8009d66:	6803      	ldr	r3, [r0, #0]
 8009d68:	4669      	mov	r1, sp
 8009d6a:	685b      	ldr	r3, [r3, #4]
 8009d6c:	4798      	blx	r3
 8009d6e:	b008      	add	sp, #32
 8009d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009d74:	0801dc13 	.word	0x0801dc13
 8009d78:	0801de73 	.word	0x0801de73
 8009d7c:	0801ddc5 	.word	0x0801ddc5
 8009d80:	0801dc4b 	.word	0x0801dc4b

08009d84 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d88:	b089      	sub	sp, #36	; 0x24
 8009d8a:	2400      	movs	r4, #0
 8009d8c:	461d      	mov	r5, r3
 8009d8e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009d92:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 8009d96:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009d9a:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009d9e:	9403      	str	r4, [sp, #12]
 8009da0:	468a      	mov	sl, r1
 8009da2:	4693      	mov	fp, r2
 8009da4:	4606      	mov	r6, r0
 8009da6:	e9cd 3400 	strd	r3, r4, [sp]
 8009daa:	f7ff ff89 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009dae:	fb09 b505 	mla	r5, r9, r5, fp
 8009db2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009db6:	9504      	str	r5, [sp, #16]
 8009db8:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009dbc:	f8ad 7016 	strh.w	r7, [sp, #22]
 8009dc0:	f8ad 4018 	strh.w	r4, [sp, #24]
 8009dc4:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009dc8:	f8cd a00c 	str.w	sl, [sp, #12]
 8009dcc:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009dd0:	f88d 401e 	strb.w	r4, [sp, #30]
 8009dd4:	f1b8 0f00 	cmp.w	r8, #0
 8009dd8:	d000      	beq.n	8009ddc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 8009dda:	b937      	cbnz	r7, 8009dea <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 8009ddc:	4b0d      	ldr	r3, [pc, #52]	; (8009e14 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 8009dde:	4a0e      	ldr	r2, [pc, #56]	; (8009e18 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009de0:	f240 2119 	movw	r1, #537	; 0x219
 8009de4:	480d      	ldr	r0, [pc, #52]	; (8009e1c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009de6:	f011 fbc7 	bl	801b578 <__assert_func>
 8009dea:	6833      	ldr	r3, [r6, #0]
 8009dec:	9c00      	ldr	r4, [sp, #0]
 8009dee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009df0:	4630      	mov	r0, r6
 8009df2:	4798      	blx	r3
 8009df4:	4220      	tst	r0, r4
 8009df6:	d104      	bne.n	8009e02 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 8009df8:	4b09      	ldr	r3, [pc, #36]	; (8009e20 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009dfa:	4a07      	ldr	r2, [pc, #28]	; (8009e18 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009dfc:	f240 211a 	movw	r1, #538	; 0x21a
 8009e00:	e7f0      	b.n	8009de4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8009e02:	6870      	ldr	r0, [r6, #4]
 8009e04:	6803      	ldr	r3, [r0, #0]
 8009e06:	4669      	mov	r1, sp
 8009e08:	685b      	ldr	r3, [r3, #4]
 8009e0a:	4798      	blx	r3
 8009e0c:	b009      	add	sp, #36	; 0x24
 8009e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e12:	bf00      	nop
 8009e14:	0801dc90 	.word	0x0801dc90
 8009e18:	0801dee9 	.word	0x0801dee9
 8009e1c:	0801ddc5 	.word	0x0801ddc5
 8009e20:	0801dcc8 	.word	0x0801dcc8

08009e24 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009e24:	b510      	push	{r4, lr}
 8009e26:	4b0b      	ldr	r3, [pc, #44]	; (8009e54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009e28:	781b      	ldrb	r3, [r3, #0]
 8009e2a:	4604      	mov	r4, r0
 8009e2c:	b95b      	cbnz	r3, 8009e46 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009e2e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009e32:	2b02      	cmp	r3, #2
 8009e34:	d007      	beq.n	8009e46 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009e36:	6840      	ldr	r0, [r0, #4]
 8009e38:	f000 fb6c 	bl	800a514 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009e3c:	b118      	cbz	r0, 8009e46 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009e3e:	6862      	ldr	r2, [r4, #4]
 8009e40:	7a53      	ldrb	r3, [r2, #9]
 8009e42:	2b00      	cmp	r3, #0
 8009e44:	d0fc      	beq.n	8009e40 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009e46:	f7f6 ff2f 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009e4a:	4620      	mov	r0, r4
 8009e4c:	f7ff ff38 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e50:	bd10      	pop	{r4, pc}
 8009e52:	bf00      	nop
 8009e54:	2000a196 	.word	0x2000a196

08009e58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009e58:	b508      	push	{r3, lr}
 8009e5a:	290d      	cmp	r1, #13
 8009e5c:	d817      	bhi.n	8009e8e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009e5e:	e8df f001 	tbb	[pc, r1]
 8009e62:	090b      	.short	0x090b
 8009e64:	0d0d0d07 	.word	0x0d0d0d07
 8009e68:	1414140d 	.word	0x1414140d
 8009e6c:	0d0d1414 	.word	0x0d0d1414
 8009e70:	2020      	movs	r0, #32
 8009e72:	bd08      	pop	{r3, pc}
 8009e74:	2018      	movs	r0, #24
 8009e76:	e7fc      	b.n	8009e72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e78:	2010      	movs	r0, #16
 8009e7a:	e7fa      	b.n	8009e72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e7c:	4b05      	ldr	r3, [pc, #20]	; (8009e94 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009e7e:	4a06      	ldr	r2, [pc, #24]	; (8009e98 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009e80:	4806      	ldr	r0, [pc, #24]	; (8009e9c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009e82:	f240 2177 	movw	r1, #631	; 0x277
 8009e86:	f011 fb77 	bl	801b578 <__assert_func>
 8009e8a:	2008      	movs	r0, #8
 8009e8c:	e7f1      	b.n	8009e72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e8e:	2000      	movs	r0, #0
 8009e90:	e7ef      	b.n	8009e72 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e92:	bf00      	nop
 8009e94:	0801de41 	.word	0x0801de41
 8009e98:	0801e202 	.word	0x0801e202
 8009e9c:	0801ddc5 	.word	0x0801ddc5

08009ea0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009ea0:	b570      	push	{r4, r5, r6, lr}
 8009ea2:	460d      	mov	r5, r1
 8009ea4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009ea8:	4616      	mov	r6, r2
 8009eaa:	461c      	mov	r4, r3
 8009eac:	f7ff ffd4 	bl	8009e58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009eb0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009eb4:	10c0      	asrs	r0, r0, #3
 8009eb6:	fb06 5101 	mla	r1, r6, r1, r5
 8009eba:	fb00 4001 	mla	r0, r0, r1, r4
 8009ebe:	bd70      	pop	{r4, r5, r6, pc}

08009ec0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ec4:	b08a      	sub	sp, #40	; 0x28
 8009ec6:	f04f 0c00 	mov.w	ip, #0
 8009eca:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8009ece:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009ed2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8009ed6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009eda:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 8009ede:	f8cd c014 	str.w	ip, [sp, #20]
 8009ee2:	2d0b      	cmp	r5, #11
 8009ee4:	4604      	mov	r4, r0
 8009ee6:	469a      	mov	sl, r3
 8009ee8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009eec:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009ef0:	d129      	bne.n	8009f46 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 8009ef2:	2080      	movs	r0, #128	; 0x80
 8009ef4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009ef8:	9204      	str	r2, [sp, #16]
 8009efa:	4620      	mov	r0, r4
 8009efc:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009f00:	f8ad 2020 	strh.w	r2, [sp, #32]
 8009f04:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009f08:	f8ad 701c 	strh.w	r7, [sp, #28]
 8009f0c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009f10:	f7ff fed6 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f14:	e9cd 9800 	strd	r9, r8, [sp]
 8009f18:	4603      	mov	r3, r0
 8009f1a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009f1e:	4651      	mov	r1, sl
 8009f20:	4620      	mov	r0, r4
 8009f22:	f7ff ffbd 	bl	8009ea0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009f26:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 8009f2a:	9006      	str	r0, [sp, #24]
 8009f2c:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009f30:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 8009f34:	b107      	cbz	r7, 8009f38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 8009f36:	b9d6      	cbnz	r6, 8009f6e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 8009f38:	4b17      	ldr	r3, [pc, #92]	; (8009f98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009f3a:	4a18      	ldr	r2, [pc, #96]	; (8009f9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009f3c:	f240 11cf 	movw	r1, #463	; 0x1cf
 8009f40:	4817      	ldr	r0, [pc, #92]	; (8009fa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 8009f42:	f011 fb19 	bl	801b578 <__assert_func>
 8009f46:	2d02      	cmp	r5, #2
 8009f48:	d108      	bne.n	8009f5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 8009f4a:	2bff      	cmp	r3, #255	; 0xff
 8009f4c:	d104      	bne.n	8009f58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 8009f4e:	2800      	cmp	r0, #0
 8009f50:	bf14      	ite	ne
 8009f52:	2040      	movne	r0, #64	; 0x40
 8009f54:	2020      	moveq	r0, #32
 8009f56:	e7cd      	b.n	8009ef4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009f58:	2040      	movs	r0, #64	; 0x40
 8009f5a:	e7cb      	b.n	8009ef4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009f5c:	2bff      	cmp	r3, #255	; 0xff
 8009f5e:	d104      	bne.n	8009f6a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 8009f60:	2800      	cmp	r0, #0
 8009f62:	bf14      	ite	ne
 8009f64:	2004      	movne	r0, #4
 8009f66:	2001      	moveq	r0, #1
 8009f68:	e7c4      	b.n	8009ef4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009f6a:	2004      	movs	r0, #4
 8009f6c:	e7c2      	b.n	8009ef4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009f6e:	6823      	ldr	r3, [r4, #0]
 8009f70:	9d02      	ldr	r5, [sp, #8]
 8009f72:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f74:	4620      	mov	r0, r4
 8009f76:	4798      	blx	r3
 8009f78:	4228      	tst	r0, r5
 8009f7a:	d104      	bne.n	8009f86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 8009f7c:	4b09      	ldr	r3, [pc, #36]	; (8009fa4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 8009f7e:	4a07      	ldr	r2, [pc, #28]	; (8009f9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009f80:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8009f84:	e7dc      	b.n	8009f40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 8009f86:	6860      	ldr	r0, [r4, #4]
 8009f88:	6803      	ldr	r3, [r0, #0]
 8009f8a:	a902      	add	r1, sp, #8
 8009f8c:	685b      	ldr	r3, [r3, #4]
 8009f8e:	4798      	blx	r3
 8009f90:	b00a      	add	sp, #40	; 0x28
 8009f92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f96:	bf00      	nop
 8009f98:	0801dc13 	.word	0x0801dc13
 8009f9c:	0801e09c 	.word	0x0801e09c
 8009fa0:	0801ddc5 	.word	0x0801ddc5
 8009fa4:	0801dc4b 	.word	0x0801dc4b

08009fa8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 8009fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fac:	b08b      	sub	sp, #44	; 0x2c
 8009fae:	469b      	mov	fp, r3
 8009fb0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009fb4:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8009fb8:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8009fbc:	2fff      	cmp	r7, #255	; 0xff
 8009fbe:	bf14      	ite	ne
 8009fc0:	2308      	movne	r3, #8
 8009fc2:	2302      	moveq	r3, #2
 8009fc4:	2600      	movs	r6, #0
 8009fc6:	4604      	mov	r4, r0
 8009fc8:	4689      	mov	r9, r1
 8009fca:	4692      	mov	sl, r2
 8009fcc:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8009fd0:	9605      	str	r6, [sp, #20]
 8009fd2:	f7ff fe75 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fd6:	e9cd 8500 	strd	r8, r5, [sp]
 8009fda:	4603      	mov	r3, r0
 8009fdc:	465a      	mov	r2, fp
 8009fde:	4651      	mov	r1, sl
 8009fe0:	4620      	mov	r0, r4
 8009fe2:	f7ff ff5d 	bl	8009ea0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009fe6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009fea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009fee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009ff2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009ff6:	6823      	ldr	r3, [r4, #0]
 8009ff8:	9006      	str	r0, [sp, #24]
 8009ffa:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009ffe:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a002:	f8ad 6020 	strh.w	r6, [sp, #32]
 800a006:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800a00a:	f8cd 9014 	str.w	r9, [sp, #20]
 800a00e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a012:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a014:	9d02      	ldr	r5, [sp, #8]
 800a016:	4620      	mov	r0, r4
 800a018:	4798      	blx	r3
 800a01a:	4228      	tst	r0, r5
 800a01c:	d106      	bne.n	800a02c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800a01e:	4b07      	ldr	r3, [pc, #28]	; (800a03c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800a020:	4a07      	ldr	r2, [pc, #28]	; (800a040 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800a022:	4808      	ldr	r0, [pc, #32]	; (800a044 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800a024:	f240 212e 	movw	r1, #558	; 0x22e
 800a028:	f011 faa6 	bl	801b578 <__assert_func>
 800a02c:	6860      	ldr	r0, [r4, #4]
 800a02e:	6803      	ldr	r3, [r0, #0]
 800a030:	a902      	add	r1, sp, #8
 800a032:	685b      	ldr	r3, [r3, #4]
 800a034:	4798      	blx	r3
 800a036:	b00b      	add	sp, #44	; 0x2c
 800a038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a03c:	0801dc4b 	.word	0x0801dc4b
 800a040:	0801e16d 	.word	0x0801e16d
 800a044:	0801ddc5 	.word	0x0801ddc5

0800a048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a048:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a04c:	461f      	mov	r7, r3
 800a04e:	4b0b      	ldr	r3, [pc, #44]	; (800a07c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a050:	460d      	mov	r5, r1
 800a052:	f8b3 8000 	ldrh.w	r8, [r3]
 800a056:	4616      	mov	r6, r2
 800a058:	4604      	mov	r4, r0
 800a05a:	f7ff fc7d 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800a05e:	6803      	ldr	r3, [r0, #0]
 800a060:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a062:	4798      	blx	r3
 800a064:	463b      	mov	r3, r7
 800a066:	e9cd 8000 	strd	r8, r0, [sp]
 800a06a:	4632      	mov	r2, r6
 800a06c:	4629      	mov	r1, r5
 800a06e:	4620      	mov	r0, r4
 800a070:	f7ff ff16 	bl	8009ea0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a074:	b002      	add	sp, #8
 800a076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a07a:	bf00      	nop
 800a07c:	2000a192 	.word	0x2000a192

0800a080 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800a080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a084:	b088      	sub	sp, #32
 800a086:	4698      	mov	r8, r3
 800a088:	2300      	movs	r3, #0
 800a08a:	9303      	str	r3, [sp, #12]
 800a08c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a090:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a094:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a098:	f8ad 6014 	strh.w	r6, [sp, #20]
 800a09c:	e9cd 3100 	strd	r3, r1, [sp]
 800a0a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a0a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a0a8:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a0ac:	f88d 301c 	strb.w	r3, [sp, #28]
 800a0b0:	4617      	mov	r7, r2
 800a0b2:	4604      	mov	r4, r0
 800a0b4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800a0b8:	f7ff fe02 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a0bc:	4642      	mov	r2, r8
 800a0be:	4603      	mov	r3, r0
 800a0c0:	4639      	mov	r1, r7
 800a0c2:	4620      	mov	r0, r4
 800a0c4:	f7ff ffc0 	bl	800a048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a0c8:	4b16      	ldr	r3, [pc, #88]	; (800a124 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a0ca:	9004      	str	r0, [sp, #16]
 800a0cc:	881b      	ldrh	r3, [r3, #0]
 800a0ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a0d2:	f7ff fc41 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800a0d6:	6803      	ldr	r3, [r0, #0]
 800a0d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0da:	4798      	blx	r3
 800a0dc:	f88d 001e 	strb.w	r0, [sp, #30]
 800a0e0:	f88d 001d 	strb.w	r0, [sp, #29]
 800a0e4:	b106      	cbz	r6, 800a0e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a0e6:	b935      	cbnz	r5, 800a0f6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a0e8:	4b0f      	ldr	r3, [pc, #60]	; (800a128 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a0ea:	4a10      	ldr	r2, [pc, #64]	; (800a12c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a0ec:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 800a0f0:	480f      	ldr	r0, [pc, #60]	; (800a130 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a0f2:	f011 fa41 	bl	801b578 <__assert_func>
 800a0f6:	6823      	ldr	r3, [r4, #0]
 800a0f8:	9d00      	ldr	r5, [sp, #0]
 800a0fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a0fc:	4620      	mov	r0, r4
 800a0fe:	4798      	blx	r3
 800a100:	4228      	tst	r0, r5
 800a102:	d104      	bne.n	800a10e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a104:	4b0b      	ldr	r3, [pc, #44]	; (800a134 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a106:	4a09      	ldr	r2, [pc, #36]	; (800a12c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a108:	f240 11ed 	movw	r1, #493	; 0x1ed
 800a10c:	e7f0      	b.n	800a0f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a10e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a110:	6860      	ldr	r0, [r4, #4]
 800a112:	9303      	str	r3, [sp, #12]
 800a114:	6803      	ldr	r3, [r0, #0]
 800a116:	4669      	mov	r1, sp
 800a118:	685b      	ldr	r3, [r3, #4]
 800a11a:	4798      	blx	r3
 800a11c:	b008      	add	sp, #32
 800a11e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a122:	bf00      	nop
 800a124:	2000a192 	.word	0x2000a192
 800a128:	0801dc13 	.word	0x0801dc13
 800a12c:	0801df4e 	.word	0x0801df4e
 800a130:	0801ddc5 	.word	0x0801ddc5
 800a134:	0801dc4b 	.word	0x0801dc4b

0800a138 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a138:	b570      	push	{r4, r5, r6, lr}
 800a13a:	b08a      	sub	sp, #40	; 0x28
 800a13c:	466b      	mov	r3, sp
 800a13e:	e883 0006 	stmia.w	r3, {r1, r2}
 800a142:	4b20      	ldr	r3, [pc, #128]	; (800a1c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a144:	781b      	ldrb	r3, [r3, #0]
 800a146:	4604      	mov	r4, r0
 800a148:	b933      	cbnz	r3, 800a158 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a14a:	4b1f      	ldr	r3, [pc, #124]	; (800a1c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a14c:	4a1f      	ldr	r2, [pc, #124]	; (800a1cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a14e:	4820      	ldr	r0, [pc, #128]	; (800a1d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a150:	f240 213f 	movw	r1, #575	; 0x23f
 800a154:	f011 fa10 	bl	801b578 <__assert_func>
 800a158:	2300      	movs	r3, #0
 800a15a:	9305      	str	r3, [sp, #20]
 800a15c:	2301      	movs	r3, #1
 800a15e:	9302      	str	r3, [sp, #8]
 800a160:	6803      	ldr	r3, [r0, #0]
 800a162:	f8bd 5000 	ldrh.w	r5, [sp]
 800a166:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a168:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a16c:	4798      	blx	r3
 800a16e:	4632      	mov	r2, r6
 800a170:	4629      	mov	r1, r5
 800a172:	4603      	mov	r3, r0
 800a174:	4620      	mov	r0, r4
 800a176:	f7ff ff67 	bl	800a048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a17a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a17c:	9306      	str	r3, [sp, #24]
 800a17e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a182:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a186:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a18a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a18e:	4b11      	ldr	r3, [pc, #68]	; (800a1d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a190:	9003      	str	r0, [sp, #12]
 800a192:	881b      	ldrh	r3, [r3, #0]
 800a194:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a198:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a19c:	f7ff fbdc 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800a1a0:	6803      	ldr	r3, [r0, #0]
 800a1a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1a4:	4798      	blx	r3
 800a1a6:	23ff      	movs	r3, #255	; 0xff
 800a1a8:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a1ac:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a1b0:	6860      	ldr	r0, [r4, #4]
 800a1b2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a1b6:	6803      	ldr	r3, [r0, #0]
 800a1b8:	a902      	add	r1, sp, #8
 800a1ba:	685b      	ldr	r3, [r3, #4]
 800a1bc:	4798      	blx	r3
 800a1be:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a1c0:	b00a      	add	sp, #40	; 0x28
 800a1c2:	bd70      	pop	{r4, r5, r6, pc}
 800a1c4:	2000a197 	.word	0x2000a197
 800a1c8:	0801dd12 	.word	0x0801dd12
 800a1cc:	0801dff2 	.word	0x0801dff2
 800a1d0:	0801ddc5 	.word	0x0801ddc5
 800a1d4:	2000a192 	.word	0x2000a192

0800a1d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a1d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1da:	b08b      	sub	sp, #44	; 0x2c
 800a1dc:	466d      	mov	r5, sp
 800a1de:	e885 0006 	stmia.w	r5, {r1, r2}
 800a1e2:	461d      	mov	r5, r3
 800a1e4:	2300      	movs	r3, #0
 800a1e6:	9305      	str	r3, [sp, #20]
 800a1e8:	2301      	movs	r3, #1
 800a1ea:	9302      	str	r3, [sp, #8]
 800a1ec:	6803      	ldr	r3, [r0, #0]
 800a1ee:	f8bd 6000 	ldrh.w	r6, [sp]
 800a1f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1f4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a1f8:	4604      	mov	r4, r0
 800a1fa:	4798      	blx	r3
 800a1fc:	463a      	mov	r2, r7
 800a1fe:	4631      	mov	r1, r6
 800a200:	4603      	mov	r3, r0
 800a202:	4620      	mov	r0, r4
 800a204:	f7ff ff20 	bl	800a048 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a208:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a20c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a210:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a214:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a218:	4b0e      	ldr	r3, [pc, #56]	; (800a254 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a21a:	9003      	str	r0, [sp, #12]
 800a21c:	881b      	ldrh	r3, [r3, #0]
 800a21e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a222:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a224:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a228:	9506      	str	r5, [sp, #24]
 800a22a:	f7ff fb95 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800a22e:	6803      	ldr	r3, [r0, #0]
 800a230:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a232:	4798      	blx	r3
 800a234:	23ff      	movs	r3, #255	; 0xff
 800a236:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a23a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a23e:	6860      	ldr	r0, [r4, #4]
 800a240:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a244:	6803      	ldr	r3, [r0, #0]
 800a246:	a902      	add	r1, sp, #8
 800a248:	685b      	ldr	r3, [r3, #4]
 800a24a:	4798      	blx	r3
 800a24c:	4628      	mov	r0, r5
 800a24e:	b00b      	add	sp, #44	; 0x2c
 800a250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a252:	bf00      	nop
 800a254:	2000a192 	.word	0x2000a192

0800a258 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a258:	b570      	push	{r4, r5, r6, lr}
 800a25a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a25e:	4604      	mov	r4, r0
 800a260:	b19b      	cbz	r3, 800a28a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a262:	2002      	movs	r0, #2
 800a264:	f7f6 faae 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a268:	2300      	movs	r3, #0
 800a26a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a26e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a272:	6823      	ldr	r3, [r4, #0]
 800a274:	4620      	mov	r0, r4
 800a276:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 800a27a:	f7ff fd21 	bl	8009cc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a27e:	462b      	mov	r3, r5
 800a280:	4601      	mov	r1, r0
 800a282:	4620      	mov	r0, r4
 800a284:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a288:	4718      	bx	r3
 800a28a:	bd70      	pop	{r4, r5, r6, pc}

0800a28c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a28c:	b570      	push	{r4, r5, r6, lr}
 800a28e:	4605      	mov	r5, r0
 800a290:	460c      	mov	r4, r1
 800a292:	2003      	movs	r0, #3
 800a294:	b149      	cbz	r1, 800a2aa <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a296:	f7f6 fa5d 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a29a:	6928      	ldr	r0, [r5, #16]
 800a29c:	b168      	cbz	r0, 800a2ba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a29e:	6803      	ldr	r3, [r0, #0]
 800a2a0:	695b      	ldr	r3, [r3, #20]
 800a2a2:	2101      	movs	r1, #1
 800a2a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2a8:	4718      	bx	r3
 800a2aa:	f7f6 fa6f 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a2ae:	6928      	ldr	r0, [r5, #16]
 800a2b0:	b118      	cbz	r0, 800a2ba <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a2b2:	6803      	ldr	r3, [r0, #0]
 800a2b4:	4621      	mov	r1, r4
 800a2b6:	695b      	ldr	r3, [r3, #20]
 800a2b8:	e7f4      	b.n	800a2a4 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a2ba:	bd70      	pop	{r4, r5, r6, pc}

0800a2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a2bc:	4770      	bx	lr

0800a2be <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a2be:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a2c2:	1a13      	subs	r3, r2, r0
 800a2c4:	4258      	negs	r0, r3
 800a2c6:	4158      	adcs	r0, r3
 800a2c8:	4770      	bx	lr

0800a2ca <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a2ca:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a2ce:	1a9b      	subs	r3, r3, r2
 800a2d0:	2b00      	cmp	r3, #0
 800a2d2:	bfdc      	itt	le
 800a2d4:	6882      	ldrle	r2, [r0, #8]
 800a2d6:	189b      	addle	r3, r3, r2
 800a2d8:	2b01      	cmp	r3, #1
 800a2da:	bfcc      	ite	gt
 800a2dc:	2000      	movgt	r0, #0
 800a2de:	2001      	movle	r0, #1
 800a2e0:	4770      	bx	lr

0800a2e2 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a2e2:	6902      	ldr	r2, [r0, #16]
 800a2e4:	6840      	ldr	r0, [r0, #4]
 800a2e6:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a2ea:	4770      	bx	lr

0800a2ec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a2ec:	6803      	ldr	r3, [r0, #0]
 800a2ee:	691b      	ldr	r3, [r3, #16]
 800a2f0:	4718      	bx	r3

0800a2f2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a2f2:	4770      	bx	lr

0800a2f4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a2f4:	4770      	bx	lr

0800a2f6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a2f6:	4770      	bx	lr

0800a2f8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a2f8:	b570      	push	{r4, r5, r6, lr}
 800a2fa:	2301      	movs	r3, #1
 800a2fc:	7203      	strb	r3, [r0, #8]
 800a2fe:	4604      	mov	r4, r0
 800a300:	6840      	ldr	r0, [r0, #4]
 800a302:	6803      	ldr	r3, [r0, #0]
 800a304:	699b      	ldr	r3, [r3, #24]
 800a306:	4798      	blx	r3
 800a308:	6803      	ldr	r3, [r0, #0]
 800a30a:	2b40      	cmp	r3, #64	; 0x40
 800a30c:	4605      	mov	r5, r0
 800a30e:	d039      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a310:	d815      	bhi.n	800a33e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a312:	2b04      	cmp	r3, #4
 800a314:	d022      	beq.n	800a35c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a316:	d808      	bhi.n	800a32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a318:	2b01      	cmp	r3, #1
 800a31a:	d033      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a31c:	2b02      	cmp	r3, #2
 800a31e:	d108      	bne.n	800a332 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a320:	6823      	ldr	r3, [r4, #0]
 800a322:	4620      	mov	r0, r4
 800a324:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a326:	4798      	blx	r3
 800a328:	e025      	b.n	800a376 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a32a:	2b08      	cmp	r3, #8
 800a32c:	d01e      	beq.n	800a36c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a32e:	2b20      	cmp	r3, #32
 800a330:	d028      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a332:	4b17      	ldr	r3, [pc, #92]	; (800a390 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a334:	4a17      	ldr	r2, [pc, #92]	; (800a394 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a336:	4818      	ldr	r0, [pc, #96]	; (800a398 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a338:	218b      	movs	r1, #139	; 0x8b
 800a33a:	f011 f91d 	bl	801b578 <__assert_func>
 800a33e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a342:	d01f      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a344:	d804      	bhi.n	800a350 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a346:	2b80      	cmp	r3, #128	; 0x80
 800a348:	d01c      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a34a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a34e:	e7ef      	b.n	800a330 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a350:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a354:	d016      	beq.n	800a384 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a356:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a35a:	e7e0      	b.n	800a31e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a35c:	6823      	ldr	r3, [r4, #0]
 800a35e:	7f01      	ldrb	r1, [r0, #28]
 800a360:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a362:	4620      	mov	r0, r4
 800a364:	4798      	blx	r3
 800a366:	6823      	ldr	r3, [r4, #0]
 800a368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a36a:	e006      	b.n	800a37a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a36c:	6823      	ldr	r3, [r4, #0]
 800a36e:	7f01      	ldrb	r1, [r0, #28]
 800a370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a372:	4620      	mov	r0, r4
 800a374:	4798      	blx	r3
 800a376:	6823      	ldr	r3, [r4, #0]
 800a378:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a37a:	4629      	mov	r1, r5
 800a37c:	4620      	mov	r0, r4
 800a37e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a382:	4718      	bx	r3
 800a384:	6823      	ldr	r3, [r4, #0]
 800a386:	4620      	mov	r0, r4
 800a388:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a38a:	4798      	blx	r3
 800a38c:	e7eb      	b.n	800a366 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a38e:	bf00      	nop
 800a390:	0801e24b 	.word	0x0801e24b
 800a394:	0801e30c 	.word	0x0801e30c
 800a398:	0801e270 	.word	0x0801e270

0800a39c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a39c:	b570      	push	{r4, r5, r6, lr}
 800a39e:	4604      	mov	r4, r0
 800a3a0:	460e      	mov	r6, r1
 800a3a2:	6860      	ldr	r0, [r4, #4]
 800a3a4:	6803      	ldr	r3, [r0, #0]
 800a3a6:	685b      	ldr	r3, [r3, #4]
 800a3a8:	4798      	blx	r3
 800a3aa:	2800      	cmp	r0, #0
 800a3ac:	d1f9      	bne.n	800a3a2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a3ae:	4d0d      	ldr	r5, [pc, #52]	; (800a3e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a3b0:	6828      	ldr	r0, [r5, #0]
 800a3b2:	6803      	ldr	r3, [r0, #0]
 800a3b4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a3b6:	4798      	blx	r3
 800a3b8:	f7f6 fc84 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a3bc:	6828      	ldr	r0, [r5, #0]
 800a3be:	2101      	movs	r1, #1
 800a3c0:	f7ff ff7c 	bl	800a2bc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a3c4:	6860      	ldr	r0, [r4, #4]
 800a3c6:	6803      	ldr	r3, [r0, #0]
 800a3c8:	4631      	mov	r1, r6
 800a3ca:	689b      	ldr	r3, [r3, #8]
 800a3cc:	4798      	blx	r3
 800a3ce:	6823      	ldr	r3, [r4, #0]
 800a3d0:	4620      	mov	r0, r4
 800a3d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3d4:	4798      	blx	r3
 800a3d6:	6828      	ldr	r0, [r5, #0]
 800a3d8:	6803      	ldr	r3, [r0, #0]
 800a3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a3e0:	4718      	bx	r3
 800a3e2:	bf00      	nop
 800a3e4:	2000a198 	.word	0x2000a198

0800a3e8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a3e8:	b508      	push	{r3, lr}
 800a3ea:	f7f6 fc5d 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a3ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a3f2:	f7f6 bc61 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a3f6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a3f6:	b510      	push	{r4, lr}
 800a3f8:	2114      	movs	r1, #20
 800a3fa:	4604      	mov	r4, r0
 800a3fc:	f011 f88d 	bl	801b51a <_ZdlPvj>
 800a400:	4620      	mov	r0, r4
 800a402:	bd10      	pop	{r4, pc}

0800a404 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a404:	b510      	push	{r4, lr}
 800a406:	4604      	mov	r4, r0
 800a408:	6840      	ldr	r0, [r0, #4]
 800a40a:	6803      	ldr	r3, [r0, #0]
 800a40c:	681b      	ldr	r3, [r3, #0]
 800a40e:	4798      	blx	r3
 800a410:	b948      	cbnz	r0, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a412:	7a63      	ldrb	r3, [r4, #9]
 800a414:	b13b      	cbz	r3, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a416:	7a23      	ldrb	r3, [r4, #8]
 800a418:	b92b      	cbnz	r3, 800a426 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a41a:	6823      	ldr	r3, [r4, #0]
 800a41c:	4620      	mov	r0, r4
 800a41e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a420:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a424:	4718      	bx	r3
 800a426:	bd10      	pop	{r4, pc}

0800a428 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a428:	b510      	push	{r4, lr}
 800a42a:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a42e:	1b12      	subs	r2, r2, r4
 800a430:	2a00      	cmp	r2, #0
 800a432:	bfdc      	itt	le
 800a434:	6883      	ldrle	r3, [r0, #8]
 800a436:	18d2      	addle	r2, r2, r3
 800a438:	2a01      	cmp	r2, #1
 800a43a:	dd18      	ble.n	800a46e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a43c:	6843      	ldr	r3, [r0, #4]
 800a43e:	f101 021c 	add.w	r2, r1, #28
 800a442:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a446:	f851 4b04 	ldr.w	r4, [r1], #4
 800a44a:	f843 4b04 	str.w	r4, [r3], #4
 800a44e:	4291      	cmp	r1, r2
 800a450:	d1f9      	bne.n	800a446 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a452:	880a      	ldrh	r2, [r1, #0]
 800a454:	801a      	strh	r2, [r3, #0]
 800a456:	788a      	ldrb	r2, [r1, #2]
 800a458:	709a      	strb	r2, [r3, #2]
 800a45a:	68c3      	ldr	r3, [r0, #12]
 800a45c:	6882      	ldr	r2, [r0, #8]
 800a45e:	f3bf 8f5b 	dmb	ish
 800a462:	3301      	adds	r3, #1
 800a464:	429a      	cmp	r2, r3
 800a466:	bfd8      	it	le
 800a468:	1a9b      	suble	r3, r3, r2
 800a46a:	60c3      	str	r3, [r0, #12]
 800a46c:	bd10      	pop	{r4, pc}
 800a46e:	4b03      	ldr	r3, [pc, #12]	; (800a47c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a470:	4a03      	ldr	r2, [pc, #12]	; (800a480 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a472:	4804      	ldr	r0, [pc, #16]	; (800a484 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a474:	2139      	movs	r1, #57	; 0x39
 800a476:	f011 f87f 	bl	801b578 <__assert_func>
 800a47a:	bf00      	nop
 800a47c:	0801e296 	.word	0x0801e296
 800a480:	0801e33c 	.word	0x0801e33c
 800a484:	0801e270 	.word	0x0801e270

0800a488 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a488:	b510      	push	{r4, lr}
 800a48a:	6803      	ldr	r3, [r0, #0]
 800a48c:	681b      	ldr	r3, [r3, #0]
 800a48e:	4604      	mov	r4, r0
 800a490:	4798      	blx	r3
 800a492:	b128      	cbz	r0, 800a4a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a494:	4b07      	ldr	r3, [pc, #28]	; (800a4b4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a496:	4a08      	ldr	r2, [pc, #32]	; (800a4b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a498:	4808      	ldr	r0, [pc, #32]	; (800a4bc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a49a:	213f      	movs	r1, #63	; 0x3f
 800a49c:	f011 f86c 	bl	801b578 <__assert_func>
 800a4a0:	6923      	ldr	r3, [r4, #16]
 800a4a2:	68a2      	ldr	r2, [r4, #8]
 800a4a4:	f3bf 8f5b 	dmb	ish
 800a4a8:	3301      	adds	r3, #1
 800a4aa:	429a      	cmp	r2, r3
 800a4ac:	bfd8      	it	le
 800a4ae:	1a9b      	suble	r3, r3, r2
 800a4b0:	6123      	str	r3, [r4, #16]
 800a4b2:	bd10      	pop	{r4, pc}
 800a4b4:	0801e2b9 	.word	0x0801e2b9
 800a4b8:	0801e38a 	.word	0x0801e38a
 800a4bc:	0801e270 	.word	0x0801e270

0800a4c0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a4c0:	b570      	push	{r4, r5, r6, lr}
 800a4c2:	4604      	mov	r4, r0
 800a4c4:	6840      	ldr	r0, [r0, #4]
 800a4c6:	6803      	ldr	r3, [r0, #0]
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	4798      	blx	r3
 800a4cc:	4605      	mov	r5, r0
 800a4ce:	b930      	cbnz	r0, 800a4de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a4d0:	7a23      	ldrb	r3, [r4, #8]
 800a4d2:	b123      	cbz	r3, 800a4de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a4d4:	6860      	ldr	r0, [r4, #4]
 800a4d6:	6803      	ldr	r3, [r0, #0]
 800a4d8:	695b      	ldr	r3, [r3, #20]
 800a4da:	4798      	blx	r3
 800a4dc:	7225      	strb	r5, [r4, #8]
 800a4de:	6860      	ldr	r0, [r4, #4]
 800a4e0:	6803      	ldr	r3, [r0, #0]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	4798      	blx	r3
 800a4e6:	b928      	cbnz	r0, 800a4f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a4e8:	6823      	ldr	r3, [r4, #0]
 800a4ea:	4620      	mov	r0, r4
 800a4ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a4ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4f2:	4718      	bx	r3
 800a4f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4f8:	f7f6 bbec 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a4fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a4fc:	b510      	push	{r4, lr}
 800a4fe:	4c04      	ldr	r4, [pc, #16]	; (800a510 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a500:	6082      	str	r2, [r0, #8]
 800a502:	2200      	movs	r2, #0
 800a504:	e9c0 4100 	strd	r4, r1, [r0]
 800a508:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a50c:	bd10      	pop	{r4, pc}
 800a50e:	bf00      	nop
 800a510:	0801e2f0 	.word	0x0801e2f0

0800a514 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a514:	6840      	ldr	r0, [r0, #4]
 800a516:	6803      	ldr	r3, [r0, #0]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	4718      	bx	r3

0800a51c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a51c:	2200      	movs	r2, #0
 800a51e:	8002      	strh	r2, [r0, #0]
 800a520:	8042      	strh	r2, [r0, #2]
 800a522:	8082      	strh	r2, [r0, #4]
 800a524:	80c2      	strh	r2, [r0, #6]
 800a526:	4770      	bx	lr

0800a528 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a528:	b570      	push	{r4, r5, r6, lr}
 800a52a:	6803      	ldr	r3, [r0, #0]
 800a52c:	4604      	mov	r4, r0
 800a52e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a530:	4615      	mov	r5, r2
 800a532:	4798      	blx	r3
 800a534:	6823      	ldr	r3, [r4, #0]
 800a536:	4629      	mov	r1, r5
 800a538:	4620      	mov	r0, r4
 800a53a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a540:	4718      	bx	r3

0800a542 <_ZN8touchgfx8TextAreaD1Ev>:
 800a542:	4770      	bx	lr

0800a544 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a544:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a546:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a548:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a54c:	4299      	cmp	r1, r3
 800a54e:	d029      	beq.n	800a5a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a550:	4b15      	ldr	r3, [pc, #84]	; (800a5a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a552:	681b      	ldr	r3, [r3, #0]
 800a554:	b92b      	cbnz	r3, 800a562 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a556:	4b15      	ldr	r3, [pc, #84]	; (800a5ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a558:	4a15      	ldr	r2, [pc, #84]	; (800a5b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a55a:	21ae      	movs	r1, #174	; 0xae
 800a55c:	4815      	ldr	r0, [pc, #84]	; (800a5b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a55e:	f011 f80b 	bl	801b578 <__assert_func>
 800a562:	4a15      	ldr	r2, [pc, #84]	; (800a5b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a564:	8812      	ldrh	r2, [r2, #0]
 800a566:	428a      	cmp	r2, r1
 800a568:	d803      	bhi.n	800a572 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a56a:	4b14      	ldr	r3, [pc, #80]	; (800a5bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a56c:	4a10      	ldr	r2, [pc, #64]	; (800a5b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a56e:	21af      	movs	r1, #175	; 0xaf
 800a570:	e7f4      	b.n	800a55c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a572:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a576:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a57a:	4b11      	ldr	r3, [pc, #68]	; (800a5c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a57c:	7854      	ldrb	r4, [r2, #1]
 800a57e:	681b      	ldr	r3, [r3, #0]
 800a580:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a584:	682b      	ldr	r3, [r5, #0]
 800a586:	69de      	ldr	r6, [r3, #28]
 800a588:	4b0e      	ldr	r3, [pc, #56]	; (800a5c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a58a:	6818      	ldr	r0, [r3, #0]
 800a58c:	f7f8 f97e 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800a590:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a594:	2300      	movs	r3, #0
 800a596:	4602      	mov	r2, r0
 800a598:	9300      	str	r3, [sp, #0]
 800a59a:	4621      	mov	r1, r4
 800a59c:	4628      	mov	r0, r5
 800a59e:	47b0      	blx	r6
 800a5a0:	b002      	add	sp, #8
 800a5a2:	bd70      	pop	{r4, r5, r6, pc}
 800a5a4:	2000      	movs	r0, #0
 800a5a6:	e7fb      	b.n	800a5a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a5a8:	2000a1e8 	.word	0x2000a1e8
 800a5ac:	0801e3ba 	.word	0x0801e3ba
 800a5b0:	0801e4f0 	.word	0x0801e4f0
 800a5b4:	0801e3fc 	.word	0x0801e3fc
 800a5b8:	2000a1ec 	.word	0x2000a1ec
 800a5bc:	0801e425 	.word	0x0801e425
 800a5c0:	2000a1f0 	.word	0x2000a1f0
 800a5c4:	2000a1f4 	.word	0x2000a1f4

0800a5c8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a5c8:	b570      	push	{r4, r5, r6, lr}
 800a5ca:	6803      	ldr	r3, [r0, #0]
 800a5cc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a5ce:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a5d0:	4b11      	ldr	r3, [pc, #68]	; (800a618 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a5d2:	681b      	ldr	r3, [r3, #0]
 800a5d4:	4604      	mov	r4, r0
 800a5d6:	b28d      	uxth	r5, r1
 800a5d8:	b92b      	cbnz	r3, 800a5e6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a5da:	4b10      	ldr	r3, [pc, #64]	; (800a61c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a5dc:	4a10      	ldr	r2, [pc, #64]	; (800a620 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a5de:	21ae      	movs	r1, #174	; 0xae
 800a5e0:	4810      	ldr	r0, [pc, #64]	; (800a624 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a5e2:	f010 ffc9 	bl	801b578 <__assert_func>
 800a5e6:	4910      	ldr	r1, [pc, #64]	; (800a628 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a5e8:	8809      	ldrh	r1, [r1, #0]
 800a5ea:	4291      	cmp	r1, r2
 800a5ec:	d803      	bhi.n	800a5f6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a5ee:	4b0f      	ldr	r3, [pc, #60]	; (800a62c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a5f0:	4a0b      	ldr	r2, [pc, #44]	; (800a620 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a5f2:	21af      	movs	r1, #175	; 0xaf
 800a5f4:	e7f4      	b.n	800a5e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a5f6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a5fa:	4b0d      	ldr	r3, [pc, #52]	; (800a630 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a5fc:	681b      	ldr	r3, [r3, #0]
 800a5fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a602:	6803      	ldr	r3, [r0, #0]
 800a604:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a606:	4798      	blx	r3
 800a608:	1a29      	subs	r1, r5, r0
 800a60a:	4633      	mov	r3, r6
 800a60c:	4620      	mov	r0, r4
 800a60e:	b209      	sxth	r1, r1
 800a610:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a614:	4718      	bx	r3
 800a616:	bf00      	nop
 800a618:	2000a1e8 	.word	0x2000a1e8
 800a61c:	0801e3ba 	.word	0x0801e3ba
 800a620:	0801e4f0 	.word	0x0801e4f0
 800a624:	0801e3fc 	.word	0x0801e3fc
 800a628:	2000a1ec 	.word	0x2000a1ec
 800a62c:	0801e425 	.word	0x0801e425
 800a630:	2000a1f0 	.word	0x2000a1f0

0800a634 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a638:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a63a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a63e:	4293      	cmp	r3, r2
 800a640:	b08c      	sub	sp, #48	; 0x30
 800a642:	4604      	mov	r4, r0
 800a644:	4688      	mov	r8, r1
 800a646:	d05f      	beq.n	800a708 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a648:	4e31      	ldr	r6, [pc, #196]	; (800a710 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a64a:	6832      	ldr	r2, [r6, #0]
 800a64c:	b92a      	cbnz	r2, 800a65a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a64e:	4b31      	ldr	r3, [pc, #196]	; (800a714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a650:	4a31      	ldr	r2, [pc, #196]	; (800a718 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a652:	21ae      	movs	r1, #174	; 0xae
 800a654:	4831      	ldr	r0, [pc, #196]	; (800a71c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a656:	f010 ff8f 	bl	801b578 <__assert_func>
 800a65a:	4d31      	ldr	r5, [pc, #196]	; (800a720 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a65c:	8829      	ldrh	r1, [r5, #0]
 800a65e:	4299      	cmp	r1, r3
 800a660:	d803      	bhi.n	800a66a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a662:	4b30      	ldr	r3, [pc, #192]	; (800a724 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a664:	4a2c      	ldr	r2, [pc, #176]	; (800a718 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a666:	21af      	movs	r1, #175	; 0xaf
 800a668:	e7f4      	b.n	800a654 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a66a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a66e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a672:	4b2d      	ldr	r3, [pc, #180]	; (800a728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a67a:	2a00      	cmp	r2, #0
 800a67c:	d044      	beq.n	800a708 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a67e:	784b      	ldrb	r3, [r1, #1]
 800a680:	9207      	str	r2, [sp, #28]
 800a682:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800a686:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a68a:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a68e:	4b27      	ldr	r3, [pc, #156]	; (800a72c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a690:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800a694:	681b      	ldr	r3, [r3, #0]
 800a696:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800a69a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a69e:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800a6a2:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a6a6:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a6aa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a6ac:	f88d a020 	strb.w	sl, [sp, #32]
 800a6b0:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800a6b4:	9009      	str	r0, [sp, #36]	; 0x24
 800a6b6:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800a6ba:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800a6be:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a6c2:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a6c6:	b10a      	cbz	r2, 800a6cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a6c8:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a6ca:	b907      	cbnz	r7, 800a6ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a6cc:	689f      	ldr	r7, [r3, #8]
 800a6ce:	f10d 0914 	add.w	r9, sp, #20
 800a6d2:	4621      	mov	r1, r4
 800a6d4:	4648      	mov	r0, r9
 800a6d6:	f002 ffbe 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a6da:	6833      	ldr	r3, [r6, #0]
 800a6dc:	2b00      	cmp	r3, #0
 800a6de:	d0b6      	beq.n	800a64e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a6e0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a6e2:	882b      	ldrh	r3, [r5, #0]
 800a6e4:	428b      	cmp	r3, r1
 800a6e6:	d9bc      	bls.n	800a662 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a6e8:	4b11      	ldr	r3, [pc, #68]	; (800a730 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a6ea:	6818      	ldr	r0, [r3, #0]
 800a6ec:	f7f8 f8ce 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800a6f0:	2300      	movs	r3, #0
 800a6f2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a6f6:	ab07      	add	r3, sp, #28
 800a6f8:	9001      	str	r0, [sp, #4]
 800a6fa:	9300      	str	r3, [sp, #0]
 800a6fc:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a700:	4643      	mov	r3, r8
 800a702:	4638      	mov	r0, r7
 800a704:	f7f8 f874 	bl	80027f0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a708:	b00c      	add	sp, #48	; 0x30
 800a70a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a70e:	bf00      	nop
 800a710:	2000a1e8 	.word	0x2000a1e8
 800a714:	0801e3ba 	.word	0x0801e3ba
 800a718:	0801e4f0 	.word	0x0801e4f0
 800a71c:	0801e3fc 	.word	0x0801e3fc
 800a720:	2000a1ec 	.word	0x2000a1ec
 800a724:	0801e425 	.word	0x0801e425
 800a728:	2000a1f0 	.word	0x2000a1f0
 800a72c:	2000a198 	.word	0x2000a198
 800a730:	2000a1f4 	.word	0x2000a1f4

0800a734 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a734:	b40e      	push	{r1, r2, r3}
 800a736:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a73a:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a73c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a740:	4293      	cmp	r3, r2
 800a742:	b09a      	sub	sp, #104	; 0x68
 800a744:	4605      	mov	r5, r0
 800a746:	d067      	beq.n	800a818 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800a748:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800a82c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800a74c:	aa24      	add	r2, sp, #144	; 0x90
 800a74e:	9202      	str	r2, [sp, #8]
 800a750:	f8da 2000 	ldr.w	r2, [sl]
 800a754:	b92a      	cbnz	r2, 800a762 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a756:	4b31      	ldr	r3, [pc, #196]	; (800a81c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a758:	4a31      	ldr	r2, [pc, #196]	; (800a820 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a75a:	21ae      	movs	r1, #174	; 0xae
 800a75c:	4831      	ldr	r0, [pc, #196]	; (800a824 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a75e:	f010 ff0b 	bl	801b578 <__assert_func>
 800a762:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800a830 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800a766:	f8b8 1000 	ldrh.w	r1, [r8]
 800a76a:	4299      	cmp	r1, r3
 800a76c:	d803      	bhi.n	800a776 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a76e:	4b2e      	ldr	r3, [pc, #184]	; (800a828 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a770:	4a2b      	ldr	r2, [pc, #172]	; (800a820 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a772:	21af      	movs	r1, #175	; 0xaf
 800a774:	e7f2      	b.n	800a75c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a776:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800a834 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a77a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a77e:	f8d9 3000 	ldr.w	r3, [r9]
 800a782:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800a786:	6823      	ldr	r3, [r4, #0]
 800a788:	4620      	mov	r0, r4
 800a78a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a78c:	4798      	blx	r3
 800a78e:	4607      	mov	r7, r0
 800a790:	b206      	sxth	r6, r0
 800a792:	a803      	add	r0, sp, #12
 800a794:	f003 fc2c 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800a798:	6823      	ldr	r3, [r4, #0]
 800a79a:	4620      	mov	r0, r4
 800a79c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a79e:	4798      	blx	r3
 800a7a0:	6823      	ldr	r3, [r4, #0]
 800a7a2:	4683      	mov	fp, r0
 800a7a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a7a6:	4620      	mov	r0, r4
 800a7a8:	4798      	blx	r3
 800a7aa:	465b      	mov	r3, fp
 800a7ac:	9000      	str	r0, [sp, #0]
 800a7ae:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a7b0:	9a02      	ldr	r2, [sp, #8]
 800a7b2:	a803      	add	r0, sp, #12
 800a7b4:	f003 fc69 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a7b8:	f8da 3000 	ldr.w	r3, [sl]
 800a7bc:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d0c8      	beq.n	800a756 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a7c4:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 800a7c6:	f8b8 0000 	ldrh.w	r0, [r8]
 800a7ca:	4290      	cmp	r0, r2
 800a7cc:	d9cf      	bls.n	800a76e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a7ce:	eb03 0442 	add.w	r4, r3, r2, lsl #1
 800a7d2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a7d6:	7862      	ldrb	r2, [r4, #1]
 800a7d8:	f8d9 3000 	ldr.w	r3, [r9]
 800a7dc:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800a7e0:	9400      	str	r4, [sp, #0]
 800a7e2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a7e6:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a7ea:	a803      	add	r0, sp, #12
 800a7ec:	f001 fa24 	bl	800bc38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a7f0:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800a7f4:	18b1      	adds	r1, r6, r2
 800a7f6:	2900      	cmp	r1, #0
 800a7f8:	b203      	sxth	r3, r0
 800a7fa:	dd0b      	ble.n	800a814 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800a7fc:	3b01      	subs	r3, #1
 800a7fe:	fb13 f302 	smulbb	r3, r3, r2
 800a802:	fb17 3300 	smlabb	r3, r7, r0, r3
 800a806:	b21e      	sxth	r6, r3
 800a808:	4630      	mov	r0, r6
 800a80a:	b01a      	add	sp, #104	; 0x68
 800a80c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a810:	b003      	add	sp, #12
 800a812:	4770      	bx	lr
 800a814:	2b00      	cmp	r3, #0
 800a816:	dcf7      	bgt.n	800a808 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a818:	2600      	movs	r6, #0
 800a81a:	e7f5      	b.n	800a808 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a81c:	0801e3ba 	.word	0x0801e3ba
 800a820:	0801e4f0 	.word	0x0801e4f0
 800a824:	0801e3fc 	.word	0x0801e3fc
 800a828:	0801e425 	.word	0x0801e425
 800a82c:	2000a1e8 	.word	0x2000a1e8
 800a830:	2000a1ec 	.word	0x2000a1ec
 800a834:	2000a1f0 	.word	0x2000a1f0

0800a838 <_ZN8touchgfx8TextAreaD0Ev>:
 800a838:	b510      	push	{r4, lr}
 800a83a:	213c      	movs	r1, #60	; 0x3c
 800a83c:	4604      	mov	r4, r0
 800a83e:	f010 fe6c 	bl	801b51a <_ZdlPvj>
 800a842:	4620      	mov	r0, r4
 800a844:	bd10      	pop	{r4, pc}
	...

0800a848 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a848:	b570      	push	{r4, r5, r6, lr}
 800a84a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a84c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a850:	4299      	cmp	r1, r3
 800a852:	4604      	mov	r4, r0
 800a854:	d01e      	beq.n	800a894 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a856:	6803      	ldr	r3, [r0, #0]
 800a858:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800a85a:	4b0f      	ldr	r3, [pc, #60]	; (800a898 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a85c:	681b      	ldr	r3, [r3, #0]
 800a85e:	b92b      	cbnz	r3, 800a86c <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a860:	4b0e      	ldr	r3, [pc, #56]	; (800a89c <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a862:	4a0f      	ldr	r2, [pc, #60]	; (800a8a0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a864:	21ae      	movs	r1, #174	; 0xae
 800a866:	480f      	ldr	r0, [pc, #60]	; (800a8a4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a868:	f010 fe86 	bl	801b578 <__assert_func>
 800a86c:	4b0e      	ldr	r3, [pc, #56]	; (800a8a8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a86e:	881b      	ldrh	r3, [r3, #0]
 800a870:	428b      	cmp	r3, r1
 800a872:	d803      	bhi.n	800a87c <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a874:	4b0d      	ldr	r3, [pc, #52]	; (800a8ac <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a876:	4a0a      	ldr	r2, [pc, #40]	; (800a8a0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a878:	21af      	movs	r1, #175	; 0xaf
 800a87a:	e7f4      	b.n	800a866 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a87c:	4b0c      	ldr	r3, [pc, #48]	; (800a8b0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a87e:	6818      	ldr	r0, [r3, #0]
 800a880:	f7f8 f804 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800a884:	2300      	movs	r3, #0
 800a886:	4601      	mov	r1, r0
 800a888:	46ac      	mov	ip, r5
 800a88a:	4620      	mov	r0, r4
 800a88c:	461a      	mov	r2, r3
 800a88e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a892:	4760      	bx	ip
 800a894:	2000      	movs	r0, #0
 800a896:	bd70      	pop	{r4, r5, r6, pc}
 800a898:	2000a1e8 	.word	0x2000a1e8
 800a89c:	0801e3ba 	.word	0x0801e3ba
 800a8a0:	0801e4f0 	.word	0x0801e4f0
 800a8a4:	0801e3fc 	.word	0x0801e3fc
 800a8a8:	2000a1ec 	.word	0x2000a1ec
 800a8ac:	0801e425 	.word	0x0801e425
 800a8b0:	2000a1f4 	.word	0x2000a1f4

0800a8b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a8b4:	b538      	push	{r3, r4, r5, lr}
 800a8b6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a8b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a8bc:	429a      	cmp	r2, r3
 800a8be:	4604      	mov	r4, r0
 800a8c0:	d014      	beq.n	800a8ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800a8c2:	6803      	ldr	r3, [r0, #0]
 800a8c4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a8c6:	4798      	blx	r3
 800a8c8:	6823      	ldr	r3, [r4, #0]
 800a8ca:	4605      	mov	r5, r0
 800a8cc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a8ce:	4620      	mov	r0, r4
 800a8d0:	4798      	blx	r3
 800a8d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a8d6:	b22d      	sxth	r5, r5
 800a8d8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a8dc:	4601      	mov	r1, r0
 800a8de:	bf06      	itte	eq
 800a8e0:	4602      	moveq	r2, r0
 800a8e2:	4629      	moveq	r1, r5
 800a8e4:	462a      	movne	r2, r5
 800a8e6:	4620      	mov	r0, r4
 800a8e8:	f7f7 fd95 	bl	8002416 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a8ec:	bd38      	pop	{r3, r4, r5, pc}

0800a8ee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800a8ee:	888a      	ldrh	r2, [r1, #4]
 800a8f0:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a8f2:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a8f6:	b922      	cbnz	r2, 800a902 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800a8f8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a8fc:	b90b      	cbnz	r3, 800a902 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800a8fe:	f7ff bfd9 	b.w	800a8b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a902:	4770      	bx	lr

0800a904 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a904:	2300      	movs	r3, #0
 800a906:	8083      	strh	r3, [r0, #4]
 800a908:	80c3      	strh	r3, [r0, #6]
 800a90a:	8003      	strh	r3, [r0, #0]
 800a90c:	8043      	strh	r3, [r0, #2]
 800a90e:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a912:	2bff      	cmp	r3, #255	; 0xff
 800a914:	bf01      	itttt	eq
 800a916:	890b      	ldrheq	r3, [r1, #8]
 800a918:	8083      	strheq	r3, [r0, #4]
 800a91a:	894b      	ldrheq	r3, [r1, #10]
 800a91c:	80c3      	strheq	r3, [r0, #6]
 800a91e:	4770      	bx	lr

0800a920 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a920:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a922:	4604      	mov	r4, r0
 800a924:	6808      	ldr	r0, [r1, #0]
 800a926:	6849      	ldr	r1, [r1, #4]
 800a928:	466b      	mov	r3, sp
 800a92a:	c303      	stmia	r3!, {r0, r1}
 800a92c:	6823      	ldr	r3, [r4, #0]
 800a92e:	4669      	mov	r1, sp
 800a930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a932:	4620      	mov	r0, r4
 800a934:	4798      	blx	r3
 800a936:	4b08      	ldr	r3, [pc, #32]	; (800a958 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a938:	681b      	ldr	r3, [r3, #0]
 800a93a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a93e:	b10a      	cbz	r2, 800a944 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a940:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a942:	b900      	cbnz	r0, 800a946 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a944:	6898      	ldr	r0, [r3, #8]
 800a946:	6803      	ldr	r3, [r0, #0]
 800a948:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a94a:	699d      	ldr	r5, [r3, #24]
 800a94c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a950:	4669      	mov	r1, sp
 800a952:	47a8      	blx	r5
 800a954:	b003      	add	sp, #12
 800a956:	bd30      	pop	{r4, r5, pc}
 800a958:	2000a198 	.word	0x2000a198

0800a95c <_ZN8touchgfx3BoxD1Ev>:
 800a95c:	4770      	bx	lr

0800a95e <_ZN8touchgfx3BoxD0Ev>:
 800a95e:	b510      	push	{r4, lr}
 800a960:	212c      	movs	r1, #44	; 0x2c
 800a962:	4604      	mov	r4, r0
 800a964:	f010 fdd9 	bl	801b51a <_ZdlPvj>
 800a968:	4620      	mov	r0, r4
 800a96a:	bd10      	pop	{r4, pc}

0800a96c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800a96c:	4770      	bx	lr
	...

0800a970 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800a970:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a972:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a974:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a978:	4299      	cmp	r1, r3
 800a97a:	4606      	mov	r6, r0
 800a97c:	d02a      	beq.n	800a9d4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800a97e:	4b16      	ldr	r3, [pc, #88]	; (800a9d8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800a980:	681b      	ldr	r3, [r3, #0]
 800a982:	b92b      	cbnz	r3, 800a990 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800a984:	4b15      	ldr	r3, [pc, #84]	; (800a9dc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800a986:	4a16      	ldr	r2, [pc, #88]	; (800a9e0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a988:	21ae      	movs	r1, #174	; 0xae
 800a98a:	4816      	ldr	r0, [pc, #88]	; (800a9e4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800a98c:	f010 fdf4 	bl	801b578 <__assert_func>
 800a990:	4a15      	ldr	r2, [pc, #84]	; (800a9e8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800a992:	8812      	ldrh	r2, [r2, #0]
 800a994:	428a      	cmp	r2, r1
 800a996:	d803      	bhi.n	800a9a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800a998:	4b14      	ldr	r3, [pc, #80]	; (800a9ec <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800a99a:	4a11      	ldr	r2, [pc, #68]	; (800a9e0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a99c:	21af      	movs	r1, #175	; 0xaf
 800a99e:	e7f4      	b.n	800a98a <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800a9a0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a9a4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a9a8:	4b11      	ldr	r3, [pc, #68]	; (800a9f0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800a9aa:	7854      	ldrb	r4, [r2, #1]
 800a9ac:	681b      	ldr	r3, [r3, #0]
 800a9ae:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a9b2:	682b      	ldr	r3, [r5, #0]
 800a9b4:	69df      	ldr	r7, [r3, #28]
 800a9b6:	4b0f      	ldr	r3, [pc, #60]	; (800a9f4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800a9b8:	6818      	ldr	r0, [r3, #0]
 800a9ba:	f7f7 ff67 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800a9be:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a9c2:	2300      	movs	r3, #0
 800a9c4:	9300      	str	r3, [sp, #0]
 800a9c6:	4602      	mov	r2, r0
 800a9c8:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800a9ca:	4621      	mov	r1, r4
 800a9cc:	4628      	mov	r0, r5
 800a9ce:	47b8      	blx	r7
 800a9d0:	b003      	add	sp, #12
 800a9d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9d4:	2000      	movs	r0, #0
 800a9d6:	e7fb      	b.n	800a9d0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800a9d8:	2000a1e8 	.word	0x2000a1e8
 800a9dc:	0801e3ba 	.word	0x0801e3ba
 800a9e0:	0801e5fc 	.word	0x0801e5fc
 800a9e4:	0801e3fc 	.word	0x0801e3fc
 800a9e8:	2000a1ec 	.word	0x2000a1ec
 800a9ec:	0801e425 	.word	0x0801e425
 800a9f0:	2000a1f0 	.word	0x2000a1f0
 800a9f4:	2000a1f4 	.word	0x2000a1f4

0800a9f8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800a9f8:	b570      	push	{r4, r5, r6, lr}
 800a9fa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a9fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa00:	4299      	cmp	r1, r3
 800aa02:	4604      	mov	r4, r0
 800aa04:	d01e      	beq.n	800aa44 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800aa06:	6803      	ldr	r3, [r0, #0]
 800aa08:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800aa0a:	4b0f      	ldr	r3, [pc, #60]	; (800aa48 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800aa0c:	681b      	ldr	r3, [r3, #0]
 800aa0e:	b92b      	cbnz	r3, 800aa1c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800aa10:	4b0e      	ldr	r3, [pc, #56]	; (800aa4c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800aa12:	4a0f      	ldr	r2, [pc, #60]	; (800aa50 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800aa14:	21ae      	movs	r1, #174	; 0xae
 800aa16:	480f      	ldr	r0, [pc, #60]	; (800aa54 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800aa18:	f010 fdae 	bl	801b578 <__assert_func>
 800aa1c:	4b0e      	ldr	r3, [pc, #56]	; (800aa58 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800aa1e:	881b      	ldrh	r3, [r3, #0]
 800aa20:	428b      	cmp	r3, r1
 800aa22:	d803      	bhi.n	800aa2c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800aa24:	4b0d      	ldr	r3, [pc, #52]	; (800aa5c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800aa26:	4a0a      	ldr	r2, [pc, #40]	; (800aa50 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800aa28:	21af      	movs	r1, #175	; 0xaf
 800aa2a:	e7f4      	b.n	800aa16 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800aa2c:	4b0c      	ldr	r3, [pc, #48]	; (800aa60 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800aa2e:	6818      	ldr	r0, [r3, #0]
 800aa30:	f7f7 ff2c 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800aa34:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800aa36:	4601      	mov	r1, r0
 800aa38:	46ac      	mov	ip, r5
 800aa3a:	4620      	mov	r0, r4
 800aa3c:	2300      	movs	r3, #0
 800aa3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa42:	4760      	bx	ip
 800aa44:	2000      	movs	r0, #0
 800aa46:	bd70      	pop	{r4, r5, r6, pc}
 800aa48:	2000a1e8 	.word	0x2000a1e8
 800aa4c:	0801e3ba 	.word	0x0801e3ba
 800aa50:	0801e5fc 	.word	0x0801e5fc
 800aa54:	0801e3fc 	.word	0x0801e3fc
 800aa58:	2000a1ec 	.word	0x2000a1ec
 800aa5c:	0801e425 	.word	0x0801e425
 800aa60:	2000a1f4 	.word	0x2000a1f4

0800aa64 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800aa64:	b510      	push	{r4, lr}
 800aa66:	2140      	movs	r1, #64	; 0x40
 800aa68:	4604      	mov	r4, r0
 800aa6a:	f010 fd56 	bl	801b51a <_ZdlPvj>
 800aa6e:	4620      	mov	r0, r4
 800aa70:	bd10      	pop	{r4, pc}
	...

0800aa74 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800aa74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa78:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800aa7a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800aa7e:	4293      	cmp	r3, r2
 800aa80:	b08c      	sub	sp, #48	; 0x30
 800aa82:	4604      	mov	r4, r0
 800aa84:	460e      	mov	r6, r1
 800aa86:	d05d      	beq.n	800ab44 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800aa88:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800ab68 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800aa8c:	f8d8 2000 	ldr.w	r2, [r8]
 800aa90:	b92a      	cbnz	r2, 800aa9e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800aa92:	4b2e      	ldr	r3, [pc, #184]	; (800ab4c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800aa94:	4a2e      	ldr	r2, [pc, #184]	; (800ab50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800aa96:	21ae      	movs	r1, #174	; 0xae
 800aa98:	482e      	ldr	r0, [pc, #184]	; (800ab54 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800aa9a:	f010 fd6d 	bl	801b578 <__assert_func>
 800aa9e:	4f2e      	ldr	r7, [pc, #184]	; (800ab58 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800aaa0:	8839      	ldrh	r1, [r7, #0]
 800aaa2:	4299      	cmp	r1, r3
 800aaa4:	d803      	bhi.n	800aaae <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800aaa6:	4b2d      	ldr	r3, [pc, #180]	; (800ab5c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800aaa8:	4a29      	ldr	r2, [pc, #164]	; (800ab50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800aaaa:	21af      	movs	r1, #175	; 0xaf
 800aaac:	e7f4      	b.n	800aa98 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800aaae:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800aab2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800aab6:	4b2a      	ldr	r3, [pc, #168]	; (800ab60 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800aabe:	2a00      	cmp	r2, #0
 800aac0:	d040      	beq.n	800ab44 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800aac2:	784b      	ldrb	r3, [r1, #1]
 800aac4:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800aac8:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800aacc:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800aad0:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800aad4:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800aad8:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800aada:	9207      	str	r2, [sp, #28]
 800aadc:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800aae0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800aae4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800aae8:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800aaec:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800aaf0:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800aaf4:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800aaf8:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800aafc:	f88d a020 	strb.w	sl, [sp, #32]
 800ab00:	9009      	str	r0, [sp, #36]	; 0x24
 800ab02:	f7fe ff29 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800ab06:	ad05      	add	r5, sp, #20
 800ab08:	4681      	mov	r9, r0
 800ab0a:	4621      	mov	r1, r4
 800ab0c:	4628      	mov	r0, r5
 800ab0e:	f002 fda2 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab12:	f8d8 3000 	ldr.w	r3, [r8]
 800ab16:	2b00      	cmp	r3, #0
 800ab18:	d0bb      	beq.n	800aa92 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800ab1a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ab1c:	883b      	ldrh	r3, [r7, #0]
 800ab1e:	428b      	cmp	r3, r1
 800ab20:	d9c1      	bls.n	800aaa6 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800ab22:	4b10      	ldr	r3, [pc, #64]	; (800ab64 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800ab24:	6818      	ldr	r0, [r3, #0]
 800ab26:	f7f7 feb1 	bl	800288c <_ZNK8touchgfx5Texts7getTextEt>
 800ab2a:	2300      	movs	r3, #0
 800ab2c:	9303      	str	r3, [sp, #12]
 800ab2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ab30:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800ab34:	ab07      	add	r3, sp, #28
 800ab36:	9300      	str	r3, [sp, #0]
 800ab38:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ab3c:	4633      	mov	r3, r6
 800ab3e:	4648      	mov	r0, r9
 800ab40:	f7f7 fe56 	bl	80027f0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ab44:	b00c      	add	sp, #48	; 0x30
 800ab46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab4a:	bf00      	nop
 800ab4c:	0801e3ba 	.word	0x0801e3ba
 800ab50:	0801e5fc 	.word	0x0801e5fc
 800ab54:	0801e3fc 	.word	0x0801e3fc
 800ab58:	2000a1ec 	.word	0x2000a1ec
 800ab5c:	0801e425 	.word	0x0801e425
 800ab60:	2000a1f0 	.word	0x2000a1f0
 800ab64:	2000a1f4 	.word	0x2000a1f4
 800ab68:	2000a1e8 	.word	0x2000a1e8

0800ab6c <_ZN8touchgfx5ImageD1Ev>:
 800ab6c:	4770      	bx	lr

0800ab6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800ab6e:	b570      	push	{r4, r5, r6, lr}
 800ab70:	880b      	ldrh	r3, [r1, #0]
 800ab72:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ab74:	4604      	mov	r4, r0
 800ab76:	4608      	mov	r0, r1
 800ab78:	460d      	mov	r5, r1
 800ab7a:	f004 fe2f 	bl	800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab7e:	4606      	mov	r6, r0
 800ab80:	4628      	mov	r0, r5
 800ab82:	f004 fe65 	bl	800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab86:	6823      	ldr	r3, [r4, #0]
 800ab88:	4605      	mov	r5, r0
 800ab8a:	b231      	sxth	r1, r6
 800ab8c:	4620      	mov	r0, r4
 800ab8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ab90:	4798      	blx	r3
 800ab92:	6823      	ldr	r3, [r4, #0]
 800ab94:	b229      	sxth	r1, r5
 800ab96:	4620      	mov	r0, r4
 800ab98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab9e:	4718      	bx	r3

0800aba0 <_ZN8touchgfx5ImageD0Ev>:
 800aba0:	b510      	push	{r4, lr}
 800aba2:	212c      	movs	r1, #44	; 0x2c
 800aba4:	4604      	mov	r4, r0
 800aba6:	f010 fcb8 	bl	801b51a <_ZdlPvj>
 800abaa:	4620      	mov	r0, r4
 800abac:	bd10      	pop	{r4, pc}

0800abae <_ZNK8touchgfx5Image12getSolidRectEv>:
 800abae:	b510      	push	{r4, lr}
 800abb0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800abb4:	2bff      	cmp	r3, #255	; 0xff
 800abb6:	4604      	mov	r4, r0
 800abb8:	d006      	beq.n	800abc8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800abba:	2300      	movs	r3, #0
 800abbc:	8003      	strh	r3, [r0, #0]
 800abbe:	8043      	strh	r3, [r0, #2]
 800abc0:	8083      	strh	r3, [r0, #4]
 800abc2:	80c3      	strh	r3, [r0, #6]
 800abc4:	4620      	mov	r0, r4
 800abc6:	bd10      	pop	{r4, pc}
 800abc8:	3126      	adds	r1, #38	; 0x26
 800abca:	f004 fe7b 	bl	800f8c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800abce:	e7f9      	b.n	800abc4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800abd0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800abd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abd4:	4604      	mov	r4, r0
 800abd6:	b088      	sub	sp, #32
 800abd8:	f854 3b26 	ldr.w	r3, [r4], #38
 800abdc:	2500      	movs	r5, #0
 800abde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800abe0:	460f      	mov	r7, r1
 800abe2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800abe6:	a904      	add	r1, sp, #16
 800abe8:	4606      	mov	r6, r0
 800abea:	4798      	blx	r3
 800abec:	4620      	mov	r0, r4
 800abee:	f004 fdf5 	bl	800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abf2:	4680      	mov	r8, r0
 800abf4:	4620      	mov	r0, r4
 800abf6:	f004 fe2b 	bl	800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800abfa:	9506      	str	r5, [sp, #24]
 800abfc:	ad06      	add	r5, sp, #24
 800abfe:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ac02:	4639      	mov	r1, r7
 800ac04:	4628      	mov	r0, r5
 800ac06:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ac0a:	f7fe fbcd 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800ac0e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ac12:	2b00      	cmp	r3, #0
 800ac14:	dd19      	ble.n	800ac4a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ac16:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ac1a:	2b00      	cmp	r3, #0
 800ac1c:	dd15      	ble.n	800ac4a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ac1e:	4b0c      	ldr	r3, [pc, #48]	; (800ac50 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ac20:	681b      	ldr	r3, [r3, #0]
 800ac22:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ac26:	b10a      	cbz	r2, 800ac2c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ac28:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ac2a:	b900      	cbnz	r0, 800ac2e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ac2c:	6898      	ldr	r0, [r3, #8]
 800ac2e:	6801      	ldr	r1, [r0, #0]
 800ac30:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ac34:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ac38:	2701      	movs	r7, #1
 800ac3a:	9702      	str	r7, [sp, #8]
 800ac3c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800ac40:	e9cd 5600 	strd	r5, r6, [sp]
 800ac44:	688d      	ldr	r5, [r1, #8]
 800ac46:	4621      	mov	r1, r4
 800ac48:	47a8      	blx	r5
 800ac4a:	b008      	add	sp, #32
 800ac4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac50:	2000a198 	.word	0x2000a198

0800ac54 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ac54:	4b01      	ldr	r3, [pc, #4]	; (800ac5c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ac56:	6019      	str	r1, [r3, #0]
 800ac58:	4770      	bx	lr
 800ac5a:	bf00      	nop
 800ac5c:	2000a1a0 	.word	0x2000a1a0

0800ac60 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ac60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac64:	4696      	mov	lr, r2
 800ac66:	4605      	mov	r5, r0
 800ac68:	4614      	mov	r4, r2
 800ac6a:	460e      	mov	r6, r1
 800ac6c:	461f      	mov	r7, r3
 800ac6e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ac72:	b097      	sub	sp, #92	; 0x5c
 800ac74:	f10d 0c1c 	add.w	ip, sp, #28
 800ac78:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ac7c:	f8de 3000 	ldr.w	r3, [lr]
 800ac80:	f8cc 3000 	str.w	r3, [ip]
 800ac84:	f104 0e14 	add.w	lr, r4, #20
 800ac88:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ac8c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ac90:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ac94:	f8de 3000 	ldr.w	r3, [lr]
 800ac98:	f8cc 3000 	str.w	r3, [ip]
 800ac9c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800aca0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800aca4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800aca8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800acac:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800acb0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800acb4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800acb8:	f8de 3000 	ldr.w	r3, [lr]
 800acbc:	f8cc 3000 	str.w	r3, [ip]
 800acc0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800acc2:	682b      	ldr	r3, [r5, #0]
 800acc4:	9201      	str	r2, [sp, #4]
 800acc6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800acca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800accc:	9200      	str	r2, [sp, #0]
 800acce:	f8cd 8008 	str.w	r8, [sp, #8]
 800acd2:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800acd6:	aa07      	add	r2, sp, #28
 800acd8:	463b      	mov	r3, r7
 800acda:	4631      	mov	r1, r6
 800acdc:	4628      	mov	r0, r5
 800acde:	47d8      	blx	fp
 800ace0:	46a6      	mov	lr, r4
 800ace2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ace6:	f10d 0c1c 	add.w	ip, sp, #28
 800acea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800acee:	f8de 3000 	ldr.w	r3, [lr]
 800acf2:	f8cc 3000 	str.w	r3, [ip]
 800acf6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800acfa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800acfe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ad02:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ad06:	343c      	adds	r4, #60	; 0x3c
 800ad08:	f8de 3000 	ldr.w	r3, [lr]
 800ad0c:	f8cc 3000 	str.w	r3, [ip]
 800ad10:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ad12:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ad16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ad1a:	6823      	ldr	r3, [r4, #0]
 800ad1c:	f8cc 3000 	str.w	r3, [ip]
 800ad20:	682b      	ldr	r3, [r5, #0]
 800ad22:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ad26:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ad28:	9201      	str	r2, [sp, #4]
 800ad2a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ad2c:	9200      	str	r2, [sp, #0]
 800ad2e:	f8cd 8008 	str.w	r8, [sp, #8]
 800ad32:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800ad34:	aa07      	add	r2, sp, #28
 800ad36:	463b      	mov	r3, r7
 800ad38:	4631      	mov	r1, r6
 800ad3a:	4628      	mov	r0, r5
 800ad3c:	47a0      	blx	r4
 800ad3e:	b017      	add	sp, #92	; 0x5c
 800ad40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ad44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ad44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad48:	b08d      	sub	sp, #52	; 0x34
 800ad4a:	4688      	mov	r8, r1
 800ad4c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ad4e:	f8d3 c000 	ldr.w	ip, [r3]
 800ad52:	680f      	ldr	r7, [r1, #0]
 800ad54:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800ad58:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800ad5c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800ad60:	edd3 6a07 	vldr	s13, [r3, #28]
 800ad64:	9918      	ldr	r1, [sp, #96]	; 0x60
 800ad66:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800ad6a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ad6e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800ad72:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800ad76:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800ad7a:	eba7 070c 	sub.w	r7, r7, ip
 800ad7e:	42bc      	cmp	r4, r7
 800ad80:	bfa8      	it	ge
 800ad82:	463c      	movge	r4, r7
 800ad84:	ee07 4a90 	vmov	s15, r4
 800ad88:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ad8c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800ad90:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ad94:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ad98:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ad9c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ada0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ada4:	eb09 0e0c 	add.w	lr, r9, ip
 800ada8:	4571      	cmp	r1, lr
 800adaa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800adae:	ee32 1a05 	vadd.f32	s2, s4, s10
 800adb2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800adb6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800adba:	ee22 2a07 	vmul.f32	s4, s4, s14
 800adbe:	f340 808d 	ble.w	800aedc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800adc2:	eba1 060e 	sub.w	r6, r1, lr
 800adc6:	fb96 f5f4 	sdiv	r5, r6, r4
 800adca:	ee07 5a10 	vmov	s14, r5
 800adce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800add2:	2d00      	cmp	r5, #0
 800add4:	fb04 6615 	mls	r6, r4, r5, r6
 800add8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800addc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ade0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ade4:	dd13      	ble.n	800ae0e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800ade6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800adea:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800adee:	eef5 6a40 	vcmp.f32	s13, #0.0
 800adf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adf6:	bf18      	it	ne
 800adf8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800adfc:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ae00:	bf08      	it	eq
 800ae02:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ae06:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ae0a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ae0e:	fb05 f204 	mul.w	r2, r5, r4
 800ae12:	1abf      	subs	r7, r7, r2
 800ae14:	4494      	add	ip, r2
 800ae16:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ae1a:	4411      	add	r1, r2
 800ae1c:	eb09 020c 	add.w	r2, r9, ip
 800ae20:	443a      	add	r2, r7
 800ae22:	b209      	sxth	r1, r1
 800ae24:	428a      	cmp	r2, r1
 800ae26:	bfc4      	itt	gt
 800ae28:	eba1 0209 	subgt.w	r2, r1, r9
 800ae2c:	eba2 070c 	subgt.w	r7, r2, ip
 800ae30:	2f00      	cmp	r7, #0
 800ae32:	dd50      	ble.n	800aed6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800ae34:	fb97 f1f4 	sdiv	r1, r7, r4
 800ae38:	fb04 7211 	mls	r2, r4, r1, r7
 800ae3c:	b90a      	cbnz	r2, 800ae42 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800ae3e:	3901      	subs	r1, #1
 800ae40:	4622      	mov	r2, r4
 800ae42:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ae46:	6840      	ldr	r0, [r0, #4]
 800ae48:	900b      	str	r0, [sp, #44]	; 0x2c
 800ae4a:	f8d0 a000 	ldr.w	sl, [r0]
 800ae4e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ae50:	9008      	str	r0, [sp, #32]
 800ae52:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800ae56:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ae58:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800ae5c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800ae60:	695b      	ldr	r3, [r3, #20]
 800ae62:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ae64:	445b      	add	r3, fp
 800ae66:	eef0 6a42 	vmov.f32	s13, s4
 800ae6a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ae6e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ae72:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ae76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ae7a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ae7e:	9307      	str	r3, [sp, #28]
 800ae80:	ee17 7a90 	vmov	r7, s15
 800ae84:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ae88:	eeb0 7a61 	vmov.f32	s14, s3
 800ae8c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ae90:	ee16 3a90 	vmov	r3, s13
 800ae94:	fb97 f7f4 	sdiv	r7, r7, r4
 800ae98:	ee17 ca90 	vmov	ip, s15
 800ae9c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800aea0:	fb9c fcf4 	sdiv	ip, ip, r4
 800aea4:	fb0c 3306 	mla	r3, ip, r6, r3
 800aea8:	9302      	str	r3, [sp, #8]
 800aeaa:	ee17 3a10 	vmov	r3, s14
 800aeae:	44b6      	add	lr, r6
 800aeb0:	fb04 e505 	mla	r5, r4, r5, lr
 800aeb4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800aeb8:	fb07 3706 	mla	r7, r7, r6, r3
 800aebc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800aec0:	e9cd 4700 	strd	r4, r7, [sp]
 800aec4:	2900      	cmp	r1, #0
 800aec6:	bfcc      	ite	gt
 800aec8:	46a1      	movgt	r9, r4
 800aeca:	4691      	movle	r9, r2
 800aecc:	eba9 0306 	sub.w	r3, r9, r6
 800aed0:	f8da 4008 	ldr.w	r4, [sl, #8]
 800aed4:	47a0      	blx	r4
 800aed6:	b00d      	add	sp, #52	; 0x34
 800aed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aedc:	2500      	movs	r5, #0
 800aede:	462e      	mov	r6, r5
 800aee0:	e799      	b.n	800ae16 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800aee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800aee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aee8:	b0db      	sub	sp, #364	; 0x16c
 800aeea:	461d      	mov	r5, r3
 800aeec:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800aef0:	930a      	str	r3, [sp, #40]	; 0x28
 800aef2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800aef6:	930b      	str	r3, [sp, #44]	; 0x2c
 800aef8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800aefc:	9310      	str	r3, [sp, #64]	; 0x40
 800aefe:	6803      	ldr	r3, [r0, #0]
 800af00:	910f      	str	r1, [sp, #60]	; 0x3c
 800af02:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800af04:	9009      	str	r0, [sp, #36]	; 0x24
 800af06:	4614      	mov	r4, r2
 800af08:	4629      	mov	r1, r5
 800af0a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800af0e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800af12:	47b8      	blx	r7
 800af14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800af16:	6058      	str	r0, [r3, #4]
 800af18:	2800      	cmp	r0, #0
 800af1a:	f000 83a1 	beq.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af1e:	682b      	ldr	r3, [r5, #0]
 800af20:	9314      	str	r3, [sp, #80]	; 0x50
 800af22:	686b      	ldr	r3, [r5, #4]
 800af24:	9315      	str	r3, [sp, #84]	; 0x54
 800af26:	4bc4      	ldr	r3, [pc, #784]	; (800b238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800af28:	ed94 7a02 	vldr	s14, [r4, #8]
 800af2c:	7819      	ldrb	r1, [r3, #0]
 800af2e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800af32:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800af36:	2900      	cmp	r1, #0
 800af38:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800af3c:	bf16      	itet	ne
 800af3e:	4619      	movne	r1, r3
 800af40:	4611      	moveq	r1, r2
 800af42:	4613      	movne	r3, r2
 800af44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af48:	9116      	str	r1, [sp, #88]	; 0x58
 800af4a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800af4e:	f240 8387 	bls.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af52:	ed94 7a07 	vldr	s14, [r4, #28]
 800af56:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800af5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af5e:	f240 837f 	bls.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af62:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800af66:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800af6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af6e:	f240 8377 	bls.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af72:	6822      	ldr	r2, [r4, #0]
 800af74:	4bb1      	ldr	r3, [pc, #708]	; (800b23c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800af76:	429a      	cmp	r2, r3
 800af78:	f2c0 8372 	blt.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af7c:	49b0      	ldr	r1, [pc, #704]	; (800b240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800af7e:	6963      	ldr	r3, [r4, #20]
 800af80:	428a      	cmp	r2, r1
 800af82:	f300 836d 	bgt.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af86:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800af8a:	48ae      	ldr	r0, [pc, #696]	; (800b244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800af8c:	33ff      	adds	r3, #255	; 0xff
 800af8e:	4283      	cmp	r3, r0
 800af90:	f200 8366 	bhi.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800af94:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800af96:	4dac      	ldr	r5, [pc, #688]	; (800b248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800af98:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800af9c:	33ff      	adds	r3, #255	; 0xff
 800af9e:	42ab      	cmp	r3, r5
 800afa0:	f200 835e 	bhi.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800afa4:	6862      	ldr	r2, [r4, #4]
 800afa6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800afaa:	33ff      	adds	r3, #255	; 0xff
 800afac:	4283      	cmp	r3, r0
 800afae:	f200 8357 	bhi.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800afb2:	69a1      	ldr	r1, [r4, #24]
 800afb4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800afb8:	33ff      	adds	r3, #255	; 0xff
 800afba:	4283      	cmp	r3, r0
 800afbc:	f200 8350 	bhi.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800afc0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800afc2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800afc6:	30ff      	adds	r0, #255	; 0xff
 800afc8:	42a8      	cmp	r0, r5
 800afca:	f200 8349 	bhi.w	800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800afce:	428a      	cmp	r2, r1
 800afd0:	f280 8110 	bge.w	800b1f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800afd4:	429a      	cmp	r2, r3
 800afd6:	f300 8119 	bgt.w	800b20c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800afda:	4299      	cmp	r1, r3
 800afdc:	f280 811d 	bge.w	800b21a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800afe0:	2502      	movs	r5, #2
 800afe2:	2701      	movs	r7, #1
 800afe4:	46a9      	mov	r9, r5
 800afe6:	46b8      	mov	r8, r7
 800afe8:	f04f 0a00 	mov.w	sl, #0
 800afec:	4621      	mov	r1, r4
 800afee:	a849      	add	r0, sp, #292	; 0x124
 800aff0:	f003 fdc0 	bl	800eb74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800aff4:	4622      	mov	r2, r4
 800aff6:	4653      	mov	r3, sl
 800aff8:	a949      	add	r1, sp, #292	; 0x124
 800affa:	f8cd 9000 	str.w	r9, [sp]
 800affe:	a819      	add	r0, sp, #100	; 0x64
 800b000:	f003 fee8 	bl	800edd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b004:	4622      	mov	r2, r4
 800b006:	4653      	mov	r3, sl
 800b008:	a949      	add	r1, sp, #292	; 0x124
 800b00a:	f8cd 8000 	str.w	r8, [sp]
 800b00e:	a829      	add	r0, sp, #164	; 0xa4
 800b010:	f003 fee0 	bl	800edd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b014:	4643      	mov	r3, r8
 800b016:	4622      	mov	r2, r4
 800b018:	a949      	add	r1, sp, #292	; 0x124
 800b01a:	f8cd 9000 	str.w	r9, [sp]
 800b01e:	a839      	add	r0, sp, #228	; 0xe4
 800b020:	f003 fed8 	bl	800edd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b024:	42af      	cmp	r7, r5
 800b026:	bfb5      	itete	lt
 800b028:	2300      	movlt	r3, #0
 800b02a:	2301      	movge	r3, #1
 800b02c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b02e:	930e      	strge	r3, [sp, #56]	; 0x38
 800b030:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b032:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b036:	af12      	add	r7, sp, #72	; 0x48
 800b038:	bfb9      	ittee	lt
 800b03a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b03c:	ac19      	addlt	r4, sp, #100	; 0x64
 800b03e:	ad19      	addge	r5, sp, #100	; 0x64
 800b040:	ac29      	addge	r4, sp, #164	; 0xa4
 800b042:	e887 0003 	stmia.w	r7, {r0, r1}
 800b046:	b928      	cbnz	r0, 800b054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b048:	4b80      	ldr	r3, [pc, #512]	; (800b24c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b04a:	6818      	ldr	r0, [r3, #0]
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b050:	4798      	blx	r3
 800b052:	6038      	str	r0, [r7, #0]
 800b054:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b056:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b05a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b05e:	930c      	str	r3, [sp, #48]	; 0x30
 800b060:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b062:	6963      	ldr	r3, [r4, #20]
 800b064:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b066:	440b      	add	r3, r1
 800b068:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b06c:	4408      	add	r0, r1
 800b06e:	b200      	sxth	r0, r0
 800b070:	4283      	cmp	r3, r0
 800b072:	900d      	str	r0, [sp, #52]	; 0x34
 800b074:	f280 80dd 	bge.w	800b232 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b078:	428b      	cmp	r3, r1
 800b07a:	da08      	bge.n	800b08e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b07c:	2a00      	cmp	r2, #0
 800b07e:	dd06      	ble.n	800b08e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b080:	1acb      	subs	r3, r1, r3
 800b082:	429a      	cmp	r2, r3
 800b084:	f2c0 80e4 	blt.w	800b250 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b088:	2b00      	cmp	r3, #0
 800b08a:	f300 80e2 	bgt.w	800b252 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b08e:	6967      	ldr	r7, [r4, #20]
 800b090:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b092:	443b      	add	r3, r7
 800b094:	461f      	mov	r7, r3
 800b096:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b098:	1bdf      	subs	r7, r3, r7
 800b09a:	4297      	cmp	r7, r2
 800b09c:	bfa8      	it	ge
 800b09e:	4617      	movge	r7, r2
 800b0a0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b0a4:	2f00      	cmp	r7, #0
 800b0a6:	f340 8166 	ble.w	800b376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b0aa:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b0ac:	6829      	ldr	r1, [r5, #0]
 800b0ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b0b2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b0b6:	6820      	ldr	r0, [r4, #0]
 800b0b8:	4411      	add	r1, r2
 800b0ba:	4299      	cmp	r1, r3
 800b0bc:	dd1a      	ble.n	800b0f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b0be:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b0c2:	440b      	add	r3, r1
 800b0c4:	4402      	add	r2, r0
 800b0c6:	b21b      	sxth	r3, r3
 800b0c8:	429a      	cmp	r2, r3
 800b0ca:	dc13      	bgt.n	800b0f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b0cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b0ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b0d0:	681b      	ldr	r3, [r3, #0]
 800b0d2:	9206      	str	r2, [sp, #24]
 800b0d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b0d6:	9205      	str	r2, [sp, #20]
 800b0d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b0da:	9500      	str	r5, [sp, #0]
 800b0dc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b0e0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b0e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b0e4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b0e8:	a912      	add	r1, sp, #72	; 0x48
 800b0ea:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800b0ee:	aa49      	add	r2, sp, #292	; 0x124
 800b0f0:	4623      	mov	r3, r4
 800b0f2:	47c8      	blx	r9
 800b0f4:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b0f8:	441a      	add	r2, r3
 800b0fa:	6963      	ldr	r3, [r4, #20]
 800b0fc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b100:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b104:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b108:	68a1      	ldr	r1, [r4, #8]
 800b10a:	ed94 6a08 	vldr	s12, [r4, #32]
 800b10e:	6022      	str	r2, [r4, #0]
 800b110:	3301      	adds	r3, #1
 800b112:	6163      	str	r3, [r4, #20]
 800b114:	69a3      	ldr	r3, [r4, #24]
 800b116:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b11a:	3b01      	subs	r3, #1
 800b11c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b120:	61a3      	str	r3, [r4, #24]
 800b122:	6923      	ldr	r3, [r4, #16]
 800b124:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b128:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b12c:	edd4 6a07 	vldr	s13, [r4, #28]
 800b130:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b134:	440b      	add	r3, r1
 800b136:	68e1      	ldr	r1, [r4, #12]
 800b138:	6123      	str	r3, [r4, #16]
 800b13a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b13e:	428b      	cmp	r3, r1
 800b140:	edc4 6a07 	vstr	s13, [r4, #28]
 800b144:	db15      	blt.n	800b172 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b146:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b14a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b14e:	3201      	adds	r2, #1
 800b150:	edc4 6a07 	vstr	s13, [r4, #28]
 800b154:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b158:	6022      	str	r2, [r4, #0]
 800b15a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b15e:	1a5b      	subs	r3, r3, r1
 800b160:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b164:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b168:	6123      	str	r3, [r4, #16]
 800b16a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b16e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b172:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b176:	441a      	add	r2, r3
 800b178:	696b      	ldr	r3, [r5, #20]
 800b17a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b17e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b182:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b186:	68a9      	ldr	r1, [r5, #8]
 800b188:	ed95 6a08 	vldr	s12, [r5, #32]
 800b18c:	602a      	str	r2, [r5, #0]
 800b18e:	3301      	adds	r3, #1
 800b190:	616b      	str	r3, [r5, #20]
 800b192:	69ab      	ldr	r3, [r5, #24]
 800b194:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b198:	3b01      	subs	r3, #1
 800b19a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b19e:	61ab      	str	r3, [r5, #24]
 800b1a0:	692b      	ldr	r3, [r5, #16]
 800b1a2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b1a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b1aa:	edd5 6a07 	vldr	s13, [r5, #28]
 800b1ae:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b1b2:	440b      	add	r3, r1
 800b1b4:	68e9      	ldr	r1, [r5, #12]
 800b1b6:	612b      	str	r3, [r5, #16]
 800b1b8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b1bc:	428b      	cmp	r3, r1
 800b1be:	edc5 6a07 	vstr	s13, [r5, #28]
 800b1c2:	db15      	blt.n	800b1f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b1c4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b1c8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b1cc:	3201      	adds	r2, #1
 800b1ce:	edc5 6a07 	vstr	s13, [r5, #28]
 800b1d2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b1d6:	602a      	str	r2, [r5, #0]
 800b1d8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b1dc:	1a5b      	subs	r3, r3, r1
 800b1de:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b1e2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b1e6:	612b      	str	r3, [r5, #16]
 800b1e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b1ec:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b1f0:	3f01      	subs	r7, #1
 800b1f2:	e757      	b.n	800b0a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b1f4:	4299      	cmp	r1, r3
 800b1f6:	dc13      	bgt.n	800b220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b1f8:	429a      	cmp	r2, r3
 800b1fa:	da14      	bge.n	800b226 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b1fc:	2502      	movs	r5, #2
 800b1fe:	2703      	movs	r7, #3
 800b200:	46a9      	mov	r9, r5
 800b202:	f04f 0800 	mov.w	r8, #0
 800b206:	f04f 0a01 	mov.w	sl, #1
 800b20a:	e6ef      	b.n	800afec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b20c:	2501      	movs	r5, #1
 800b20e:	2700      	movs	r7, #0
 800b210:	46a9      	mov	r9, r5
 800b212:	46b8      	mov	r8, r7
 800b214:	f04f 0a02 	mov.w	sl, #2
 800b218:	e6e8      	b.n	800afec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b21a:	2501      	movs	r5, #1
 800b21c:	2702      	movs	r7, #2
 800b21e:	e6e1      	b.n	800afe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b220:	2500      	movs	r5, #0
 800b222:	2701      	movs	r7, #1
 800b224:	e7f4      	b.n	800b210 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b226:	2702      	movs	r7, #2
 800b228:	2503      	movs	r5, #3
 800b22a:	f04f 0900 	mov.w	r9, #0
 800b22e:	46b8      	mov	r8, r7
 800b230:	e7e9      	b.n	800b206 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b232:	4613      	mov	r3, r2
 800b234:	e728      	b.n	800b088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b236:	bf00      	nop
 800b238:	2000a190 	.word	0x2000a190
 800b23c:	fffd8f01 	.word	0xfffd8f01
 800b240:	00027100 	.word	0x00027100
 800b244:	0004e1ff 	.word	0x0004e1ff
 800b248:	0004e1fe 	.word	0x0004e1fe
 800b24c:	2000a198 	.word	0x2000a198
 800b250:	4613      	mov	r3, r2
 800b252:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b254:	9111      	str	r1, [sp, #68]	; 0x44
 800b256:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b25a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b25e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b260:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b264:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b268:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b26c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b270:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b274:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b278:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b27c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b280:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b284:	469e      	mov	lr, r3
 800b286:	469c      	mov	ip, r3
 800b288:	f04f 0900 	mov.w	r9, #0
 800b28c:	f1bc 0f00 	cmp.w	ip, #0
 800b290:	d147      	bne.n	800b322 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b292:	eb03 0c07 	add.w	ip, r3, r7
 800b296:	1ad7      	subs	r7, r2, r3
 800b298:	f1b9 0f00 	cmp.w	r9, #0
 800b29c:	d009      	beq.n	800b2b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b29e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b2a2:	9029      	str	r0, [sp, #164]	; 0xa4
 800b2a4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b2a8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b2ac:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b2b0:	912d      	str	r1, [sp, #180]	; 0xb4
 800b2b2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b2b4:	9111      	str	r1, [sp, #68]	; 0x44
 800b2b6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b2ba:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b2be:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b2c2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b2c6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b2ca:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b2ce:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b2d2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b2d6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b2da:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b2de:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b2e2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b2e6:	f04f 0800 	mov.w	r8, #0
 800b2ea:	f1be 0f00 	cmp.w	lr, #0
 800b2ee:	d031      	beq.n	800b354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b2f0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b2f2:	4431      	add	r1, r6
 800b2f4:	4549      	cmp	r1, r9
 800b2f6:	4450      	add	r0, sl
 800b2f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b2fc:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b300:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b304:	db08      	blt.n	800b318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b306:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b30a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b30e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b312:	3001      	adds	r0, #1
 800b314:	eba1 0109 	sub.w	r1, r1, r9
 800b318:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b31c:	f04f 0801 	mov.w	r8, #1
 800b320:	e7e3      	b.n	800b2ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b322:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b324:	4431      	add	r1, r6
 800b326:	4541      	cmp	r1, r8
 800b328:	4450      	add	r0, sl
 800b32a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b32e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b332:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b336:	db08      	blt.n	800b34a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b338:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b33c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b340:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b344:	3001      	adds	r0, #1
 800b346:	eba1 0108 	sub.w	r1, r1, r8
 800b34a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b34e:	f04f 0901 	mov.w	r9, #1
 800b352:	e79b      	b.n	800b28c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b354:	449c      	add	ip, r3
 800b356:	1aff      	subs	r7, r7, r3
 800b358:	f1b8 0f00 	cmp.w	r8, #0
 800b35c:	d009      	beq.n	800b372 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b35e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b362:	9019      	str	r0, [sp, #100]	; 0x64
 800b364:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b368:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b36c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b370:	911d      	str	r1, [sp, #116]	; 0x74
 800b372:	1ad2      	subs	r2, r2, r3
 800b374:	e68b      	b.n	800b08e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b378:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b37a:	2b00      	cmp	r3, #0
 800b37c:	f000 80d1 	beq.w	800b522 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b380:	ad19      	add	r5, sp, #100	; 0x64
 800b382:	ac39      	add	r4, sp, #228	; 0xe4
 800b384:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b386:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b38a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b38e:	930c      	str	r3, [sp, #48]	; 0x30
 800b390:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b392:	6963      	ldr	r3, [r4, #20]
 800b394:	440b      	add	r3, r1
 800b396:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b39a:	4408      	add	r0, r1
 800b39c:	b200      	sxth	r0, r0
 800b39e:	4283      	cmp	r3, r0
 800b3a0:	900d      	str	r0, [sp, #52]	; 0x34
 800b3a2:	f280 80c1 	bge.w	800b528 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b3a6:	428b      	cmp	r3, r1
 800b3a8:	da08      	bge.n	800b3bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b3aa:	2a00      	cmp	r2, #0
 800b3ac:	dd06      	ble.n	800b3bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b3ae:	1acb      	subs	r3, r1, r3
 800b3b0:	429a      	cmp	r2, r3
 800b3b2:	f2c0 80bb 	blt.w	800b52c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b3b6:	2b00      	cmp	r3, #0
 800b3b8:	f300 80b9 	bgt.w	800b52e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b3bc:	6967      	ldr	r7, [r4, #20]
 800b3be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b3c0:	443b      	add	r3, r7
 800b3c2:	461f      	mov	r7, r3
 800b3c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b3c6:	1bdf      	subs	r7, r3, r7
 800b3c8:	4297      	cmp	r7, r2
 800b3ca:	bfa8      	it	ge
 800b3cc:	4617      	movge	r7, r2
 800b3ce:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b3d2:	2f00      	cmp	r7, #0
 800b3d4:	f340 813c 	ble.w	800b650 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b3d8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b3da:	6829      	ldr	r1, [r5, #0]
 800b3dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b3e0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b3e4:	6820      	ldr	r0, [r4, #0]
 800b3e6:	4411      	add	r1, r2
 800b3e8:	4299      	cmp	r1, r3
 800b3ea:	dd1a      	ble.n	800b422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b3ec:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b3f0:	440b      	add	r3, r1
 800b3f2:	4402      	add	r2, r0
 800b3f4:	b21b      	sxth	r3, r3
 800b3f6:	429a      	cmp	r2, r3
 800b3f8:	dc13      	bgt.n	800b422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b3fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	9206      	str	r2, [sp, #24]
 800b402:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b404:	9205      	str	r2, [sp, #20]
 800b406:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b408:	9500      	str	r5, [sp, #0]
 800b40a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b40e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b410:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b412:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b416:	a912      	add	r1, sp, #72	; 0x48
 800b418:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800b41c:	aa49      	add	r2, sp, #292	; 0x124
 800b41e:	4623      	mov	r3, r4
 800b420:	47c8      	blx	r9
 800b422:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b426:	441a      	add	r2, r3
 800b428:	6963      	ldr	r3, [r4, #20]
 800b42a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b42e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b432:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b436:	68a1      	ldr	r1, [r4, #8]
 800b438:	ed94 6a08 	vldr	s12, [r4, #32]
 800b43c:	6022      	str	r2, [r4, #0]
 800b43e:	3301      	adds	r3, #1
 800b440:	6163      	str	r3, [r4, #20]
 800b442:	69a3      	ldr	r3, [r4, #24]
 800b444:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b448:	3b01      	subs	r3, #1
 800b44a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b44e:	61a3      	str	r3, [r4, #24]
 800b450:	6923      	ldr	r3, [r4, #16]
 800b452:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b456:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b45a:	edd4 6a07 	vldr	s13, [r4, #28]
 800b45e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b462:	440b      	add	r3, r1
 800b464:	68e1      	ldr	r1, [r4, #12]
 800b466:	6123      	str	r3, [r4, #16]
 800b468:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b46c:	428b      	cmp	r3, r1
 800b46e:	edc4 6a07 	vstr	s13, [r4, #28]
 800b472:	db15      	blt.n	800b4a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b474:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b478:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b47c:	3201      	adds	r2, #1
 800b47e:	edc4 6a07 	vstr	s13, [r4, #28]
 800b482:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b486:	6022      	str	r2, [r4, #0]
 800b488:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b48c:	1a5b      	subs	r3, r3, r1
 800b48e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b492:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b496:	6123      	str	r3, [r4, #16]
 800b498:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b49c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b4a0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b4a4:	441a      	add	r2, r3
 800b4a6:	696b      	ldr	r3, [r5, #20]
 800b4a8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b4ac:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b4b0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b4b4:	68a9      	ldr	r1, [r5, #8]
 800b4b6:	ed95 6a08 	vldr	s12, [r5, #32]
 800b4ba:	602a      	str	r2, [r5, #0]
 800b4bc:	3301      	adds	r3, #1
 800b4be:	616b      	str	r3, [r5, #20]
 800b4c0:	69ab      	ldr	r3, [r5, #24]
 800b4c2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b4c6:	3b01      	subs	r3, #1
 800b4c8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b4cc:	61ab      	str	r3, [r5, #24]
 800b4ce:	692b      	ldr	r3, [r5, #16]
 800b4d0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b4d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b4d8:	edd5 6a07 	vldr	s13, [r5, #28]
 800b4dc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b4e0:	440b      	add	r3, r1
 800b4e2:	68e9      	ldr	r1, [r5, #12]
 800b4e4:	612b      	str	r3, [r5, #16]
 800b4e6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b4ea:	428b      	cmp	r3, r1
 800b4ec:	edc5 6a07 	vstr	s13, [r5, #28]
 800b4f0:	db15      	blt.n	800b51e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b4f2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b4f6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b4fa:	3201      	adds	r2, #1
 800b4fc:	edc5 6a07 	vstr	s13, [r5, #28]
 800b500:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b504:	602a      	str	r2, [r5, #0]
 800b506:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b50a:	1a5b      	subs	r3, r3, r1
 800b50c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b510:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b514:	612b      	str	r3, [r5, #16]
 800b516:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b51a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b51e:	3f01      	subs	r7, #1
 800b520:	e757      	b.n	800b3d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b522:	ad39      	add	r5, sp, #228	; 0xe4
 800b524:	ac19      	add	r4, sp, #100	; 0x64
 800b526:	e72d      	b.n	800b384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b528:	4613      	mov	r3, r2
 800b52a:	e744      	b.n	800b3b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b52c:	4613      	mov	r3, r2
 800b52e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b532:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b534:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b538:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b53c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b540:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b544:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b548:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b54c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b550:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b552:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b556:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b55a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b55e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b562:	960e      	str	r6, [sp, #56]	; 0x38
 800b564:	469e      	mov	lr, r3
 800b566:	461f      	mov	r7, r3
 800b568:	f04f 0900 	mov.w	r9, #0
 800b56c:	2f00      	cmp	r7, #0
 800b56e:	d146      	bne.n	800b5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b570:	449c      	add	ip, r3
 800b572:	1ad7      	subs	r7, r2, r3
 800b574:	f1b9 0f00 	cmp.w	r9, #0
 800b578:	d009      	beq.n	800b58e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b57a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b57e:	9039      	str	r0, [sp, #228]	; 0xe4
 800b580:	913d      	str	r1, [sp, #244]	; 0xf4
 800b582:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b586:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b58a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b58e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b590:	910e      	str	r1, [sp, #56]	; 0x38
 800b592:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b596:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b59a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b59e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b5a2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b5a6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b5aa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b5ae:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b5b2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b5b6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b5ba:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b5be:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b5c2:	f04f 0800 	mov.w	r8, #0
 800b5c6:	f1be 0f00 	cmp.w	lr, #0
 800b5ca:	d030      	beq.n	800b62e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b5cc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b5ce:	4431      	add	r1, r6
 800b5d0:	4549      	cmp	r1, r9
 800b5d2:	4450      	add	r0, sl
 800b5d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b5d8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b5dc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b5e0:	db08      	blt.n	800b5f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b5e2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b5e6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b5ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b5ee:	3001      	adds	r0, #1
 800b5f0:	eba1 0109 	sub.w	r1, r1, r9
 800b5f4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b5f8:	f04f 0801 	mov.w	r8, #1
 800b5fc:	e7e3      	b.n	800b5c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b5fe:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b600:	4431      	add	r1, r6
 800b602:	4541      	cmp	r1, r8
 800b604:	4450      	add	r0, sl
 800b606:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b60a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b60e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b612:	db08      	blt.n	800b626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b614:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b618:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b61c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b620:	3001      	adds	r0, #1
 800b622:	eba1 0108 	sub.w	r1, r1, r8
 800b626:	3f01      	subs	r7, #1
 800b628:	f04f 0901 	mov.w	r9, #1
 800b62c:	e79e      	b.n	800b56c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b62e:	449c      	add	ip, r3
 800b630:	1aff      	subs	r7, r7, r3
 800b632:	f1b8 0f00 	cmp.w	r8, #0
 800b636:	d009      	beq.n	800b64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b638:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b63c:	9019      	str	r0, [sp, #100]	; 0x64
 800b63e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b642:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b646:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b64a:	911d      	str	r1, [sp, #116]	; 0x74
 800b64c:	1ad2      	subs	r2, r2, r3
 800b64e:	e6b5      	b.n	800b3bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b650:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b652:	681b      	ldr	r3, [r3, #0]
 800b654:	b923      	cbnz	r3, 800b660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b656:	4b04      	ldr	r3, [pc, #16]	; (800b668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b658:	6818      	ldr	r0, [r3, #0]
 800b65a:	6803      	ldr	r3, [r0, #0]
 800b65c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b65e:	4798      	blx	r3
 800b660:	b05b      	add	sp, #364	; 0x16c
 800b662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b666:	bf00      	nop
 800b668:	2000a198 	.word	0x2000a198

0800b66c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800b66c:	b570      	push	{r4, r5, r6, lr}
 800b66e:	4604      	mov	r4, r0
 800b670:	2500      	movs	r5, #0
 800b672:	7223      	strb	r3, [r4, #8]
 800b674:	9804      	ldr	r0, [sp, #16]
 800b676:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b67a:	8025      	strh	r5, [r4, #0]
 800b67c:	6061      	str	r1, [r4, #4]
 800b67e:	7263      	strb	r3, [r4, #9]
 800b680:	60e0      	str	r0, [r4, #12]
 800b682:	8222      	strh	r2, [r4, #16]
 800b684:	8265      	strh	r5, [r4, #18]
 800b686:	82a5      	strh	r5, [r4, #20]
 800b688:	82e5      	strh	r5, [r4, #22]
 800b68a:	8325      	strh	r5, [r4, #24]
 800b68c:	8365      	strh	r5, [r4, #26]
 800b68e:	83a5      	strh	r5, [r4, #28]
 800b690:	77a5      	strb	r5, [r4, #30]
 800b692:	6803      	ldr	r3, [r0, #0]
 800b694:	695b      	ldr	r3, [r3, #20]
 800b696:	4798      	blx	r3
 800b698:	4606      	mov	r6, r0
 800b69a:	b1f8      	cbz	r0, 800b6dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800b69c:	68e0      	ldr	r0, [r4, #12]
 800b69e:	6803      	ldr	r3, [r0, #0]
 800b6a0:	4631      	mov	r1, r6
 800b6a2:	68db      	ldr	r3, [r3, #12]
 800b6a4:	4798      	blx	r3
 800b6a6:	7b43      	ldrb	r3, [r0, #13]
 800b6a8:	7a82      	ldrb	r2, [r0, #10]
 800b6aa:	005b      	lsls	r3, r3, #1
 800b6ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b6b0:	4313      	orrs	r3, r2
 800b6b2:	83a3      	strh	r3, [r4, #28]
 800b6b4:	7a63      	ldrb	r3, [r4, #9]
 800b6b6:	2b04      	cmp	r3, #4
 800b6b8:	4605      	mov	r5, r0
 800b6ba:	d10f      	bne.n	800b6dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800b6bc:	68e0      	ldr	r0, [r4, #12]
 800b6be:	6803      	ldr	r3, [r0, #0]
 800b6c0:	462a      	mov	r2, r5
 800b6c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b6c4:	4631      	mov	r1, r6
 800b6c6:	4798      	blx	r3
 800b6c8:	7b6b      	ldrb	r3, [r5, #13]
 800b6ca:	005b      	lsls	r3, r3, #1
 800b6cc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b6d0:	7aab      	ldrb	r3, [r5, #10]
 800b6d2:	4313      	orrs	r3, r2
 800b6d4:	4418      	add	r0, r3
 800b6d6:	8ba3      	ldrh	r3, [r4, #28]
 800b6d8:	4418      	add	r0, r3
 800b6da:	83a0      	strh	r0, [r4, #28]
 800b6dc:	4620      	mov	r0, r4
 800b6de:	bd70      	pop	{r4, r5, r6, pc}

0800b6e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800b6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6e4:	2400      	movs	r4, #0
 800b6e6:	b085      	sub	sp, #20
 800b6e8:	4681      	mov	r9, r0
 800b6ea:	4688      	mov	r8, r1
 800b6ec:	4692      	mov	sl, r2
 800b6ee:	469b      	mov	fp, r3
 800b6f0:	4627      	mov	r7, r4
 800b6f2:	4625      	mov	r5, r4
 800b6f4:	4626      	mov	r6, r4
 800b6f6:	4554      	cmp	r4, sl
 800b6f8:	da2a      	bge.n	800b750 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b6fa:	2300      	movs	r3, #0
 800b6fc:	9303      	str	r3, [sp, #12]
 800b6fe:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b702:	429d      	cmp	r5, r3
 800b704:	d004      	beq.n	800b710 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800b706:	f242 030b 	movw	r3, #8203	; 0x200b
 800b70a:	429d      	cmp	r5, r3
 800b70c:	bf18      	it	ne
 800b70e:	462f      	movne	r7, r5
 800b710:	ab03      	add	r3, sp, #12
 800b712:	4642      	mov	r2, r8
 800b714:	4659      	mov	r1, fp
 800b716:	4648      	mov	r0, r9
 800b718:	f002 ffb2 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b71c:	4605      	mov	r5, r0
 800b71e:	b1b8      	cbz	r0, 800b750 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b720:	280a      	cmp	r0, #10
 800b722:	d015      	beq.n	800b750 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b724:	9a03      	ldr	r2, [sp, #12]
 800b726:	b18a      	cbz	r2, 800b74c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800b728:	7b50      	ldrb	r0, [r2, #13]
 800b72a:	7a93      	ldrb	r3, [r2, #10]
 800b72c:	8895      	ldrh	r5, [r2, #4]
 800b72e:	0040      	lsls	r0, r0, #1
 800b730:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800b734:	4303      	orrs	r3, r0
 800b736:	9301      	str	r3, [sp, #4]
 800b738:	f8d8 3000 	ldr.w	r3, [r8]
 800b73c:	4639      	mov	r1, r7
 800b73e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b740:	4640      	mov	r0, r8
 800b742:	4798      	blx	r3
 800b744:	9b01      	ldr	r3, [sp, #4]
 800b746:	4418      	add	r0, r3
 800b748:	4406      	add	r6, r0
 800b74a:	b2b6      	uxth	r6, r6
 800b74c:	3401      	adds	r4, #1
 800b74e:	e7d2      	b.n	800b6f6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800b750:	4630      	mov	r0, r6
 800b752:	b005      	add	sp, #20
 800b754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b758 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800b758:	2a02      	cmp	r2, #2
 800b75a:	b530      	push	{r4, r5, lr}
 800b75c:	d011      	beq.n	800b782 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800b75e:	2a03      	cmp	r2, #3
 800b760:	d01c      	beq.n	800b79c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800b762:	2a01      	cmp	r2, #1
 800b764:	d10c      	bne.n	800b780 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b766:	888b      	ldrh	r3, [r1, #4]
 800b768:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800b76c:	8801      	ldrh	r1, [r0, #0]
 800b76e:	8844      	ldrh	r4, [r0, #2]
 800b770:	8004      	strh	r4, [r0, #0]
 800b772:	1a9b      	subs	r3, r3, r2
 800b774:	1a5b      	subs	r3, r3, r1
 800b776:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b77a:	8043      	strh	r3, [r0, #2]
 800b77c:	8081      	strh	r1, [r0, #4]
 800b77e:	80c2      	strh	r2, [r0, #6]
 800b780:	bd30      	pop	{r4, r5, pc}
 800b782:	88cb      	ldrh	r3, [r1, #6]
 800b784:	88c2      	ldrh	r2, [r0, #6]
 800b786:	1a9b      	subs	r3, r3, r2
 800b788:	8842      	ldrh	r2, [r0, #2]
 800b78a:	1a9b      	subs	r3, r3, r2
 800b78c:	888a      	ldrh	r2, [r1, #4]
 800b78e:	8881      	ldrh	r1, [r0, #4]
 800b790:	8043      	strh	r3, [r0, #2]
 800b792:	1a52      	subs	r2, r2, r1
 800b794:	8801      	ldrh	r1, [r0, #0]
 800b796:	1a52      	subs	r2, r2, r1
 800b798:	8002      	strh	r2, [r0, #0]
 800b79a:	e7f1      	b.n	800b780 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b79c:	88cb      	ldrh	r3, [r1, #6]
 800b79e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800b7a2:	8841      	ldrh	r1, [r0, #2]
 800b7a4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b7a8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800b7ac:	8045      	strh	r5, [r0, #2]
 800b7ae:	1a9b      	subs	r3, r3, r2
 800b7b0:	1a5b      	subs	r3, r3, r1
 800b7b2:	8003      	strh	r3, [r0, #0]
 800b7b4:	8082      	strh	r2, [r0, #4]
 800b7b6:	80c4      	strh	r4, [r0, #6]
 800b7b8:	e7e2      	b.n	800b780 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800b7ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800b7ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7be:	b09f      	sub	sp, #124	; 0x7c
 800b7c0:	9116      	str	r1, [sp, #88]	; 0x58
 800b7c2:	9317      	str	r3, [sp, #92]	; 0x5c
 800b7c4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b7c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b7c8:	8809      	ldrh	r1, [r1, #0]
 800b7ca:	889b      	ldrh	r3, [r3, #4]
 800b7cc:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800b7d0:	9212      	str	r2, [sp, #72]	; 0x48
 800b7d2:	440b      	add	r3, r1
 800b7d4:	b21b      	sxth	r3, r3
 800b7d6:	9310      	str	r3, [sp, #64]	; 0x40
 800b7d8:	f8d8 3000 	ldr.w	r3, [r8]
 800b7dc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800b7e0:	7a59      	ldrb	r1, [r3, #9]
 800b7e2:	7a1b      	ldrb	r3, [r3, #8]
 800b7e4:	9315      	str	r3, [sp, #84]	; 0x54
 800b7e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800b7e8:	9011      	str	r0, [sp, #68]	; 0x44
 800b7ea:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800b7ee:	9114      	str	r1, [sp, #80]	; 0x50
 800b7f0:	f9b3 5000 	ldrsh.w	r5, [r3]
 800b7f4:	2a00      	cmp	r2, #0
 800b7f6:	d067      	beq.n	800b8c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800b7f8:	f898 3010 	ldrb.w	r3, [r8, #16]
 800b7fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800b7fe:	2b04      	cmp	r3, #4
 800b800:	bf14      	ite	ne
 800b802:	2301      	movne	r3, #1
 800b804:	2302      	moveq	r3, #2
 800b806:	4413      	add	r3, r2
 800b808:	f04f 0900 	mov.w	r9, #0
 800b80c:	930f      	str	r3, [sp, #60]	; 0x3c
 800b80e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800b812:	464c      	mov	r4, r9
 800b814:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800b818:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800b81c:	4293      	cmp	r3, r2
 800b81e:	f280 808c 	bge.w	800b93a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b822:	2300      	movs	r3, #0
 800b824:	931c      	str	r3, [sp, #112]	; 0x70
 800b826:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b82a:	429c      	cmp	r4, r3
 800b82c:	d006      	beq.n	800b83c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800b82e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b830:	f242 020b 	movw	r2, #8203	; 0x200b
 800b834:	4294      	cmp	r4, r2
 800b836:	bf18      	it	ne
 800b838:	4623      	movne	r3, r4
 800b83a:	930d      	str	r3, [sp, #52]	; 0x34
 800b83c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b83e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800b840:	f8d8 2000 	ldr.w	r2, [r8]
 800b844:	428b      	cmp	r3, r1
 800b846:	db41      	blt.n	800b8cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800b848:	6813      	ldr	r3, [r2, #0]
 800b84a:	4610      	mov	r0, r2
 800b84c:	695b      	ldr	r3, [r3, #20]
 800b84e:	4798      	blx	r3
 800b850:	4604      	mov	r4, r0
 800b852:	f8d8 0000 	ldr.w	r0, [r8]
 800b856:	6803      	ldr	r3, [r0, #0]
 800b858:	aa1d      	add	r2, sp, #116	; 0x74
 800b85a:	689e      	ldr	r6, [r3, #8]
 800b85c:	4621      	mov	r1, r4
 800b85e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b862:	47b0      	blx	r6
 800b864:	901c      	str	r0, [sp, #112]	; 0x70
 800b866:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b86a:	429c      	cmp	r4, r3
 800b86c:	f000 80e9 	beq.w	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b870:	f242 030b 	movw	r3, #8203	; 0x200b
 800b874:	429c      	cmp	r4, r3
 800b876:	f000 80e4 	beq.w	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b87a:	2c00      	cmp	r4, #0
 800b87c:	f000 80f6 	beq.w	800ba6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b880:	2c0a      	cmp	r4, #10
 800b882:	d060      	beq.n	800b946 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b884:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b886:	b36a      	cbz	r2, 800b8e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800b888:	8894      	ldrh	r4, [r2, #4]
 800b88a:	f1bb 0f00 	cmp.w	fp, #0
 800b88e:	d03b      	beq.n	800b908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800b890:	f892 900d 	ldrb.w	r9, [r2, #13]
 800b894:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800b898:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800b89c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800b8a0:	f1bb 0f01 	cmp.w	fp, #1
 800b8a4:	ea49 0903 	orr.w	r9, r9, r3
 800b8a8:	d134      	bne.n	800b914 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800b8aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b8ac:	eba5 0509 	sub.w	r5, r5, r9
 800b8b0:	2b00      	cmp	r3, #0
 800b8b2:	d14f      	bne.n	800b954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b8b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b8b6:	eb09 0305 	add.w	r3, r9, r5
 800b8ba:	4413      	add	r3, r2
 800b8bc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800b8be:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b8c2:	4293      	cmp	r3, r2
 800b8c4:	da51      	bge.n	800b96a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b8c6:	e038      	b.n	800b93a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b8c8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b8ca:	e79d      	b.n	800b808 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800b8cc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b8d0:	9301      	str	r3, [sp, #4]
 800b8d2:	ab1d      	add	r3, sp, #116	; 0x74
 800b8d4:	9300      	str	r3, [sp, #0]
 800b8d6:	4659      	mov	r1, fp
 800b8d8:	ab1c      	add	r3, sp, #112	; 0x70
 800b8da:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b8dc:	f002 ff28 	bl	800e730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800b8e0:	4604      	mov	r4, r0
 800b8e2:	e7c0      	b.n	800b866 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800b8e4:	f8d8 0000 	ldr.w	r0, [r8]
 800b8e8:	6803      	ldr	r3, [r0, #0]
 800b8ea:	691b      	ldr	r3, [r3, #16]
 800b8ec:	4798      	blx	r3
 800b8ee:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b8f2:	4298      	cmp	r0, r3
 800b8f4:	f000 80a5 	beq.w	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b8f8:	f242 030b 	movw	r3, #8203	; 0x200b
 800b8fc:	4298      	cmp	r0, r3
 800b8fe:	f000 80a0 	beq.w	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b902:	f1bb 0f00 	cmp.w	fp, #0
 800b906:	d100      	bne.n	800b90a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800b908:	444d      	add	r5, r9
 800b90a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b90c:	2a00      	cmp	r2, #0
 800b90e:	d1bf      	bne.n	800b890 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800b910:	4691      	mov	r9, r2
 800b912:	e096      	b.n	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b914:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b916:	2b00      	cmp	r3, #0
 800b918:	f000 80aa 	beq.w	800ba70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800b91c:	f1bb 0f00 	cmp.w	fp, #0
 800b920:	d118      	bne.n	800b954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b922:	f8d8 0000 	ldr.w	r0, [r8]
 800b926:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b928:	6803      	ldr	r3, [r0, #0]
 800b92a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b92c:	4798      	blx	r3
 800b92e:	4405      	add	r5, r0
 800b930:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b932:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b934:	1aeb      	subs	r3, r5, r3
 800b936:	4293      	cmp	r3, r2
 800b938:	dd17      	ble.n	800b96a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b93a:	2c00      	cmp	r4, #0
 800b93c:	f000 8096 	beq.w	800ba6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b940:	2c0a      	cmp	r4, #10
 800b942:	f040 8084 	bne.w	800ba4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800b946:	240a      	movs	r4, #10
 800b948:	fab4 f084 	clz	r0, r4
 800b94c:	0940      	lsrs	r0, r0, #5
 800b94e:	b01f      	add	sp, #124	; 0x7c
 800b950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b954:	f8d8 0000 	ldr.w	r0, [r8]
 800b958:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b95a:	6803      	ldr	r3, [r0, #0]
 800b95c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b95e:	4798      	blx	r3
 800b960:	f1bb 0f01 	cmp.w	fp, #1
 800b964:	eba5 0500 	sub.w	r5, r5, r0
 800b968:	d0a4      	beq.n	800b8b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800b96a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800b96c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b96e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800b972:	f9b3 6000 	ldrsh.w	r6, [r3]
 800b976:	7b43      	ldrb	r3, [r0, #13]
 800b978:	015b      	lsls	r3, r3, #5
 800b97a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b97e:	7983      	ldrb	r3, [r0, #6]
 800b980:	4429      	add	r1, r5
 800b982:	4313      	orrs	r3, r2
 800b984:	440b      	add	r3, r1
 800b986:	42b3      	cmp	r3, r6
 800b988:	db5b      	blt.n	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b98a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b98c:	4299      	cmp	r1, r3
 800b98e:	da58      	bge.n	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b990:	f8d8 0000 	ldr.w	r0, [r8]
 800b994:	6803      	ldr	r3, [r0, #0]
 800b996:	42ae      	cmp	r6, r5
 800b998:	bfc8      	it	gt
 800b99a:	1b76      	subgt	r6, r6, r5
 800b99c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b99e:	bfcc      	ite	gt
 800b9a0:	b2b6      	uxthgt	r6, r6
 800b9a2:	2600      	movle	r6, #0
 800b9a4:	4798      	blx	r3
 800b9a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800b9a8:	7b5a      	ldrb	r2, [r3, #13]
 800b9aa:	00d1      	lsls	r1, r2, #3
 800b9ac:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800b9b0:	7a19      	ldrb	r1, [r3, #8]
 800b9b2:	4339      	orrs	r1, r7
 800b9b4:	0657      	lsls	r7, r2, #25
 800b9b6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b9b8:	bf44      	itt	mi
 800b9ba:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800b9be:	b209      	sxthmi	r1, r1
 800b9c0:	19c7      	adds	r7, r0, r7
 800b9c2:	1a7f      	subs	r7, r7, r1
 800b9c4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b9c6:	b2bf      	uxth	r7, r7
 800b9c8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b9cc:	fa0f fa87 	sxth.w	sl, r7
 800b9d0:	4551      	cmp	r1, sl
 800b9d2:	dd3a      	ble.n	800ba4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800b9d4:	0112      	lsls	r2, r2, #4
 800b9d6:	79d8      	ldrb	r0, [r3, #7]
 800b9d8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800b9dc:	4302      	orrs	r2, r0
 800b9de:	4492      	add	sl, r2
 800b9e0:	4551      	cmp	r1, sl
 800b9e2:	dc2e      	bgt.n	800ba42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b9e4:	1bcf      	subs	r7, r1, r7
 800b9e6:	b2bf      	uxth	r7, r7
 800b9e8:	468a      	mov	sl, r1
 800b9ea:	9319      	str	r3, [sp, #100]	; 0x64
 800b9ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b9ee:	f8d8 0000 	ldr.w	r0, [r8]
 800b9f2:	681a      	ldr	r2, [r3, #0]
 800b9f4:	6801      	ldr	r1, [r0, #0]
 800b9f6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b9f8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b9fa:	9313      	str	r3, [sp, #76]	; 0x4c
 800b9fc:	9218      	str	r2, [sp, #96]	; 0x60
 800b9fe:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800ba00:	4788      	blx	r1
 800ba02:	f898 1006 	ldrb.w	r1, [r8, #6]
 800ba06:	910b      	str	r1, [sp, #44]	; 0x2c
 800ba08:	f898 100e 	ldrb.w	r1, [r8, #14]
 800ba0c:	910a      	str	r1, [sp, #40]	; 0x28
 800ba0e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800ba12:	9109      	str	r1, [sp, #36]	; 0x24
 800ba14:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ba16:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800ba1a:	9305      	str	r3, [sp, #20]
 800ba1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ba1e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ba20:	9206      	str	r2, [sp, #24]
 800ba22:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800ba26:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800ba2a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800ba2e:	442e      	add	r6, r5
 800ba30:	b236      	sxth	r6, r6
 800ba32:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ba34:	9600      	str	r6, [sp, #0]
 800ba36:	681a      	ldr	r2, [r3, #0]
 800ba38:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ba3a:	685b      	ldr	r3, [r3, #4]
 800ba3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ba3e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ba40:	47b0      	blx	r6
 800ba42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ba44:	3301      	adds	r3, #1
 800ba46:	930e      	str	r3, [sp, #56]	; 0x38
 800ba48:	e6e6      	b.n	800b818 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800ba4a:	2700      	movs	r7, #0
 800ba4c:	e7cd      	b.n	800b9ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800ba4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800ba50:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ba52:	3501      	adds	r5, #1
 800ba54:	429d      	cmp	r5, r3
 800ba56:	f6bf af77 	bge.w	800b948 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ba5a:	4659      	mov	r1, fp
 800ba5c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ba5e:	f7f6 fe83 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ba62:	4604      	mov	r4, r0
 800ba64:	b110      	cbz	r0, 800ba6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ba66:	280a      	cmp	r0, #10
 800ba68:	d1f2      	bne.n	800ba50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800ba6a:	e76c      	b.n	800b946 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800ba6c:	2400      	movs	r4, #0
 800ba6e:	e76b      	b.n	800b948 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ba70:	f1bb 0f00 	cmp.w	fp, #0
 800ba74:	f43f af5c 	beq.w	800b930 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800ba78:	e777      	b.n	800b96a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800ba7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ba7a:	b530      	push	{r4, r5, lr}
 800ba7c:	8a44      	ldrh	r4, [r0, #18]
 800ba7e:	8ac5      	ldrh	r5, [r0, #22]
 800ba80:	82c3      	strh	r3, [r0, #22]
 800ba82:	442c      	add	r4, r5
 800ba84:	1ae4      	subs	r4, r4, r3
 800ba86:	8244      	strh	r4, [r0, #18]
 800ba88:	8b03      	ldrh	r3, [r0, #24]
 800ba8a:	8a84      	ldrh	r4, [r0, #20]
 800ba8c:	4422      	add	r2, r4
 800ba8e:	440c      	add	r4, r1
 800ba90:	1a59      	subs	r1, r3, r1
 800ba92:	8342      	strh	r2, [r0, #26]
 800ba94:	8284      	strh	r4, [r0, #20]
 800ba96:	8301      	strh	r1, [r0, #24]
 800ba98:	bd30      	pop	{r4, r5, pc}

0800ba9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800ba9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba9e:	7a43      	ldrb	r3, [r0, #9]
 800baa0:	1eda      	subs	r2, r3, #3
 800baa2:	b087      	sub	sp, #28
 800baa4:	4604      	mov	r4, r0
 800baa6:	b2d2      	uxtb	r2, r2
 800baa8:	460f      	mov	r7, r1
 800baaa:	2900      	cmp	r1, #0
 800baac:	d036      	beq.n	800bb1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800baae:	2a01      	cmp	r2, #1
 800bab0:	d932      	bls.n	800bb18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800bab2:	1e58      	subs	r0, r3, #1
 800bab4:	f1d0 0b00 	rsbs	fp, r0, #0
 800bab8:	eb4b 0b00 	adc.w	fp, fp, r0
 800babc:	1e99      	subs	r1, r3, #2
 800babe:	424b      	negs	r3, r1
 800bac0:	414b      	adcs	r3, r1
 800bac2:	9303      	str	r3, [sp, #12]
 800bac4:	2300      	movs	r3, #0
 800bac6:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800baca:	2500      	movs	r5, #0
 800bacc:	8265      	strh	r5, [r4, #18]
 800bace:	82a5      	strh	r5, [r4, #20]
 800bad0:	46a9      	mov	r9, r5
 800bad2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800bad6:	2300      	movs	r3, #0
 800bad8:	9305      	str	r3, [sp, #20]
 800bada:	8823      	ldrh	r3, [r4, #0]
 800badc:	2b20      	cmp	r3, #32
 800bade:	d02b      	beq.n	800bb38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800bae0:	eba3 020a 	sub.w	r2, r3, sl
 800bae4:	4256      	negs	r6, r2
 800bae6:	4156      	adcs	r6, r2
 800bae8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800baec:	4293      	cmp	r3, r2
 800baee:	d004      	beq.n	800bafa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800baf0:	4553      	cmp	r3, sl
 800baf2:	bf16      	itet	ne
 800baf4:	4699      	movne	r9, r3
 800baf6:	2601      	moveq	r6, #1
 800baf8:	2600      	movne	r6, #0
 800bafa:	ab05      	add	r3, sp, #20
 800bafc:	68e2      	ldr	r2, [r4, #12]
 800bafe:	7a21      	ldrb	r1, [r4, #8]
 800bb00:	6860      	ldr	r0, [r4, #4]
 800bb02:	f002 fdbd 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bb06:	8020      	strh	r0, [r4, #0]
 800bb08:	b9c8      	cbnz	r0, 800bb3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800bb0a:	8b22      	ldrh	r2, [r4, #24]
 800bb0c:	2300      	movs	r3, #0
 800bb0e:	4611      	mov	r1, r2
 800bb10:	4620      	mov	r0, r4
 800bb12:	f7ff ffb2 	bl	800ba7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bb16:	e066      	b.n	800bbe6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bb18:	468b      	mov	fp, r1
 800bb1a:	e7cf      	b.n	800babc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800bb1c:	3b01      	subs	r3, #1
 800bb1e:	2a01      	cmp	r2, #1
 800bb20:	bf8c      	ite	hi
 800bb22:	2200      	movhi	r2, #0
 800bb24:	2201      	movls	r2, #1
 800bb26:	2b01      	cmp	r3, #1
 800bb28:	bf8c      	ite	hi
 800bb2a:	2300      	movhi	r3, #0
 800bb2c:	2301      	movls	r3, #1
 800bb2e:	9202      	str	r2, [sp, #8]
 800bb30:	9301      	str	r3, [sp, #4]
 800bb32:	9103      	str	r1, [sp, #12]
 800bb34:	468b      	mov	fp, r1
 800bb36:	e7c8      	b.n	800baca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800bb38:	4699      	mov	r9, r3
 800bb3a:	2601      	movs	r6, #1
 800bb3c:	e7dd      	b.n	800bafa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bb3e:	8ae3      	ldrh	r3, [r4, #22]
 800bb40:	280a      	cmp	r0, #10
 800bb42:	f103 0301 	add.w	r3, r3, #1
 800bb46:	82e3      	strh	r3, [r4, #22]
 800bb48:	d0df      	beq.n	800bb0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800bb4a:	9a05      	ldr	r2, [sp, #20]
 800bb4c:	bb42      	cbnz	r2, 800bba0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800bb4e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bb52:	4298      	cmp	r0, r3
 800bb54:	d001      	beq.n	800bb5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bb56:	4550      	cmp	r0, sl
 800bb58:	d1bd      	bne.n	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bb5a:	8823      	ldrh	r3, [r4, #0]
 800bb5c:	8b21      	ldrh	r1, [r4, #24]
 800bb5e:	2b20      	cmp	r3, #32
 800bb60:	d001      	beq.n	800bb66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800bb62:	4553      	cmp	r3, sl
 800bb64:	d131      	bne.n	800bbca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800bb66:	2e00      	cmp	r6, #0
 800bb68:	bf0a      	itet	eq
 800bb6a:	460d      	moveq	r5, r1
 800bb6c:	4630      	movne	r0, r6
 800bb6e:	2001      	moveq	r0, #1
 800bb70:	440a      	add	r2, r1
 800bb72:	8aa3      	ldrh	r3, [r4, #20]
 800bb74:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800bb78:	b292      	uxth	r2, r2
 800bb7a:	8322      	strh	r2, [r4, #24]
 800bb7c:	4413      	add	r3, r2
 800bb7e:	2f00      	cmp	r7, #0
 800bb80:	d03a      	beq.n	800bbf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800bb82:	f1bb 0f00 	cmp.w	fp, #0
 800bb86:	d102      	bne.n	800bb8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800bb88:	9903      	ldr	r1, [sp, #12]
 800bb8a:	b301      	cbz	r1, 800bbce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bb8c:	b1f8      	cbz	r0, 800bbce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bb8e:	8ba1      	ldrh	r1, [r4, #28]
 800bb90:	4419      	add	r1, r3
 800bb92:	458c      	cmp	ip, r1
 800bb94:	da2a      	bge.n	800bbec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bb96:	8a61      	ldrh	r1, [r4, #18]
 800bb98:	b341      	cbz	r1, 800bbec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bb9a:	4563      	cmp	r3, ip
 800bb9c:	dd9b      	ble.n	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bb9e:	e01c      	b.n	800bbda <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800bba0:	8893      	ldrh	r3, [r2, #4]
 800bba2:	8023      	strh	r3, [r4, #0]
 800bba4:	f892 800d 	ldrb.w	r8, [r2, #13]
 800bba8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800bbac:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800bbb0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800bbb4:	ea48 0800 	orr.w	r8, r8, r0
 800bbb8:	68e0      	ldr	r0, [r4, #12]
 800bbba:	6803      	ldr	r3, [r0, #0]
 800bbbc:	4649      	mov	r1, r9
 800bbbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbc0:	4798      	blx	r3
 800bbc2:	eb08 0200 	add.w	r2, r8, r0
 800bbc6:	b292      	uxth	r2, r2
 800bbc8:	e7c7      	b.n	800bb5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bbca:	2000      	movs	r0, #0
 800bbcc:	e7d0      	b.n	800bb70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800bbce:	4563      	cmp	r3, ip
 800bbd0:	dd81      	ble.n	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bbd2:	8a63      	ldrh	r3, [r4, #18]
 800bbd4:	2b00      	cmp	r3, #0
 800bbd6:	f43f af7e 	beq.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bbda:	2301      	movs	r3, #1
 800bbdc:	77a3      	strb	r3, [r4, #30]
 800bbde:	8ba2      	ldrh	r2, [r4, #28]
 800bbe0:	8b63      	ldrh	r3, [r4, #26]
 800bbe2:	4413      	add	r3, r2
 800bbe4:	8363      	strh	r3, [r4, #26]
 800bbe6:	b007      	add	sp, #28
 800bbe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbec:	2300      	movs	r3, #0
 800bbee:	4611      	mov	r1, r2
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	f7ff ff42 	bl	800ba7a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bbf6:	e76e      	b.n	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bbf8:	4563      	cmp	r3, ip
 800bbfa:	dd14      	ble.n	800bc26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800bbfc:	9b02      	ldr	r3, [sp, #8]
 800bbfe:	b113      	cbz	r3, 800bc06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800bc00:	2301      	movs	r3, #1
 800bc02:	460a      	mov	r2, r1
 800bc04:	e783      	b.n	800bb0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800bc06:	9b01      	ldr	r3, [sp, #4]
 800bc08:	2b00      	cmp	r3, #0
 800bc0a:	f43f af64 	beq.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc0e:	2800      	cmp	r0, #0
 800bc10:	f47f af61 	bne.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc14:	b116      	cbz	r6, 800bc1c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800bc16:	2301      	movs	r3, #1
 800bc18:	462a      	mov	r2, r5
 800bc1a:	e779      	b.n	800bb10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800bc1c:	8a63      	ldrh	r3, [r4, #18]
 800bc1e:	2b00      	cmp	r3, #0
 800bc20:	f43f af59 	beq.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc24:	e7df      	b.n	800bbe6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bc26:	2800      	cmp	r0, #0
 800bc28:	f47f af55 	bne.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc2c:	2e00      	cmp	r6, #0
 800bc2e:	f43f af52 	beq.w	800bad6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bc32:	2301      	movs	r3, #1
 800bc34:	462a      	mov	r2, r5
 800bc36:	e7db      	b.n	800bbf0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800bc38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800bc38:	b530      	push	{r4, r5, lr}
 800bc3a:	4605      	mov	r5, r0
 800bc3c:	b08b      	sub	sp, #44	; 0x2c
 800bc3e:	b191      	cbz	r1, 800bc66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800bc40:	e9cd 3100 	strd	r3, r1, [sp]
 800bc44:	4613      	mov	r3, r2
 800bc46:	4601      	mov	r1, r0
 800bc48:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800bc4c:	a802      	add	r0, sp, #8
 800bc4e:	f7ff fd0d 	bl	800b66c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800bc52:	2401      	movs	r4, #1
 800bc54:	2100      	movs	r1, #0
 800bc56:	a802      	add	r0, sp, #8
 800bc58:	f7ff ff1f 	bl	800ba9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bc5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800bc60:	b163      	cbz	r3, 800bc7c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800bc62:	3401      	adds	r4, #1
 800bc64:	e7f6      	b.n	800bc54 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800bc66:	f002 fe03 	bl	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bc6a:	2401      	movs	r4, #1
 800bc6c:	280a      	cmp	r0, #10
 800bc6e:	4628      	mov	r0, r5
 800bc70:	bf08      	it	eq
 800bc72:	3401      	addeq	r4, #1
 800bc74:	f002 fdfc 	bl	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bc78:	2800      	cmp	r0, #0
 800bc7a:	d1f7      	bne.n	800bc6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800bc7c:	b2a0      	uxth	r0, r4
 800bc7e:	b00b      	add	sp, #44	; 0x2c
 800bc80:	bd30      	pop	{r4, r5, pc}

0800bc82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800bc82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc86:	b0df      	sub	sp, #380	; 0x17c
 800bc88:	4689      	mov	r9, r1
 800bc8a:	f8dd a1a0 	ldr.w	sl, [sp, #416]	; 0x1a0
 800bc8e:	900a      	str	r0, [sp, #40]	; 0x28
 800bc90:	461c      	mov	r4, r3
 800bc92:	f1ba 0f00 	cmp.w	sl, #0
 800bc96:	f000 80b1 	beq.w	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bc9a:	681b      	ldr	r3, [r3, #0]
 800bc9c:	2b00      	cmp	r3, #0
 800bc9e:	f000 80ad 	beq.w	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bca2:	7ba3      	ldrb	r3, [r4, #14]
 800bca4:	2b00      	cmp	r3, #0
 800bca6:	f000 80a9 	beq.w	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bcaa:	6810      	ldr	r0, [r2, #0]
 800bcac:	6851      	ldr	r1, [r2, #4]
 800bcae:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800bcb2:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800bcb6:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800bcba:	4643      	mov	r3, r8
 800bcbc:	c303      	stmia	r3!, {r0, r1}
 800bcbe:	2500      	movs	r5, #0
 800bcc0:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800bcc4:	79a2      	ldrb	r2, [r4, #6]
 800bcc6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bcca:	a90f      	add	r1, sp, #60	; 0x3c
 800bccc:	4640      	mov	r0, r8
 800bcce:	950f      	str	r5, [sp, #60]	; 0x3c
 800bcd0:	f7ff fd42 	bl	800b758 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800bcd4:	a90f      	add	r1, sp, #60	; 0x3c
 800bcd6:	4608      	mov	r0, r1
 800bcd8:	79a2      	ldrb	r2, [r4, #6]
 800bcda:	af19      	add	r7, sp, #100	; 0x64
 800bcdc:	f7ff fd3c 	bl	800b758 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800bce0:	4638      	mov	r0, r7
 800bce2:	f002 f985 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800bce6:	6820      	ldr	r0, [r4, #0]
 800bce8:	6803      	ldr	r3, [r0, #0]
 800bcea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bcec:	4798      	blx	r3
 800bcee:	4606      	mov	r6, r0
 800bcf0:	6820      	ldr	r0, [r4, #0]
 800bcf2:	6803      	ldr	r3, [r0, #0]
 800bcf4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bcf6:	4798      	blx	r3
 800bcf8:	4633      	mov	r3, r6
 800bcfa:	9000      	str	r0, [sp, #0]
 800bcfc:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800bcfe:	4651      	mov	r1, sl
 800bd00:	4638      	mov	r0, r7
 800bd02:	f002 f9c2 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bd06:	6820      	ldr	r0, [r4, #0]
 800bd08:	7923      	ldrb	r3, [r4, #4]
 800bd0a:	9308      	str	r3, [sp, #32]
 800bd0c:	6803      	ldr	r3, [r0, #0]
 800bd0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd10:	4798      	blx	r3
 800bd12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800bd16:	181e      	adds	r6, r3, r0
 800bd18:	42ae      	cmp	r6, r5
 800bd1a:	dd06      	ble.n	800bd2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800bd1c:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800bd20:	4282      	cmp	r2, r0
 800bd22:	bfa4      	itt	ge
 800bd24:	189d      	addge	r5, r3, r2
 800bd26:	fb95 f5f6 	sdivge	r5, r5, r6
 800bd2a:	a830      	add	r0, sp, #192	; 0xc0
 800bd2c:	f002 f960 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800bd30:	7c23      	ldrb	r3, [r4, #16]
 800bd32:	b17b      	cbz	r3, 800bd54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800bd34:	6820      	ldr	r0, [r4, #0]
 800bd36:	6803      	ldr	r3, [r0, #0]
 800bd38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd3a:	4798      	blx	r3
 800bd3c:	4683      	mov	fp, r0
 800bd3e:	6820      	ldr	r0, [r4, #0]
 800bd40:	6803      	ldr	r3, [r0, #0]
 800bd42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bd44:	4798      	blx	r3
 800bd46:	465b      	mov	r3, fp
 800bd48:	9000      	str	r0, [sp, #0]
 800bd4a:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800bd4c:	4651      	mov	r1, sl
 800bd4e:	a830      	add	r0, sp, #192	; 0xc0
 800bd50:	f002 f99b 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bd54:	7c21      	ldrb	r1, [r4, #16]
 800bd56:	9101      	str	r1, [sp, #4]
 800bd58:	6821      	ldr	r1, [r4, #0]
 800bd5a:	7963      	ldrb	r3, [r4, #5]
 800bd5c:	9100      	str	r1, [sp, #0]
 800bd5e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800bd62:	a930      	add	r1, sp, #192	; 0xc0
 800bd64:	a811      	add	r0, sp, #68	; 0x44
 800bd66:	f7ff fc81 	bl	800b66c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800bd6a:	7c23      	ldrb	r3, [r4, #16]
 800bd6c:	b9bb      	cbnz	r3, 800bd9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11c>
 800bd6e:	fa1f fa86 	uxth.w	sl, r6
 800bd72:	2d00      	cmp	r5, #0
 800bd74:	dd45      	ble.n	800be02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800bd76:	4638      	mov	r0, r7
 800bd78:	f002 fd7a 	bl	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bd7c:	2800      	cmp	r0, #0
 800bd7e:	d03d      	beq.n	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bd80:	280a      	cmp	r0, #10
 800bd82:	d1f6      	bne.n	800bd72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800bd84:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800bd88:	4453      	add	r3, sl
 800bd8a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800bd8e:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800bd92:	eba3 030a 	sub.w	r3, r3, sl
 800bd96:	3d01      	subs	r5, #1
 800bd98:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bd9c:	e7e9      	b.n	800bd72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800bd9e:	0073      	lsls	r3, r6, #1
 800bda0:	9309      	str	r3, [sp, #36]	; 0x24
 800bda2:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800bda6:	fa1f fa86 	uxth.w	sl, r6
 800bdaa:	2d00      	cmp	r5, #0
 800bdac:	dd29      	ble.n	800be02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800bdae:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bdb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bdb4:	428b      	cmp	r3, r1
 800bdb6:	bfd4      	ite	le
 800bdb8:	2100      	movle	r1, #0
 800bdba:	2101      	movgt	r1, #1
 800bdbc:	a811      	add	r0, sp, #68	; 0x44
 800bdbe:	f7ff fe6c 	bl	800ba9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800bdc2:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800bdc6:	3b01      	subs	r3, #1
 800bdc8:	b29b      	uxth	r3, r3
 800bdca:	455b      	cmp	r3, fp
 800bdcc:	930b      	str	r3, [sp, #44]	; 0x2c
 800bdce:	d005      	beq.n	800bddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15a>
 800bdd0:	7961      	ldrb	r1, [r4, #5]
 800bdd2:	4638      	mov	r0, r7
 800bdd4:	f7f6 fcc8 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bdd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bdda:	e7f4      	b.n	800bdc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800bddc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800bde0:	4453      	add	r3, sl
 800bde2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800bde6:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800bdea:	eba3 030a 	sub.w	r3, r3, sl
 800bdee:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800bdf2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bdf6:	3d01      	subs	r5, #1
 800bdf8:	2b00      	cmp	r3, #0
 800bdfa:	d1d6      	bne.n	800bdaa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800bdfc:	b05f      	add	sp, #380	; 0x17c
 800bdfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be02:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800be06:	ad47      	add	r5, sp, #284	; 0x11c
 800be08:	f04f 0b00 	mov.w	fp, #0
 800be0c:	7c23      	ldrb	r3, [r4, #16]
 800be0e:	2b00      	cmp	r3, #0
 800be10:	d067      	beq.n	800bee2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800be12:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800be16:	458a      	cmp	sl, r1
 800be18:	bfd4      	ite	le
 800be1a:	2100      	movle	r1, #0
 800be1c:	2101      	movgt	r1, #1
 800be1e:	a811      	add	r0, sp, #68	; 0x44
 800be20:	f7ff fe3b 	bl	800ba9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800be24:	9b08      	ldr	r3, [sp, #32]
 800be26:	2b00      	cmp	r3, #0
 800be28:	d056      	beq.n	800bed8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800be2a:	7c23      	ldrb	r3, [r4, #16]
 800be2c:	9309      	str	r3, [sp, #36]	; 0x24
 800be2e:	225c      	movs	r2, #92	; 0x5c
 800be30:	4639      	mov	r1, r7
 800be32:	4628      	mov	r0, r5
 800be34:	f00f fc1e 	bl	801b674 <memcpy>
 800be38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be3a:	2b00      	cmp	r3, #0
 800be3c:	d059      	beq.n	800bef2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800be3e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800be42:	7922      	ldrb	r2, [r4, #4]
 800be44:	2a01      	cmp	r2, #1
 800be46:	d13d      	bne.n	800bec4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800be48:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800be4c:	1ac0      	subs	r0, r0, r3
 800be4e:	2302      	movs	r3, #2
 800be50:	fb90 f0f3 	sdiv	r0, r0, r3
 800be54:	b200      	sxth	r0, r0
 800be56:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800be5a:	4418      	add	r0, r3
 800be5c:	7c23      	ldrb	r3, [r4, #16]
 800be5e:	f8ad 011c 	strh.w	r0, [sp, #284]	; 0x11c
 800be62:	2b00      	cmp	r3, #0
 800be64:	d03a      	beq.n	800bedc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800be66:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800be6a:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800be6e:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800be72:	9500      	str	r5, [sp, #0]
 800be74:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800be78:	e9cd b703 	strd	fp, r7, [sp, #12]
 800be7c:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800be80:	464a      	mov	r2, r9
 800be82:	2100      	movs	r1, #0
 800be84:	980a      	ldr	r0, [sp, #40]	; 0x28
 800be86:	f7ff fc98 	bl	800b7ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800be8a:	2800      	cmp	r0, #0
 800be8c:	d1b6      	bne.n	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800be8e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800be92:	b2b2      	uxth	r2, r6
 800be94:	4611      	mov	r1, r2
 800be96:	4413      	add	r3, r2
 800be98:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800be9c:	1a52      	subs	r2, r2, r1
 800be9e:	7c21      	ldrb	r1, [r4, #16]
 800bea0:	b21b      	sxth	r3, r3
 800bea2:	b212      	sxth	r2, r2
 800bea4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800bea8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800beac:	b109      	cbz	r1, 800beb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800beae:	42b2      	cmp	r2, r6
 800beb0:	dba4      	blt.n	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800beb2:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800beb6:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800beba:	440a      	add	r2, r1
 800bebc:	b212      	sxth	r2, r2
 800bebe:	4293      	cmp	r3, r2
 800bec0:	dda4      	ble.n	800be0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18a>
 800bec2:	e79b      	b.n	800bdfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800bec4:	2a02      	cmp	r2, #2
 800bec6:	d105      	bne.n	800bed4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800bec8:	7be2      	ldrb	r2, [r4, #15]
 800beca:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800bece:	1a80      	subs	r0, r0, r2
 800bed0:	1ac0      	subs	r0, r0, r3
 800bed2:	e7bf      	b.n	800be54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 800bed4:	2000      	movs	r0, #0
 800bed6:	e7be      	b.n	800be56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800bed8:	7be0      	ldrb	r0, [r4, #15]
 800beda:	e7bc      	b.n	800be56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800bedc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800bee0:	e7c3      	b.n	800be6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800bee2:	9b08      	ldr	r3, [sp, #32]
 800bee4:	2b00      	cmp	r3, #0
 800bee6:	d0f7      	beq.n	800bed8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800bee8:	225c      	movs	r2, #92	; 0x5c
 800beea:	4639      	mov	r1, r7
 800beec:	4628      	mov	r0, r5
 800beee:	f00f fbc1 	bl	801b674 <memcpy>
 800bef2:	2300      	movs	r3, #0
 800bef4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800bef8:	6821      	ldr	r1, [r4, #0]
 800befa:	4628      	mov	r0, r5
 800befc:	f7ff fbf0 	bl	800b6e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800bf00:	b203      	sxth	r3, r0
 800bf02:	e79e      	b.n	800be42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c0>

0800bf04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800bf04:	b510      	push	{r4, lr}
 800bf06:	2b02      	cmp	r3, #2
 800bf08:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bf0c:	d00b      	beq.n	800bf26 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800bf0e:	2b03      	cmp	r3, #3
 800bf10:	d00e      	beq.n	800bf30 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800bf12:	2b01      	cmp	r3, #1
 800bf14:	d001      	beq.n	800bf1a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800bf16:	1860      	adds	r0, r4, r1
 800bf18:	bd10      	pop	{r4, pc}
 800bf1a:	8880      	ldrh	r0, [r0, #4]
 800bf1c:	4420      	add	r0, r4
 800bf1e:	b200      	sxth	r0, r0
 800bf20:	1a80      	subs	r0, r0, r2
 800bf22:	3801      	subs	r0, #1
 800bf24:	e7f8      	b.n	800bf18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800bf26:	8880      	ldrh	r0, [r0, #4]
 800bf28:	4420      	add	r0, r4
 800bf2a:	b200      	sxth	r0, r0
 800bf2c:	1a40      	subs	r0, r0, r1
 800bf2e:	e7f8      	b.n	800bf22 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800bf30:	18a0      	adds	r0, r4, r2
 800bf32:	e7f1      	b.n	800bf18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800bf34 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800bf34:	b510      	push	{r4, lr}
 800bf36:	2b02      	cmp	r3, #2
 800bf38:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800bf3c:	d006      	beq.n	800bf4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800bf3e:	2b03      	cmp	r3, #3
 800bf40:	d00a      	beq.n	800bf58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800bf42:	2b01      	cmp	r3, #1
 800bf44:	bf14      	ite	ne
 800bf46:	18a0      	addne	r0, r4, r2
 800bf48:	1860      	addeq	r0, r4, r1
 800bf4a:	bd10      	pop	{r4, pc}
 800bf4c:	88c0      	ldrh	r0, [r0, #6]
 800bf4e:	4420      	add	r0, r4
 800bf50:	b200      	sxth	r0, r0
 800bf52:	1a80      	subs	r0, r0, r2
 800bf54:	3801      	subs	r0, #1
 800bf56:	e7f8      	b.n	800bf4a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800bf58:	88c0      	ldrh	r0, [r0, #6]
 800bf5a:	4420      	add	r0, r4
 800bf5c:	b200      	sxth	r0, r0
 800bf5e:	1a40      	subs	r0, r0, r1
 800bf60:	e7f8      	b.n	800bf54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800bf64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800bf64:	4b01      	ldr	r3, [pc, #4]	; (800bf6c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800bf66:	2200      	movs	r2, #0
 800bf68:	601a      	str	r2, [r3, #0]
 800bf6a:	4770      	bx	lr
 800bf6c:	2000a1a0 	.word	0x2000a1a0

0800bf70 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800bf70:	4603      	mov	r3, r0
 800bf72:	b1c8      	cbz	r0, 800bfa8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800bf74:	0c02      	lsrs	r2, r0, #16
 800bf76:	0412      	lsls	r2, r2, #16
 800bf78:	b9a2      	cbnz	r2, 800bfa4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800bf7a:	0403      	lsls	r3, r0, #16
 800bf7c:	2010      	movs	r0, #16
 800bf7e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800bf82:	bf04      	itt	eq
 800bf84:	021b      	lsleq	r3, r3, #8
 800bf86:	3008      	addeq	r0, #8
 800bf88:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800bf8c:	bf04      	itt	eq
 800bf8e:	011b      	lsleq	r3, r3, #4
 800bf90:	3004      	addeq	r0, #4
 800bf92:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800bf96:	bf04      	itt	eq
 800bf98:	009b      	lsleq	r3, r3, #2
 800bf9a:	3002      	addeq	r0, #2
 800bf9c:	2b00      	cmp	r3, #0
 800bf9e:	db04      	blt.n	800bfaa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800bfa0:	3001      	adds	r0, #1
 800bfa2:	4770      	bx	lr
 800bfa4:	2000      	movs	r0, #0
 800bfa6:	e7ea      	b.n	800bf7e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800bfa8:	2020      	movs	r0, #32
 800bfaa:	4770      	bx	lr

0800bfac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800bfac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfb0:	b087      	sub	sp, #28
 800bfb2:	4681      	mov	r9, r0
 800bfb4:	4698      	mov	r8, r3
 800bfb6:	4610      	mov	r0, r2
 800bfb8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800bfbc:	460d      	mov	r5, r1
 800bfbe:	b981      	cbnz	r1, 800bfe2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800bfc0:	b14b      	cbz	r3, 800bfd6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800bfc2:	460b      	mov	r3, r1
 800bfc4:	e9cd 4700 	strd	r4, r7, [sp]
 800bfc8:	464a      	mov	r2, r9
 800bfca:	4641      	mov	r1, r8
 800bfcc:	f7ff ffee 	bl	800bfac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bfd0:	b007      	add	sp, #28
 800bfd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfd6:	f04f 33ff 	mov.w	r3, #4294967295
 800bfda:	603b      	str	r3, [r7, #0]
 800bfdc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800bfe0:	e7f6      	b.n	800bfd0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800bfe2:	fa32 fa01 	lsrs.w	sl, r2, r1
 800bfe6:	d107      	bne.n	800bff8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800bfe8:	fb09 f602 	mul.w	r6, r9, r2
 800bfec:	fbb6 f0f4 	udiv	r0, r6, r4
 800bff0:	fb04 6610 	mls	r6, r4, r0, r6
 800bff4:	603e      	str	r6, [r7, #0]
 800bff6:	e7eb      	b.n	800bfd0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800bff8:	2601      	movs	r6, #1
 800bffa:	408e      	lsls	r6, r1
 800bffc:	3e01      	subs	r6, #1
 800bffe:	4016      	ands	r6, r2
 800c000:	fa09 fb01 	lsl.w	fp, r9, r1
 800c004:	4630      	mov	r0, r6
 800c006:	fbbb f3f4 	udiv	r3, fp, r4
 800c00a:	9302      	str	r3, [sp, #8]
 800c00c:	fb0a f303 	mul.w	r3, sl, r3
 800c010:	9303      	str	r3, [sp, #12]
 800c012:	f7ff ffad 	bl	800bf70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c016:	464a      	mov	r2, r9
 800c018:	460b      	mov	r3, r1
 800c01a:	e9cd 4700 	strd	r4, r7, [sp]
 800c01e:	4601      	mov	r1, r0
 800c020:	4630      	mov	r0, r6
 800c022:	f7ff ffc3 	bl	800bfac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c026:	9b02      	ldr	r3, [sp, #8]
 800c028:	fb04 bb13 	mls	fp, r4, r3, fp
 800c02c:	4606      	mov	r6, r0
 800c02e:	4658      	mov	r0, fp
 800c030:	eb05 0108 	add.w	r1, r5, r8
 800c034:	f7ff ff9c 	bl	800bf70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c038:	ab05      	add	r3, sp, #20
 800c03a:	e9cd 4300 	strd	r4, r3, [sp]
 800c03e:	465a      	mov	r2, fp
 800c040:	4603      	mov	r3, r0
 800c042:	4650      	mov	r0, sl
 800c044:	f7ff ffb2 	bl	800bfac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c048:	6839      	ldr	r1, [r7, #0]
 800c04a:	9a05      	ldr	r2, [sp, #20]
 800c04c:	9b03      	ldr	r3, [sp, #12]
 800c04e:	4411      	add	r1, r2
 800c050:	fbb1 f2f4 	udiv	r2, r1, r4
 800c054:	18d3      	adds	r3, r2, r3
 800c056:	441e      	add	r6, r3
 800c058:	fb04 1412 	mls	r4, r4, r2, r1
 800c05c:	4430      	add	r0, r6
 800c05e:	603c      	str	r4, [r7, #0]
 800c060:	e7b6      	b.n	800bfd0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c062 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c062:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c066:	b085      	sub	sp, #20
 800c068:	f1b0 0900 	subs.w	r9, r0, #0
 800c06c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c06e:	461d      	mov	r5, r3
 800c070:	bfbf      	itttt	lt
 800c072:	6823      	ldrlt	r3, [r4, #0]
 800c074:	425b      	neglt	r3, r3
 800c076:	f1c9 0900 	rsblt	r9, r9, #0
 800c07a:	6023      	strlt	r3, [r4, #0]
 800c07c:	bfb4      	ite	lt
 800c07e:	f04f 36ff 	movlt.w	r6, #4294967295
 800c082:	2601      	movge	r6, #1
 800c084:	2a00      	cmp	r2, #0
 800c086:	4617      	mov	r7, r2
 800c088:	da04      	bge.n	800c094 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c08a:	6823      	ldr	r3, [r4, #0]
 800c08c:	425b      	negs	r3, r3
 800c08e:	4257      	negs	r7, r2
 800c090:	4276      	negs	r6, r6
 800c092:	6023      	str	r3, [r4, #0]
 800c094:	2d00      	cmp	r5, #0
 800c096:	4638      	mov	r0, r7
 800c098:	bfba      	itte	lt
 800c09a:	426d      	neglt	r5, r5
 800c09c:	f04f 38ff 	movlt.w	r8, #4294967295
 800c0a0:	f04f 0801 	movge.w	r8, #1
 800c0a4:	f7ff ff64 	bl	800bf70 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c0a8:	ab03      	add	r3, sp, #12
 800c0aa:	e9cd 5300 	strd	r5, r3, [sp]
 800c0ae:	463a      	mov	r2, r7
 800c0b0:	4603      	mov	r3, r0
 800c0b2:	4648      	mov	r0, r9
 800c0b4:	f7ff ff7a 	bl	800bfac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c0b8:	6823      	ldr	r3, [r4, #0]
 800c0ba:	9a03      	ldr	r2, [sp, #12]
 800c0bc:	4546      	cmp	r6, r8
 800c0be:	441a      	add	r2, r3
 800c0c0:	fb92 f3f5 	sdiv	r3, r2, r5
 800c0c4:	4418      	add	r0, r3
 800c0c6:	bf18      	it	ne
 800c0c8:	4240      	negne	r0, r0
 800c0ca:	fb05 2313 	mls	r3, r5, r3, r2
 800c0ce:	1c72      	adds	r2, r6, #1
 800c0d0:	6023      	str	r3, [r4, #0]
 800c0d2:	d105      	bne.n	800c0e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c0d4:	2b00      	cmp	r3, #0
 800c0d6:	f1c3 0200 	rsb	r2, r3, #0
 800c0da:	db0b      	blt.n	800c0f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c0dc:	6022      	str	r2, [r4, #0]
 800c0de:	e006      	b.n	800c0ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c0e0:	2e01      	cmp	r6, #1
 800c0e2:	d104      	bne.n	800c0ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c0e4:	2b00      	cmp	r3, #0
 800c0e6:	da02      	bge.n	800c0ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c0e8:	442b      	add	r3, r5
 800c0ea:	3801      	subs	r0, #1
 800c0ec:	6023      	str	r3, [r4, #0]
 800c0ee:	b005      	add	sp, #20
 800c0f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c0f4:	3801      	subs	r0, #1
 800c0f6:	1b52      	subs	r2, r2, r5
 800c0f8:	e7f0      	b.n	800c0dc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c0fc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c0fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c100:	4c1c      	ldr	r4, [pc, #112]	; (800c174 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c102:	6807      	ldr	r7, [r0, #0]
 800c104:	69a3      	ldr	r3, [r4, #24]
 800c106:	4605      	mov	r5, r0
 800c108:	b92b      	cbnz	r3, 800c116 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c10a:	6840      	ldr	r0, [r0, #4]
 800c10c:	e9c5 7000 	strd	r7, r0, [r5]
 800c110:	b004      	add	sp, #16
 800c112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c116:	68a2      	ldr	r2, [r4, #8]
 800c118:	6820      	ldr	r0, [r4, #0]
 800c11a:	ae04      	add	r6, sp, #16
 800c11c:	f04f 0802 	mov.w	r8, #2
 800c120:	fb93 f1f8 	sdiv	r1, r3, r8
 800c124:	440a      	add	r2, r1
 800c126:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c12a:	69e1      	ldr	r1, [r4, #28]
 800c12c:	9600      	str	r6, [sp, #0]
 800c12e:	463a      	mov	r2, r7
 800c130:	f7ff ff97 	bl	800c062 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c134:	69a3      	ldr	r3, [r4, #24]
 800c136:	686a      	ldr	r2, [r5, #4]
 800c138:	6a21      	ldr	r1, [r4, #32]
 800c13a:	9600      	str	r6, [sp, #0]
 800c13c:	4607      	mov	r7, r0
 800c13e:	6860      	ldr	r0, [r4, #4]
 800c140:	f7ff ff8f 	bl	800c062 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c144:	6962      	ldr	r2, [r4, #20]
 800c146:	69a3      	ldr	r3, [r4, #24]
 800c148:	fb93 f8f8 	sdiv	r8, r3, r8
 800c14c:	4442      	add	r2, r8
 800c14e:	9203      	str	r2, [sp, #12]
 800c150:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c152:	682a      	ldr	r2, [r5, #0]
 800c154:	9600      	str	r6, [sp, #0]
 800c156:	4407      	add	r7, r0
 800c158:	68e0      	ldr	r0, [r4, #12]
 800c15a:	f7ff ff82 	bl	800c062 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c15e:	9600      	str	r6, [sp, #0]
 800c160:	4680      	mov	r8, r0
 800c162:	69a3      	ldr	r3, [r4, #24]
 800c164:	686a      	ldr	r2, [r5, #4]
 800c166:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c168:	6920      	ldr	r0, [r4, #16]
 800c16a:	f7ff ff7a 	bl	800c062 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c16e:	4440      	add	r0, r8
 800c170:	e7cc      	b.n	800c10c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c172:	bf00      	nop
 800c174:	2000a1a4 	.word	0x2000a1a4

0800c178 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c178:	b510      	push	{r4, lr}
 800c17a:	4b07      	ldr	r3, [pc, #28]	; (800c198 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c17c:	781b      	ldrb	r3, [r3, #0]
 800c17e:	2b01      	cmp	r3, #1
 800c180:	d108      	bne.n	800c194 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c182:	4b06      	ldr	r3, [pc, #24]	; (800c19c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c184:	880c      	ldrh	r4, [r1, #0]
 800c186:	881b      	ldrh	r3, [r3, #0]
 800c188:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c18c:	3b01      	subs	r3, #1
 800c18e:	1b1b      	subs	r3, r3, r4
 800c190:	8003      	strh	r3, [r0, #0]
 800c192:	800a      	strh	r2, [r1, #0]
 800c194:	bd10      	pop	{r4, pc}
 800c196:	bf00      	nop
 800c198:	2000a190 	.word	0x2000a190
 800c19c:	2000a194 	.word	0x2000a194

0800c1a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c1a0:	b510      	push	{r4, lr}
 800c1a2:	4b0a      	ldr	r3, [pc, #40]	; (800c1cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c1a4:	781b      	ldrb	r3, [r3, #0]
 800c1a6:	2b01      	cmp	r3, #1
 800c1a8:	d10e      	bne.n	800c1c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c1aa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c1ae:	8843      	ldrh	r3, [r0, #2]
 800c1b0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c1b4:	8044      	strh	r4, [r0, #2]
 800c1b6:	18ca      	adds	r2, r1, r3
 800c1b8:	4b05      	ldr	r3, [pc, #20]	; (800c1d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c1ba:	881b      	ldrh	r3, [r3, #0]
 800c1bc:	1a9b      	subs	r3, r3, r2
 800c1be:	8003      	strh	r3, [r0, #0]
 800c1c0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c1c4:	80c3      	strh	r3, [r0, #6]
 800c1c6:	8081      	strh	r1, [r0, #4]
 800c1c8:	bd10      	pop	{r4, pc}
 800c1ca:	bf00      	nop
 800c1cc:	2000a190 	.word	0x2000a190
 800c1d0:	2000a18c 	.word	0x2000a18c

0800c1d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c1d4:	b510      	push	{r4, lr}
 800c1d6:	4b07      	ldr	r3, [pc, #28]	; (800c1f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c1d8:	781b      	ldrb	r3, [r3, #0]
 800c1da:	2b01      	cmp	r3, #1
 800c1dc:	d108      	bne.n	800c1f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c1de:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c1e2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c1e6:	8003      	strh	r3, [r0, #0]
 800c1e8:	8893      	ldrh	r3, [r2, #4]
 800c1ea:	3b01      	subs	r3, #1
 800c1ec:	1b1b      	subs	r3, r3, r4
 800c1ee:	800b      	strh	r3, [r1, #0]
 800c1f0:	bd10      	pop	{r4, pc}
 800c1f2:	bf00      	nop
 800c1f4:	2000a190 	.word	0x2000a190

0800c1f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c1f8:	b513      	push	{r0, r1, r4, lr}
 800c1fa:	4b08      	ldr	r3, [pc, #32]	; (800c21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c1fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c200:	4b07      	ldr	r3, [pc, #28]	; (800c220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800c202:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c206:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c20a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c20e:	2400      	movs	r4, #0
 800c210:	466a      	mov	r2, sp
 800c212:	9400      	str	r4, [sp, #0]
 800c214:	f7ff ffde 	bl	800c1d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c218:	b002      	add	sp, #8
 800c21a:	bd10      	pop	{r4, pc}
 800c21c:	2000a18c 	.word	0x2000a18c
 800c220:	2000a18e 	.word	0x2000a18e

0800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c224:	b510      	push	{r4, lr}
 800c226:	4b0a      	ldr	r3, [pc, #40]	; (800c250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c228:	781b      	ldrb	r3, [r3, #0]
 800c22a:	2b01      	cmp	r3, #1
 800c22c:	460a      	mov	r2, r1
 800c22e:	d10d      	bne.n	800c24c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c230:	8881      	ldrh	r1, [r0, #4]
 800c232:	8803      	ldrh	r3, [r0, #0]
 800c234:	440b      	add	r3, r1
 800c236:	4601      	mov	r1, r0
 800c238:	3b01      	subs	r3, #1
 800c23a:	f821 3b02 	strh.w	r3, [r1], #2
 800c23e:	f7ff ffc9 	bl	800c1d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c242:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c246:	88c2      	ldrh	r2, [r0, #6]
 800c248:	8082      	strh	r2, [r0, #4]
 800c24a:	80c3      	strh	r3, [r0, #6]
 800c24c:	bd10      	pop	{r4, pc}
 800c24e:	bf00      	nop
 800c250:	2000a190 	.word	0x2000a190

0800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c254:	b507      	push	{r0, r1, r2, lr}
 800c256:	4b09      	ldr	r3, [pc, #36]	; (800c27c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c258:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c25c:	4b08      	ldr	r3, [pc, #32]	; (800c280 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800c25e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c262:	2100      	movs	r1, #0
 800c264:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c268:	9100      	str	r1, [sp, #0]
 800c26a:	4669      	mov	r1, sp
 800c26c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c270:	f7ff ffd8 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800c274:	b003      	add	sp, #12
 800c276:	f85d fb04 	ldr.w	pc, [sp], #4
 800c27a:	bf00      	nop
 800c27c:	2000a18c 	.word	0x2000a18c
 800c280:	2000a18e 	.word	0x2000a18e

0800c284 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c284:	4b06      	ldr	r3, [pc, #24]	; (800c2a0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c286:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c28a:	4b06      	ldr	r3, [pc, #24]	; (800c2a4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c28c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c290:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c294:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c298:	2100      	movs	r1, #0
 800c29a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c29e:	4770      	bx	lr
 800c2a0:	2000a18c 	.word	0x2000a18c
 800c2a4:	2000a18e 	.word	0x2000a18e

0800c2a8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c2a8:	4b03      	ldr	r3, [pc, #12]	; (800c2b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c2aa:	6818      	ldr	r0, [r3, #0]
 800c2ac:	b110      	cbz	r0, 800c2b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c2ae:	6803      	ldr	r3, [r0, #0]
 800c2b0:	699b      	ldr	r3, [r3, #24]
 800c2b2:	4718      	bx	r3
 800c2b4:	4770      	bx	lr
 800c2b6:	bf00      	nop
 800c2b8:	2000a1d4 	.word	0x2000a1d4

0800c2bc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c2bc:	4770      	bx	lr
	...

0800c2c0 <_ZN8touchgfx11Application4drawEv>:
 800c2c0:	b507      	push	{r0, r1, r2, lr}
 800c2c2:	4b09      	ldr	r3, [pc, #36]	; (800c2e8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c2c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c2c8:	4b08      	ldr	r3, [pc, #32]	; (800c2ec <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c2ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c2ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c2d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c2d6:	6803      	ldr	r3, [r0, #0]
 800c2d8:	2100      	movs	r1, #0
 800c2da:	9100      	str	r1, [sp, #0]
 800c2dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c2de:	4669      	mov	r1, sp
 800c2e0:	4798      	blx	r3
 800c2e2:	b003      	add	sp, #12
 800c2e4:	f85d fb04 	ldr.w	pc, [sp], #4
 800c2e8:	2000a18c 	.word	0x2000a18c
 800c2ec:	2000a18e 	.word	0x2000a18e

0800c2f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c2f0:	4b03      	ldr	r3, [pc, #12]	; (800c300 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c2f2:	6818      	ldr	r0, [r3, #0]
 800c2f4:	b110      	cbz	r0, 800c2fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c2f6:	6803      	ldr	r3, [r0, #0]
 800c2f8:	69db      	ldr	r3, [r3, #28]
 800c2fa:	4718      	bx	r3
 800c2fc:	4770      	bx	lr
 800c2fe:	bf00      	nop
 800c300:	2000a1d4 	.word	0x2000a1d4

0800c304 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c304:	4b03      	ldr	r3, [pc, #12]	; (800c314 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c306:	6818      	ldr	r0, [r3, #0]
 800c308:	b110      	cbz	r0, 800c310 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c30a:	6803      	ldr	r3, [r0, #0]
 800c30c:	6a1b      	ldr	r3, [r3, #32]
 800c30e:	4718      	bx	r3
 800c310:	4770      	bx	lr
 800c312:	bf00      	nop
 800c314:	2000a1d4 	.word	0x2000a1d4

0800c318 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c318:	4b03      	ldr	r3, [pc, #12]	; (800c328 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c31a:	6818      	ldr	r0, [r3, #0]
 800c31c:	b110      	cbz	r0, 800c324 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c31e:	6803      	ldr	r3, [r0, #0]
 800c320:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c322:	4718      	bx	r3
 800c324:	4770      	bx	lr
 800c326:	bf00      	nop
 800c328:	2000a1d4 	.word	0x2000a1d4

0800c32c <_ZN8touchgfx11Application15handleTickEventEv>:
 800c32c:	b570      	push	{r4, r5, r6, lr}
 800c32e:	4d34      	ldr	r5, [pc, #208]	; (800c400 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800c330:	4604      	mov	r4, r0
 800c332:	6828      	ldr	r0, [r5, #0]
 800c334:	b140      	cbz	r0, 800c348 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c336:	7a03      	ldrb	r3, [r0, #8]
 800c338:	b933      	cbnz	r3, 800c348 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c33a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c33e:	6803      	ldr	r3, [r0, #0]
 800c340:	689b      	ldr	r3, [r3, #8]
 800c342:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c346:	4718      	bx	r3
 800c348:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800c34c:	b97b      	cbnz	r3, 800c36e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c34e:	b170      	cbz	r0, 800c36e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c350:	7a03      	ldrb	r3, [r0, #8]
 800c352:	b163      	cbz	r3, 800c36e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c354:	4b2b      	ldr	r3, [pc, #172]	; (800c404 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800c356:	6818      	ldr	r0, [r3, #0]
 800c358:	b110      	cbz	r0, 800c360 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c35a:	6803      	ldr	r3, [r0, #0]
 800c35c:	691b      	ldr	r3, [r3, #16]
 800c35e:	4798      	blx	r3
 800c360:	6828      	ldr	r0, [r5, #0]
 800c362:	6803      	ldr	r3, [r0, #0]
 800c364:	68db      	ldr	r3, [r3, #12]
 800c366:	4798      	blx	r3
 800c368:	2301      	movs	r3, #1
 800c36a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c36e:	2500      	movs	r5, #0
 800c370:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c374:	42a8      	cmp	r0, r5
 800c376:	dd0c      	ble.n	800c392 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c378:	1963      	adds	r3, r4, r5
 800c37a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c37e:	b132      	cbz	r2, 800c38e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c380:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c384:	4413      	add	r3, r2
 800c386:	6858      	ldr	r0, [r3, #4]
 800c388:	6803      	ldr	r3, [r0, #0]
 800c38a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c38c:	4798      	blx	r3
 800c38e:	3501      	adds	r5, #1
 800c390:	e7ee      	b.n	800c370 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c392:	2300      	movs	r3, #0
 800c394:	461a      	mov	r2, r3
 800c396:	4298      	cmp	r0, r3
 800c398:	d114      	bne.n	800c3c4 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800c39a:	1d25      	adds	r5, r4, #4
 800c39c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c3a0:	1e48      	subs	r0, r1, #1
 800c3a2:	b280      	uxth	r0, r0
 800c3a4:	4291      	cmp	r1, r2
 800c3a6:	dd24      	ble.n	800c3f2 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800c3a8:	4288      	cmp	r0, r1
 800c3aa:	d2fb      	bcs.n	800c3a4 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800c3ac:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c3b0:	3304      	adds	r3, #4
 800c3b2:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c3b6:	428b      	cmp	r3, r1
 800c3b8:	d018      	beq.n	800c3ec <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c3ba:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c3be:	f843 6c04 	str.w	r6, [r3, #-4]
 800c3c2:	e7f8      	b.n	800c3b6 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800c3c4:	18e1      	adds	r1, r4, r3
 800c3c6:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c3ca:	b16d      	cbz	r5, 800c3e8 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800c3cc:	429a      	cmp	r2, r3
 800c3ce:	d00a      	beq.n	800c3e6 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800c3d0:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c3d4:	4431      	add	r1, r6
 800c3d6:	684e      	ldr	r6, [r1, #4]
 800c3d8:	b291      	uxth	r1, r2
 800c3da:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c3de:	604e      	str	r6, [r1, #4]
 800c3e0:	18a1      	adds	r1, r4, r2
 800c3e2:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c3e6:	3201      	adds	r2, #1
 800c3e8:	3301      	adds	r3, #1
 800c3ea:	e7d4      	b.n	800c396 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c3ec:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c3f0:	e7d4      	b.n	800c39c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c3f2:	4b04      	ldr	r3, [pc, #16]	; (800c404 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800c3f4:	6818      	ldr	r0, [r3, #0]
 800c3f6:	b110      	cbz	r0, 800c3fe <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800c3f8:	6803      	ldr	r3, [r0, #0]
 800c3fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3fc:	e7a1      	b.n	800c342 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c3fe:	bd70      	pop	{r4, r5, r6, pc}
 800c400:	2000a1d8 	.word	0x2000a1d8
 800c404:	2000a1d4 	.word	0x2000a1d4

0800c408 <_ZN8touchgfx11ApplicationD1Ev>:
 800c408:	4770      	bx	lr

0800c40a <_ZN8touchgfx11ApplicationD0Ev>:
 800c40a:	b510      	push	{r4, lr}
 800c40c:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c410:	4604      	mov	r4, r0
 800c412:	f00f f882 	bl	801b51a <_ZdlPvj>
 800c416:	4620      	mov	r0, r4
 800c418:	bd10      	pop	{r4, pc}
	...

0800c41c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c41c:	b570      	push	{r4, r5, r6, lr}
 800c41e:	4606      	mov	r6, r0
 800c420:	460c      	mov	r4, r1
 800c422:	b929      	cbnz	r1, 800c430 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c424:	4b0c      	ldr	r3, [pc, #48]	; (800c458 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c426:	4a0d      	ldr	r2, [pc, #52]	; (800c45c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c428:	480d      	ldr	r0, [pc, #52]	; (800c460 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c42a:	2167      	movs	r1, #103	; 0x67
 800c42c:	f00f f8a4 	bl	801b578 <__assert_func>
 800c430:	4d0c      	ldr	r5, [pc, #48]	; (800c464 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c432:	2300      	movs	r3, #0
 800c434:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c438:	6828      	ldr	r0, [r5, #0]
 800c43a:	b110      	cbz	r0, 800c442 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c43c:	6803      	ldr	r3, [r0, #0]
 800c43e:	695b      	ldr	r3, [r3, #20]
 800c440:	4798      	blx	r3
 800c442:	602c      	str	r4, [r5, #0]
 800c444:	6823      	ldr	r3, [r4, #0]
 800c446:	4620      	mov	r0, r4
 800c448:	68db      	ldr	r3, [r3, #12]
 800c44a:	4798      	blx	r3
 800c44c:	6833      	ldr	r3, [r6, #0]
 800c44e:	4630      	mov	r0, r6
 800c450:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c456:	4718      	bx	r3
 800c458:	0801e694 	.word	0x0801e694
 800c45c:	0801e78c 	.word	0x0801e78c
 800c460:	0801e69e 	.word	0x0801e69e
 800c464:	2000a1d4 	.word	0x2000a1d4

0800c468 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c468:	b510      	push	{r4, lr}
 800c46a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c46e:	888a      	ldrh	r2, [r1, #4]
 800c470:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c474:	4422      	add	r2, r4
 800c476:	b212      	sxth	r2, r2
 800c478:	4293      	cmp	r3, r2
 800c47a:	da15      	bge.n	800c4a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c47c:	8882      	ldrh	r2, [r0, #4]
 800c47e:	4413      	add	r3, r2
 800c480:	b21b      	sxth	r3, r3
 800c482:	429c      	cmp	r4, r3
 800c484:	da10      	bge.n	800c4a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c486:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c48a:	88c9      	ldrh	r1, [r1, #6]
 800c48c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c490:	4419      	add	r1, r3
 800c492:	b209      	sxth	r1, r1
 800c494:	428a      	cmp	r2, r1
 800c496:	da07      	bge.n	800c4a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c498:	88c0      	ldrh	r0, [r0, #6]
 800c49a:	4410      	add	r0, r2
 800c49c:	b200      	sxth	r0, r0
 800c49e:	4283      	cmp	r3, r0
 800c4a0:	bfac      	ite	ge
 800c4a2:	2000      	movge	r0, #0
 800c4a4:	2001      	movlt	r0, #1
 800c4a6:	bd10      	pop	{r4, pc}
 800c4a8:	2000      	movs	r0, #0
 800c4aa:	e7fc      	b.n	800c4a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c4ac <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c4ac:	b570      	push	{r4, r5, r6, lr}
 800c4ae:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c4b2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c4b6:	42ac      	cmp	r4, r5
 800c4b8:	db18      	blt.n	800c4ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c4ba:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c4be:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c4c2:	429a      	cmp	r2, r3
 800c4c4:	db12      	blt.n	800c4ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c4c6:	8886      	ldrh	r6, [r0, #4]
 800c4c8:	4435      	add	r5, r6
 800c4ca:	888e      	ldrh	r6, [r1, #4]
 800c4cc:	4434      	add	r4, r6
 800c4ce:	b22d      	sxth	r5, r5
 800c4d0:	b224      	sxth	r4, r4
 800c4d2:	42a5      	cmp	r5, r4
 800c4d4:	db0a      	blt.n	800c4ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c4d6:	88c0      	ldrh	r0, [r0, #6]
 800c4d8:	4418      	add	r0, r3
 800c4da:	88cb      	ldrh	r3, [r1, #6]
 800c4dc:	441a      	add	r2, r3
 800c4de:	b200      	sxth	r0, r0
 800c4e0:	b212      	sxth	r2, r2
 800c4e2:	4290      	cmp	r0, r2
 800c4e4:	bfb4      	ite	lt
 800c4e6:	2000      	movlt	r0, #0
 800c4e8:	2001      	movge	r0, #1
 800c4ea:	bd70      	pop	{r4, r5, r6, pc}
 800c4ec:	2000      	movs	r0, #0
 800c4ee:	e7fc      	b.n	800c4ea <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800c4f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c4f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4f2:	4604      	mov	r4, r0
 800c4f4:	4608      	mov	r0, r1
 800c4f6:	460d      	mov	r5, r1
 800c4f8:	f7fc ff99 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4fc:	b978      	cbnz	r0, 800c51e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c4fe:	4620      	mov	r0, r4
 800c500:	f7fc ff95 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c504:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c508:	b150      	cbz	r0, 800c520 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c50a:	8026      	strh	r6, [r4, #0]
 800c50c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c510:	8063      	strh	r3, [r4, #2]
 800c512:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c516:	80a3      	strh	r3, [r4, #4]
 800c518:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c51c:	80e3      	strh	r3, [r4, #6]
 800c51e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c520:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c524:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c528:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c52c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c530:	88ed      	ldrh	r5, [r5, #6]
 800c532:	42b1      	cmp	r1, r6
 800c534:	460f      	mov	r7, r1
 800c536:	bfa8      	it	ge
 800c538:	4637      	movge	r7, r6
 800c53a:	4293      	cmp	r3, r2
 800c53c:	4618      	mov	r0, r3
 800c53e:	4466      	add	r6, ip
 800c540:	bfa8      	it	ge
 800c542:	4610      	movge	r0, r2
 800c544:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c548:	8027      	strh	r7, [r4, #0]
 800c54a:	442a      	add	r2, r5
 800c54c:	88e5      	ldrh	r5, [r4, #6]
 800c54e:	8060      	strh	r0, [r4, #2]
 800c550:	4461      	add	r1, ip
 800c552:	442b      	add	r3, r5
 800c554:	b236      	sxth	r6, r6
 800c556:	b209      	sxth	r1, r1
 800c558:	b212      	sxth	r2, r2
 800c55a:	b21b      	sxth	r3, r3
 800c55c:	428e      	cmp	r6, r1
 800c55e:	bfac      	ite	ge
 800c560:	ebc7 0106 	rsbge	r1, r7, r6
 800c564:	ebc7 0101 	rsblt	r1, r7, r1
 800c568:	429a      	cmp	r2, r3
 800c56a:	bfac      	ite	ge
 800c56c:	ebc0 0202 	rsbge	r2, r0, r2
 800c570:	ebc0 0203 	rsblt	r2, r0, r3
 800c574:	80a1      	strh	r1, [r4, #4]
 800c576:	80e2      	strh	r2, [r4, #6]
 800c578:	e7d1      	b.n	800c51e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c57c <_ZN8touchgfx11Application11getInstanceEv>:
 800c57c:	4b01      	ldr	r3, [pc, #4]	; (800c584 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c57e:	6818      	ldr	r0, [r3, #0]
 800c580:	4770      	bx	lr
 800c582:	bf00      	nop
 800c584:	2000a1e4 	.word	0x2000a1e4

0800c588 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800c588:	b570      	push	{r4, r5, r6, lr}
 800c58a:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800c58e:	1d04      	adds	r4, r0, #4
 800c590:	2200      	movs	r2, #0
 800c592:	b295      	uxth	r5, r2
 800c594:	42ab      	cmp	r3, r5
 800c596:	d90f      	bls.n	800c5b8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800c598:	f854 6b04 	ldr.w	r6, [r4], #4
 800c59c:	428e      	cmp	r6, r1
 800c59e:	4615      	mov	r5, r2
 800c5a0:	f102 0201 	add.w	r2, r2, #1
 800c5a4:	d1f5      	bne.n	800c592 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800c5a6:	4428      	add	r0, r5
 800c5a8:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800c5ac:	2bff      	cmp	r3, #255	; 0xff
 800c5ae:	d002      	beq.n	800c5b6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800c5b0:	3301      	adds	r3, #1
 800c5b2:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800c5b6:	bd70      	pop	{r4, r5, r6, pc}
 800c5b8:	2b20      	cmp	r3, #32
 800c5ba:	d106      	bne.n	800c5ca <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800c5bc:	4b08      	ldr	r3, [pc, #32]	; (800c5e0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800c5be:	4a09      	ldr	r2, [pc, #36]	; (800c5e4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800c5c0:	4809      	ldr	r0, [pc, #36]	; (800c5e8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800c5c2:	f240 215f 	movw	r1, #607	; 0x25f
 800c5c6:	f00e ffd7 	bl	801b578 <__assert_func>
 800c5ca:	18c2      	adds	r2, r0, r3
 800c5cc:	2401      	movs	r4, #1
 800c5ce:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800c5d2:	191a      	adds	r2, r3, r4
 800c5d4:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800c5d8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c5dc:	6041      	str	r1, [r0, #4]
 800c5de:	e7ea      	b.n	800c5b6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800c5e0:	0801e6c8 	.word	0x0801e6c8
 800c5e4:	0801e7d0 	.word	0x0801e7d0
 800c5e8:	0801e69e 	.word	0x0801e69e

0800c5ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800c5ec:	b570      	push	{r4, r5, r6, lr}
 800c5ee:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800c5f2:	1d04      	adds	r4, r0, #4
 800c5f4:	2300      	movs	r3, #0
 800c5f6:	b29a      	uxth	r2, r3
 800c5f8:	4296      	cmp	r6, r2
 800c5fa:	d90a      	bls.n	800c612 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800c5fc:	f854 2b04 	ldr.w	r2, [r4], #4
 800c600:	428a      	cmp	r2, r1
 800c602:	d107      	bne.n	800c614 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800c604:	18c5      	adds	r5, r0, r3
 800c606:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800c60a:	b11a      	cbz	r2, 800c614 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800c60c:	3a01      	subs	r2, #1
 800c60e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800c612:	bd70      	pop	{r4, r5, r6, pc}
 800c614:	3301      	adds	r3, #1
 800c616:	e7ee      	b.n	800c5f6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800c618 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800c618:	2300      	movs	r3, #0
 800c61a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c61e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800c622:	30a8      	adds	r0, #168	; 0xa8
 800c624:	f802 3b01 	strb.w	r3, [r2], #1
 800c628:	4282      	cmp	r2, r0
 800c62a:	d1fb      	bne.n	800c624 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800c62c:	4770      	bx	lr

0800c62e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c62e:	4603      	mov	r3, r0
 800c630:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800c634:	2200      	movs	r2, #0
 800c636:	801a      	strh	r2, [r3, #0]
 800c638:	805a      	strh	r2, [r3, #2]
 800c63a:	809a      	strh	r2, [r3, #4]
 800c63c:	80da      	strh	r2, [r3, #6]
 800c63e:	3308      	adds	r3, #8
 800c640:	428b      	cmp	r3, r1
 800c642:	d1f8      	bne.n	800c636 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c644:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c648:	4770      	bx	lr
	...

0800c64c <_ZN8touchgfx11ApplicationC1Ev>:
 800c64c:	b570      	push	{r4, r5, r6, lr}
 800c64e:	4b1a      	ldr	r3, [pc, #104]	; (800c6b8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800c650:	6003      	str	r3, [r0, #0]
 800c652:	2500      	movs	r5, #0
 800c654:	4604      	mov	r4, r0
 800c656:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800c65a:	30a8      	adds	r0, #168	; 0xa8
 800c65c:	f7ff ffe7 	bl	800c62e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c660:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800c664:	f7ff ffe3 	bl	800c62e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c668:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800c66c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800c670:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800c674:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800c678:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800c67c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800c680:	490e      	ldr	r1, [pc, #56]	; (800c6bc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800c682:	480f      	ldr	r0, [pc, #60]	; (800c6c0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800c684:	4e0f      	ldr	r6, [pc, #60]	; (800c6c4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800c686:	f00e fe3b 	bl	801b300 <CRC_Lock>
 800c68a:	4b0f      	ldr	r3, [pc, #60]	; (800c6c8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800c68c:	b158      	cbz	r0, 800c6a6 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800c68e:	801d      	strh	r5, [r3, #0]
 800c690:	4a0e      	ldr	r2, [pc, #56]	; (800c6cc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800c692:	2300      	movs	r3, #0
 800c694:	6013      	str	r3, [r2, #0]
 800c696:	4a0e      	ldr	r2, [pc, #56]	; (800c6d0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800c698:	6033      	str	r3, [r6, #0]
 800c69a:	4620      	mov	r0, r4
 800c69c:	6013      	str	r3, [r2, #0]
 800c69e:	f7ff ffbb 	bl	800c618 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800c6a2:	4620      	mov	r0, r4
 800c6a4:	bd70      	pop	{r4, r5, r6, pc}
 800c6a6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c6aa:	2002      	movs	r0, #2
 800c6ac:	801a      	strh	r2, [r3, #0]
 800c6ae:	6030      	str	r0, [r6, #0]
 800c6b0:	f001 fb24 	bl	800dcfc <_ZN8touchgfx6Screen4drawEv>
 800c6b4:	e7ec      	b.n	800c690 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800c6b6:	bf00      	nop
 800c6b8:	0801e750 	.word	0x0801e750
 800c6bc:	b5e8b5cd 	.word	0xb5e8b5cd
 800c6c0:	f407a5c2 	.word	0xf407a5c2
 800c6c4:	2000a1d4 	.word	0x2000a1d4
 800c6c8:	20000060 	.word	0x20000060
 800c6cc:	2000a1e4 	.word	0x2000a1e4
 800c6d0:	2000a1d8 	.word	0x2000a1d8

0800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800c6d4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800c6d8:	428b      	cmp	r3, r1
 800c6da:	b510      	push	{r4, lr}
 800c6dc:	d90e      	bls.n	800c6fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800c6de:	3b01      	subs	r3, #1
 800c6e0:	b29b      	uxth	r3, r3
 800c6e2:	428b      	cmp	r3, r1
 800c6e4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800c6e8:	d908      	bls.n	800c6fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800c6ea:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800c6ee:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800c6f2:	681a      	ldr	r2, [r3, #0]
 800c6f4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800c6f8:	685a      	ldr	r2, [r3, #4]
 800c6fa:	6062      	str	r2, [r4, #4]
 800c6fc:	bd10      	pop	{r4, pc}
	...

0800c700 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800c700:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c702:	466b      	mov	r3, sp
 800c704:	e883 0006 	stmia.w	r3, {r1, r2}
 800c708:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800c70c:	2a07      	cmp	r2, #7
 800c70e:	4604      	mov	r4, r0
 800c710:	d906      	bls.n	800c720 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800c712:	4b09      	ldr	r3, [pc, #36]	; (800c738 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800c714:	4a09      	ldr	r2, [pc, #36]	; (800c73c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800c716:	480a      	ldr	r0, [pc, #40]	; (800c740 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800c718:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800c71c:	f00e ff2c 	bl	801b578 <__assert_func>
 800c720:	1c51      	adds	r1, r2, #1
 800c722:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800c726:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800c72a:	cb03      	ldmia	r3!, {r0, r1}
 800c72c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800c730:	6069      	str	r1, [r5, #4]
 800c732:	b003      	add	sp, #12
 800c734:	bd30      	pop	{r4, r5, pc}
 800c736:	bf00      	nop
 800c738:	0801e6f0 	.word	0x0801e6f0
 800c73c:	0801e815 	.word	0x0801e815
 800c740:	0801e71f 	.word	0x0801e71f

0800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800c744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c748:	b08d      	sub	sp, #52	; 0x34
 800c74a:	ac08      	add	r4, sp, #32
 800c74c:	4683      	mov	fp, r0
 800c74e:	4620      	mov	r0, r4
 800c750:	e884 0006 	stmia.w	r4, {r1, r2}
 800c754:	f7fc fe6b 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c758:	2800      	cmp	r0, #0
 800c75a:	d16a      	bne.n	800c832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c75c:	9402      	str	r4, [sp, #8]
 800c75e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c762:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800c766:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800c76a:	2400      	movs	r4, #0
 800c76c:	9301      	str	r3, [sp, #4]
 800c76e:	36a0      	adds	r6, #160	; 0xa0
 800c770:	42a5      	cmp	r5, r4
 800c772:	d00d      	beq.n	800c790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800c774:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800c778:	9802      	ldr	r0, [sp, #8]
 800c77a:	f7ff fe97 	bl	800c4ac <_ZNK8touchgfx4Rect8includesERKS0_>
 800c77e:	b128      	cbz	r0, 800c78c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800c780:	1e69      	subs	r1, r5, #1
 800c782:	1b09      	subs	r1, r1, r4
 800c784:	b289      	uxth	r1, r1
 800c786:	9801      	ldr	r0, [sp, #4]
 800c788:	f7ff ffa4 	bl	800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c78c:	3401      	adds	r4, #1
 800c78e:	e7ef      	b.n	800c770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c790:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800c794:	9703      	str	r7, [sp, #12]
 800c796:	1e7b      	subs	r3, r7, #1
 800c798:	9300      	str	r3, [sp, #0]
 800c79a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800c79e:	2400      	movs	r4, #0
 800c7a0:	4655      	mov	r5, sl
 800c7a2:	9704      	str	r7, [sp, #16]
 800c7a4:	4626      	mov	r6, r4
 800c7a6:	9b04      	ldr	r3, [sp, #16]
 800c7a8:	2b00      	cmp	r3, #0
 800c7aa:	d078      	beq.n	800c89e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800c7ac:	9902      	ldr	r1, [sp, #8]
 800c7ae:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c7b2:	f7ff fe59 	bl	800c468 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c7b6:	b360      	cbz	r0, 800c812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800c7b8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800c7bc:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800c7c0:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800c7c4:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800c7c8:	45e6      	cmp	lr, ip
 800c7ca:	db35      	blt.n	800c838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800c7cc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c7d0:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c7d4:	4472      	add	r2, lr
 800c7d6:	4463      	add	r3, ip
 800c7d8:	b212      	sxth	r2, r2
 800c7da:	b21b      	sxth	r3, r3
 800c7dc:	429a      	cmp	r2, r3
 800c7de:	dc2b      	bgt.n	800c838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800c7e0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c7e4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c7e8:	fa1f f288 	uxth.w	r2, r8
 800c7ec:	4413      	add	r3, r2
 800c7ee:	b29b      	uxth	r3, r3
 800c7f0:	45c1      	cmp	r9, r8
 800c7f2:	fa0f fe83 	sxth.w	lr, r3
 800c7f6:	fa1f fc89 	uxth.w	ip, r9
 800c7fa:	db0f      	blt.n	800c81c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800c7fc:	eba3 030c 	sub.w	r3, r3, ip
 800c800:	1ac9      	subs	r1, r1, r3
 800c802:	b209      	sxth	r1, r1
 800c804:	2900      	cmp	r1, #0
 800c806:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c80a:	dd12      	ble.n	800c832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c80c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800c810:	4604      	mov	r4, r0
 800c812:	9b04      	ldr	r3, [sp, #16]
 800c814:	3b01      	subs	r3, #1
 800c816:	9304      	str	r3, [sp, #16]
 800c818:	3d08      	subs	r5, #8
 800c81a:	e7c4      	b.n	800c7a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800c81c:	4461      	add	r1, ip
 800c81e:	b209      	sxth	r1, r1
 800c820:	4571      	cmp	r1, lr
 800c822:	dc3a      	bgt.n	800c89a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c824:	eba2 020c 	sub.w	r2, r2, ip
 800c828:	b212      	sxth	r2, r2
 800c82a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c82e:	2a00      	cmp	r2, #0
 800c830:	dcee      	bgt.n	800c810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800c832:	b00d      	add	sp, #52	; 0x34
 800c834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c838:	45c1      	cmp	r9, r8
 800c83a:	db2e      	blt.n	800c89a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c83c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800c840:	4499      	add	r9, r3
 800c842:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c846:	4498      	add	r8, r3
 800c848:	fa0f f989 	sxth.w	r9, r9
 800c84c:	fa0f f888 	sxth.w	r8, r8
 800c850:	45c1      	cmp	r9, r8
 800c852:	dc22      	bgt.n	800c89a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c854:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c858:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800c85c:	fa1f f28c 	uxth.w	r2, ip
 800c860:	4413      	add	r3, r2
 800c862:	b29b      	uxth	r3, r3
 800c864:	45e6      	cmp	lr, ip
 800c866:	fa1f f88e 	uxth.w	r8, lr
 800c86a:	fa0f f983 	sxth.w	r9, r3
 800c86e:	db0a      	blt.n	800c886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800c870:	eba3 0308 	sub.w	r3, r3, r8
 800c874:	1ac9      	subs	r1, r1, r3
 800c876:	b209      	sxth	r1, r1
 800c878:	2900      	cmp	r1, #0
 800c87a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c87e:	ddd8      	ble.n	800c832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c880:	f8ad 9020 	strh.w	r9, [sp, #32]
 800c884:	e7c4      	b.n	800c810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800c886:	4441      	add	r1, r8
 800c888:	b209      	sxth	r1, r1
 800c88a:	4549      	cmp	r1, r9
 800c88c:	dc05      	bgt.n	800c89a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800c88e:	eba2 0208 	sub.w	r2, r2, r8
 800c892:	b212      	sxth	r2, r2
 800c894:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800c898:	e7c9      	b.n	800c82e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800c89a:	4606      	mov	r6, r0
 800c89c:	e7b9      	b.n	800c812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800c89e:	2c00      	cmp	r4, #0
 800c8a0:	f47f af7d 	bne.w	800c79e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800c8a4:	2e00      	cmp	r6, #0
 800c8a6:	f000 81dd 	beq.w	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c8aa:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800c8ae:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800c8b2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c8b6:	b2b9      	uxth	r1, r7
 800c8b8:	9104      	str	r1, [sp, #16]
 800c8ba:	9804      	ldr	r0, [sp, #16]
 800c8bc:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c8c0:	4401      	add	r1, r0
 800c8c2:	b2b3      	uxth	r3, r6
 800c8c4:	b289      	uxth	r1, r1
 800c8c6:	441a      	add	r2, r3
 800c8c8:	9105      	str	r1, [sp, #20]
 800c8ca:	b292      	uxth	r2, r2
 800c8cc:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800c8d0:	fa0f f882 	sxth.w	r8, r2
 800c8d4:	4655      	mov	r5, sl
 800c8d6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800c8da:	9b03      	ldr	r3, [sp, #12]
 800c8dc:	2b00      	cmp	r3, #0
 800c8de:	d054      	beq.n	800c98a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800c8e0:	9902      	ldr	r1, [sp, #8]
 800c8e2:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c8e6:	f7ff fdbf 	bl	800c468 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c8ea:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c8ee:	b1d8      	cbz	r0, 800c928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c8f0:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800c8f4:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800c8f8:	4576      	cmp	r6, lr
 800c8fa:	dc26      	bgt.n	800c94a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c8fc:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800c900:	44f4      	add	ip, lr
 800c902:	fa0f fc8c 	sxth.w	ip, ip
 800c906:	45e0      	cmp	r8, ip
 800c908:	db1f      	blt.n	800c94a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800c90a:	428f      	cmp	r7, r1
 800c90c:	fa1f fc81 	uxth.w	ip, r1
 800c910:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800c914:	dc0f      	bgt.n	800c936 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800c916:	9805      	ldr	r0, [sp, #20]
 800c918:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800c91c:	eba0 0c0c 	sub.w	ip, r0, ip
 800c920:	eba1 010c 	sub.w	r1, r1, ip
 800c924:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800c928:	4620      	mov	r0, r4
 800c92a:	9903      	ldr	r1, [sp, #12]
 800c92c:	3901      	subs	r1, #1
 800c92e:	9103      	str	r1, [sp, #12]
 800c930:	3d08      	subs	r5, #8
 800c932:	4604      	mov	r4, r0
 800c934:	e7cf      	b.n	800c8d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800c936:	4461      	add	r1, ip
 800c938:	b209      	sxth	r1, r1
 800c93a:	4549      	cmp	r1, r9
 800c93c:	dcf5      	bgt.n	800c92a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c93e:	9904      	ldr	r1, [sp, #16]
 800c940:	eba1 0c0c 	sub.w	ip, r1, ip
 800c944:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800c948:	e7ee      	b.n	800c928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c94a:	428f      	cmp	r7, r1
 800c94c:	dced      	bgt.n	800c92a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c94e:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800c952:	4461      	add	r1, ip
 800c954:	b209      	sxth	r1, r1
 800c956:	4589      	cmp	r9, r1
 800c958:	dbe7      	blt.n	800c92a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c95a:	4576      	cmp	r6, lr
 800c95c:	fa1f fc8e 	uxth.w	ip, lr
 800c960:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800c964:	dc08      	bgt.n	800c978 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800c966:	eba2 0c0c 	sub.w	ip, r2, ip
 800c96a:	eba1 010c 	sub.w	r1, r1, ip
 800c96e:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800c972:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800c976:	e7d7      	b.n	800c928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c978:	4461      	add	r1, ip
 800c97a:	b209      	sxth	r1, r1
 800c97c:	4588      	cmp	r8, r1
 800c97e:	dbd4      	blt.n	800c92a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c980:	eba3 0c0c 	sub.w	ip, r3, ip
 800c984:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800c988:	e7ce      	b.n	800c928 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c98a:	2c00      	cmp	r4, #0
 800c98c:	f000 816a 	beq.w	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c990:	9b00      	ldr	r3, [sp, #0]
 800c992:	3301      	adds	r3, #1
 800c994:	f000 8166 	beq.w	800cc64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c998:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800c99c:	4621      	mov	r1, r4
 800c99e:	9802      	ldr	r0, [sp, #8]
 800c9a0:	f7ff fd84 	bl	800c4ac <_ZNK8touchgfx4Rect8includesERKS0_>
 800c9a4:	b120      	cbz	r0, 800c9b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800c9a6:	f8bd 1000 	ldrh.w	r1, [sp]
 800c9aa:	9801      	ldr	r0, [sp, #4]
 800c9ac:	f7ff fe92 	bl	800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c9b0:	9902      	ldr	r1, [sp, #8]
 800c9b2:	4620      	mov	r0, r4
 800c9b4:	f7ff fd58 	bl	800c468 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c9b8:	2800      	cmp	r0, #0
 800c9ba:	f000 809b 	beq.w	800caf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800c9be:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800c9c2:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800c9c6:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800c9ca:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800c9ce:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800c9d2:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800c9d6:	fa1f f288 	uxth.w	r2, r8
 800c9da:	19d5      	adds	r5, r2, r7
 800c9dc:	fa1f f985 	uxth.w	r9, r5
 800c9e0:	fa0f f589 	sxth.w	r5, r9
 800c9e4:	b2a1      	uxth	r1, r4
 800c9e6:	440b      	add	r3, r1
 800c9e8:	9503      	str	r5, [sp, #12]
 800c9ea:	45a0      	cmp	r8, r4
 800c9ec:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c9f0:	9507      	str	r5, [sp, #28]
 800c9f2:	b29b      	uxth	r3, r3
 800c9f4:	f340 809d 	ble.w	800cb32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800c9f8:	1a52      	subs	r2, r2, r1
 800c9fa:	b292      	uxth	r2, r2
 800c9fc:	4584      	cmp	ip, r0
 800c9fe:	fa0f fe83 	sxth.w	lr, r3
 800ca02:	b215      	sxth	r5, r2
 800ca04:	dd2f      	ble.n	800ca66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800ca06:	9e00      	ldr	r6, [sp, #0]
 800ca08:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800ca0c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800ca10:	9e03      	ldr	r6, [sp, #12]
 800ca12:	eba6 060e 	sub.w	r6, r6, lr
 800ca16:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800ca1a:	fa1f fc8c 	uxth.w	ip, ip
 800ca1e:	b280      	uxth	r0, r0
 800ca20:	ebac 0300 	sub.w	r3, ip, r0
 800ca24:	448c      	add	ip, r1
 800ca26:	4470      	add	r0, lr
 800ca28:	b29b      	uxth	r3, r3
 800ca2a:	fa0f fc8c 	sxth.w	ip, ip
 800ca2e:	b200      	sxth	r0, r0
 800ca30:	b21c      	sxth	r4, r3
 800ca32:	ebac 0000 	sub.w	r0, ip, r0
 800ca36:	4366      	muls	r6, r4
 800ca38:	4368      	muls	r0, r5
 800ca3a:	4286      	cmp	r6, r0
 800ca3c:	db09      	blt.n	800ca52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800ca3e:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800ca42:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800ca46:	4417      	add	r7, r2
 800ca48:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ca4c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800ca50:	e685      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ca52:	440b      	add	r3, r1
 800ca54:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ca58:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800ca5c:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800ca60:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ca64:	e67b      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ca66:	9e03      	ldr	r6, [sp, #12]
 800ca68:	45b6      	cmp	lr, r6
 800ca6a:	da28      	bge.n	800cabe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800ca6c:	9b00      	ldr	r3, [sp, #0]
 800ca6e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800ca72:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800ca76:	eb04 030c 	add.w	r3, r4, ip
 800ca7a:	fa1f f883 	uxth.w	r8, r3
 800ca7e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800ca82:	4403      	add	r3, r0
 800ca84:	eba3 0308 	sub.w	r3, r3, r8
 800ca88:	b29b      	uxth	r3, r3
 800ca8a:	fa0f f988 	sxth.w	r9, r8
 800ca8e:	eba0 000c 	sub.w	r0, r0, ip
 800ca92:	fa0f f883 	sxth.w	r8, r3
 800ca96:	eba6 060e 	sub.w	r6, r6, lr
 800ca9a:	4368      	muls	r0, r5
 800ca9c:	fb08 f606 	mul.w	r6, r8, r6
 800caa0:	42b0      	cmp	r0, r6
 800caa2:	dc06      	bgt.n	800cab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800caa4:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800caa8:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800caac:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800cab0:	e7c9      	b.n	800ca46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800cab2:	4423      	add	r3, r4
 800cab4:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800cab8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cabc:	e64f      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cabe:	9807      	ldr	r0, [sp, #28]
 800cac0:	eba3 0309 	sub.w	r3, r3, r9
 800cac4:	b29b      	uxth	r3, r3
 800cac6:	2806      	cmp	r0, #6
 800cac8:	fa0f fc83 	sxth.w	ip, r3
 800cacc:	d818      	bhi.n	800cb00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800cace:	4652      	mov	r2, sl
 800cad0:	ab0a      	add	r3, sp, #40	; 0x28
 800cad2:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800cad6:	6851      	ldr	r1, [r2, #4]
 800cad8:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800cadc:	c303      	stmia	r3!, {r0, r1}
 800cade:	9b03      	ldr	r3, [sp, #12]
 800cae0:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800cae4:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800cae8:	ab0a      	add	r3, sp, #40	; 0x28
 800caea:	e893 0006 	ldmia.w	r3, {r1, r2}
 800caee:	9801      	ldr	r0, [sp, #4]
 800caf0:	f7ff fe06 	bl	800c700 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800caf4:	9b00      	ldr	r3, [sp, #0]
 800caf6:	3b01      	subs	r3, #1
 800caf8:	9300      	str	r3, [sp, #0]
 800cafa:	f1aa 0a08 	sub.w	sl, sl, #8
 800cafe:	e747      	b.n	800c990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800cb00:	9800      	ldr	r0, [sp, #0]
 800cb02:	45ac      	cmp	ip, r5
 800cb04:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cb08:	db0c      	blt.n	800cb24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800cb0a:	4417      	add	r7, r2
 800cb0c:	b2bf      	uxth	r7, r7
 800cb0e:	4458      	add	r0, fp
 800cb10:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cb14:	440f      	add	r7, r1
 800cb16:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cb1a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cb1e:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800cb22:	e61c      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cb24:	4458      	add	r0, fp
 800cb26:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800cb2a:	443b      	add	r3, r7
 800cb2c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cb30:	e615      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cb32:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cb36:	fa1f f18c 	uxth.w	r1, ip
 800cb3a:	eb01 0e05 	add.w	lr, r1, r5
 800cb3e:	b282      	uxth	r2, r0
 800cb40:	fa1f fe8e 	uxth.w	lr, lr
 800cb44:	9204      	str	r2, [sp, #16]
 800cb46:	fa0f f28e 	sxth.w	r2, lr
 800cb4a:	9205      	str	r2, [sp, #20]
 800cb4c:	9e04      	ldr	r6, [sp, #16]
 800cb4e:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cb52:	4432      	add	r2, r6
 800cb54:	b292      	uxth	r2, r2
 800cb56:	4584      	cmp	ip, r0
 800cb58:	9206      	str	r2, [sp, #24]
 800cb5a:	da26      	bge.n	800cbaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800cb5c:	eba3 0309 	sub.w	r3, r3, r9
 800cb60:	eba2 020e 	sub.w	r2, r2, lr
 800cb64:	b29b      	uxth	r3, r3
 800cb66:	b292      	uxth	r2, r2
 800cb68:	fa0f fa83 	sxth.w	sl, r3
 800cb6c:	b211      	sxth	r1, r2
 800cb6e:	eba0 000c 	sub.w	r0, r0, ip
 800cb72:	eba4 0408 	sub.w	r4, r4, r8
 800cb76:	fb0a f000 	mul.w	r0, sl, r0
 800cb7a:	434c      	muls	r4, r1
 800cb7c:	42a0      	cmp	r0, r4
 800cb7e:	9800      	ldr	r0, [sp, #0]
 800cb80:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cb84:	dc06      	bgt.n	800cb94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800cb86:	4458      	add	r0, fp
 800cb88:	9a05      	ldr	r2, [sp, #20]
 800cb8a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800cb8e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800cb92:	e7ca      	b.n	800cb2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cb94:	eb0b 0300 	add.w	r3, fp, r0
 800cb98:	9903      	ldr	r1, [sp, #12]
 800cb9a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800cb9e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800cba2:	442a      	add	r2, r5
 800cba4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cba8:	e5d9      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cbaa:	9e04      	ldr	r6, [sp, #16]
 800cbac:	9a03      	ldr	r2, [sp, #12]
 800cbae:	1b89      	subs	r1, r1, r6
 800cbb0:	b21e      	sxth	r6, r3
 800cbb2:	b289      	uxth	r1, r1
 800cbb4:	4296      	cmp	r6, r2
 800cbb6:	fa0f fc81 	sxth.w	ip, r1
 800cbba:	dd26      	ble.n	800cc0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800cbbc:	eba3 0309 	sub.w	r3, r3, r9
 800cbc0:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800cbc4:	9e05      	ldr	r6, [sp, #20]
 800cbc6:	b29b      	uxth	r3, r3
 800cbc8:	eba6 0902 	sub.w	r9, r6, r2
 800cbcc:	b218      	sxth	r0, r3
 800cbce:	eba4 0408 	sub.w	r4, r4, r8
 800cbd2:	fb0c f404 	mul.w	r4, ip, r4
 800cbd6:	fb00 f909 	mul.w	r9, r0, r9
 800cbda:	9a00      	ldr	r2, [sp, #0]
 800cbdc:	454c      	cmp	r4, r9
 800cbde:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cbe2:	db03      	blt.n	800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800cbe4:	445a      	add	r2, fp
 800cbe6:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800cbea:	e79e      	b.n	800cb2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cbec:	eb0b 0302 	add.w	r3, fp, r2
 800cbf0:	9a03      	ldr	r2, [sp, #12]
 800cbf2:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800cbf6:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800cbfa:	4429      	add	r1, r5
 800cbfc:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800cc00:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cc04:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cc08:	e5a9      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cc0a:	9b06      	ldr	r3, [sp, #24]
 800cc0c:	9c07      	ldr	r4, [sp, #28]
 800cc0e:	eba3 020e 	sub.w	r2, r3, lr
 800cc12:	b292      	uxth	r2, r2
 800cc14:	2c06      	cmp	r4, #6
 800cc16:	b213      	sxth	r3, r2
 800cc18:	d80d      	bhi.n	800cc36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800cc1a:	4651      	mov	r1, sl
 800cc1c:	aa0a      	add	r2, sp, #40	; 0x28
 800cc1e:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800cc22:	6849      	ldr	r1, [r1, #4]
 800cc24:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800cc28:	9b05      	ldr	r3, [sp, #20]
 800cc2a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800cc2e:	c203      	stmia	r2!, {r0, r1}
 800cc30:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800cc34:	e758      	b.n	800cae8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800cc36:	9c00      	ldr	r4, [sp, #0]
 800cc38:	4563      	cmp	r3, ip
 800cc3a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800cc3e:	db0d      	blt.n	800cc5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800cc40:	4429      	add	r1, r5
 800cc42:	9a04      	ldr	r2, [sp, #16]
 800cc44:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cc48:	b289      	uxth	r1, r1
 800cc4a:	445c      	add	r4, fp
 800cc4c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cc50:	4411      	add	r1, r2
 800cc52:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800cc56:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800cc5a:	e580      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cc5c:	445c      	add	r4, fp
 800cc5e:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800cc62:	e79e      	b.n	800cba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800cc64:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cc68:	2f07      	cmp	r7, #7
 800cc6a:	d806      	bhi.n	800cc7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800cc6c:	ab08      	add	r3, sp, #32
 800cc6e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cc72:	9801      	ldr	r0, [sp, #4]
 800cc74:	f7ff fd44 	bl	800c700 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cc78:	e5db      	b.n	800c832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cc7a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cc7e:	f107 39ff 	add.w	r9, r7, #4294967295
 800cc82:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800cc86:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800cc8a:	f04f 35ff 	mov.w	r5, #4294967295
 800cc8e:	2400      	movs	r4, #0
 800cc90:	9304      	str	r3, [sp, #16]
 800cc92:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800cc96:	9300      	str	r3, [sp, #0]
 800cc98:	f109 32ff 	add.w	r2, r9, #4294967295
 800cc9c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800cca0:	9303      	str	r3, [sp, #12]
 800cca2:	4690      	mov	r8, r2
 800cca4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800cca8:	f1b8 3fff 	cmp.w	r8, #4294967295
 800ccac:	bf14      	ite	ne
 800ccae:	9904      	ldrne	r1, [sp, #16]
 800ccb0:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800ccb4:	6818      	ldr	r0, [r3, #0]
 800ccb6:	9206      	str	r2, [sp, #24]
 800ccb8:	bf18      	it	ne
 800ccba:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800ccbe:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800ccc2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800ccc6:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800ccca:	9305      	str	r3, [sp, #20]
 800cccc:	fb16 f601 	smulbb	r6, r6, r1
 800ccd0:	6859      	ldr	r1, [r3, #4]
 800ccd2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ccd6:	4671      	mov	r1, lr
 800ccd8:	a80a      	add	r0, sp, #40	; 0x28
 800ccda:	f7ff fc09 	bl	800c4f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ccde:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800cce2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800cce6:	9b03      	ldr	r3, [sp, #12]
 800cce8:	9a00      	ldr	r2, [sp, #0]
 800ccea:	fb11 f100 	smulbb	r1, r1, r0
 800ccee:	fb02 6603 	mla	r6, r2, r3, r6
 800ccf2:	1b8e      	subs	r6, r1, r6
 800ccf4:	2008      	movs	r0, #8
 800ccf6:	fb91 f1f0 	sdiv	r1, r1, r0
 800ccfa:	42b1      	cmp	r1, r6
 800ccfc:	dc21      	bgt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800ccfe:	4556      	cmp	r6, sl
 800cd00:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800cd04:	da03      	bge.n	800cd0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800cd06:	b1e6      	cbz	r6, 800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800cd08:	46b2      	mov	sl, r6
 800cd0a:	4645      	mov	r5, r8
 800cd0c:	464c      	mov	r4, r9
 800cd0e:	f108 38ff 	add.w	r8, r8, #4294967295
 800cd12:	f118 0f02 	cmn.w	r8, #2
 800cd16:	d1c7      	bne.n	800cca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800cd18:	f1b2 3fff 	cmp.w	r2, #4294967295
 800cd1c:	f1a7 0708 	sub.w	r7, r7, #8
 800cd20:	4691      	mov	r9, r2
 800cd22:	d1b6      	bne.n	800cc92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800cd24:	9b01      	ldr	r3, [sp, #4]
 800cd26:	b2a6      	uxth	r6, r4
 800cd28:	00e4      	lsls	r4, r4, #3
 800cd2a:	1918      	adds	r0, r3, r4
 800cd2c:	1c6b      	adds	r3, r5, #1
 800cd2e:	d10b      	bne.n	800cd48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800cd30:	4601      	mov	r1, r0
 800cd32:	9802      	ldr	r0, [sp, #8]
 800cd34:	f7ff fbdc 	bl	800c4f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd38:	4631      	mov	r1, r6
 800cd3a:	9801      	ldr	r0, [sp, #4]
 800cd3c:	f7ff fcca 	bl	800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cd40:	e50d      	b.n	800c75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cd42:	4645      	mov	r5, r8
 800cd44:	464c      	mov	r4, r9
 800cd46:	e7ed      	b.n	800cd24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800cd48:	9b01      	ldr	r3, [sp, #4]
 800cd4a:	00ed      	lsls	r5, r5, #3
 800cd4c:	1959      	adds	r1, r3, r5
 800cd4e:	f7ff fbcf 	bl	800c4f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd52:	9b02      	ldr	r3, [sp, #8]
 800cd54:	cb03      	ldmia	r3!, {r0, r1}
 800cd56:	445d      	add	r5, fp
 800cd58:	445c      	add	r4, fp
 800cd5a:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800cd5e:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800cd62:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800cd66:	9b02      	ldr	r3, [sp, #8]
 800cd68:	6861      	ldr	r1, [r4, #4]
 800cd6a:	c303      	stmia	r3!, {r0, r1}
 800cd6c:	e7e4      	b.n	800cd38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800cd70 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cd70:	b530      	push	{r4, r5, lr}
 800cd72:	4b1d      	ldr	r3, [pc, #116]	; (800cde8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800cd74:	b085      	sub	sp, #20
 800cd76:	460c      	mov	r4, r1
 800cd78:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd7c:	4b1b      	ldr	r3, [pc, #108]	; (800cdec <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800cd7e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd82:	2100      	movs	r1, #0
 800cd84:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd88:	9100      	str	r1, [sp, #0]
 800cd8a:	4605      	mov	r5, r0
 800cd8c:	6861      	ldr	r1, [r4, #4]
 800cd8e:	6820      	ldr	r0, [r4, #0]
 800cd90:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cd94:	ab02      	add	r3, sp, #8
 800cd96:	c303      	stmia	r3!, {r0, r1}
 800cd98:	4669      	mov	r1, sp
 800cd9a:	a802      	add	r0, sp, #8
 800cd9c:	f7fc fb04 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800cda0:	ab02      	add	r3, sp, #8
 800cda2:	cb03      	ldmia	r3!, {r0, r1}
 800cda4:	4b12      	ldr	r3, [pc, #72]	; (800cdf0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800cda6:	6020      	str	r0, [r4, #0]
 800cda8:	6818      	ldr	r0, [r3, #0]
 800cdaa:	6061      	str	r1, [r4, #4]
 800cdac:	b138      	cbz	r0, 800cdbe <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800cdae:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800cdb2:	b133      	cbz	r3, 800cdc2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800cdb4:	6821      	ldr	r1, [r4, #0]
 800cdb6:	6862      	ldr	r2, [r4, #4]
 800cdb8:	4628      	mov	r0, r5
 800cdba:	f7ff fcc3 	bl	800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800cdbe:	b005      	add	sp, #20
 800cdc0:	bd30      	pop	{r4, r5, pc}
 800cdc2:	6803      	ldr	r3, [r0, #0]
 800cdc4:	4621      	mov	r1, r4
 800cdc6:	689b      	ldr	r3, [r3, #8]
 800cdc8:	4798      	blx	r3
 800cdca:	4b0a      	ldr	r3, [pc, #40]	; (800cdf4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800cdcc:	6818      	ldr	r0, [r3, #0]
 800cdce:	b118      	cbz	r0, 800cdd8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800cdd0:	6803      	ldr	r3, [r0, #0]
 800cdd2:	4621      	mov	r1, r4
 800cdd4:	689b      	ldr	r3, [r3, #8]
 800cdd6:	4798      	blx	r3
 800cdd8:	4b07      	ldr	r3, [pc, #28]	; (800cdf8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800cdda:	6818      	ldr	r0, [r3, #0]
 800cddc:	6803      	ldr	r3, [r0, #0]
 800cdde:	4621      	mov	r1, r4
 800cde0:	699b      	ldr	r3, [r3, #24]
 800cde2:	4798      	blx	r3
 800cde4:	e7eb      	b.n	800cdbe <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800cde6:	bf00      	nop
 800cde8:	2000a18c 	.word	0x2000a18c
 800cdec:	2000a18e 	.word	0x2000a18e
 800cdf0:	2000a1d4 	.word	0x2000a1d4
 800cdf4:	2000a1d0 	.word	0x2000a1d0
 800cdf8:	2000a198 	.word	0x2000a198

0800cdfc <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800cdfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce00:	4604      	mov	r4, r0
 800ce02:	b09b      	sub	sp, #108	; 0x6c
 800ce04:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800ce08:	b129      	cbz	r1, 800ce16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800ce0a:	2300      	movs	r3, #0
 800ce0c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800ce10:	b01b      	add	sp, #108	; 0x6c
 800ce12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce16:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800ce1a:	4630      	mov	r0, r6
 800ce1c:	f7fc fb07 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce20:	4605      	mov	r5, r0
 800ce22:	b940      	cbnz	r0, 800ce36 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800ce24:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ce28:	4620      	mov	r0, r4
 800ce2a:	f7ff fc8b 	bl	800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ce2e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800ce32:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800ce36:	4ba7      	ldr	r3, [pc, #668]	; (800d0d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800ce38:	681b      	ldr	r3, [r3, #0]
 800ce3a:	b33b      	cbz	r3, 800ce8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800ce3c:	4da6      	ldr	r5, [pc, #664]	; (800d0d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800ce3e:	4628      	mov	r0, r5
 800ce40:	f7fc faf5 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce44:	4606      	mov	r6, r0
 800ce46:	bb08      	cbnz	r0, 800ce8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800ce48:	4628      	mov	r0, r5
 800ce4a:	f7ff f9a9 	bl	800c1a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ce4e:	6829      	ldr	r1, [r5, #0]
 800ce50:	686a      	ldr	r2, [r5, #4]
 800ce52:	4620      	mov	r0, r4
 800ce54:	f7ff fc76 	bl	800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ce58:	802e      	strh	r6, [r5, #0]
 800ce5a:	806e      	strh	r6, [r5, #2]
 800ce5c:	80ae      	strh	r6, [r5, #4]
 800ce5e:	80ee      	strh	r6, [r5, #6]
 800ce60:	4f9e      	ldr	r7, [pc, #632]	; (800d0dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800ce62:	a809      	add	r0, sp, #36	; 0x24
 800ce64:	f7ff fbe3 	bl	800c62e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce68:	883d      	ldrh	r5, [r7, #0]
 800ce6a:	462e      	mov	r6, r5
 800ce6c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ce70:	42b3      	cmp	r3, r6
 800ce72:	d910      	bls.n	800ce96 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800ce74:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800ce78:	a809      	add	r0, sp, #36	; 0x24
 800ce7a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800ce7e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800ce82:	3601      	adds	r6, #1
 800ce84:	f7ff fc3c 	bl	800c700 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800ce88:	b2b6      	uxth	r6, r6
 800ce8a:	e7ef      	b.n	800ce6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800ce8c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ce90:	2b00      	cmp	r3, #0
 800ce92:	d1e5      	bne.n	800ce60 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800ce94:	e7bc      	b.n	800ce10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800ce96:	462e      	mov	r6, r5
 800ce98:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800ce9c:	42b3      	cmp	r3, r6
 800ce9e:	d90b      	bls.n	800ceb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800cea0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800cea4:	4620      	mov	r0, r4
 800cea6:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800ceaa:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800ceae:	3601      	adds	r6, #1
 800ceb0:	f7ff fc48 	bl	800c744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ceb4:	b2b6      	uxth	r6, r6
 800ceb6:	e7ef      	b.n	800ce98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800ceb8:	4a89      	ldr	r2, [pc, #548]	; (800d0e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800ceba:	6813      	ldr	r3, [r2, #0]
 800cebc:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800cec0:	2b01      	cmp	r3, #1
 800cec2:	4690      	mov	r8, r2
 800cec4:	f040 8094 	bne.w	800cff0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800cec8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800cecc:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800ced0:	33aa      	adds	r3, #170	; 0xaa
 800ced2:	f04f 0900 	mov.w	r9, #0
 800ced6:	42a8      	cmp	r0, r5
 800ced8:	f103 0308 	add.w	r3, r3, #8
 800cedc:	dd0a      	ble.n	800cef4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800cede:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800cee2:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800cee6:	440a      	add	r2, r1
 800cee8:	b212      	sxth	r2, r2
 800ceea:	4591      	cmp	r9, r2
 800ceec:	bfb8      	it	lt
 800ceee:	4691      	movlt	r9, r2
 800cef0:	3501      	adds	r5, #1
 800cef2:	e7f0      	b.n	800ced6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800cef4:	4b7b      	ldr	r3, [pc, #492]	; (800d0e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800cef6:	4e7c      	ldr	r6, [pc, #496]	; (800d0e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800cef8:	881d      	ldrh	r5, [r3, #0]
 800cefa:	2300      	movs	r3, #0
 800cefc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800cf00:	2d0f      	cmp	r5, #15
 800cf02:	bf8c      	ite	hi
 800cf04:	08ed      	lsrhi	r5, r5, #3
 800cf06:	2501      	movls	r5, #1
 800cf08:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800cf0c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800cf10:	f8d8 0000 	ldr.w	r0, [r8]
 800cf14:	440b      	add	r3, r1
 800cf16:	b21b      	sxth	r3, r3
 800cf18:	4599      	cmp	r9, r3
 800cf1a:	6802      	ldr	r2, [r0, #0]
 800cf1c:	dd4b      	ble.n	800cfb6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800cf1e:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800cf22:	4798      	blx	r3
 800cf24:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800cf28:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800cf2c:	4413      	add	r3, r2
 800cf2e:	b21b      	sxth	r3, r3
 800cf30:	195a      	adds	r2, r3, r5
 800cf32:	4290      	cmp	r0, r2
 800cf34:	da07      	bge.n	800cf46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800cf36:	4581      	cmp	r9, r0
 800cf38:	dd05      	ble.n	800cf46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800cf3a:	4298      	cmp	r0, r3
 800cf3c:	da33      	bge.n	800cfa6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800cf3e:	2b00      	cmp	r3, #0
 800cf40:	dd31      	ble.n	800cfa6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800cf42:	4648      	mov	r0, r9
 800cf44:	e004      	b.n	800cf50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800cf46:	4298      	cmp	r0, r3
 800cf48:	dbfb      	blt.n	800cf42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800cf4a:	4548      	cmp	r0, r9
 800cf4c:	bfa8      	it	ge
 800cf4e:	4648      	movge	r0, r9
 800cf50:	f9b6 2000 	ldrsh.w	r2, [r6]
 800cf54:	f8b7 a000 	ldrh.w	sl, [r7]
 800cf58:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cf5c:	2100      	movs	r1, #0
 800cf5e:	1ac0      	subs	r0, r0, r3
 800cf60:	f8ad 1014 	strh.w	r1, [sp, #20]
 800cf64:	f8ad 2018 	strh.w	r2, [sp, #24]
 800cf68:	f8ad 001a 	strh.w	r0, [sp, #26]
 800cf6c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800cf70:	4553      	cmp	r3, sl
 800cf72:	d9c9      	bls.n	800cf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800cf74:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800cf78:	ab07      	add	r3, sp, #28
 800cf7a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800cf7e:	6851      	ldr	r1, [r2, #4]
 800cf80:	c303      	stmia	r3!, {r0, r1}
 800cf82:	a807      	add	r0, sp, #28
 800cf84:	a905      	add	r1, sp, #20
 800cf86:	f7fc fa0f 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800cf8a:	a807      	add	r0, sp, #28
 800cf8c:	f7fc fa4f 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf90:	b920      	cbnz	r0, 800cf9c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800cf92:	6823      	ldr	r3, [r4, #0]
 800cf94:	a907      	add	r1, sp, #28
 800cf96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cf98:	4620      	mov	r0, r4
 800cf9a:	4798      	blx	r3
 800cf9c:	f10a 0a01 	add.w	sl, sl, #1
 800cfa0:	fa1f fa8a 	uxth.w	sl, sl
 800cfa4:	e7e2      	b.n	800cf6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800cfa6:	f8d8 0000 	ldr.w	r0, [r8]
 800cfaa:	6803      	ldr	r3, [r0, #0]
 800cfac:	2101      	movs	r1, #1
 800cfae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800cfb2:	4798      	blx	r3
 800cfb4:	e7a8      	b.n	800cf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800cfb6:	6a13      	ldr	r3, [r2, #32]
 800cfb8:	4798      	blx	r3
 800cfba:	4b4c      	ldr	r3, [pc, #304]	; (800d0ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800cfbc:	781b      	ldrb	r3, [r3, #0]
 800cfbe:	2b00      	cmp	r3, #0
 800cfc0:	f43f af26 	beq.w	800ce10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800cfc4:	2300      	movs	r3, #0
 800cfc6:	883d      	ldrh	r5, [r7, #0]
 800cfc8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800cfcc:	34ea      	adds	r4, #234	; 0xea
 800cfce:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800cfd2:	42ab      	cmp	r3, r5
 800cfd4:	f67f af1c 	bls.w	800ce10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800cfd8:	ab1a      	add	r3, sp, #104	; 0x68
 800cfda:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800cfde:	3b44      	subs	r3, #68	; 0x44
 800cfe0:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cfe4:	4620      	mov	r0, r4
 800cfe6:	3501      	adds	r5, #1
 800cfe8:	f7ff fb8a 	bl	800c700 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cfec:	b2ad      	uxth	r5, r5
 800cfee:	e7ee      	b.n	800cfce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800cff0:	2b02      	cmp	r3, #2
 800cff2:	f040 813e 	bne.w	800d272 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800cff6:	4b3e      	ldr	r3, [pc, #248]	; (800d0f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800cff8:	781b      	ldrb	r3, [r3, #0]
 800cffa:	2b01      	cmp	r3, #1
 800cffc:	d02c      	beq.n	800d058 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800cffe:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d002:	883a      	ldrh	r2, [r7, #0]
 800d004:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d008:	3201      	adds	r2, #1
 800d00a:	b292      	uxth	r2, r2
 800d00c:	2900      	cmp	r1, #0
 800d00e:	d0d4      	beq.n	800cfba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d010:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d014:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d018:	441d      	add	r5, r3
 800d01a:	b22d      	sxth	r5, r5
 800d01c:	4610      	mov	r0, r2
 800d01e:	f04f 0a00 	mov.w	sl, #0
 800d022:	b283      	uxth	r3, r0
 800d024:	4299      	cmp	r1, r3
 800d026:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d02a:	f240 80c5 	bls.w	800d1b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800d02e:	4426      	add	r6, r4
 800d030:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d034:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d038:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d03c:	4573      	cmp	r3, lr
 800d03e:	4684      	mov	ip, r0
 800d040:	f340 80a7 	ble.w	800d192 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800d044:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d048:	4475      	add	r5, lr
 800d04a:	b22d      	sxth	r5, r5
 800d04c:	429d      	cmp	r5, r3
 800d04e:	bfa8      	it	ge
 800d050:	461d      	movge	r5, r3
 800d052:	3001      	adds	r0, #1
 800d054:	46e2      	mov	sl, ip
 800d056:	e7e4      	b.n	800d022 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800d058:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d05c:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d060:	f1bb 0f00 	cmp.w	fp, #0
 800d064:	d0a9      	beq.n	800cfba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d066:	883b      	ldrh	r3, [r7, #0]
 800d068:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d06c:	3301      	adds	r3, #1
 800d06e:	b29b      	uxth	r3, r3
 800d070:	2600      	movs	r6, #0
 800d072:	b299      	uxth	r1, r3
 800d074:	458b      	cmp	fp, r1
 800d076:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d07a:	d93b      	bls.n	800d0f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800d07c:	4425      	add	r5, r4
 800d07e:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d082:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d086:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d08a:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d08e:	4408      	add	r0, r1
 800d090:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d094:	4471      	add	r1, lr
 800d096:	b200      	sxth	r0, r0
 800d098:	b209      	sxth	r1, r1
 800d09a:	4288      	cmp	r0, r1
 800d09c:	469c      	mov	ip, r3
 800d09e:	da06      	bge.n	800d0ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800d0a0:	4586      	cmp	lr, r0
 800d0a2:	4672      	mov	r2, lr
 800d0a4:	bfb8      	it	lt
 800d0a6:	4602      	movlt	r2, r0
 800d0a8:	3301      	adds	r3, #1
 800d0aa:	4666      	mov	r6, ip
 800d0ac:	e7e1      	b.n	800d072 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d0ae:	d10b      	bne.n	800d0c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800d0b0:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d0b4:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d0b8:	458c      	cmp	ip, r1
 800d0ba:	bfb4      	ite	lt
 800d0bc:	469c      	movlt	ip, r3
 800d0be:	46b4      	movge	ip, r6
 800d0c0:	4572      	cmp	r2, lr
 800d0c2:	bfb8      	it	lt
 800d0c4:	4672      	movlt	r2, lr
 800d0c6:	e7ef      	b.n	800d0a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d0c8:	428a      	cmp	r2, r1
 800d0ca:	bfb8      	it	lt
 800d0cc:	460a      	movlt	r2, r1
 800d0ce:	46b4      	mov	ip, r6
 800d0d0:	e7ea      	b.n	800d0a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d0d2:	bf00      	nop
 800d0d4:	2000a1d0 	.word	0x2000a1d0
 800d0d8:	2000a1dc 	.word	0x2000a1dc
 800d0dc:	20000060 	.word	0x20000060
 800d0e0:	2000a198 	.word	0x2000a198
 800d0e4:	2000a18e 	.word	0x2000a18e
 800d0e8:	2000a18c 	.word	0x2000a18c
 800d0ec:	2000a196 	.word	0x2000a196
 800d0f0:	2000a190 	.word	0x2000a190
 800d0f4:	1961      	adds	r1, r4, r5
 800d0f6:	ab07      	add	r3, sp, #28
 800d0f8:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d0fc:	6849      	ldr	r1, [r1, #4]
 800d0fe:	c303      	stmia	r3!, {r0, r1}
 800d100:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d104:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d108:	2b13      	cmp	r3, #19
 800d10a:	bfd8      	it	le
 800d10c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d110:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d114:	440b      	add	r3, r1
 800d116:	1a9b      	subs	r3, r3, r2
 800d118:	a807      	add	r0, sp, #28
 800d11a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d11e:	f7ff f899 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d122:	a807      	add	r0, sp, #28
 800d124:	f7fc f983 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d128:	2800      	cmp	r0, #0
 800d12a:	d197      	bne.n	800d05c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d12c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d130:	f8d8 0000 	ldr.w	r0, [r8]
 800d134:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d138:	f8d0 e000 	ldr.w	lr, [r0]
 800d13c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d140:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d144:	f1bc 0f14 	cmp.w	ip, #20
 800d148:	bfa8      	it	ge
 800d14a:	f04f 0c14 	movge.w	ip, #20
 800d14e:	fa1f fc8c 	uxth.w	ip, ip
 800d152:	f8cd c000 	str.w	ip, [sp]
 800d156:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 800d15a:	47d0      	blx	sl
 800d15c:	4682      	mov	sl, r0
 800d15e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d162:	a807      	add	r0, sp, #28
 800d164:	f7ff f81c 	bl	800c1a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d168:	6823      	ldr	r3, [r4, #0]
 800d16a:	4425      	add	r5, r4
 800d16c:	4620      	mov	r0, r4
 800d16e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d170:	a907      	add	r1, sp, #28
 800d172:	4798      	blx	r3
 800d174:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d178:	eba0 000a 	sub.w	r0, r0, sl
 800d17c:	b200      	sxth	r0, r0
 800d17e:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d182:	2800      	cmp	r0, #0
 800d184:	f47f af6a 	bne.w	800d05c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d188:	b2b1      	uxth	r1, r6
 800d18a:	4648      	mov	r0, r9
 800d18c:	f7ff faa2 	bl	800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d190:	e764      	b.n	800d05c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d192:	d10c      	bne.n	800d1ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800d194:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d198:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d19c:	45b4      	cmp	ip, r6
 800d19e:	bfb4      	ite	lt
 800d1a0:	4684      	movlt	ip, r0
 800d1a2:	46d4      	movge	ip, sl
 800d1a4:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d1a8:	4433      	add	r3, r6
 800d1aa:	b21b      	sxth	r3, r3
 800d1ac:	e74e      	b.n	800d04c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800d1ae:	4575      	cmp	r5, lr
 800d1b0:	bfa8      	it	ge
 800d1b2:	4675      	movge	r5, lr
 800d1b4:	46d4      	mov	ip, sl
 800d1b6:	e74c      	b.n	800d052 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800d1b8:	eb0b 0006 	add.w	r0, fp, r6
 800d1bc:	4426      	add	r6, r4
 800d1be:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d1c2:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d1c6:	f1b9 0f13 	cmp.w	r9, #19
 800d1ca:	bfde      	ittt	le
 800d1cc:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d1d0:	444d      	addle	r5, r9
 800d1d2:	b22d      	sxthle	r5, r5
 800d1d4:	f7fc f92b 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1d8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d1dc:	2800      	cmp	r0, #0
 800d1de:	f47f af15 	bne.w	800d00c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800d1e2:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d1e6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d1ea:	eba5 050c 	sub.w	r5, r5, ip
 800d1ee:	fa1f f28c 	uxth.w	r2, ip
 800d1f2:	fa1f f989 	uxth.w	r9, r9
 800d1f6:	eb02 0009 	add.w	r0, r2, r9
 800d1fa:	2d14      	cmp	r5, #20
 800d1fc:	bfa8      	it	ge
 800d1fe:	2514      	movge	r5, #20
 800d200:	b200      	sxth	r0, r0
 800d202:	fa1f fe85 	uxth.w	lr, r5
 800d206:	eba0 000c 	sub.w	r0, r0, ip
 800d20a:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d20e:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d212:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d216:	4586      	cmp	lr, r0
 800d218:	f8d8 0000 	ldr.w	r0, [r8]
 800d21c:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d220:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d224:	bfb8      	it	lt
 800d226:	46f1      	movlt	r9, lr
 800d228:	6805      	ldr	r5, [r0, #0]
 800d22a:	f8cd 9000 	str.w	r9, [sp]
 800d22e:	b29b      	uxth	r3, r3
 800d230:	b289      	uxth	r1, r1
 800d232:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 800d236:	47a8      	blx	r5
 800d238:	6823      	ldr	r3, [r4, #0]
 800d23a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d23e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d240:	a907      	add	r1, sp, #28
 800d242:	4620      	mov	r0, r4
 800d244:	4798      	blx	r3
 800d246:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d24a:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d24e:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d252:	1a5b      	subs	r3, r3, r1
 800d254:	440a      	add	r2, r1
 800d256:	b21b      	sxth	r3, r3
 800d258:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d25c:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d260:	2b00      	cmp	r3, #0
 800d262:	f47f aece 	bne.w	800d002 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d266:	fa1f f18a 	uxth.w	r1, sl
 800d26a:	4658      	mov	r0, fp
 800d26c:	f7ff fa32 	bl	800c6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d270:	e6c7      	b.n	800d002 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d272:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d276:	42ab      	cmp	r3, r5
 800d278:	f67f ae9f 	bls.w	800cfba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d27c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d280:	ab07      	add	r3, sp, #28
 800d282:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d286:	6851      	ldr	r1, [r2, #4]
 800d288:	c303      	stmia	r3!, {r0, r1}
 800d28a:	a807      	add	r0, sp, #28
 800d28c:	f7fc f8cf 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d290:	b920      	cbnz	r0, 800d29c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800d292:	6823      	ldr	r3, [r4, #0]
 800d294:	a907      	add	r1, sp, #28
 800d296:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d298:	4620      	mov	r0, r4
 800d29a:	4798      	blx	r3
 800d29c:	3501      	adds	r5, #1
 800d29e:	b2ad      	uxth	r5, r5
 800d2a0:	e7e7      	b.n	800d272 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d2a2:	bf00      	nop

0800d2a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d2a4:	4b03      	ldr	r3, [pc, #12]	; (800d2b4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d2a6:	2200      	movs	r2, #0
 800d2a8:	801a      	strh	r2, [r3, #0]
 800d2aa:	805a      	strh	r2, [r3, #2]
 800d2ac:	809a      	strh	r2, [r3, #4]
 800d2ae:	80da      	strh	r2, [r3, #6]
 800d2b0:	4770      	bx	lr
 800d2b2:	bf00      	nop
 800d2b4:	2000a1dc 	.word	0x2000a1dc

0800d2b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2bc:	4606      	mov	r6, r0
 800d2be:	b09b      	sub	sp, #108	; 0x6c
 800d2c0:	a803      	add	r0, sp, #12
 800d2c2:	4614      	mov	r4, r2
 800d2c4:	468a      	mov	sl, r1
 800d2c6:	461d      	mov	r5, r3
 800d2c8:	f000 fe92 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800d2cc:	6833      	ldr	r3, [r6, #0]
 800d2ce:	4630      	mov	r0, r6
 800d2d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d2d2:	4798      	blx	r3
 800d2d4:	6833      	ldr	r3, [r6, #0]
 800d2d6:	4607      	mov	r7, r0
 800d2d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d2da:	4630      	mov	r0, r6
 800d2dc:	4798      	blx	r3
 800d2de:	462a      	mov	r2, r5
 800d2e0:	9000      	str	r0, [sp, #0]
 800d2e2:	4621      	mov	r1, r4
 800d2e4:	463b      	mov	r3, r7
 800d2e6:	a803      	add	r0, sp, #12
 800d2e8:	f000 fecf 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d2ec:	2500      	movs	r5, #0
 800d2ee:	462c      	mov	r4, r5
 800d2f0:	46a9      	mov	r9, r5
 800d2f2:	46a8      	mov	r8, r5
 800d2f4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d2f8:	2300      	movs	r3, #0
 800d2fa:	9302      	str	r3, [sp, #8]
 800d2fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d300:	429c      	cmp	r4, r3
 800d302:	d002      	beq.n	800d30a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d304:	455c      	cmp	r4, fp
 800d306:	bf18      	it	ne
 800d308:	4625      	movne	r5, r4
 800d30a:	ab02      	add	r3, sp, #8
 800d30c:	4632      	mov	r2, r6
 800d30e:	4651      	mov	r1, sl
 800d310:	a803      	add	r0, sp, #12
 800d312:	f001 f9b5 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d316:	4604      	mov	r4, r0
 800d318:	b108      	cbz	r0, 800d31e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d31a:	280a      	cmp	r0, #10
 800d31c:	d10a      	bne.n	800d334 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d31e:	45c1      	cmp	r9, r8
 800d320:	bf38      	it	cc
 800d322:	46c1      	movcc	r9, r8
 800d324:	f04f 0800 	mov.w	r8, #0
 800d328:	2c00      	cmp	r4, #0
 800d32a:	d1e5      	bne.n	800d2f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d32c:	4648      	mov	r0, r9
 800d32e:	b01b      	add	sp, #108	; 0x6c
 800d330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d334:	9a02      	ldr	r2, [sp, #8]
 800d336:	2a00      	cmp	r2, #0
 800d338:	d0de      	beq.n	800d2f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d33a:	7b57      	ldrb	r7, [r2, #13]
 800d33c:	6833      	ldr	r3, [r6, #0]
 800d33e:	8894      	ldrh	r4, [r2, #4]
 800d340:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d342:	007f      	lsls	r7, r7, #1
 800d344:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d348:	7a97      	ldrb	r7, [r2, #10]
 800d34a:	4629      	mov	r1, r5
 800d34c:	4307      	orrs	r7, r0
 800d34e:	4630      	mov	r0, r6
 800d350:	4798      	blx	r3
 800d352:	4438      	add	r0, r7
 800d354:	4480      	add	r8, r0
 800d356:	fa1f f888 	uxth.w	r8, r8
 800d35a:	e7e5      	b.n	800d328 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d35c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d35c:	b508      	push	{r3, lr}
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	68db      	ldr	r3, [r3, #12]
 800d362:	4798      	blx	r3
 800d364:	b128      	cbz	r0, 800d372 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d366:	7b43      	ldrb	r3, [r0, #13]
 800d368:	7a80      	ldrb	r0, [r0, #10]
 800d36a:	005b      	lsls	r3, r3, #1
 800d36c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d370:	4318      	orrs	r0, r3
 800d372:	bd08      	pop	{r3, pc}

0800d374 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d374:	b40e      	push	{r1, r2, r3}
 800d376:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d378:	b09c      	sub	sp, #112	; 0x70
 800d37a:	ab21      	add	r3, sp, #132	; 0x84
 800d37c:	4605      	mov	r5, r0
 800d37e:	f853 4b04 	ldr.w	r4, [r3], #4
 800d382:	9303      	str	r3, [sp, #12]
 800d384:	a805      	add	r0, sp, #20
 800d386:	f000 fe33 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800d38a:	682b      	ldr	r3, [r5, #0]
 800d38c:	4628      	mov	r0, r5
 800d38e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d390:	4798      	blx	r3
 800d392:	682b      	ldr	r3, [r5, #0]
 800d394:	4606      	mov	r6, r0
 800d396:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d398:	4628      	mov	r0, r5
 800d39a:	4798      	blx	r3
 800d39c:	4633      	mov	r3, r6
 800d39e:	ae1c      	add	r6, sp, #112	; 0x70
 800d3a0:	4621      	mov	r1, r4
 800d3a2:	9000      	str	r0, [sp, #0]
 800d3a4:	9a03      	ldr	r2, [sp, #12]
 800d3a6:	2400      	movs	r4, #0
 800d3a8:	a805      	add	r0, sp, #20
 800d3aa:	f000 fe6e 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d3ae:	f846 4d60 	str.w	r4, [r6, #-96]!
 800d3b2:	462a      	mov	r2, r5
 800d3b4:	4633      	mov	r3, r6
 800d3b6:	4621      	mov	r1, r4
 800d3b8:	a805      	add	r0, sp, #20
 800d3ba:	f001 f961 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d3be:	b1f0      	cbz	r0, 800d3fe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d3c0:	280a      	cmp	r0, #10
 800d3c2:	d018      	beq.n	800d3f6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d3c4:	9f04      	ldr	r7, [sp, #16]
 800d3c6:	b1b7      	cbz	r7, 800d3f6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d3c8:	7b78      	ldrb	r0, [r7, #13]
 800d3ca:	7a3b      	ldrb	r3, [r7, #8]
 800d3cc:	88aa      	ldrh	r2, [r5, #4]
 800d3ce:	00c1      	lsls	r1, r0, #3
 800d3d0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d3d4:	4319      	orrs	r1, r3
 800d3d6:	0643      	lsls	r3, r0, #25
 800d3d8:	bf44      	itt	mi
 800d3da:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d3de:	b219      	sxthmi	r1, r3
 800d3e0:	0100      	lsls	r0, r0, #4
 800d3e2:	79fb      	ldrb	r3, [r7, #7]
 800d3e4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d3e8:	4303      	orrs	r3, r0
 800d3ea:	4413      	add	r3, r2
 800d3ec:	1a5b      	subs	r3, r3, r1
 800d3ee:	b29b      	uxth	r3, r3
 800d3f0:	42a3      	cmp	r3, r4
 800d3f2:	bfc8      	it	gt
 800d3f4:	b21c      	sxthgt	r4, r3
 800d3f6:	4633      	mov	r3, r6
 800d3f8:	462a      	mov	r2, r5
 800d3fa:	2100      	movs	r1, #0
 800d3fc:	e7dc      	b.n	800d3b8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d3fe:	b2a0      	uxth	r0, r4
 800d400:	b01c      	add	sp, #112	; 0x70
 800d402:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d406:	b003      	add	sp, #12
 800d408:	4770      	bx	lr

0800d40a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d40a:	b40e      	push	{r1, r2, r3}
 800d40c:	b570      	push	{r4, r5, r6, lr}
 800d40e:	b09b      	sub	sp, #108	; 0x6c
 800d410:	ab1f      	add	r3, sp, #124	; 0x7c
 800d412:	4604      	mov	r4, r0
 800d414:	f853 5b04 	ldr.w	r5, [r3], #4
 800d418:	9302      	str	r3, [sp, #8]
 800d41a:	a803      	add	r0, sp, #12
 800d41c:	f000 fde8 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800d420:	6823      	ldr	r3, [r4, #0]
 800d422:	4620      	mov	r0, r4
 800d424:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d426:	4798      	blx	r3
 800d428:	6823      	ldr	r3, [r4, #0]
 800d42a:	4606      	mov	r6, r0
 800d42c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d42e:	4620      	mov	r0, r4
 800d430:	4798      	blx	r3
 800d432:	4633      	mov	r3, r6
 800d434:	9000      	str	r0, [sp, #0]
 800d436:	9a02      	ldr	r2, [sp, #8]
 800d438:	4629      	mov	r1, r5
 800d43a:	a803      	add	r0, sp, #12
 800d43c:	f000 fe25 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d440:	a803      	add	r0, sp, #12
 800d442:	f001 fa15 	bl	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d446:	2401      	movs	r4, #1
 800d448:	b2a3      	uxth	r3, r4
 800d44a:	b140      	cbz	r0, 800d45e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d44c:	280a      	cmp	r0, #10
 800d44e:	bf08      	it	eq
 800d450:	3301      	addeq	r3, #1
 800d452:	a803      	add	r0, sp, #12
 800d454:	bf08      	it	eq
 800d456:	b21c      	sxtheq	r4, r3
 800d458:	f001 fa0a 	bl	800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d45c:	e7f4      	b.n	800d448 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d45e:	4618      	mov	r0, r3
 800d460:	b01b      	add	sp, #108	; 0x6c
 800d462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d466:	b003      	add	sp, #12
 800d468:	4770      	bx	lr

0800d46a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d46a:	b40e      	push	{r1, r2, r3}
 800d46c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d46e:	b09c      	sub	sp, #112	; 0x70
 800d470:	ab21      	add	r3, sp, #132	; 0x84
 800d472:	4604      	mov	r4, r0
 800d474:	f853 5b04 	ldr.w	r5, [r3], #4
 800d478:	9303      	str	r3, [sp, #12]
 800d47a:	a805      	add	r0, sp, #20
 800d47c:	f000 fdb8 	bl	800dff0 <_ZN8touchgfx12TextProviderC1Ev>
 800d480:	6823      	ldr	r3, [r4, #0]
 800d482:	4620      	mov	r0, r4
 800d484:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d486:	4798      	blx	r3
 800d488:	6823      	ldr	r3, [r4, #0]
 800d48a:	4606      	mov	r6, r0
 800d48c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d48e:	4620      	mov	r0, r4
 800d490:	4798      	blx	r3
 800d492:	4633      	mov	r3, r6
 800d494:	4629      	mov	r1, r5
 800d496:	9000      	str	r0, [sp, #0]
 800d498:	9a03      	ldr	r2, [sp, #12]
 800d49a:	a805      	add	r0, sp, #20
 800d49c:	ad1c      	add	r5, sp, #112	; 0x70
 800d49e:	f000 fdf4 	bl	800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d4a2:	2100      	movs	r1, #0
 800d4a4:	f845 1d60 	str.w	r1, [r5, #-96]!
 800d4a8:	4622      	mov	r2, r4
 800d4aa:	462b      	mov	r3, r5
 800d4ac:	a805      	add	r0, sp, #20
 800d4ae:	f001 f8e7 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d4b2:	26ff      	movs	r6, #255	; 0xff
 800d4b4:	b1d8      	cbz	r0, 800d4ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d4b6:	280a      	cmp	r0, #10
 800d4b8:	d012      	beq.n	800d4e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d4ba:	9804      	ldr	r0, [sp, #16]
 800d4bc:	b180      	cbz	r0, 800d4e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d4be:	7b47      	ldrb	r7, [r0, #13]
 800d4c0:	7922      	ldrb	r2, [r4, #4]
 800d4c2:	00fb      	lsls	r3, r7, #3
 800d4c4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d4c8:	7a03      	ldrb	r3, [r0, #8]
 800d4ca:	430b      	orrs	r3, r1
 800d4cc:	0679      	lsls	r1, r7, #25
 800d4ce:	bf44      	itt	mi
 800d4d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d4d4:	b21b      	sxthmi	r3, r3
 800d4d6:	1ad3      	subs	r3, r2, r3
 800d4d8:	b2db      	uxtb	r3, r3
 800d4da:	429e      	cmp	r6, r3
 800d4dc:	bf28      	it	cs
 800d4de:	461e      	movcs	r6, r3
 800d4e0:	462b      	mov	r3, r5
 800d4e2:	4622      	mov	r2, r4
 800d4e4:	2100      	movs	r1, #0
 800d4e6:	a805      	add	r0, sp, #20
 800d4e8:	f001 f8ca 	bl	800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d4ec:	e7e2      	b.n	800d4b4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d4ee:	4630      	mov	r0, r6
 800d4f0:	b01c      	add	sp, #112	; 0x70
 800d4f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d4f6:	b003      	add	sp, #12
 800d4f8:	4770      	bx	lr

0800d4fa <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d4fa:	b513      	push	{r0, r1, r4, lr}
 800d4fc:	1d01      	adds	r1, r0, #4
 800d4fe:	4603      	mov	r3, r0
 800d500:	c903      	ldmia	r1, {r0, r1}
 800d502:	466a      	mov	r2, sp
 800d504:	e882 0003 	stmia.w	r2, {r0, r1}
 800d508:	2100      	movs	r1, #0
 800d50a:	9100      	str	r1, [sp, #0]
 800d50c:	6819      	ldr	r1, [r3, #0]
 800d50e:	4618      	mov	r0, r3
 800d510:	690c      	ldr	r4, [r1, #16]
 800d512:	4611      	mov	r1, r2
 800d514:	47a0      	blx	r4
 800d516:	b002      	add	sp, #8
 800d518:	bd10      	pop	{r4, pc}

0800d51a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d51a:	b538      	push	{r3, r4, r5, lr}
 800d51c:	680b      	ldr	r3, [r1, #0]
 800d51e:	460c      	mov	r4, r1
 800d520:	68db      	ldr	r3, [r3, #12]
 800d522:	4605      	mov	r5, r0
 800d524:	4798      	blx	r3
 800d526:	6823      	ldr	r3, [r4, #0]
 800d528:	4620      	mov	r0, r4
 800d52a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d52c:	4629      	mov	r1, r5
 800d52e:	4798      	blx	r3
 800d530:	4628      	mov	r0, r5
 800d532:	bd38      	pop	{r3, r4, r5, pc}

0800d534 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d534:	b410      	push	{r4}
 800d536:	880a      	ldrh	r2, [r1, #0]
 800d538:	8884      	ldrh	r4, [r0, #4]
 800d53a:	4422      	add	r2, r4
 800d53c:	800a      	strh	r2, [r1, #0]
 800d53e:	88c4      	ldrh	r4, [r0, #6]
 800d540:	884a      	ldrh	r2, [r1, #2]
 800d542:	4422      	add	r2, r4
 800d544:	804a      	strh	r2, [r1, #2]
 800d546:	6940      	ldr	r0, [r0, #20]
 800d548:	b120      	cbz	r0, 800d554 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d54a:	6803      	ldr	r3, [r0, #0]
 800d54c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d550:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d552:	4718      	bx	r3
 800d554:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d558:	4770      	bx	lr

0800d55a <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d55a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d55c:	460b      	mov	r3, r1
 800d55e:	b085      	sub	sp, #20
 800d560:	4604      	mov	r4, r0
 800d562:	b901      	cbnz	r1, 800d566 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d564:	b322      	cbz	r2, 800d5b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800d566:	1d27      	adds	r7, r4, #4
 800d568:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d56c:	466e      	mov	r6, sp
 800d56e:	e886 0003 	stmia.w	r6, {r0, r1}
 800d572:	88a1      	ldrh	r1, [r4, #4]
 800d574:	88e5      	ldrh	r5, [r4, #6]
 800d576:	4419      	add	r1, r3
 800d578:	6823      	ldr	r3, [r4, #0]
 800d57a:	442a      	add	r2, r5
 800d57c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d57e:	b209      	sxth	r1, r1
 800d580:	4620      	mov	r0, r4
 800d582:	b215      	sxth	r5, r2
 800d584:	4798      	blx	r3
 800d586:	6823      	ldr	r3, [r4, #0]
 800d588:	4629      	mov	r1, r5
 800d58a:	4620      	mov	r0, r4
 800d58c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d58e:	4798      	blx	r3
 800d590:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d594:	ad02      	add	r5, sp, #8
 800d596:	e885 0003 	stmia.w	r5, {r0, r1}
 800d59a:	6960      	ldr	r0, [r4, #20]
 800d59c:	b150      	cbz	r0, 800d5b4 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800d59e:	6803      	ldr	r3, [r0, #0]
 800d5a0:	4631      	mov	r1, r6
 800d5a2:	691b      	ldr	r3, [r3, #16]
 800d5a4:	4798      	blx	r3
 800d5a6:	6960      	ldr	r0, [r4, #20]
 800d5a8:	6803      	ldr	r3, [r0, #0]
 800d5aa:	691b      	ldr	r3, [r3, #16]
 800d5ac:	4629      	mov	r1, r5
 800d5ae:	4798      	blx	r3
 800d5b0:	b005      	add	sp, #20
 800d5b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d5b4:	f7fe ffe2 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 800d5b8:	6803      	ldr	r3, [r0, #0]
 800d5ba:	4631      	mov	r1, r6
 800d5bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5be:	4798      	blx	r3
 800d5c0:	f7fe ffdc 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 800d5c4:	6803      	ldr	r3, [r0, #0]
 800d5c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5c8:	e7f0      	b.n	800d5ac <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800d5ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d5ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d5cc:	8882      	ldrh	r2, [r0, #4]
 800d5ce:	880b      	ldrh	r3, [r1, #0]
 800d5d0:	4413      	add	r3, r2
 800d5d2:	800b      	strh	r3, [r1, #0]
 800d5d4:	88c2      	ldrh	r2, [r0, #6]
 800d5d6:	884b      	ldrh	r3, [r1, #2]
 800d5d8:	4413      	add	r3, r2
 800d5da:	4602      	mov	r2, r0
 800d5dc:	804b      	strh	r3, [r1, #2]
 800d5de:	4605      	mov	r5, r0
 800d5e0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d5e4:	460c      	mov	r4, r1
 800d5e6:	6851      	ldr	r1, [r2, #4]
 800d5e8:	466b      	mov	r3, sp
 800d5ea:	c303      	stmia	r3!, {r0, r1}
 800d5ec:	4621      	mov	r1, r4
 800d5ee:	4668      	mov	r0, sp
 800d5f0:	f7fb feda 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800d5f4:	466b      	mov	r3, sp
 800d5f6:	cb03      	ldmia	r3!, {r0, r1}
 800d5f8:	6020      	str	r0, [r4, #0]
 800d5fa:	6061      	str	r1, [r4, #4]
 800d5fc:	6968      	ldr	r0, [r5, #20]
 800d5fe:	b128      	cbz	r0, 800d60c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800d600:	6803      	ldr	r3, [r0, #0]
 800d602:	691b      	ldr	r3, [r3, #16]
 800d604:	4621      	mov	r1, r4
 800d606:	4798      	blx	r3
 800d608:	b003      	add	sp, #12
 800d60a:	bd30      	pop	{r4, r5, pc}
 800d60c:	f7fe ffb6 	bl	800c57c <_ZN8touchgfx11Application11getInstanceEv>
 800d610:	6803      	ldr	r3, [r0, #0]
 800d612:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d614:	e7f6      	b.n	800d604 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800d616 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d616:	b570      	push	{r4, r5, r6, lr}
 800d618:	8882      	ldrh	r2, [r0, #4]
 800d61a:	880b      	ldrh	r3, [r1, #0]
 800d61c:	4413      	add	r3, r2
 800d61e:	800b      	strh	r3, [r1, #0]
 800d620:	88c2      	ldrh	r2, [r0, #6]
 800d622:	884b      	ldrh	r3, [r1, #2]
 800d624:	460c      	mov	r4, r1
 800d626:	4413      	add	r3, r2
 800d628:	804b      	strh	r3, [r1, #2]
 800d62a:	4605      	mov	r5, r0
 800d62c:	1d01      	adds	r1, r0, #4
 800d62e:	4620      	mov	r0, r4
 800d630:	f7fb feba 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800d634:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d638:	2b00      	cmp	r3, #0
 800d63a:	dd0b      	ble.n	800d654 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d63c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d640:	2b00      	cmp	r3, #0
 800d642:	dd07      	ble.n	800d654 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d644:	6968      	ldr	r0, [r5, #20]
 800d646:	b128      	cbz	r0, 800d654 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d648:	6803      	ldr	r3, [r0, #0]
 800d64a:	4621      	mov	r1, r4
 800d64c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d64e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d652:	4718      	bx	r3
 800d654:	bd70      	pop	{r4, r5, r6, pc}

0800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d656:	b510      	push	{r4, lr}
 800d658:	4604      	mov	r4, r0
 800d65a:	4608      	mov	r0, r1
 800d65c:	2300      	movs	r3, #0
 800d65e:	8023      	strh	r3, [r4, #0]
 800d660:	8063      	strh	r3, [r4, #2]
 800d662:	6803      	ldr	r3, [r0, #0]
 800d664:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d668:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d66c:	80a1      	strh	r1, [r4, #4]
 800d66e:	80e2      	strh	r2, [r4, #6]
 800d670:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d672:	4621      	mov	r1, r4
 800d674:	4798      	blx	r3
 800d676:	4620      	mov	r0, r4
 800d678:	bd10      	pop	{r4, pc}
	...

0800d67c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d67c:	b530      	push	{r4, r5, lr}
 800d67e:	8083      	strh	r3, [r0, #4]
 800d680:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d684:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800d688:	7183      	strb	r3, [r0, #6]
 800d68a:	79c3      	ldrb	r3, [r0, #7]
 800d68c:	6101      	str	r1, [r0, #16]
 800d68e:	f365 0306 	bfi	r3, r5, #0, #7
 800d692:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800d696:	8282      	strh	r2, [r0, #20]
 800d698:	f365 13c7 	bfi	r3, r5, #7, #1
 800d69c:	71c3      	strb	r3, [r0, #7]
 800d69e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800d6a2:	7203      	strb	r3, [r0, #8]
 800d6a4:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800d6a8:	7243      	strb	r3, [r0, #9]
 800d6aa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d6ae:	8143      	strh	r3, [r0, #10]
 800d6b0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800d6b4:	8183      	strh	r3, [r0, #12]
 800d6b6:	4b01      	ldr	r3, [pc, #4]	; (800d6bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800d6b8:	6003      	str	r3, [r0, #0]
 800d6ba:	bd30      	pop	{r4, r5, pc}
 800d6bc:	0801e8e8 	.word	0x0801e8e8

0800d6c0 <_ZNK8touchgfx9ConstFont4findEt>:
 800d6c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6c2:	6904      	ldr	r4, [r0, #16]
 800d6c4:	b3bc      	cbz	r4, 800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d6c6:	88a3      	ldrh	r3, [r4, #4]
 800d6c8:	8a82      	ldrh	r2, [r0, #20]
 800d6ca:	1acb      	subs	r3, r1, r3
 800d6cc:	f102 32ff 	add.w	r2, r2, #4294967295
 800d6d0:	d431      	bmi.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d6d2:	4293      	cmp	r3, r2
 800d6d4:	dd0c      	ble.n	800d6f0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800d6d6:	230e      	movs	r3, #14
 800d6d8:	fb03 4302 	mla	r3, r3, r2, r4
 800d6dc:	889b      	ldrh	r3, [r3, #4]
 800d6de:	1a5b      	subs	r3, r3, r1
 800d6e0:	1ad3      	subs	r3, r2, r3
 800d6e2:	429a      	cmp	r2, r3
 800d6e4:	db27      	blt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d6e6:	2b00      	cmp	r3, #0
 800d6e8:	bfbc      	itt	lt
 800d6ea:	2302      	movlt	r3, #2
 800d6ec:	fb92 f3f3 	sdivlt	r3, r2, r3
 800d6f0:	2500      	movs	r5, #0
 800d6f2:	260e      	movs	r6, #14
 800d6f4:	4295      	cmp	r5, r2
 800d6f6:	dc1e      	bgt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d6f8:	fb06 4003 	mla	r0, r6, r3, r4
 800d6fc:	8887      	ldrh	r7, [r0, #4]
 800d6fe:	42b9      	cmp	r1, r7
 800d700:	d01a      	beq.n	800d738 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800d702:	d20d      	bcs.n	800d720 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800d704:	1e5a      	subs	r2, r3, #1
 800d706:	4295      	cmp	r5, r2
 800d708:	dc15      	bgt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d70a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800d70e:	1a5b      	subs	r3, r3, r1
 800d710:	1ad3      	subs	r3, r2, r3
 800d712:	429a      	cmp	r2, r3
 800d714:	db0f      	blt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d716:	429d      	cmp	r5, r3
 800d718:	ddec      	ble.n	800d6f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d71a:	1953      	adds	r3, r2, r5
 800d71c:	105b      	asrs	r3, r3, #1
 800d71e:	e7e9      	b.n	800d6f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d720:	1c5d      	adds	r5, r3, #1
 800d722:	42aa      	cmp	r2, r5
 800d724:	db07      	blt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d726:	8a43      	ldrh	r3, [r0, #18]
 800d728:	1acb      	subs	r3, r1, r3
 800d72a:	442b      	add	r3, r5
 800d72c:	429d      	cmp	r5, r3
 800d72e:	dc02      	bgt.n	800d736 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d730:	429a      	cmp	r2, r3
 800d732:	dadf      	bge.n	800d6f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d734:	e7f1      	b.n	800d71a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800d736:	2000      	movs	r0, #0
 800d738:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d73a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800d73a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d73c:	4604      	mov	r4, r0
 800d73e:	4617      	mov	r7, r2
 800d740:	461e      	mov	r6, r3
 800d742:	b911      	cbnz	r1, 800d74a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d744:	2500      	movs	r5, #0
 800d746:	4628      	mov	r0, r5
 800d748:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d74a:	290a      	cmp	r1, #10
 800d74c:	d0fa      	beq.n	800d744 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d74e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d752:	4291      	cmp	r1, r2
 800d754:	d0f6      	beq.n	800d744 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d756:	f242 020b 	movw	r2, #8203	; 0x200b
 800d75a:	4291      	cmp	r1, r2
 800d75c:	d0f2      	beq.n	800d744 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d75e:	f7ff ffaf 	bl	800d6c0 <_ZNK8touchgfx9ConstFont4findEt>
 800d762:	4605      	mov	r5, r0
 800d764:	b950      	cbnz	r0, 800d77c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800d766:	6823      	ldr	r3, [r4, #0]
 800d768:	4620      	mov	r0, r4
 800d76a:	691b      	ldr	r3, [r3, #16]
 800d76c:	4798      	blx	r3
 800d76e:	4601      	mov	r1, r0
 800d770:	4620      	mov	r0, r4
 800d772:	f7ff ffa5 	bl	800d6c0 <_ZNK8touchgfx9ConstFont4findEt>
 800d776:	4605      	mov	r5, r0
 800d778:	2800      	cmp	r0, #0
 800d77a:	d0e3      	beq.n	800d744 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d77c:	6823      	ldr	r3, [r4, #0]
 800d77e:	4629      	mov	r1, r5
 800d780:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d782:	4620      	mov	r0, r4
 800d784:	4798      	blx	r3
 800d786:	6038      	str	r0, [r7, #0]
 800d788:	6823      	ldr	r3, [r4, #0]
 800d78a:	4620      	mov	r0, r4
 800d78c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d78e:	4798      	blx	r3
 800d790:	7030      	strb	r0, [r6, #0]
 800d792:	e7d8      	b.n	800d746 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800d794 <_ZN8touchgfx4clzuEm>:
 800d794:	4603      	mov	r3, r0
 800d796:	b1c8      	cbz	r0, 800d7cc <_ZN8touchgfx4clzuEm+0x38>
 800d798:	0c02      	lsrs	r2, r0, #16
 800d79a:	0412      	lsls	r2, r2, #16
 800d79c:	b9a2      	cbnz	r2, 800d7c8 <_ZN8touchgfx4clzuEm+0x34>
 800d79e:	0403      	lsls	r3, r0, #16
 800d7a0:	2010      	movs	r0, #16
 800d7a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800d7a6:	bf04      	itt	eq
 800d7a8:	021b      	lsleq	r3, r3, #8
 800d7aa:	3008      	addeq	r0, #8
 800d7ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800d7b0:	bf04      	itt	eq
 800d7b2:	011b      	lsleq	r3, r3, #4
 800d7b4:	3004      	addeq	r0, #4
 800d7b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800d7ba:	bf04      	itt	eq
 800d7bc:	009b      	lsleq	r3, r3, #2
 800d7be:	3002      	addeq	r0, #2
 800d7c0:	2b00      	cmp	r3, #0
 800d7c2:	db04      	blt.n	800d7ce <_ZN8touchgfx4clzuEm+0x3a>
 800d7c4:	3001      	adds	r0, #1
 800d7c6:	4770      	bx	lr
 800d7c8:	2000      	movs	r0, #0
 800d7ca:	e7ea      	b.n	800d7a2 <_ZN8touchgfx4clzuEm+0xe>
 800d7cc:	2020      	movs	r0, #32
 800d7ce:	4770      	bx	lr

0800d7d0 <_ZN8touchgfx7muldivuEmmmRm>:
 800d7d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7d4:	4680      	mov	r8, r0
 800d7d6:	460f      	mov	r7, r1
 800d7d8:	4615      	mov	r5, r2
 800d7da:	461e      	mov	r6, r3
 800d7dc:	f7ff ffda 	bl	800d794 <_ZN8touchgfx4clzuEm>
 800d7e0:	b998      	cbnz	r0, 800d80a <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 800d7e2:	4608      	mov	r0, r1
 800d7e4:	f7ff ffd6 	bl	800d794 <_ZN8touchgfx4clzuEm>
 800d7e8:	2800      	cmp	r0, #0
 800d7ea:	dd08      	ble.n	800d7fe <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 800d7ec:	4633      	mov	r3, r6
 800d7ee:	462a      	mov	r2, r5
 800d7f0:	4641      	mov	r1, r8
 800d7f2:	4638      	mov	r0, r7
 800d7f4:	f7ff ffec 	bl	800d7d0 <_ZN8touchgfx7muldivuEmmmRm>
 800d7f8:	b003      	add	sp, #12
 800d7fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7fe:	f04f 33ff 	mov.w	r3, #4294967295
 800d802:	6033      	str	r3, [r6, #0]
 800d804:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800d808:	e7f6      	b.n	800d7f8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 800d80a:	fa31 f900 	lsrs.w	r9, r1, r0
 800d80e:	fb01 f308 	mul.w	r3, r1, r8
 800d812:	d105      	bne.n	800d820 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 800d814:	fbb3 f0f5 	udiv	r0, r3, r5
 800d818:	fb05 3510 	mls	r5, r5, r0, r3
 800d81c:	6035      	str	r5, [r6, #0]
 800d81e:	e7eb      	b.n	800d7f8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 800d820:	2301      	movs	r3, #1
 800d822:	fa08 fb00 	lsl.w	fp, r8, r0
 800d826:	fa03 f000 	lsl.w	r0, r3, r0
 800d82a:	3801      	subs	r0, #1
 800d82c:	462a      	mov	r2, r5
 800d82e:	4633      	mov	r3, r6
 800d830:	4641      	mov	r1, r8
 800d832:	4038      	ands	r0, r7
 800d834:	f7ff ffcc 	bl	800d7d0 <_ZN8touchgfx7muldivuEmmmRm>
 800d838:	fbbb faf5 	udiv	sl, fp, r5
 800d83c:	462a      	mov	r2, r5
 800d83e:	4607      	mov	r7, r0
 800d840:	ab01      	add	r3, sp, #4
 800d842:	fb05 b11a 	mls	r1, r5, sl, fp
 800d846:	4648      	mov	r0, r9
 800d848:	f7ff ffc2 	bl	800d7d0 <_ZN8touchgfx7muldivuEmmmRm>
 800d84c:	9b01      	ldr	r3, [sp, #4]
 800d84e:	6832      	ldr	r2, [r6, #0]
 800d850:	fb09 f40a 	mul.w	r4, r9, sl
 800d854:	441a      	add	r2, r3
 800d856:	fbb2 f3f5 	udiv	r3, r2, r5
 800d85a:	441c      	add	r4, r3
 800d85c:	443c      	add	r4, r7
 800d85e:	4420      	add	r0, r4
 800d860:	fb05 2513 	mls	r5, r5, r3, r2
 800d864:	e7da      	b.n	800d81c <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0800d866 <_ZN8touchgfx6muldivElllRl>:
 800d866:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d868:	2800      	cmp	r0, #0
 800d86a:	bfba      	itte	lt
 800d86c:	4240      	neglt	r0, r0
 800d86e:	f04f 34ff 	movlt.w	r4, #4294967295
 800d872:	2401      	movge	r4, #1
 800d874:	2900      	cmp	r1, #0
 800d876:	bfbc      	itt	lt
 800d878:	4249      	neglt	r1, r1
 800d87a:	4264      	neglt	r4, r4
 800d87c:	2a00      	cmp	r2, #0
 800d87e:	bfb6      	itet	lt
 800d880:	4265      	neglt	r5, r4
 800d882:	4625      	movge	r5, r4
 800d884:	4252      	neglt	r2, r2
 800d886:	4288      	cmp	r0, r1
 800d888:	461e      	mov	r6, r3
 800d88a:	bfc2      	ittt	gt
 800d88c:	4603      	movgt	r3, r0
 800d88e:	4608      	movgt	r0, r1
 800d890:	4619      	movgt	r1, r3
 800d892:	ab01      	add	r3, sp, #4
 800d894:	f7ff ff9c 	bl	800d7d0 <_ZN8touchgfx7muldivuEmmmRm>
 800d898:	9b01      	ldr	r3, [sp, #4]
 800d89a:	4368      	muls	r0, r5
 800d89c:	435c      	muls	r4, r3
 800d89e:	6034      	str	r4, [r6, #0]
 800d8a0:	b002      	add	sp, #8
 800d8a2:	bd70      	pop	{r4, r5, r6, pc}

0800d8a4 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800d8a4:	2000      	movs	r0, #0
 800d8a6:	4770      	bx	lr

0800d8a8 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800d8a8:	2001      	movs	r0, #1
 800d8aa:	4770      	bx	lr

0800d8ac <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800d8ac:	2002      	movs	r0, #2
 800d8ae:	4770      	bx	lr

0800d8b0 <_ZN8touchgfx6ScreenD1Ev>:
 800d8b0:	4770      	bx	lr

0800d8b2 <_ZN8touchgfx12GestureEventD1Ev>:
 800d8b2:	4770      	bx	lr

0800d8b4 <_ZN8touchgfx9DragEventD1Ev>:
 800d8b4:	4770      	bx	lr

0800d8b6 <_ZN8touchgfx10ClickEventD1Ev>:
 800d8b6:	4770      	bx	lr

0800d8b8 <_ZN8touchgfx10ClickEventD0Ev>:
 800d8b8:	b510      	push	{r4, lr}
 800d8ba:	210c      	movs	r1, #12
 800d8bc:	4604      	mov	r4, r0
 800d8be:	f00d fe2c 	bl	801b51a <_ZdlPvj>
 800d8c2:	4620      	mov	r0, r4
 800d8c4:	bd10      	pop	{r4, pc}

0800d8c6 <_ZN8touchgfx9DragEventD0Ev>:
 800d8c6:	b510      	push	{r4, lr}
 800d8c8:	2110      	movs	r1, #16
 800d8ca:	4604      	mov	r4, r0
 800d8cc:	f00d fe25 	bl	801b51a <_ZdlPvj>
 800d8d0:	4620      	mov	r0, r4
 800d8d2:	bd10      	pop	{r4, pc}

0800d8d4 <_ZN8touchgfx12GestureEventD0Ev>:
 800d8d4:	b510      	push	{r4, lr}
 800d8d6:	210c      	movs	r1, #12
 800d8d8:	4604      	mov	r4, r0
 800d8da:	f00d fe1e 	bl	801b51a <_ZdlPvj>
 800d8de:	4620      	mov	r0, r4
 800d8e0:	bd10      	pop	{r4, pc}

0800d8e2 <_ZN8touchgfx6ScreenD0Ev>:
 800d8e2:	b510      	push	{r4, lr}
 800d8e4:	213c      	movs	r1, #60	; 0x3c
 800d8e6:	4604      	mov	r4, r0
 800d8e8:	f00d fe17 	bl	801b51a <_ZdlPvj>
 800d8ec:	4620      	mov	r0, r4
 800d8ee:	bd10      	pop	{r4, pc}

0800d8f0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800d8f0:	b530      	push	{r4, r5, lr}
 800d8f2:	460d      	mov	r5, r1
 800d8f4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d8f6:	b087      	sub	sp, #28
 800d8f8:	4604      	mov	r4, r0
 800d8fa:	b301      	cbz	r1, 800d93e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800d8fc:	a801      	add	r0, sp, #4
 800d8fe:	f7ff feaa 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d902:	892a      	ldrh	r2, [r5, #8]
 800d904:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d908:	7928      	ldrb	r0, [r5, #4]
 800d90a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d90e:	f88d 0010 	strb.w	r0, [sp, #16]
 800d912:	1ad2      	subs	r2, r2, r3
 800d914:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d916:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d918:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d91c:	441a      	add	r2, r3
 800d91e:	896b      	ldrh	r3, [r5, #10]
 800d920:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800d924:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d928:	1b5b      	subs	r3, r3, r5
 800d92a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800d92c:	442b      	add	r3, r5
 800d92e:	4d05      	ldr	r5, [pc, #20]	; (800d944 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800d930:	9503      	str	r5, [sp, #12]
 800d932:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d936:	6803      	ldr	r3, [r0, #0]
 800d938:	a903      	add	r1, sp, #12
 800d93a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d93c:	4798      	blx	r3
 800d93e:	b007      	add	sp, #28
 800d940:	bd30      	pop	{r4, r5, pc}
 800d942:	bf00      	nop
 800d944:	0801e968 	.word	0x0801e968

0800d948 <_ZNK8touchgfx4Rect9intersectEss>:
 800d948:	b510      	push	{r4, lr}
 800d94a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d94e:	428b      	cmp	r3, r1
 800d950:	dc10      	bgt.n	800d974 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d952:	8884      	ldrh	r4, [r0, #4]
 800d954:	4423      	add	r3, r4
 800d956:	b21b      	sxth	r3, r3
 800d958:	4299      	cmp	r1, r3
 800d95a:	da0b      	bge.n	800d974 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d95c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d960:	4293      	cmp	r3, r2
 800d962:	dc07      	bgt.n	800d974 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800d964:	88c0      	ldrh	r0, [r0, #6]
 800d966:	4418      	add	r0, r3
 800d968:	b200      	sxth	r0, r0
 800d96a:	4282      	cmp	r2, r0
 800d96c:	bfac      	ite	ge
 800d96e:	2000      	movge	r0, #0
 800d970:	2001      	movlt	r0, #1
 800d972:	bd10      	pop	{r4, pc}
 800d974:	2000      	movs	r0, #0
 800d976:	e7fc      	b.n	800d972 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800d978 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800d978:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d97a:	460c      	mov	r4, r1
 800d97c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d97e:	b089      	sub	sp, #36	; 0x24
 800d980:	4605      	mov	r5, r0
 800d982:	2900      	cmp	r1, #0
 800d984:	d054      	beq.n	800da30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800d986:	4668      	mov	r0, sp
 800d988:	f7ff fe65 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d98c:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800d98e:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800d990:	8922      	ldrh	r2, [r4, #8]
 800d992:	88e1      	ldrh	r1, [r4, #6]
 800d994:	443a      	add	r2, r7
 800d996:	4431      	add	r1, r6
 800d998:	b212      	sxth	r2, r2
 800d99a:	b209      	sxth	r1, r1
 800d99c:	4668      	mov	r0, sp
 800d99e:	f7ff ffd3 	bl	800d948 <_ZNK8touchgfx4Rect9intersectEss>
 800d9a2:	b1d0      	cbz	r0, 800d9da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800d9a4:	89a2      	ldrh	r2, [r4, #12]
 800d9a6:	8961      	ldrh	r1, [r4, #10]
 800d9a8:	443a      	add	r2, r7
 800d9aa:	4431      	add	r1, r6
 800d9ac:	b212      	sxth	r2, r2
 800d9ae:	b209      	sxth	r1, r1
 800d9b0:	4668      	mov	r0, sp
 800d9b2:	f7ff ffc9 	bl	800d948 <_ZNK8touchgfx4Rect9intersectEss>
 800d9b6:	4603      	mov	r3, r0
 800d9b8:	b978      	cbnz	r0, 800d9da <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800d9ba:	4a1e      	ldr	r2, [pc, #120]	; (800da34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800d9bc:	9204      	str	r2, [sp, #16]
 800d9be:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800d9c0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d9c4:	2202      	movs	r2, #2
 800d9c6:	f88d 2014 	strb.w	r2, [sp, #20]
 800d9ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d9ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d9d2:	6803      	ldr	r3, [r0, #0]
 800d9d4:	a904      	add	r1, sp, #16
 800d9d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d9d8:	4798      	blx	r3
 800d9da:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800d9dc:	a802      	add	r0, sp, #8
 800d9de:	f7ff fe3a 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d9e2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d9e6:	88e0      	ldrh	r0, [r4, #6]
 800d9e8:	8961      	ldrh	r1, [r4, #10]
 800d9ea:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800d9ee:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800d9f2:	8923      	ldrh	r3, [r4, #8]
 800d9f4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800d9f6:	7927      	ldrb	r7, [r4, #4]
 800d9f8:	f88d 7014 	strb.w	r7, [sp, #20]
 800d9fc:	1a80      	subs	r0, r0, r2
 800d9fe:	1a89      	subs	r1, r1, r2
 800da00:	89a2      	ldrh	r2, [r4, #12]
 800da02:	4c0d      	ldr	r4, [pc, #52]	; (800da38 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800da04:	9404      	str	r4, [sp, #16]
 800da06:	4460      	add	r0, ip
 800da08:	eba3 030e 	sub.w	r3, r3, lr
 800da0c:	eba2 020e 	sub.w	r2, r2, lr
 800da10:	f8ad 0016 	strh.w	r0, [sp, #22]
 800da14:	4433      	add	r3, r6
 800da16:	4461      	add	r1, ip
 800da18:	4432      	add	r2, r6
 800da1a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800da1c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800da20:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da24:	f8ad 201c 	strh.w	r2, [sp, #28]
 800da28:	6803      	ldr	r3, [r0, #0]
 800da2a:	a904      	add	r1, sp, #16
 800da2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da2e:	4798      	blx	r3
 800da30:	b009      	add	sp, #36	; 0x24
 800da32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da34:	0801e940 	.word	0x0801e940
 800da38:	0801e954 	.word	0x0801e954

0800da3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800da3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da40:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800da44:	790b      	ldrb	r3, [r1, #4]
 800da46:	b0a1      	sub	sp, #132	; 0x84
 800da48:	4604      	mov	r4, r0
 800da4a:	460d      	mov	r5, r1
 800da4c:	f1b9 0f00 	cmp.w	r9, #0
 800da50:	d00f      	beq.n	800da72 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800da52:	2b00      	cmp	r3, #0
 800da54:	f040 80a0 	bne.w	800db98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800da58:	b021      	add	sp, #132	; 0x84
 800da5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da5e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800da62:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800da66:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800da6a:	1d20      	adds	r0, r4, #4
 800da6c:	f7fb fbe2 	bl	8009234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800da70:	e092      	b.n	800db98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800da72:	2b00      	cmp	r3, #0
 800da74:	d1f0      	bne.n	800da58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800da76:	4b5e      	ldr	r3, [pc, #376]	; (800dbf0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800da78:	681b      	ldr	r3, [r3, #0]
 800da7a:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800da7e:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800da82:	f1ba 0f03 	cmp.w	sl, #3
 800da86:	ddea      	ble.n	800da5e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800da88:	f1ba 0f0c 	cmp.w	sl, #12
 800da8c:	f04f 0303 	mov.w	r3, #3
 800da90:	bfdc      	itt	le
 800da92:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800da96:	fb92 f3f3 	sdivle	r3, r2, r3
 800da9a:	9301      	str	r3, [sp, #4]
 800da9c:	4b55      	ldr	r3, [pc, #340]	; (800dbf4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800da9e:	4956      	ldr	r1, [pc, #344]	; (800dbf8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800daa0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800daa4:	4b55      	ldr	r3, [pc, #340]	; (800dbfc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800daa6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800daaa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800daae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dab2:	ab0e      	add	r3, sp, #56	; 0x38
 800dab4:	2248      	movs	r2, #72	; 0x48
 800dab6:	2600      	movs	r6, #0
 800dab8:	4618      	mov	r0, r3
 800daba:	960a      	str	r6, [sp, #40]	; 0x28
 800dabc:	f00d fdda 	bl	801b674 <memcpy>
 800dac0:	f04f 32ff 	mov.w	r2, #4294967295
 800dac4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800dac8:	f8cd a008 	str.w	sl, [sp, #8]
 800dacc:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800dad0:	fb93 f3f2 	sdiv	r3, r3, r2
 800dad4:	b29b      	uxth	r3, r3
 800dad6:	46b3      	mov	fp, r6
 800dad8:	9303      	str	r3, [sp, #12]
 800dada:	2300      	movs	r3, #0
 800dadc:	9309      	str	r3, [sp, #36]	; 0x24
 800dade:	9b07      	ldr	r3, [sp, #28]
 800dae0:	9a03      	ldr	r2, [sp, #12]
 800dae2:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800dae6:	88ef      	ldrh	r7, [r5, #6]
 800dae8:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800daec:	fb13 f302 	smulbb	r3, r3, r2
 800daf0:	b29b      	uxth	r3, r3
 800daf2:	9304      	str	r3, [sp, #16]
 800daf4:	9b07      	ldr	r3, [sp, #28]
 800daf6:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800dafa:	a80a      	add	r0, sp, #40	; 0x28
 800dafc:	685b      	ldr	r3, [r3, #4]
 800dafe:	fb13 f302 	smulbb	r3, r3, r2
 800db02:	b29b      	uxth	r3, r3
 800db04:	9305      	str	r3, [sp, #20]
 800db06:	9b04      	ldr	r3, [sp, #16]
 800db08:	441f      	add	r7, r3
 800db0a:	9b05      	ldr	r3, [sp, #20]
 800db0c:	4498      	add	r8, r3
 800db0e:	b23f      	sxth	r7, r7
 800db10:	fa0f f888 	sxth.w	r8, r8
 800db14:	4642      	mov	r2, r8
 800db16:	4639      	mov	r1, r7
 800db18:	f7ff ff16 	bl	800d948 <_ZNK8touchgfx4Rect9intersectEss>
 800db1c:	b380      	cbz	r0, 800db80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800db1e:	4639      	mov	r1, r7
 800db20:	ab09      	add	r3, sp, #36	; 0x24
 800db22:	4642      	mov	r2, r8
 800db24:	1d20      	adds	r0, r4, #4
 800db26:	f7fb fb85 	bl	8009234 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800db2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800db2c:	b341      	cbz	r1, 800db80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800db2e:	4549      	cmp	r1, r9
 800db30:	d026      	beq.n	800db80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800db32:	a80c      	add	r0, sp, #48	; 0x30
 800db34:	f7ff fd8f 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db38:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800db3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800db40:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800db44:	2002      	movs	r0, #2
 800db46:	fb92 f2f0 	sdiv	r2, r2, r0
 800db4a:	440a      	add	r2, r1
 800db4c:	1a99      	subs	r1, r3, r2
 800db4e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800db52:	fb93 f3f0 	sdiv	r3, r3, r0
 800db56:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800db5a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800db5e:	4403      	add	r3, r0
 800db60:	1ad3      	subs	r3, r2, r3
 800db62:	435b      	muls	r3, r3
 800db64:	9a06      	ldr	r2, [sp, #24]
 800db66:	fb01 3301 	mla	r3, r1, r1, r3
 800db6a:	4293      	cmp	r3, r2
 800db6c:	d208      	bcs.n	800db80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800db6e:	9a04      	ldr	r2, [sp, #16]
 800db70:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800db74:	86a2      	strh	r2, [r4, #52]	; 0x34
 800db76:	9a05      	ldr	r2, [sp, #20]
 800db78:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800db7c:	86e2      	strh	r2, [r4, #54]	; 0x36
 800db7e:	9306      	str	r3, [sp, #24]
 800db80:	f10b 0b02 	add.w	fp, fp, #2
 800db84:	f1bb 0f08 	cmp.w	fp, #8
 800db88:	dda7      	ble.n	800dada <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800db8a:	9b02      	ldr	r3, [sp, #8]
 800db8c:	4453      	add	r3, sl
 800db8e:	9302      	str	r3, [sp, #8]
 800db90:	9b01      	ldr	r3, [sp, #4]
 800db92:	3601      	adds	r6, #1
 800db94:	42b3      	cmp	r3, r6
 800db96:	d199      	bne.n	800dacc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800db98:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800db9a:	2900      	cmp	r1, #0
 800db9c:	f43f af5c 	beq.w	800da58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dba0:	a80c      	add	r0, sp, #48	; 0x30
 800dba2:	f7ff fd58 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dba6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800dbaa:	88ea      	ldrh	r2, [r5, #6]
 800dbac:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800dbb0:	7929      	ldrb	r1, [r5, #4]
 800dbb2:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800dbb6:	1ad2      	subs	r2, r2, r3
 800dbb8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dbba:	441a      	add	r2, r3
 800dbbc:	892b      	ldrh	r3, [r5, #8]
 800dbbe:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800dbc2:	1a1b      	subs	r3, r3, r0
 800dbc4:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800dbc6:	4403      	add	r3, r0
 800dbc8:	480d      	ldr	r0, [pc, #52]	; (800dc00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800dbca:	900e      	str	r0, [sp, #56]	; 0x38
 800dbcc:	2600      	movs	r6, #0
 800dbce:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dbd0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800dbd4:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800dbd8:	6803      	ldr	r3, [r0, #0]
 800dbda:	a90e      	add	r1, sp, #56	; 0x38
 800dbdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dbde:	4798      	blx	r3
 800dbe0:	792b      	ldrb	r3, [r5, #4]
 800dbe2:	2b00      	cmp	r3, #0
 800dbe4:	f43f af38 	beq.w	800da58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dbe8:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dbec:	e734      	b.n	800da58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dbee:	bf00      	nop
 800dbf0:	2000a198 	.word	0x2000a198
 800dbf4:	2000a18c 	.word	0x2000a18c
 800dbf8:	0801c690 	.word	0x0801c690
 800dbfc:	2000a18e 	.word	0x2000a18e
 800dc00:	0801e940 	.word	0x0801e940

0800dc04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800dc04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dc06:	4604      	mov	r4, r0
 800dc08:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800dc0c:	3201      	adds	r2, #1
 800dc0e:	d112      	bne.n	800dc36 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800dc10:	6803      	ldr	r3, [r0, #0]
 800dc12:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dc16:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dc1a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dc1e:	2500      	movs	r5, #0
 800dc20:	9500      	str	r5, [sp, #0]
 800dc22:	466d      	mov	r5, sp
 800dc24:	4629      	mov	r1, r5
 800dc26:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dc2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc2c:	4798      	blx	r3
 800dc2e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dc32:	e884 0003 	stmia.w	r4, {r0, r1}
 800dc36:	4620      	mov	r0, r4
 800dc38:	b003      	add	sp, #12
 800dc3a:	bd30      	pop	{r4, r5, pc}

0800dc3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800dc3c:	b513      	push	{r0, r1, r4, lr}
 800dc3e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800dc42:	3301      	adds	r3, #1
 800dc44:	4604      	mov	r4, r0
 800dc46:	d109      	bne.n	800dc5c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800dc48:	4601      	mov	r1, r0
 800dc4a:	4668      	mov	r0, sp
 800dc4c:	f7ff fd03 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc50:	f8bd 3000 	ldrh.w	r3, [sp]
 800dc54:	8423      	strh	r3, [r4, #32]
 800dc56:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dc5a:	8463      	strh	r3, [r4, #34]	; 0x22
 800dc5c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800dc60:	b002      	add	sp, #8
 800dc62:	bd10      	pop	{r4, pc}

0800dc64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800dc64:	b513      	push	{r0, r1, r4, lr}
 800dc66:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800dc6a:	3301      	adds	r3, #1
 800dc6c:	4604      	mov	r4, r0
 800dc6e:	d109      	bne.n	800dc84 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800dc70:	4601      	mov	r1, r0
 800dc72:	4668      	mov	r0, sp
 800dc74:	f7ff fcef 	bl	800d656 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc78:	f8bd 3000 	ldrh.w	r3, [sp]
 800dc7c:	8423      	strh	r3, [r4, #32]
 800dc7e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dc82:	8463      	strh	r3, [r4, #34]	; 0x22
 800dc84:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800dc88:	b002      	add	sp, #8
 800dc8a:	bd10      	pop	{r4, pc}

0800dc8c <_ZN8touchgfx6ScreenC1Ev>:
 800dc8c:	b570      	push	{r4, r5, r6, lr}
 800dc8e:	4605      	mov	r5, r0
 800dc90:	4b16      	ldr	r3, [pc, #88]	; (800dcec <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800dc92:	f845 3b04 	str.w	r3, [r5], #4
 800dc96:	2300      	movs	r3, #0
 800dc98:	8103      	strh	r3, [r0, #8]
 800dc9a:	8143      	strh	r3, [r0, #10]
 800dc9c:	8183      	strh	r3, [r0, #12]
 800dc9e:	81c3      	strh	r3, [r0, #14]
 800dca0:	8203      	strh	r3, [r0, #16]
 800dca2:	8243      	strh	r3, [r0, #18]
 800dca4:	8283      	strh	r3, [r0, #20]
 800dca6:	82c3      	strh	r3, [r0, #22]
 800dca8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800dcac:	6203      	str	r3, [r0, #32]
 800dcae:	8483      	strh	r3, [r0, #36]	; 0x24
 800dcb0:	84c3      	strh	r3, [r0, #38]	; 0x26
 800dcb2:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800dcb6:	4a0e      	ldr	r2, [pc, #56]	; (800dcf0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800dcb8:	6343      	str	r3, [r0, #52]	; 0x34
 800dcba:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800dcbe:	4b0d      	ldr	r3, [pc, #52]	; (800dcf4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800dcc0:	6042      	str	r2, [r0, #4]
 800dcc2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800dcc6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800dcc8:	4a0b      	ldr	r2, [pc, #44]	; (800dcf8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800dcca:	4604      	mov	r4, r0
 800dccc:	2101      	movs	r1, #1
 800dcce:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800dcd2:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800dcd6:	f9b2 1000 	ldrsh.w	r1, [r2]
 800dcda:	4628      	mov	r0, r5
 800dcdc:	4798      	blx	r3
 800dcde:	6863      	ldr	r3, [r4, #4]
 800dce0:	4628      	mov	r0, r5
 800dce2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dce4:	4631      	mov	r1, r6
 800dce6:	4798      	blx	r3
 800dce8:	4620      	mov	r0, r4
 800dcea:	bd70      	pop	{r4, r5, r6, pc}
 800dcec:	0801e97c 	.word	0x0801e97c
 800dcf0:	0801db58 	.word	0x0801db58
 800dcf4:	2000a18e 	.word	0x2000a18e
 800dcf8:	2000a18c 	.word	0x2000a18c

0800dcfc <_ZN8touchgfx6Screen4drawEv>:
 800dcfc:	b507      	push	{r0, r1, r2, lr}
 800dcfe:	4b09      	ldr	r3, [pc, #36]	; (800dd24 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800dd00:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd04:	4b08      	ldr	r3, [pc, #32]	; (800dd28 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800dd06:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dd0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd0e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dd12:	6803      	ldr	r3, [r0, #0]
 800dd14:	2100      	movs	r1, #0
 800dd16:	9100      	str	r1, [sp, #0]
 800dd18:	689b      	ldr	r3, [r3, #8]
 800dd1a:	4669      	mov	r1, sp
 800dd1c:	4798      	blx	r3
 800dd1e:	b003      	add	sp, #12
 800dd20:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd24:	2000a18c 	.word	0x2000a18c
 800dd28:	2000a18e 	.word	0x2000a18e

0800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800dd2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd30:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800dd34:	2b00      	cmp	r3, #0
 800dd36:	b089      	sub	sp, #36	; 0x24
 800dd38:	4680      	mov	r8, r0
 800dd3a:	460c      	mov	r4, r1
 800dd3c:	4615      	mov	r5, r2
 800dd3e:	dd0e      	ble.n	800dd5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dd40:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	dd0a      	ble.n	800dd5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dd48:	4628      	mov	r0, r5
 800dd4a:	f7ff ff5b 	bl	800dc04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dd4e:	4621      	mov	r1, r4
 800dd50:	f7fe fb8a 	bl	800c468 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dd54:	69eb      	ldr	r3, [r5, #28]
 800dd56:	b928      	cbnz	r0, 800dd64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800dd58:	461d      	mov	r5, r3
 800dd5a:	2b00      	cmp	r3, #0
 800dd5c:	d1f4      	bne.n	800dd48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800dd5e:	b009      	add	sp, #36	; 0x24
 800dd60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd64:	ae04      	add	r6, sp, #16
 800dd66:	2b00      	cmp	r3, #0
 800dd68:	f000 80b5 	beq.w	800ded6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dd6c:	682b      	ldr	r3, [r5, #0]
 800dd6e:	4629      	mov	r1, r5
 800dd70:	68db      	ldr	r3, [r3, #12]
 800dd72:	a802      	add	r0, sp, #8
 800dd74:	4798      	blx	r3
 800dd76:	4628      	mov	r0, r5
 800dd78:	f7ff ff60 	bl	800dc3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800dd7c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800dd80:	4407      	add	r7, r0
 800dd82:	4628      	mov	r0, r5
 800dd84:	f7ff ff6e 	bl	800dc64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dd88:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dd8c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dd90:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dd94:	4418      	add	r0, r3
 800dd96:	4621      	mov	r1, r4
 800dd98:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800dd9c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800dda0:	b23f      	sxth	r7, r7
 800dda2:	4630      	mov	r0, r6
 800dda4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dda8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800ddac:	f7fb fafc 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800ddb0:	4628      	mov	r0, r5
 800ddb2:	f7ff ff27 	bl	800dc04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ddb6:	4602      	mov	r2, r0
 800ddb8:	e896 0003 	ldmia.w	r6, {r0, r1}
 800ddbc:	ab06      	add	r3, sp, #24
 800ddbe:	e883 0003 	stmia.w	r3, {r0, r1}
 800ddc2:	4611      	mov	r1, r2
 800ddc4:	4618      	mov	r0, r3
 800ddc6:	f7fb faef 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800ddca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ddce:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ddd2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800ddd6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800ddda:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ddde:	4299      	cmp	r1, r3
 800dde0:	d10b      	bne.n	800ddfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800dde2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dde6:	4552      	cmp	r2, sl
 800dde8:	d107      	bne.n	800ddfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ddea:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800ddee:	455a      	cmp	r2, fp
 800ddf0:	d103      	bne.n	800ddfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800ddf2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ddf6:	454a      	cmp	r2, r9
 800ddf8:	d06d      	beq.n	800ded6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ddfa:	f1bb 0f00 	cmp.w	fp, #0
 800ddfe:	dd65      	ble.n	800decc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800de00:	f1b9 0f00 	cmp.w	r9, #0
 800de04:	dd62      	ble.n	800decc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800de06:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800de0a:	fa1f f08a 	uxth.w	r0, sl
 800de0e:	4552      	cmp	r2, sl
 800de10:	9000      	str	r0, [sp, #0]
 800de12:	da12      	bge.n	800de3a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800de14:	9301      	str	r3, [sp, #4]
 800de16:	9b00      	ldr	r3, [sp, #0]
 800de18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800de1c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800de20:	1a9a      	subs	r2, r3, r2
 800de22:	f8ad 1010 	strh.w	r1, [sp, #16]
 800de26:	f8ad 0014 	strh.w	r0, [sp, #20]
 800de2a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800de2e:	69ea      	ldr	r2, [r5, #28]
 800de30:	4631      	mov	r1, r6
 800de32:	4640      	mov	r0, r8
 800de34:	f7ff ff7a 	bl	800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de38:	9b01      	ldr	r3, [sp, #4]
 800de3a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800de3e:	429a      	cmp	r2, r3
 800de40:	b29f      	uxth	r7, r3
 800de42:	da0d      	bge.n	800de60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800de44:	f8ad 2010 	strh.w	r2, [sp, #16]
 800de48:	1aba      	subs	r2, r7, r2
 800de4a:	f8ad a012 	strh.w	sl, [sp, #18]
 800de4e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800de52:	f8ad 9016 	strh.w	r9, [sp, #22]
 800de56:	69ea      	ldr	r2, [r5, #28]
 800de58:	4631      	mov	r1, r6
 800de5a:	4640      	mov	r0, r8
 800de5c:	f7ff ff66 	bl	800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de60:	8822      	ldrh	r2, [r4, #0]
 800de62:	88a3      	ldrh	r3, [r4, #4]
 800de64:	445f      	add	r7, fp
 800de66:	4413      	add	r3, r2
 800de68:	b29b      	uxth	r3, r3
 800de6a:	b2bf      	uxth	r7, r7
 800de6c:	b23a      	sxth	r2, r7
 800de6e:	b219      	sxth	r1, r3
 800de70:	4291      	cmp	r1, r2
 800de72:	dd0d      	ble.n	800de90 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800de74:	1bdb      	subs	r3, r3, r7
 800de76:	f8ad 2010 	strh.w	r2, [sp, #16]
 800de7a:	f8ad a012 	strh.w	sl, [sp, #18]
 800de7e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800de82:	f8ad 9016 	strh.w	r9, [sp, #22]
 800de86:	69ea      	ldr	r2, [r5, #28]
 800de88:	4631      	mov	r1, r6
 800de8a:	4640      	mov	r0, r8
 800de8c:	f7ff ff4e 	bl	800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800de90:	88e2      	ldrh	r2, [r4, #6]
 800de92:	8863      	ldrh	r3, [r4, #2]
 800de94:	4413      	add	r3, r2
 800de96:	9a00      	ldr	r2, [sp, #0]
 800de98:	444a      	add	r2, r9
 800de9a:	b29b      	uxth	r3, r3
 800de9c:	fa1f f982 	uxth.w	r9, r2
 800dea0:	fa0f f289 	sxth.w	r2, r9
 800dea4:	b219      	sxth	r1, r3
 800dea6:	428a      	cmp	r2, r1
 800dea8:	da15      	bge.n	800ded6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800deaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800deae:	f9b4 0000 	ldrsh.w	r0, [r4]
 800deb2:	f8ad 1014 	strh.w	r1, [sp, #20]
 800deb6:	eba3 0309 	sub.w	r3, r3, r9
 800deba:	f8ad 0010 	strh.w	r0, [sp, #16]
 800debe:	f8ad 2012 	strh.w	r2, [sp, #18]
 800dec2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dec6:	69ea      	ldr	r2, [r5, #28]
 800dec8:	4631      	mov	r1, r6
 800deca:	e001      	b.n	800ded0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800decc:	69ea      	ldr	r2, [r5, #28]
 800dece:	4621      	mov	r1, r4
 800ded0:	4640      	mov	r0, r8
 800ded2:	f7ff ff2b 	bl	800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ded6:	4628      	mov	r0, r5
 800ded8:	f7ff fe94 	bl	800dc04 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dedc:	6861      	ldr	r1, [r4, #4]
 800dede:	4602      	mov	r2, r0
 800dee0:	6820      	ldr	r0, [r4, #0]
 800dee2:	4633      	mov	r3, r6
 800dee4:	c303      	stmia	r3!, {r0, r1}
 800dee6:	4611      	mov	r1, r2
 800dee8:	4630      	mov	r0, r6
 800deea:	f7fb fa5d 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800deee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800def2:	2b00      	cmp	r3, #0
 800def4:	f77f af33 	ble.w	800dd5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800def8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800defc:	2b00      	cmp	r3, #0
 800defe:	f77f af2e 	ble.w	800dd5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df02:	4628      	mov	r0, r5
 800df04:	f7ff fe9a 	bl	800dc3c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800df08:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800df0c:	1a18      	subs	r0, r3, r0
 800df0e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800df12:	4628      	mov	r0, r5
 800df14:	f7ff fea6 	bl	800dc64 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800df18:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800df1c:	1a18      	subs	r0, r3, r0
 800df1e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800df22:	682b      	ldr	r3, [r5, #0]
 800df24:	4631      	mov	r1, r6
 800df26:	689b      	ldr	r3, [r3, #8]
 800df28:	4628      	mov	r0, r5
 800df2a:	4798      	blx	r3
 800df2c:	e717      	b.n	800dd5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800df2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800df2e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df30:	aa02      	add	r2, sp, #8
 800df32:	2300      	movs	r3, #0
 800df34:	f842 3d04 	str.w	r3, [r2, #-4]!
 800df38:	4604      	mov	r4, r0
 800df3a:	3004      	adds	r0, #4
 800df3c:	460d      	mov	r5, r1
 800df3e:	f7fb fb0b 	bl	8009558 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800df42:	9a01      	ldr	r2, [sp, #4]
 800df44:	b11a      	cbz	r2, 800df4e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800df46:	4629      	mov	r1, r5
 800df48:	4620      	mov	r0, r4
 800df4a:	f7ff feef 	bl	800dd2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800df4e:	b003      	add	sp, #12
 800df50:	bd30      	pop	{r4, r5, pc}

0800df52 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800df52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df54:	4602      	mov	r2, r0
 800df56:	4604      	mov	r4, r0
 800df58:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800df5c:	460d      	mov	r5, r1
 800df5e:	6851      	ldr	r1, [r2, #4]
 800df60:	466b      	mov	r3, sp
 800df62:	c303      	stmia	r3!, {r0, r1}
 800df64:	4629      	mov	r1, r5
 800df66:	4668      	mov	r0, sp
 800df68:	f7fb fa1e 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 800df6c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df70:	4669      	mov	r1, sp
 800df72:	b123      	cbz	r3, 800df7e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800df74:	4620      	mov	r0, r4
 800df76:	f7ff ffda 	bl	800df2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800df7a:	b003      	add	sp, #12
 800df7c:	bd30      	pop	{r4, r5, pc}
 800df7e:	1d20      	adds	r0, r4, #4
 800df80:	f7fb fab1 	bl	80094e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800df84:	e7f9      	b.n	800df7a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800df86 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800df86:	680a      	ldr	r2, [r1, #0]
 800df88:	460b      	mov	r3, r1
 800df8a:	6992      	ldr	r2, [r2, #24]
 800df8c:	1d01      	adds	r1, r0, #4
 800df8e:	4618      	mov	r0, r3
 800df90:	4710      	bx	r2

0800df92 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800df92:	b510      	push	{r4, lr}
 800df94:	4298      	cmp	r0, r3
 800df96:	eb01 0402 	add.w	r4, r1, r2
 800df9a:	b224      	sxth	r4, r4
 800df9c:	d226      	bcs.n	800dfec <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800df9e:	b32b      	cbz	r3, 800dfec <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800dfa0:	ee07 2a90 	vmov	s15, r2
 800dfa4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800dfa8:	ee07 0a90 	vmov	s15, r0
 800dfac:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800dfb0:	ee07 3a90 	vmov	s15, r3
 800dfb4:	ee67 6a26 	vmul.f32	s13, s14, s13
 800dfb8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800dfbc:	ee07 1a90 	vmov	s15, r1
 800dfc0:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800dfc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dfc8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dfcc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800dfd0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800dfd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfd8:	bfcc      	ite	gt
 800dfda:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800dfde:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800dfe2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dfe6:	ee17 3a90 	vmov	r3, s15
 800dfea:	b21c      	sxth	r4, r3
 800dfec:	4620      	mov	r0, r4
 800dfee:	bd10      	pop	{r4, pc}

0800dff0 <_ZN8touchgfx12TextProviderC1Ev>:
 800dff0:	b538      	push	{r3, r4, r5, lr}
 800dff2:	2500      	movs	r5, #0
 800dff4:	4604      	mov	r4, r0
 800dff6:	e9c0 5500 	strd	r5, r5, [r0]
 800dffa:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800dffe:	7405      	strb	r5, [r0, #16]
 800e000:	82c5      	strh	r5, [r0, #22]
 800e002:	8305      	strh	r5, [r0, #24]
 800e004:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800e006:	8605      	strh	r5, [r0, #48]	; 0x30
 800e008:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e00a:	8705      	strh	r5, [r0, #56]	; 0x38
 800e00c:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 800e010:	220e      	movs	r2, #14
 800e012:	4629      	mov	r1, r5
 800e014:	3044      	adds	r0, #68	; 0x44
 800e016:	f00d fb3b 	bl	801b690 <memset>
 800e01a:	2301      	movs	r3, #1
 800e01c:	4620      	mov	r0, r4
 800e01e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 800e022:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e026:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 800e02a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800e02e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 800e032:	f7f4 fbdb 	bl	80027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e036:	4620      	mov	r0, r4
 800e038:	bd38      	pop	{r3, r4, r5, pc}

0800e03a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e03a:	b530      	push	{r4, r5, lr}
 800e03c:	2500      	movs	r5, #0
 800e03e:	2401      	movs	r4, #1
 800e040:	6843      	ldr	r3, [r0, #4]
 800e042:	b913      	cbnz	r3, 800e04a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e044:	6803      	ldr	r3, [r0, #0]
 800e046:	b1f3      	cbz	r3, 800e086 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e048:	6043      	str	r3, [r0, #4]
 800e04a:	7c03      	ldrb	r3, [r0, #16]
 800e04c:	b143      	cbz	r3, 800e060 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e04e:	68c3      	ldr	r3, [r0, #12]
 800e050:	b12b      	cbz	r3, 800e05e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e052:	881a      	ldrh	r2, [r3, #0]
 800e054:	b11a      	cbz	r2, 800e05e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e056:	1c9a      	adds	r2, r3, #2
 800e058:	60c2      	str	r2, [r0, #12]
 800e05a:	8818      	ldrh	r0, [r3, #0]
 800e05c:	bd30      	pop	{r4, r5, pc}
 800e05e:	7405      	strb	r5, [r0, #16]
 800e060:	6843      	ldr	r3, [r0, #4]
 800e062:	8819      	ldrh	r1, [r3, #0]
 800e064:	b179      	cbz	r1, 800e086 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e066:	1c9a      	adds	r2, r3, #2
 800e068:	2902      	cmp	r1, #2
 800e06a:	6042      	str	r2, [r0, #4]
 800e06c:	d1f5      	bne.n	800e05a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e06e:	6883      	ldr	r3, [r0, #8]
 800e070:	1d1a      	adds	r2, r3, #4
 800e072:	6082      	str	r2, [r0, #8]
 800e074:	681b      	ldr	r3, [r3, #0]
 800e076:	60c3      	str	r3, [r0, #12]
 800e078:	2b00      	cmp	r3, #0
 800e07a:	d0e1      	beq.n	800e040 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e07c:	881b      	ldrh	r3, [r3, #0]
 800e07e:	2b00      	cmp	r3, #0
 800e080:	d0de      	beq.n	800e040 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e082:	7404      	strb	r4, [r0, #16]
 800e084:	e7dc      	b.n	800e040 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e086:	2000      	movs	r0, #0
 800e088:	e7e8      	b.n	800e05c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e08a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e08a:	b410      	push	{r4}
 800e08c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e08e:	9b01      	ldr	r3, [sp, #4]
 800e090:	6403      	str	r3, [r0, #64]	; 0x40
 800e092:	2300      	movs	r3, #0
 800e094:	6082      	str	r2, [r0, #8]
 800e096:	6001      	str	r1, [r0, #0]
 800e098:	6043      	str	r3, [r0, #4]
 800e09a:	60c3      	str	r3, [r0, #12]
 800e09c:	7403      	strb	r3, [r0, #16]
 800e09e:	8603      	strh	r3, [r0, #48]	; 0x30
 800e0a0:	8303      	strh	r3, [r0, #24]
 800e0a2:	8703      	strh	r3, [r0, #56]	; 0x38
 800e0a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e0a8:	f7f4 bba0 	b.w	80027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e0ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0ae:	4605      	mov	r5, r0
 800e0b0:	4608      	mov	r0, r1
 800e0b2:	b1e9      	cbz	r1, 800e0f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e0b4:	f105 0444 	add.w	r4, r5, #68	; 0x44
 800e0b8:	460b      	mov	r3, r1
 800e0ba:	f101 0708 	add.w	r7, r1, #8
 800e0be:	4622      	mov	r2, r4
 800e0c0:	6818      	ldr	r0, [r3, #0]
 800e0c2:	6859      	ldr	r1, [r3, #4]
 800e0c4:	4626      	mov	r6, r4
 800e0c6:	c603      	stmia	r6!, {r0, r1}
 800e0c8:	3308      	adds	r3, #8
 800e0ca:	42bb      	cmp	r3, r7
 800e0cc:	4634      	mov	r4, r6
 800e0ce:	d1f7      	bne.n	800e0c0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e0d0:	6818      	ldr	r0, [r3, #0]
 800e0d2:	6030      	str	r0, [r6, #0]
 800e0d4:	889b      	ldrh	r3, [r3, #4]
 800e0d6:	80b3      	strh	r3, [r6, #4]
 800e0d8:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 800e0dc:	015b      	lsls	r3, r3, #5
 800e0de:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e0e2:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 800e0e6:	430b      	orrs	r3, r1
 800e0e8:	425b      	negs	r3, r3
 800e0ea:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 800e0ee:	4610      	mov	r0, r2
 800e0f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e0f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e0f2:	b538      	push	{r3, r4, r5, lr}
 800e0f4:	460c      	mov	r4, r1
 800e0f6:	6811      	ldr	r1, [r2, #0]
 800e0f8:	4610      	mov	r0, r2
 800e0fa:	68cd      	ldr	r5, [r1, #12]
 800e0fc:	4619      	mov	r1, r3
 800e0fe:	47a8      	blx	r5
 800e100:	2800      	cmp	r0, #0
 800e102:	bf08      	it	eq
 800e104:	4620      	moveq	r0, r4
 800e106:	bd38      	pop	{r3, r4, r5, pc}

0800e108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e10a:	4604      	mov	r4, r0
 800e10c:	4615      	mov	r5, r2
 800e10e:	4608      	mov	r0, r1
 800e110:	b93a      	cbnz	r2, 800e122 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e112:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e116:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 800e11a:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 800e11e:	4628      	mov	r0, r5
 800e120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e122:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e126:	8893      	ldrh	r3, [r2, #4]
 800e128:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e12c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e130:	79ee      	ldrb	r6, [r5, #7]
 800e132:	4316      	orrs	r6, r2
 800e134:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e138:	189a      	adds	r2, r3, r2
 800e13a:	b291      	uxth	r1, r2
 800e13c:	291d      	cmp	r1, #29
 800e13e:	b2b7      	uxth	r7, r6
 800e140:	f200 8083 	bhi.w	800e24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e144:	2201      	movs	r2, #1
 800e146:	408a      	lsls	r2, r1
 800e148:	4978      	ldr	r1, [pc, #480]	; (800e32c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e14a:	420a      	tst	r2, r1
 800e14c:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e150:	d12d      	bne.n	800e1ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e152:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e156:	d078      	beq.n	800e24a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e158:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800e15c:	462b      	mov	r3, r5
 800e15e:	f105 0e08 	add.w	lr, r5, #8
 800e162:	4615      	mov	r5, r2
 800e164:	6818      	ldr	r0, [r3, #0]
 800e166:	6859      	ldr	r1, [r3, #4]
 800e168:	4694      	mov	ip, r2
 800e16a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e16e:	3308      	adds	r3, #8
 800e170:	4573      	cmp	r3, lr
 800e172:	4662      	mov	r2, ip
 800e174:	d1f6      	bne.n	800e164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e176:	6818      	ldr	r0, [r3, #0]
 800e178:	f8cc 0000 	str.w	r0, [ip]
 800e17c:	889b      	ldrh	r3, [r3, #4]
 800e17e:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e182:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 800e186:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800e18a:	b2b3      	uxth	r3, r6
 800e18c:	1aca      	subs	r2, r1, r3
 800e18e:	b292      	uxth	r2, r2
 800e190:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800e194:	10d2      	asrs	r2, r2, #3
 800e196:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e19a:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e19e:	4302      	orrs	r2, r0
 800e1a0:	1bcf      	subs	r7, r1, r7
 800e1a2:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800e1a6:	1afb      	subs	r3, r7, r3
 800e1a8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800e1ac:	e7b7      	b.n	800e11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e1ae:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e1b0:	b92b      	cbnz	r3, 800e1be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e1b2:	4b5f      	ldr	r3, [pc, #380]	; (800e330 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e1b4:	4a5f      	ldr	r2, [pc, #380]	; (800e334 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e1b6:	4860      	ldr	r0, [pc, #384]	; (800e338 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e1b8:	21bf      	movs	r1, #191	; 0xbf
 800e1ba:	f00d f9dd 	bl	801b578 <__assert_func>
 800e1be:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e1c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e1c4:	8b59      	ldrh	r1, [r3, #26]
 800e1c6:	f640 6333 	movw	r3, #3635	; 0xe33
 800e1ca:	4299      	cmp	r1, r3
 800e1cc:	d110      	bne.n	800e1f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e1ce:	6803      	ldr	r3, [r0, #0]
 800e1d0:	68db      	ldr	r3, [r3, #12]
 800e1d2:	4798      	blx	r3
 800e1d4:	7b41      	ldrb	r1, [r0, #13]
 800e1d6:	00cb      	lsls	r3, r1, #3
 800e1d8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e1dc:	7a03      	ldrb	r3, [r0, #8]
 800e1de:	0648      	lsls	r0, r1, #25
 800e1e0:	ea43 0302 	orr.w	r3, r3, r2
 800e1e4:	bf44      	itt	mi
 800e1e6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e1ea:	b21b      	sxthmi	r3, r3
 800e1ec:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e1f0:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800e1f4:	443b      	add	r3, r7
 800e1f6:	4433      	add	r3, r6
 800e1f8:	b29b      	uxth	r3, r3
 800e1fa:	f104 0644 	add.w	r6, r4, #68	; 0x44
 800e1fe:	462a      	mov	r2, r5
 800e200:	f105 0c08 	add.w	ip, r5, #8
 800e204:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e208:	4635      	mov	r5, r6
 800e20a:	6810      	ldr	r0, [r2, #0]
 800e20c:	6851      	ldr	r1, [r2, #4]
 800e20e:	4637      	mov	r7, r6
 800e210:	c703      	stmia	r7!, {r0, r1}
 800e212:	3208      	adds	r2, #8
 800e214:	4562      	cmp	r2, ip
 800e216:	463e      	mov	r6, r7
 800e218:	d1f7      	bne.n	800e20a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e21a:	6810      	ldr	r0, [r2, #0]
 800e21c:	6038      	str	r0, [r7, #0]
 800e21e:	8892      	ldrh	r2, [r2, #4]
 800e220:	80ba      	strh	r2, [r7, #4]
 800e222:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e226:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e22a:	10db      	asrs	r3, r3, #3
 800e22c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e230:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e234:	4313      	orrs	r3, r2
 800e236:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e23a:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 800e23e:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 800e242:	1a9b      	subs	r3, r3, r2
 800e244:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e248:	e769      	b.n	800e11e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e24a:	f023 0204 	bic.w	r2, r3, #4
 800e24e:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e252:	428a      	cmp	r2, r1
 800e254:	d003      	beq.n	800e25e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e256:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e25a:	4293      	cmp	r3, r2
 800e25c:	d120      	bne.n	800e2a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e25e:	3b01      	subs	r3, #1
 800e260:	4602      	mov	r2, r0
 800e262:	b29b      	uxth	r3, r3
 800e264:	4629      	mov	r1, r5
 800e266:	4620      	mov	r0, r4
 800e268:	f7ff ff43 	bl	800e0f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e26c:	7b41      	ldrb	r1, [r0, #13]
 800e26e:	00cb      	lsls	r3, r1, #3
 800e270:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e274:	7a03      	ldrb	r3, [r0, #8]
 800e276:	0649      	lsls	r1, r1, #25
 800e278:	ea43 0302 	orr.w	r3, r3, r2
 800e27c:	bf44      	itt	mi
 800e27e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e282:	b21b      	sxthmi	r3, r3
 800e284:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e288:	7b6b      	ldrb	r3, [r5, #13]
 800e28a:	7aaa      	ldrb	r2, [r5, #10]
 800e28c:	005b      	lsls	r3, r3, #1
 800e28e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e292:	4313      	orrs	r3, r2
 800e294:	115a      	asrs	r2, r3, #5
 800e296:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e29a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800e29e:	e036      	b.n	800e30e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e2a0:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e2a4:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e2a8:	7a2a      	ldrb	r2, [r5, #8]
 800e2aa:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e2ae:	ea42 0201 	orr.w	r2, r2, r1
 800e2b2:	bf1c      	itt	ne
 800e2b4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e2b8:	b212      	sxthne	r2, r2
 800e2ba:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e2be:	f640 6109 	movw	r1, #3593	; 0xe09
 800e2c2:	f023 0210 	bic.w	r2, r3, #16
 800e2c6:	428a      	cmp	r2, r1
 800e2c8:	d003      	beq.n	800e2d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e2ca:	f640 6213 	movw	r2, #3603	; 0xe13
 800e2ce:	4293      	cmp	r3, r2
 800e2d0:	d12a      	bne.n	800e328 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e2d2:	7b6e      	ldrb	r6, [r5, #13]
 800e2d4:	0076      	lsls	r6, r6, #1
 800e2d6:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e2da:	7aae      	ldrb	r6, [r5, #10]
 800e2dc:	4316      	orrs	r6, r2
 800e2de:	f640 6213 	movw	r2, #3603	; 0xe13
 800e2e2:	4293      	cmp	r3, r2
 800e2e4:	bf18      	it	ne
 800e2e6:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e2ea:	4602      	mov	r2, r0
 800e2ec:	bf14      	ite	ne
 800e2ee:	b29b      	uxthne	r3, r3
 800e2f0:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e2f4:	4629      	mov	r1, r5
 800e2f6:	4620      	mov	r0, r4
 800e2f8:	f7ff fefb 	bl	800e0f2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e2fc:	7b43      	ldrb	r3, [r0, #13]
 800e2fe:	7a82      	ldrb	r2, [r0, #10]
 800e300:	005b      	lsls	r3, r3, #1
 800e302:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e306:	4313      	orrs	r3, r2
 800e308:	1af6      	subs	r6, r6, r3
 800e30a:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 800e30e:	7b69      	ldrb	r1, [r5, #13]
 800e310:	00cb      	lsls	r3, r1, #3
 800e312:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e316:	7a2b      	ldrb	r3, [r5, #8]
 800e318:	4313      	orrs	r3, r2
 800e31a:	064a      	lsls	r2, r1, #25
 800e31c:	bf44      	itt	mi
 800e31e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e322:	b21b      	sxthmi	r3, r3
 800e324:	1bdb      	subs	r3, r3, r7
 800e326:	e73f      	b.n	800e1a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e328:	2300      	movs	r3, #0
 800e32a:	e7b6      	b.n	800e29a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e32c:	3fc00079 	.word	0x3fc00079
 800e330:	0801d1c0 	.word	0x0801d1c0
 800e334:	0801ebd7 	.word	0x0801ebd7
 800e338:	0801d292 	.word	0x0801d292

0800e33c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e33c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e340:	4604      	mov	r4, r0
 800e342:	b942      	cbnz	r2, 800e356 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e344:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e348:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e34c:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 800e350:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800e354:	e046      	b.n	800e3e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e356:	7b51      	ldrb	r1, [r2, #13]
 800e358:	8893      	ldrh	r3, [r2, #4]
 800e35a:	010f      	lsls	r7, r1, #4
 800e35c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e360:	79d7      	ldrb	r7, [r2, #7]
 800e362:	4307      	orrs	r7, r0
 800e364:	2f04      	cmp	r7, #4
 800e366:	b2bd      	uxth	r5, r7
 800e368:	bfcc      	ite	gt
 800e36a:	08bf      	lsrgt	r7, r7, #2
 800e36c:	2701      	movle	r7, #1
 800e36e:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e372:	f200 80ab 	bhi.w	800e4cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e376:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e37a:	4283      	cmp	r3, r0
 800e37c:	d216      	bcs.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e37e:	f240 605b 	movw	r0, #1627	; 0x65b
 800e382:	4283      	cmp	r3, r0
 800e384:	d859      	bhi.n	800e43a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e386:	f240 6057 	movw	r0, #1623	; 0x657
 800e38a:	4283      	cmp	r3, r0
 800e38c:	d20e      	bcs.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e38e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e392:	d24a      	bcs.n	800e42a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e394:	f240 604e 	movw	r0, #1614	; 0x64e
 800e398:	4283      	cmp	r3, r0
 800e39a:	d207      	bcs.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e39c:	f240 601a 	movw	r0, #1562	; 0x61a
 800e3a0:	4283      	cmp	r3, r0
 800e3a2:	d02a      	beq.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e3a4:	d821      	bhi.n	800e3ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e3a6:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e3aa:	d35b      	bcc.n	800e464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e3ac:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 800e3b0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e3b4:	f040 80d0 	bne.w	800e558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e3b8:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 800e3bc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e3c0:	f040 80ca 	bne.w	800e558 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e3c4:	00cb      	lsls	r3, r1, #3
 800e3c6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e3ca:	7a13      	ldrb	r3, [r2, #8]
 800e3cc:	0649      	lsls	r1, r1, #25
 800e3ce:	ea43 0300 	orr.w	r3, r3, r0
 800e3d2:	bf44      	itt	mi
 800e3d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e3d8:	b21b      	sxthmi	r3, r3
 800e3da:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e3de:	1b5d      	subs	r5, r3, r5
 800e3e0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e3e4:	4610      	mov	r0, r2
 800e3e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e3ea:	f240 604b 	movw	r0, #1611	; 0x64b
 800e3ee:	4283      	cmp	r3, r0
 800e3f0:	d338      	bcc.n	800e464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e3f2:	f240 604c 	movw	r0, #1612	; 0x64c
 800e3f6:	4283      	cmp	r3, r0
 800e3f8:	d9d8      	bls.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e3fa:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800e3fe:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 800e402:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e406:	f040 80f1 	bne.w	800e5ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e40a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e40e:	f040 80ed 	bne.w	800e5ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e412:	00cb      	lsls	r3, r1, #3
 800e414:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e418:	7a13      	ldrb	r3, [r2, #8]
 800e41a:	064e      	lsls	r6, r1, #25
 800e41c:	ea43 0300 	orr.w	r3, r3, r0
 800e420:	bf44      	itt	mi
 800e422:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e426:	b21b      	sxthmi	r3, r3
 800e428:	e7d9      	b.n	800e3de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e42a:	f240 6054 	movw	r0, #1620	; 0x654
 800e42e:	4283      	cmp	r3, r0
 800e430:	d8e3      	bhi.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e432:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e436:	d9e0      	bls.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e438:	e7b8      	b.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e43a:	f240 6074 	movw	r0, #1652	; 0x674
 800e43e:	4283      	cmp	r3, r0
 800e440:	d0b4      	beq.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e442:	d82d      	bhi.n	800e4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e444:	f240 605e 	movw	r0, #1630	; 0x65e
 800e448:	4283      	cmp	r3, r0
 800e44a:	d804      	bhi.n	800e456 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e44c:	f240 605d 	movw	r0, #1629	; 0x65d
 800e450:	4283      	cmp	r3, r0
 800e452:	d3d2      	bcc.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e454:	e7aa      	b.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e456:	f240 605f 	movw	r0, #1631	; 0x65f
 800e45a:	4283      	cmp	r3, r0
 800e45c:	d0cd      	beq.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e45e:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e462:	d0a3      	beq.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e464:	00cb      	lsls	r3, r1, #3
 800e466:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e46a:	7a13      	ldrb	r3, [r2, #8]
 800e46c:	0649      	lsls	r1, r1, #25
 800e46e:	ea43 0300 	orr.w	r3, r3, r0
 800e472:	bf44      	itt	mi
 800e474:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e478:	b21b      	sxthmi	r3, r3
 800e47a:	1b5d      	subs	r5, r3, r5
 800e47c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e480:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e484:	7b53      	ldrb	r3, [r2, #13]
 800e486:	015b      	lsls	r3, r3, #5
 800e488:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e48c:	7993      	ldrb	r3, [r2, #6]
 800e48e:	430b      	orrs	r3, r1
 800e490:	005b      	lsls	r3, r3, #1
 800e492:	2105      	movs	r1, #5
 800e494:	fb93 f3f1 	sdiv	r3, r3, r1
 800e498:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e49c:	440b      	add	r3, r1
 800e49e:	e757      	b.n	800e350 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e4a0:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e4a4:	4283      	cmp	r3, r0
 800e4a6:	d809      	bhi.n	800e4bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e4a8:	f240 60df 	movw	r0, #1759	; 0x6df
 800e4ac:	4283      	cmp	r3, r0
 800e4ae:	f4bf af7d 	bcs.w	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4b2:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e4b6:	2b05      	cmp	r3, #5
 800e4b8:	d8d4      	bhi.n	800e464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e4ba:	e777      	b.n	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4bc:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e4c0:	4283      	cmp	r3, r0
 800e4c2:	d09a      	beq.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e4c4:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e4c8:	4283      	cmp	r3, r0
 800e4ca:	e7ca      	b.n	800e462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e4cc:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e4d0:	d22b      	bcs.n	800e52a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e4d2:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e4d6:	4283      	cmp	r3, r0
 800e4d8:	d28f      	bcs.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e4da:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e4de:	4283      	cmp	r3, r0
 800e4e0:	d816      	bhi.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e4e2:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e4e6:	4283      	cmp	r3, r0
 800e4e8:	f4bf af60 	bcs.w	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4ec:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e4f0:	4283      	cmp	r3, r0
 800e4f2:	d80a      	bhi.n	800e50a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e4f4:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e4f8:	4283      	cmp	r3, r0
 800e4fa:	f4bf af57 	bcs.w	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4fe:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e502:	4283      	cmp	r3, r0
 800e504:	f43f af79 	beq.w	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e508:	e7ac      	b.n	800e464 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e50a:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e50e:	e7f8      	b.n	800e502 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e510:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e514:	4283      	cmp	r3, r0
 800e516:	d802      	bhi.n	800e51e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e518:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e51c:	e798      	b.n	800e450 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e51e:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e522:	4283      	cmp	r3, r0
 800e524:	f47f af42 	bne.w	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e528:	e767      	b.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e52a:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e52e:	4283      	cmp	r3, r0
 800e530:	f43f af63 	beq.w	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e534:	d802      	bhi.n	800e53c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e536:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e53a:	e7f2      	b.n	800e522 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e53c:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e540:	4283      	cmp	r3, r0
 800e542:	d805      	bhi.n	800e550 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e544:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e548:	4283      	cmp	r3, r0
 800e54a:	f4ff af2f 	bcc.w	800e3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e54e:	e754      	b.n	800e3fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e550:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e554:	4283      	cmp	r3, r0
 800e556:	e7af      	b.n	800e4b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e558:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 800e55c:	4617      	mov	r7, r2
 800e55e:	f102 0808 	add.w	r8, r2, #8
 800e562:	4666      	mov	r6, ip
 800e564:	6838      	ldr	r0, [r7, #0]
 800e566:	6879      	ldr	r1, [r7, #4]
 800e568:	46e6      	mov	lr, ip
 800e56a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e56e:	3708      	adds	r7, #8
 800e570:	4547      	cmp	r7, r8
 800e572:	46f4      	mov	ip, lr
 800e574:	d1f6      	bne.n	800e564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e576:	6838      	ldr	r0, [r7, #0]
 800e578:	f8ce 0000 	str.w	r0, [lr]
 800e57c:	88b9      	ldrh	r1, [r7, #4]
 800e57e:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e582:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800e586:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e58a:	d009      	beq.n	800e5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e58c:	7b51      	ldrb	r1, [r2, #13]
 800e58e:	7992      	ldrb	r2, [r2, #6]
 800e590:	0149      	lsls	r1, r1, #5
 800e592:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e596:	4311      	orrs	r1, r2
 800e598:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e59c:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800e5a0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e5a4:	d00d      	beq.n	800e5c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e5a6:	442b      	add	r3, r5
 800e5a8:	b29b      	uxth	r3, r3
 800e5aa:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e5ae:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e5b2:	10db      	asrs	r3, r3, #3
 800e5b4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e5b8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e5bc:	4313      	orrs	r3, r2
 800e5be:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e5c2:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800e5c6:	00cb      	lsls	r3, r1, #3
 800e5c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e5cc:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800e5d0:	064f      	lsls	r7, r1, #25
 800e5d2:	ea43 0302 	orr.w	r3, r3, r2
 800e5d6:	bf44      	itt	mi
 800e5d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5dc:	b21b      	sxthmi	r3, r3
 800e5de:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e5e2:	1b5d      	subs	r5, r3, r5
 800e5e4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800e5e8:	4632      	mov	r2, r6
 800e5ea:	e6fb      	b.n	800e3e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e5ec:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 800e5f0:	4694      	mov	ip, r2
 800e5f2:	f102 0908 	add.w	r9, r2, #8
 800e5f6:	4676      	mov	r6, lr
 800e5f8:	f8dc 0000 	ldr.w	r0, [ip]
 800e5fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e600:	46f0      	mov	r8, lr
 800e602:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e606:	f10c 0c08 	add.w	ip, ip, #8
 800e60a:	45cc      	cmp	ip, r9
 800e60c:	46c6      	mov	lr, r8
 800e60e:	d1f3      	bne.n	800e5f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e610:	f8dc 0000 	ldr.w	r0, [ip]
 800e614:	f8c8 0000 	str.w	r0, [r8]
 800e618:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e61c:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e620:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800e624:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e628:	d009      	beq.n	800e63e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e62a:	7b51      	ldrb	r1, [r2, #13]
 800e62c:	7992      	ldrb	r2, [r2, #6]
 800e62e:	0149      	lsls	r1, r1, #5
 800e630:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e634:	4311      	orrs	r1, r2
 800e636:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e63a:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800e63e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e642:	d00d      	beq.n	800e660 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e644:	1bdb      	subs	r3, r3, r7
 800e646:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800e64a:	b29b      	uxth	r3, r3
 800e64c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800e650:	10db      	asrs	r3, r3, #3
 800e652:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e656:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e65a:	4313      	orrs	r3, r2
 800e65c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800e660:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800e664:	00cb      	lsls	r3, r1, #3
 800e666:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e66a:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800e66e:	0648      	lsls	r0, r1, #25
 800e670:	ea43 0302 	orr.w	r3, r3, r2
 800e674:	bf44      	itt	mi
 800e676:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e67a:	b21b      	sxthmi	r3, r3
 800e67c:	e7b1      	b.n	800e5e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e680 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e684:	461e      	mov	r6, r3
 800e686:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e688:	4604      	mov	r4, r0
 800e68a:	4617      	mov	r7, r2
 800e68c:	b92b      	cbnz	r3, 800e69a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e68e:	4b25      	ldr	r3, [pc, #148]	; (800e724 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e690:	4a25      	ldr	r2, [pc, #148]	; (800e728 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e692:	4826      	ldr	r0, [pc, #152]	; (800e72c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e694:	21bf      	movs	r1, #191	; 0xbf
 800e696:	f00c ff6f 	bl	801b578 <__assert_func>
 800e69a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e69c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e6a0:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e6a4:	f7f4 f860 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e6a8:	4605      	mov	r5, r0
 800e6aa:	b918      	cbnz	r0, 800e6b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e6ac:	6030      	str	r0, [r6, #0]
 800e6ae:	4628      	mov	r0, r5
 800e6b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6b4:	683b      	ldr	r3, [r7, #0]
 800e6b6:	4601      	mov	r1, r0
 800e6b8:	68db      	ldr	r3, [r3, #12]
 800e6ba:	4638      	mov	r0, r7
 800e6bc:	4798      	blx	r3
 800e6be:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e6c2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e6c6:	4602      	mov	r2, r0
 800e6c8:	6030      	str	r0, [r6, #0]
 800e6ca:	d213      	bcs.n	800e6f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e6cc:	4643      	mov	r3, r8
 800e6ce:	4639      	mov	r1, r7
 800e6d0:	4620      	mov	r0, r4
 800e6d2:	f7ff fe33 	bl	800e33c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e6d6:	6030      	str	r0, [r6, #0]
 800e6d8:	6833      	ldr	r3, [r6, #0]
 800e6da:	b143      	cbz	r3, 800e6ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e6dc:	7b5a      	ldrb	r2, [r3, #13]
 800e6de:	7a9b      	ldrb	r3, [r3, #10]
 800e6e0:	0052      	lsls	r2, r2, #1
 800e6e2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e6e6:	4313      	orrs	r3, r2
 800e6e8:	bf0c      	ite	eq
 800e6ea:	2301      	moveq	r3, #1
 800e6ec:	2300      	movne	r3, #0
 800e6ee:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e6f2:	e7dc      	b.n	800e6ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e6f4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e6f8:	b29b      	uxth	r3, r3
 800e6fa:	2b7f      	cmp	r3, #127	; 0x7f
 800e6fc:	d804      	bhi.n	800e708 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e6fe:	4639      	mov	r1, r7
 800e700:	4620      	mov	r0, r4
 800e702:	f7ff fd01 	bl	800e108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e706:	e7e6      	b.n	800e6d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e708:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800e70c:	2b00      	cmp	r3, #0
 800e70e:	d0e3      	beq.n	800e6d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e710:	f640 1302 	movw	r3, #2306	; 0x902
 800e714:	429d      	cmp	r5, r3
 800e716:	d1df      	bne.n	800e6d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e718:	4601      	mov	r1, r0
 800e71a:	4620      	mov	r0, r4
 800e71c:	f7ff fcc6 	bl	800e0ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e720:	e7d9      	b.n	800e6d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e722:	bf00      	nop
 800e724:	0801d1c0 	.word	0x0801d1c0
 800e728:	0801ebd7 	.word	0x0801ebd7
 800e72c:	0801d292 	.word	0x0801d292

0800e730 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e730:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e734:	461e      	mov	r6, r3
 800e736:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e738:	4604      	mov	r4, r0
 800e73a:	4617      	mov	r7, r2
 800e73c:	b92b      	cbnz	r3, 800e74a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e73e:	4b26      	ldr	r3, [pc, #152]	; (800e7d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e740:	4a26      	ldr	r2, [pc, #152]	; (800e7dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e742:	4827      	ldr	r0, [pc, #156]	; (800e7e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e744:	21bf      	movs	r1, #191	; 0xbf
 800e746:	f00c ff17 	bl	801b578 <__assert_func>
 800e74a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e74c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e750:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e754:	f7f4 f808 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e758:	4605      	mov	r5, r0
 800e75a:	b918      	cbnz	r0, 800e764 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e75c:	6030      	str	r0, [r6, #0]
 800e75e:	4628      	mov	r0, r5
 800e760:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e764:	683b      	ldr	r3, [r7, #0]
 800e766:	4601      	mov	r1, r0
 800e768:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e76c:	4638      	mov	r0, r7
 800e76e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e772:	47c8      	blx	r9
 800e774:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e778:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e77c:	4602      	mov	r2, r0
 800e77e:	6030      	str	r0, [r6, #0]
 800e780:	d213      	bcs.n	800e7aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e782:	4643      	mov	r3, r8
 800e784:	4639      	mov	r1, r7
 800e786:	4620      	mov	r0, r4
 800e788:	f7ff fdd8 	bl	800e33c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e78c:	6030      	str	r0, [r6, #0]
 800e78e:	6833      	ldr	r3, [r6, #0]
 800e790:	b143      	cbz	r3, 800e7a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e792:	7b5a      	ldrb	r2, [r3, #13]
 800e794:	7a9b      	ldrb	r3, [r3, #10]
 800e796:	0052      	lsls	r2, r2, #1
 800e798:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e79c:	4313      	orrs	r3, r2
 800e79e:	bf0c      	ite	eq
 800e7a0:	2301      	moveq	r3, #1
 800e7a2:	2300      	movne	r3, #0
 800e7a4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e7a8:	e7d9      	b.n	800e75e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e7aa:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e7ae:	b29b      	uxth	r3, r3
 800e7b0:	2b7f      	cmp	r3, #127	; 0x7f
 800e7b2:	d804      	bhi.n	800e7be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e7b4:	4639      	mov	r1, r7
 800e7b6:	4620      	mov	r0, r4
 800e7b8:	f7ff fca6 	bl	800e108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e7bc:	e7e6      	b.n	800e78c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e7be:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800e7c2:	2b00      	cmp	r3, #0
 800e7c4:	d0e3      	beq.n	800e78e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e7c6:	f640 1302 	movw	r3, #2306	; 0x902
 800e7ca:	429d      	cmp	r5, r3
 800e7cc:	d1df      	bne.n	800e78e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e7ce:	4601      	mov	r1, r0
 800e7d0:	4620      	mov	r0, r4
 800e7d2:	f7ff fc6b 	bl	800e0ac <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e7d6:	e7d9      	b.n	800e78c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e7d8:	0801d1c0 	.word	0x0801d1c0
 800e7dc:	0801ebd7 	.word	0x0801ebd7
 800e7e0:	0801d292 	.word	0x0801d292

0800e7e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e7e4:	b510      	push	{r4, lr}
 800e7e6:	4604      	mov	r4, r0
 800e7e8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e7ea:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e7ec:	b9d9      	cbnz	r1, 800e826 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800e7ee:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e7f0:	2b0a      	cmp	r3, #10
 800e7f2:	d036      	beq.n	800e862 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e7f4:	4620      	mov	r0, r4
 800e7f6:	f7ff fc20 	bl	800e03a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e7fa:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e7fc:	2b09      	cmp	r3, #9
 800e7fe:	d906      	bls.n	800e80e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800e800:	4b18      	ldr	r3, [pc, #96]	; (800e864 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800e802:	4a19      	ldr	r2, [pc, #100]	; (800e868 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e804:	4819      	ldr	r0, [pc, #100]	; (800e86c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e806:	f240 1103 	movw	r1, #259	; 0x103
 800e80a:	f00c feb5 	bl	801b578 <__assert_func>
 800e80e:	1c5a      	adds	r2, r3, #1
 800e810:	8622      	strh	r2, [r4, #48]	; 0x30
 800e812:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e814:	4413      	add	r3, r2
 800e816:	b29b      	uxth	r3, r3
 800e818:	2b09      	cmp	r3, #9
 800e81a:	bf88      	it	hi
 800e81c:	3b0a      	subhi	r3, #10
 800e81e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e822:	8358      	strh	r0, [r3, #26]
 800e824:	e7e3      	b.n	800e7ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800e826:	2b0a      	cmp	r3, #10
 800e828:	d01b      	beq.n	800e862 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e82a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e82c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e830:	3901      	subs	r1, #1
 800e832:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800e834:	8721      	strh	r1, [r4, #56]	; 0x38
 800e836:	1c51      	adds	r1, r2, #1
 800e838:	b289      	uxth	r1, r1
 800e83a:	2901      	cmp	r1, #1
 800e83c:	bf8a      	itet	hi
 800e83e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e842:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800e844:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800e846:	2b09      	cmp	r3, #9
 800e848:	d8da      	bhi.n	800e800 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800e84a:	1c5a      	adds	r2, r3, #1
 800e84c:	8622      	strh	r2, [r4, #48]	; 0x30
 800e84e:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e850:	4413      	add	r3, r2
 800e852:	b29b      	uxth	r3, r3
 800e854:	2b09      	cmp	r3, #9
 800e856:	bf88      	it	hi
 800e858:	3b0a      	subhi	r3, #10
 800e85a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e85e:	8358      	strh	r0, [r3, #26]
 800e860:	e7c2      	b.n	800e7e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800e862:	bd10      	pop	{r4, pc}
 800e864:	0801e9a8 	.word	0x0801e9a8
 800e868:	0801ed2d 	.word	0x0801ed2d
 800e86c:	0801d292 	.word	0x0801d292

0800e870 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e870:	b538      	push	{r3, r4, r5, lr}
 800e872:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800e874:	4604      	mov	r4, r0
 800e876:	b92a      	cbnz	r2, 800e884 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800e878:	4b13      	ldr	r3, [pc, #76]	; (800e8c8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800e87a:	4a14      	ldr	r2, [pc, #80]	; (800e8cc <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800e87c:	4814      	ldr	r0, [pc, #80]	; (800e8d0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800e87e:	21d4      	movs	r1, #212	; 0xd4
 800e880:	f00c fe7a 	bl	801b578 <__assert_func>
 800e884:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e886:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800e88a:	3a01      	subs	r2, #1
 800e88c:	8b4d      	ldrh	r5, [r1, #26]
 800e88e:	8602      	strh	r2, [r0, #48]	; 0x30
 800e890:	1c5a      	adds	r2, r3, #1
 800e892:	b292      	uxth	r2, r2
 800e894:	2a09      	cmp	r2, #9
 800e896:	bf86      	itte	hi
 800e898:	3b09      	subhi	r3, #9
 800e89a:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800e89c:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800e89e:	f7ff ffa1 	bl	800e7e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e8a2:	8b23      	ldrh	r3, [r4, #24]
 800e8a4:	2b01      	cmp	r3, #1
 800e8a6:	bf9c      	itt	ls
 800e8a8:	3301      	addls	r3, #1
 800e8aa:	8323      	strhls	r3, [r4, #24]
 800e8ac:	8ae3      	ldrh	r3, [r4, #22]
 800e8ae:	b90b      	cbnz	r3, 800e8b4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800e8b0:	2302      	movs	r3, #2
 800e8b2:	82e3      	strh	r3, [r4, #22]
 800e8b4:	8ae3      	ldrh	r3, [r4, #22]
 800e8b6:	3b01      	subs	r3, #1
 800e8b8:	b29b      	uxth	r3, r3
 800e8ba:	82e3      	strh	r3, [r4, #22]
 800e8bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e8c0:	4628      	mov	r0, r5
 800e8c2:	8265      	strh	r5, [r4, #18]
 800e8c4:	bd38      	pop	{r3, r4, r5, pc}
 800e8c6:	bf00      	nop
 800e8c8:	0801d1c0 	.word	0x0801d1c0
 800e8cc:	0801ec82 	.word	0x0801ec82
 800e8d0:	0801d292 	.word	0x0801d292

0800e8d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800e8d4:	b538      	push	{r3, r4, r5, lr}
 800e8d6:	428a      	cmp	r2, r1
 800e8d8:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800e8da:	d90c      	bls.n	800e8f6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800e8dc:	b92c      	cbnz	r4, 800e8ea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800e8de:	4b1c      	ldr	r3, [pc, #112]	; (800e950 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800e8e0:	4a1c      	ldr	r2, [pc, #112]	; (800e954 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800e8e2:	21e0      	movs	r1, #224	; 0xe0
 800e8e4:	481c      	ldr	r0, [pc, #112]	; (800e958 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800e8e6:	f00c fe47 	bl	801b578 <__assert_func>
 800e8ea:	3c01      	subs	r4, #1
 800e8ec:	8604      	strh	r4, [r0, #48]	; 0x30
 800e8ee:	4b1b      	ldr	r3, [pc, #108]	; (800e95c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800e8f0:	4a1b      	ldr	r2, [pc, #108]	; (800e960 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800e8f2:	21c4      	movs	r1, #196	; 0xc4
 800e8f4:	e7f6      	b.n	800e8e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e8f6:	428c      	cmp	r4, r1
 800e8f8:	d203      	bcs.n	800e902 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800e8fa:	4b1a      	ldr	r3, [pc, #104]	; (800e964 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800e8fc:	4a1a      	ldr	r2, [pc, #104]	; (800e968 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800e8fe:	21ca      	movs	r1, #202	; 0xca
 800e900:	e7f0      	b.n	800e8e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e902:	1a64      	subs	r4, r4, r1
 800e904:	8604      	strh	r4, [r0, #48]	; 0x30
 800e906:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800e908:	4421      	add	r1, r4
 800e90a:	b289      	uxth	r1, r1
 800e90c:	2909      	cmp	r1, #9
 800e90e:	bf88      	it	hi
 800e910:	390a      	subhi	r1, #10
 800e912:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e914:	250a      	movs	r5, #10
 800e916:	b1ba      	cbz	r2, 800e948 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800e918:	3a01      	subs	r2, #1
 800e91a:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800e91c:	b292      	uxth	r2, r2
 800e91e:	2909      	cmp	r1, #9
 800e920:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800e924:	d903      	bls.n	800e92e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800e926:	4b11      	ldr	r3, [pc, #68]	; (800e96c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800e928:	4a11      	ldr	r2, [pc, #68]	; (800e970 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800e92a:	21e5      	movs	r1, #229	; 0xe5
 800e92c:	e7da      	b.n	800e8e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e92e:	3101      	adds	r1, #1
 800e930:	8601      	strh	r1, [r0, #48]	; 0x30
 800e932:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800e934:	b901      	cbnz	r1, 800e938 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800e936:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800e938:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800e93a:	3901      	subs	r1, #1
 800e93c:	b289      	uxth	r1, r1
 800e93e:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e940:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e944:	834c      	strh	r4, [r1, #26]
 800e946:	e7e6      	b.n	800e916 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800e948:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e94c:	f7ff bf4a 	b.w	800e7e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e950:	0801d1c0 	.word	0x0801d1c0
 800e954:	0801ea5b 	.word	0x0801ea5b
 800e958:	0801d292 	.word	0x0801d292
 800e95c:	0801d2be 	.word	0x0801d2be
 800e960:	0801eb05 	.word	0x0801eb05
 800e964:	0801e9b4 	.word	0x0801e9b4
 800e968:	0801eddc 	.word	0x0801eddc
 800e96c:	0801e9c0 	.word	0x0801e9c0
 800e970:	0801e9d3 	.word	0x0801e9d3

0800e974 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e974:	3a01      	subs	r2, #1
 800e976:	b570      	push	{r4, r5, r6, lr}
 800e978:	b292      	uxth	r2, r2
 800e97a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800e97e:	42b2      	cmp	r2, r6
 800e980:	d019      	beq.n	800e9b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800e982:	8b04      	ldrh	r4, [r0, #24]
 800e984:	f831 5b02 	ldrh.w	r5, [r1], #2
 800e988:	4294      	cmp	r4, r2
 800e98a:	d805      	bhi.n	800e998 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800e98c:	4b19      	ldr	r3, [pc, #100]	; (800e9f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e98e:	4a1a      	ldr	r2, [pc, #104]	; (800e9f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800e990:	481a      	ldr	r0, [pc, #104]	; (800e9fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800e992:	21c4      	movs	r1, #196	; 0xc4
 800e994:	f00c fdf0 	bl	801b578 <__assert_func>
 800e998:	8ac4      	ldrh	r4, [r0, #22]
 800e99a:	4414      	add	r4, r2
 800e99c:	b2a4      	uxth	r4, r4
 800e99e:	2c01      	cmp	r4, #1
 800e9a0:	bf88      	it	hi
 800e9a2:	3c02      	subhi	r4, #2
 800e9a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800e9a8:	3a01      	subs	r2, #1
 800e9aa:	8a64      	ldrh	r4, [r4, #18]
 800e9ac:	42ac      	cmp	r4, r5
 800e9ae:	b292      	uxth	r2, r2
 800e9b0:	d0e5      	beq.n	800e97e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800e9b2:	2000      	movs	r0, #0
 800e9b4:	bd70      	pop	{r4, r5, r6, pc}
 800e9b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800e9ba:	2400      	movs	r4, #0
 800e9bc:	4413      	add	r3, r2
 800e9be:	b2a2      	uxth	r2, r4
 800e9c0:	429a      	cmp	r2, r3
 800e9c2:	da14      	bge.n	800e9ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800e9c4:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800e9c6:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800e9ca:	4296      	cmp	r6, r2
 800e9cc:	d802      	bhi.n	800e9d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800e9ce:	4b09      	ldr	r3, [pc, #36]	; (800e9f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e9d0:	4a0b      	ldr	r2, [pc, #44]	; (800ea00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800e9d2:	e7dd      	b.n	800e990 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800e9d4:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800e9d6:	4432      	add	r2, r6
 800e9d8:	b292      	uxth	r2, r2
 800e9da:	2a09      	cmp	r2, #9
 800e9dc:	bf88      	it	hi
 800e9de:	3a0a      	subhi	r2, #10
 800e9e0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800e9e4:	3401      	adds	r4, #1
 800e9e6:	8b52      	ldrh	r2, [r2, #26]
 800e9e8:	42aa      	cmp	r2, r5
 800e9ea:	d0e8      	beq.n	800e9be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800e9ec:	e7e1      	b.n	800e9b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800e9ee:	2001      	movs	r0, #1
 800e9f0:	e7e0      	b.n	800e9b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800e9f2:	bf00      	nop
 800e9f4:	0801d2be 	.word	0x0801d2be
 800e9f8:	0801ee60 	.word	0x0801ee60
 800e9fc:	0801d292 	.word	0x0801d292
 800ea00:	0801eb05 	.word	0x0801eb05

0800ea04 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ea04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea08:	4605      	mov	r5, r0
 800ea0a:	4616      	mov	r6, r2
 800ea0c:	1c8c      	adds	r4, r1, #2
 800ea0e:	8809      	ldrh	r1, [r1, #0]
 800ea10:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ea14:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ea18:	42b3      	cmp	r3, r6
 800ea1a:	d124      	bne.n	800ea66 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ea1c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ea20:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ea24:	f001 070f 	and.w	r7, r1, #15
 800ea28:	f8cd 8000 	str.w	r8, [sp]
 800ea2c:	464b      	mov	r3, r9
 800ea2e:	4652      	mov	r2, sl
 800ea30:	4621      	mov	r1, r4
 800ea32:	4628      	mov	r0, r5
 800ea34:	f7ff ff9e 	bl	800e974 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ea38:	4683      	mov	fp, r0
 800ea3a:	b168      	cbz	r0, 800ea58 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ea3c:	eb0a 0109 	add.w	r1, sl, r9
 800ea40:	4441      	add	r1, r8
 800ea42:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ea46:	463a      	mov	r2, r7
 800ea48:	4649      	mov	r1, r9
 800ea4a:	4628      	mov	r0, r5
 800ea4c:	f7ff ff42 	bl	800e8d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ea50:	4658      	mov	r0, fp
 800ea52:	b003      	add	sp, #12
 800ea54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea58:	eb07 010a 	add.w	r1, r7, sl
 800ea5c:	4449      	add	r1, r9
 800ea5e:	4441      	add	r1, r8
 800ea60:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ea64:	e7d2      	b.n	800ea0c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ea66:	f04f 0b00 	mov.w	fp, #0
 800ea6a:	e7f1      	b.n	800ea50 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ea6c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ea6c:	b570      	push	{r4, r5, r6, lr}
 800ea6e:	8810      	ldrh	r0, [r2, #0]
 800ea70:	4298      	cmp	r0, r3
 800ea72:	d817      	bhi.n	800eaa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ea74:	1e48      	subs	r0, r1, #1
 800ea76:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ea7a:	4298      	cmp	r0, r3
 800ea7c:	d312      	bcc.n	800eaa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ea7e:	2400      	movs	r4, #0
 800ea80:	428c      	cmp	r4, r1
 800ea82:	d20f      	bcs.n	800eaa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ea84:	1860      	adds	r0, r4, r1
 800ea86:	1040      	asrs	r0, r0, #1
 800ea88:	0085      	lsls	r5, r0, #2
 800ea8a:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ea8e:	42b3      	cmp	r3, r6
 800ea90:	d902      	bls.n	800ea98 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ea92:	3001      	adds	r0, #1
 800ea94:	b284      	uxth	r4, r0
 800ea96:	e7f3      	b.n	800ea80 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ea98:	d201      	bcs.n	800ea9e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ea9a:	b281      	uxth	r1, r0
 800ea9c:	e7f0      	b.n	800ea80 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ea9e:	442a      	add	r2, r5
 800eaa0:	8850      	ldrh	r0, [r2, #2]
 800eaa2:	bd70      	pop	{r4, r5, r6, pc}
 800eaa4:	2000      	movs	r0, #0
 800eaa6:	e7fc      	b.n	800eaa2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800eaa8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800eaa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eaac:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800eaae:	886f      	ldrh	r7, [r5, #2]
 800eab0:	4604      	mov	r4, r0
 800eab2:	087f      	lsrs	r7, r7, #1
 800eab4:	260b      	movs	r6, #11
 800eab6:	3e01      	subs	r6, #1
 800eab8:	d01b      	beq.n	800eaf2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800eaba:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eabc:	b92b      	cbnz	r3, 800eaca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800eabe:	4b0e      	ldr	r3, [pc, #56]	; (800eaf8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800eac0:	4a0e      	ldr	r2, [pc, #56]	; (800eafc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800eac2:	480f      	ldr	r0, [pc, #60]	; (800eb00 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800eac4:	21bf      	movs	r1, #191	; 0xbf
 800eac6:	f00c fd57 	bl	801b578 <__assert_func>
 800eaca:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800eacc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ead0:	462a      	mov	r2, r5
 800ead2:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ead6:	4639      	mov	r1, r7
 800ead8:	4643      	mov	r3, r8
 800eada:	4620      	mov	r0, r4
 800eadc:	f7ff ffc6 	bl	800ea6c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800eae0:	b138      	cbz	r0, 800eaf2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800eae2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800eae6:	4642      	mov	r2, r8
 800eae8:	4620      	mov	r0, r4
 800eaea:	f7ff ff8b 	bl	800ea04 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800eaee:	2800      	cmp	r0, #0
 800eaf0:	d1e1      	bne.n	800eab6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800eaf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eaf6:	bf00      	nop
 800eaf8:	0801d1c0 	.word	0x0801d1c0
 800eafc:	0801ebd7 	.word	0x0801ebd7
 800eb00:	0801d292 	.word	0x0801d292

0800eb04 <_ZN8touchgfx8ceil28_4El>:
 800eb04:	f110 030f 	adds.w	r3, r0, #15
 800eb08:	d401      	bmi.n	800eb0e <_ZN8touchgfx8ceil28_4El+0xa>
 800eb0a:	1118      	asrs	r0, r3, #4
 800eb0c:	4770      	bx	lr
 800eb0e:	f1c0 0001 	rsb	r0, r0, #1
 800eb12:	f010 000f 	ands.w	r0, r0, #15
 800eb16:	bf18      	it	ne
 800eb18:	2001      	movne	r0, #1
 800eb1a:	2210      	movs	r2, #16
 800eb1c:	fb93 f3f2 	sdiv	r3, r3, r2
 800eb20:	1a18      	subs	r0, r3, r0
 800eb22:	4770      	bx	lr

0800eb24 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800eb24:	2900      	cmp	r1, #0
 800eb26:	b538      	push	{r3, r4, r5, lr}
 800eb28:	dc05      	bgt.n	800eb36 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800eb2a:	4b0f      	ldr	r3, [pc, #60]	; (800eb68 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800eb2c:	4a0f      	ldr	r2, [pc, #60]	; (800eb6c <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800eb2e:	4810      	ldr	r0, [pc, #64]	; (800eb70 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800eb30:	21f7      	movs	r1, #247	; 0xf7
 800eb32:	f00c fd21 	bl	801b578 <__assert_func>
 800eb36:	2800      	cmp	r0, #0
 800eb38:	db06      	blt.n	800eb48 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800eb3a:	fb90 f4f1 	sdiv	r4, r0, r1
 800eb3e:	6014      	str	r4, [r2, #0]
 800eb40:	fb01 0114 	mls	r1, r1, r4, r0
 800eb44:	6019      	str	r1, [r3, #0]
 800eb46:	bd38      	pop	{r3, r4, r5, pc}
 800eb48:	4240      	negs	r0, r0
 800eb4a:	fb90 f4f1 	sdiv	r4, r0, r1
 800eb4e:	4265      	negs	r5, r4
 800eb50:	fb01 0014 	mls	r0, r1, r4, r0
 800eb54:	6015      	str	r5, [r2, #0]
 800eb56:	6018      	str	r0, [r3, #0]
 800eb58:	2800      	cmp	r0, #0
 800eb5a:	d0f4      	beq.n	800eb46 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800eb5c:	6810      	ldr	r0, [r2, #0]
 800eb5e:	3801      	subs	r0, #1
 800eb60:	6010      	str	r0, [r2, #0]
 800eb62:	6818      	ldr	r0, [r3, #0]
 800eb64:	1a09      	subs	r1, r1, r0
 800eb66:	e7ed      	b.n	800eb44 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800eb68:	0801ef31 	.word	0x0801ef31
 800eb6c:	0801ef70 	.word	0x0801ef70
 800eb70:	0801ef41 	.word	0x0801ef41

0800eb74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800eb74:	b570      	push	{r4, r5, r6, lr}
 800eb76:	694a      	ldr	r2, [r1, #20]
 800eb78:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800eb7a:	684b      	ldr	r3, [r1, #4]
 800eb7c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800eb7e:	1b54      	subs	r4, r2, r5
 800eb80:	f000 8106 	beq.w	800ed90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800eb84:	1b9b      	subs	r3, r3, r6
 800eb86:	d003      	beq.n	800eb90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800eb88:	4363      	muls	r3, r4
 800eb8a:	2210      	movs	r2, #16
 800eb8c:	fb93 f3f2 	sdiv	r3, r3, r2
 800eb90:	680c      	ldr	r4, [r1, #0]
 800eb92:	698a      	ldr	r2, [r1, #24]
 800eb94:	1b65      	subs	r5, r4, r5
 800eb96:	f000 80fd 	beq.w	800ed94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800eb9a:	1b92      	subs	r2, r2, r6
 800eb9c:	d003      	beq.n	800eba6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800eb9e:	436a      	muls	r2, r5
 800eba0:	2410      	movs	r4, #16
 800eba2:	fb92 f2f4 	sdiv	r2, r2, r4
 800eba6:	1a9b      	subs	r3, r3, r2
 800eba8:	ee07 3a90 	vmov	s15, r3
 800ebac:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800edd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ebb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ebb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ebb8:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ebbc:	460a      	mov	r2, r1
 800ebbe:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ebc2:	4603      	mov	r3, r0
 800ebc4:	f100 040c 	add.w	r4, r0, #12
 800ebc8:	eeb1 6a43 	vneg.f32	s12, s6
 800ebcc:	edd2 7a02 	vldr	s15, [r2, #8]
 800ebd0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ebd4:	3214      	adds	r2, #20
 800ebd6:	ece3 6a01 	vstmia	r3!, {s13}
 800ebda:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ebde:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ebe2:	429c      	cmp	r4, r3
 800ebe4:	edc3 7a02 	vstr	s15, [r3, #8]
 800ebe8:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ebec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ebf0:	edc3 7a05 	vstr	s15, [r3, #20]
 800ebf4:	d1ea      	bne.n	800ebcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ebf6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ebf8:	698b      	ldr	r3, [r1, #24]
 800ebfa:	edd0 4a02 	vldr	s9, [r0, #8]
 800ebfe:	edd0 3a00 	vldr	s7, [r0]
 800ec02:	edd0 6a01 	vldr	s13, [r0, #4]
 800ec06:	ed90 5a05 	vldr	s10, [r0, #20]
 800ec0a:	ed90 2a03 	vldr	s4, [r0, #12]
 800ec0e:	edd0 5a04 	vldr	s11, [r0, #16]
 800ec12:	ed90 1a07 	vldr	s2, [r0, #28]
 800ec16:	edd0 2a06 	vldr	s5, [r0, #24]
 800ec1a:	1a9b      	subs	r3, r3, r2
 800ec1c:	ee07 3a90 	vmov	s15, r3
 800ec20:	684b      	ldr	r3, [r1, #4]
 800ec22:	1a9b      	subs	r3, r3, r2
 800ec24:	ee07 3a10 	vmov	s14, r3
 800ec28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ec2c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ec30:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ec34:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800ec38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ec3c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800ec40:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec44:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800ec48:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ec4c:	ee32 5a45 	vsub.f32	s10, s4, s10
 800ec50:	ee67 7a83 	vmul.f32	s15, s15, s6
 800ec54:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800ec58:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ec5a:	694a      	ldr	r2, [r1, #20]
 800ec5c:	1b13      	subs	r3, r2, r4
 800ec5e:	ee07 3a10 	vmov	s14, r3
 800ec62:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ec66:	680b      	ldr	r3, [r1, #0]
 800ec68:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec6c:	1b1b      	subs	r3, r3, r4
 800ec6e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800ec72:	ee07 3a10 	vmov	s14, r3
 800ec76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ec7a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ec7e:	eee6 4a87 	vfma.f32	s9, s13, s14
 800ec82:	ee64 4a86 	vmul.f32	s9, s9, s12
 800ec86:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800ec8a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ec8c:	698b      	ldr	r3, [r1, #24]
 800ec8e:	1a9b      	subs	r3, r3, r2
 800ec90:	ee06 3a90 	vmov	s13, r3
 800ec94:	684b      	ldr	r3, [r1, #4]
 800ec96:	1a9b      	subs	r3, r3, r2
 800ec98:	ee07 3a10 	vmov	s14, r3
 800ec9c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800eca0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eca4:	ee66 6a84 	vmul.f32	s13, s13, s8
 800eca8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ecac:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ecb0:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ecb4:	ee66 6a83 	vmul.f32	s13, s13, s6
 800ecb8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ecbc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ecbe:	694a      	ldr	r2, [r1, #20]
 800ecc0:	1b13      	subs	r3, r2, r4
 800ecc2:	ee07 3a10 	vmov	s14, r3
 800ecc6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ecca:	680b      	ldr	r3, [r1, #0]
 800eccc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ecd0:	1b1b      	subs	r3, r3, r4
 800ecd2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ecd6:	ee07 3a10 	vmov	s14, r3
 800ecda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ecde:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ece2:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ece6:	edd0 5a08 	vldr	s11, [r0, #32]
 800ecea:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ecee:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ecf2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ecf6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ecf8:	698b      	ldr	r3, [r1, #24]
 800ecfa:	1a9b      	subs	r3, r3, r2
 800ecfc:	ee07 3a10 	vmov	s14, r3
 800ed00:	684b      	ldr	r3, [r1, #4]
 800ed02:	1a9b      	subs	r3, r3, r2
 800ed04:	ee01 3a90 	vmov	s3, r3
 800ed08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ed0c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ed10:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ed14:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ed18:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ed1c:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ed20:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ed24:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ed28:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ed2c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ed2e:	694a      	ldr	r2, [r1, #20]
 800ed30:	1b13      	subs	r3, r2, r4
 800ed32:	ee03 3a10 	vmov	s6, r3
 800ed36:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ed3a:	680b      	ldr	r3, [r1, #0]
 800ed3c:	ee23 3a04 	vmul.f32	s6, s6, s8
 800ed40:	1b1b      	subs	r3, r3, r4
 800ed42:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800ed46:	ee03 3a10 	vmov	s6, r3
 800ed4a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ed4e:	ee23 4a04 	vmul.f32	s8, s6, s8
 800ed52:	eee1 5a04 	vfma.f32	s11, s2, s8
 800ed56:	ee25 6a86 	vmul.f32	s12, s11, s12
 800ed5a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800ed5e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800ed62:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800ed66:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800ed6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed6e:	dd13      	ble.n	800ed98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800ed70:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ed74:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800ed78:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ed7a:	eee3 7a87 	vfma.f32	s15, s7, s14
 800ed7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ed82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed86:	dd15      	ble.n	800edb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800ed88:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ed8c:	6403      	str	r3, [r0, #64]	; 0x40
 800ed8e:	bd70      	pop	{r4, r5, r6, pc}
 800ed90:	4623      	mov	r3, r4
 800ed92:	e6fd      	b.n	800eb90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ed94:	462a      	mov	r2, r5
 800ed96:	e706      	b.n	800eba6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ed98:	d502      	bpl.n	800eda0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ed9a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ed9e:	e7e9      	b.n	800ed74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800eda0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800eda4:	eea3 2a85 	vfma.f32	s4, s7, s10
 800eda8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800edac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800edb0:	dade      	bge.n	800ed70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800edb2:	e7f2      	b.n	800ed9a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800edb4:	d502      	bpl.n	800edbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800edb6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800edba:	e7e7      	b.n	800ed8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800edbc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800edc0:	eee3 4a86 	vfma.f32	s9, s7, s12
 800edc4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800edc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800edcc:	dadc      	bge.n	800ed88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800edce:	e7f2      	b.n	800edb6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800edd0:	3d800000 	.word	0x3d800000

0800edd4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800edd4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edd8:	f04f 0814 	mov.w	r8, #20
 800eddc:	fb08 f903 	mul.w	r9, r8, r3
 800ede0:	eb02 0a09 	add.w	sl, r2, r9
 800ede4:	4604      	mov	r4, r0
 800ede6:	f8da 0004 	ldr.w	r0, [sl, #4]
 800edea:	4617      	mov	r7, r2
 800edec:	460d      	mov	r5, r1
 800edee:	461e      	mov	r6, r3
 800edf0:	f7ff fe88 	bl	800eb04 <_ZN8touchgfx8ceil28_4El>
 800edf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800edf6:	6160      	str	r0, [r4, #20]
 800edf8:	fb08 f803 	mul.w	r8, r8, r3
 800edfc:	eb07 0b08 	add.w	fp, r7, r8
 800ee00:	9001      	str	r0, [sp, #4]
 800ee02:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ee06:	f7ff fe7d 	bl	800eb04 <_ZN8touchgfx8ceil28_4El>
 800ee0a:	9a01      	ldr	r2, [sp, #4]
 800ee0c:	1a80      	subs	r0, r0, r2
 800ee0e:	61a0      	str	r0, [r4, #24]
 800ee10:	2800      	cmp	r0, #0
 800ee12:	f000 8088 	beq.w	800ef26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800ee16:	f857 3009 	ldr.w	r3, [r7, r9]
 800ee1a:	f857 c008 	ldr.w	ip, [r7, r8]
 800ee1e:	f8da 1004 	ldr.w	r1, [sl, #4]
 800ee22:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ee26:	ebac 0c03 	sub.w	ip, ip, r3
 800ee2a:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800ee2e:	fb0b f202 	mul.w	r2, fp, r2
 800ee32:	fb0c 2211 	mls	r2, ip, r1, r2
 800ee36:	1a40      	subs	r0, r0, r1
 800ee38:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800ee3c:	fb00 2003 	mla	r0, r0, r3, r2
 800ee40:	3801      	subs	r0, #1
 800ee42:	f104 0310 	add.w	r3, r4, #16
 800ee46:	4622      	mov	r2, r4
 800ee48:	4641      	mov	r1, r8
 800ee4a:	4440      	add	r0, r8
 800ee4c:	f7ff fe6a 	bl	800eb24 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ee50:	f104 0308 	add.w	r3, r4, #8
 800ee54:	1d22      	adds	r2, r4, #4
 800ee56:	4641      	mov	r1, r8
 800ee58:	4658      	mov	r0, fp
 800ee5a:	f7ff fe63 	bl	800eb24 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ee5e:	f8c4 800c 	str.w	r8, [r4, #12]
 800ee62:	f8da 3004 	ldr.w	r3, [sl, #4]
 800ee66:	6962      	ldr	r2, [r4, #20]
 800ee68:	eddf 6a31 	vldr	s13, [pc, #196]	; 800ef30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800ee6c:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800ee70:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800ee74:	ee07 3a10 	vmov	s14, r3
 800ee78:	6822      	ldr	r2, [r4, #0]
 800ee7a:	f857 3009 	ldr.w	r3, [r7, r9]
 800ee7e:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800ee82:	ee07 3a90 	vmov	s15, r3
 800ee86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ee8e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800ee92:	ee27 7a26 	vmul.f32	s14, s14, s13
 800ee96:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ee9a:	edd3 6a00 	vldr	s13, [r3]
 800ee9e:	eee6 6a07 	vfma.f32	s13, s12, s14
 800eea2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800eea6:	eee6 6a27 	vfma.f32	s13, s12, s15
 800eeaa:	edc4 6a07 	vstr	s13, [r4, #28]
 800eeae:	edd4 6a01 	vldr	s13, [r4, #4]
 800eeb2:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800eeb6:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800eeba:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800eebe:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800eec2:	ed84 6a08 	vstr	s12, [r4, #32]
 800eec6:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800eec8:	6262      	str	r2, [r4, #36]	; 0x24
 800eeca:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800eece:	ed93 6a03 	vldr	s12, [r3, #12]
 800eed2:	eea5 6a87 	vfma.f32	s12, s11, s14
 800eed6:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800eeda:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800eede:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800eee2:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800eee6:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800eeea:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800eeee:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800eef2:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800eef4:	6322      	str	r2, [r4, #48]	; 0x30
 800eef6:	ed93 6a06 	vldr	s12, [r3, #24]
 800eefa:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800eefe:	eea5 6a87 	vfma.f32	s12, s11, s14
 800ef02:	eeb0 7a46 	vmov.f32	s14, s12
 800ef06:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800ef0a:	eea6 7a27 	vfma.f32	s14, s12, s15
 800ef0e:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800ef12:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800ef16:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800ef1a:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ef1e:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800ef22:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800ef24:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ef26:	4620      	mov	r0, r4
 800ef28:	b003      	add	sp, #12
 800ef2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef2e:	bf00      	nop
 800ef30:	3d800000 	.word	0x3d800000

0800ef34 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800ef34:	4602      	mov	r2, r0
 800ef36:	b148      	cbz	r0, 800ef4c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800ef38:	2300      	movs	r3, #0
 800ef3a:	b298      	uxth	r0, r3
 800ef3c:	3301      	adds	r3, #1
 800ef3e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ef42:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800ef46:	2900      	cmp	r1, #0
 800ef48:	d1f7      	bne.n	800ef3a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800ef4a:	4770      	bx	lr
 800ef4c:	4770      	bx	lr

0800ef4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800ef4e:	b530      	push	{r4, r5, lr}
 800ef50:	4604      	mov	r4, r0
 800ef52:	b159      	cbz	r1, 800ef6c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800ef54:	b148      	cbz	r0, 800ef6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ef56:	2300      	movs	r3, #0
 800ef58:	b298      	uxth	r0, r3
 800ef5a:	4282      	cmp	r2, r0
 800ef5c:	d905      	bls.n	800ef6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800ef5e:	5ccd      	ldrb	r5, [r1, r3]
 800ef60:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800ef64:	3301      	adds	r3, #1
 800ef66:	2d00      	cmp	r5, #0
 800ef68:	d1f6      	bne.n	800ef58 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800ef6a:	bd30      	pop	{r4, r5, pc}
 800ef6c:	4608      	mov	r0, r1
 800ef6e:	e7fc      	b.n	800ef6a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800ef70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800ef70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef72:	b08b      	sub	sp, #44	; 0x2c
 800ef74:	468c      	mov	ip, r1
 800ef76:	2100      	movs	r1, #0
 800ef78:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800ef7c:	ae01      	add	r6, sp, #4
 800ef7e:	211f      	movs	r1, #31
 800ef80:	fbb0 f7f3 	udiv	r7, r0, r3
 800ef84:	fb03 0517 	mls	r5, r3, r7, r0
 800ef88:	b2ec      	uxtb	r4, r5
 800ef8a:	2d09      	cmp	r5, #9
 800ef8c:	bfd4      	ite	le
 800ef8e:	3430      	addle	r4, #48	; 0x30
 800ef90:	3457      	addgt	r4, #87	; 0x57
 800ef92:	b2e4      	uxtb	r4, r4
 800ef94:	558c      	strb	r4, [r1, r6]
 800ef96:	4638      	mov	r0, r7
 800ef98:	1e4c      	subs	r4, r1, #1
 800ef9a:	b92f      	cbnz	r7, 800efa8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800ef9c:	4431      	add	r1, r6
 800ef9e:	4660      	mov	r0, ip
 800efa0:	f7ff ffd5 	bl	800ef4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800efa4:	b00b      	add	sp, #44	; 0x2c
 800efa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efa8:	4621      	mov	r1, r4
 800efaa:	e7e9      	b.n	800ef80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800efac <_ZN8touchgfx7Unicode4itoaElPtti>:
 800efac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efae:	4607      	mov	r7, r0
 800efb0:	b08b      	sub	sp, #44	; 0x2c
 800efb2:	4608      	mov	r0, r1
 800efb4:	b341      	cbz	r1, 800f008 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800efb6:	1e99      	subs	r1, r3, #2
 800efb8:	2922      	cmp	r1, #34	; 0x22
 800efba:	d825      	bhi.n	800f008 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800efbc:	2100      	movs	r1, #0
 800efbe:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800efc2:	463c      	mov	r4, r7
 800efc4:	261f      	movs	r6, #31
 800efc6:	f10d 0c04 	add.w	ip, sp, #4
 800efca:	fb94 fef3 	sdiv	lr, r4, r3
 800efce:	fb03 441e 	mls	r4, r3, lr, r4
 800efd2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800efd6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800efda:	b2ec      	uxtb	r4, r5
 800efdc:	2d09      	cmp	r5, #9
 800efde:	bfd4      	ite	le
 800efe0:	3430      	addle	r4, #48	; 0x30
 800efe2:	3457      	addgt	r4, #87	; 0x57
 800efe4:	b2e4      	uxtb	r4, r4
 800efe6:	f80c 4006 	strb.w	r4, [ip, r6]
 800efea:	4674      	mov	r4, lr
 800efec:	1e71      	subs	r1, r6, #1
 800efee:	b96c      	cbnz	r4, 800f00c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800eff0:	2f00      	cmp	r7, #0
 800eff2:	da05      	bge.n	800f000 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800eff4:	ab0a      	add	r3, sp, #40	; 0x28
 800eff6:	4419      	add	r1, r3
 800eff8:	232d      	movs	r3, #45	; 0x2d
 800effa:	f801 3c24 	strb.w	r3, [r1, #-36]
 800effe:	1eb1      	subs	r1, r6, #2
 800f000:	3101      	adds	r1, #1
 800f002:	4461      	add	r1, ip
 800f004:	f7ff ffa3 	bl	800ef4e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f008:	b00b      	add	sp, #44	; 0x2c
 800f00a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f00c:	460e      	mov	r6, r1
 800f00e:	e7dc      	b.n	800efca <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f014:	4691      	mov	r9, r2
 800f016:	b085      	sub	sp, #20
 800f018:	6802      	ldr	r2, [r0, #0]
 800f01a:	9201      	str	r2, [sp, #4]
 800f01c:	4688      	mov	r8, r1
 800f01e:	4683      	mov	fp, r0
 800f020:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f024:	9103      	str	r1, [sp, #12]
 800f026:	4610      	mov	r0, r2
 800f028:	461c      	mov	r4, r3
 800f02a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f02e:	9302      	str	r3, [sp, #8]
 800f030:	f7ff ff80 	bl	800ef34 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f034:	f1b8 0f00 	cmp.w	r8, #0
 800f038:	bf0c      	ite	eq
 800f03a:	4684      	moveq	ip, r0
 800f03c:	f100 0c01 	addne.w	ip, r0, #1
 800f040:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f044:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f048:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f04a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f04c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f050:	9903      	ldr	r1, [sp, #12]
 800f052:	fa1f fc8c 	uxth.w	ip, ip
 800f056:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f05a:	d041      	beq.n	800f0e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f05c:	d834      	bhi.n	800f0c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f05e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f062:	d059      	beq.n	800f118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f064:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f068:	d03a      	beq.n	800f0e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f06a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f06e:	d034      	beq.n	800f0da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f070:	2400      	movs	r4, #0
 800f072:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f076:	3a01      	subs	r2, #1
 800f078:	b169      	cbz	r1, 800f096 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f07a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f07c:	458c      	cmp	ip, r1
 800f07e:	da09      	bge.n	800f094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f080:	eba1 010c 	sub.w	r1, r1, ip
 800f084:	b289      	uxth	r1, r1
 800f086:	b933      	cbnz	r3, 800f096 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f088:	2e00      	cmp	r6, #0
 800f08a:	d051      	beq.n	800f130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f08c:	2800      	cmp	r0, #0
 800f08e:	d04f      	beq.n	800f130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f090:	440c      	add	r4, r1
 800f092:	b2a4      	uxth	r4, r4
 800f094:	2100      	movs	r1, #0
 800f096:	682b      	ldr	r3, [r5, #0]
 800f098:	4293      	cmp	r3, r2
 800f09a:	da07      	bge.n	800f0ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f09c:	f1b8 0f00 	cmp.w	r8, #0
 800f0a0:	d004      	beq.n	800f0ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f0a2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f0a6:	682b      	ldr	r3, [r5, #0]
 800f0a8:	3301      	adds	r3, #1
 800f0aa:	602b      	str	r3, [r5, #0]
 800f0ac:	2730      	movs	r7, #48	; 0x30
 800f0ae:	2c00      	cmp	r4, #0
 800f0b0:	d04e      	beq.n	800f150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f0b2:	682e      	ldr	r6, [r5, #0]
 800f0b4:	3c01      	subs	r4, #1
 800f0b6:	42b2      	cmp	r2, r6
 800f0b8:	b2a4      	uxth	r4, r4
 800f0ba:	dd49      	ble.n	800f150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f0bc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f0c0:	682b      	ldr	r3, [r5, #0]
 800f0c2:	3301      	adds	r3, #1
 800f0c4:	602b      	str	r3, [r5, #0]
 800f0c6:	e7f2      	b.n	800f0ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f0c8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f0cc:	d01d      	beq.n	800f10a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f0ce:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f0d2:	d002      	beq.n	800f0da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f0d4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f0d8:	e7c9      	b.n	800f06e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f0da:	4684      	mov	ip, r0
 800f0dc:	f04f 0800 	mov.w	r8, #0
 800f0e0:	2c00      	cmp	r4, #0
 800f0e2:	d0c6      	beq.n	800f072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f0e4:	b947      	cbnz	r7, 800f0f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f0e6:	2801      	cmp	r0, #1
 800f0e8:	d106      	bne.n	800f0f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f0ea:	8814      	ldrh	r4, [r2, #0]
 800f0ec:	2c30      	cmp	r4, #48	; 0x30
 800f0ee:	bf02      	ittt	eq
 800f0f0:	3202      	addeq	r2, #2
 800f0f2:	f8cb 2000 	streq.w	r2, [fp]
 800f0f6:	4638      	moveq	r0, r7
 800f0f8:	45bc      	cmp	ip, r7
 800f0fa:	da14      	bge.n	800f126 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f0fc:	b2bf      	uxth	r7, r7
 800f0fe:	eba7 040c 	sub.w	r4, r7, ip
 800f102:	b2a4      	uxth	r4, r4
 800f104:	46bc      	mov	ip, r7
 800f106:	2600      	movs	r6, #0
 800f108:	e7b3      	b.n	800f072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f10a:	4684      	mov	ip, r0
 800f10c:	b16c      	cbz	r4, 800f12a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f10e:	42b8      	cmp	r0, r7
 800f110:	dd00      	ble.n	800f114 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f112:	b2b8      	uxth	r0, r7
 800f114:	2400      	movs	r4, #0
 800f116:	e003      	b.n	800f120 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f118:	f04f 0c01 	mov.w	ip, #1
 800f11c:	2400      	movs	r4, #0
 800f11e:	4660      	mov	r0, ip
 800f120:	4626      	mov	r6, r4
 800f122:	46a0      	mov	r8, r4
 800f124:	e7a5      	b.n	800f072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f126:	2400      	movs	r4, #0
 800f128:	e7ed      	b.n	800f106 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f12a:	4626      	mov	r6, r4
 800f12c:	46a0      	mov	r8, r4
 800f12e:	e7a0      	b.n	800f072 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f130:	2900      	cmp	r1, #0
 800f132:	d0b0      	beq.n	800f096 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f134:	2720      	movs	r7, #32
 800f136:	682e      	ldr	r6, [r5, #0]
 800f138:	2900      	cmp	r1, #0
 800f13a:	d0ac      	beq.n	800f096 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f13c:	3901      	subs	r1, #1
 800f13e:	4296      	cmp	r6, r2
 800f140:	b289      	uxth	r1, r1
 800f142:	daa7      	bge.n	800f094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f144:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f148:	682b      	ldr	r3, [r5, #0]
 800f14a:	3301      	adds	r3, #1
 800f14c:	602b      	str	r3, [r5, #0]
 800f14e:	e7f2      	b.n	800f136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f150:	b188      	cbz	r0, 800f176 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f152:	682b      	ldr	r3, [r5, #0]
 800f154:	3801      	subs	r0, #1
 800f156:	429a      	cmp	r2, r3
 800f158:	b280      	uxth	r0, r0
 800f15a:	dd0c      	ble.n	800f176 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f15c:	f8db 3000 	ldr.w	r3, [fp]
 800f160:	1c9c      	adds	r4, r3, #2
 800f162:	f8cb 4000 	str.w	r4, [fp]
 800f166:	881c      	ldrh	r4, [r3, #0]
 800f168:	682b      	ldr	r3, [r5, #0]
 800f16a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f16e:	682b      	ldr	r3, [r5, #0]
 800f170:	3301      	adds	r3, #1
 800f172:	602b      	str	r3, [r5, #0]
 800f174:	e7ec      	b.n	800f150 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f176:	2620      	movs	r6, #32
 800f178:	b151      	cbz	r1, 800f190 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f17a:	6828      	ldr	r0, [r5, #0]
 800f17c:	3901      	subs	r1, #1
 800f17e:	4282      	cmp	r2, r0
 800f180:	b289      	uxth	r1, r1
 800f182:	dd05      	ble.n	800f190 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f184:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f188:	682b      	ldr	r3, [r5, #0]
 800f18a:	3301      	adds	r3, #1
 800f18c:	602b      	str	r3, [r5, #0]
 800f18e:	e7f3      	b.n	800f178 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f190:	b005      	add	sp, #20
 800f192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f196:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f19a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f19e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f1a2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f1a6:	2400      	movs	r4, #0
 800f1a8:	8014      	strh	r4, [r2, #0]
 800f1aa:	701c      	strb	r4, [r3, #0]
 800f1ac:	f888 4000 	strb.w	r4, [r8]
 800f1b0:	f88c 4000 	strb.w	r4, [ip]
 800f1b4:	f88e 4000 	strb.w	r4, [lr]
 800f1b8:	703c      	strb	r4, [r7, #0]
 800f1ba:	6804      	ldr	r4, [r0, #0]
 800f1bc:	b1a4      	cbz	r4, 800f1e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f1be:	8824      	ldrh	r4, [r4, #0]
 800f1c0:	f04f 0901 	mov.w	r9, #1
 800f1c4:	b314      	cbz	r4, 800f20c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f1c6:	2c2b      	cmp	r4, #43	; 0x2b
 800f1c8:	d001      	beq.n	800f1ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f1ca:	2c20      	cmp	r4, #32
 800f1cc:	d110      	bne.n	800f1f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f1ce:	8014      	strh	r4, [r2, #0]
 800f1d0:	6804      	ldr	r4, [r0, #0]
 800f1d2:	b10c      	cbz	r4, 800f1d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f1d4:	3402      	adds	r4, #2
 800f1d6:	6004      	str	r4, [r0, #0]
 800f1d8:	680c      	ldr	r4, [r1, #0]
 800f1da:	b10c      	cbz	r4, 800f1e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f1dc:	3401      	adds	r4, #1
 800f1de:	600c      	str	r4, [r1, #0]
 800f1e0:	6804      	ldr	r4, [r0, #0]
 800f1e2:	b17c      	cbz	r4, 800f204 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f1e4:	8824      	ldrh	r4, [r4, #0]
 800f1e6:	e7ed      	b.n	800f1c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f1e8:	680c      	ldr	r4, [r1, #0]
 800f1ea:	b17c      	cbz	r4, 800f20c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f1ec:	7824      	ldrb	r4, [r4, #0]
 800f1ee:	e7e7      	b.n	800f1c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f1f0:	2c2d      	cmp	r4, #45	; 0x2d
 800f1f2:	d102      	bne.n	800f1fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f1f4:	f883 9000 	strb.w	r9, [r3]
 800f1f8:	e7ea      	b.n	800f1d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f1fa:	2c23      	cmp	r4, #35	; 0x23
 800f1fc:	d107      	bne.n	800f20e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f1fe:	f888 9000 	strb.w	r9, [r8]
 800f202:	e7e5      	b.n	800f1d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f204:	680c      	ldr	r4, [r1, #0]
 800f206:	b10c      	cbz	r4, 800f20c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f208:	7824      	ldrb	r4, [r4, #0]
 800f20a:	e7db      	b.n	800f1c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f20c:	2400      	movs	r4, #0
 800f20e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f212:	2b09      	cmp	r3, #9
 800f214:	d901      	bls.n	800f21a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f216:	2c2a      	cmp	r4, #42	; 0x2a
 800f218:	d122      	bne.n	800f260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f21a:	2301      	movs	r3, #1
 800f21c:	2c30      	cmp	r4, #48	; 0x30
 800f21e:	f88e 3000 	strb.w	r3, [lr]
 800f222:	d10d      	bne.n	800f240 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f224:	f88c 3000 	strb.w	r3, [ip]
 800f228:	6803      	ldr	r3, [r0, #0]
 800f22a:	b10b      	cbz	r3, 800f230 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f22c:	3302      	adds	r3, #2
 800f22e:	6003      	str	r3, [r0, #0]
 800f230:	680b      	ldr	r3, [r1, #0]
 800f232:	b10b      	cbz	r3, 800f238 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f234:	3301      	adds	r3, #1
 800f236:	600b      	str	r3, [r1, #0]
 800f238:	6803      	ldr	r3, [r0, #0]
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	d02f      	beq.n	800f29e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f23e:	881c      	ldrh	r4, [r3, #0]
 800f240:	2c2a      	cmp	r4, #42	; 0x2a
 800f242:	d135      	bne.n	800f2b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f244:	f04f 33ff 	mov.w	r3, #4294967295
 800f248:	6033      	str	r3, [r6, #0]
 800f24a:	6803      	ldr	r3, [r0, #0]
 800f24c:	b10b      	cbz	r3, 800f252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f24e:	3302      	adds	r3, #2
 800f250:	6003      	str	r3, [r0, #0]
 800f252:	680b      	ldr	r3, [r1, #0]
 800f254:	b10b      	cbz	r3, 800f25a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f256:	3301      	adds	r3, #1
 800f258:	600b      	str	r3, [r1, #0]
 800f25a:	6803      	ldr	r3, [r0, #0]
 800f25c:	b31b      	cbz	r3, 800f2a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f25e:	881c      	ldrh	r4, [r3, #0]
 800f260:	2c2e      	cmp	r4, #46	; 0x2e
 800f262:	d11a      	bne.n	800f29a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f264:	2301      	movs	r3, #1
 800f266:	703b      	strb	r3, [r7, #0]
 800f268:	6803      	ldr	r3, [r0, #0]
 800f26a:	b10b      	cbz	r3, 800f270 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f26c:	3302      	adds	r3, #2
 800f26e:	6003      	str	r3, [r0, #0]
 800f270:	680b      	ldr	r3, [r1, #0]
 800f272:	b10b      	cbz	r3, 800f278 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f274:	3301      	adds	r3, #1
 800f276:	600b      	str	r3, [r1, #0]
 800f278:	6803      	ldr	r3, [r0, #0]
 800f27a:	2b00      	cmp	r3, #0
 800f27c:	d036      	beq.n	800f2ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f27e:	881b      	ldrh	r3, [r3, #0]
 800f280:	2b2a      	cmp	r3, #42	; 0x2a
 800f282:	d137      	bne.n	800f2f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f284:	f04f 33ff 	mov.w	r3, #4294967295
 800f288:	602b      	str	r3, [r5, #0]
 800f28a:	6803      	ldr	r3, [r0, #0]
 800f28c:	b10b      	cbz	r3, 800f292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f28e:	3302      	adds	r3, #2
 800f290:	6003      	str	r3, [r0, #0]
 800f292:	680b      	ldr	r3, [r1, #0]
 800f294:	b10b      	cbz	r3, 800f29a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f296:	3301      	adds	r3, #1
 800f298:	600b      	str	r3, [r1, #0]
 800f29a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f29e:	680c      	ldr	r4, [r1, #0]
 800f2a0:	b134      	cbz	r4, 800f2b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f2a2:	7824      	ldrb	r4, [r4, #0]
 800f2a4:	e7cc      	b.n	800f240 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f2a6:	680b      	ldr	r3, [r1, #0]
 800f2a8:	2b00      	cmp	r3, #0
 800f2aa:	d0f6      	beq.n	800f29a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f2ac:	781c      	ldrb	r4, [r3, #0]
 800f2ae:	e7d7      	b.n	800f260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f2b0:	2300      	movs	r3, #0
 800f2b2:	6033      	str	r3, [r6, #0]
 800f2b4:	220a      	movs	r2, #10
 800f2b6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f2ba:	fa1f f38c 	uxth.w	r3, ip
 800f2be:	2b09      	cmp	r3, #9
 800f2c0:	d8ce      	bhi.n	800f260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f2c2:	6833      	ldr	r3, [r6, #0]
 800f2c4:	fb02 c303 	mla	r3, r2, r3, ip
 800f2c8:	6033      	str	r3, [r6, #0]
 800f2ca:	6803      	ldr	r3, [r0, #0]
 800f2cc:	b10b      	cbz	r3, 800f2d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f2ce:	3302      	adds	r3, #2
 800f2d0:	6003      	str	r3, [r0, #0]
 800f2d2:	680b      	ldr	r3, [r1, #0]
 800f2d4:	b10b      	cbz	r3, 800f2da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f2d6:	3301      	adds	r3, #1
 800f2d8:	600b      	str	r3, [r1, #0]
 800f2da:	6803      	ldr	r3, [r0, #0]
 800f2dc:	b10b      	cbz	r3, 800f2e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f2de:	881c      	ldrh	r4, [r3, #0]
 800f2e0:	e7e9      	b.n	800f2b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f2e2:	680c      	ldr	r4, [r1, #0]
 800f2e4:	2c00      	cmp	r4, #0
 800f2e6:	d0e6      	beq.n	800f2b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f2e8:	7824      	ldrb	r4, [r4, #0]
 800f2ea:	e7e4      	b.n	800f2b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f2ec:	680b      	ldr	r3, [r1, #0]
 800f2ee:	b10b      	cbz	r3, 800f2f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f2f0:	781b      	ldrb	r3, [r3, #0]
 800f2f2:	e7c5      	b.n	800f280 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f2f4:	2200      	movs	r2, #0
 800f2f6:	602a      	str	r2, [r5, #0]
 800f2f8:	240a      	movs	r4, #10
 800f2fa:	3b30      	subs	r3, #48	; 0x30
 800f2fc:	b29e      	uxth	r6, r3
 800f2fe:	2e09      	cmp	r6, #9
 800f300:	682a      	ldr	r2, [r5, #0]
 800f302:	d813      	bhi.n	800f32c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f304:	fb04 3302 	mla	r3, r4, r2, r3
 800f308:	602b      	str	r3, [r5, #0]
 800f30a:	6803      	ldr	r3, [r0, #0]
 800f30c:	b10b      	cbz	r3, 800f312 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f30e:	3302      	adds	r3, #2
 800f310:	6003      	str	r3, [r0, #0]
 800f312:	680b      	ldr	r3, [r1, #0]
 800f314:	b10b      	cbz	r3, 800f31a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f316:	3301      	adds	r3, #1
 800f318:	600b      	str	r3, [r1, #0]
 800f31a:	6803      	ldr	r3, [r0, #0]
 800f31c:	b10b      	cbz	r3, 800f322 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f31e:	881b      	ldrh	r3, [r3, #0]
 800f320:	e7eb      	b.n	800f2fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f322:	680b      	ldr	r3, [r1, #0]
 800f324:	2b00      	cmp	r3, #0
 800f326:	d0e8      	beq.n	800f2fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f328:	781b      	ldrb	r3, [r3, #0]
 800f32a:	e7e6      	b.n	800f2fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f32c:	2a06      	cmp	r2, #6
 800f32e:	bfa8      	it	ge
 800f330:	2206      	movge	r2, #6
 800f332:	602a      	str	r2, [r5, #0]
 800f334:	e7b1      	b.n	800f29a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f33a:	b0a3      	sub	sp, #140	; 0x8c
 800f33c:	2600      	movs	r6, #0
 800f33e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f342:	4607      	mov	r7, r0
 800f344:	4688      	mov	r8, r1
 800f346:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f34a:	4631      	mov	r1, r6
 800f34c:	2242      	movs	r2, #66	; 0x42
 800f34e:	4648      	mov	r0, r9
 800f350:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f352:	960d      	str	r6, [sp, #52]	; 0x34
 800f354:	f00c f99c 	bl	801b690 <memset>
 800f358:	b15f      	cbz	r7, 800f372 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f35a:	f108 3aff 	add.w	sl, r8, #4294967295
 800f35e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f360:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f362:	b152      	cbz	r2, 800f37a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f364:	8812      	ldrh	r2, [r2, #0]
 800f366:	b10a      	cbz	r2, 800f36c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f368:	459a      	cmp	sl, r3
 800f36a:	dc2e      	bgt.n	800f3ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f36c:	2200      	movs	r2, #0
 800f36e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f372:	4638      	mov	r0, r7
 800f374:	b023      	add	sp, #140	; 0x8c
 800f376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f37a:	9a08      	ldr	r2, [sp, #32]
 800f37c:	2a00      	cmp	r2, #0
 800f37e:	d0f5      	beq.n	800f36c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f380:	7812      	ldrb	r2, [r2, #0]
 800f382:	e7f0      	b.n	800f366 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f384:	2d00      	cmp	r5, #0
 800f386:	d0ea      	beq.n	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f388:	782a      	ldrb	r2, [r5, #0]
 800f38a:	b142      	cbz	r2, 800f39e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f38c:	2a25      	cmp	r2, #37	; 0x25
 800f38e:	d001      	beq.n	800f394 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f390:	459a      	cmp	sl, r3
 800f392:	dc08      	bgt.n	800f3a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f394:	f1bb 0f00 	cmp.w	fp, #0
 800f398:	d121      	bne.n	800f3de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f39a:	2d00      	cmp	r5, #0
 800f39c:	d0df      	beq.n	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f39e:	782a      	ldrb	r2, [r5, #0]
 800f3a0:	f04f 0b00 	mov.w	fp, #0
 800f3a4:	e01d      	b.n	800f3e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f3a6:	f1bb 0f00 	cmp.w	fp, #0
 800f3aa:	d078      	beq.n	800f49e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f3ac:	f8bb 2000 	ldrh.w	r2, [fp]
 800f3b0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f3b4:	f1bb 0f00 	cmp.w	fp, #0
 800f3b8:	d002      	beq.n	800f3c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f3ba:	f10b 0202 	add.w	r2, fp, #2
 800f3be:	9209      	str	r2, [sp, #36]	; 0x24
 800f3c0:	b10d      	cbz	r5, 800f3c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f3c2:	3501      	adds	r5, #1
 800f3c4:	9508      	str	r5, [sp, #32]
 800f3c6:	3301      	adds	r3, #1
 800f3c8:	930d      	str	r3, [sp, #52]	; 0x34
 800f3ca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f3ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f3d0:	f1bb 0f00 	cmp.w	fp, #0
 800f3d4:	d0d6      	beq.n	800f384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f3d6:	f8bb 2000 	ldrh.w	r2, [fp]
 800f3da:	2a00      	cmp	r2, #0
 800f3dc:	d1d6      	bne.n	800f38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f3de:	f8bb 2000 	ldrh.w	r2, [fp]
 800f3e2:	2a00      	cmp	r2, #0
 800f3e4:	d0bb      	beq.n	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f3e6:	459a      	cmp	sl, r3
 800f3e8:	ddb9      	ble.n	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f3ea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f3ee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f3f2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f3f6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f3fa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f3fe:	960e      	str	r6, [sp, #56]	; 0x38
 800f400:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f404:	960f      	str	r6, [sp, #60]	; 0x3c
 800f406:	f1bb 0f00 	cmp.w	fp, #0
 800f40a:	d002      	beq.n	800f412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f40c:	f10b 0302 	add.w	r3, fp, #2
 800f410:	9309      	str	r3, [sp, #36]	; 0x24
 800f412:	b10d      	cbz	r5, 800f418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f414:	1c6b      	adds	r3, r5, #1
 800f416:	9308      	str	r3, [sp, #32]
 800f418:	ab0f      	add	r3, sp, #60	; 0x3c
 800f41a:	9305      	str	r3, [sp, #20]
 800f41c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f420:	9304      	str	r3, [sp, #16]
 800f422:	ab0e      	add	r3, sp, #56	; 0x38
 800f424:	9303      	str	r3, [sp, #12]
 800f426:	ab0c      	add	r3, sp, #48	; 0x30
 800f428:	9302      	str	r3, [sp, #8]
 800f42a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f42e:	9301      	str	r3, [sp, #4]
 800f430:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f434:	9300      	str	r3, [sp, #0]
 800f436:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f43a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f43e:	a908      	add	r1, sp, #32
 800f440:	a809      	add	r0, sp, #36	; 0x24
 800f442:	f7ff fea8 	bl	800f196 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f446:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f448:	2b00      	cmp	r3, #0
 800f44a:	bfbe      	ittt	lt
 800f44c:	6823      	ldrlt	r3, [r4, #0]
 800f44e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f452:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f454:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f456:	bfb8      	it	lt
 800f458:	3404      	addlt	r4, #4
 800f45a:	2b00      	cmp	r3, #0
 800f45c:	bfb8      	it	lt
 800f45e:	6823      	ldrlt	r3, [r4, #0]
 800f460:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f464:	bfbe      	ittt	lt
 800f466:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f46a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f46c:	3404      	addlt	r4, #4
 800f46e:	b1d9      	cbz	r1, 800f4a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f470:	880b      	ldrh	r3, [r1, #0]
 800f472:	2b69      	cmp	r3, #105	; 0x69
 800f474:	d01f      	beq.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f476:	d82f      	bhi.n	800f4d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f478:	2b58      	cmp	r3, #88	; 0x58
 800f47a:	d01c      	beq.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f47c:	d818      	bhi.n	800f4b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f47e:	2b25      	cmp	r3, #37	; 0x25
 800f480:	d034      	beq.n	800f4ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f482:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f486:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f488:	f1bb 0f00 	cmp.w	fp, #0
 800f48c:	f000 80b8 	beq.w	800f600 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f490:	f8bb 5000 	ldrh.w	r5, [fp]
 800f494:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f498:	3301      	adds	r3, #1
 800f49a:	930d      	str	r3, [sp, #52]	; 0x34
 800f49c:	e029      	b.n	800f4f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f49e:	b10d      	cbz	r5, 800f4a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f4a0:	782a      	ldrb	r2, [r5, #0]
 800f4a2:	e785      	b.n	800f3b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f4a4:	462a      	mov	r2, r5
 800f4a6:	e783      	b.n	800f3b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f4a8:	2a00      	cmp	r2, #0
 800f4aa:	d0ea      	beq.n	800f482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f4ac:	7813      	ldrb	r3, [r2, #0]
 800f4ae:	e7e0      	b.n	800f472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f4b0:	3b63      	subs	r3, #99	; 0x63
 800f4b2:	2b01      	cmp	r3, #1
 800f4b4:	d8e5      	bhi.n	800f482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f4b6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f4ba:	b329      	cbz	r1, 800f508 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f4bc:	880b      	ldrh	r3, [r1, #0]
 800f4be:	2b69      	cmp	r3, #105	; 0x69
 800f4c0:	d063      	beq.n	800f58a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f4c2:	d825      	bhi.n	800f510 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f4c4:	2b63      	cmp	r3, #99	; 0x63
 800f4c6:	d038      	beq.n	800f53a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f4c8:	2b64      	cmp	r3, #100	; 0x64
 800f4ca:	d05e      	beq.n	800f58a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f4cc:	2b58      	cmp	r3, #88	; 0x58
 800f4ce:	d07b      	beq.n	800f5c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f4d0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f4d4:	4625      	mov	r5, r4
 800f4d6:	e036      	b.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f4d8:	2b73      	cmp	r3, #115	; 0x73
 800f4da:	d0ec      	beq.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f4dc:	d802      	bhi.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f4de:	2b6f      	cmp	r3, #111	; 0x6f
 800f4e0:	d1cf      	bne.n	800f482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f4e2:	e7e8      	b.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f4e4:	2b75      	cmp	r3, #117	; 0x75
 800f4e6:	d0e6      	beq.n	800f4b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f4e8:	2b78      	cmp	r3, #120	; 0x78
 800f4ea:	e7f9      	b.n	800f4e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f4ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4ee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f4f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f4f4:	b10b      	cbz	r3, 800f4fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f4f6:	3302      	adds	r3, #2
 800f4f8:	9309      	str	r3, [sp, #36]	; 0x24
 800f4fa:	9b08      	ldr	r3, [sp, #32]
 800f4fc:	2b00      	cmp	r3, #0
 800f4fe:	f43f af2e 	beq.w	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f502:	3301      	adds	r3, #1
 800f504:	9308      	str	r3, [sp, #32]
 800f506:	e72a      	b.n	800f35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f508:	2a00      	cmp	r2, #0
 800f50a:	d0e1      	beq.n	800f4d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f50c:	7813      	ldrb	r3, [r2, #0]
 800f50e:	e7d6      	b.n	800f4be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f510:	2b73      	cmp	r3, #115	; 0x73
 800f512:	d036      	beq.n	800f582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f514:	d807      	bhi.n	800f526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f516:	2b6f      	cmp	r3, #111	; 0x6f
 800f518:	d1da      	bne.n	800f4d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f51a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f51c:	1d25      	adds	r5, r4, #4
 800f51e:	eba8 0202 	sub.w	r2, r8, r2
 800f522:	2308      	movs	r3, #8
 800f524:	e04a      	b.n	800f5bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f526:	2b75      	cmp	r3, #117	; 0x75
 800f528:	d043      	beq.n	800f5b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f52a:	2b78      	cmp	r3, #120	; 0x78
 800f52c:	d1d0      	bne.n	800f4d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f52e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f530:	1d25      	adds	r5, r4, #4
 800f532:	eba8 0202 	sub.w	r2, r8, r2
 800f536:	2310      	movs	r3, #16
 800f538:	e040      	b.n	800f5bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f53a:	7823      	ldrb	r3, [r4, #0]
 800f53c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f540:	1d25      	adds	r5, r4, #4
 800f542:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f548:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f54c:	2b00      	cmp	r3, #0
 800f54e:	d052      	beq.n	800f5f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f550:	881a      	ldrh	r2, [r3, #0]
 800f552:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f556:	a80d      	add	r0, sp, #52	; 0x34
 800f558:	9005      	str	r0, [sp, #20]
 800f55a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f55e:	9004      	str	r0, [sp, #16]
 800f560:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f562:	9003      	str	r0, [sp, #12]
 800f564:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f568:	9002      	str	r0, [sp, #8]
 800f56a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f56c:	9001      	str	r0, [sp, #4]
 800f56e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f572:	9000      	str	r0, [sp, #0]
 800f574:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f578:	a810      	add	r0, sp, #64	; 0x40
 800f57a:	f7ff fd49 	bl	800f010 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f57e:	462c      	mov	r4, r5
 800f580:	e7b7      	b.n	800f4f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f582:	6823      	ldr	r3, [r4, #0]
 800f584:	1d25      	adds	r5, r4, #4
 800f586:	9310      	str	r3, [sp, #64]	; 0x40
 800f588:	e7dd      	b.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f58a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f58c:	6820      	ldr	r0, [r4, #0]
 800f58e:	eba8 0202 	sub.w	r2, r8, r2
 800f592:	230a      	movs	r3, #10
 800f594:	b292      	uxth	r2, r2
 800f596:	4649      	mov	r1, r9
 800f598:	f7ff fd08 	bl	800efac <_ZN8touchgfx7Unicode4itoaElPtti>
 800f59c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f5a0:	2b2d      	cmp	r3, #45	; 0x2d
 800f5a2:	f104 0504 	add.w	r5, r4, #4
 800f5a6:	d1ce      	bne.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f5a8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f5ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f5ae:	3302      	adds	r3, #2
 800f5b0:	e7e9      	b.n	800f586 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f5b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f5b4:	1d25      	adds	r5, r4, #4
 800f5b6:	eba8 0202 	sub.w	r2, r8, r2
 800f5ba:	230a      	movs	r3, #10
 800f5bc:	b292      	uxth	r2, r2
 800f5be:	4649      	mov	r1, r9
 800f5c0:	6820      	ldr	r0, [r4, #0]
 800f5c2:	f7ff fcd5 	bl	800ef70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f5c6:	e7be      	b.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f5c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f5ca:	6820      	ldr	r0, [r4, #0]
 800f5cc:	eba8 0202 	sub.w	r2, r8, r2
 800f5d0:	b292      	uxth	r2, r2
 800f5d2:	2310      	movs	r3, #16
 800f5d4:	4649      	mov	r1, r9
 800f5d6:	f7ff fccb 	bl	800ef70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f5da:	1d25      	adds	r5, r4, #4
 800f5dc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f5e0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f5e4:	2b00      	cmp	r3, #0
 800f5e6:	d0ae      	beq.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f5e8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f5ec:	2919      	cmp	r1, #25
 800f5ee:	d8f7      	bhi.n	800f5e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f5f0:	3b20      	subs	r3, #32
 800f5f2:	8013      	strh	r3, [r2, #0]
 800f5f4:	e7f4      	b.n	800f5e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f5f6:	9a08      	ldr	r2, [sp, #32]
 800f5f8:	2a00      	cmp	r2, #0
 800f5fa:	d0aa      	beq.n	800f552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f5fc:	7812      	ldrb	r2, [r2, #0]
 800f5fe:	e7a8      	b.n	800f552 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f600:	2d00      	cmp	r5, #0
 800f602:	f43f af47 	beq.w	800f494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f606:	782d      	ldrb	r5, [r5, #0]
 800f608:	e744      	b.n	800f494 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f60a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f60a:	b507      	push	{r0, r1, r2, lr}
 800f60c:	9300      	str	r3, [sp, #0]
 800f60e:	4613      	mov	r3, r2
 800f610:	2200      	movs	r2, #0
 800f612:	f7ff fe90 	bl	800f336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f616:	b003      	add	sp, #12
 800f618:	f85d fb04 	ldr.w	pc, [sp], #4

0800f61c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f61c:	b40c      	push	{r2, r3}
 800f61e:	b507      	push	{r0, r1, r2, lr}
 800f620:	ab04      	add	r3, sp, #16
 800f622:	f853 2b04 	ldr.w	r2, [r3], #4
 800f626:	9301      	str	r3, [sp, #4]
 800f628:	f7ff ffef 	bl	800f60a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f62c:	b003      	add	sp, #12
 800f62e:	f85d eb04 	ldr.w	lr, [sp], #4
 800f632:	b002      	add	sp, #8
 800f634:	4770      	bx	lr
	...

0800f638 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f638:	4b01      	ldr	r3, [pc, #4]	; (800f640 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f63a:	6018      	str	r0, [r3, #0]
 800f63c:	4770      	bx	lr
 800f63e:	bf00      	nop
 800f640:	2000a1f8 	.word	0x2000a1f8

0800f644 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f644:	4b06      	ldr	r3, [pc, #24]	; (800f660 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f646:	881a      	ldrh	r2, [r3, #0]
 800f648:	4282      	cmp	r2, r0
 800f64a:	d807      	bhi.n	800f65c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f64c:	4b05      	ldr	r3, [pc, #20]	; (800f664 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f64e:	881b      	ldrh	r3, [r3, #0]
 800f650:	4413      	add	r3, r2
 800f652:	4298      	cmp	r0, r3
 800f654:	bfac      	ite	ge
 800f656:	2000      	movge	r0, #0
 800f658:	2001      	movlt	r0, #1
 800f65a:	4770      	bx	lr
 800f65c:	2000      	movs	r0, #0
 800f65e:	4770      	bx	lr
 800f660:	2000a218 	.word	0x2000a218
 800f664:	2000a21c 	.word	0x2000a21c

0800f668 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f668:	b508      	push	{r3, lr}
 800f66a:	4601      	mov	r1, r0
 800f66c:	f7ff ffea 	bl	800f644 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f670:	b118      	cbz	r0, 800f67a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f672:	4b02      	ldr	r3, [pc, #8]	; (800f67c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f674:	681b      	ldr	r3, [r3, #0]
 800f676:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f67a:	bd08      	pop	{r3, pc}
 800f67c:	2000a1fc 	.word	0x2000a1fc

0800f680 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f684:	4d28      	ldr	r5, [pc, #160]	; (800f728 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f686:	682b      	ldr	r3, [r5, #0]
 800f688:	2b00      	cmp	r3, #0
 800f68a:	d04a      	beq.n	800f722 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f68c:	4a27      	ldr	r2, [pc, #156]	; (800f72c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f68e:	4e28      	ldr	r6, [pc, #160]	; (800f730 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f690:	8810      	ldrh	r0, [r2, #0]
 800f692:	f8b6 8000 	ldrh.w	r8, [r6]
 800f696:	4c27      	ldr	r4, [pc, #156]	; (800f734 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f698:	4f27      	ldr	r7, [pc, #156]	; (800f738 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f69a:	4440      	add	r0, r8
 800f69c:	1c41      	adds	r1, r0, #1
 800f69e:	f021 0101 	bic.w	r1, r1, #1
 800f6a2:	0409      	lsls	r1, r1, #16
 800f6a4:	0c09      	lsrs	r1, r1, #16
 800f6a6:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f6aa:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f6ae:	eb03 020e 	add.w	r2, r3, lr
 800f6b2:	eb0e 010c 	add.w	r1, lr, ip
 800f6b6:	6022      	str	r2, [r4, #0]
 800f6b8:	185a      	adds	r2, r3, r1
 800f6ba:	603a      	str	r2, [r7, #0]
 800f6bc:	220e      	movs	r2, #14
 800f6be:	fb02 f208 	mul.w	r2, r2, r8
 800f6c2:	3203      	adds	r2, #3
 800f6c4:	f022 0203 	bic.w	r2, r2, #3
 800f6c8:	4411      	add	r1, r2
 800f6ca:	440b      	add	r3, r1
 800f6cc:	491b      	ldr	r1, [pc, #108]	; (800f73c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f6ce:	600b      	str	r3, [r1, #0]
 800f6d0:	491b      	ldr	r1, [pc, #108]	; (800f740 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f6d2:	2300      	movs	r3, #0
 800f6d4:	800b      	strh	r3, [r1, #0]
 800f6d6:	491b      	ldr	r1, [pc, #108]	; (800f744 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f6d8:	6809      	ldr	r1, [r1, #0]
 800f6da:	eba1 010e 	sub.w	r1, r1, lr
 800f6de:	eba1 010c 	sub.w	r1, r1, ip
 800f6e2:	1a8a      	subs	r2, r1, r2
 800f6e4:	4918      	ldr	r1, [pc, #96]	; (800f748 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f6e6:	600a      	str	r2, [r1, #0]
 800f6e8:	4a18      	ldr	r2, [pc, #96]	; (800f74c <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f6ea:	469c      	mov	ip, r3
 800f6ec:	8013      	strh	r3, [r2, #0]
 800f6ee:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f6f2:	4283      	cmp	r3, r0
 800f6f4:	d10d      	bne.n	800f712 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f6f6:	8835      	ldrh	r5, [r6, #0]
 800f6f8:	6838      	ldr	r0, [r7, #0]
 800f6fa:	2300      	movs	r3, #0
 800f6fc:	240e      	movs	r4, #14
 800f6fe:	429d      	cmp	r5, r3
 800f700:	d90f      	bls.n	800f722 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f702:	fb04 0203 	mla	r2, r4, r3, r0
 800f706:	3301      	adds	r3, #1
 800f708:	7b11      	ldrb	r1, [r2, #12]
 800f70a:	f36f 1145 	bfc	r1, #5, #1
 800f70e:	7311      	strb	r1, [r2, #12]
 800f710:	e7f5      	b.n	800f6fe <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f712:	682a      	ldr	r2, [r5, #0]
 800f714:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f718:	6822      	ldr	r2, [r4, #0]
 800f71a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f71e:	3301      	adds	r3, #1
 800f720:	e7e7      	b.n	800f6f2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f726:	bf00      	nop
 800f728:	2000a1fc 	.word	0x2000a1fc
 800f72c:	2000a218 	.word	0x2000a218
 800f730:	2000a21c 	.word	0x2000a21c
 800f734:	2000a210 	.word	0x2000a210
 800f738:	2000a200 	.word	0x2000a200
 800f73c:	2000a208 	.word	0x2000a208
 800f740:	2000a21a 	.word	0x2000a21a
 800f744:	2000a204 	.word	0x2000a204
 800f748:	2000a214 	.word	0x2000a214
 800f74c:	2000a20c 	.word	0x2000a20c

0800f750 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f750:	b510      	push	{r4, lr}
 800f752:	4b10      	ldr	r3, [pc, #64]	; (800f794 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f754:	681b      	ldr	r3, [r3, #0]
 800f756:	b9db      	cbnz	r3, 800f790 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f758:	b1d1      	cbz	r1, 800f790 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f75a:	4b0f      	ldr	r3, [pc, #60]	; (800f798 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f75c:	801a      	strh	r2, [r3, #0]
 800f75e:	4b0f      	ldr	r3, [pc, #60]	; (800f79c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f760:	881b      	ldrh	r3, [r3, #0]
 800f762:	b292      	uxth	r2, r2
 800f764:	240e      	movs	r4, #14
 800f766:	4413      	add	r3, r2
 800f768:	4362      	muls	r2, r4
 800f76a:	2406      	movs	r4, #6
 800f76c:	fb04 2203 	mla	r2, r4, r3, r2
 800f770:	428a      	cmp	r2, r1
 800f772:	d305      	bcc.n	800f780 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f774:	4b0a      	ldr	r3, [pc, #40]	; (800f7a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f776:	4a0b      	ldr	r2, [pc, #44]	; (800f7a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f778:	480b      	ldr	r0, [pc, #44]	; (800f7a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f77a:	2135      	movs	r1, #53	; 0x35
 800f77c:	f00b fefc 	bl	801b578 <__assert_func>
 800f780:	4b0a      	ldr	r3, [pc, #40]	; (800f7ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f782:	6019      	str	r1, [r3, #0]
 800f784:	4b0a      	ldr	r3, [pc, #40]	; (800f7b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f786:	6018      	str	r0, [r3, #0]
 800f788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f78c:	f7ff bf78 	b.w	800f680 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f790:	bd10      	pop	{r4, pc}
 800f792:	bf00      	nop
 800f794:	2000a208 	.word	0x2000a208
 800f798:	2000a21c 	.word	0x2000a21c
 800f79c:	2000a218 	.word	0x2000a218
 800f7a0:	0801f00e 	.word	0x0801f00e
 800f7a4:	0801f0a3 	.word	0x0801f0a3
 800f7a8:	0801efe9 	.word	0x0801efe9
 800f7ac:	2000a204 	.word	0x2000a204
 800f7b0:	2000a1fc 	.word	0x2000a1fc

0800f7b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f7b4:	b470      	push	{r4, r5, r6}
 800f7b6:	4c07      	ldr	r4, [pc, #28]	; (800f7d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f7b8:	6826      	ldr	r6, [r4, #0]
 800f7ba:	4605      	mov	r5, r0
 800f7bc:	4610      	mov	r0, r2
 800f7be:	9a03      	ldr	r2, [sp, #12]
 800f7c0:	b936      	cbnz	r6, 800f7d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f7c2:	6025      	str	r5, [r4, #0]
 800f7c4:	4c04      	ldr	r4, [pc, #16]	; (800f7d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f7c6:	8021      	strh	r1, [r4, #0]
 800f7c8:	bc70      	pop	{r4, r5, r6}
 800f7ca:	4619      	mov	r1, r3
 800f7cc:	f7ff bfc0 	b.w	800f750 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f7d0:	bc70      	pop	{r4, r5, r6}
 800f7d2:	4770      	bx	lr
 800f7d4:	2000a220 	.word	0x2000a220
 800f7d8:	2000a218 	.word	0x2000a218

0800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f7dc:	b508      	push	{r3, lr}
 800f7de:	4b14      	ldr	r3, [pc, #80]	; (800f830 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f7e0:	6819      	ldr	r1, [r3, #0]
 800f7e2:	b931      	cbnz	r1, 800f7f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f7e4:	4b13      	ldr	r3, [pc, #76]	; (800f834 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f7e6:	4a14      	ldr	r2, [pc, #80]	; (800f838 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f7e8:	4814      	ldr	r0, [pc, #80]	; (800f83c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f7ea:	f240 4186 	movw	r1, #1158	; 0x486
 800f7ee:	f00b fec3 	bl	801b578 <__assert_func>
 800f7f2:	4a13      	ldr	r2, [pc, #76]	; (800f840 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f7f4:	8803      	ldrh	r3, [r0, #0]
 800f7f6:	8812      	ldrh	r2, [r2, #0]
 800f7f8:	4293      	cmp	r3, r2
 800f7fa:	d204      	bcs.n	800f806 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f7fc:	2214      	movs	r2, #20
 800f7fe:	fb02 1303 	mla	r3, r2, r3, r1
 800f802:	8918      	ldrh	r0, [r3, #8]
 800f804:	bd08      	pop	{r3, pc}
 800f806:	490f      	ldr	r1, [pc, #60]	; (800f844 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f808:	8809      	ldrh	r1, [r1, #0]
 800f80a:	4411      	add	r1, r2
 800f80c:	428b      	cmp	r3, r1
 800f80e:	da06      	bge.n	800f81e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f810:	1a9b      	subs	r3, r3, r2
 800f812:	4a0d      	ldr	r2, [pc, #52]	; (800f848 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f814:	6812      	ldr	r2, [r2, #0]
 800f816:	210e      	movs	r1, #14
 800f818:	fb01 2303 	mla	r3, r1, r3, r2
 800f81c:	e7f1      	b.n	800f802 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f81e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f822:	4293      	cmp	r3, r2
 800f824:	bf0a      	itet	eq
 800f826:	4b09      	ldreq	r3, [pc, #36]	; (800f84c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f828:	2000      	movne	r0, #0
 800f82a:	8818      	ldrheq	r0, [r3, #0]
 800f82c:	e7ea      	b.n	800f804 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f82e:	bf00      	nop
 800f830:	2000a220 	.word	0x2000a220
 800f834:	0801f067 	.word	0x0801f067
 800f838:	0801f150 	.word	0x0801f150
 800f83c:	0801efe9 	.word	0x0801efe9
 800f840:	2000a218 	.word	0x2000a218
 800f844:	2000a21c 	.word	0x2000a21c
 800f848:	2000a200 	.word	0x2000a200
 800f84c:	2000a18c 	.word	0x2000a18c

0800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f850:	b508      	push	{r3, lr}
 800f852:	4b14      	ldr	r3, [pc, #80]	; (800f8a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f854:	6819      	ldr	r1, [r3, #0]
 800f856:	b931      	cbnz	r1, 800f866 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f858:	4b13      	ldr	r3, [pc, #76]	; (800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f85a:	4a14      	ldr	r2, [pc, #80]	; (800f8ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f85c:	4814      	ldr	r0, [pc, #80]	; (800f8b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f85e:	f240 419a 	movw	r1, #1178	; 0x49a
 800f862:	f00b fe89 	bl	801b578 <__assert_func>
 800f866:	4a13      	ldr	r2, [pc, #76]	; (800f8b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f868:	8803      	ldrh	r3, [r0, #0]
 800f86a:	8812      	ldrh	r2, [r2, #0]
 800f86c:	4293      	cmp	r3, r2
 800f86e:	d204      	bcs.n	800f87a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f870:	2214      	movs	r2, #20
 800f872:	fb02 1303 	mla	r3, r2, r3, r1
 800f876:	8958      	ldrh	r0, [r3, #10]
 800f878:	bd08      	pop	{r3, pc}
 800f87a:	490f      	ldr	r1, [pc, #60]	; (800f8b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f87c:	8809      	ldrh	r1, [r1, #0]
 800f87e:	4411      	add	r1, r2
 800f880:	428b      	cmp	r3, r1
 800f882:	da06      	bge.n	800f892 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f884:	1a9b      	subs	r3, r3, r2
 800f886:	4a0d      	ldr	r2, [pc, #52]	; (800f8bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f888:	6812      	ldr	r2, [r2, #0]
 800f88a:	210e      	movs	r1, #14
 800f88c:	fb01 2303 	mla	r3, r1, r3, r2
 800f890:	e7f1      	b.n	800f876 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f892:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f896:	4293      	cmp	r3, r2
 800f898:	bf0a      	itet	eq
 800f89a:	4b09      	ldreq	r3, [pc, #36]	; (800f8c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f89c:	2000      	movne	r0, #0
 800f89e:	8818      	ldrheq	r0, [r3, #0]
 800f8a0:	e7ea      	b.n	800f878 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f8a2:	bf00      	nop
 800f8a4:	2000a220 	.word	0x2000a220
 800f8a8:	0801f067 	.word	0x0801f067
 800f8ac:	0801f17c 	.word	0x0801f17c
 800f8b0:	0801efe9 	.word	0x0801efe9
 800f8b4:	2000a218 	.word	0x2000a218
 800f8b8:	2000a21c 	.word	0x2000a21c
 800f8bc:	2000a200 	.word	0x2000a200
 800f8c0:	2000a18e 	.word	0x2000a18e

0800f8c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f8c4:	b510      	push	{r4, lr}
 800f8c6:	4b23      	ldr	r3, [pc, #140]	; (800f954 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f8c8:	681c      	ldr	r4, [r3, #0]
 800f8ca:	b934      	cbnz	r4, 800f8da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f8cc:	4b22      	ldr	r3, [pc, #136]	; (800f958 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f8ce:	4a23      	ldr	r2, [pc, #140]	; (800f95c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f8d0:	4823      	ldr	r0, [pc, #140]	; (800f960 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f8d2:	f240 41ae 	movw	r1, #1198	; 0x4ae
 800f8d6:	f00b fe4f 	bl	801b578 <__assert_func>
 800f8da:	4a22      	ldr	r2, [pc, #136]	; (800f964 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f8dc:	880b      	ldrh	r3, [r1, #0]
 800f8de:	8812      	ldrh	r2, [r2, #0]
 800f8e0:	4293      	cmp	r3, r2
 800f8e2:	d211      	bcs.n	800f908 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f8e4:	2214      	movs	r2, #20
 800f8e6:	fb02 4303 	mla	r3, r2, r3, r4
 800f8ea:	8a1a      	ldrh	r2, [r3, #16]
 800f8ec:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f8f0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f8f4:	8a5b      	ldrh	r3, [r3, #18]
 800f8f6:	8004      	strh	r4, [r0, #0]
 800f8f8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f8fc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f900:	8041      	strh	r1, [r0, #2]
 800f902:	8082      	strh	r2, [r0, #4]
 800f904:	80c3      	strh	r3, [r0, #6]
 800f906:	e00e      	b.n	800f926 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f908:	4917      	ldr	r1, [pc, #92]	; (800f968 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f90a:	8809      	ldrh	r1, [r1, #0]
 800f90c:	4411      	add	r1, r2
 800f90e:	428b      	cmp	r3, r1
 800f910:	da0a      	bge.n	800f928 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f912:	1a9b      	subs	r3, r3, r2
 800f914:	4a15      	ldr	r2, [pc, #84]	; (800f96c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f916:	6812      	ldr	r2, [r2, #0]
 800f918:	210e      	movs	r1, #14
 800f91a:	fb01 2303 	mla	r3, r1, r3, r2
 800f91e:	681a      	ldr	r2, [r3, #0]
 800f920:	6002      	str	r2, [r0, #0]
 800f922:	685a      	ldr	r2, [r3, #4]
 800f924:	6042      	str	r2, [r0, #4]
 800f926:	bd10      	pop	{r4, pc}
 800f928:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f92c:	4293      	cmp	r3, r2
 800f92e:	d10b      	bne.n	800f948 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f930:	4b0f      	ldr	r3, [pc, #60]	; (800f970 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f932:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f936:	4b0f      	ldr	r3, [pc, #60]	; (800f974 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f938:	8081      	strh	r1, [r0, #4]
 800f93a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f93e:	80c2      	strh	r2, [r0, #6]
 800f940:	2300      	movs	r3, #0
 800f942:	8003      	strh	r3, [r0, #0]
 800f944:	8043      	strh	r3, [r0, #2]
 800f946:	e7ee      	b.n	800f926 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f948:	2300      	movs	r3, #0
 800f94a:	8003      	strh	r3, [r0, #0]
 800f94c:	8043      	strh	r3, [r0, #2]
 800f94e:	8083      	strh	r3, [r0, #4]
 800f950:	e7d8      	b.n	800f904 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f952:	bf00      	nop
 800f954:	2000a220 	.word	0x2000a220
 800f958:	0801f067 	.word	0x0801f067
 800f95c:	0801f0e9 	.word	0x0801f0e9
 800f960:	0801efe9 	.word	0x0801efe9
 800f964:	2000a218 	.word	0x2000a218
 800f968:	2000a21c 	.word	0x2000a21c
 800f96c:	2000a200 	.word	0x2000a200
 800f970:	2000a18c 	.word	0x2000a18c
 800f974:	2000a18e 	.word	0x2000a18e

0800f978 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f978:	4b18      	ldr	r3, [pc, #96]	; (800f9dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f97a:	681b      	ldr	r3, [r3, #0]
 800f97c:	b34b      	cbz	r3, 800f9d2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f97e:	4a18      	ldr	r2, [pc, #96]	; (800f9e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f980:	8800      	ldrh	r0, [r0, #0]
 800f982:	8812      	ldrh	r2, [r2, #0]
 800f984:	4290      	cmp	r0, r2
 800f986:	d211      	bcs.n	800f9ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f988:	2214      	movs	r2, #20
 800f98a:	fb02 3300 	mla	r3, r2, r0, r3
 800f98e:	8a1a      	ldrh	r2, [r3, #16]
 800f990:	8919      	ldrh	r1, [r3, #8]
 800f992:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f996:	428a      	cmp	r2, r1
 800f998:	db1d      	blt.n	800f9d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f99a:	8a58      	ldrh	r0, [r3, #18]
 800f99c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f9a0:	895b      	ldrh	r3, [r3, #10]
 800f9a2:	4298      	cmp	r0, r3
 800f9a4:	bfac      	ite	ge
 800f9a6:	2000      	movge	r0, #0
 800f9a8:	2001      	movlt	r0, #1
 800f9aa:	4770      	bx	lr
 800f9ac:	4b0d      	ldr	r3, [pc, #52]	; (800f9e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f9ae:	881b      	ldrh	r3, [r3, #0]
 800f9b0:	4413      	add	r3, r2
 800f9b2:	4298      	cmp	r0, r3
 800f9b4:	da0d      	bge.n	800f9d2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f9b6:	4b0c      	ldr	r3, [pc, #48]	; (800f9e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f9b8:	681b      	ldr	r3, [r3, #0]
 800f9ba:	1a80      	subs	r0, r0, r2
 800f9bc:	220e      	movs	r2, #14
 800f9be:	fb02 3300 	mla	r3, r2, r0, r3
 800f9c2:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f9c6:	891a      	ldrh	r2, [r3, #8]
 800f9c8:	4291      	cmp	r1, r2
 800f9ca:	db04      	blt.n	800f9d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f9cc:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f9d0:	e7e6      	b.n	800f9a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f9d2:	2000      	movs	r0, #0
 800f9d4:	4770      	bx	lr
 800f9d6:	2001      	movs	r0, #1
 800f9d8:	4770      	bx	lr
 800f9da:	bf00      	nop
 800f9dc:	2000a220 	.word	0x2000a220
 800f9e0:	2000a218 	.word	0x2000a218
 800f9e4:	2000a21c 	.word	0x2000a21c
 800f9e8:	2000a200 	.word	0x2000a200

0800f9ec <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f9ec:	b508      	push	{r3, lr}
 800f9ee:	4b12      	ldr	r3, [pc, #72]	; (800fa38 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f9f0:	6819      	ldr	r1, [r3, #0]
 800f9f2:	b931      	cbnz	r1, 800fa02 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f9f4:	4b11      	ldr	r3, [pc, #68]	; (800fa3c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f9f6:	4a12      	ldr	r2, [pc, #72]	; (800fa40 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f9f8:	4812      	ldr	r0, [pc, #72]	; (800fa44 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f9fa:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800f9fe:	f00b fdbb 	bl	801b578 <__assert_func>
 800fa02:	8803      	ldrh	r3, [r0, #0]
 800fa04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fa08:	4293      	cmp	r3, r2
 800fa0a:	d012      	beq.n	800fa32 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fa0c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa10:	4293      	cmp	r3, r2
 800fa12:	d103      	bne.n	800fa1c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fa14:	4b0c      	ldr	r3, [pc, #48]	; (800fa48 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fa16:	681b      	ldr	r3, [r3, #0]
 800fa18:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fa1a:	bd08      	pop	{r3, pc}
 800fa1c:	4a0b      	ldr	r2, [pc, #44]	; (800fa4c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fa1e:	6812      	ldr	r2, [r2, #0]
 800fa20:	b11a      	cbz	r2, 800fa2a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fa22:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fa26:	2800      	cmp	r0, #0
 800fa28:	d1f7      	bne.n	800fa1a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa2a:	2214      	movs	r2, #20
 800fa2c:	4353      	muls	r3, r2
 800fa2e:	58c8      	ldr	r0, [r1, r3]
 800fa30:	e7f3      	b.n	800fa1a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa32:	2000      	movs	r0, #0
 800fa34:	e7f1      	b.n	800fa1a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa36:	bf00      	nop
 800fa38:	2000a220 	.word	0x2000a220
 800fa3c:	0801f067 	.word	0x0801f067
 800fa40:	0801f11f 	.word	0x0801f11f
 800fa44:	0801efe9 	.word	0x0801efe9
 800fa48:	2000a198 	.word	0x2000a198
 800fa4c:	2000a1fc 	.word	0x2000a1fc

0800fa50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fa50:	8802      	ldrh	r2, [r0, #0]
 800fa52:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fa56:	429a      	cmp	r2, r3
 800fa58:	d845      	bhi.n	800fae6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fa5a:	4b24      	ldr	r3, [pc, #144]	; (800faec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fa5c:	8818      	ldrh	r0, [r3, #0]
 800fa5e:	4282      	cmp	r2, r0
 800fa60:	d221      	bcs.n	800faa6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fa62:	4b23      	ldr	r3, [pc, #140]	; (800faf0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fa64:	6819      	ldr	r1, [r3, #0]
 800fa66:	2314      	movs	r3, #20
 800fa68:	fb03 1302 	mla	r3, r3, r2, r1
 800fa6c:	6858      	ldr	r0, [r3, #4]
 800fa6e:	2800      	cmp	r0, #0
 800fa70:	d03a      	beq.n	800fae8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa72:	4920      	ldr	r1, [pc, #128]	; (800faf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fa74:	6809      	ldr	r1, [r1, #0]
 800fa76:	2900      	cmp	r1, #0
 800fa78:	d036      	beq.n	800fae8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa7a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fa7e:	2900      	cmp	r1, #0
 800fa80:	d032      	beq.n	800fae8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fa82:	891a      	ldrh	r2, [r3, #8]
 800fa84:	8958      	ldrh	r0, [r3, #10]
 800fa86:	4350      	muls	r0, r2
 800fa88:	7c5a      	ldrb	r2, [r3, #17]
 800fa8a:	7cdb      	ldrb	r3, [r3, #19]
 800fa8c:	0952      	lsrs	r2, r2, #5
 800fa8e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fa92:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fa96:	2b0b      	cmp	r3, #11
 800fa98:	bf18      	it	ne
 800fa9a:	0040      	lslne	r0, r0, #1
 800fa9c:	3003      	adds	r0, #3
 800fa9e:	f020 0003 	bic.w	r0, r0, #3
 800faa2:	4408      	add	r0, r1
 800faa4:	4770      	bx	lr
 800faa6:	4b14      	ldr	r3, [pc, #80]	; (800faf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800faa8:	881b      	ldrh	r3, [r3, #0]
 800faaa:	4403      	add	r3, r0
 800faac:	429a      	cmp	r2, r3
 800faae:	da1a      	bge.n	800fae6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fab0:	4b12      	ldr	r3, [pc, #72]	; (800fafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fab2:	681b      	ldr	r3, [r3, #0]
 800fab4:	1a10      	subs	r0, r2, r0
 800fab6:	210e      	movs	r1, #14
 800fab8:	fb01 3000 	mla	r0, r1, r0, r3
 800fabc:	7b03      	ldrb	r3, [r0, #12]
 800fabe:	f003 031f 	and.w	r3, r3, #31
 800fac2:	2b0b      	cmp	r3, #11
 800fac4:	d10b      	bne.n	800fade <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fac6:	8903      	ldrh	r3, [r0, #8]
 800fac8:	8940      	ldrh	r0, [r0, #10]
 800faca:	4358      	muls	r0, r3
 800facc:	4b09      	ldr	r3, [pc, #36]	; (800faf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800face:	6819      	ldr	r1, [r3, #0]
 800fad0:	3003      	adds	r0, #3
 800fad2:	f020 0303 	bic.w	r3, r0, #3
 800fad6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fada:	4418      	add	r0, r3
 800fadc:	4770      	bx	lr
 800fade:	2b0d      	cmp	r3, #13
 800fae0:	d101      	bne.n	800fae6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fae2:	300d      	adds	r0, #13
 800fae4:	4770      	bx	lr
 800fae6:	2000      	movs	r0, #0
 800fae8:	4770      	bx	lr
 800faea:	bf00      	nop
 800faec:	2000a218 	.word	0x2000a218
 800faf0:	2000a220 	.word	0x2000a220
 800faf4:	2000a1fc 	.word	0x2000a1fc
 800faf8:	2000a21c 	.word	0x2000a21c
 800fafc:	2000a200 	.word	0x2000a200

0800fb00 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fb00:	b510      	push	{r4, lr}
 800fb02:	4b17      	ldr	r3, [pc, #92]	; (800fb60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fb04:	6819      	ldr	r1, [r3, #0]
 800fb06:	8803      	ldrh	r3, [r0, #0]
 800fb08:	b1e9      	cbz	r1, 800fb46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fb0a:	4a16      	ldr	r2, [pc, #88]	; (800fb64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fb0c:	8812      	ldrh	r2, [r2, #0]
 800fb0e:	429a      	cmp	r2, r3
 800fb10:	d90a      	bls.n	800fb28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fb12:	2214      	movs	r2, #20
 800fb14:	fb02 1303 	mla	r3, r2, r3, r1
 800fb18:	7c58      	ldrb	r0, [r3, #17]
 800fb1a:	0942      	lsrs	r2, r0, #5
 800fb1c:	7cd8      	ldrb	r0, [r3, #19]
 800fb1e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fb22:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fb26:	bd10      	pop	{r4, pc}
 800fb28:	490f      	ldr	r1, [pc, #60]	; (800fb68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fb2a:	8809      	ldrh	r1, [r1, #0]
 800fb2c:	4411      	add	r1, r2
 800fb2e:	428b      	cmp	r3, r1
 800fb30:	da09      	bge.n	800fb46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fb32:	1a9b      	subs	r3, r3, r2
 800fb34:	4a0d      	ldr	r2, [pc, #52]	; (800fb6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fb36:	6812      	ldr	r2, [r2, #0]
 800fb38:	210e      	movs	r1, #14
 800fb3a:	fb01 2303 	mla	r3, r1, r3, r2
 800fb3e:	7b18      	ldrb	r0, [r3, #12]
 800fb40:	f000 001f 	and.w	r0, r0, #31
 800fb44:	e7ef      	b.n	800fb26 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fb46:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb4a:	4293      	cmp	r3, r2
 800fb4c:	d106      	bne.n	800fb5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fb4e:	f7f9 ff03 	bl	8009958 <_ZN8touchgfx3HAL3lcdEv>
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb5a:	4718      	bx	r3
 800fb5c:	2000      	movs	r0, #0
 800fb5e:	e7e2      	b.n	800fb26 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fb60:	2000a220 	.word	0x2000a220
 800fb64:	2000a218 	.word	0x2000a218
 800fb68:	2000a21c 	.word	0x2000a21c
 800fb6c:	2000a200 	.word	0x2000a200

0800fb70 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fb70:	2010      	movs	r0, #16
 800fb72:	4770      	bx	lr

0800fb74 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fb74:	2000      	movs	r0, #0
 800fb76:	4770      	bx	lr

0800fb78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fb78:	2bff      	cmp	r3, #255	; 0xff
 800fb7a:	d050      	beq.n	800fc1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fb7c:	2a0b      	cmp	r2, #11
 800fb7e:	d04a      	beq.n	800fc16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fb80:	d80e      	bhi.n	800fba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fb82:	2a03      	cmp	r2, #3
 800fb84:	d03f      	beq.n	800fc06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fb86:	d804      	bhi.n	800fb92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fb88:	2a01      	cmp	r2, #1
 800fb8a:	d03e      	beq.n	800fc0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fb8c:	d93f      	bls.n	800fc0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fb8e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fb90:	4770      	bx	lr
 800fb92:	2a09      	cmp	r2, #9
 800fb94:	d03f      	beq.n	800fc16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fb96:	d83c      	bhi.n	800fc12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fb98:	2a08      	cmp	r2, #8
 800fb9a:	d03a      	beq.n	800fc12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fb9c:	2000      	movs	r0, #0
 800fb9e:	4770      	bx	lr
 800fba0:	2a2f      	cmp	r2, #47	; 0x2f
 800fba2:	d024      	beq.n	800fbee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fba4:	d80d      	bhi.n	800fbc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fba6:	2a2d      	cmp	r2, #45	; 0x2d
 800fba8:	d014      	beq.n	800fbd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fbaa:	d826      	bhi.n	800fbfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fbac:	2a2c      	cmp	r2, #44	; 0x2c
 800fbae:	d1f5      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbb0:	684b      	ldr	r3, [r1, #4]
 800fbb2:	781b      	ldrb	r3, [r3, #0]
 800fbb4:	2b01      	cmp	r3, #1
 800fbb6:	d018      	beq.n	800fbea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fbb8:	d323      	bcc.n	800fc02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fbba:	2b02      	cmp	r3, #2
 800fbbc:	d1ee      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbbe:	6880      	ldr	r0, [r0, #8]
 800fbc0:	4770      	bx	lr
 800fbc2:	2a31      	cmp	r2, #49	; 0x31
 800fbc4:	d004      	beq.n	800fbd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fbc6:	d328      	bcc.n	800fc1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fbc8:	2a32      	cmp	r2, #50	; 0x32
 800fbca:	d026      	beq.n	800fc1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fbcc:	2a33      	cmp	r2, #51	; 0x33
 800fbce:	d1e5      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbd0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fbd2:	4770      	bx	lr
 800fbd4:	684b      	ldr	r3, [r1, #4]
 800fbd6:	781b      	ldrb	r3, [r3, #0]
 800fbd8:	2b01      	cmp	r3, #1
 800fbda:	d004      	beq.n	800fbe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fbdc:	d30b      	bcc.n	800fbf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fbde:	2b02      	cmp	r3, #2
 800fbe0:	d1dc      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbe2:	6900      	ldr	r0, [r0, #16]
 800fbe4:	4770      	bx	lr
 800fbe6:	6a00      	ldr	r0, [r0, #32]
 800fbe8:	4770      	bx	lr
 800fbea:	6980      	ldr	r0, [r0, #24]
 800fbec:	4770      	bx	lr
 800fbee:	684b      	ldr	r3, [r1, #4]
 800fbf0:	781b      	ldrb	r3, [r3, #0]
 800fbf2:	2b00      	cmp	r3, #0
 800fbf4:	d1d2      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fbf6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fbf8:	4770      	bx	lr
 800fbfa:	684b      	ldr	r3, [r1, #4]
 800fbfc:	781b      	ldrb	r3, [r3, #0]
 800fbfe:	2b00      	cmp	r3, #0
 800fc00:	d1cc      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc02:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fc04:	4770      	bx	lr
 800fc06:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fc08:	4770      	bx	lr
 800fc0a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fc0c:	4770      	bx	lr
 800fc0e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fc10:	4770      	bx	lr
 800fc12:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fc14:	4770      	bx	lr
 800fc16:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fc18:	4770      	bx	lr
 800fc1a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fc1c:	4770      	bx	lr
 800fc1e:	2a0b      	cmp	r2, #11
 800fc20:	d049      	beq.n	800fcb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fc22:	d80e      	bhi.n	800fc42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fc24:	2a03      	cmp	r2, #3
 800fc26:	d040      	beq.n	800fcaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fc28:	d804      	bhi.n	800fc34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fc2a:	2a01      	cmp	r2, #1
 800fc2c:	d03f      	beq.n	800fcae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fc2e:	d940      	bls.n	800fcb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fc30:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fc32:	4770      	bx	lr
 800fc34:	2a09      	cmp	r2, #9
 800fc36:	d03e      	beq.n	800fcb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fc38:	d801      	bhi.n	800fc3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fc3a:	2a08      	cmp	r2, #8
 800fc3c:	d1ae      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc3e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fc40:	4770      	bx	lr
 800fc42:	2a2f      	cmp	r2, #47	; 0x2f
 800fc44:	d024      	beq.n	800fc90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fc46:	d80d      	bhi.n	800fc64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fc48:	2a2d      	cmp	r2, #45	; 0x2d
 800fc4a:	d014      	beq.n	800fc76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fc4c:	d826      	bhi.n	800fc9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fc4e:	2a2c      	cmp	r2, #44	; 0x2c
 800fc50:	d1a4      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc52:	684b      	ldr	r3, [r1, #4]
 800fc54:	781b      	ldrb	r3, [r3, #0]
 800fc56:	2b01      	cmp	r3, #1
 800fc58:	d018      	beq.n	800fc8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fc5a:	d324      	bcc.n	800fca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fc5c:	2b02      	cmp	r3, #2
 800fc5e:	d19d      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc60:	68c0      	ldr	r0, [r0, #12]
 800fc62:	4770      	bx	lr
 800fc64:	2a31      	cmp	r2, #49	; 0x31
 800fc66:	d004      	beq.n	800fc72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fc68:	d327      	bcc.n	800fcba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fc6a:	2a32      	cmp	r2, #50	; 0x32
 800fc6c:	d025      	beq.n	800fcba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fc6e:	2a33      	cmp	r2, #51	; 0x33
 800fc70:	d194      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc72:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fc74:	4770      	bx	lr
 800fc76:	684b      	ldr	r3, [r1, #4]
 800fc78:	781b      	ldrb	r3, [r3, #0]
 800fc7a:	2b01      	cmp	r3, #1
 800fc7c:	d004      	beq.n	800fc88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fc7e:	d30b      	bcc.n	800fc98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fc80:	2b02      	cmp	r3, #2
 800fc82:	d18b      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc84:	6940      	ldr	r0, [r0, #20]
 800fc86:	4770      	bx	lr
 800fc88:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fc8a:	4770      	bx	lr
 800fc8c:	69c0      	ldr	r0, [r0, #28]
 800fc8e:	4770      	bx	lr
 800fc90:	684b      	ldr	r3, [r1, #4]
 800fc92:	781b      	ldrb	r3, [r3, #0]
 800fc94:	2b00      	cmp	r3, #0
 800fc96:	d181      	bne.n	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc98:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fc9a:	4770      	bx	lr
 800fc9c:	684b      	ldr	r3, [r1, #4]
 800fc9e:	781b      	ldrb	r3, [r3, #0]
 800fca0:	2b00      	cmp	r3, #0
 800fca2:	f47f af7b 	bne.w	800fb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fca6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fca8:	4770      	bx	lr
 800fcaa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fcac:	4770      	bx	lr
 800fcae:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fcb0:	4770      	bx	lr
 800fcb2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fcb4:	4770      	bx	lr
 800fcb6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fcb8:	4770      	bx	lr
 800fcba:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fcbc:	4770      	bx	lr

0800fcbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fcbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcc2:	b087      	sub	sp, #28
 800fcc4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fcc6:	9205      	str	r2, [sp, #20]
 800fcc8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fccc:	9202      	str	r2, [sp, #8]
 800fcce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fcd2:	9101      	str	r1, [sp, #4]
 800fcd4:	6841      	ldr	r1, [r0, #4]
 800fcd6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fcda:	fb01 2404 	mla	r4, r1, r4, r2
 800fcde:	6802      	ldr	r2, [r0, #0]
 800fce0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fce4:	f8de 2000 	ldr.w	r2, [lr]
 800fce8:	9203      	str	r2, [sp, #12]
 800fcea:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fcee:	3204      	adds	r2, #4
 800fcf0:	9204      	str	r2, [sp, #16]
 800fcf2:	9a02      	ldr	r2, [sp, #8]
 800fcf4:	43d6      	mvns	r6, r2
 800fcf6:	b2f6      	uxtb	r6, r6
 800fcf8:	9a01      	ldr	r2, [sp, #4]
 800fcfa:	2a00      	cmp	r2, #0
 800fcfc:	dc03      	bgt.n	800fd06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fcfe:	9a05      	ldr	r2, [sp, #20]
 800fd00:	2a00      	cmp	r2, #0
 800fd02:	f340 8129 	ble.w	800ff58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fd06:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fd08:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fd0c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fd10:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd16:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fd1a:	2b00      	cmp	r3, #0
 800fd1c:	dd0e      	ble.n	800fd3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fd1e:	1408      	asrs	r0, r1, #16
 800fd20:	d405      	bmi.n	800fd2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd22:	4560      	cmp	r0, ip
 800fd24:	da03      	bge.n	800fd2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd26:	1410      	asrs	r0, r2, #16
 800fd28:	d401      	bmi.n	800fd2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fd2a:	42b8      	cmp	r0, r7
 800fd2c:	db07      	blt.n	800fd3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fd2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fd30:	4401      	add	r1, r0
 800fd32:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fd34:	3b01      	subs	r3, #1
 800fd36:	4402      	add	r2, r0
 800fd38:	3402      	adds	r4, #2
 800fd3a:	e7ee      	b.n	800fd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800fd3c:	d071      	beq.n	800fe22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fd3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fd40:	1e58      	subs	r0, r3, #1
 800fd42:	fb05 1500 	mla	r5, r5, r0, r1
 800fd46:	142d      	asrs	r5, r5, #16
 800fd48:	d45f      	bmi.n	800fe0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd4a:	4565      	cmp	r5, ip
 800fd4c:	da5d      	bge.n	800fe0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fd50:	fb05 2000 	mla	r0, r5, r0, r2
 800fd54:	1400      	asrs	r0, r0, #16
 800fd56:	d458      	bmi.n	800fe0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd58:	42b8      	cmp	r0, r7
 800fd5a:	da56      	bge.n	800fe0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fd5c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800fd60:	4699      	mov	r9, r3
 800fd62:	46a2      	mov	sl, r4
 800fd64:	f1b9 0f00 	cmp.w	r9, #0
 800fd68:	dd57      	ble.n	800fe1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800fd6a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fd6e:	9803      	ldr	r0, [sp, #12]
 800fd70:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fd74:	140d      	asrs	r5, r1, #16
 800fd76:	fb07 000c 	mla	r0, r7, ip, r0
 800fd7a:	f109 39ff 	add.w	r9, r9, #4294967295
 800fd7e:	5d40      	ldrb	r0, [r0, r5]
 800fd80:	9d04      	ldr	r5, [sp, #16]
 800fd82:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fd86:	f8ba 5000 	ldrh.w	r5, [sl]
 800fd8a:	122f      	asrs	r7, r5, #8
 800fd8c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fd90:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd94:	fb17 f706 	smulbb	r7, r7, r6
 800fd98:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800fd9c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fda0:	00ed      	lsls	r5, r5, #3
 800fda2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800fda6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800fdaa:	10c7      	asrs	r7, r0, #3
 800fdac:	b2ed      	uxtb	r5, r5
 800fdae:	00c0      	lsls	r0, r0, #3
 800fdb0:	fb18 f806 	smulbb	r8, r8, r6
 800fdb4:	fb15 f506 	smulbb	r5, r5, r6
 800fdb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fdbc:	b2c0      	uxtb	r0, r0
 800fdbe:	fa1f fc8c 	uxth.w	ip, ip
 800fdc2:	fb07 870b 	mla	r7, r7, fp, r8
 800fdc6:	fb00 500b 	mla	r0, r0, fp, r5
 800fdca:	b280      	uxth	r0, r0
 800fdcc:	b2bf      	uxth	r7, r7
 800fdce:	f10c 0501 	add.w	r5, ip, #1
 800fdd2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fdd6:	f107 0801 	add.w	r8, r7, #1
 800fdda:	1c45      	adds	r5, r0, #1
 800fddc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fde0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800fde4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fde6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fdea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fdee:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800fdf2:	ea45 0c0c 	orr.w	ip, r5, ip
 800fdf6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800fdfa:	4401      	add	r1, r0
 800fdfc:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fdfe:	ea4c 0c08 	orr.w	ip, ip, r8
 800fe02:	f82a cb02 	strh.w	ip, [sl], #2
 800fe06:	4402      	add	r2, r0
 800fe08:	e7ac      	b.n	800fd64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fe0a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800fe0e:	f04f 0800 	mov.w	r8, #0
 800fe12:	eb03 0008 	add.w	r0, r3, r8
 800fe16:	2800      	cmp	r0, #0
 800fe18:	dc41      	bgt.n	800fe9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fe1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe22:	9b01      	ldr	r3, [sp, #4]
 800fe24:	2b00      	cmp	r3, #0
 800fe26:	f340 8097 	ble.w	800ff58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fe2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe2e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fe32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fe36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe44:	eef0 6a62 	vmov.f32	s13, s5
 800fe48:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe50:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe54:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fe58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe5c:	eef0 6a43 	vmov.f32	s13, s6
 800fe60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe64:	ee12 2a90 	vmov	r2, s5
 800fe68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe6c:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe70:	ee13 2a10 	vmov	r2, s6
 800fe74:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe78:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe7c:	9314      	str	r3, [sp, #80]	; 0x50
 800fe7e:	9b01      	ldr	r3, [sp, #4]
 800fe80:	9a05      	ldr	r2, [sp, #20]
 800fe82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe86:	3b01      	subs	r3, #1
 800fe88:	9301      	str	r3, [sp, #4]
 800fe8a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fe8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe90:	eeb0 3a67 	vmov.f32	s6, s15
 800fe94:	bf08      	it	eq
 800fe96:	4613      	moveq	r3, r2
 800fe98:	eef0 2a47 	vmov.f32	s5, s14
 800fe9c:	e72c      	b.n	800fcf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800fe9e:	140f      	asrs	r7, r1, #16
 800fea0:	d453      	bmi.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800fea2:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fea6:	42bd      	cmp	r5, r7
 800fea8:	dd4f      	ble.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800feaa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800feae:	d44c      	bmi.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800feb0:	f8de 000c 	ldr.w	r0, [lr, #12]
 800feb4:	4560      	cmp	r0, ip
 800feb6:	dd48      	ble.n	800ff4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800feb8:	9803      	ldr	r0, [sp, #12]
 800feba:	b22d      	sxth	r5, r5
 800febc:	fb0c 0505 	mla	r5, ip, r5, r0
 800fec0:	5de8      	ldrb	r0, [r5, r7]
 800fec2:	9d04      	ldr	r5, [sp, #16]
 800fec4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fec8:	f06f 0501 	mvn.w	r5, #1
 800fecc:	fb05 fb08 	mul.w	fp, r5, r8
 800fed0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fed4:	f834 500b 	ldrh.w	r5, [r4, fp]
 800fed8:	122f      	asrs	r7, r5, #8
 800feda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fede:	fb17 f706 	smulbb	r7, r7, r6
 800fee2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800fee6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800feea:	00ed      	lsls	r5, r5, #3
 800feec:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800fef0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fef4:	10c7      	asrs	r7, r0, #3
 800fef6:	b2ed      	uxtb	r5, r5
 800fef8:	00c0      	lsls	r0, r0, #3
 800fefa:	fb19 f906 	smulbb	r9, r9, r6
 800fefe:	fb15 f506 	smulbb	r5, r5, r6
 800ff02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ff06:	b2c0      	uxtb	r0, r0
 800ff08:	fa1f fc8c 	uxth.w	ip, ip
 800ff0c:	fb07 970a 	mla	r7, r7, sl, r9
 800ff10:	fb00 500a 	mla	r0, r0, sl, r5
 800ff14:	b2bf      	uxth	r7, r7
 800ff16:	b280      	uxth	r0, r0
 800ff18:	f10c 0501 	add.w	r5, ip, #1
 800ff1c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ff20:	f107 0901 	add.w	r9, r7, #1
 800ff24:	1c45      	adds	r5, r0, #1
 800ff26:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ff2a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ff2e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ff36:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ff3a:	ea45 0c0c 	orr.w	ip, r5, ip
 800ff3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ff42:	ea4c 0c09 	orr.w	ip, ip, r9
 800ff46:	f824 c00b 	strh.w	ip, [r4, fp]
 800ff4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff4c:	4401      	add	r1, r0
 800ff4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff50:	f108 38ff 	add.w	r8, r8, #4294967295
 800ff54:	4402      	add	r2, r0
 800ff56:	e75c      	b.n	800fe12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800ff58:	b007      	add	sp, #28
 800ff5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff62:	b085      	sub	sp, #20
 800ff64:	4693      	mov	fp, r2
 800ff66:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ff68:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800ff6a:	6870      	ldr	r0, [r6, #4]
 800ff6c:	9100      	str	r1, [sp, #0]
 800ff6e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ff72:	fb00 2404 	mla	r4, r0, r4, r2
 800ff76:	6832      	ldr	r2, [r6, #0]
 800ff78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff7c:	682a      	ldr	r2, [r5, #0]
 800ff7e:	9201      	str	r2, [sp, #4]
 800ff80:	686a      	ldr	r2, [r5, #4]
 800ff82:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800ff86:	3204      	adds	r2, #4
 800ff88:	9202      	str	r2, [sp, #8]
 800ff8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ff8e:	9a00      	ldr	r2, [sp, #0]
 800ff90:	2a00      	cmp	r2, #0
 800ff92:	dc03      	bgt.n	800ff9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800ff94:	f1bb 0f00 	cmp.w	fp, #0
 800ff98:	f340 80a0 	ble.w	80100dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ff9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ff9e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ffa2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800ffa6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ffaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ffac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ffb0:	2b00      	cmp	r3, #0
 800ffb2:	dd0c      	ble.n	800ffce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ffb4:	1406      	asrs	r6, r0, #16
 800ffb6:	d405      	bmi.n	800ffc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffb8:	454e      	cmp	r6, r9
 800ffba:	da03      	bge.n	800ffc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffbc:	1416      	asrs	r6, r2, #16
 800ffbe:	d401      	bmi.n	800ffc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ffc0:	4546      	cmp	r6, r8
 800ffc2:	db05      	blt.n	800ffd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ffc4:	4470      	add	r0, lr
 800ffc6:	4462      	add	r2, ip
 800ffc8:	3b01      	subs	r3, #1
 800ffca:	3402      	adds	r4, #2
 800ffcc:	e7f0      	b.n	800ffb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ffce:	d00f      	beq.n	800fff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ffd0:	1e5e      	subs	r6, r3, #1
 800ffd2:	fb0e 0706 	mla	r7, lr, r6, r0
 800ffd6:	143f      	asrs	r7, r7, #16
 800ffd8:	d541      	bpl.n	801005e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800ffda:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800ffde:	4698      	mov	r8, r3
 800ffe0:	9603      	str	r6, [sp, #12]
 800ffe2:	f1b8 0f00 	cmp.w	r8, #0
 800ffe6:	dc59      	bgt.n	801009c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ffe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ffec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fff0:	9b00      	ldr	r3, [sp, #0]
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	dd72      	ble.n	80100dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800fff6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fffa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fffe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010004:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010008:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801000c:	eeb0 6a62 	vmov.f32	s12, s5
 8010010:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010018:	ee77 2a62 	vsub.f32	s5, s14, s5
 801001c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010020:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010024:	eeb0 6a43 	vmov.f32	s12, s6
 8010028:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801002c:	ee12 2a90 	vmov	r2, s5
 8010030:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010034:	fb92 fef3 	sdiv	lr, r2, r3
 8010038:	ee13 2a10 	vmov	r2, s6
 801003c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010040:	9b00      	ldr	r3, [sp, #0]
 8010042:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010046:	3b01      	subs	r3, #1
 8010048:	9300      	str	r3, [sp, #0]
 801004a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801004e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010050:	eeb0 3a67 	vmov.f32	s6, s15
 8010054:	bf08      	it	eq
 8010056:	465b      	moveq	r3, fp
 8010058:	eef0 2a47 	vmov.f32	s5, s14
 801005c:	e797      	b.n	800ff8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801005e:	454f      	cmp	r7, r9
 8010060:	dabb      	bge.n	800ffda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010062:	fb0c 2606 	mla	r6, ip, r6, r2
 8010066:	1436      	asrs	r6, r6, #16
 8010068:	d4b7      	bmi.n	800ffda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801006a:	4546      	cmp	r6, r8
 801006c:	dab5      	bge.n	800ffda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801006e:	461e      	mov	r6, r3
 8010070:	46a0      	mov	r8, r4
 8010072:	2e00      	cmp	r6, #0
 8010074:	ddb8      	ble.n	800ffe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010076:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801007a:	9901      	ldr	r1, [sp, #4]
 801007c:	1417      	asrs	r7, r2, #16
 801007e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010082:	fb0a 1707 	mla	r7, sl, r7, r1
 8010086:	9902      	ldr	r1, [sp, #8]
 8010088:	f817 7009 	ldrb.w	r7, [r7, r9]
 801008c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010090:	f828 7b02 	strh.w	r7, [r8], #2
 8010094:	4470      	add	r0, lr
 8010096:	4462      	add	r2, ip
 8010098:	3e01      	subs	r6, #1
 801009a:	e7ea      	b.n	8010072 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801009c:	ea5f 4920 	movs.w	r9, r0, asr #16
 80100a0:	d417      	bmi.n	80100d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80100a2:	68ae      	ldr	r6, [r5, #8]
 80100a4:	454e      	cmp	r6, r9
 80100a6:	dd14      	ble.n	80100d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80100a8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80100ac:	d411      	bmi.n	80100d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80100ae:	68ef      	ldr	r7, [r5, #12]
 80100b0:	4557      	cmp	r7, sl
 80100b2:	dd0e      	ble.n	80100d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80100b4:	9f01      	ldr	r7, [sp, #4]
 80100b6:	b236      	sxth	r6, r6
 80100b8:	fb0a 7606 	mla	r6, sl, r6, r7
 80100bc:	9f02      	ldr	r7, [sp, #8]
 80100be:	f816 6009 	ldrb.w	r6, [r6, r9]
 80100c2:	f06f 0101 	mvn.w	r1, #1
 80100c6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80100ca:	fb01 f608 	mul.w	r6, r1, r8
 80100ce:	9903      	ldr	r1, [sp, #12]
 80100d0:	538f      	strh	r7, [r1, r6]
 80100d2:	4470      	add	r0, lr
 80100d4:	4462      	add	r2, ip
 80100d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80100da:	e782      	b.n	800ffe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80100dc:	b005      	add	sp, #20
 80100de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080100e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80100e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100e6:	b087      	sub	sp, #28
 80100e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80100ea:	9205      	str	r2, [sp, #20]
 80100ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80100f0:	9203      	str	r2, [sp, #12]
 80100f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80100f6:	9102      	str	r1, [sp, #8]
 80100f8:	6861      	ldr	r1, [r4, #4]
 80100fa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80100fe:	fb01 2000 	mla	r0, r1, r0, r2
 8010102:	6822      	ldr	r2, [r4, #0]
 8010104:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010108:	9200      	str	r2, [sp, #0]
 801010a:	f8dc 2000 	ldr.w	r2, [ip]
 801010e:	9204      	str	r2, [sp, #16]
 8010110:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010114:	3204      	adds	r2, #4
 8010116:	9201      	str	r2, [sp, #4]
 8010118:	9a03      	ldr	r2, [sp, #12]
 801011a:	43d5      	mvns	r5, r2
 801011c:	b2ed      	uxtb	r5, r5
 801011e:	9a02      	ldr	r2, [sp, #8]
 8010120:	2a00      	cmp	r2, #0
 8010122:	dc03      	bgt.n	801012c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010124:	9a05      	ldr	r2, [sp, #20]
 8010126:	2a00      	cmp	r2, #0
 8010128:	f340 812c 	ble.w	8010384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801012c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801012e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8010132:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8010136:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801013a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801013c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010140:	2b00      	cmp	r3, #0
 8010142:	dd10      	ble.n	8010166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010144:	140c      	asrs	r4, r1, #16
 8010146:	d405      	bmi.n	8010154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010148:	4574      	cmp	r4, lr
 801014a:	da03      	bge.n	8010154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801014c:	1414      	asrs	r4, r2, #16
 801014e:	d401      	bmi.n	8010154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010150:	42bc      	cmp	r4, r7
 8010152:	db09      	blt.n	8010168 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8010154:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010156:	9800      	ldr	r0, [sp, #0]
 8010158:	4421      	add	r1, r4
 801015a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801015c:	3002      	adds	r0, #2
 801015e:	4422      	add	r2, r4
 8010160:	3b01      	subs	r3, #1
 8010162:	9000      	str	r0, [sp, #0]
 8010164:	e7ec      	b.n	8010140 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010166:	d071      	beq.n	801024c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8010168:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801016a:	1e5c      	subs	r4, r3, #1
 801016c:	fb06 1604 	mla	r6, r6, r4, r1
 8010170:	1436      	asrs	r6, r6, #16
 8010172:	d45d      	bmi.n	8010230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010174:	4576      	cmp	r6, lr
 8010176:	da5b      	bge.n	8010230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010178:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801017a:	fb06 2404 	mla	r4, r6, r4, r2
 801017e:	1424      	asrs	r4, r4, #16
 8010180:	d456      	bmi.n	8010230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010182:	42bc      	cmp	r4, r7
 8010184:	da54      	bge.n	8010230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010186:	f8dd 9000 	ldr.w	r9, [sp]
 801018a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801018e:	4698      	mov	r8, r3
 8010190:	f1b8 0f00 	cmp.w	r8, #0
 8010194:	dd54      	ble.n	8010240 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010196:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801019a:	9804      	ldr	r0, [sp, #16]
 801019c:	1414      	asrs	r4, r2, #16
 801019e:	fb07 0404 	mla	r4, r7, r4, r0
 80101a2:	140e      	asrs	r6, r1, #16
 80101a4:	9801      	ldr	r0, [sp, #4]
 80101a6:	f814 e006 	ldrb.w	lr, [r4, r6]
 80101aa:	f8b9 4000 	ldrh.w	r4, [r9]
 80101ae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80101b2:	eb00 0b0e 	add.w	fp, r0, lr
 80101b6:	1227      	asrs	r7, r4, #8
 80101b8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80101bc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80101c0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80101c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101c6:	fb16 f60a 	smulbb	r6, r6, sl
 80101ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80101ce:	fb07 6705 	mla	r7, r7, r5, r6
 80101d2:	10e6      	asrs	r6, r4, #3
 80101d4:	00e4      	lsls	r4, r4, #3
 80101d6:	b2e4      	uxtb	r4, r4
 80101d8:	fb1b fb0a 	smulbb	fp, fp, sl
 80101dc:	fb14 f405 	smulbb	r4, r4, r5
 80101e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80101e4:	b2bf      	uxth	r7, r7
 80101e6:	fb06 b605 	mla	r6, r6, r5, fp
 80101ea:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80101ee:	b2b6      	uxth	r6, r6
 80101f0:	fa1f fe8e 	uxth.w	lr, lr
 80101f4:	1c7c      	adds	r4, r7, #1
 80101f6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80101fa:	f106 0b01 	add.w	fp, r6, #1
 80101fe:	f10e 0401 	add.w	r4, lr, #1
 8010202:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010206:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801020a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801020e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010212:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010216:	4327      	orrs	r7, r4
 8010218:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801021c:	4401      	add	r1, r0
 801021e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010220:	ea47 070b 	orr.w	r7, r7, fp
 8010224:	f829 7b02 	strh.w	r7, [r9], #2
 8010228:	4402      	add	r2, r0
 801022a:	f108 38ff 	add.w	r8, r8, #4294967295
 801022e:	e7af      	b.n	8010190 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010230:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8010234:	f04f 0e00 	mov.w	lr, #0
 8010238:	eb03 040e 	add.w	r4, r3, lr
 801023c:	2c00      	cmp	r4, #0
 801023e:	dc43      	bgt.n	80102c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010240:	9a00      	ldr	r2, [sp, #0]
 8010242:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010246:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801024a:	9300      	str	r3, [sp, #0]
 801024c:	9b02      	ldr	r3, [sp, #8]
 801024e:	2b00      	cmp	r3, #0
 8010250:	f340 8098 	ble.w	8010384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010254:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010258:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801025c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010260:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010262:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010266:	ee31 1a05 	vadd.f32	s2, s2, s10
 801026a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801026e:	eef0 6a62 	vmov.f32	s13, s5
 8010272:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010276:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801027a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801027e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010282:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010286:	eef0 6a43 	vmov.f32	s13, s6
 801028a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801028e:	ee12 2a90 	vmov	r2, s5
 8010292:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010296:	fb92 f3f3 	sdiv	r3, r2, r3
 801029a:	ee13 2a10 	vmov	r2, s6
 801029e:	9313      	str	r3, [sp, #76]	; 0x4c
 80102a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80102a6:	9314      	str	r3, [sp, #80]	; 0x50
 80102a8:	9b02      	ldr	r3, [sp, #8]
 80102aa:	9a05      	ldr	r2, [sp, #20]
 80102ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80102b0:	3b01      	subs	r3, #1
 80102b2:	9302      	str	r3, [sp, #8]
 80102b4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80102b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102ba:	eeb0 3a67 	vmov.f32	s6, s15
 80102be:	bf08      	it	eq
 80102c0:	4613      	moveq	r3, r2
 80102c2:	eef0 2a47 	vmov.f32	s5, s14
 80102c6:	e72a      	b.n	801011e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80102c8:	140f      	asrs	r7, r1, #16
 80102ca:	d454      	bmi.n	8010376 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102cc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80102d0:	42be      	cmp	r6, r7
 80102d2:	dd50      	ble.n	8010376 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102d4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80102d8:	d44d      	bmi.n	8010376 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102da:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80102de:	4544      	cmp	r4, r8
 80102e0:	dd49      	ble.n	8010376 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80102e2:	9c04      	ldr	r4, [sp, #16]
 80102e4:	b236      	sxth	r6, r6
 80102e6:	fb08 4606 	mla	r6, r8, r6, r4
 80102ea:	f06f 0001 	mvn.w	r0, #1
 80102ee:	f816 8007 	ldrb.w	r8, [r6, r7]
 80102f2:	9c01      	ldr	r4, [sp, #4]
 80102f4:	fb00 fa0e 	mul.w	sl, r0, lr
 80102f8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80102fc:	9800      	ldr	r0, [sp, #0]
 80102fe:	eb04 0b08 	add.w	fp, r4, r8
 8010302:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010306:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801030a:	9801      	ldr	r0, [sp, #4]
 801030c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010310:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010314:	9800      	ldr	r0, [sp, #0]
 8010316:	1227      	asrs	r7, r4, #8
 8010318:	fb16 f609 	smulbb	r6, r6, r9
 801031c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010320:	fb07 6705 	mla	r7, r7, r5, r6
 8010324:	10e6      	asrs	r6, r4, #3
 8010326:	00e4      	lsls	r4, r4, #3
 8010328:	b2e4      	uxtb	r4, r4
 801032a:	fb1b fb09 	smulbb	fp, fp, r9
 801032e:	fb14 f405 	smulbb	r4, r4, r5
 8010332:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010336:	b2bf      	uxth	r7, r7
 8010338:	fb06 b605 	mla	r6, r6, r5, fp
 801033c:	fb08 4809 	mla	r8, r8, r9, r4
 8010340:	b2b6      	uxth	r6, r6
 8010342:	fa1f f888 	uxth.w	r8, r8
 8010346:	1c7c      	adds	r4, r7, #1
 8010348:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801034c:	f106 0b01 	add.w	fp, r6, #1
 8010350:	f108 0401 	add.w	r4, r8, #1
 8010354:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8010358:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801035c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010360:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010364:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010368:	4327      	orrs	r7, r4
 801036a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801036e:	ea47 070b 	orr.w	r7, r7, fp
 8010372:	f820 700a 	strh.w	r7, [r0, sl]
 8010376:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010378:	4401      	add	r1, r0
 801037a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801037c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010380:	4402      	add	r2, r0
 8010382:	e759      	b.n	8010238 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010384:	b007      	add	sp, #28
 8010386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801038c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801038c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010390:	b085      	sub	sp, #20
 8010392:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010396:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010398:	9203      	str	r2, [sp, #12]
 801039a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801039e:	6870      	ldr	r0, [r6, #4]
 80103a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80103a2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80103a6:	686f      	ldr	r7, [r5, #4]
 80103a8:	9101      	str	r1, [sp, #4]
 80103aa:	fb00 2404 	mla	r4, r0, r4, r2
 80103ae:	6832      	ldr	r2, [r6, #0]
 80103b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80103b4:	682a      	ldr	r2, [r5, #0]
 80103b6:	9202      	str	r2, [sp, #8]
 80103b8:	3704      	adds	r7, #4
 80103ba:	9a01      	ldr	r2, [sp, #4]
 80103bc:	2a00      	cmp	r2, #0
 80103be:	dc03      	bgt.n	80103c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80103c0:	9a03      	ldr	r2, [sp, #12]
 80103c2:	2a00      	cmp	r2, #0
 80103c4:	f340 80cc 	ble.w	8010560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80103c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80103ca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80103ce:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80103d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80103d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80103d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80103dc:	2b00      	cmp	r3, #0
 80103de:	dd0d      	ble.n	80103fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80103e0:	1406      	asrs	r6, r0, #16
 80103e2:	d405      	bmi.n	80103f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103e4:	454e      	cmp	r6, r9
 80103e6:	da03      	bge.n	80103f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103e8:	1416      	asrs	r6, r2, #16
 80103ea:	d401      	bmi.n	80103f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80103ec:	4546      	cmp	r6, r8
 80103ee:	db06      	blt.n	80103fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103f0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80103f2:	4460      	add	r0, ip
 80103f4:	4432      	add	r2, r6
 80103f6:	3b01      	subs	r3, #1
 80103f8:	3402      	adds	r4, #2
 80103fa:	e7ef      	b.n	80103dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80103fc:	d00f      	beq.n	801041e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80103fe:	1e5e      	subs	r6, r3, #1
 8010400:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010404:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010408:	d543      	bpl.n	8010492 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801040a:	4698      	mov	r8, r3
 801040c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010410:	f1b8 0f00 	cmp.w	r8, #0
 8010414:	dc71      	bgt.n	80104fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010416:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801041a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801041e:	9b01      	ldr	r3, [sp, #4]
 8010420:	2b00      	cmp	r3, #0
 8010422:	f340 809d 	ble.w	8010560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010426:	ee30 0a04 	vadd.f32	s0, s0, s8
 801042a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801042e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010434:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010438:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801043c:	eeb0 6a62 	vmov.f32	s12, s5
 8010440:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010444:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010448:	ee77 2a62 	vsub.f32	s5, s14, s5
 801044c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010450:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010454:	eeb0 6a43 	vmov.f32	s12, s6
 8010458:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801045c:	ee12 2a90 	vmov	r2, s5
 8010460:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010464:	fb92 fcf3 	sdiv	ip, r2, r3
 8010468:	ee13 2a10 	vmov	r2, s6
 801046c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010470:	9312      	str	r3, [sp, #72]	; 0x48
 8010472:	9b01      	ldr	r3, [sp, #4]
 8010474:	9a03      	ldr	r2, [sp, #12]
 8010476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801047a:	3b01      	subs	r3, #1
 801047c:	9301      	str	r3, [sp, #4]
 801047e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010484:	eeb0 3a67 	vmov.f32	s6, s15
 8010488:	bf08      	it	eq
 801048a:	4613      	moveq	r3, r2
 801048c:	eef0 2a47 	vmov.f32	s5, s14
 8010490:	e793      	b.n	80103ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010492:	45ce      	cmp	lr, r9
 8010494:	dab9      	bge.n	801040a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010496:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010498:	fb01 2606 	mla	r6, r1, r6, r2
 801049c:	1436      	asrs	r6, r6, #16
 801049e:	d4b4      	bmi.n	801040a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80104a0:	4546      	cmp	r6, r8
 80104a2:	dab2      	bge.n	801040a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80104a4:	4698      	mov	r8, r3
 80104a6:	46a2      	mov	sl, r4
 80104a8:	f1b8 0f00 	cmp.w	r8, #0
 80104ac:	ddb3      	ble.n	8010416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80104ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80104b2:	9902      	ldr	r1, [sp, #8]
 80104b4:	1416      	asrs	r6, r2, #16
 80104b6:	fb09 1606 	mla	r6, r9, r6, r1
 80104ba:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80104be:	492a      	ldr	r1, [pc, #168]	; (8010568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80104c0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80104c4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80104c8:	eb07 0b0e 	add.w	fp, r7, lr
 80104cc:	4460      	add	r0, ip
 80104ce:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80104d2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80104d6:	00f6      	lsls	r6, r6, #3
 80104d8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80104dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80104e0:	ea49 0606 	orr.w	r6, r9, r6
 80104e4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80104e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80104ea:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80104ee:	f82a 6b02 	strh.w	r6, [sl], #2
 80104f2:	440a      	add	r2, r1
 80104f4:	f108 38ff 	add.w	r8, r8, #4294967295
 80104f8:	e7d6      	b.n	80104a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80104fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80104fe:	d429      	bmi.n	8010554 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010500:	68ae      	ldr	r6, [r5, #8]
 8010502:	454e      	cmp	r6, r9
 8010504:	dd26      	ble.n	8010554 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010506:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801050a:	d423      	bmi.n	8010554 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801050c:	68e9      	ldr	r1, [r5, #12]
 801050e:	4559      	cmp	r1, fp
 8010510:	dd20      	ble.n	8010554 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010512:	9902      	ldr	r1, [sp, #8]
 8010514:	fa0f fe86 	sxth.w	lr, r6
 8010518:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801051c:	f06f 0101 	mvn.w	r1, #1
 8010520:	f81e e009 	ldrb.w	lr, [lr, r9]
 8010524:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010528:	eb07 060e 	add.w	r6, r7, lr
 801052c:	fb01 f908 	mul.w	r9, r1, r8
 8010530:	f896 b002 	ldrb.w	fp, [r6, #2]
 8010534:	7876      	ldrb	r6, [r6, #1]
 8010536:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801053a:	00f6      	lsls	r6, r6, #3
 801053c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8010540:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010544:	ea4b 0606 	orr.w	r6, fp, r6
 8010548:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801054c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8010550:	f82a 6009 	strh.w	r6, [sl, r9]
 8010554:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010556:	4460      	add	r0, ip
 8010558:	440a      	add	r2, r1
 801055a:	f108 38ff 	add.w	r8, r8, #4294967295
 801055e:	e757      	b.n	8010410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010560:	b005      	add	sp, #20
 8010562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010566:	bf00      	nop
 8010568:	fffff800 	.word	0xfffff800

0801056c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801056c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010570:	b087      	sub	sp, #28
 8010572:	468b      	mov	fp, r1
 8010574:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010576:	9204      	str	r2, [sp, #16]
 8010578:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801057c:	9205      	str	r2, [sp, #20]
 801057e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010582:	6841      	ldr	r1, [r0, #4]
 8010584:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010588:	fb01 2404 	mla	r4, r1, r4, r2
 801058c:	6802      	ldr	r2, [r0, #0]
 801058e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010592:	f8dc 2000 	ldr.w	r2, [ip]
 8010596:	9201      	str	r2, [sp, #4]
 8010598:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801059c:	3204      	adds	r2, #4
 801059e:	9202      	str	r2, [sp, #8]
 80105a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105a4:	f1bb 0f00 	cmp.w	fp, #0
 80105a8:	dc03      	bgt.n	80105b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80105aa:	9a04      	ldr	r2, [sp, #16]
 80105ac:	2a00      	cmp	r2, #0
 80105ae:	f340 8138 	ble.w	8010822 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80105b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80105b4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80105b8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80105bc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80105c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80105c6:	2b00      	cmp	r3, #0
 80105c8:	dd0e      	ble.n	80105e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80105ca:	1402      	asrs	r2, r0, #16
 80105cc:	d405      	bmi.n	80105da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105ce:	42ba      	cmp	r2, r7
 80105d0:	da03      	bge.n	80105da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105d2:	140a      	asrs	r2, r1, #16
 80105d4:	d401      	bmi.n	80105da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105d6:	42b2      	cmp	r2, r6
 80105d8:	db07      	blt.n	80105ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80105da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80105dc:	4410      	add	r0, r2
 80105de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80105e0:	3b01      	subs	r3, #1
 80105e2:	4411      	add	r1, r2
 80105e4:	3402      	adds	r4, #2
 80105e6:	e7ee      	b.n	80105c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80105e8:	d019      	beq.n	801061e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80105ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80105ec:	1e5a      	subs	r2, r3, #1
 80105ee:	fb05 0502 	mla	r5, r5, r2, r0
 80105f2:	142d      	asrs	r5, r5, #16
 80105f4:	d409      	bmi.n	801060a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80105f6:	42bd      	cmp	r5, r7
 80105f8:	da07      	bge.n	801060a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80105fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80105fc:	fb05 1202 	mla	r2, r5, r2, r1
 8010600:	1412      	asrs	r2, r2, #16
 8010602:	d402      	bmi.n	801060a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010604:	42b2      	cmp	r2, r6
 8010606:	f2c0 80ac 	blt.w	8010762 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801060a:	f04f 0e00 	mov.w	lr, #0
 801060e:	eb03 020e 	add.w	r2, r3, lr
 8010612:	2a00      	cmp	r2, #0
 8010614:	dc3e      	bgt.n	8010694 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010616:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801061a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801061e:	f1bb 0f00 	cmp.w	fp, #0
 8010622:	f340 80fe 	ble.w	8010822 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010626:	ee30 0a04 	vadd.f32	s0, s0, s8
 801062a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801062e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010632:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010634:	f1bb 0b01 	subs.w	fp, fp, #1
 8010638:	ee31 1a05 	vadd.f32	s2, s2, s10
 801063c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010640:	eeb0 6a62 	vmov.f32	s12, s5
 8010644:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010648:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801064c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010650:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010654:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010658:	eeb0 6a43 	vmov.f32	s12, s6
 801065c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010660:	ee12 2a90 	vmov	r2, s5
 8010664:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010668:	fb92 f3f3 	sdiv	r3, r2, r3
 801066c:	ee13 2a10 	vmov	r2, s6
 8010670:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010674:	9313      	str	r3, [sp, #76]	; 0x4c
 8010676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010678:	fb92 f3f3 	sdiv	r3, r2, r3
 801067c:	9a04      	ldr	r2, [sp, #16]
 801067e:	9314      	str	r3, [sp, #80]	; 0x50
 8010680:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010684:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010686:	eeb0 3a67 	vmov.f32	s6, s15
 801068a:	bf08      	it	eq
 801068c:	4613      	moveq	r3, r2
 801068e:	eef0 2a47 	vmov.f32	s5, s14
 8010692:	e787      	b.n	80105a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010694:	1406      	asrs	r6, r0, #16
 8010696:	d45d      	bmi.n	8010754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010698:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801069c:	42b5      	cmp	r5, r6
 801069e:	dd59      	ble.n	8010754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80106a0:	140f      	asrs	r7, r1, #16
 80106a2:	d457      	bmi.n	8010754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80106a4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80106a8:	42ba      	cmp	r2, r7
 80106aa:	dd53      	ble.n	8010754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80106ac:	9a01      	ldr	r2, [sp, #4]
 80106ae:	b22d      	sxth	r5, r5
 80106b0:	fb07 2505 	mla	r5, r7, r5, r2
 80106b4:	5daa      	ldrb	r2, [r5, r6]
 80106b6:	9d02      	ldr	r5, [sp, #8]
 80106b8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80106bc:	0e2e      	lsrs	r6, r5, #24
 80106be:	d049      	beq.n	8010754 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80106c0:	f06f 0201 	mvn.w	r2, #1
 80106c4:	fb02 f20e 	mul.w	r2, r2, lr
 80106c8:	9203      	str	r2, [sp, #12]
 80106ca:	f834 8002 	ldrh.w	r8, [r4, r2]
 80106ce:	9a05      	ldr	r2, [sp, #20]
 80106d0:	4356      	muls	r6, r2
 80106d2:	1c72      	adds	r2, r6, #1
 80106d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80106d8:	1212      	asrs	r2, r2, #8
 80106da:	fa1f f982 	uxth.w	r9, r2
 80106de:	ea4f 2728 	mov.w	r7, r8, asr #8
 80106e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80106e6:	43d2      	mvns	r2, r2
 80106e8:	b2d2      	uxtb	r2, r2
 80106ea:	fb16 f609 	smulbb	r6, r6, r9
 80106ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80106f2:	fb07 6702 	mla	r7, r7, r2, r6
 80106f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80106fa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80106fe:	b2ed      	uxtb	r5, r5
 8010700:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010704:	fa5f f888 	uxtb.w	r8, r8
 8010708:	fb15 f509 	smulbb	r5, r5, r9
 801070c:	fb08 5502 	mla	r5, r8, r2, r5
 8010710:	b2bf      	uxth	r7, r7
 8010712:	fb1a fa09 	smulbb	sl, sl, r9
 8010716:	b2ad      	uxth	r5, r5
 8010718:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801071c:	fb06 a602 	mla	r6, r6, r2, sl
 8010720:	1c7a      	adds	r2, r7, #1
 8010722:	f105 0a01 	add.w	sl, r5, #1
 8010726:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801072a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801072e:	b2b6      	uxth	r6, r6
 8010730:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010734:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010738:	ea4a 0707 	orr.w	r7, sl, r7
 801073c:	f106 0a01 	add.w	sl, r6, #1
 8010740:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010744:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010748:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801074c:	9a03      	ldr	r2, [sp, #12]
 801074e:	ea47 070a 	orr.w	r7, r7, sl
 8010752:	52a7      	strh	r7, [r4, r2]
 8010754:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010756:	4410      	add	r0, r2
 8010758:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801075a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801075e:	4411      	add	r1, r2
 8010760:	e755      	b.n	801060e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010762:	f04f 0800 	mov.w	r8, #0
 8010766:	eba3 0208 	sub.w	r2, r3, r8
 801076a:	2a00      	cmp	r2, #0
 801076c:	f77f af53 	ble.w	8010616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010770:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010774:	9f01      	ldr	r7, [sp, #4]
 8010776:	140a      	asrs	r2, r1, #16
 8010778:	1405      	asrs	r5, r0, #16
 801077a:	fb06 7202 	mla	r2, r6, r2, r7
 801077e:	5d52      	ldrb	r2, [r2, r5]
 8010780:	9d02      	ldr	r5, [sp, #8]
 8010782:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010786:	0e2e      	lsrs	r6, r5, #24
 8010788:	d044      	beq.n	8010814 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801078a:	9a05      	ldr	r2, [sp, #20]
 801078c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010790:	4356      	muls	r6, r2
 8010792:	1c72      	adds	r2, r6, #1
 8010794:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010798:	1212      	asrs	r2, r2, #8
 801079a:	fa1f f982 	uxth.w	r9, r2
 801079e:	ea4f 272e 	mov.w	r7, lr, asr #8
 80107a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80107a6:	43d2      	mvns	r2, r2
 80107a8:	b2d2      	uxtb	r2, r2
 80107aa:	fb16 f609 	smulbb	r6, r6, r9
 80107ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107b2:	fb07 6702 	mla	r7, r7, r2, r6
 80107b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80107ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80107be:	b2ed      	uxtb	r5, r5
 80107c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80107c4:	fa5f fe8e 	uxtb.w	lr, lr
 80107c8:	fb15 f509 	smulbb	r5, r5, r9
 80107cc:	fb0e 5502 	mla	r5, lr, r2, r5
 80107d0:	b2bf      	uxth	r7, r7
 80107d2:	fb1a fa09 	smulbb	sl, sl, r9
 80107d6:	b2ad      	uxth	r5, r5
 80107d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107dc:	fb06 a602 	mla	r6, r6, r2, sl
 80107e0:	1c7a      	adds	r2, r7, #1
 80107e2:	f105 0a01 	add.w	sl, r5, #1
 80107e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80107ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107ee:	b2b6      	uxth	r6, r6
 80107f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80107f8:	ea4a 0707 	orr.w	r7, sl, r7
 80107fc:	f106 0a01 	add.w	sl, r6, #1
 8010800:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010804:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010808:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801080c:	ea47 070a 	orr.w	r7, r7, sl
 8010810:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010814:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010816:	4410      	add	r0, r2
 8010818:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801081a:	f108 0801 	add.w	r8, r8, #1
 801081e:	4411      	add	r1, r2
 8010820:	e7a1      	b.n	8010766 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010822:	b007      	add	sp, #28
 8010824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801082c:	b085      	sub	sp, #20
 801082e:	468b      	mov	fp, r1
 8010830:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010832:	9203      	str	r2, [sp, #12]
 8010834:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010838:	6841      	ldr	r1, [r0, #4]
 801083a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801083e:	fb01 2404 	mla	r4, r1, r4, r2
 8010842:	6802      	ldr	r2, [r0, #0]
 8010844:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010848:	f8de 2000 	ldr.w	r2, [lr]
 801084c:	9200      	str	r2, [sp, #0]
 801084e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010852:	3204      	adds	r2, #4
 8010854:	9201      	str	r2, [sp, #4]
 8010856:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801085a:	f1bb 0f00 	cmp.w	fp, #0
 801085e:	dc03      	bgt.n	8010868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010860:	9a03      	ldr	r2, [sp, #12]
 8010862:	2a00      	cmp	r2, #0
 8010864:	f340 8153 	ble.w	8010b0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010868:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801086a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801086e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010872:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010876:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010878:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801087c:	2b00      	cmp	r3, #0
 801087e:	dd0e      	ble.n	801089e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010880:	1408      	asrs	r0, r1, #16
 8010882:	d405      	bmi.n	8010890 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010884:	42b8      	cmp	r0, r7
 8010886:	da03      	bge.n	8010890 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010888:	1410      	asrs	r0, r2, #16
 801088a:	d401      	bmi.n	8010890 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801088c:	42b0      	cmp	r0, r6
 801088e:	db07      	blt.n	80108a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010890:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010892:	4401      	add	r1, r0
 8010894:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010896:	3b01      	subs	r3, #1
 8010898:	4402      	add	r2, r0
 801089a:	3402      	adds	r4, #2
 801089c:	e7ee      	b.n	801087c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801089e:	d017      	beq.n	80108d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80108a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80108a2:	1e58      	subs	r0, r3, #1
 80108a4:	fb05 1500 	mla	r5, r5, r0, r1
 80108a8:	142d      	asrs	r5, r5, #16
 80108aa:	d409      	bmi.n	80108c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80108ac:	42bd      	cmp	r5, r7
 80108ae:	da07      	bge.n	80108c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80108b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80108b2:	fb05 2000 	mla	r0, r5, r0, r2
 80108b6:	1400      	asrs	r0, r0, #16
 80108b8:	d402      	bmi.n	80108c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80108ba:	42b0      	cmp	r0, r6
 80108bc:	f2c0 80bc 	blt.w	8010a38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80108c0:	2600      	movs	r6, #0
 80108c2:	1998      	adds	r0, r3, r6
 80108c4:	2800      	cmp	r0, #0
 80108c6:	dc3e      	bgt.n	8010946 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80108c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80108cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80108d0:	f1bb 0f00 	cmp.w	fp, #0
 80108d4:	f340 811b 	ble.w	8010b0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80108d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80108dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80108e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80108e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80108e6:	f1bb 0b01 	subs.w	fp, fp, #1
 80108ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108f2:	eeb0 6a62 	vmov.f32	s12, s5
 80108f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010902:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801090a:	eeb0 6a43 	vmov.f32	s12, s6
 801090e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010912:	ee12 2a90 	vmov	r2, s5
 8010916:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801091a:	fb92 f3f3 	sdiv	r3, r2, r3
 801091e:	ee13 2a10 	vmov	r2, s6
 8010922:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010926:	9311      	str	r3, [sp, #68]	; 0x44
 8010928:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801092a:	fb92 f3f3 	sdiv	r3, r2, r3
 801092e:	9a03      	ldr	r2, [sp, #12]
 8010930:	9312      	str	r3, [sp, #72]	; 0x48
 8010932:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010936:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010938:	eeb0 3a67 	vmov.f32	s6, s15
 801093c:	bf08      	it	eq
 801093e:	4613      	moveq	r3, r2
 8010940:	eef0 2a47 	vmov.f32	s5, s14
 8010944:	e789      	b.n	801085a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010946:	140f      	asrs	r7, r1, #16
 8010948:	d45e      	bmi.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801094a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801094e:	42bd      	cmp	r5, r7
 8010950:	dd5a      	ble.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010952:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010956:	d457      	bmi.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010958:	f8de 000c 	ldr.w	r0, [lr, #12]
 801095c:	4560      	cmp	r0, ip
 801095e:	dd53      	ble.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010960:	9800      	ldr	r0, [sp, #0]
 8010962:	b22d      	sxth	r5, r5
 8010964:	fb0c 0505 	mla	r5, ip, r5, r0
 8010968:	5de8      	ldrb	r0, [r5, r7]
 801096a:	9d01      	ldr	r5, [sp, #4]
 801096c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010970:	0e07      	lsrs	r7, r0, #24
 8010972:	2fff      	cmp	r7, #255	; 0xff
 8010974:	d04e      	beq.n	8010a14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010976:	b2fd      	uxtb	r5, r7
 8010978:	2f00      	cmp	r7, #0
 801097a:	d045      	beq.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801097c:	f06f 0701 	mvn.w	r7, #1
 8010980:	4377      	muls	r7, r6
 8010982:	fa1f f985 	uxth.w	r9, r5
 8010986:	f834 8007 	ldrh.w	r8, [r4, r7]
 801098a:	9702      	str	r7, [sp, #8]
 801098c:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010990:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010994:	43ed      	mvns	r5, r5
 8010996:	b2ed      	uxtb	r5, r5
 8010998:	fb17 f709 	smulbb	r7, r7, r9
 801099c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80109a0:	fb0c 7c05 	mla	ip, ip, r5, r7
 80109a4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80109a8:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80109ac:	b2c0      	uxtb	r0, r0
 80109ae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80109b2:	fa5f f888 	uxtb.w	r8, r8
 80109b6:	fb10 f009 	smulbb	r0, r0, r9
 80109ba:	fb08 0005 	mla	r0, r8, r5, r0
 80109be:	b280      	uxth	r0, r0
 80109c0:	fa1f fc8c 	uxth.w	ip, ip
 80109c4:	fb1a fa09 	smulbb	sl, sl, r9
 80109c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80109cc:	fb07 a705 	mla	r7, r7, r5, sl
 80109d0:	f100 0a01 	add.w	sl, r0, #1
 80109d4:	f10c 0501 	add.w	r5, ip, #1
 80109d8:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80109dc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80109e0:	b2bf      	uxth	r7, r7
 80109e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80109ea:	ea4a 0c0c 	orr.w	ip, sl, ip
 80109ee:	f107 0a01 	add.w	sl, r7, #1
 80109f2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80109f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109fe:	9802      	ldr	r0, [sp, #8]
 8010a00:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a04:	f824 c000 	strh.w	ip, [r4, r0]
 8010a08:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a0a:	4401      	add	r1, r0
 8010a0c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a0e:	3e01      	subs	r6, #1
 8010a10:	4402      	add	r2, r0
 8010a12:	e756      	b.n	80108c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010a14:	f06f 0501 	mvn.w	r5, #1
 8010a18:	fb05 f706 	mul.w	r7, r5, r6
 8010a1c:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010a20:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010a24:	0945      	lsrs	r5, r0, #5
 8010a26:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a2a:	ea4c 0505 	orr.w	r5, ip, r5
 8010a2e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010a32:	4305      	orrs	r5, r0
 8010a34:	53e5      	strh	r5, [r4, r7]
 8010a36:	e7e7      	b.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010a38:	f04f 0800 	mov.w	r8, #0
 8010a3c:	eba3 0008 	sub.w	r0, r3, r8
 8010a40:	2800      	cmp	r0, #0
 8010a42:	f77f af41 	ble.w	80108c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010a46:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010a4a:	9f00      	ldr	r7, [sp, #0]
 8010a4c:	1410      	asrs	r0, r2, #16
 8010a4e:	140d      	asrs	r5, r1, #16
 8010a50:	fb06 7000 	mla	r0, r6, r0, r7
 8010a54:	5d40      	ldrb	r0, [r0, r5]
 8010a56:	9d01      	ldr	r5, [sp, #4]
 8010a58:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010a5c:	0e06      	lsrs	r6, r0, #24
 8010a5e:	2eff      	cmp	r6, #255	; 0xff
 8010a60:	d048      	beq.n	8010af4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8010a62:	b2f5      	uxtb	r5, r6
 8010a64:	2e00      	cmp	r6, #0
 8010a66:	d03e      	beq.n	8010ae6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010a68:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010a6c:	fa1f f985 	uxth.w	r9, r5
 8010a70:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010a74:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010a78:	43ed      	mvns	r5, r5
 8010a7a:	b2ed      	uxtb	r5, r5
 8010a7c:	fb16 f609 	smulbb	r6, r6, r9
 8010a80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a84:	fb07 6705 	mla	r7, r7, r5, r6
 8010a88:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010a8c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010a90:	b2c0      	uxtb	r0, r0
 8010a92:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010a96:	fa5f fc8c 	uxtb.w	ip, ip
 8010a9a:	fb10 f009 	smulbb	r0, r0, r9
 8010a9e:	fb0c 0005 	mla	r0, ip, r5, r0
 8010aa2:	b2bf      	uxth	r7, r7
 8010aa4:	fb1a fa09 	smulbb	sl, sl, r9
 8010aa8:	b280      	uxth	r0, r0
 8010aaa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010aae:	fb06 a605 	mla	r6, r6, r5, sl
 8010ab2:	1c7d      	adds	r5, r7, #1
 8010ab4:	f100 0a01 	add.w	sl, r0, #1
 8010ab8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010abc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010ac0:	b2b6      	uxth	r6, r6
 8010ac2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ac6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010aca:	ea4a 0707 	orr.w	r7, sl, r7
 8010ace:	f106 0a01 	add.w	sl, r6, #1
 8010ad2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010ad6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ada:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010ade:	ea47 070a 	orr.w	r7, r7, sl
 8010ae2:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010ae6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ae8:	4401      	add	r1, r0
 8010aea:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010aec:	f108 0801 	add.w	r8, r8, #1
 8010af0:	4402      	add	r2, r0
 8010af2:	e7a3      	b.n	8010a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010af4:	4d07      	ldr	r5, [pc, #28]	; (8010b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010af6:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010afa:	0945      	lsrs	r5, r0, #5
 8010afc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b00:	4335      	orrs	r5, r6
 8010b02:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010b06:	4305      	orrs	r5, r0
 8010b08:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010b0c:	e7eb      	b.n	8010ae6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8010b0e:	b005      	add	sp, #20
 8010b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b14:	fffff800 	.word	0xfffff800

08010b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b1c:	b087      	sub	sp, #28
 8010b1e:	468b      	mov	fp, r1
 8010b20:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010b22:	9204      	str	r2, [sp, #16]
 8010b24:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010b28:	9205      	str	r2, [sp, #20]
 8010b2a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010b2e:	6861      	ldr	r1, [r4, #4]
 8010b30:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010b34:	fb01 2000 	mla	r0, r1, r0, r2
 8010b38:	6822      	ldr	r2, [r4, #0]
 8010b3a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010b3e:	f8de 2000 	ldr.w	r2, [lr]
 8010b42:	9201      	str	r2, [sp, #4]
 8010b44:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010b48:	9202      	str	r2, [sp, #8]
 8010b4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b4e:	f1bb 0f00 	cmp.w	fp, #0
 8010b52:	dc03      	bgt.n	8010b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010b54:	9a04      	ldr	r2, [sp, #16]
 8010b56:	2a00      	cmp	r2, #0
 8010b58:	f340 8142 	ble.w	8010de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010b5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010b5e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010b62:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010b66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010b6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010b6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010b70:	2b00      	cmp	r3, #0
 8010b72:	dd0e      	ble.n	8010b92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010b74:	140c      	asrs	r4, r1, #16
 8010b76:	d405      	bmi.n	8010b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b78:	42bc      	cmp	r4, r7
 8010b7a:	da03      	bge.n	8010b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b7c:	1414      	asrs	r4, r2, #16
 8010b7e:	d401      	bmi.n	8010b84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010b80:	42b4      	cmp	r4, r6
 8010b82:	db07      	blt.n	8010b94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010b84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010b86:	4421      	add	r1, r4
 8010b88:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010b8a:	3b01      	subs	r3, #1
 8010b8c:	4422      	add	r2, r4
 8010b8e:	3002      	adds	r0, #2
 8010b90:	e7ee      	b.n	8010b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010b92:	d019      	beq.n	8010bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010b94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010b96:	1e5c      	subs	r4, r3, #1
 8010b98:	fb05 1504 	mla	r5, r5, r4, r1
 8010b9c:	142d      	asrs	r5, r5, #16
 8010b9e:	d409      	bmi.n	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010ba0:	42bd      	cmp	r5, r7
 8010ba2:	da07      	bge.n	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010ba4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ba6:	fb05 2404 	mla	r4, r5, r4, r2
 8010baa:	1424      	asrs	r4, r4, #16
 8010bac:	d402      	bmi.n	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010bae:	42b4      	cmp	r4, r6
 8010bb0:	f2c0 80b1 	blt.w	8010d16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010bb4:	f04f 0800 	mov.w	r8, #0
 8010bb8:	eb03 0408 	add.w	r4, r3, r8
 8010bbc:	2c00      	cmp	r4, #0
 8010bbe:	dc3e      	bgt.n	8010c3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010bc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010bc8:	f1bb 0f00 	cmp.w	fp, #0
 8010bcc:	f340 8108 	ble.w	8010de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010bd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010bd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010bd8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010bdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010bde:	f1bb 0b01 	subs.w	fp, fp, #1
 8010be2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010be6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010bea:	eeb0 6a62 	vmov.f32	s12, s5
 8010bee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010bf2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010bf6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010bfa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010bfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c02:	eeb0 6a43 	vmov.f32	s12, s6
 8010c06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c0a:	ee12 2a90 	vmov	r2, s5
 8010c0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c12:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c16:	ee13 2a10 	vmov	r2, s6
 8010c1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c1e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c22:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c26:	9a04      	ldr	r2, [sp, #16]
 8010c28:	9314      	str	r3, [sp, #80]	; 0x50
 8010c2a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010c2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c30:	eeb0 3a67 	vmov.f32	s6, s15
 8010c34:	bf08      	it	eq
 8010c36:	4613      	moveq	r3, r2
 8010c38:	eef0 2a47 	vmov.f32	s5, s14
 8010c3c:	e787      	b.n	8010b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010c3e:	140e      	asrs	r6, r1, #16
 8010c40:	d462      	bmi.n	8010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c42:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010c46:	42b5      	cmp	r5, r6
 8010c48:	dd5e      	ble.n	8010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c4a:	1417      	asrs	r7, r2, #16
 8010c4c:	d45c      	bmi.n	8010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c4e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010c52:	42bc      	cmp	r4, r7
 8010c54:	dd58      	ble.n	8010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c56:	b22d      	sxth	r5, r5
 8010c58:	fb07 6505 	mla	r5, r7, r5, r6
 8010c5c:	9c02      	ldr	r4, [sp, #8]
 8010c5e:	5d66      	ldrb	r6, [r4, r5]
 8010c60:	2e00      	cmp	r6, #0
 8010c62:	d051      	beq.n	8010d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010c64:	9c01      	ldr	r4, [sp, #4]
 8010c66:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010c6a:	f06f 0401 	mvn.w	r4, #1
 8010c6e:	fb04 f408 	mul.w	r4, r4, r8
 8010c72:	9403      	str	r4, [sp, #12]
 8010c74:	5b05      	ldrh	r5, [r0, r4]
 8010c76:	9c05      	ldr	r4, [sp, #20]
 8010c78:	4366      	muls	r6, r4
 8010c7a:	1c74      	adds	r4, r6, #1
 8010c7c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010c80:	1224      	asrs	r4, r4, #8
 8010c82:	b2a7      	uxth	r7, r4
 8010c84:	122e      	asrs	r6, r5, #8
 8010c86:	43e4      	mvns	r4, r4
 8010c88:	b2e4      	uxtb	r4, r4
 8010c8a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010c8e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010c92:	fb16 f604 	smulbb	r6, r6, r4
 8010c96:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010c9a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c9e:	00ed      	lsls	r5, r5, #3
 8010ca0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010ca4:	b2ed      	uxtb	r5, r5
 8010ca6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010caa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010cae:	fb15 f504 	smulbb	r5, r5, r4
 8010cb2:	fa5f f989 	uxtb.w	r9, r9
 8010cb6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010cba:	fb09 5507 	mla	r5, r9, r7, r5
 8010cbe:	fb1a fa04 	smulbb	sl, sl, r4
 8010cc2:	fa1f fc8c 	uxth.w	ip, ip
 8010cc6:	b2ad      	uxth	r5, r5
 8010cc8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ccc:	fb06 a607 	mla	r6, r6, r7, sl
 8010cd0:	f10c 0401 	add.w	r4, ip, #1
 8010cd4:	f105 0a01 	add.w	sl, r5, #1
 8010cd8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010cdc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ce0:	b2b6      	uxth	r6, r6
 8010ce2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ce6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010cea:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010cee:	f106 0a01 	add.w	sl, r6, #1
 8010cf2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010cf6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010cfa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cfe:	9c03      	ldr	r4, [sp, #12]
 8010d00:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010d04:	f820 c004 	strh.w	ip, [r0, r4]
 8010d08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010d0a:	4421      	add	r1, r4
 8010d0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010d0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010d12:	4422      	add	r2, r4
 8010d14:	e750      	b.n	8010bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010d16:	f04f 0900 	mov.w	r9, #0
 8010d1a:	eba3 0409 	sub.w	r4, r3, r9
 8010d1e:	2c00      	cmp	r4, #0
 8010d20:	f77f af4e 	ble.w	8010bc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010d24:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010d28:	140d      	asrs	r5, r1, #16
 8010d2a:	1414      	asrs	r4, r2, #16
 8010d2c:	fb06 5404 	mla	r4, r6, r4, r5
 8010d30:	9d02      	ldr	r5, [sp, #8]
 8010d32:	5d2e      	ldrb	r6, [r5, r4]
 8010d34:	2e00      	cmp	r6, #0
 8010d36:	d04c      	beq.n	8010dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010d38:	9d01      	ldr	r5, [sp, #4]
 8010d3a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010d3e:	9c05      	ldr	r4, [sp, #20]
 8010d40:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010d44:	4366      	muls	r6, r4
 8010d46:	1c74      	adds	r4, r6, #1
 8010d48:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010d4c:	1224      	asrs	r4, r4, #8
 8010d4e:	b2a7      	uxth	r7, r4
 8010d50:	122e      	asrs	r6, r5, #8
 8010d52:	43e4      	mvns	r4, r4
 8010d54:	b2e4      	uxtb	r4, r4
 8010d56:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010d5a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010d5e:	fb16 f604 	smulbb	r6, r6, r4
 8010d62:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010d66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010d6a:	00ed      	lsls	r5, r5, #3
 8010d6c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010d70:	b2ed      	uxtb	r5, r5
 8010d72:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010d76:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010d7a:	fb15 f504 	smulbb	r5, r5, r4
 8010d7e:	fa5f f888 	uxtb.w	r8, r8
 8010d82:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010d86:	fb08 5507 	mla	r5, r8, r7, r5
 8010d8a:	fb1a fa04 	smulbb	sl, sl, r4
 8010d8e:	fa1f fc8c 	uxth.w	ip, ip
 8010d92:	b2ad      	uxth	r5, r5
 8010d94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d98:	fb06 a607 	mla	r6, r6, r7, sl
 8010d9c:	f10c 0401 	add.w	r4, ip, #1
 8010da0:	f105 0a01 	add.w	sl, r5, #1
 8010da4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010da8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010dac:	b2b6      	uxth	r6, r6
 8010dae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010db2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010db6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010dba:	f106 0a01 	add.w	sl, r6, #1
 8010dbe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010dc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010dc6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010dca:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010dce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010dd2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010dd4:	4421      	add	r1, r4
 8010dd6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010dd8:	f109 0901 	add.w	r9, r9, #1
 8010ddc:	4422      	add	r2, r4
 8010dde:	e79c      	b.n	8010d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010de0:	b007      	add	sp, #28
 8010de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010de6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dea:	b085      	sub	sp, #20
 8010dec:	468b      	mov	fp, r1
 8010dee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010df0:	9203      	str	r2, [sp, #12]
 8010df2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010df6:	6861      	ldr	r1, [r4, #4]
 8010df8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010dfc:	fb01 2000 	mla	r0, r1, r0, r2
 8010e00:	6822      	ldr	r2, [r4, #0]
 8010e02:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010e06:	f8d8 2000 	ldr.w	r2, [r8]
 8010e0a:	9200      	str	r2, [sp, #0]
 8010e0c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010e10:	9201      	str	r2, [sp, #4]
 8010e12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010e16:	f1bb 0f00 	cmp.w	fp, #0
 8010e1a:	dc03      	bgt.n	8010e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010e1c:	9a03      	ldr	r2, [sp, #12]
 8010e1e:	2a00      	cmp	r2, #0
 8010e20:	f340 8146 	ble.w	80110b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010e24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010e26:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010e2a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010e2e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010e32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010e34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010e38:	2b00      	cmp	r3, #0
 8010e3a:	dd0e      	ble.n	8010e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8010e3c:	140c      	asrs	r4, r1, #16
 8010e3e:	d405      	bmi.n	8010e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e40:	42bc      	cmp	r4, r7
 8010e42:	da03      	bge.n	8010e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e44:	1414      	asrs	r4, r2, #16
 8010e46:	d401      	bmi.n	8010e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010e48:	42b4      	cmp	r4, r6
 8010e4a:	db07      	blt.n	8010e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010e4c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010e4e:	4421      	add	r1, r4
 8010e50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010e52:	3b01      	subs	r3, #1
 8010e54:	4422      	add	r2, r4
 8010e56:	3002      	adds	r0, #2
 8010e58:	e7ee      	b.n	8010e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010e5a:	d017      	beq.n	8010e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010e5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010e5e:	1e5c      	subs	r4, r3, #1
 8010e60:	fb05 1504 	mla	r5, r5, r4, r1
 8010e64:	142d      	asrs	r5, r5, #16
 8010e66:	d409      	bmi.n	8010e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e68:	42bd      	cmp	r5, r7
 8010e6a:	da07      	bge.n	8010e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010e6e:	fb05 2404 	mla	r4, r5, r4, r2
 8010e72:	1424      	asrs	r4, r4, #16
 8010e74:	d402      	bmi.n	8010e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010e76:	42b4      	cmp	r4, r6
 8010e78:	f2c0 80b3 	blt.w	8010fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8010e7c:	2600      	movs	r6, #0
 8010e7e:	199c      	adds	r4, r3, r6
 8010e80:	2c00      	cmp	r4, #0
 8010e82:	dc3e      	bgt.n	8010f02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010e84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010e8c:	f1bb 0f00 	cmp.w	fp, #0
 8010e90:	f340 810e 	ble.w	80110b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010e94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e9c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010ea0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ea2:	f1bb 0b01 	subs.w	fp, fp, #1
 8010ea6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010eaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010eae:	eeb0 6a62 	vmov.f32	s12, s5
 8010eb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010eb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010eba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010ebe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010ec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ec6:	eeb0 6a43 	vmov.f32	s12, s6
 8010eca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010ece:	ee12 2a90 	vmov	r2, s5
 8010ed2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ed6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010eda:	ee13 2a10 	vmov	r2, s6
 8010ede:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ee2:	9311      	str	r3, [sp, #68]	; 0x44
 8010ee4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ee6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010eea:	9a03      	ldr	r2, [sp, #12]
 8010eec:	9312      	str	r3, [sp, #72]	; 0x48
 8010eee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010ef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ef4:	eeb0 3a67 	vmov.f32	s6, s15
 8010ef8:	bf08      	it	eq
 8010efa:	4613      	moveq	r3, r2
 8010efc:	eef0 2a47 	vmov.f32	s5, s14
 8010f00:	e789      	b.n	8010e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010f02:	140f      	asrs	r7, r1, #16
 8010f04:	d45f      	bmi.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f06:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8010f0a:	42bd      	cmp	r5, r7
 8010f0c:	dd5b      	ble.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f0e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010f12:	d458      	bmi.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f14:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8010f18:	4564      	cmp	r4, ip
 8010f1a:	dd54      	ble.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f1c:	b22d      	sxth	r5, r5
 8010f1e:	fb0c 7505 	mla	r5, ip, r5, r7
 8010f22:	9c01      	ldr	r4, [sp, #4]
 8010f24:	5d64      	ldrb	r4, [r4, r5]
 8010f26:	2cff      	cmp	r4, #255	; 0xff
 8010f28:	d053      	beq.n	8010fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8010f2a:	2c00      	cmp	r4, #0
 8010f2c:	d04b      	beq.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010f2e:	9f00      	ldr	r7, [sp, #0]
 8010f30:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8010f34:	f06f 0501 	mvn.w	r5, #1
 8010f38:	4375      	muls	r5, r6
 8010f3a:	9502      	str	r5, [sp, #8]
 8010f3c:	5b45      	ldrh	r5, [r0, r5]
 8010f3e:	fa1f fc84 	uxth.w	ip, r4
 8010f42:	122f      	asrs	r7, r5, #8
 8010f44:	43e4      	mvns	r4, r4
 8010f46:	b2e4      	uxtb	r4, r4
 8010f48:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8010f4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f50:	fb17 f704 	smulbb	r7, r7, r4
 8010f54:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f58:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010f5c:	00ed      	lsls	r5, r5, #3
 8010f5e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010f62:	b2ed      	uxtb	r5, r5
 8010f64:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8010f68:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010f6c:	fb15 f504 	smulbb	r5, r5, r4
 8010f70:	fa5f f989 	uxtb.w	r9, r9
 8010f74:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f78:	fb09 550c 	mla	r5, r9, ip, r5
 8010f7c:	fb1a fa04 	smulbb	sl, sl, r4
 8010f80:	fa1f fe8e 	uxth.w	lr, lr
 8010f84:	b2ad      	uxth	r5, r5
 8010f86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f8a:	fb07 a70c 	mla	r7, r7, ip, sl
 8010f8e:	f10e 0401 	add.w	r4, lr, #1
 8010f92:	f105 0a01 	add.w	sl, r5, #1
 8010f96:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010f9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f9e:	b2bf      	uxth	r7, r7
 8010fa0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fa4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010fa8:	ea4a 0e0e 	orr.w	lr, sl, lr
 8010fac:	f107 0a01 	add.w	sl, r7, #1
 8010fb0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010fb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fb8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fbc:	9c02      	ldr	r4, [sp, #8]
 8010fbe:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010fc2:	f820 e004 	strh.w	lr, [r0, r4]
 8010fc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010fc8:	4421      	add	r1, r4
 8010fca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010fcc:	3e01      	subs	r6, #1
 8010fce:	4422      	add	r2, r4
 8010fd0:	e755      	b.n	8010e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010fd2:	9c00      	ldr	r4, [sp, #0]
 8010fd4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010fd8:	f06f 0401 	mvn.w	r4, #1
 8010fdc:	4374      	muls	r4, r6
 8010fde:	5305      	strh	r5, [r0, r4]
 8010fe0:	e7f1      	b.n	8010fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010fe2:	f04f 0900 	mov.w	r9, #0
 8010fe6:	eba3 0409 	sub.w	r4, r3, r9
 8010fea:	2c00      	cmp	r4, #0
 8010fec:	f77f af4a 	ble.w	8010e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010ff0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010ff4:	1414      	asrs	r4, r2, #16
 8010ff6:	140d      	asrs	r5, r1, #16
 8010ff8:	fb06 5504 	mla	r5, r6, r4, r5
 8010ffc:	9c01      	ldr	r4, [sp, #4]
 8010ffe:	5d64      	ldrb	r4, [r4, r5]
 8011000:	2cff      	cmp	r4, #255	; 0xff
 8011002:	d04f      	beq.n	80110a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8011004:	2c00      	cmp	r4, #0
 8011006:	d046      	beq.n	8011096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8011008:	9e00      	ldr	r6, [sp, #0]
 801100a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801100e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011012:	b2a7      	uxth	r7, r4
 8011014:	122e      	asrs	r6, r5, #8
 8011016:	43e4      	mvns	r4, r4
 8011018:	b2e4      	uxtb	r4, r4
 801101a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801101e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011022:	fb16 f604 	smulbb	r6, r6, r4
 8011026:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801102a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801102e:	00ed      	lsls	r5, r5, #3
 8011030:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011034:	b2ed      	uxtb	r5, r5
 8011036:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801103a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801103e:	fb15 f504 	smulbb	r5, r5, r4
 8011042:	fa5f fe8e 	uxtb.w	lr, lr
 8011046:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801104a:	fb0e 5507 	mla	r5, lr, r7, r5
 801104e:	fb1a fa04 	smulbb	sl, sl, r4
 8011052:	fa1f fc8c 	uxth.w	ip, ip
 8011056:	b2ad      	uxth	r5, r5
 8011058:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801105c:	fb06 a607 	mla	r6, r6, r7, sl
 8011060:	f10c 0401 	add.w	r4, ip, #1
 8011064:	f105 0a01 	add.w	sl, r5, #1
 8011068:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801106c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011070:	b2b6      	uxth	r6, r6
 8011072:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011076:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801107a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801107e:	f106 0a01 	add.w	sl, r6, #1
 8011082:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011086:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801108a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801108e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011092:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011096:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011098:	4421      	add	r1, r4
 801109a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801109c:	f109 0901 	add.w	r9, r9, #1
 80110a0:	4422      	add	r2, r4
 80110a2:	e7a0      	b.n	8010fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80110a4:	9c00      	ldr	r4, [sp, #0]
 80110a6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80110aa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80110ae:	e7f2      	b.n	8011096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80110b0:	b005      	add	sp, #20
 80110b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080110b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80110b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110ba:	b085      	sub	sp, #20
 80110bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80110be:	9203      	str	r2, [sp, #12]
 80110c0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80110c4:	9201      	str	r2, [sp, #4]
 80110c6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80110ca:	9100      	str	r1, [sp, #0]
 80110cc:	6841      	ldr	r1, [r0, #4]
 80110ce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80110d2:	fb01 2404 	mla	r4, r1, r4, r2
 80110d6:	6802      	ldr	r2, [r0, #0]
 80110d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80110dc:	f8de 2000 	ldr.w	r2, [lr]
 80110e0:	9202      	str	r2, [sp, #8]
 80110e2:	9a01      	ldr	r2, [sp, #4]
 80110e4:	43d6      	mvns	r6, r2
 80110e6:	b2f6      	uxtb	r6, r6
 80110e8:	9a00      	ldr	r2, [sp, #0]
 80110ea:	2a00      	cmp	r2, #0
 80110ec:	dc03      	bgt.n	80110f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80110ee:	9a03      	ldr	r2, [sp, #12]
 80110f0:	2a00      	cmp	r2, #0
 80110f2:	f340 8124 	ble.w	801133e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80110f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80110f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80110fc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011100:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011104:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011106:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801110a:	2b00      	cmp	r3, #0
 801110c:	dd0e      	ble.n	801112c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801110e:	1408      	asrs	r0, r1, #16
 8011110:	d405      	bmi.n	801111e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011112:	4560      	cmp	r0, ip
 8011114:	da03      	bge.n	801111e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011116:	1410      	asrs	r0, r2, #16
 8011118:	d401      	bmi.n	801111e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801111a:	42b8      	cmp	r0, r7
 801111c:	db07      	blt.n	801112e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801111e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011120:	4401      	add	r1, r0
 8011122:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011124:	3b01      	subs	r3, #1
 8011126:	4402      	add	r2, r0
 8011128:	3402      	adds	r4, #2
 801112a:	e7ee      	b.n	801110a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801112c:	d06e      	beq.n	801120c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801112e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011130:	1e58      	subs	r0, r3, #1
 8011132:	fb05 1500 	mla	r5, r5, r0, r1
 8011136:	142d      	asrs	r5, r5, #16
 8011138:	d45c      	bmi.n	80111f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801113a:	4565      	cmp	r5, ip
 801113c:	da5a      	bge.n	80111f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801113e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011140:	fb05 2000 	mla	r0, r5, r0, r2
 8011144:	1400      	asrs	r0, r0, #16
 8011146:	d455      	bmi.n	80111f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011148:	42b8      	cmp	r0, r7
 801114a:	da53      	bge.n	80111f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801114c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8011150:	4699      	mov	r9, r3
 8011152:	46a2      	mov	sl, r4
 8011154:	f1b9 0f00 	cmp.w	r9, #0
 8011158:	dd54      	ble.n	8011204 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801115a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801115e:	140d      	asrs	r5, r1, #16
 8011160:	1410      	asrs	r0, r2, #16
 8011162:	fb07 5000 	mla	r0, r7, r0, r5
 8011166:	9d02      	ldr	r5, [sp, #8]
 8011168:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801116c:	f8ba 5000 	ldrh.w	r5, [sl]
 8011170:	122f      	asrs	r7, r5, #8
 8011172:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011176:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801117a:	fb17 f706 	smulbb	r7, r7, r6
 801117e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011182:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011186:	00ed      	lsls	r5, r5, #3
 8011188:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801118c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011190:	10c7      	asrs	r7, r0, #3
 8011192:	b2ed      	uxtb	r5, r5
 8011194:	00c0      	lsls	r0, r0, #3
 8011196:	fb18 f806 	smulbb	r8, r8, r6
 801119a:	fb15 f506 	smulbb	r5, r5, r6
 801119e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80111a2:	b2c0      	uxtb	r0, r0
 80111a4:	fa1f fc8c 	uxth.w	ip, ip
 80111a8:	fb07 870b 	mla	r7, r7, fp, r8
 80111ac:	fb00 500b 	mla	r0, r0, fp, r5
 80111b0:	b280      	uxth	r0, r0
 80111b2:	b2bf      	uxth	r7, r7
 80111b4:	f10c 0501 	add.w	r5, ip, #1
 80111b8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80111bc:	f107 0801 	add.w	r8, r7, #1
 80111c0:	1c45      	adds	r5, r0, #1
 80111c2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80111c6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80111ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111d0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80111d4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80111d8:	ea45 0c0c 	orr.w	ip, r5, ip
 80111dc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80111e0:	4401      	add	r1, r0
 80111e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80111e4:	ea4c 0c08 	orr.w	ip, ip, r8
 80111e8:	f82a cb02 	strh.w	ip, [sl], #2
 80111ec:	4402      	add	r2, r0
 80111ee:	f109 39ff 	add.w	r9, r9, #4294967295
 80111f2:	e7af      	b.n	8011154 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80111f4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80111f8:	f04f 0800 	mov.w	r8, #0
 80111fc:	eb03 0008 	add.w	r0, r3, r8
 8011200:	2800      	cmp	r0, #0
 8011202:	dc41      	bgt.n	8011288 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011204:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011208:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801120c:	9b00      	ldr	r3, [sp, #0]
 801120e:	2b00      	cmp	r3, #0
 8011210:	f340 8095 	ble.w	801133e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011214:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011218:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801121c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011222:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011226:	ee31 1a05 	vadd.f32	s2, s2, s10
 801122a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801122e:	eef0 6a62 	vmov.f32	s13, s5
 8011232:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011236:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801123a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801123e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011242:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011246:	eef0 6a43 	vmov.f32	s13, s6
 801124a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801124e:	ee12 2a90 	vmov	r2, s5
 8011252:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011256:	fb92 f3f3 	sdiv	r3, r2, r3
 801125a:	ee13 2a10 	vmov	r2, s6
 801125e:	9311      	str	r3, [sp, #68]	; 0x44
 8011260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011262:	fb92 f3f3 	sdiv	r3, r2, r3
 8011266:	9312      	str	r3, [sp, #72]	; 0x48
 8011268:	9b00      	ldr	r3, [sp, #0]
 801126a:	9a03      	ldr	r2, [sp, #12]
 801126c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011270:	3b01      	subs	r3, #1
 8011272:	9300      	str	r3, [sp, #0]
 8011274:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801127a:	eeb0 3a67 	vmov.f32	s6, s15
 801127e:	bf08      	it	eq
 8011280:	4613      	moveq	r3, r2
 8011282:	eef0 2a47 	vmov.f32	s5, s14
 8011286:	e72f      	b.n	80110e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011288:	140f      	asrs	r7, r1, #16
 801128a:	d451      	bmi.n	8011330 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801128c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011290:	42bd      	cmp	r5, r7
 8011292:	dd4d      	ble.n	8011330 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011294:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011298:	d44a      	bmi.n	8011330 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801129a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801129e:	4560      	cmp	r0, ip
 80112a0:	dd46      	ble.n	8011330 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80112a2:	b22d      	sxth	r5, r5
 80112a4:	fb0c 7505 	mla	r5, ip, r5, r7
 80112a8:	9802      	ldr	r0, [sp, #8]
 80112aa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80112ae:	f06f 0501 	mvn.w	r5, #1
 80112b2:	fb05 fb08 	mul.w	fp, r5, r8
 80112b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80112ba:	f834 500b 	ldrh.w	r5, [r4, fp]
 80112be:	122f      	asrs	r7, r5, #8
 80112c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80112c4:	fb17 f706 	smulbb	r7, r7, r6
 80112c8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80112cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112d0:	00ed      	lsls	r5, r5, #3
 80112d2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80112d6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80112da:	10c7      	asrs	r7, r0, #3
 80112dc:	b2ed      	uxtb	r5, r5
 80112de:	00c0      	lsls	r0, r0, #3
 80112e0:	fb19 f906 	smulbb	r9, r9, r6
 80112e4:	fb15 f506 	smulbb	r5, r5, r6
 80112e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80112ec:	b2c0      	uxtb	r0, r0
 80112ee:	fa1f fc8c 	uxth.w	ip, ip
 80112f2:	fb07 970a 	mla	r7, r7, sl, r9
 80112f6:	fb00 500a 	mla	r0, r0, sl, r5
 80112fa:	b2bf      	uxth	r7, r7
 80112fc:	b280      	uxth	r0, r0
 80112fe:	f10c 0501 	add.w	r5, ip, #1
 8011302:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011306:	f107 0901 	add.w	r9, r7, #1
 801130a:	1c45      	adds	r5, r0, #1
 801130c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011310:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011314:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011318:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801131c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011320:	ea45 0c0c 	orr.w	ip, r5, ip
 8011324:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011328:	ea4c 0c09 	orr.w	ip, ip, r9
 801132c:	f824 c00b 	strh.w	ip, [r4, fp]
 8011330:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011332:	4401      	add	r1, r0
 8011334:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011336:	f108 38ff 	add.w	r8, r8, #4294967295
 801133a:	4402      	add	r2, r0
 801133c:	e75e      	b.n	80111fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801133e:	b005      	add	sp, #20
 8011340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011344 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011348:	b085      	sub	sp, #20
 801134a:	4693      	mov	fp, r2
 801134c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801134e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011350:	6870      	ldr	r0, [r6, #4]
 8011352:	9101      	str	r1, [sp, #4]
 8011354:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011358:	fb00 2404 	mla	r4, r0, r4, r2
 801135c:	6832      	ldr	r2, [r6, #0]
 801135e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011362:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011366:	682a      	ldr	r2, [r5, #0]
 8011368:	9202      	str	r2, [sp, #8]
 801136a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801136e:	9a01      	ldr	r2, [sp, #4]
 8011370:	2a00      	cmp	r2, #0
 8011372:	dc03      	bgt.n	801137c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011374:	f1bb 0f00 	cmp.w	fp, #0
 8011378:	f340 809a 	ble.w	80114b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801137c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801137e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011382:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011386:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801138a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801138c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011390:	2b00      	cmp	r3, #0
 8011392:	dd0c      	ble.n	80113ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011394:	1406      	asrs	r6, r0, #16
 8011396:	d405      	bmi.n	80113a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011398:	454e      	cmp	r6, r9
 801139a:	da03      	bge.n	80113a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801139c:	1416      	asrs	r6, r2, #16
 801139e:	d401      	bmi.n	80113a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80113a0:	4546      	cmp	r6, r8
 80113a2:	db05      	blt.n	80113b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80113a4:	4470      	add	r0, lr
 80113a6:	4462      	add	r2, ip
 80113a8:	3b01      	subs	r3, #1
 80113aa:	3402      	adds	r4, #2
 80113ac:	e7f0      	b.n	8011390 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80113ae:	d00f      	beq.n	80113d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80113b0:	1e5e      	subs	r6, r3, #1
 80113b2:	fb0e 0706 	mla	r7, lr, r6, r0
 80113b6:	143f      	asrs	r7, r7, #16
 80113b8:	d541      	bpl.n	801143e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80113ba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80113be:	4698      	mov	r8, r3
 80113c0:	9603      	str	r6, [sp, #12]
 80113c2:	f1b8 0f00 	cmp.w	r8, #0
 80113c6:	dc56      	bgt.n	8011476 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80113c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113d0:	9b01      	ldr	r3, [sp, #4]
 80113d2:	2b00      	cmp	r3, #0
 80113d4:	dd6c      	ble.n	80114b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80113d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113ec:	eeb0 6a62 	vmov.f32	s12, s5
 80113f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011400:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011404:	eeb0 6a43 	vmov.f32	s12, s6
 8011408:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801140c:	ee12 2a90 	vmov	r2, s5
 8011410:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011414:	fb92 fef3 	sdiv	lr, r2, r3
 8011418:	ee13 2a10 	vmov	r2, s6
 801141c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011420:	9b01      	ldr	r3, [sp, #4]
 8011422:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011426:	3b01      	subs	r3, #1
 8011428:	9301      	str	r3, [sp, #4]
 801142a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801142e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011430:	eeb0 3a67 	vmov.f32	s6, s15
 8011434:	bf08      	it	eq
 8011436:	465b      	moveq	r3, fp
 8011438:	eef0 2a47 	vmov.f32	s5, s14
 801143c:	e797      	b.n	801136e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801143e:	454f      	cmp	r7, r9
 8011440:	dabb      	bge.n	80113ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011442:	fb0c 2606 	mla	r6, ip, r6, r2
 8011446:	1436      	asrs	r6, r6, #16
 8011448:	d4b7      	bmi.n	80113ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801144a:	4546      	cmp	r6, r8
 801144c:	dab5      	bge.n	80113ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801144e:	461e      	mov	r6, r3
 8011450:	46a0      	mov	r8, r4
 8011452:	2e00      	cmp	r6, #0
 8011454:	ddb8      	ble.n	80113c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011456:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801145a:	9902      	ldr	r1, [sp, #8]
 801145c:	1417      	asrs	r7, r2, #16
 801145e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011462:	fb0a 9707 	mla	r7, sl, r7, r9
 8011466:	4470      	add	r0, lr
 8011468:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801146c:	f828 7b02 	strh.w	r7, [r8], #2
 8011470:	4462      	add	r2, ip
 8011472:	3e01      	subs	r6, #1
 8011474:	e7ed      	b.n	8011452 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8011476:	ea5f 4920 	movs.w	r9, r0, asr #16
 801147a:	d414      	bmi.n	80114a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801147c:	68ae      	ldr	r6, [r5, #8]
 801147e:	454e      	cmp	r6, r9
 8011480:	dd11      	ble.n	80114a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011482:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011486:	d40e      	bmi.n	80114a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011488:	68ef      	ldr	r7, [r5, #12]
 801148a:	4557      	cmp	r7, sl
 801148c:	dd0b      	ble.n	80114a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801148e:	b236      	sxth	r6, r6
 8011490:	fb0a 9606 	mla	r6, sl, r6, r9
 8011494:	9f02      	ldr	r7, [sp, #8]
 8011496:	f06f 0101 	mvn.w	r1, #1
 801149a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801149e:	fb01 f608 	mul.w	r6, r1, r8
 80114a2:	9903      	ldr	r1, [sp, #12]
 80114a4:	538f      	strh	r7, [r1, r6]
 80114a6:	4470      	add	r0, lr
 80114a8:	4462      	add	r2, ip
 80114aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80114ae:	e788      	b.n	80113c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80114b0:	b005      	add	sp, #20
 80114b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080114b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80114b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114ba:	b085      	sub	sp, #20
 80114bc:	468b      	mov	fp, r1
 80114be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80114c0:	9202      	str	r2, [sp, #8]
 80114c2:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80114c6:	9203      	str	r2, [sp, #12]
 80114c8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80114cc:	6841      	ldr	r1, [r0, #4]
 80114ce:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80114d2:	fb01 2404 	mla	r4, r1, r4, r2
 80114d6:	6802      	ldr	r2, [r0, #0]
 80114d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80114dc:	f8d8 2000 	ldr.w	r2, [r8]
 80114e0:	9200      	str	r2, [sp, #0]
 80114e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114e6:	f1bb 0f00 	cmp.w	fp, #0
 80114ea:	dc03      	bgt.n	80114f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80114ec:	9a02      	ldr	r2, [sp, #8]
 80114ee:	2a00      	cmp	r2, #0
 80114f0:	f340 8134 	ble.w	801175c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80114f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80114f6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80114fa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80114fe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011502:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011504:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011508:	2b00      	cmp	r3, #0
 801150a:	dd0e      	ble.n	801152a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801150c:	1402      	asrs	r2, r0, #16
 801150e:	d405      	bmi.n	801151c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011510:	42ba      	cmp	r2, r7
 8011512:	da03      	bge.n	801151c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011514:	140a      	asrs	r2, r1, #16
 8011516:	d401      	bmi.n	801151c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011518:	42b2      	cmp	r2, r6
 801151a:	db07      	blt.n	801152c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801151c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801151e:	4410      	add	r0, r2
 8011520:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011522:	3b01      	subs	r3, #1
 8011524:	4411      	add	r1, r2
 8011526:	3402      	adds	r4, #2
 8011528:	e7ee      	b.n	8011508 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801152a:	d019      	beq.n	8011560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801152c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801152e:	1e5a      	subs	r2, r3, #1
 8011530:	fb05 0502 	mla	r5, r5, r2, r0
 8011534:	142d      	asrs	r5, r5, #16
 8011536:	d409      	bmi.n	801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011538:	42bd      	cmp	r5, r7
 801153a:	da07      	bge.n	801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801153c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801153e:	fb05 1202 	mla	r2, r5, r2, r1
 8011542:	1412      	asrs	r2, r2, #16
 8011544:	d402      	bmi.n	801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8011546:	42b2      	cmp	r2, r6
 8011548:	f2c0 80aa 	blt.w	80116a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801154c:	f04f 0c00 	mov.w	ip, #0
 8011550:	eb03 020c 	add.w	r2, r3, ip
 8011554:	2a00      	cmp	r2, #0
 8011556:	dc3e      	bgt.n	80115d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8011558:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801155c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011560:	f1bb 0f00 	cmp.w	fp, #0
 8011564:	f340 80fa 	ble.w	801175c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011568:	ee30 0a04 	vadd.f32	s0, s0, s8
 801156c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011570:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011574:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011576:	f1bb 0b01 	subs.w	fp, fp, #1
 801157a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801157e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011582:	eeb0 6a62 	vmov.f32	s12, s5
 8011586:	ee61 7a27 	vmul.f32	s15, s2, s15
 801158a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801158e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011592:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011596:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801159a:	eeb0 6a43 	vmov.f32	s12, s6
 801159e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80115a2:	ee12 2a90 	vmov	r2, s5
 80115a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80115aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80115ae:	ee13 2a10 	vmov	r2, s6
 80115b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115b6:	9311      	str	r3, [sp, #68]	; 0x44
 80115b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80115be:	9a02      	ldr	r2, [sp, #8]
 80115c0:	9312      	str	r3, [sp, #72]	; 0x48
 80115c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80115c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115c8:	eeb0 3a67 	vmov.f32	s6, s15
 80115cc:	bf08      	it	eq
 80115ce:	4613      	moveq	r3, r2
 80115d0:	eef0 2a47 	vmov.f32	s5, s14
 80115d4:	e787      	b.n	80114e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80115d6:	1406      	asrs	r6, r0, #16
 80115d8:	d45b      	bmi.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115da:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80115de:	42b5      	cmp	r5, r6
 80115e0:	dd57      	ble.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115e2:	140f      	asrs	r7, r1, #16
 80115e4:	d455      	bmi.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115e6:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80115ea:	42ba      	cmp	r2, r7
 80115ec:	dd51      	ble.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115ee:	b22d      	sxth	r5, r5
 80115f0:	fb07 6505 	mla	r5, r7, r5, r6
 80115f4:	9a00      	ldr	r2, [sp, #0]
 80115f6:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80115fa:	0e2e      	lsrs	r6, r5, #24
 80115fc:	d049      	beq.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80115fe:	f06f 0201 	mvn.w	r2, #1
 8011602:	fb02 f20c 	mul.w	r2, r2, ip
 8011606:	9201      	str	r2, [sp, #4]
 8011608:	f834 e002 	ldrh.w	lr, [r4, r2]
 801160c:	9a03      	ldr	r2, [sp, #12]
 801160e:	4356      	muls	r6, r2
 8011610:	1c72      	adds	r2, r6, #1
 8011612:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011616:	1212      	asrs	r2, r2, #8
 8011618:	fa1f f982 	uxth.w	r9, r2
 801161c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011620:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011624:	43d2      	mvns	r2, r2
 8011626:	b2d2      	uxtb	r2, r2
 8011628:	fb16 f609 	smulbb	r6, r6, r9
 801162c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011630:	fb07 6702 	mla	r7, r7, r2, r6
 8011634:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011638:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801163c:	b2ed      	uxtb	r5, r5
 801163e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011642:	fa5f fe8e 	uxtb.w	lr, lr
 8011646:	fb15 f509 	smulbb	r5, r5, r9
 801164a:	fb0e 5502 	mla	r5, lr, r2, r5
 801164e:	b2bf      	uxth	r7, r7
 8011650:	fb1a fa09 	smulbb	sl, sl, r9
 8011654:	b2ad      	uxth	r5, r5
 8011656:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801165a:	fb06 a602 	mla	r6, r6, r2, sl
 801165e:	1c7a      	adds	r2, r7, #1
 8011660:	f105 0a01 	add.w	sl, r5, #1
 8011664:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011668:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801166c:	b2b6      	uxth	r6, r6
 801166e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011672:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011676:	ea4a 0707 	orr.w	r7, sl, r7
 801167a:	f106 0a01 	add.w	sl, r6, #1
 801167e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011682:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011686:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801168a:	9a01      	ldr	r2, [sp, #4]
 801168c:	ea47 070a 	orr.w	r7, r7, sl
 8011690:	52a7      	strh	r7, [r4, r2]
 8011692:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011694:	4410      	add	r0, r2
 8011696:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011698:	f10c 3cff 	add.w	ip, ip, #4294967295
 801169c:	4411      	add	r1, r2
 801169e:	e757      	b.n	8011550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80116a0:	f04f 0e00 	mov.w	lr, #0
 80116a4:	eba3 020e 	sub.w	r2, r3, lr
 80116a8:	2a00      	cmp	r2, #0
 80116aa:	f77f af55 	ble.w	8011558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80116ae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80116b2:	1405      	asrs	r5, r0, #16
 80116b4:	140a      	asrs	r2, r1, #16
 80116b6:	fb06 5202 	mla	r2, r6, r2, r5
 80116ba:	9d00      	ldr	r5, [sp, #0]
 80116bc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80116c0:	0e2e      	lsrs	r6, r5, #24
 80116c2:	d044      	beq.n	801174e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80116c4:	9a03      	ldr	r2, [sp, #12]
 80116c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80116ca:	4356      	muls	r6, r2
 80116cc:	1c72      	adds	r2, r6, #1
 80116ce:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80116d2:	1212      	asrs	r2, r2, #8
 80116d4:	fa1f f982 	uxth.w	r9, r2
 80116d8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80116dc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80116e0:	43d2      	mvns	r2, r2
 80116e2:	b2d2      	uxtb	r2, r2
 80116e4:	fb16 f609 	smulbb	r6, r6, r9
 80116e8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116ec:	fb07 6702 	mla	r7, r7, r2, r6
 80116f0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80116f4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80116f8:	b2ed      	uxtb	r5, r5
 80116fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80116fe:	fa5f fc8c 	uxtb.w	ip, ip
 8011702:	fb15 f509 	smulbb	r5, r5, r9
 8011706:	fb0c 5502 	mla	r5, ip, r2, r5
 801170a:	b2bf      	uxth	r7, r7
 801170c:	fb1a fa09 	smulbb	sl, sl, r9
 8011710:	b2ad      	uxth	r5, r5
 8011712:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011716:	fb06 a602 	mla	r6, r6, r2, sl
 801171a:	1c7a      	adds	r2, r7, #1
 801171c:	f105 0a01 	add.w	sl, r5, #1
 8011720:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011724:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011728:	b2b6      	uxth	r6, r6
 801172a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801172e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011732:	ea4a 0707 	orr.w	r7, sl, r7
 8011736:	f106 0a01 	add.w	sl, r6, #1
 801173a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801173e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011742:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011746:	ea47 070a 	orr.w	r7, r7, sl
 801174a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801174e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011750:	4410      	add	r0, r2
 8011752:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011754:	f10e 0e01 	add.w	lr, lr, #1
 8011758:	4411      	add	r1, r2
 801175a:	e7a3      	b.n	80116a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801175c:	b005      	add	sp, #20
 801175e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011764 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011768:	b085      	sub	sp, #20
 801176a:	468b      	mov	fp, r1
 801176c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801176e:	9203      	str	r2, [sp, #12]
 8011770:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011774:	6861      	ldr	r1, [r4, #4]
 8011776:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 801177a:	fb01 2000 	mla	r0, r1, r0, r2
 801177e:	6822      	ldr	r2, [r4, #0]
 8011780:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011784:	f8d9 2000 	ldr.w	r2, [r9]
 8011788:	9200      	str	r2, [sp, #0]
 801178a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801178e:	f1bb 0f00 	cmp.w	fp, #0
 8011792:	dc03      	bgt.n	801179c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011794:	9a03      	ldr	r2, [sp, #12]
 8011796:	2a00      	cmp	r2, #0
 8011798:	f340 814a 	ble.w	8011a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801179c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801179e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80117a2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80117a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80117aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80117ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80117b0:	2b00      	cmp	r3, #0
 80117b2:	dd0e      	ble.n	80117d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80117b4:	140c      	asrs	r4, r1, #16
 80117b6:	d405      	bmi.n	80117c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117b8:	42bc      	cmp	r4, r7
 80117ba:	da03      	bge.n	80117c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117bc:	1414      	asrs	r4, r2, #16
 80117be:	d401      	bmi.n	80117c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80117c0:	42b4      	cmp	r4, r6
 80117c2:	db07      	blt.n	80117d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80117c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80117c6:	4421      	add	r1, r4
 80117c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80117ca:	3b01      	subs	r3, #1
 80117cc:	4422      	add	r2, r4
 80117ce:	3002      	adds	r0, #2
 80117d0:	e7ee      	b.n	80117b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80117d2:	d017      	beq.n	8011804 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80117d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80117d6:	1e5c      	subs	r4, r3, #1
 80117d8:	fb05 1504 	mla	r5, r5, r4, r1
 80117dc:	142d      	asrs	r5, r5, #16
 80117de:	d409      	bmi.n	80117f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117e0:	42bd      	cmp	r5, r7
 80117e2:	da07      	bge.n	80117f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80117e6:	fb05 2404 	mla	r4, r5, r4, r2
 80117ea:	1424      	asrs	r4, r4, #16
 80117ec:	d402      	bmi.n	80117f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80117ee:	42b4      	cmp	r4, r6
 80117f0:	f2c0 80ba 	blt.w	8011968 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80117f4:	2700      	movs	r7, #0
 80117f6:	19dc      	adds	r4, r3, r7
 80117f8:	2c00      	cmp	r4, #0
 80117fa:	dc3e      	bgt.n	801187a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80117fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011800:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011804:	f1bb 0f00 	cmp.w	fp, #0
 8011808:	f340 8112 	ble.w	8011a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801180c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011810:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011814:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011818:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801181a:	f1bb 0b01 	subs.w	fp, fp, #1
 801181e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011822:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011826:	eeb0 6a62 	vmov.f32	s12, s5
 801182a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801182e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011832:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011836:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801183a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801183e:	eeb0 6a43 	vmov.f32	s12, s6
 8011842:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011846:	ee12 2a90 	vmov	r2, s5
 801184a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801184e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011852:	ee13 2a10 	vmov	r2, s6
 8011856:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801185a:	9311      	str	r3, [sp, #68]	; 0x44
 801185c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801185e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011862:	9a03      	ldr	r2, [sp, #12]
 8011864:	9312      	str	r3, [sp, #72]	; 0x48
 8011866:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801186a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801186c:	eeb0 3a67 	vmov.f32	s6, s15
 8011870:	bf08      	it	eq
 8011872:	4613      	moveq	r3, r2
 8011874:	eef0 2a47 	vmov.f32	s5, s14
 8011878:	e789      	b.n	801178e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801187a:	140e      	asrs	r6, r1, #16
 801187c:	d45f      	bmi.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801187e:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8011882:	42b5      	cmp	r5, r6
 8011884:	dd5b      	ble.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8011886:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801188a:	d458      	bmi.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801188c:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8011890:	4564      	cmp	r4, ip
 8011892:	dd54      	ble.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8011894:	b22d      	sxth	r5, r5
 8011896:	fb0c 6505 	mla	r5, ip, r5, r6
 801189a:	9c00      	ldr	r4, [sp, #0]
 801189c:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 80118a0:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 80118a4:	d04b      	beq.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80118a6:	fa5f f48e 	uxtb.w	r4, lr
 80118aa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80118ae:	9401      	str	r4, [sp, #4]
 80118b0:	ea4f 461c 	mov.w	r6, ip, lsr #16
 80118b4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80118b8:	f06f 0401 	mvn.w	r4, #1
 80118bc:	fa5f fc8c 	uxtb.w	ip, ip
 80118c0:	d043      	beq.n	801194a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80118c2:	437c      	muls	r4, r7
 80118c4:	9402      	str	r4, [sp, #8]
 80118c6:	f830 8004 	ldrh.w	r8, [r0, r4]
 80118ca:	9c01      	ldr	r4, [sp, #4]
 80118cc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80118d0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80118d4:	43e4      	mvns	r4, r4
 80118d6:	b2f6      	uxtb	r6, r6
 80118d8:	b2e4      	uxtb	r4, r4
 80118da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80118de:	fb16 f60a 	smulbb	r6, r6, sl
 80118e2:	fb0e 6604 	mla	r6, lr, r4, r6
 80118e6:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80118ea:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80118ee:	fa5f f888 	uxtb.w	r8, r8
 80118f2:	fb1c fc0a 	smulbb	ip, ip, sl
 80118f6:	fb08 cc04 	mla	ip, r8, r4, ip
 80118fa:	b2ed      	uxtb	r5, r5
 80118fc:	b2b6      	uxth	r6, r6
 80118fe:	fb15 f50a 	smulbb	r5, r5, sl
 8011902:	fa1f fc8c 	uxth.w	ip, ip
 8011906:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801190a:	fb0e 5e04 	mla	lr, lr, r4, r5
 801190e:	1c74      	adds	r4, r6, #1
 8011910:	f10c 0501 	add.w	r5, ip, #1
 8011914:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8011918:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 801191c:	fa1f fe8e 	uxth.w	lr, lr
 8011920:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011924:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011928:	432e      	orrs	r6, r5
 801192a:	f10e 0501 	add.w	r5, lr, #1
 801192e:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8011932:	096d      	lsrs	r5, r5, #5
 8011934:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011938:	9c02      	ldr	r4, [sp, #8]
 801193a:	432e      	orrs	r6, r5
 801193c:	5306      	strh	r6, [r0, r4]
 801193e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011940:	4421      	add	r1, r4
 8011942:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011944:	3f01      	subs	r7, #1
 8011946:	4422      	add	r2, r4
 8011948:	e755      	b.n	80117f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801194a:	fb04 fe07 	mul.w	lr, r4, r7
 801194e:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 8011952:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 8011956:	00ed      	lsls	r5, r5, #3
 8011958:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 801195c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011960:	432e      	orrs	r6, r5
 8011962:	f820 600e 	strh.w	r6, [r0, lr]
 8011966:	e7ea      	b.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8011968:	f04f 0800 	mov.w	r8, #0
 801196c:	eba3 0408 	sub.w	r4, r3, r8
 8011970:	2c00      	cmp	r4, #0
 8011972:	f77f af43 	ble.w	80117fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011976:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801197a:	140d      	asrs	r5, r1, #16
 801197c:	1414      	asrs	r4, r2, #16
 801197e:	fb06 5404 	mla	r4, r6, r4, r5
 8011982:	9d00      	ldr	r5, [sp, #0]
 8011984:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 8011988:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 801198c:	d042      	beq.n	8011a14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801198e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8011992:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8011996:	ea4f 2617 	mov.w	r6, r7, lsr #8
 801199a:	fa5f f48c 	uxtb.w	r4, ip
 801199e:	b2ff      	uxtb	r7, r7
 80119a0:	d03f      	beq.n	8011a22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80119a2:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 80119a6:	fa1f fa84 	uxth.w	sl, r4
 80119aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80119ae:	43e4      	mvns	r4, r4
 80119b0:	b2ed      	uxtb	r5, r5
 80119b2:	b2e4      	uxtb	r4, r4
 80119b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80119b8:	fb15 f50a 	smulbb	r5, r5, sl
 80119bc:	fb0c 5504 	mla	r5, ip, r4, r5
 80119c0:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80119c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80119c8:	fa5f fe8e 	uxtb.w	lr, lr
 80119cc:	fb17 f70a 	smulbb	r7, r7, sl
 80119d0:	fb0e 7704 	mla	r7, lr, r4, r7
 80119d4:	b2f6      	uxtb	r6, r6
 80119d6:	b2ad      	uxth	r5, r5
 80119d8:	fb16 f60a 	smulbb	r6, r6, sl
 80119dc:	b2bf      	uxth	r7, r7
 80119de:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80119e2:	fb0c 6c04 	mla	ip, ip, r4, r6
 80119e6:	1c6c      	adds	r4, r5, #1
 80119e8:	1c7e      	adds	r6, r7, #1
 80119ea:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80119ee:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80119f2:	fa1f fc8c 	uxth.w	ip, ip
 80119f6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119fa:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80119fe:	4335      	orrs	r5, r6
 8011a00:	f10c 0601 	add.w	r6, ip, #1
 8011a04:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011a08:	0976      	lsrs	r6, r6, #5
 8011a0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011a0e:	4335      	orrs	r5, r6
 8011a10:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 8011a14:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011a16:	4421      	add	r1, r4
 8011a18:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011a1a:	f108 0801 	add.w	r8, r8, #1
 8011a1e:	4422      	add	r2, r4
 8011a20:	e7a4      	b.n	801196c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011a22:	4c05      	ldr	r4, [pc, #20]	; (8011a38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 8011a24:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 8011a28:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8011a2c:	00f6      	lsls	r6, r6, #3
 8011a2e:	e7ec      	b.n	8011a0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8011a30:	b005      	add	sp, #20
 8011a32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a36:	bf00      	nop
 8011a38:	fffff800 	.word	0xfffff800

08011a3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a40:	b087      	sub	sp, #28
 8011a42:	468b      	mov	fp, r1
 8011a44:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011a46:	9204      	str	r2, [sp, #16]
 8011a48:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011a4c:	9205      	str	r2, [sp, #20]
 8011a4e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011a52:	6841      	ldr	r1, [r0, #4]
 8011a54:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011a58:	fb01 2404 	mla	r4, r1, r4, r2
 8011a5c:	6802      	ldr	r2, [r0, #0]
 8011a5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a62:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011a66:	3201      	adds	r2, #1
 8011a68:	f022 0201 	bic.w	r2, r2, #1
 8011a6c:	9201      	str	r2, [sp, #4]
 8011a6e:	f8d8 2000 	ldr.w	r2, [r8]
 8011a72:	9202      	str	r2, [sp, #8]
 8011a74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a78:	f1bb 0f00 	cmp.w	fp, #0
 8011a7c:	dc03      	bgt.n	8011a86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011a7e:	9a04      	ldr	r2, [sp, #16]
 8011a80:	2a00      	cmp	r2, #0
 8011a82:	f340 8146 	ble.w	8011d12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011a88:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011a8c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011a90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011a94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011a96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a9a:	2b00      	cmp	r3, #0
 8011a9c:	dd0e      	ble.n	8011abc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011a9e:	1402      	asrs	r2, r0, #16
 8011aa0:	d405      	bmi.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aa2:	42ba      	cmp	r2, r7
 8011aa4:	da03      	bge.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aa6:	140a      	asrs	r2, r1, #16
 8011aa8:	d401      	bmi.n	8011aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011aaa:	42b2      	cmp	r2, r6
 8011aac:	db07      	blt.n	8011abe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011aae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ab0:	4410      	add	r0, r2
 8011ab2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ab4:	3b01      	subs	r3, #1
 8011ab6:	4411      	add	r1, r2
 8011ab8:	3402      	adds	r4, #2
 8011aba:	e7ee      	b.n	8011a9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011abc:	d017      	beq.n	8011aee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011abe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011ac0:	1e5a      	subs	r2, r3, #1
 8011ac2:	fb05 0502 	mla	r5, r5, r2, r0
 8011ac6:	142d      	asrs	r5, r5, #16
 8011ac8:	d409      	bmi.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011aca:	42bd      	cmp	r5, r7
 8011acc:	da07      	bge.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011ace:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011ad0:	fb05 1202 	mla	r2, r5, r2, r1
 8011ad4:	1412      	asrs	r2, r2, #16
 8011ad6:	d402      	bmi.n	8011ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011ad8:	42b2      	cmp	r2, r6
 8011ada:	f2c0 80b3 	blt.w	8011c44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011ade:	2700      	movs	r7, #0
 8011ae0:	19da      	adds	r2, r3, r7
 8011ae2:	2a00      	cmp	r2, #0
 8011ae4:	dc3e      	bgt.n	8011b64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011ae6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011aea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011aee:	f1bb 0f00 	cmp.w	fp, #0
 8011af2:	f340 810e 	ble.w	8011d12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011af6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011afa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011afe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b04:	f1bb 0b01 	subs.w	fp, fp, #1
 8011b08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b10:	eeb0 6a62 	vmov.f32	s12, s5
 8011b14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011b24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b28:	eeb0 6a43 	vmov.f32	s12, s6
 8011b2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b30:	ee12 2a90 	vmov	r2, s5
 8011b34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b38:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b3c:	ee13 2a10 	vmov	r2, s6
 8011b40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b44:	9313      	str	r3, [sp, #76]	; 0x4c
 8011b46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b48:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b4c:	9a04      	ldr	r2, [sp, #16]
 8011b4e:	9314      	str	r3, [sp, #80]	; 0x50
 8011b50:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b56:	eeb0 3a67 	vmov.f32	s6, s15
 8011b5a:	bf08      	it	eq
 8011b5c:	4613      	moveq	r3, r2
 8011b5e:	eef0 2a47 	vmov.f32	s5, s14
 8011b62:	e789      	b.n	8011a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011b64:	1405      	asrs	r5, r0, #16
 8011b66:	d467      	bmi.n	8011c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011b68:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011b6c:	42aa      	cmp	r2, r5
 8011b6e:	dd63      	ble.n	8011c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011b70:	140e      	asrs	r6, r1, #16
 8011b72:	d461      	bmi.n	8011c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011b74:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011b78:	42b2      	cmp	r2, r6
 8011b7a:	dd5d      	ble.n	8011c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011b7c:	9a01      	ldr	r2, [sp, #4]
 8011b7e:	fb06 5502 	mla	r5, r6, r2, r5
 8011b82:	086a      	lsrs	r2, r5, #1
 8011b84:	9e02      	ldr	r6, [sp, #8]
 8011b86:	5cb2      	ldrb	r2, [r6, r2]
 8011b88:	07ee      	lsls	r6, r5, #31
 8011b8a:	bf54      	ite	pl
 8011b8c:	f002 020f 	andpl.w	r2, r2, #15
 8011b90:	1112      	asrmi	r2, r2, #4
 8011b92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011b96:	b2d2      	uxtb	r2, r2
 8011b98:	2a00      	cmp	r2, #0
 8011b9a:	d04d      	beq.n	8011c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8011b9c:	4d5e      	ldr	r5, [pc, #376]	; (8011d18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011b9e:	f8d5 c000 	ldr.w	ip, [r5]
 8011ba2:	f06f 0501 	mvn.w	r5, #1
 8011ba6:	437d      	muls	r5, r7
 8011ba8:	9503      	str	r5, [sp, #12]
 8011baa:	f834 e005 	ldrh.w	lr, [r4, r5]
 8011bae:	9d05      	ldr	r5, [sp, #20]
 8011bb0:	436a      	muls	r2, r5
 8011bb2:	1c55      	adds	r5, r2, #1
 8011bb4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011bb8:	1212      	asrs	r2, r2, #8
 8011bba:	fa1f f982 	uxth.w	r9, r2
 8011bbe:	ea4f 262e 	mov.w	r6, lr, asr #8
 8011bc2:	f3cc 4507 	ubfx	r5, ip, #16, #8
 8011bc6:	43d2      	mvns	r2, r2
 8011bc8:	b2d2      	uxtb	r2, r2
 8011bca:	fb15 f509 	smulbb	r5, r5, r9
 8011bce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011bd2:	fb06 5602 	mla	r6, r6, r2, r5
 8011bd6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8011bda:	ea4f 05ee 	mov.w	r5, lr, asr #3
 8011bde:	fa5f fc8c 	uxtb.w	ip, ip
 8011be2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011be6:	fa5f fe8e 	uxtb.w	lr, lr
 8011bea:	fb1c fc09 	smulbb	ip, ip, r9
 8011bee:	fb0e cc02 	mla	ip, lr, r2, ip
 8011bf2:	b2b6      	uxth	r6, r6
 8011bf4:	fb1a fa09 	smulbb	sl, sl, r9
 8011bf8:	fa1f fc8c 	uxth.w	ip, ip
 8011bfc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011c00:	fb05 a502 	mla	r5, r5, r2, sl
 8011c04:	1c72      	adds	r2, r6, #1
 8011c06:	f10c 0a01 	add.w	sl, ip, #1
 8011c0a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011c0e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8011c12:	b2ad      	uxth	r5, r5
 8011c14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011c1c:	ea4a 0606 	orr.w	r6, sl, r6
 8011c20:	f105 0a01 	add.w	sl, r5, #1
 8011c24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011c28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c2c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c30:	9a03      	ldr	r2, [sp, #12]
 8011c32:	ea46 060a 	orr.w	r6, r6, sl
 8011c36:	52a6      	strh	r6, [r4, r2]
 8011c38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c3a:	4410      	add	r0, r2
 8011c3c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011c3e:	3f01      	subs	r7, #1
 8011c40:	4411      	add	r1, r2
 8011c42:	e74d      	b.n	8011ae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011c44:	f04f 0e00 	mov.w	lr, #0
 8011c48:	eba3 020e 	sub.w	r2, r3, lr
 8011c4c:	2a00      	cmp	r2, #0
 8011c4e:	f77f af4a 	ble.w	8011ae6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011c52:	9e01      	ldr	r6, [sp, #4]
 8011c54:	1402      	asrs	r2, r0, #16
 8011c56:	140d      	asrs	r5, r1, #16
 8011c58:	fb06 2505 	mla	r5, r6, r5, r2
 8011c5c:	086a      	lsrs	r2, r5, #1
 8011c5e:	9e02      	ldr	r6, [sp, #8]
 8011c60:	5cb2      	ldrb	r2, [r6, r2]
 8011c62:	07ed      	lsls	r5, r5, #31
 8011c64:	bf54      	ite	pl
 8011c66:	f002 020f 	andpl.w	r2, r2, #15
 8011c6a:	1112      	asrmi	r2, r2, #4
 8011c6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011c70:	b2d2      	uxtb	r2, r2
 8011c72:	2a00      	cmp	r2, #0
 8011c74:	d046      	beq.n	8011d04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011c76:	4d28      	ldr	r5, [pc, #160]	; (8011d18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011c78:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c7c:	682f      	ldr	r7, [r5, #0]
 8011c7e:	9d05      	ldr	r5, [sp, #20]
 8011c80:	436a      	muls	r2, r5
 8011c82:	1c55      	adds	r5, r2, #1
 8011c84:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011c88:	1212      	asrs	r2, r2, #8
 8011c8a:	fa1f f982 	uxth.w	r9, r2
 8011c8e:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011c92:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8011c96:	43d2      	mvns	r2, r2
 8011c98:	b2d2      	uxtb	r2, r2
 8011c9a:	fb15 f509 	smulbb	r5, r5, r9
 8011c9e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011ca2:	fb06 5602 	mla	r6, r6, r2, r5
 8011ca6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8011caa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011cae:	b2ff      	uxtb	r7, r7
 8011cb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011cb4:	fa5f fc8c 	uxtb.w	ip, ip
 8011cb8:	fb17 f709 	smulbb	r7, r7, r9
 8011cbc:	fb0c 7702 	mla	r7, ip, r2, r7
 8011cc0:	b2b6      	uxth	r6, r6
 8011cc2:	fb1a fa09 	smulbb	sl, sl, r9
 8011cc6:	b2bf      	uxth	r7, r7
 8011cc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011ccc:	fb05 a502 	mla	r5, r5, r2, sl
 8011cd0:	1c72      	adds	r2, r6, #1
 8011cd2:	f107 0a01 	add.w	sl, r7, #1
 8011cd6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011cda:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011cde:	b2ad      	uxth	r5, r5
 8011ce0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ce4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011ce8:	ea4a 0606 	orr.w	r6, sl, r6
 8011cec:	f105 0a01 	add.w	sl, r5, #1
 8011cf0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011cf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011cf8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011cfc:	ea46 060a 	orr.w	r6, r6, sl
 8011d00:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8011d04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d06:	4410      	add	r0, r2
 8011d08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d0a:	f10e 0e01 	add.w	lr, lr, #1
 8011d0e:	4411      	add	r1, r2
 8011d10:	e79a      	b.n	8011c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8011d12:	b007      	add	sp, #28
 8011d14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d18:	2000a1a0 	.word	0x2000a1a0

08011d1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d20:	b087      	sub	sp, #28
 8011d22:	468b      	mov	fp, r1
 8011d24:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011d26:	9205      	str	r2, [sp, #20]
 8011d28:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d2c:	6841      	ldr	r1, [r0, #4]
 8011d2e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011d32:	fb01 2404 	mla	r4, r1, r4, r2
 8011d36:	6802      	ldr	r2, [r0, #0]
 8011d38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d3c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011d40:	3201      	adds	r2, #1
 8011d42:	f022 0201 	bic.w	r2, r2, #1
 8011d46:	9201      	str	r2, [sp, #4]
 8011d48:	f8d8 2000 	ldr.w	r2, [r8]
 8011d4c:	9202      	str	r2, [sp, #8]
 8011d4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d52:	f1bb 0f00 	cmp.w	fp, #0
 8011d56:	dc03      	bgt.n	8011d60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011d58:	9a05      	ldr	r2, [sp, #20]
 8011d5a:	2a00      	cmp	r2, #0
 8011d5c:	f340 8159 	ble.w	8012012 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8011d60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d62:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011d66:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011d6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d70:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d74:	2b00      	cmp	r3, #0
 8011d76:	dd0e      	ble.n	8011d96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011d78:	1402      	asrs	r2, r0, #16
 8011d7a:	d405      	bmi.n	8011d88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d7c:	42ba      	cmp	r2, r7
 8011d7e:	da03      	bge.n	8011d88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d80:	140a      	asrs	r2, r1, #16
 8011d82:	d401      	bmi.n	8011d88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011d84:	42b2      	cmp	r2, r6
 8011d86:	db07      	blt.n	8011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011d88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d8a:	4410      	add	r0, r2
 8011d8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d8e:	3b01      	subs	r3, #1
 8011d90:	4411      	add	r1, r2
 8011d92:	3402      	adds	r4, #2
 8011d94:	e7ee      	b.n	8011d74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011d96:	d017      	beq.n	8011dc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8011d98:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d9a:	1e5a      	subs	r2, r3, #1
 8011d9c:	fb05 0502 	mla	r5, r5, r2, r0
 8011da0:	142d      	asrs	r5, r5, #16
 8011da2:	d409      	bmi.n	8011db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011da4:	42bd      	cmp	r5, r7
 8011da6:	da07      	bge.n	8011db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011da8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011daa:	fb05 1202 	mla	r2, r5, r2, r1
 8011dae:	1412      	asrs	r2, r2, #16
 8011db0:	d402      	bmi.n	8011db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011db2:	42b2      	cmp	r2, r6
 8011db4:	f2c0 80c3 	blt.w	8011f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8011db8:	2700      	movs	r7, #0
 8011dba:	19da      	adds	r2, r3, r7
 8011dbc:	2a00      	cmp	r2, #0
 8011dbe:	dc3e      	bgt.n	8011e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8011dc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011dc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011dc8:	f1bb 0f00 	cmp.w	fp, #0
 8011dcc:	f340 8121 	ble.w	8012012 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8011dd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011dd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011dd8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ddc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dde:	f1bb 0b01 	subs.w	fp, fp, #1
 8011de2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011de6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dea:	eeb0 6a62 	vmov.f32	s12, s5
 8011dee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011df2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011df6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011dfa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011dfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e02:	eeb0 6a43 	vmov.f32	s12, s6
 8011e06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e0a:	ee12 2a90 	vmov	r2, s5
 8011e0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e16:	ee13 2a10 	vmov	r2, s6
 8011e1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e1e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e22:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e26:	9a05      	ldr	r2, [sp, #20]
 8011e28:	9314      	str	r3, [sp, #80]	; 0x50
 8011e2a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e30:	eeb0 3a67 	vmov.f32	s6, s15
 8011e34:	bf08      	it	eq
 8011e36:	4613      	moveq	r3, r2
 8011e38:	eef0 2a47 	vmov.f32	s5, s14
 8011e3c:	e789      	b.n	8011d52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011e3e:	1405      	asrs	r5, r0, #16
 8011e40:	d465      	bmi.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e42:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8011e46:	42aa      	cmp	r2, r5
 8011e48:	dd61      	ble.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e4a:	140e      	asrs	r6, r1, #16
 8011e4c:	d45f      	bmi.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e4e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011e52:	42b2      	cmp	r2, r6
 8011e54:	dd5b      	ble.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e56:	9a01      	ldr	r2, [sp, #4]
 8011e58:	fb06 5502 	mla	r5, r6, r2, r5
 8011e5c:	086a      	lsrs	r2, r5, #1
 8011e5e:	9e02      	ldr	r6, [sp, #8]
 8011e60:	5cb2      	ldrb	r2, [r6, r2]
 8011e62:	07ee      	lsls	r6, r5, #31
 8011e64:	bf54      	ite	pl
 8011e66:	f002 020f 	andpl.w	r2, r2, #15
 8011e6a:	1112      	asrmi	r2, r2, #4
 8011e6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e70:	b2d2      	uxtb	r2, r2
 8011e72:	2a00      	cmp	r2, #0
 8011e74:	d04b      	beq.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011e76:	4d68      	ldr	r5, [pc, #416]	; (8012018 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011e78:	f8d5 9000 	ldr.w	r9, [r5]
 8011e7c:	2aff      	cmp	r2, #255	; 0xff
 8011e7e:	ea4f 2519 	mov.w	r5, r9, lsr #8
 8011e82:	ea4f 4619 	mov.w	r6, r9, lsr #16
 8011e86:	9503      	str	r5, [sp, #12]
 8011e88:	fa5f f989 	uxtb.w	r9, r9
 8011e8c:	d045      	beq.n	8011f1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011e8e:	f06f 0501 	mvn.w	r5, #1
 8011e92:	437d      	muls	r5, r7
 8011e94:	fa1f fa82 	uxth.w	sl, r2
 8011e98:	f834 e005 	ldrh.w	lr, [r4, r5]
 8011e9c:	9504      	str	r5, [sp, #16]
 8011e9e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011ea2:	43d2      	mvns	r2, r2
 8011ea4:	b2f6      	uxtb	r6, r6
 8011ea6:	b2d2      	uxtb	r2, r2
 8011ea8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011eac:	fb16 f60a 	smulbb	r6, r6, sl
 8011eb0:	fb0c 6602 	mla	r6, ip, r2, r6
 8011eb4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011eb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ebc:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8011ec0:	fa5f fe8e 	uxtb.w	lr, lr
 8011ec4:	fb19 f90a 	smulbb	r9, r9, sl
 8011ec8:	fb0e 9902 	mla	r9, lr, r2, r9
 8011ecc:	b2b6      	uxth	r6, r6
 8011ece:	fb15 f50a 	smulbb	r5, r5, sl
 8011ed2:	fa1f f989 	uxth.w	r9, r9
 8011ed6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011eda:	fb0c 5c02 	mla	ip, ip, r2, r5
 8011ede:	1c72      	adds	r2, r6, #1
 8011ee0:	f109 0501 	add.w	r5, r9, #1
 8011ee4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011ee8:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8011eec:	fa1f fc8c 	uxth.w	ip, ip
 8011ef0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011ef4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011ef8:	432e      	orrs	r6, r5
 8011efa:	f10c 0501 	add.w	r5, ip, #1
 8011efe:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 8011f02:	096d      	lsrs	r5, r5, #5
 8011f04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f08:	9a04      	ldr	r2, [sp, #16]
 8011f0a:	432e      	orrs	r6, r5
 8011f0c:	52a6      	strh	r6, [r4, r2]
 8011f0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f10:	4410      	add	r0, r2
 8011f12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f14:	3f01      	subs	r7, #1
 8011f16:	4411      	add	r1, r2
 8011f18:	e74f      	b.n	8011dba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011f1a:	f06f 0201 	mvn.w	r2, #1
 8011f1e:	fb02 fc07 	mul.w	ip, r2, r7
 8011f22:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 8011f26:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 8011f2a:	9a03      	ldr	r2, [sp, #12]
 8011f2c:	00d5      	lsls	r5, r2, #3
 8011f2e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011f32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f36:	432e      	orrs	r6, r5
 8011f38:	f824 600c 	strh.w	r6, [r4, ip]
 8011f3c:	e7e7      	b.n	8011f0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8011f3e:	f04f 0e00 	mov.w	lr, #0
 8011f42:	eba3 020e 	sub.w	r2, r3, lr
 8011f46:	2a00      	cmp	r2, #0
 8011f48:	f77f af3a 	ble.w	8011dc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011f4c:	9e01      	ldr	r6, [sp, #4]
 8011f4e:	1402      	asrs	r2, r0, #16
 8011f50:	140d      	asrs	r5, r1, #16
 8011f52:	fb06 2505 	mla	r5, r6, r5, r2
 8011f56:	086a      	lsrs	r2, r5, #1
 8011f58:	9e02      	ldr	r6, [sp, #8]
 8011f5a:	5cb2      	ldrb	r2, [r6, r2]
 8011f5c:	07ed      	lsls	r5, r5, #31
 8011f5e:	bf54      	ite	pl
 8011f60:	f002 020f 	andpl.w	r2, r2, #15
 8011f64:	1112      	asrmi	r2, r2, #4
 8011f66:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f6a:	b2d2      	uxtb	r2, r2
 8011f6c:	2a00      	cmp	r2, #0
 8011f6e:	d042      	beq.n	8011ff6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8011f70:	4d29      	ldr	r5, [pc, #164]	; (8012018 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011f72:	682f      	ldr	r7, [r5, #0]
 8011f74:	2aff      	cmp	r2, #255	; 0xff
 8011f76:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8011f7a:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8011f7e:	fa5f f987 	uxtb.w	r9, r7
 8011f82:	d03f      	beq.n	8012004 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8011f84:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011f88:	fa1f fa82 	uxth.w	sl, r2
 8011f8c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011f90:	43d2      	mvns	r2, r2
 8011f92:	b2ed      	uxtb	r5, r5
 8011f94:	b2d2      	uxtb	r2, r2
 8011f96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011f9a:	fb15 f50a 	smulbb	r5, r5, sl
 8011f9e:	fb07 5502 	mla	r5, r7, r2, r5
 8011fa2:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8011fa6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011faa:	fa5f fc8c 	uxtb.w	ip, ip
 8011fae:	fb19 f90a 	smulbb	r9, r9, sl
 8011fb2:	fb0c 9902 	mla	r9, ip, r2, r9
 8011fb6:	b2f6      	uxtb	r6, r6
 8011fb8:	b2ad      	uxth	r5, r5
 8011fba:	fb16 f60a 	smulbb	r6, r6, sl
 8011fbe:	fa1f f989 	uxth.w	r9, r9
 8011fc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011fc6:	fb07 6702 	mla	r7, r7, r2, r6
 8011fca:	1c6a      	adds	r2, r5, #1
 8011fcc:	f109 0601 	add.w	r6, r9, #1
 8011fd0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8011fd4:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8011fd8:	b2bf      	uxth	r7, r7
 8011fda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011fde:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8011fe2:	4335      	orrs	r5, r6
 8011fe4:	1c7e      	adds	r6, r7, #1
 8011fe6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011fea:	0976      	lsrs	r6, r6, #5
 8011fec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011ff0:	4335      	orrs	r5, r6
 8011ff2:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8011ff6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ff8:	4410      	add	r0, r2
 8011ffa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ffc:	f10e 0e01 	add.w	lr, lr, #1
 8012000:	4411      	add	r1, r2
 8012002:	e79e      	b.n	8011f42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8012004:	4a05      	ldr	r2, [pc, #20]	; (801201c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 8012006:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 801200a:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 801200e:	00f6      	lsls	r6, r6, #3
 8012010:	e7ec      	b.n	8011fec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8012012:	b007      	add	sp, #28
 8012014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012018:	2000a1a0 	.word	0x2000a1a0
 801201c:	fffff800 	.word	0xfffff800

08012020 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012020:	4770      	bx	lr

08012022 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012022:	4770      	bx	lr

08012024 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012024:	4770      	bx	lr

08012026 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012026:	4770      	bx	lr

08012028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012028:	4770      	bx	lr

0801202a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801202a:	4770      	bx	lr

0801202c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801202c:	4770      	bx	lr

0801202e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801202e:	4770      	bx	lr

08012030 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012030:	4770      	bx	lr

08012032 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012032:	4770      	bx	lr

08012034 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012034:	4770      	bx	lr

08012036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012036:	4770      	bx	lr

08012038 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012038:	4770      	bx	lr

0801203a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801203a:	4770      	bx	lr

0801203c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801203c:	4770      	bx	lr

0801203e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801203e:	4770      	bx	lr

08012040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012040:	4770      	bx	lr

08012042 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012044:	4770      	bx	lr

08012046 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012046:	4770      	bx	lr

08012048 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012048:	4770      	bx	lr

0801204a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801204a:	4770      	bx	lr

0801204c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801204c:	4770      	bx	lr

0801204e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801204e:	4770      	bx	lr

08012050 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012050:	4770      	bx	lr

08012052 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012052:	4770      	bx	lr

08012054 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012054:	4770      	bx	lr

08012056 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012056:	4770      	bx	lr

08012058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012058:	4770      	bx	lr
	...

0801205c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801205c:	b508      	push	{r3, lr}
 801205e:	4b06      	ldr	r3, [pc, #24]	; (8012078 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012060:	8818      	ldrh	r0, [r3, #0]
 8012062:	b928      	cbnz	r0, 8012070 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012064:	4b05      	ldr	r3, [pc, #20]	; (801207c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012066:	4a06      	ldr	r2, [pc, #24]	; (8012080 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012068:	4806      	ldr	r0, [pc, #24]	; (8012084 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801206a:	2150      	movs	r1, #80	; 0x50
 801206c:	f009 fa84 	bl	801b578 <__assert_func>
 8012070:	0040      	lsls	r0, r0, #1
 8012072:	b280      	uxth	r0, r0
 8012074:	bd08      	pop	{r3, pc}
 8012076:	bf00      	nop
 8012078:	2000a192 	.word	0x2000a192
 801207c:	0801f500 	.word	0x0801f500
 8012080:	0801faf8 	.word	0x0801faf8
 8012084:	0801f542 	.word	0x0801f542

08012088 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801208c:	b08b      	sub	sp, #44	; 0x2c
 801208e:	460f      	mov	r7, r1
 8012090:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012094:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012098:	4616      	mov	r6, r2
 801209a:	f1bb 0f00 	cmp.w	fp, #0
 801209e:	d046      	beq.n	801212e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80120a0:	6810      	ldr	r0, [r2, #0]
 80120a2:	6851      	ldr	r1, [r2, #4]
 80120a4:	ad06      	add	r5, sp, #24
 80120a6:	c503      	stmia	r5!, {r0, r1}
 80120a8:	6818      	ldr	r0, [r3, #0]
 80120aa:	6859      	ldr	r1, [r3, #4]
 80120ac:	ad08      	add	r5, sp, #32
 80120ae:	c503      	stmia	r5!, {r0, r1}
 80120b0:	a806      	add	r0, sp, #24
 80120b2:	f7fa f8cf 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120b6:	4631      	mov	r1, r6
 80120b8:	a808      	add	r0, sp, #32
 80120ba:	f7fa f8b3 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80120c2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80120c6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80120ca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80120ce:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80120d2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80120d6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80120da:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80120de:	4f5e      	ldr	r7, [pc, #376]	; (8012258 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 80120e0:	440a      	add	r2, r1
 80120e2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80120e6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80120ea:	6838      	ldr	r0, [r7, #0]
 80120ec:	4413      	add	r3, r2
 80120ee:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80120f2:	6803      	ldr	r3, [r0, #0]
 80120f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80120f6:	4798      	blx	r3
 80120f8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80120fc:	46b9      	mov	r9, r7
 80120fe:	d019      	beq.n	8012134 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012100:	f010 0f04 	tst.w	r0, #4
 8012104:	d01a      	beq.n	801213c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012106:	f8d9 0000 	ldr.w	r0, [r9]
 801210a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801210e:	6801      	ldr	r1, [r0, #0]
 8012110:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012114:	e9cd b403 	strd	fp, r4, [sp, #12]
 8012118:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801211c:	9402      	str	r4, [sp, #8]
 801211e:	b2ad      	uxth	r5, r5
 8012120:	fa1f f488 	uxth.w	r4, r8
 8012124:	9501      	str	r5, [sp, #4]
 8012126:	9400      	str	r4, [sp, #0]
 8012128:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 801212a:	4631      	mov	r1, r6
 801212c:	47a0      	blx	r4
 801212e:	b00b      	add	sp, #44	; 0x2c
 8012130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012134:	b914      	cbnz	r4, 801213c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012136:	f010 0f01 	tst.w	r0, #1
 801213a:	e7e3      	b.n	8012104 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801213c:	f8d9 0000 	ldr.w	r0, [r9]
 8012140:	6803      	ldr	r3, [r0, #0]
 8012142:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012144:	4798      	blx	r3
 8012146:	4b45      	ldr	r3, [pc, #276]	; (801225c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012148:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801214c:	881a      	ldrh	r2, [r3, #0]
 801214e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012152:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012156:	fb02 1404 	mla	r4, r2, r4, r1
 801215a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801215e:	469a      	mov	sl, r3
 8012160:	fb05 f502 	mul.w	r5, r5, r2
 8012164:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012168:	d059      	beq.n	801221e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 801216a:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801216e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012172:	fa1f f28b 	uxth.w	r2, fp
 8012176:	fa1f f989 	uxth.w	r9, r9
 801217a:	469e      	mov	lr, r3
 801217c:	42ac      	cmp	r4, r5
 801217e:	d264      	bcs.n	801224a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8012180:	eb04 0a07 	add.w	sl, r4, r7
 8012184:	4554      	cmp	r4, sl
 8012186:	d23d      	bcs.n	8012204 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 8012188:	8821      	ldrh	r1, [r4, #0]
 801218a:	f836 3b02 	ldrh.w	r3, [r6], #2
 801218e:	1208      	asrs	r0, r1, #8
 8012190:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012194:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012198:	fb10 f009 	smulbb	r0, r0, r9
 801219c:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80121a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121a4:	00c9      	lsls	r1, r1, #3
 80121a6:	fb0c 0c02 	mla	ip, ip, r2, r0
 80121aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80121ae:	10d8      	asrs	r0, r3, #3
 80121b0:	b2c9      	uxtb	r1, r1
 80121b2:	00db      	lsls	r3, r3, #3
 80121b4:	fa1f fc8c 	uxth.w	ip, ip
 80121b8:	fb1b fb09 	smulbb	fp, fp, r9
 80121bc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80121c0:	b2db      	uxtb	r3, r3
 80121c2:	fb11 f109 	smulbb	r1, r1, r9
 80121c6:	fb00 b002 	mla	r0, r0, r2, fp
 80121ca:	fb03 1302 	mla	r3, r3, r2, r1
 80121ce:	f10c 0b01 	add.w	fp, ip, #1
 80121d2:	b29b      	uxth	r3, r3
 80121d4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80121d8:	b280      	uxth	r0, r0
 80121da:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80121de:	f103 0c01 	add.w	ip, r3, #1
 80121e2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80121e6:	1c43      	adds	r3, r0, #1
 80121e8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80121ec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80121f0:	0940      	lsrs	r0, r0, #5
 80121f2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80121f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80121fa:	ea4c 0c00 	orr.w	ip, ip, r0
 80121fe:	f824 cb02 	strh.w	ip, [r4], #2
 8012202:	e7bf      	b.n	8012184 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8012204:	f8be 3000 	ldrh.w	r3, [lr]
 8012208:	eba3 0308 	sub.w	r3, r3, r8
 801220c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012210:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012214:	eba3 0308 	sub.w	r3, r3, r8
 8012218:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801221c:	e7ae      	b.n	801217c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 801221e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012222:	f8d9 0000 	ldr.w	r0, [r9]
 8012226:	42ac      	cmp	r4, r5
 8012228:	6803      	ldr	r3, [r0, #0]
 801222a:	d20e      	bcs.n	801224a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 801222c:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 8012230:	4632      	mov	r2, r6
 8012232:	463b      	mov	r3, r7
 8012234:	4621      	mov	r1, r4
 8012236:	47c0      	blx	r8
 8012238:	f8ba 3000 	ldrh.w	r3, [sl]
 801223c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012240:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012244:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012248:	e7eb      	b.n	8012222 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 801224a:	4b03      	ldr	r3, [pc, #12]	; (8012258 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 801224c:	6818      	ldr	r0, [r3, #0]
 801224e:	6803      	ldr	r3, [r0, #0]
 8012250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012252:	4798      	blx	r3
 8012254:	e76b      	b.n	801212e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012256:	bf00      	nop
 8012258:	2000a198 	.word	0x2000a198
 801225c:	2000a192 	.word	0x2000a192

08012260 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012260:	b510      	push	{r4, lr}
 8012262:	2178      	movs	r1, #120	; 0x78
 8012264:	4604      	mov	r4, r0
 8012266:	f009 f958 	bl	801b51a <_ZdlPvj>
 801226a:	4620      	mov	r0, r4
 801226c:	bd10      	pop	{r4, pc}

0801226e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801226e:	b510      	push	{r4, lr}
 8012270:	2104      	movs	r1, #4
 8012272:	4604      	mov	r4, r0
 8012274:	f009 f951 	bl	801b51a <_ZdlPvj>
 8012278:	4620      	mov	r0, r4
 801227a:	bd10      	pop	{r4, pc}

0801227c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801227c:	b510      	push	{r4, lr}
 801227e:	2104      	movs	r1, #4
 8012280:	4604      	mov	r4, r0
 8012282:	f009 f94a 	bl	801b51a <_ZdlPvj>
 8012286:	4620      	mov	r0, r4
 8012288:	bd10      	pop	{r4, pc}

0801228a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801228a:	b510      	push	{r4, lr}
 801228c:	2104      	movs	r1, #4
 801228e:	4604      	mov	r4, r0
 8012290:	f009 f943 	bl	801b51a <_ZdlPvj>
 8012294:	4620      	mov	r0, r4
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012298:	b510      	push	{r4, lr}
 801229a:	2104      	movs	r1, #4
 801229c:	4604      	mov	r4, r0
 801229e:	f009 f93c 	bl	801b51a <_ZdlPvj>
 80122a2:	4620      	mov	r0, r4
 80122a4:	bd10      	pop	{r4, pc}

080122a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80122a6:	b510      	push	{r4, lr}
 80122a8:	2104      	movs	r1, #4
 80122aa:	4604      	mov	r4, r0
 80122ac:	f009 f935 	bl	801b51a <_ZdlPvj>
 80122b0:	4620      	mov	r0, r4
 80122b2:	bd10      	pop	{r4, pc}

080122b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80122b4:	b510      	push	{r4, lr}
 80122b6:	2104      	movs	r1, #4
 80122b8:	4604      	mov	r4, r0
 80122ba:	f009 f92e 	bl	801b51a <_ZdlPvj>
 80122be:	4620      	mov	r0, r4
 80122c0:	bd10      	pop	{r4, pc}

080122c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80122c2:	b510      	push	{r4, lr}
 80122c4:	2104      	movs	r1, #4
 80122c6:	4604      	mov	r4, r0
 80122c8:	f009 f927 	bl	801b51a <_ZdlPvj>
 80122cc:	4620      	mov	r0, r4
 80122ce:	bd10      	pop	{r4, pc}

080122d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80122d0:	b510      	push	{r4, lr}
 80122d2:	2104      	movs	r1, #4
 80122d4:	4604      	mov	r4, r0
 80122d6:	f009 f920 	bl	801b51a <_ZdlPvj>
 80122da:	4620      	mov	r0, r4
 80122dc:	bd10      	pop	{r4, pc}

080122de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80122de:	b510      	push	{r4, lr}
 80122e0:	2104      	movs	r1, #4
 80122e2:	4604      	mov	r4, r0
 80122e4:	f009 f919 	bl	801b51a <_ZdlPvj>
 80122e8:	4620      	mov	r0, r4
 80122ea:	bd10      	pop	{r4, pc}

080122ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80122ec:	b510      	push	{r4, lr}
 80122ee:	2104      	movs	r1, #4
 80122f0:	4604      	mov	r4, r0
 80122f2:	f009 f912 	bl	801b51a <_ZdlPvj>
 80122f6:	4620      	mov	r0, r4
 80122f8:	bd10      	pop	{r4, pc}

080122fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80122fa:	b510      	push	{r4, lr}
 80122fc:	2104      	movs	r1, #4
 80122fe:	4604      	mov	r4, r0
 8012300:	f009 f90b 	bl	801b51a <_ZdlPvj>
 8012304:	4620      	mov	r0, r4
 8012306:	bd10      	pop	{r4, pc}

08012308 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012308:	b510      	push	{r4, lr}
 801230a:	2104      	movs	r1, #4
 801230c:	4604      	mov	r4, r0
 801230e:	f009 f904 	bl	801b51a <_ZdlPvj>
 8012312:	4620      	mov	r0, r4
 8012314:	bd10      	pop	{r4, pc}

08012316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012316:	b510      	push	{r4, lr}
 8012318:	2104      	movs	r1, #4
 801231a:	4604      	mov	r4, r0
 801231c:	f009 f8fd 	bl	801b51a <_ZdlPvj>
 8012320:	4620      	mov	r0, r4
 8012322:	bd10      	pop	{r4, pc}

08012324 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012324:	b510      	push	{r4, lr}
 8012326:	2104      	movs	r1, #4
 8012328:	4604      	mov	r4, r0
 801232a:	f009 f8f6 	bl	801b51a <_ZdlPvj>
 801232e:	4620      	mov	r0, r4
 8012330:	bd10      	pop	{r4, pc}

08012332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012332:	b510      	push	{r4, lr}
 8012334:	2104      	movs	r1, #4
 8012336:	4604      	mov	r4, r0
 8012338:	f009 f8ef 	bl	801b51a <_ZdlPvj>
 801233c:	4620      	mov	r0, r4
 801233e:	bd10      	pop	{r4, pc}

08012340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012340:	b510      	push	{r4, lr}
 8012342:	2104      	movs	r1, #4
 8012344:	4604      	mov	r4, r0
 8012346:	f009 f8e8 	bl	801b51a <_ZdlPvj>
 801234a:	4620      	mov	r0, r4
 801234c:	bd10      	pop	{r4, pc}

0801234e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801234e:	b510      	push	{r4, lr}
 8012350:	2104      	movs	r1, #4
 8012352:	4604      	mov	r4, r0
 8012354:	f009 f8e1 	bl	801b51a <_ZdlPvj>
 8012358:	4620      	mov	r0, r4
 801235a:	bd10      	pop	{r4, pc}

0801235c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801235c:	b510      	push	{r4, lr}
 801235e:	2104      	movs	r1, #4
 8012360:	4604      	mov	r4, r0
 8012362:	f009 f8da 	bl	801b51a <_ZdlPvj>
 8012366:	4620      	mov	r0, r4
 8012368:	bd10      	pop	{r4, pc}

0801236a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801236a:	b510      	push	{r4, lr}
 801236c:	2104      	movs	r1, #4
 801236e:	4604      	mov	r4, r0
 8012370:	f009 f8d3 	bl	801b51a <_ZdlPvj>
 8012374:	4620      	mov	r0, r4
 8012376:	bd10      	pop	{r4, pc}

08012378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012378:	b510      	push	{r4, lr}
 801237a:	2104      	movs	r1, #4
 801237c:	4604      	mov	r4, r0
 801237e:	f009 f8cc 	bl	801b51a <_ZdlPvj>
 8012382:	4620      	mov	r0, r4
 8012384:	bd10      	pop	{r4, pc}

08012386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012386:	b510      	push	{r4, lr}
 8012388:	2104      	movs	r1, #4
 801238a:	4604      	mov	r4, r0
 801238c:	f009 f8c5 	bl	801b51a <_ZdlPvj>
 8012390:	4620      	mov	r0, r4
 8012392:	bd10      	pop	{r4, pc}

08012394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012394:	b510      	push	{r4, lr}
 8012396:	2104      	movs	r1, #4
 8012398:	4604      	mov	r4, r0
 801239a:	f009 f8be 	bl	801b51a <_ZdlPvj>
 801239e:	4620      	mov	r0, r4
 80123a0:	bd10      	pop	{r4, pc}

080123a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123a2:	b510      	push	{r4, lr}
 80123a4:	2104      	movs	r1, #4
 80123a6:	4604      	mov	r4, r0
 80123a8:	f009 f8b7 	bl	801b51a <_ZdlPvj>
 80123ac:	4620      	mov	r0, r4
 80123ae:	bd10      	pop	{r4, pc}

080123b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123b0:	b510      	push	{r4, lr}
 80123b2:	2104      	movs	r1, #4
 80123b4:	4604      	mov	r4, r0
 80123b6:	f009 f8b0 	bl	801b51a <_ZdlPvj>
 80123ba:	4620      	mov	r0, r4
 80123bc:	bd10      	pop	{r4, pc}

080123be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80123be:	b510      	push	{r4, lr}
 80123c0:	2104      	movs	r1, #4
 80123c2:	4604      	mov	r4, r0
 80123c4:	f009 f8a9 	bl	801b51a <_ZdlPvj>
 80123c8:	4620      	mov	r0, r4
 80123ca:	bd10      	pop	{r4, pc}

080123cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80123cc:	b510      	push	{r4, lr}
 80123ce:	2104      	movs	r1, #4
 80123d0:	4604      	mov	r4, r0
 80123d2:	f009 f8a2 	bl	801b51a <_ZdlPvj>
 80123d6:	4620      	mov	r0, r4
 80123d8:	bd10      	pop	{r4, pc}

080123da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80123da:	b510      	push	{r4, lr}
 80123dc:	2104      	movs	r1, #4
 80123de:	4604      	mov	r4, r0
 80123e0:	f009 f89b 	bl	801b51a <_ZdlPvj>
 80123e4:	4620      	mov	r0, r4
 80123e6:	bd10      	pop	{r4, pc}

080123e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80123e8:	b510      	push	{r4, lr}
 80123ea:	2104      	movs	r1, #4
 80123ec:	4604      	mov	r4, r0
 80123ee:	f009 f894 	bl	801b51a <_ZdlPvj>
 80123f2:	4620      	mov	r0, r4
 80123f4:	bd10      	pop	{r4, pc}
	...

080123f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80123f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123fc:	4f97      	ldr	r7, [pc, #604]	; (801265c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80123fe:	4616      	mov	r6, r2
 8012400:	683a      	ldr	r2, [r7, #0]
 8012402:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012406:	2a02      	cmp	r2, #2
 8012408:	b08f      	sub	sp, #60	; 0x3c
 801240a:	4604      	mov	r4, r0
 801240c:	4689      	mov	r9, r1
 801240e:	d106      	bne.n	801241e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012410:	4b93      	ldr	r3, [pc, #588]	; (8012660 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8012412:	4a94      	ldr	r2, [pc, #592]	; (8012664 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012414:	f240 310f 	movw	r1, #783	; 0x30f
 8012418:	4893      	ldr	r0, [pc, #588]	; (8012668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801241a:	f009 f8ad 	bl	801b578 <__assert_func>
 801241e:	ad0e      	add	r5, sp, #56	; 0x38
 8012420:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8012424:	4628      	mov	r0, r5
 8012426:	f7fd fb6b 	bl	800fb00 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801242a:	6823      	ldr	r3, [r4, #0]
 801242c:	4680      	mov	r8, r0
 801242e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012430:	4620      	mov	r0, r4
 8012432:	4798      	blx	r3
 8012434:	4580      	cmp	r8, r0
 8012436:	d004      	beq.n	8012442 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012438:	4b8c      	ldr	r3, [pc, #560]	; (801266c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801243a:	4a8a      	ldr	r2, [pc, #552]	; (8012664 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801243c:	f240 3111 	movw	r1, #785	; 0x311
 8012440:	e7ea      	b.n	8012418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012442:	4628      	mov	r0, r5
 8012444:	f7fd fad2 	bl	800f9ec <_ZNK8touchgfx6Bitmap7getDataEv>
 8012448:	4680      	mov	r8, r0
 801244a:	b920      	cbnz	r0, 8012456 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801244c:	4b88      	ldr	r3, [pc, #544]	; (8012670 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801244e:	4a85      	ldr	r2, [pc, #532]	; (8012664 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012450:	f240 3113 	movw	r1, #787	; 0x313
 8012454:	e7e0      	b.n	8012418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012456:	6830      	ldr	r0, [r6, #0]
 8012458:	6871      	ldr	r1, [r6, #4]
 801245a:	f9b6 a000 	ldrsh.w	sl, [r6]
 801245e:	ab06      	add	r3, sp, #24
 8012460:	c303      	stmia	r3!, {r0, r1}
 8012462:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012466:	f8d9 0000 	ldr.w	r0, [r9]
 801246a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801246e:	ab08      	add	r3, sp, #32
 8012470:	c303      	stmia	r3!, {r0, r1}
 8012472:	4628      	mov	r0, r5
 8012474:	f7fd f9b2 	bl	800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012478:	4606      	mov	r6, r0
 801247a:	4628      	mov	r0, r5
 801247c:	f7fd f9e8 	bl	800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012480:	f10d 0b20 	add.w	fp, sp, #32
 8012484:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012488:	a806      	add	r0, sp, #24
 801248a:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801248e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012492:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012496:	f7f9 fedd 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801249a:	4658      	mov	r0, fp
 801249c:	f7f9 feda 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124a0:	a80a      	add	r0, sp, #40	; 0x28
 80124a2:	f7f9 fed7 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124a6:	4d73      	ldr	r5, [pc, #460]	; (8012674 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80124a8:	4b73      	ldr	r3, [pc, #460]	; (8012678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80124aa:	f9b5 2000 	ldrsh.w	r2, [r5]
 80124ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80124b2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80124b6:	2100      	movs	r1, #0
 80124b8:	910c      	str	r1, [sp, #48]	; 0x30
 80124ba:	4658      	mov	r0, fp
 80124bc:	a90c      	add	r1, sp, #48	; 0x30
 80124be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80124c2:	f7f6 ff71 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 80124c6:	4658      	mov	r0, fp
 80124c8:	f7f6 ffb1 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 80124cc:	2800      	cmp	r0, #0
 80124ce:	f040 8099 	bne.w	8012604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80124d2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80124d6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80124da:	4288      	cmp	r0, r1
 80124dc:	db37      	blt.n	801254e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80124de:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80124e2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80124e6:	429a      	cmp	r2, r3
 80124e8:	db31      	blt.n	801254e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80124ea:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80124ee:	4430      	add	r0, r6
 80124f0:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80124f4:	4431      	add	r1, r6
 80124f6:	b200      	sxth	r0, r0
 80124f8:	b209      	sxth	r1, r1
 80124fa:	4288      	cmp	r0, r1
 80124fc:	dc27      	bgt.n	801254e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80124fe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012502:	440a      	add	r2, r1
 8012504:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012508:	440b      	add	r3, r1
 801250a:	b212      	sxth	r2, r2
 801250c:	b21b      	sxth	r3, r3
 801250e:	429a      	cmp	r2, r3
 8012510:	dc1d      	bgt.n	801254e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012512:	6823      	ldr	r3, [r4, #0]
 8012514:	4620      	mov	r0, r4
 8012516:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012518:	4798      	blx	r3
 801251a:	4682      	mov	sl, r0
 801251c:	6838      	ldr	r0, [r7, #0]
 801251e:	6803      	ldr	r3, [r0, #0]
 8012520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012522:	4798      	blx	r3
 8012524:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012528:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801252c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012530:	1a5b      	subs	r3, r3, r1
 8012532:	b29b      	uxth	r3, r3
 8012534:	b21c      	sxth	r4, r3
 8012536:	2c00      	cmp	r4, #0
 8012538:	dc0e      	bgt.n	8012558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801253a:	bf1f      	itttt	ne
 801253c:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8012540:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8012544:	185b      	addne	r3, r3, r1
 8012546:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801254a:	4644      	mov	r4, r8
 801254c:	e009      	b.n	8012562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801254e:	4b4b      	ldr	r3, [pc, #300]	; (801267c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012550:	4a44      	ldr	r2, [pc, #272]	; (8012664 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8012552:	f240 3121 	movw	r1, #801	; 0x321
 8012556:	e75f      	b.n	8012418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012558:	1ad3      	subs	r3, r2, r3
 801255a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801255e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012562:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8012566:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801256a:	1b9b      	subs	r3, r3, r6
 801256c:	b29b      	uxth	r3, r3
 801256e:	b219      	sxth	r1, r3
 8012570:	2900      	cmp	r1, #0
 8012572:	dd4b      	ble.n	801260c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8012574:	4351      	muls	r1, r2
 8012576:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801257a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801257e:	1acb      	subs	r3, r1, r3
 8012580:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012584:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012588:	2e00      	cmp	r6, #0
 801258a:	dd3b      	ble.n	8012604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801258c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012590:	2b00      	cmp	r3, #0
 8012592:	dd37      	ble.n	8012604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012594:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012598:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801259c:	fb0a f90c 	mul.w	r9, sl, ip
 80125a0:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80125a4:	4481      	add	r9, r0
 80125a6:	8828      	ldrh	r0, [r5, #0]
 80125a8:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80125ac:	42ae      	cmp	r6, r5
 80125ae:	bfa8      	it	ge
 80125b0:	462e      	movge	r6, r5
 80125b2:	1a41      	subs	r1, r0, r1
 80125b4:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80125b8:	428e      	cmp	r6, r1
 80125ba:	bfa8      	it	ge
 80125bc:	460e      	movge	r6, r1
 80125be:	429d      	cmp	r5, r3
 80125c0:	bfa8      	it	ge
 80125c2:	461d      	movge	r5, r3
 80125c4:	4b2c      	ldr	r3, [pc, #176]	; (8012678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80125c6:	881b      	ldrh	r3, [r3, #0]
 80125c8:	eba3 030c 	sub.w	r3, r3, ip
 80125cc:	429d      	cmp	r5, r3
 80125ce:	bfa8      	it	ge
 80125d0:	461d      	movge	r5, r3
 80125d2:	42b0      	cmp	r0, r6
 80125d4:	d12c      	bne.n	8012630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80125d6:	4290      	cmp	r0, r2
 80125d8:	d12a      	bne.n	8012630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80125da:	6838      	ldr	r0, [r7, #0]
 80125dc:	9203      	str	r2, [sp, #12]
 80125de:	6803      	ldr	r3, [r0, #0]
 80125e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125e2:	4798      	blx	r3
 80125e4:	07c3      	lsls	r3, r0, #31
 80125e6:	d51a      	bpl.n	801261e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 80125e8:	9a03      	ldr	r2, [sp, #12]
 80125ea:	6838      	ldr	r0, [r7, #0]
 80125ec:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80125f0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80125f4:	6803      	ldr	r3, [r0, #0]
 80125f6:	9200      	str	r2, [sp, #0]
 80125f8:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80125fa:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80125fe:	4623      	mov	r3, r4
 8012600:	47a8      	blx	r5
 8012602:	4680      	mov	r8, r0
 8012604:	4640      	mov	r0, r8
 8012606:	b00f      	add	sp, #60	; 0x3c
 8012608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801260c:	bf1f      	itttt	ne
 801260e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8012612:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8012616:	185b      	addne	r3, r3, r1
 8012618:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801261c:	e7b2      	b.n	8012584 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801261e:	6838      	ldr	r0, [r7, #0]
 8012620:	6803      	ldr	r3, [r0, #0]
 8012622:	464a      	mov	r2, r9
 8012624:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8012626:	4621      	mov	r1, r4
 8012628:	fb05 f30a 	mul.w	r3, r5, sl
 801262c:	47b0      	blx	r6
 801262e:	e7e9      	b.n	8012604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012630:	4355      	muls	r5, r2
 8012632:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8012636:	9303      	str	r3, [sp, #12]
 8012638:	0076      	lsls	r6, r6, #1
 801263a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801263e:	9b03      	ldr	r3, [sp, #12]
 8012640:	429c      	cmp	r4, r3
 8012642:	d2df      	bcs.n	8012604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012644:	6838      	ldr	r0, [r7, #0]
 8012646:	6803      	ldr	r3, [r0, #0]
 8012648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801264a:	464a      	mov	r2, r9
 801264c:	461d      	mov	r5, r3
 801264e:	4621      	mov	r1, r4
 8012650:	4633      	mov	r3, r6
 8012652:	47a8      	blx	r5
 8012654:	44d1      	add	r9, sl
 8012656:	445c      	add	r4, fp
 8012658:	e7f1      	b.n	801263e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801265a:	bf00      	nop
 801265c:	2000a198 	.word	0x2000a198
 8012660:	0801f2f8 	.word	0x0801f2f8
 8012664:	0801fba8 	.word	0x0801fba8
 8012668:	0801f3aa 	.word	0x0801f3aa
 801266c:	0801f3dc 	.word	0x0801f3dc
 8012670:	0801f431 	.word	0x0801f431
 8012674:	2000a192 	.word	0x2000a192
 8012678:	2000a194 	.word	0x2000a194
 801267c:	0801f46f 	.word	0x0801f46f

08012680 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012680:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012682:	4607      	mov	r7, r0
 8012684:	b087      	sub	sp, #28
 8012686:	460d      	mov	r5, r1
 8012688:	4614      	mov	r4, r2
 801268a:	461e      	mov	r6, r3
 801268c:	b373      	cbz	r3, 80126ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 801268e:	4608      	mov	r0, r1
 8012690:	f7f6 fecd 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012694:	bb50      	cbnz	r0, 80126ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8012696:	6828      	ldr	r0, [r5, #0]
 8012698:	6869      	ldr	r1, [r5, #4]
 801269a:	4d1f      	ldr	r5, [pc, #124]	; (8012718 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 801269c:	ab04      	add	r3, sp, #16
 801269e:	c303      	stmia	r3!, {r0, r1}
 80126a0:	a804      	add	r0, sp, #16
 80126a2:	f7f9 fdd7 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126a6:	6828      	ldr	r0, [r5, #0]
 80126a8:	6803      	ldr	r3, [r0, #0]
 80126aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80126ac:	4798      	blx	r3
 80126ae:	2eff      	cmp	r6, #255	; 0xff
 80126b0:	d01e      	beq.n	80126f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 80126b2:	f010 0f08 	tst.w	r0, #8
 80126b6:	6828      	ldr	r0, [r5, #0]
 80126b8:	6803      	ldr	r3, [r0, #0]
 80126ba:	d01c      	beq.n	80126f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 80126bc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80126be:	4b17      	ldr	r3, [pc, #92]	; (801271c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 80126c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80126c4:	9602      	str	r6, [sp, #8]
 80126c6:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 80126ca:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 80126ce:	0964      	lsrs	r4, r4, #5
 80126d0:	4319      	orrs	r1, r3
 80126d2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80126d6:	4321      	orrs	r1, r4
 80126d8:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80126dc:	9401      	str	r4, [sp, #4]
 80126de:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80126e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80126e6:	9400      	str	r4, [sp, #0]
 80126e8:	b289      	uxth	r1, r1
 80126ea:	47a8      	blx	r5
 80126ec:	b007      	add	sp, #28
 80126ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126f0:	f010 0f02 	tst.w	r0, #2
 80126f4:	e7df      	b.n	80126b6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80126f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126f8:	4798      	blx	r3
 80126fa:	4b09      	ldr	r3, [pc, #36]	; (8012720 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 80126fc:	881a      	ldrh	r2, [r3, #0]
 80126fe:	683b      	ldr	r3, [r7, #0]
 8012700:	e9cd 4600 	strd	r4, r6, [sp]
 8012704:	4601      	mov	r1, r0
 8012706:	69dc      	ldr	r4, [r3, #28]
 8012708:	4638      	mov	r0, r7
 801270a:	ab04      	add	r3, sp, #16
 801270c:	47a0      	blx	r4
 801270e:	6828      	ldr	r0, [r5, #0]
 8012710:	6803      	ldr	r3, [r0, #0]
 8012712:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012714:	4798      	blx	r3
 8012716:	e7e9      	b.n	80126ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8012718:	2000a198 	.word	0x2000a198
 801271c:	fffff800 	.word	0xfffff800
 8012720:	2000a192 	.word	0x2000a192

08012724 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012728:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 801272c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8012730:	460f      	mov	r7, r1
 8012732:	4614      	mov	r4, r2
 8012734:	461d      	mov	r5, r3
 8012736:	2e00      	cmp	r6, #0
 8012738:	f000 80b6 	beq.w	80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801273c:	4618      	mov	r0, r3
 801273e:	f7f6 fe76 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012742:	2800      	cmp	r0, #0
 8012744:	f040 80b0 	bne.w	80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012748:	f9b5 1000 	ldrsh.w	r1, [r5]
 801274c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012750:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012754:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012758:	fb04 1303 	mla	r3, r4, r3, r1
 801275c:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 8012760:	4365      	muls	r5, r4
 8012762:	2eff      	cmp	r6, #255	; 0xff
 8012764:	eba4 0c00 	sub.w	ip, r4, r0
 8012768:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801276c:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 8012770:	ea4f 2718 	mov.w	r7, r8, lsr #8
 8012774:	fa5f f288 	uxtb.w	r2, r8
 8012778:	d04a      	beq.n	8012810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 801277a:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 801277e:	fa5f fe8e 	uxtb.w	lr, lr
 8012782:	b2b6      	uxth	r6, r6
 8012784:	b2ff      	uxtb	r7, r7
 8012786:	0040      	lsls	r0, r0, #1
 8012788:	fb0e fe06 	mul.w	lr, lr, r6
 801278c:	4377      	muls	r7, r6
 801278e:	fb02 f306 	mul.w	r3, r2, r6
 8012792:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8012796:	fa1f f888 	uxth.w	r8, r8
 801279a:	42a9      	cmp	r1, r5
 801279c:	f080 8084 	bcs.w	80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80127a0:	eb01 0900 	add.w	r9, r1, r0
 80127a4:	4549      	cmp	r1, r9
 80127a6:	d231      	bcs.n	801280c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 80127a8:	880a      	ldrh	r2, [r1, #0]
 80127aa:	1214      	asrs	r4, r2, #8
 80127ac:	10d6      	asrs	r6, r2, #3
 80127ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80127b2:	00d2      	lsls	r2, r2, #3
 80127b4:	b2d2      	uxtb	r2, r2
 80127b6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80127ba:	fb14 f408 	smulbb	r4, r4, r8
 80127be:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80127c2:	4474      	add	r4, lr
 80127c4:	fb12 f208 	smulbb	r2, r2, r8
 80127c8:	b2a4      	uxth	r4, r4
 80127ca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80127ce:	441a      	add	r2, r3
 80127d0:	b292      	uxth	r2, r2
 80127d2:	f104 0a01 	add.w	sl, r4, #1
 80127d6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80127da:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80127de:	fb16 f608 	smulbb	r6, r6, r8
 80127e2:	f102 0a01 	add.w	sl, r2, #1
 80127e6:	443e      	add	r6, r7
 80127e8:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80127ec:	b2b6      	uxth	r6, r6
 80127ee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80127f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80127f6:	4322      	orrs	r2, r4
 80127f8:	1c74      	adds	r4, r6, #1
 80127fa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80127fe:	0976      	lsrs	r6, r6, #5
 8012800:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012804:	4332      	orrs	r2, r6
 8012806:	f821 2b02 	strh.w	r2, [r1], #2
 801280a:	e7cb      	b.n	80127a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 801280c:	4461      	add	r1, ip
 801280e:	e7c4      	b.n	801279a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8012810:	4b26      	ldr	r3, [pc, #152]	; (80128ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012812:	00ff      	lsls	r7, r7, #3
 8012814:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 8012818:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801281c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012820:	433b      	orrs	r3, r7
 8012822:	07e2      	lsls	r2, r4, #31
 8012824:	b29b      	uxth	r3, r3
 8012826:	d50c      	bpl.n	8012842 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012828:	0040      	lsls	r0, r0, #1
 801282a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801282e:	42a9      	cmp	r1, r5
 8012830:	d23a      	bcs.n	80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012832:	180a      	adds	r2, r1, r0
 8012834:	4291      	cmp	r1, r2
 8012836:	d202      	bcs.n	801283e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 8012838:	f821 3b02 	strh.w	r3, [r1], #2
 801283c:	e7fa      	b.n	8012834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801283e:	4461      	add	r1, ip
 8012840:	e7f5      	b.n	801282e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8012842:	078f      	lsls	r7, r1, #30
 8012844:	d008      	beq.n	8012858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 8012846:	0066      	lsls	r6, r4, #1
 8012848:	460a      	mov	r2, r1
 801284a:	42aa      	cmp	r2, r5
 801284c:	d202      	bcs.n	8012854 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 801284e:	8013      	strh	r3, [r2, #0]
 8012850:	4432      	add	r2, r6
 8012852:	e7fa      	b.n	801284a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8012854:	3102      	adds	r1, #2
 8012856:	3801      	subs	r0, #1
 8012858:	07c6      	lsls	r6, r0, #31
 801285a:	d50b      	bpl.n	8012874 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 801285c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012860:	3a01      	subs	r2, #1
 8012862:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012866:	0066      	lsls	r6, r4, #1
 8012868:	42aa      	cmp	r2, r5
 801286a:	d202      	bcs.n	8012872 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 801286c:	8013      	strh	r3, [r2, #0]
 801286e:	4432      	add	r2, r6
 8012870:	e7fa      	b.n	8012868 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8012872:	3801      	subs	r0, #1
 8012874:	b1c0      	cbz	r0, 80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012876:	1040      	asrs	r0, r0, #1
 8012878:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801287c:	0080      	lsls	r0, r0, #2
 801287e:	0064      	lsls	r4, r4, #1
 8012880:	42a9      	cmp	r1, r5
 8012882:	d211      	bcs.n	80128a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8012884:	078a      	lsls	r2, r1, #30
 8012886:	d006      	beq.n	8012896 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 8012888:	4b09      	ldr	r3, [pc, #36]	; (80128b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801288a:	4a0a      	ldr	r2, [pc, #40]	; (80128b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 801288c:	480a      	ldr	r0, [pc, #40]	; (80128b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 801288e:	f240 31d6 	movw	r1, #982	; 0x3d6
 8012892:	f008 fe71 	bl	801b578 <__assert_func>
 8012896:	180e      	adds	r6, r1, r0
 8012898:	460a      	mov	r2, r1
 801289a:	42b2      	cmp	r2, r6
 801289c:	d202      	bcs.n	80128a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 801289e:	f842 3b04 	str.w	r3, [r2], #4
 80128a2:	e7fa      	b.n	801289a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 80128a4:	4421      	add	r1, r4
 80128a6:	e7eb      	b.n	8012880 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 80128a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80128ac:	fffff800 	.word	0xfffff800
 80128b0:	0801f1a9 	.word	0x0801f1a9
 80128b4:	0801f7f4 	.word	0x0801f7f4
 80128b8:	0801f3aa 	.word	0x0801f3aa

080128bc <_ZN8touchgfx8LCD16bppC1Ev>:
 80128bc:	2200      	movs	r2, #0
 80128be:	4910      	ldr	r1, [pc, #64]	; (8012900 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80128c0:	6042      	str	r2, [r0, #4]
 80128c2:	6001      	str	r1, [r0, #0]
 80128c4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80128c8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80128cc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80128d0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80128d4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80128d8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80128dc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80128e0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80128e4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80128e8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80128ec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80128f0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80128f4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80128f8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80128fc:	4770      	bx	lr
 80128fe:	bf00      	nop
 8012900:	0801f7b0 	.word	0x0801f7b0

08012904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012908:	460d      	mov	r5, r1
 801290a:	b08b      	sub	sp, #44	; 0x2c
 801290c:	4604      	mov	r4, r0
 801290e:	6808      	ldr	r0, [r1, #0]
 8012910:	6849      	ldr	r1, [r1, #4]
 8012912:	4699      	mov	r9, r3
 8012914:	ab06      	add	r3, sp, #24
 8012916:	c303      	stmia	r3!, {r0, r1}
 8012918:	6810      	ldr	r0, [r2, #0]
 801291a:	6851      	ldr	r1, [r2, #4]
 801291c:	ab08      	add	r3, sp, #32
 801291e:	c303      	stmia	r3!, {r0, r1}
 8012920:	a806      	add	r0, sp, #24
 8012922:	f7f9 fc97 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012926:	4629      	mov	r1, r5
 8012928:	a808      	add	r0, sp, #32
 801292a:	f7f9 fc7b 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801292e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012932:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012936:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801293a:	4d62      	ldr	r5, [pc, #392]	; (8012ac4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 801293c:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012940:	6828      	ldr	r0, [r5, #0]
 8012942:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8012946:	fb11 2103 	smlabb	r1, r1, r3, r2
 801294a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801294e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012952:	440a      	add	r2, r1
 8012954:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012958:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801295c:	4413      	add	r3, r2
 801295e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012962:	6803      	ldr	r3, [r0, #0]
 8012964:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012966:	4798      	blx	r3
 8012968:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801296c:	d118      	bne.n	80129a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 801296e:	f010 0f20 	tst.w	r0, #32
 8012972:	6828      	ldr	r0, [r5, #0]
 8012974:	d017      	beq.n	80129a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8012976:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 801297a:	6801      	ldr	r1, [r0, #0]
 801297c:	9502      	str	r5, [sp, #8]
 801297e:	b2b6      	uxth	r6, r6
 8012980:	fa1f f588 	uxth.w	r5, r8
 8012984:	f8cd 900c 	str.w	r9, [sp, #12]
 8012988:	9601      	str	r6, [sp, #4]
 801298a:	9500      	str	r5, [sp, #0]
 801298c:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 801298e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012992:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012996:	4621      	mov	r1, r4
 8012998:	47a8      	blx	r5
 801299a:	b00b      	add	sp, #44	; 0x2c
 801299c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129a0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80129a4:	e7e5      	b.n	8012972 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80129a6:	6803      	ldr	r3, [r0, #0]
 80129a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80129aa:	4798      	blx	r3
 80129ac:	4946      	ldr	r1, [pc, #280]	; (8012ac8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80129ae:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80129b2:	880b      	ldrh	r3, [r1, #0]
 80129b4:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 80129b8:	fb03 5202 	mla	r2, r3, r2, r5
 80129bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80129c0:	4373      	muls	r3, r6
 80129c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80129c6:	9305      	str	r3, [sp, #20]
 80129c8:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80129cc:	9304      	str	r3, [sp, #16]
 80129ce:	468a      	mov	sl, r1
 80129d0:	9b05      	ldr	r3, [sp, #20]
 80129d2:	4298      	cmp	r0, r3
 80129d4:	d26f      	bcs.n	8012ab6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 80129d6:	9b04      	ldr	r3, [sp, #16]
 80129d8:	4621      	mov	r1, r4
 80129da:	eb00 0b03 	add.w	fp, r0, r3
 80129de:	4558      	cmp	r0, fp
 80129e0:	d25c      	bcs.n	8012a9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 80129e2:	f851 2b04 	ldr.w	r2, [r1], #4
 80129e6:	0e14      	lsrs	r4, r2, #24
 80129e8:	d016      	beq.n	8012a18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 80129ea:	2cff      	cmp	r4, #255	; 0xff
 80129ec:	b2d3      	uxtb	r3, r2
 80129ee:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80129f2:	ea4f 4212 	mov.w	r2, r2, lsr #16
 80129f6:	d111      	bne.n	8012a1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80129f8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80129fc:	d10e      	bne.n	8012a1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80129fe:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 8012a02:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 8012a06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012a0a:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8012a0e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012a12:	ea43 030c 	orr.w	r3, r3, ip
 8012a16:	8003      	strh	r3, [r0, #0]
 8012a18:	3002      	adds	r0, #2
 8012a1a:	e7e0      	b.n	80129de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8012a1c:	fb09 f404 	mul.w	r4, r9, r4
 8012a20:	8807      	ldrh	r7, [r0, #0]
 8012a22:	1c65      	adds	r5, r4, #1
 8012a24:	eb05 2424 	add.w	r4, r5, r4, asr #8
 8012a28:	1224      	asrs	r4, r4, #8
 8012a2a:	123e      	asrs	r6, r7, #8
 8012a2c:	fa1f fe84 	uxth.w	lr, r4
 8012a30:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012a34:	43e4      	mvns	r4, r4
 8012a36:	b2d2      	uxtb	r2, r2
 8012a38:	b2e4      	uxtb	r4, r4
 8012a3a:	10fd      	asrs	r5, r7, #3
 8012a3c:	fb12 f20e 	smulbb	r2, r2, lr
 8012a40:	00ff      	lsls	r7, r7, #3
 8012a42:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012a46:	fb06 2604 	mla	r6, r6, r4, r2
 8012a4a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012a4e:	b2ff      	uxtb	r7, r7
 8012a50:	fa5f fc8c 	uxtb.w	ip, ip
 8012a54:	b2b6      	uxth	r6, r6
 8012a56:	fb1c fc0e 	smulbb	ip, ip, lr
 8012a5a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012a5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012a62:	fb13 f30e 	smulbb	r3, r3, lr
 8012a66:	fb05 c504 	mla	r5, r5, r4, ip
 8012a6a:	1c72      	adds	r2, r6, #1
 8012a6c:	fb07 3704 	mla	r7, r7, r4, r3
 8012a70:	b2ad      	uxth	r5, r5
 8012a72:	b2bf      	uxth	r7, r7
 8012a74:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012a78:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 8012a7c:	f105 0c01 	add.w	ip, r5, #1
 8012a80:	1c7e      	adds	r6, r7, #1
 8012a82:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012a86:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012a8a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012a8e:	096d      	lsrs	r5, r5, #5
 8012a90:	4316      	orrs	r6, r2
 8012a92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012a96:	432e      	orrs	r6, r5
 8012a98:	8006      	strh	r6, [r0, #0]
 8012a9a:	e7bd      	b.n	8012a18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 8012a9c:	f8ba 3000 	ldrh.w	r3, [sl]
 8012aa0:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8012aa4:	eba3 0308 	sub.w	r3, r3, r8
 8012aa8:	eba4 0408 	sub.w	r4, r4, r8
 8012aac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012ab0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012ab4:	e78c      	b.n	80129d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 8012ab6:	4b03      	ldr	r3, [pc, #12]	; (8012ac4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 8012ab8:	6818      	ldr	r0, [r3, #0]
 8012aba:	6803      	ldr	r3, [r0, #0]
 8012abc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012abe:	4798      	blx	r3
 8012ac0:	e76b      	b.n	801299a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8012ac2:	bf00      	nop
 8012ac4:	2000a198 	.word	0x2000a198
 8012ac8:	2000a192 	.word	0x2000a192

08012acc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012acc:	b570      	push	{r4, r5, r6, lr}
 8012ace:	9d04      	ldr	r5, [sp, #16]
 8012ad0:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012ad4:	460c      	mov	r4, r1
 8012ad6:	4619      	mov	r1, r3
 8012ad8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012adc:	2a0d      	cmp	r2, #13
 8012ade:	d820      	bhi.n	8012b22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012ae0:	e8df f002 	tbb	[pc, r2]
 8012ae4:	18121807 	.word	0x18121807
 8012ae8:	18181818 	.word	0x18181818
 8012aec:	18181818 	.word	0x18181818
 8012af0:	1818      	.short	0x1818
 8012af2:	6802      	ldr	r2, [r0, #0]
 8012af4:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012af8:	68d6      	ldr	r6, [r2, #12]
 8012afa:	462b      	mov	r3, r5
 8012afc:	460a      	mov	r2, r1
 8012afe:	46b4      	mov	ip, r6
 8012b00:	4621      	mov	r1, r4
 8012b02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b06:	4760      	bx	ip
 8012b08:	462a      	mov	r2, r5
 8012b0a:	4620      	mov	r0, r4
 8012b0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b10:	f7ff bef8 	b.w	8012904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012b14:	4b03      	ldr	r3, [pc, #12]	; (8012b24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012b16:	4a04      	ldr	r2, [pc, #16]	; (8012b28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012b18:	4804      	ldr	r0, [pc, #16]	; (8012b2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012b1a:	f44f 7142 	mov.w	r1, #776	; 0x308
 8012b1e:	f008 fd2b 	bl	801b578 <__assert_func>
 8012b22:	bd70      	pop	{r4, r5, r6, pc}
 8012b24:	0801f4cf 	.word	0x0801f4cf
 8012b28:	0801fc2e 	.word	0x0801fc2e
 8012b2c:	0801f3aa 	.word	0x0801f3aa

08012b30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b34:	460e      	mov	r6, r1
 8012b36:	b08c      	sub	sp, #48	; 0x30
 8012b38:	4604      	mov	r4, r0
 8012b3a:	6808      	ldr	r0, [r1, #0]
 8012b3c:	6849      	ldr	r1, [r1, #4]
 8012b3e:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8012d10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8012b42:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8012d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 8012b46:	461d      	mov	r5, r3
 8012b48:	ab08      	add	r3, sp, #32
 8012b4a:	c303      	stmia	r3!, {r0, r1}
 8012b4c:	6810      	ldr	r0, [r2, #0]
 8012b4e:	6851      	ldr	r1, [r2, #4]
 8012b50:	ab0a      	add	r3, sp, #40	; 0x28
 8012b52:	c303      	stmia	r3!, {r0, r1}
 8012b54:	a808      	add	r0, sp, #32
 8012b56:	f7f9 fb7d 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b5a:	4631      	mov	r1, r6
 8012b5c:	a80a      	add	r0, sp, #40	; 0x28
 8012b5e:	f7f9 fb61 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b62:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012b66:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012b6a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012b6e:	f8d8 0000 	ldr.w	r0, [r8]
 8012b72:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 8012b76:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012b7a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012b7e:	440c      	add	r4, r1
 8012b80:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012b84:	440a      	add	r2, r1
 8012b86:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012b8a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012b8e:	4413      	add	r3, r2
 8012b90:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012b94:	6803      	ldr	r3, [r0, #0]
 8012b96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012b98:	4798      	blx	r3
 8012b9a:	2dff      	cmp	r5, #255	; 0xff
 8012b9c:	d122      	bne.n	8012be4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 8012b9e:	f010 0f01 	tst.w	r0, #1
 8012ba2:	f8d8 0000 	ldr.w	r0, [r8]
 8012ba6:	d020      	beq.n	8012bea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 8012ba8:	2100      	movs	r1, #0
 8012baa:	f04f 0e01 	mov.w	lr, #1
 8012bae:	f8d0 c000 	ldr.w	ip, [r0]
 8012bb2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012bb6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012bba:	e9cd e106 	strd	lr, r1, [sp, #24]
 8012bbe:	f8b9 e000 	ldrh.w	lr, [r9]
 8012bc2:	9503      	str	r5, [sp, #12]
 8012bc4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012bc8:	b2b6      	uxth	r6, r6
 8012bca:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012bce:	9102      	str	r1, [sp, #8]
 8012bd0:	b2bf      	uxth	r7, r7
 8012bd2:	9601      	str	r6, [sp, #4]
 8012bd4:	9700      	str	r7, [sp, #0]
 8012bd6:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 8012bda:	4621      	mov	r1, r4
 8012bdc:	47a8      	blx	r5
 8012bde:	b00c      	add	sp, #48	; 0x30
 8012be0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012be4:	f010 0f04 	tst.w	r0, #4
 8012be8:	e7db      	b.n	8012ba2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 8012bea:	6803      	ldr	r3, [r0, #0]
 8012bec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012bee:	4798      	blx	r3
 8012bf0:	f8b9 3000 	ldrh.w	r3, [r9]
 8012bf4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012bf8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012bfc:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 8012c00:	fb03 1202 	mla	r2, r3, r2, r1
 8012c04:	ebac 0c07 	sub.w	ip, ip, r7
 8012c08:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012c0c:	435e      	muls	r6, r3
 8012c0e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012c12:	2dff      	cmp	r5, #255	; 0xff
 8012c14:	eba3 0707 	sub.w	r7, r3, r7
 8012c18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012c1c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012c20:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012c24:	d049      	beq.n	8012cba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 8012c26:	43eb      	mvns	r3, r5
 8012c28:	fa1f f985 	uxth.w	r9, r5
 8012c2c:	b2db      	uxtb	r3, r3
 8012c2e:	42b0      	cmp	r0, r6
 8012c30:	d266      	bcs.n	8012d00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012c32:	eb00 0a0e 	add.w	sl, r0, lr
 8012c36:	4550      	cmp	r0, sl
 8012c38:	4621      	mov	r1, r4
 8012c3a:	f104 0403 	add.w	r4, r4, #3
 8012c3e:	d25b      	bcs.n	8012cf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8012c40:	8802      	ldrh	r2, [r0, #0]
 8012c42:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012c46:	ea4f 2822 	mov.w	r8, r2, asr #8
 8012c4a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012c4e:	fb11 f109 	smulbb	r1, r1, r9
 8012c52:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012c56:	10d5      	asrs	r5, r2, #3
 8012c58:	fb08 1803 	mla	r8, r8, r3, r1
 8012c5c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012c60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012c64:	fb11 f109 	smulbb	r1, r1, r9
 8012c68:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012c6c:	fb05 1503 	mla	r5, r5, r3, r1
 8012c70:	00d2      	lsls	r2, r2, #3
 8012c72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012c76:	b2d2      	uxtb	r2, r2
 8012c78:	fb11 f109 	smulbb	r1, r1, r9
 8012c7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012c80:	fa1f f888 	uxth.w	r8, r8
 8012c84:	fb02 1203 	mla	r2, r2, r3, r1
 8012c88:	b292      	uxth	r2, r2
 8012c8a:	f108 0101 	add.w	r1, r8, #1
 8012c8e:	b2ad      	uxth	r5, r5
 8012c90:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8012c94:	1c51      	adds	r1, r2, #1
 8012c96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012c9a:	1c69      	adds	r1, r5, #1
 8012c9c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012ca0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8012ca4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012ca8:	096d      	lsrs	r5, r5, #5
 8012caa:	ea42 0208 	orr.w	r2, r2, r8
 8012cae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012cb2:	432a      	orrs	r2, r5
 8012cb4:	f820 2b02 	strh.w	r2, [r0], #2
 8012cb8:	e7bd      	b.n	8012c36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8012cba:	4a14      	ldr	r2, [pc, #80]	; (8012d0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 8012cbc:	42b0      	cmp	r0, r6
 8012cbe:	d21f      	bcs.n	8012d00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012cc0:	eb00 050e 	add.w	r5, r0, lr
 8012cc4:	42a8      	cmp	r0, r5
 8012cc6:	4621      	mov	r1, r4
 8012cc8:	f104 0403 	add.w	r4, r4, #3
 8012ccc:	d210      	bcs.n	8012cf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 8012cce:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012cd2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012cd6:	00db      	lsls	r3, r3, #3
 8012cd8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8012cdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012ce0:	430b      	orrs	r3, r1
 8012ce2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012ce6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8012cea:	f820 3b02 	strh.w	r3, [r0], #2
 8012cee:	e7e9      	b.n	8012cc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8012cf0:	4438      	add	r0, r7
 8012cf2:	eb01 040c 	add.w	r4, r1, ip
 8012cf6:	e7e1      	b.n	8012cbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 8012cf8:	4438      	add	r0, r7
 8012cfa:	eb01 040c 	add.w	r4, r1, ip
 8012cfe:	e796      	b.n	8012c2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 8012d00:	4b03      	ldr	r3, [pc, #12]	; (8012d10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 8012d02:	6818      	ldr	r0, [r3, #0]
 8012d04:	6803      	ldr	r3, [r0, #0]
 8012d06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012d08:	4798      	blx	r3
 8012d0a:	e768      	b.n	8012bde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 8012d0c:	fffff800 	.word	0xfffff800
 8012d10:	2000a198 	.word	0x2000a198
 8012d14:	2000a192 	.word	0x2000a192

08012d18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d1c:	b093      	sub	sp, #76	; 0x4c
 8012d1e:	880e      	ldrh	r6, [r1, #0]
 8012d20:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012d24:	4681      	mov	r9, r0
 8012d26:	4688      	mov	r8, r1
 8012d28:	4615      	mov	r5, r2
 8012d2a:	b136      	cbz	r6, 8012d3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8012d2c:	4b70      	ldr	r3, [pc, #448]	; (8012ef0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012d2e:	4a71      	ldr	r2, [pc, #452]	; (8012ef4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012d30:	4871      	ldr	r0, [pc, #452]	; (8012ef8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012d32:	f44f 719a 	mov.w	r1, #308	; 0x134
 8012d36:	f008 fc1f 	bl	801b578 <__assert_func>
 8012d3a:	6810      	ldr	r0, [r2, #0]
 8012d3c:	6851      	ldr	r1, [r2, #4]
 8012d3e:	4f6f      	ldr	r7, [pc, #444]	; (8012efc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012d40:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8012f00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8012d44:	ac0e      	add	r4, sp, #56	; 0x38
 8012d46:	c403      	stmia	r4!, {r0, r1}
 8012d48:	6818      	ldr	r0, [r3, #0]
 8012d4a:	6859      	ldr	r1, [r3, #4]
 8012d4c:	ac10      	add	r4, sp, #64	; 0x40
 8012d4e:	c403      	stmia	r4!, {r0, r1}
 8012d50:	a80e      	add	r0, sp, #56	; 0x38
 8012d52:	f7f9 fa7f 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d56:	4629      	mov	r1, r5
 8012d58:	a810      	add	r0, sp, #64	; 0x40
 8012d5a:	f7f9 fa63 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d5e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012d62:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012d66:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012d6a:	6838      	ldr	r0, [r7, #0]
 8012d6c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8012d70:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8012d74:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d78:	4489      	add	r9, r1
 8012d7a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012d7e:	440a      	add	r2, r1
 8012d80:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012d84:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012d88:	4413      	add	r3, r2
 8012d8a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012d8e:	6803      	ldr	r3, [r0, #0]
 8012d90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012d92:	4798      	blx	r3
 8012d94:	f010 0f80 	tst.w	r0, #128	; 0x80
 8012d98:	6838      	ldr	r0, [r7, #0]
 8012d9a:	d01c      	beq.n	8012dd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8012d9c:	210b      	movs	r1, #11
 8012d9e:	6802      	ldr	r2, [r0, #0]
 8012da0:	9608      	str	r6, [sp, #32]
 8012da2:	9107      	str	r1, [sp, #28]
 8012da4:	f8bb 1000 	ldrh.w	r1, [fp]
 8012da8:	9106      	str	r1, [sp, #24]
 8012daa:	2101      	movs	r1, #1
 8012dac:	e9cd a104 	strd	sl, r1, [sp, #16]
 8012db0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012db4:	9103      	str	r1, [sp, #12]
 8012db6:	b2a4      	uxth	r4, r4
 8012db8:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8012dbc:	9100      	str	r1, [sp, #0]
 8012dbe:	b2ad      	uxth	r5, r5
 8012dc0:	9502      	str	r5, [sp, #8]
 8012dc2:	9401      	str	r4, [sp, #4]
 8012dc4:	6b94      	ldr	r4, [r2, #56]	; 0x38
 8012dc6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012dca:	4642      	mov	r2, r8
 8012dcc:	4649      	mov	r1, r9
 8012dce:	47a0      	blx	r4
 8012dd0:	b013      	add	sp, #76	; 0x4c
 8012dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dd6:	6803      	ldr	r3, [r0, #0]
 8012dd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012dda:	4798      	blx	r3
 8012ddc:	f8bb 3000 	ldrh.w	r3, [fp]
 8012de0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8012de4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8012de8:	fb03 1202 	mla	r2, r3, r2, r1
 8012dec:	435d      	muls	r5, r3
 8012dee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012df2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8012df6:	920c      	str	r2, [sp, #48]	; 0x30
 8012df8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8012dfc:	1b12      	subs	r2, r2, r4
 8012dfe:	920d      	str	r2, [sp, #52]	; 0x34
 8012e00:	0062      	lsls	r2, r4, #1
 8012e02:	1b1c      	subs	r4, r3, r4
 8012e04:	0063      	lsls	r3, r4, #1
 8012e06:	920a      	str	r2, [sp, #40]	; 0x28
 8012e08:	930b      	str	r3, [sp, #44]	; 0x2c
 8012e0a:	f04f 0e04 	mov.w	lr, #4
 8012e0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e10:	4298      	cmp	r0, r3
 8012e12:	d266      	bcs.n	8012ee2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 8012e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e16:	eb00 0b03 	add.w	fp, r0, r3
 8012e1a:	4558      	cmp	r0, fp
 8012e1c:	d25c      	bcs.n	8012ed8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8012e1e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012e22:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012e26:	f858 2003 	ldr.w	r2, [r8, r3]
 8012e2a:	0e11      	lsrs	r1, r2, #24
 8012e2c:	d012      	beq.n	8012e54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012e2e:	29ff      	cmp	r1, #255	; 0xff
 8012e30:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8012e34:	d110      	bne.n	8012e58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8012e36:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012e3a:	d10d      	bne.n	8012e58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8012e3c:	0953      	lsrs	r3, r2, #5
 8012e3e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012e42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012e46:	f027 0707 	bic.w	r7, r7, #7
 8012e4a:	431f      	orrs	r7, r3
 8012e4c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012e50:	433a      	orrs	r2, r7
 8012e52:	8002      	strh	r2, [r0, #0]
 8012e54:	3002      	adds	r0, #2
 8012e56:	e7e0      	b.n	8012e1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 8012e58:	fb0a f101 	mul.w	r1, sl, r1
 8012e5c:	8806      	ldrh	r6, [r0, #0]
 8012e5e:	1c4b      	adds	r3, r1, #1
 8012e60:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8012e64:	1235      	asrs	r5, r6, #8
 8012e66:	10f4      	asrs	r4, r6, #3
 8012e68:	121b      	asrs	r3, r3, #8
 8012e6a:	00f6      	lsls	r6, r6, #3
 8012e6c:	b299      	uxth	r1, r3
 8012e6e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8012e72:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012e76:	b2f6      	uxtb	r6, r6
 8012e78:	43db      	mvns	r3, r3
 8012e7a:	b2d2      	uxtb	r2, r2
 8012e7c:	b2db      	uxtb	r3, r3
 8012e7e:	fb1c fc01 	smulbb	ip, ip, r1
 8012e82:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8012e86:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012e8a:	fb12 f201 	smulbb	r2, r2, r1
 8012e8e:	fb05 c503 	mla	r5, r5, r3, ip
 8012e92:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012e96:	b2ff      	uxtb	r7, r7
 8012e98:	fb06 2203 	mla	r2, r6, r3, r2
 8012e9c:	b2ad      	uxth	r5, r5
 8012e9e:	fb17 f701 	smulbb	r7, r7, r1
 8012ea2:	b292      	uxth	r2, r2
 8012ea4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8012ea8:	fb04 7403 	mla	r4, r4, r3, r7
 8012eac:	f105 0c01 	add.w	ip, r5, #1
 8012eb0:	1c57      	adds	r7, r2, #1
 8012eb2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012eb6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8012eba:	b2a4      	uxth	r4, r4
 8012ebc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012ec0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8012ec4:	433d      	orrs	r5, r7
 8012ec6:	1c67      	adds	r7, r4, #1
 8012ec8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8012ecc:	0964      	lsrs	r4, r4, #5
 8012ece:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012ed2:	4325      	orrs	r5, r4
 8012ed4:	8005      	strh	r5, [r0, #0]
 8012ed6:	e7bd      	b.n	8012e54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8012ed8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012eda:	4418      	add	r0, r3
 8012edc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012ede:	4499      	add	r9, r3
 8012ee0:	e795      	b.n	8012e0e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 8012ee2:	4b06      	ldr	r3, [pc, #24]	; (8012efc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012ee4:	6818      	ldr	r0, [r3, #0]
 8012ee6:	6803      	ldr	r3, [r0, #0]
 8012ee8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012eea:	4798      	blx	r3
 8012eec:	e770      	b.n	8012dd0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8012eee:	bf00      	nop
 8012ef0:	0801f2a8 	.word	0x0801f2a8
 8012ef4:	0801f9ff 	.word	0x0801f9ff
 8012ef8:	0801f3aa 	.word	0x0801f3aa
 8012efc:	2000a198 	.word	0x2000a198
 8012f00:	2000a192 	.word	0x2000a192

08012f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f08:	4614      	mov	r4, r2
 8012f0a:	880a      	ldrh	r2, [r1, #0]
 8012f0c:	b087      	sub	sp, #28
 8012f0e:	2a02      	cmp	r2, #2
 8012f10:	4680      	mov	r8, r0
 8012f12:	460d      	mov	r5, r1
 8012f14:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8012f18:	d006      	beq.n	8012f28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012f1a:	4b63      	ldr	r3, [pc, #396]	; (80130a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8012f1c:	4a63      	ldr	r2, [pc, #396]	; (80130ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8012f1e:	4864      	ldr	r0, [pc, #400]	; (80130b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8012f20:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8012f24:	f008 fb28 	bl	801b578 <__assert_func>
 8012f28:	2e00      	cmp	r6, #0
 8012f2a:	f000 80b9 	beq.w	80130a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8012f2e:	6820      	ldr	r0, [r4, #0]
 8012f30:	6861      	ldr	r1, [r4, #4]
 8012f32:	af02      	add	r7, sp, #8
 8012f34:	c703      	stmia	r7!, {r0, r1}
 8012f36:	6818      	ldr	r0, [r3, #0]
 8012f38:	6859      	ldr	r1, [r3, #4]
 8012f3a:	af04      	add	r7, sp, #16
 8012f3c:	c703      	stmia	r7!, {r0, r1}
 8012f3e:	a802      	add	r0, sp, #8
 8012f40:	f7f9 f988 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f44:	4621      	mov	r1, r4
 8012f46:	a804      	add	r0, sp, #16
 8012f48:	f7f9 f96c 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f4c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012f50:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012f54:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8012f58:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8012f5c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8012f60:	eb08 0401 	add.w	r4, r8, r1
 8012f64:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012f68:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8012f6c:	440a      	add	r2, r1
 8012f6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012f72:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012f76:	4413      	add	r3, r2
 8012f78:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012f7c:	4b4d      	ldr	r3, [pc, #308]	; (80130b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8012f7e:	6818      	ldr	r0, [r3, #0]
 8012f80:	6803      	ldr	r3, [r0, #0]
 8012f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012f84:	4798      	blx	r3
 8012f86:	4b4c      	ldr	r3, [pc, #304]	; (80130b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8012f88:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8012f8c:	881a      	ldrh	r2, [r3, #0]
 8012f8e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8012f92:	2eff      	cmp	r6, #255	; 0xff
 8012f94:	fb02 c101 	mla	r1, r2, r1, ip
 8012f98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8012f9c:	fb02 f207 	mul.w	r2, r2, r7
 8012fa0:	f105 0104 	add.w	r1, r5, #4
 8012fa4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8012fa8:	461d      	mov	r5, r3
 8012faa:	d05a      	beq.n	8013062 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8012fac:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8012fb0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012fb4:	b2b6      	uxth	r6, r6
 8012fb6:	fa1f fe8e 	uxth.w	lr, lr
 8012fba:	9301      	str	r3, [sp, #4]
 8012fbc:	4282      	cmp	r2, r0
 8012fbe:	d96a      	bls.n	8013096 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8012fc0:	eb00 0b0a 	add.w	fp, r0, sl
 8012fc4:	4583      	cmp	fp, r0
 8012fc6:	d940      	bls.n	801304a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8012fc8:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012fcc:	8805      	ldrh	r5, [r0, #0]
 8012fce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012fd2:	122f      	asrs	r7, r5, #8
 8012fd4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012fd8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012fdc:	fb17 f70e 	smulbb	r7, r7, lr
 8012fe0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012fe4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012fe8:	00ed      	lsls	r5, r5, #3
 8012fea:	fb0c 7c06 	mla	ip, ip, r6, r7
 8012fee:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012ff2:	10df      	asrs	r7, r3, #3
 8012ff4:	b2ed      	uxtb	r5, r5
 8012ff6:	00db      	lsls	r3, r3, #3
 8012ff8:	fa1f fc8c 	uxth.w	ip, ip
 8012ffc:	fb19 f90e 	smulbb	r9, r9, lr
 8013000:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013004:	b2db      	uxtb	r3, r3
 8013006:	fb15 f50e 	smulbb	r5, r5, lr
 801300a:	fb07 9706 	mla	r7, r7, r6, r9
 801300e:	fb03 5306 	mla	r3, r3, r6, r5
 8013012:	f10c 0901 	add.w	r9, ip, #1
 8013016:	b29b      	uxth	r3, r3
 8013018:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801301c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013020:	f103 0c01 	add.w	ip, r3, #1
 8013024:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013028:	b2bf      	uxth	r7, r7
 801302a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801302e:	ea4c 0c09 	orr.w	ip, ip, r9
 8013032:	f107 0901 	add.w	r9, r7, #1
 8013036:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801303a:	097f      	lsrs	r7, r7, #5
 801303c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013040:	ea4c 0c07 	orr.w	ip, ip, r7
 8013044:	f820 cb02 	strh.w	ip, [r0], #2
 8013048:	e7bc      	b.n	8012fc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801304a:	9b01      	ldr	r3, [sp, #4]
 801304c:	881b      	ldrh	r3, [r3, #0]
 801304e:	eba3 0308 	sub.w	r3, r3, r8
 8013052:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013056:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801305a:	eba3 0308 	sub.w	r3, r3, r8
 801305e:	441c      	add	r4, r3
 8013060:	e7ac      	b.n	8012fbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8013062:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013066:	4282      	cmp	r2, r0
 8013068:	d915      	bls.n	8013096 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801306a:	eb00 060a 	add.w	r6, r0, sl
 801306e:	4286      	cmp	r6, r0
 8013070:	d906      	bls.n	8013080 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8013072:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013076:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801307a:	f820 3b02 	strh.w	r3, [r0], #2
 801307e:	e7f6      	b.n	801306e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8013080:	882b      	ldrh	r3, [r5, #0]
 8013082:	eba3 0308 	sub.w	r3, r3, r8
 8013086:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801308a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801308e:	eba3 0308 	sub.w	r3, r3, r8
 8013092:	441c      	add	r4, r3
 8013094:	e7e7      	b.n	8013066 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8013096:	4b07      	ldr	r3, [pc, #28]	; (80130b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013098:	6818      	ldr	r0, [r3, #0]
 801309a:	6803      	ldr	r3, [r0, #0]
 801309c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801309e:	4798      	blx	r3
 80130a0:	b007      	add	sp, #28
 80130a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130a6:	bf00      	nop
 80130a8:	0801f1d8 	.word	0x0801f1d8
 80130ac:	0801f869 	.word	0x0801f869
 80130b0:	0801f3aa 	.word	0x0801f3aa
 80130b4:	2000a198 	.word	0x2000a198
 80130b8:	2000a192 	.word	0x2000a192

080130bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80130bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130c0:	f8b1 9000 	ldrh.w	r9, [r1]
 80130c4:	b091      	sub	sp, #68	; 0x44
 80130c6:	f1b9 0f01 	cmp.w	r9, #1
 80130ca:	4604      	mov	r4, r0
 80130cc:	460f      	mov	r7, r1
 80130ce:	4690      	mov	r8, r2
 80130d0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80130d4:	d006      	beq.n	80130e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80130d6:	4b84      	ldr	r3, [pc, #528]	; (80132e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80130d8:	4a84      	ldr	r2, [pc, #528]	; (80132ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80130da:	4885      	ldr	r0, [pc, #532]	; (80132f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80130dc:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 80130e0:	f008 fa4a 	bl	801b578 <__assert_func>
 80130e4:	2d00      	cmp	r5, #0
 80130e6:	d04f      	beq.n	8013188 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80130e8:	6810      	ldr	r0, [r2, #0]
 80130ea:	6851      	ldr	r1, [r2, #4]
 80130ec:	f8df b208 	ldr.w	fp, [pc, #520]	; 80132f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 80130f0:	ae0c      	add	r6, sp, #48	; 0x30
 80130f2:	c603      	stmia	r6!, {r0, r1}
 80130f4:	6818      	ldr	r0, [r3, #0]
 80130f6:	6859      	ldr	r1, [r3, #4]
 80130f8:	ae0e      	add	r6, sp, #56	; 0x38
 80130fa:	c603      	stmia	r6!, {r0, r1}
 80130fc:	a80c      	add	r0, sp, #48	; 0x30
 80130fe:	f7f9 f8a9 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013102:	4641      	mov	r1, r8
 8013104:	a80e      	add	r0, sp, #56	; 0x38
 8013106:	f7f9 f88d 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801310a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801310e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013112:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8013116:	f8db 0000 	ldr.w	r0, [fp]
 801311a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801311e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8013122:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80132fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8013126:	fb11 2103 	smlabb	r1, r1, r3, r2
 801312a:	440c      	add	r4, r1
 801312c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8013130:	440a      	add	r2, r1
 8013132:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013136:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801313a:	4413      	add	r3, r2
 801313c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8013140:	6803      	ldr	r3, [r0, #0]
 8013142:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013144:	4798      	blx	r3
 8013146:	f010 0f80 	tst.w	r0, #128	; 0x80
 801314a:	f8db 0000 	ldr.w	r0, [fp]
 801314e:	d01e      	beq.n	801318e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8013150:	210b      	movs	r1, #11
 8013152:	f04f 0c00 	mov.w	ip, #0
 8013156:	6802      	ldr	r2, [r0, #0]
 8013158:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801315c:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 8013160:	f8b8 1000 	ldrh.w	r1, [r8]
 8013164:	9504      	str	r5, [sp, #16]
 8013166:	e9cd 9105 	strd	r9, r1, [sp, #20]
 801316a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801316e:	9103      	str	r1, [sp, #12]
 8013170:	fa1f f18a 	uxth.w	r1, sl
 8013174:	9102      	str	r1, [sp, #8]
 8013176:	b2b6      	uxth	r6, r6
 8013178:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 801317c:	9100      	str	r1, [sp, #0]
 801317e:	9601      	str	r6, [sp, #4]
 8013180:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8013182:	4621      	mov	r1, r4
 8013184:	463a      	mov	r2, r7
 8013186:	47a8      	blx	r5
 8013188:	b011      	add	sp, #68	; 0x44
 801318a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801318e:	6803      	ldr	r3, [r0, #0]
 8013190:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013192:	4798      	blx	r3
 8013194:	f8b8 2000 	ldrh.w	r2, [r8]
 8013198:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801319c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80131a0:	2dff      	cmp	r5, #255	; 0xff
 80131a2:	fb02 1303 	mla	r3, r2, r3, r1
 80131a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80131aa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80131ae:	fb0a fa02 	mul.w	sl, sl, r2
 80131b2:	d062      	beq.n	801327a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80131b4:	ea6f 0c05 	mvn.w	ip, r5
 80131b8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80131bc:	930a      	str	r3, [sp, #40]	; 0x28
 80131be:	b2ad      	uxth	r5, r5
 80131c0:	fa5f fc8c 	uxtb.w	ip, ip
 80131c4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80131c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80131ca:	4298      	cmp	r0, r3
 80131cc:	f080 8085 	bcs.w	80132da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80131d0:	eb00 0b09 	add.w	fp, r0, r9
 80131d4:	4558      	cmp	r0, fp
 80131d6:	d246      	bcs.n	8013266 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80131d8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80131dc:	2303      	movs	r3, #3
 80131de:	2204      	movs	r2, #4
 80131e0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80131e4:	eb07 0a0e 	add.w	sl, r7, lr
 80131e8:	8803      	ldrh	r3, [r0, #0]
 80131ea:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80131ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80131f2:	1219      	asrs	r1, r3, #8
 80131f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80131f8:	fb18 f805 	smulbb	r8, r8, r5
 80131fc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8013200:	10da      	asrs	r2, r3, #3
 8013202:	fb01 810c 	mla	r1, r1, ip, r8
 8013206:	00db      	lsls	r3, r3, #3
 8013208:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801320c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013210:	b2db      	uxtb	r3, r3
 8013212:	fb18 f805 	smulbb	r8, r8, r5
 8013216:	fb1e fe05 	smulbb	lr, lr, r5
 801321a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801321e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8013222:	b289      	uxth	r1, r1
 8013224:	fb02 820c 	mla	r2, r2, ip, r8
 8013228:	fb03 e30c 	mla	r3, r3, ip, lr
 801322c:	b292      	uxth	r2, r2
 801322e:	b29b      	uxth	r3, r3
 8013230:	f101 0801 	add.w	r8, r1, #1
 8013234:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013238:	f103 0e01 	add.w	lr, r3, #1
 801323c:	f102 0801 	add.w	r8, r2, #1
 8013240:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8013244:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013248:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801324c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013250:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013254:	ea4e 0101 	orr.w	r1, lr, r1
 8013258:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801325c:	ea41 0108 	orr.w	r1, r1, r8
 8013260:	f820 1b02 	strh.w	r1, [r0], #2
 8013264:	e7b6      	b.n	80131d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8013266:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013268:	881b      	ldrh	r3, [r3, #0]
 801326a:	1b9b      	subs	r3, r3, r6
 801326c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013270:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013274:	1b9b      	subs	r3, r3, r6
 8013276:	441c      	add	r4, r3
 8013278:	e7a6      	b.n	80131c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801327a:	491e      	ldr	r1, [pc, #120]	; (80132f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801327c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013280:	2203      	movs	r2, #3
 8013282:	2504      	movs	r5, #4
 8013284:	4550      	cmp	r0, sl
 8013286:	d228      	bcs.n	80132da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013288:	eb00 0c09 	add.w	ip, r0, r9
 801328c:	4560      	cmp	r0, ip
 801328e:	4623      	mov	r3, r4
 8013290:	d219      	bcs.n	80132c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8013292:	f893 e000 	ldrb.w	lr, [r3]
 8013296:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801329a:	eb07 0b0e 	add.w	fp, r7, lr
 801329e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80132a2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80132a6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80132aa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80132ae:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80132b2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80132b6:	ea43 030b 	orr.w	r3, r3, fp
 80132ba:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80132be:	3401      	adds	r4, #1
 80132c0:	f820 3b02 	strh.w	r3, [r0], #2
 80132c4:	e7e2      	b.n	801328c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80132c6:	f8b8 3000 	ldrh.w	r3, [r8]
 80132ca:	1b9b      	subs	r3, r3, r6
 80132cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80132d0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80132d4:	1b9b      	subs	r3, r3, r6
 80132d6:	441c      	add	r4, r3
 80132d8:	e7d4      	b.n	8013284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80132da:	4b07      	ldr	r3, [pc, #28]	; (80132f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80132dc:	6818      	ldr	r0, [r3, #0]
 80132de:	6803      	ldr	r3, [r0, #0]
 80132e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80132e2:	4798      	blx	r3
 80132e4:	e750      	b.n	8013188 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80132e6:	bf00      	nop
 80132e8:	0801f226 	.word	0x0801f226
 80132ec:	0801f8f2 	.word	0x0801f8f2
 80132f0:	0801f3aa 	.word	0x0801f3aa
 80132f4:	fffff800 	.word	0xfffff800
 80132f8:	2000a198 	.word	0x2000a198
 80132fc:	2000a192 	.word	0x2000a192

08013300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013300:	b430      	push	{r4, r5}
 8013302:	780d      	ldrb	r5, [r1, #0]
 8013304:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013308:	2d01      	cmp	r5, #1
 801330a:	d00a      	beq.n	8013322 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801330c:	d305      	bcc.n	801331a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801330e:	2d02      	cmp	r5, #2
 8013310:	d10b      	bne.n	801332a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013312:	9402      	str	r4, [sp, #8]
 8013314:	bc30      	pop	{r4, r5}
 8013316:	f7ff bdf5 	b.w	8012f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801331a:	9402      	str	r4, [sp, #8]
 801331c:	bc30      	pop	{r4, r5}
 801331e:	f7ff bcfb 	b.w	8012d18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013322:	9402      	str	r4, [sp, #8]
 8013324:	bc30      	pop	{r4, r5}
 8013326:	f7ff bec9 	b.w	80130bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801332a:	bc30      	pop	{r4, r5}
 801332c:	4770      	bx	lr
	...

08013330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013334:	4604      	mov	r4, r0
 8013336:	b087      	sub	sp, #28
 8013338:	6810      	ldr	r0, [r2, #0]
 801333a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801333e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013342:	460e      	mov	r6, r1
 8013344:	6851      	ldr	r1, [r2, #4]
 8013346:	ad02      	add	r5, sp, #8
 8013348:	c503      	stmia	r5!, {r0, r1}
 801334a:	6818      	ldr	r0, [r3, #0]
 801334c:	6859      	ldr	r1, [r3, #4]
 801334e:	ad04      	add	r5, sp, #16
 8013350:	4617      	mov	r7, r2
 8013352:	c503      	stmia	r5!, {r0, r1}
 8013354:	a802      	add	r0, sp, #8
 8013356:	f7f8 ff7d 	bl	800c254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801335a:	4639      	mov	r1, r7
 801335c:	a804      	add	r0, sp, #16
 801335e:	f7f8 ff61 	bl	800c224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013362:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013366:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801336a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801336e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013372:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8013376:	fb11 2103 	smlabb	r1, r1, r3, r2
 801337a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801337e:	440e      	add	r6, r1
 8013380:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013384:	440a      	add	r2, r1
 8013386:	f8ad 2010 	strh.w	r2, [sp, #16]
 801338a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801338e:	4413      	add	r3, r2
 8013390:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013394:	4b77      	ldr	r3, [pc, #476]	; (8013574 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013396:	6818      	ldr	r0, [r3, #0]
 8013398:	6803      	ldr	r3, [r0, #0]
 801339a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801339c:	4798      	blx	r3
 801339e:	f8b9 b000 	ldrh.w	fp, [r9]
 80133a2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80133a6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80133aa:	fb0b 2303 	mla	r3, fp, r3, r2
 80133ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80133b2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80133b6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80133ba:	fb05 f50b 	mul.w	r5, r5, fp
 80133be:	9300      	str	r3, [sp, #0]
 80133c0:	d069      	beq.n	8013496 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80133c2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80133c6:	4558      	cmp	r0, fp
 80133c8:	f080 80cc 	bcs.w	8013564 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80133cc:	9b00      	ldr	r3, [sp, #0]
 80133ce:	18c3      	adds	r3, r0, r3
 80133d0:	9301      	str	r3, [sp, #4]
 80133d2:	4631      	mov	r1, r6
 80133d4:	9b01      	ldr	r3, [sp, #4]
 80133d6:	4298      	cmp	r0, r3
 80133d8:	d24f      	bcs.n	801347a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80133da:	f811 2b01 	ldrb.w	r2, [r1], #1
 80133de:	2a00      	cmp	r2, #0
 80133e0:	d048      	beq.n	8013474 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80133e2:	fb0a f202 	mul.w	r2, sl, r2
 80133e6:	1c53      	adds	r3, r2, #1
 80133e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80133ec:	121b      	asrs	r3, r3, #8
 80133ee:	d041      	beq.n	8013474 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80133f0:	8802      	ldrh	r2, [r0, #0]
 80133f2:	f8b4 c000 	ldrh.w	ip, [r4]
 80133f6:	b29e      	uxth	r6, r3
 80133f8:	1215      	asrs	r5, r2, #8
 80133fa:	43db      	mvns	r3, r3
 80133fc:	b2db      	uxtb	r3, r3
 80133fe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013402:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013406:	fb15 f503 	smulbb	r5, r5, r3
 801340a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801340e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013412:	00d2      	lsls	r2, r2, #3
 8013414:	fb07 5706 	mla	r7, r7, r6, r5
 8013418:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801341c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013420:	b2d2      	uxtb	r2, r2
 8013422:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013426:	b2bf      	uxth	r7, r7
 8013428:	fb1e fe03 	smulbb	lr, lr, r3
 801342c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013430:	fa5f fc8c 	uxtb.w	ip, ip
 8013434:	fb12 f203 	smulbb	r2, r2, r3
 8013438:	fb05 e506 	mla	r5, r5, r6, lr
 801343c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013440:	f107 0e01 	add.w	lr, r7, #1
 8013444:	fa1f fc8c 	uxth.w	ip, ip
 8013448:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801344c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013450:	f10c 0701 	add.w	r7, ip, #1
 8013454:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013458:	b2ad      	uxth	r5, r5
 801345a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801345e:	ea47 070e 	orr.w	r7, r7, lr
 8013462:	f105 0e01 	add.w	lr, r5, #1
 8013466:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801346a:	096d      	lsrs	r5, r5, #5
 801346c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013470:	432f      	orrs	r7, r5
 8013472:	8007      	strh	r7, [r0, #0]
 8013474:	3002      	adds	r0, #2
 8013476:	3402      	adds	r4, #2
 8013478:	e7ac      	b.n	80133d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801347a:	f8b9 3000 	ldrh.w	r3, [r9]
 801347e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013482:	eba3 0308 	sub.w	r3, r3, r8
 8013486:	eba6 0608 	sub.w	r6, r6, r8
 801348a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801348e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013492:	440e      	add	r6, r1
 8013494:	e797      	b.n	80133c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013496:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801349a:	42a8      	cmp	r0, r5
 801349c:	d262      	bcs.n	8013564 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801349e:	9b00      	ldr	r3, [sp, #0]
 80134a0:	4631      	mov	r1, r6
 80134a2:	eb00 0b03 	add.w	fp, r0, r3
 80134a6:	4558      	cmp	r0, fp
 80134a8:	d24e      	bcs.n	8013548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80134aa:	f811 3b01 	ldrb.w	r3, [r1], #1
 80134ae:	b12b      	cbz	r3, 80134bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80134b0:	2bff      	cmp	r3, #255	; 0xff
 80134b2:	f8b4 e000 	ldrh.w	lr, [r4]
 80134b6:	d104      	bne.n	80134c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80134b8:	f8a0 e000 	strh.w	lr, [r0]
 80134bc:	3002      	adds	r0, #2
 80134be:	3402      	adds	r4, #2
 80134c0:	e7f1      	b.n	80134a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80134c2:	8802      	ldrh	r2, [r0, #0]
 80134c4:	b29f      	uxth	r7, r3
 80134c6:	1216      	asrs	r6, r2, #8
 80134c8:	43db      	mvns	r3, r3
 80134ca:	b2db      	uxtb	r3, r3
 80134cc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80134d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80134d4:	fb16 f603 	smulbb	r6, r6, r3
 80134d8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80134dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80134e0:	00d2      	lsls	r2, r2, #3
 80134e2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80134e6:	b2d2      	uxtb	r2, r2
 80134e8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80134ec:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80134f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80134f4:	fb1a fa03 	smulbb	sl, sl, r3
 80134f8:	fa1f fc8c 	uxth.w	ip, ip
 80134fc:	fb12 f303 	smulbb	r3, r2, r3
 8013500:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013504:	fa5f fe8e 	uxtb.w	lr, lr
 8013508:	fb06 a607 	mla	r6, r6, r7, sl
 801350c:	f10c 0201 	add.w	r2, ip, #1
 8013510:	fb0e 3307 	mla	r3, lr, r7, r3
 8013514:	b2b6      	uxth	r6, r6
 8013516:	b29b      	uxth	r3, r3
 8013518:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801351c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013520:	f106 0a01 	add.w	sl, r6, #1
 8013524:	f103 0c01 	add.w	ip, r3, #1
 8013528:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801352c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013530:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013534:	0976      	lsrs	r6, r6, #5
 8013536:	ea4c 0c02 	orr.w	ip, ip, r2
 801353a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801353e:	ea4c 0c06 	orr.w	ip, ip, r6
 8013542:	f8a0 c000 	strh.w	ip, [r0]
 8013546:	e7b9      	b.n	80134bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013548:	f8b9 3000 	ldrh.w	r3, [r9]
 801354c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013550:	eba3 0308 	sub.w	r3, r3, r8
 8013554:	eba6 0608 	sub.w	r6, r6, r8
 8013558:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801355c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013560:	440e      	add	r6, r1
 8013562:	e79a      	b.n	801349a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013564:	4b03      	ldr	r3, [pc, #12]	; (8013574 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013566:	6818      	ldr	r0, [r3, #0]
 8013568:	6803      	ldr	r3, [r0, #0]
 801356a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801356c:	4798      	blx	r3
 801356e:	b007      	add	sp, #28
 8013570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013574:	2000a198 	.word	0x2000a198
 8013578:	2000a192 	.word	0x2000a192

0801357c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801357c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013580:	b089      	sub	sp, #36	; 0x24
 8013582:	4682      	mov	sl, r0
 8013584:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8013588:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801358a:	4689      	mov	r9, r1
 801358c:	4690      	mov	r8, r2
 801358e:	461f      	mov	r7, r3
 8013590:	b355      	cbz	r5, 80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8013592:	4608      	mov	r0, r1
 8013594:	f7fc f922 	bl	800f7dc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013598:	4606      	mov	r6, r0
 801359a:	4648      	mov	r0, r9
 801359c:	f7fc f958 	bl	800f850 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80135a0:	f8ad 000e 	strh.w	r0, [sp, #14]
 80135a4:	4648      	mov	r0, r9
 80135a6:	f8ad 8008 	strh.w	r8, [sp, #8]
 80135aa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80135ae:	f8ad 700a 	strh.w	r7, [sp, #10]
 80135b2:	f7fc fa1b 	bl	800f9ec <_ZNK8touchgfx6Bitmap7getDataEv>
 80135b6:	4606      	mov	r6, r0
 80135b8:	4648      	mov	r0, r9
 80135ba:	f7fc fa49 	bl	800fa50 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80135be:	4680      	mov	r8, r0
 80135c0:	4648      	mov	r0, r9
 80135c2:	f7fc fa9d 	bl	800fb00 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80135c6:	280b      	cmp	r0, #11
 80135c8:	f200 80ca 	bhi.w	8013760 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 80135cc:	e8df f000 	tbb	[pc, r0]
 80135d0:	c8060f1e 	.word	0xc8060f1e
 80135d4:	c8c8c8c8 	.word	0xc8c8c8c8
 80135d8:	16c8c8c8 	.word	0x16c8c8c8
 80135dc:	462b      	mov	r3, r5
 80135de:	4622      	mov	r2, r4
 80135e0:	a902      	add	r1, sp, #8
 80135e2:	4630      	mov	r0, r6
 80135e4:	f7ff f98e 	bl	8012904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80135e8:	b009      	add	sp, #36	; 0x24
 80135ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135ee:	462b      	mov	r3, r5
 80135f0:	4622      	mov	r2, r4
 80135f2:	a902      	add	r1, sp, #8
 80135f4:	4630      	mov	r0, r6
 80135f6:	f7ff fa9b 	bl	8012b30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80135fa:	e7f5      	b.n	80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80135fc:	9500      	str	r5, [sp, #0]
 80135fe:	4623      	mov	r3, r4
 8013600:	aa02      	add	r2, sp, #8
 8013602:	4641      	mov	r1, r8
 8013604:	4630      	mov	r0, r6
 8013606:	f7ff fe7b 	bl	8013300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801360a:	e7ed      	b.n	80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801360c:	4648      	mov	r0, r9
 801360e:	f7fc f9b3 	bl	800f978 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013612:	b950      	cbnz	r0, 801362a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8013614:	e9cd 5000 	strd	r5, r0, [sp]
 8013618:	f8da 3000 	ldr.w	r3, [sl]
 801361c:	aa02      	add	r2, sp, #8
 801361e:	68dd      	ldr	r5, [r3, #12]
 8013620:	4631      	mov	r1, r6
 8013622:	4623      	mov	r3, r4
 8013624:	4650      	mov	r0, sl
 8013626:	47a8      	blx	r5
 8013628:	e7de      	b.n	80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801362a:	af06      	add	r7, sp, #24
 801362c:	4649      	mov	r1, r9
 801362e:	4638      	mov	r0, r7
 8013630:	f7fc f948 	bl	800f8c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013634:	e897 0003 	ldmia.w	r7, {r0, r1}
 8013638:	f10d 0910 	add.w	r9, sp, #16
 801363c:	e889 0003 	stmia.w	r9, {r0, r1}
 8013640:	4648      	mov	r0, r9
 8013642:	4621      	mov	r1, r4
 8013644:	f7f5 feb0 	bl	80093a8 <_ZN8touchgfx4RectaNERKS0_>
 8013648:	4648      	mov	r0, r9
 801364a:	f7f5 fef0 	bl	800942e <_ZNK8touchgfx4Rect7isEmptyEv>
 801364e:	b138      	cbz	r0, 8013660 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 8013650:	9500      	str	r5, [sp, #0]
 8013652:	4623      	mov	r3, r4
 8013654:	aa02      	add	r2, sp, #8
 8013656:	4641      	mov	r1, r8
 8013658:	4630      	mov	r0, r6
 801365a:	f7ff fe69 	bl	8013330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801365e:	e7c3      	b.n	80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8013660:	e9cd 5000 	strd	r5, r0, [sp]
 8013664:	f8da 3000 	ldr.w	r3, [sl]
 8013668:	aa02      	add	r2, sp, #8
 801366a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801366e:	4631      	mov	r1, r6
 8013670:	464b      	mov	r3, r9
 8013672:	4650      	mov	r0, sl
 8013674:	47d8      	blx	fp
 8013676:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801367a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801367e:	4293      	cmp	r3, r2
 8013680:	dd13      	ble.n	80136aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 8013682:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013686:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801368a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801368e:	1a9b      	subs	r3, r3, r2
 8013690:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013694:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013698:	f8ad 301e 	strh.w	r3, [sp, #30]
 801369c:	9500      	str	r5, [sp, #0]
 801369e:	463b      	mov	r3, r7
 80136a0:	aa02      	add	r2, sp, #8
 80136a2:	4641      	mov	r1, r8
 80136a4:	4630      	mov	r0, r6
 80136a6:	f7ff fe43 	bl	8013330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80136aa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80136ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 80136b2:	4293      	cmp	r3, r2
 80136b4:	dd13      	ble.n	80136de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 80136b6:	1a9b      	subs	r3, r3, r2
 80136b8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80136bc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80136c0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80136c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80136c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136cc:	f8ad 101e 	strh.w	r1, [sp, #30]
 80136d0:	9500      	str	r5, [sp, #0]
 80136d2:	463b      	mov	r3, r7
 80136d4:	aa02      	add	r2, sp, #8
 80136d6:	4641      	mov	r1, r8
 80136d8:	4630      	mov	r0, r6
 80136da:	f7ff fe29 	bl	8013330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80136de:	88a2      	ldrh	r2, [r4, #4]
 80136e0:	8823      	ldrh	r3, [r4, #0]
 80136e2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80136e6:	4413      	add	r3, r2
 80136e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80136ec:	440a      	add	r2, r1
 80136ee:	b29b      	uxth	r3, r3
 80136f0:	b292      	uxth	r2, r2
 80136f2:	b211      	sxth	r1, r2
 80136f4:	b218      	sxth	r0, r3
 80136f6:	4288      	cmp	r0, r1
 80136f8:	dd13      	ble.n	8013722 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 80136fa:	1a9b      	subs	r3, r3, r2
 80136fc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013700:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 8013704:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013708:	f8ad 301c 	strh.w	r3, [sp, #28]
 801370c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013710:	9500      	str	r5, [sp, #0]
 8013712:	463b      	mov	r3, r7
 8013714:	aa02      	add	r2, sp, #8
 8013716:	4641      	mov	r1, r8
 8013718:	4630      	mov	r0, r6
 801371a:	f8ad c01a 	strh.w	ip, [sp, #26]
 801371e:	f7ff fe07 	bl	8013330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013722:	88e2      	ldrh	r2, [r4, #6]
 8013724:	8863      	ldrh	r3, [r4, #2]
 8013726:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801372a:	4413      	add	r3, r2
 801372c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013730:	440a      	add	r2, r1
 8013732:	b29b      	uxth	r3, r3
 8013734:	b292      	uxth	r2, r2
 8013736:	b211      	sxth	r1, r2
 8013738:	b218      	sxth	r0, r3
 801373a:	4288      	cmp	r0, r1
 801373c:	f77f af54 	ble.w	80135e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8013740:	f9b4 c000 	ldrsh.w	ip, [r4]
 8013744:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013748:	f8ad c018 	strh.w	ip, [sp, #24]
 801374c:	1a9b      	subs	r3, r3, r2
 801374e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013752:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013756:	f8ad 001c 	strh.w	r0, [sp, #28]
 801375a:	9500      	str	r5, [sp, #0]
 801375c:	463b      	mov	r3, r7
 801375e:	e779      	b.n	8013654 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 8013760:	4b02      	ldr	r3, [pc, #8]	; (801376c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 8013762:	4a03      	ldr	r2, [pc, #12]	; (8013770 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 8013764:	4803      	ldr	r0, [pc, #12]	; (8013774 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8013766:	2181      	movs	r1, #129	; 0x81
 8013768:	f007 ff06 	bl	801b578 <__assert_func>
 801376c:	0801f274 	.word	0x0801f274
 8013770:	0801f97b 	.word	0x0801f97b
 8013774:	0801f3aa 	.word	0x0801f3aa

08013778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013778:	b508      	push	{r3, lr}
 801377a:	b180      	cbz	r0, 801379e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801377c:	2902      	cmp	r1, #2
 801377e:	d014      	beq.n	80137aa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013780:	2903      	cmp	r1, #3
 8013782:	d01d      	beq.n	80137c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013784:	2901      	cmp	r1, #1
 8013786:	d101      	bne.n	801378c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013788:	2001      	movs	r0, #1
 801378a:	bd08      	pop	{r3, pc}
 801378c:	4b0e      	ldr	r3, [pc, #56]	; (80137c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801378e:	8818      	ldrh	r0, [r3, #0]
 8013790:	b990      	cbnz	r0, 80137b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013792:	4b0e      	ldr	r3, [pc, #56]	; (80137cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013794:	4a0e      	ldr	r2, [pc, #56]	; (80137d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013796:	480f      	ldr	r0, [pc, #60]	; (80137d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013798:	2150      	movs	r1, #80	; 0x50
 801379a:	f007 feed 	bl	801b578 <__assert_func>
 801379e:	2902      	cmp	r1, #2
 80137a0:	d00e      	beq.n	80137c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80137a2:	2903      	cmp	r1, #3
 80137a4:	d0f2      	beq.n	801378c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80137a6:	2901      	cmp	r1, #1
 80137a8:	d1ee      	bne.n	8013788 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80137aa:	4b07      	ldr	r3, [pc, #28]	; (80137c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80137ac:	8818      	ldrh	r0, [r3, #0]
 80137ae:	2800      	cmp	r0, #0
 80137b0:	d0ef      	beq.n	8013792 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80137b2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80137b6:	e7e8      	b.n	801378a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80137b8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80137bc:	4240      	negs	r0, r0
 80137be:	e7e4      	b.n	801378a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80137c0:	f04f 30ff 	mov.w	r0, #4294967295
 80137c4:	e7e1      	b.n	801378a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80137c6:	bf00      	nop
 80137c8:	2000a192 	.word	0x2000a192
 80137cc:	0801f500 	.word	0x0801f500
 80137d0:	0801faf8 	.word	0x0801faf8
 80137d4:	0801f542 	.word	0x0801f542

080137d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80137d8:	b508      	push	{r3, lr}
 80137da:	b180      	cbz	r0, 80137fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80137dc:	2902      	cmp	r1, #2
 80137de:	d014      	beq.n	801380a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80137e0:	2903      	cmp	r1, #3
 80137e2:	d018      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80137e4:	2901      	cmp	r1, #1
 80137e6:	d001      	beq.n	80137ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80137e8:	2001      	movs	r0, #1
 80137ea:	e013      	b.n	8013814 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80137ec:	4b0e      	ldr	r3, [pc, #56]	; (8013828 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80137ee:	8818      	ldrh	r0, [r3, #0]
 80137f0:	b970      	cbnz	r0, 8013810 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80137f2:	4b0e      	ldr	r3, [pc, #56]	; (801382c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80137f4:	4a0e      	ldr	r2, [pc, #56]	; (8013830 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80137f6:	480f      	ldr	r0, [pc, #60]	; (8013834 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80137f8:	2150      	movs	r1, #80	; 0x50
 80137fa:	f007 febd 	bl	801b578 <__assert_func>
 80137fe:	2902      	cmp	r1, #2
 8013800:	d009      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013802:	2903      	cmp	r1, #3
 8013804:	d0f0      	beq.n	80137e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013806:	2901      	cmp	r1, #1
 8013808:	d1f0      	bne.n	80137ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801380a:	f04f 30ff 	mov.w	r0, #4294967295
 801380e:	e001      	b.n	8013814 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013810:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013814:	bd08      	pop	{r3, pc}
 8013816:	4b04      	ldr	r3, [pc, #16]	; (8013828 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013818:	8818      	ldrh	r0, [r3, #0]
 801381a:	2800      	cmp	r0, #0
 801381c:	d0e9      	beq.n	80137f2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801381e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013822:	4240      	negs	r0, r0
 8013824:	e7f6      	b.n	8013814 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013826:	bf00      	nop
 8013828:	2000a192 	.word	0x2000a192
 801382c:	0801f500 	.word	0x0801f500
 8013830:	0801faf8 	.word	0x0801faf8
 8013834:	0801f542 	.word	0x0801f542

08013838 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801383c:	b097      	sub	sp, #92	; 0x5c
 801383e:	9109      	str	r1, [sp, #36]	; 0x24
 8013840:	a912      	add	r1, sp, #72	; 0x48
 8013842:	e881 000c 	stmia.w	r1, {r2, r3}
 8013846:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801384a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801384e:	9308      	str	r3, [sp, #32]
 8013850:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013854:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8013858:	930f      	str	r3, [sp, #60]	; 0x3c
 801385a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801385e:	930a      	str	r3, [sp, #40]	; 0x28
 8013860:	7988      	ldrb	r0, [r1, #6]
 8013862:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 8013866:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 801386a:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 801386e:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8013872:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 8013876:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801387a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801387e:	4303      	orrs	r3, r0
 8013880:	9307      	str	r3, [sp, #28]
 8013882:	f000 81b3 	beq.w	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013886:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801388a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801388e:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013892:	ea59 0903 	orrs.w	r9, r9, r3
 8013896:	f000 81a9 	beq.w	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801389a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801389e:	b29b      	uxth	r3, r3
 80138a0:	2e00      	cmp	r6, #0
 80138a2:	f000 8137 	beq.w	8013b14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80138a6:	1af6      	subs	r6, r6, r3
 80138a8:	b2b6      	uxth	r6, r6
 80138aa:	0434      	lsls	r4, r6, #16
 80138ac:	d502      	bpl.n	80138b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80138ae:	1bad      	subs	r5, r5, r6
 80138b0:	b22d      	sxth	r5, r5
 80138b2:	2600      	movs	r6, #0
 80138b4:	f9b2 1000 	ldrsh.w	r1, [r2]
 80138b8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80138bc:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 80138c0:	428d      	cmp	r5, r1
 80138c2:	b28b      	uxth	r3, r1
 80138c4:	bfbf      	itttt	lt
 80138c6:	18f6      	addlt	r6, r6, r3
 80138c8:	1b75      	sublt	r5, r6, r5
 80138ca:	b2ae      	uxthlt	r6, r5
 80138cc:	460d      	movlt	r5, r1
 80138ce:	8891      	ldrh	r1, [r2, #4]
 80138d0:	440b      	add	r3, r1
 80138d2:	b21b      	sxth	r3, r3
 80138d4:	930e      	str	r3, [sp, #56]	; 0x38
 80138d6:	88d3      	ldrh	r3, [r2, #6]
 80138d8:	8852      	ldrh	r2, [r2, #2]
 80138da:	4413      	add	r3, r2
 80138dc:	b21b      	sxth	r3, r3
 80138de:	930d      	str	r3, [sp, #52]	; 0x34
 80138e0:	4b8e      	ldr	r3, [pc, #568]	; (8013b1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 80138e2:	9a08      	ldr	r2, [sp, #32]
 80138e4:	f893 b000 	ldrb.w	fp, [r3]
 80138e8:	f10b 30ff 	add.w	r0, fp, #4294967295
 80138ec:	4243      	negs	r3, r0
 80138ee:	4143      	adcs	r3, r0
 80138f0:	930c      	str	r3, [sp, #48]	; 0x30
 80138f2:	4629      	mov	r1, r5
 80138f4:	4653      	mov	r3, sl
 80138f6:	a812      	add	r0, sp, #72	; 0x48
 80138f8:	f7f8 fb04 	bl	800bf04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80138fc:	4629      	mov	r1, r5
 80138fe:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8013902:	4653      	mov	r3, sl
 8013904:	9a08      	ldr	r2, [sp, #32]
 8013906:	a812      	add	r0, sp, #72	; 0x48
 8013908:	f7f8 fb14 	bl	800bf34 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801390c:	a916      	add	r1, sp, #88	; 0x58
 801390e:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013912:	a815      	add	r0, sp, #84	; 0x54
 8013914:	f7f8 fc70 	bl	800c1f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013918:	f1ba 0f00 	cmp.w	sl, #0
 801391c:	f040 8106 	bne.w	8013b2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 8013920:	f1bb 0f01 	cmp.w	fp, #1
 8013924:	f040 810a 	bne.w	8013b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8013928:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801392a:	b153      	cbz	r3, 8013942 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 801392c:	9a07      	ldr	r2, [sp, #28]
 801392e:	2408      	movs	r4, #8
 8013930:	fb94 f3f8 	sdiv	r3, r4, r8
 8013934:	1e5c      	subs	r4, r3, #1
 8013936:	4414      	add	r4, r2
 8013938:	fb94 f4f3 	sdiv	r4, r4, r3
 801393c:	fb14 f403 	smulbb	r4, r4, r3
 8013940:	b2a4      	uxth	r4, r4
 8013942:	b906      	cbnz	r6, 8013946 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013944:	b16f      	cbz	r7, 8013962 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8013946:	fb07 6304 	mla	r3, r7, r4, r6
 801394a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801394c:	fb08 f303 	mul.w	r3, r8, r3
 8013950:	463a      	mov	r2, r7
 8013952:	f003 0707 	and.w	r7, r3, #7
 8013956:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801395a:	9326      	str	r3, [sp, #152]	; 0x98
 801395c:	eba9 0302 	sub.w	r3, r9, r2
 8013960:	930b      	str	r3, [sp, #44]	; 0x2c
 8013962:	4651      	mov	r1, sl
 8013964:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013966:	f7ff ff07 	bl	8013778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801396a:	4651      	mov	r1, sl
 801396c:	4681      	mov	r9, r0
 801396e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013970:	f7ff ff32 	bl	80137d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013974:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013976:	9a08      	ldr	r2, [sp, #32]
 8013978:	eba3 0a02 	sub.w	sl, r3, r2
 801397c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801397e:	459a      	cmp	sl, r3
 8013980:	bfa8      	it	ge
 8013982:	469a      	movge	sl, r3
 8013984:	f1ba 0f00 	cmp.w	sl, #0
 8013988:	4683      	mov	fp, r0
 801398a:	f340 812f 	ble.w	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801398e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013990:	1bad      	subs	r5, r5, r6
 8013992:	1b5d      	subs	r5, r3, r5
 8013994:	9b07      	ldr	r3, [sp, #28]
 8013996:	429d      	cmp	r5, r3
 8013998:	bfd4      	ite	le
 801399a:	ebc6 0605 	rsble	r6, r6, r5
 801399e:	ebc6 0603 	rsbgt	r6, r6, r3
 80139a2:	2e00      	cmp	r6, #0
 80139a4:	f340 8122 	ble.w	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80139a8:	1ba4      	subs	r4, r4, r6
 80139aa:	fb08 f304 	mul.w	r3, r8, r4
 80139ae:	930d      	str	r3, [sp, #52]	; 0x34
 80139b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139b2:	2b00      	cmp	r3, #0
 80139b4:	f040 811f 	bne.w	8013bf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 80139b8:	4b59      	ldr	r3, [pc, #356]	; (8013b20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 80139ba:	6818      	ldr	r0, [r3, #0]
 80139bc:	6803      	ldr	r3, [r0, #0]
 80139be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80139c0:	4798      	blx	r3
 80139c2:	2301      	movs	r3, #1
 80139c4:	fa03 f308 	lsl.w	r3, r3, r8
 80139c8:	4a56      	ldr	r2, [pc, #344]	; (8013b24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 80139ca:	3b01      	subs	r3, #1
 80139cc:	b2db      	uxtb	r3, r3
 80139ce:	8811      	ldrh	r1, [r2, #0]
 80139d0:	930c      	str	r3, [sp, #48]	; 0x30
 80139d2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80139d6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80139da:	fb01 2303 	mla	r3, r1, r3, r2
 80139de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80139e2:	9308      	str	r3, [sp, #32]
 80139e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139e6:	0c1a      	lsrs	r2, r3, #16
 80139e8:	b2d3      	uxtb	r3, r2
 80139ea:	9311      	str	r3, [sp, #68]	; 0x44
 80139ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139ee:	0a1b      	lsrs	r3, r3, #8
 80139f0:	b2d9      	uxtb	r1, r3
 80139f2:	9110      	str	r1, [sp, #64]	; 0x40
 80139f4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80139f6:	b2c9      	uxtb	r1, r1
 80139f8:	910e      	str	r1, [sp, #56]	; 0x38
 80139fa:	494b      	ldr	r1, [pc, #300]	; (8013b28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 80139fc:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 8013a00:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013a02:	00db      	lsls	r3, r3, #3
 8013a04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a08:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8013a0c:	431a      	orrs	r2, r3
 8013a0e:	b293      	uxth	r3, r2
 8013a10:	930f      	str	r3, [sp, #60]	; 0x3c
 8013a12:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013a14:	781a      	ldrb	r2, [r3, #0]
 8013a16:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8013a1a:	413a      	asrs	r2, r7
 8013a1c:	fb06 b919 	mls	r9, r6, r9, fp
 8013a20:	fb03 fb06 	mul.w	fp, r3, r6
 8013a24:	b2d2      	uxtb	r2, r2
 8013a26:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a28:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8013a2c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013a30:	f0c0 80f6 	bcc.w	8013c20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8013a34:	f8dd c020 	ldr.w	ip, [sp, #32]
 8013a38:	46b6      	mov	lr, r6
 8013a3a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8013a3e:	f0c0 80de 	bcc.w	8013bfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8013a42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a44:	4013      	ands	r3, r2
 8013a46:	d055      	beq.n	8013af4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 8013a48:	20ff      	movs	r0, #255	; 0xff
 8013a4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013a4c:	fb90 f1f1 	sdiv	r1, r0, r1
 8013a50:	434b      	muls	r3, r1
 8013a52:	2bfe      	cmp	r3, #254	; 0xfe
 8013a54:	dd03      	ble.n	8013a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8013a56:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013a58:	4281      	cmp	r1, r0
 8013a5a:	f000 80ce 	beq.w	8013bfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 8013a5e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013a60:	f8bc 4000 	ldrh.w	r4, [ip]
 8013a64:	fb11 f303 	smulbb	r3, r1, r3
 8013a68:	b29b      	uxth	r3, r3
 8013a6a:	1c59      	adds	r1, r3, #1
 8013a6c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013a70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013a74:	b29d      	uxth	r5, r3
 8013a76:	43db      	mvns	r3, r3
 8013a78:	b2db      	uxtb	r3, r3
 8013a7a:	9307      	str	r3, [sp, #28]
 8013a7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a7e:	1220      	asrs	r0, r4, #8
 8013a80:	fb13 f905 	smulbb	r9, r3, r5
 8013a84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013a88:	9b07      	ldr	r3, [sp, #28]
 8013a8a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013a8e:	fb00 9003 	mla	r0, r0, r3, r9
 8013a92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a94:	10e1      	asrs	r1, r4, #3
 8013a96:	fb13 f905 	smulbb	r9, r3, r5
 8013a9a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013a9e:	9b07      	ldr	r3, [sp, #28]
 8013aa0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013aa4:	fb01 9103 	mla	r1, r1, r3, r9
 8013aa8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013aaa:	00e4      	lsls	r4, r4, #3
 8013aac:	fb13 f505 	smulbb	r5, r3, r5
 8013ab0:	b2e4      	uxtb	r4, r4
 8013ab2:	9b07      	ldr	r3, [sp, #28]
 8013ab4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013ab8:	fb04 5403 	mla	r4, r4, r3, r5
 8013abc:	b280      	uxth	r0, r0
 8013abe:	b2a4      	uxth	r4, r4
 8013ac0:	1c43      	adds	r3, r0, #1
 8013ac2:	f104 0901 	add.w	r9, r4, #1
 8013ac6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013aca:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8013ace:	b289      	uxth	r1, r1
 8013ad0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8013ad4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013ad8:	ea49 0000 	orr.w	r0, r9, r0
 8013adc:	f101 0901 	add.w	r9, r1, #1
 8013ae0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8013ae4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013ae8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013aec:	ea40 0009 	orr.w	r0, r0, r9
 8013af0:	f8ac 0000 	strh.w	r0, [ip]
 8013af4:	4447      	add	r7, r8
 8013af6:	b2bf      	uxth	r7, r7
 8013af8:	2f07      	cmp	r7, #7
 8013afa:	bf81      	itttt	hi
 8013afc:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8013afe:	785a      	ldrbhi	r2, [r3, #1]
 8013b00:	3301      	addhi	r3, #1
 8013b02:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013b04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b06:	bf9a      	itte	ls
 8013b08:	fa42 f208 	asrls.w	r2, r2, r8
 8013b0c:	b2d2      	uxtbls	r2, r2
 8013b0e:	2700      	movhi	r7, #0
 8013b10:	449c      	add	ip, r3
 8013b12:	e792      	b.n	8013a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8013b14:	441d      	add	r5, r3
 8013b16:	b22d      	sxth	r5, r5
 8013b18:	e6cc      	b.n	80138b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013b1a:	bf00      	nop
 8013b1c:	2000a190 	.word	0x2000a190
 8013b20:	2000a198 	.word	0x2000a198
 8013b24:	2000a192 	.word	0x2000a192
 8013b28:	fffff800 	.word	0xfffff800
 8013b2c:	f1ba 0f01 	cmp.w	sl, #1
 8013b30:	f47f aefa 	bne.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b34:	f1bb 0f01 	cmp.w	fp, #1
 8013b38:	f47f aef6 	bne.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b3c:	f8df b104 	ldr.w	fp, [pc, #260]	; 8013c44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8013b40:	f8db 0000 	ldr.w	r0, [fp]
 8013b44:	6803      	ldr	r3, [r0, #0]
 8013b46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013b48:	4798      	blx	r3
 8013b4a:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8013b4e:	465a      	mov	r2, fp
 8013b50:	d006      	beq.n	8013b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8013b52:	f1b8 0f04 	cmp.w	r8, #4
 8013b56:	d14c      	bne.n	8013bf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8013b58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013b5a:	3300      	adds	r3, #0
 8013b5c:	bf18      	it	ne
 8013b5e:	2301      	movne	r3, #1
 8013b60:	0581      	lsls	r1, r0, #22
 8013b62:	d566      	bpl.n	8013c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8013b64:	f1b8 0f08 	cmp.w	r8, #8
 8013b68:	d163      	bne.n	8013c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8013b6a:	2b00      	cmp	r3, #0
 8013b6c:	bf0c      	ite	eq
 8013b6e:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 8013b72:	f44f 7c80 	movne.w	ip, #256	; 0x100
 8013b76:	2e00      	cmp	r6, #0
 8013b78:	f47f aed6 	bne.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b7c:	2f00      	cmp	r7, #0
 8013b7e:	f47f aed3 	bne.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b82:	9b07      	ldr	r3, [sp, #28]
 8013b84:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013b86:	18eb      	adds	r3, r5, r3
 8013b88:	428b      	cmp	r3, r1
 8013b8a:	f73f aecd 	bgt.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b8e:	9b08      	ldr	r3, [sp, #32]
 8013b90:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013b92:	444b      	add	r3, r9
 8013b94:	428b      	cmp	r3, r1
 8013b96:	f73f aec7 	bgt.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013b9a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013b9c:	4e28      	ldr	r6, [pc, #160]	; (8013c40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 8013b9e:	6810      	ldr	r0, [r2, #0]
 8013ba0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8013ba4:	6803      	ldr	r3, [r0, #0]
 8013ba6:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 8013baa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013bae:	4331      	orrs	r1, r6
 8013bb0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8013bb2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8013bb4:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8013bb8:	f8cd c014 	str.w	ip, [sp, #20]
 8013bbc:	f1b8 0f08 	cmp.w	r8, #8
 8013bc0:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8013bc4:	bf18      	it	ne
 8013bc6:	3401      	addne	r4, #1
 8013bc8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013bcc:	bf18      	it	ne
 8013bce:	f024 0401 	bicne.w	r4, r4, #1
 8013bd2:	ea41 0106 	orr.w	r1, r1, r6
 8013bd6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013bd8:	bf18      	it	ne
 8013bda:	b2a4      	uxthne	r4, r4
 8013bdc:	b289      	uxth	r1, r1
 8013bde:	e9cd 1603 	strd	r1, r6, [sp, #12]
 8013be2:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8013be6:	9400      	str	r4, [sp, #0]
 8013be8:	9926      	ldr	r1, [sp, #152]	; 0x98
 8013bea:	47a8      	blx	r5
 8013bec:	b017      	add	sp, #92	; 0x5c
 8013bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bf2:	2300      	movs	r3, #0
 8013bf4:	e7b4      	b.n	8013b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8013bf6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013bf8:	e6e3      	b.n	80139c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 8013bfa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013bfc:	e778      	b.n	8013af0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 8013bfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c00:	b153      	cbz	r3, 8013c18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 8013c02:	441f      	add	r7, r3
 8013c04:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c06:	b2bf      	uxth	r7, r7
 8013c08:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8013c0c:	f007 0707 	and.w	r7, r7, #7
 8013c10:	781a      	ldrb	r2, [r3, #0]
 8013c12:	9326      	str	r3, [sp, #152]	; 0x98
 8013c14:	413a      	asrs	r2, r7
 8013c16:	b2d2      	uxtb	r2, r2
 8013c18:	9b08      	ldr	r3, [sp, #32]
 8013c1a:	445b      	add	r3, fp
 8013c1c:	9308      	str	r3, [sp, #32]
 8013c1e:	e705      	b.n	8013a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8013c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c22:	2b00      	cmp	r3, #0
 8013c24:	d1e2      	bne.n	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013c26:	4b07      	ldr	r3, [pc, #28]	; (8013c44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 8013c28:	6818      	ldr	r0, [r3, #0]
 8013c2a:	6803      	ldr	r3, [r0, #0]
 8013c2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c2e:	4798      	blx	r3
 8013c30:	e7dc      	b.n	8013bec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013c32:	2b00      	cmp	r3, #0
 8013c34:	f43f ae78 	beq.w	8013928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013c38:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8013c3c:	e79b      	b.n	8013b76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8013c3e:	bf00      	nop
 8013c40:	fffff800 	.word	0xfffff800
 8013c44:	2000a198 	.word	0x2000a198

08013c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013c48:	b538      	push	{r3, r4, r5, lr}
 8013c4a:	4c15      	ldr	r4, [pc, #84]	; (8013ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013c4c:	7823      	ldrb	r3, [r4, #0]
 8013c4e:	f3bf 8f5b 	dmb	ish
 8013c52:	07da      	lsls	r2, r3, #31
 8013c54:	4605      	mov	r5, r0
 8013c56:	d40b      	bmi.n	8013c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013c58:	4620      	mov	r0, r4
 8013c5a:	f007 fc60 	bl	801b51e <__cxa_guard_acquire>
 8013c5e:	b138      	cbz	r0, 8013c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013c60:	4620      	mov	r0, r4
 8013c62:	f007 fc68 	bl	801b536 <__cxa_guard_release>
 8013c66:	4a0f      	ldr	r2, [pc, #60]	; (8013ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013c68:	490f      	ldr	r1, [pc, #60]	; (8013ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013c6a:	4810      	ldr	r0, [pc, #64]	; (8013cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013c6c:	f007 fc50 	bl	801b510 <__aeabi_atexit>
 8013c70:	4c0f      	ldr	r4, [pc, #60]	; (8013cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013c72:	7823      	ldrb	r3, [r4, #0]
 8013c74:	f3bf 8f5b 	dmb	ish
 8013c78:	07db      	lsls	r3, r3, #31
 8013c7a:	d40b      	bmi.n	8013c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013c7c:	4620      	mov	r0, r4
 8013c7e:	f007 fc4e 	bl	801b51e <__cxa_guard_acquire>
 8013c82:	b138      	cbz	r0, 8013c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013c84:	4620      	mov	r0, r4
 8013c86:	f007 fc56 	bl	801b536 <__cxa_guard_release>
 8013c8a:	4a06      	ldr	r2, [pc, #24]	; (8013ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013c8c:	4909      	ldr	r1, [pc, #36]	; (8013cb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013c8e:	480a      	ldr	r0, [pc, #40]	; (8013cb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013c90:	f007 fc3e 	bl	801b510 <__aeabi_atexit>
 8013c94:	4b05      	ldr	r3, [pc, #20]	; (8013cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013c96:	612b      	str	r3, [r5, #16]
 8013c98:	4b07      	ldr	r3, [pc, #28]	; (8013cb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013c9a:	616b      	str	r3, [r5, #20]
 8013c9c:	bd38      	pop	{r3, r4, r5, pc}
 8013c9e:	bf00      	nop
 8013ca0:	2000a264 	.word	0x2000a264
 8013ca4:	20000000 	.word	0x20000000
 8013ca8:	08012055 	.word	0x08012055
 8013cac:	200000a4 	.word	0x200000a4
 8013cb0:	2000a268 	.word	0x2000a268
 8013cb4:	08012053 	.word	0x08012053
 8013cb8:	200000a8 	.word	0x200000a8

08013cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013cbc:	b538      	push	{r3, r4, r5, lr}
 8013cbe:	4c15      	ldr	r4, [pc, #84]	; (8013d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013cc0:	7823      	ldrb	r3, [r4, #0]
 8013cc2:	f3bf 8f5b 	dmb	ish
 8013cc6:	07da      	lsls	r2, r3, #31
 8013cc8:	4605      	mov	r5, r0
 8013cca:	d40b      	bmi.n	8013ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013ccc:	4620      	mov	r0, r4
 8013cce:	f007 fc26 	bl	801b51e <__cxa_guard_acquire>
 8013cd2:	b138      	cbz	r0, 8013ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013cd4:	4620      	mov	r0, r4
 8013cd6:	f007 fc2e 	bl	801b536 <__cxa_guard_release>
 8013cda:	4a0f      	ldr	r2, [pc, #60]	; (8013d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013cdc:	490f      	ldr	r1, [pc, #60]	; (8013d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013cde:	4810      	ldr	r0, [pc, #64]	; (8013d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013ce0:	f007 fc16 	bl	801b510 <__aeabi_atexit>
 8013ce4:	4c0f      	ldr	r4, [pc, #60]	; (8013d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013ce6:	7823      	ldrb	r3, [r4, #0]
 8013ce8:	f3bf 8f5b 	dmb	ish
 8013cec:	07db      	lsls	r3, r3, #31
 8013cee:	d40b      	bmi.n	8013d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013cf0:	4620      	mov	r0, r4
 8013cf2:	f007 fc14 	bl	801b51e <__cxa_guard_acquire>
 8013cf6:	b138      	cbz	r0, 8013d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013cf8:	4620      	mov	r0, r4
 8013cfa:	f007 fc1c 	bl	801b536 <__cxa_guard_release>
 8013cfe:	4a06      	ldr	r2, [pc, #24]	; (8013d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013d00:	4909      	ldr	r1, [pc, #36]	; (8013d28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013d02:	480a      	ldr	r0, [pc, #40]	; (8013d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013d04:	f007 fc04 	bl	801b510 <__aeabi_atexit>
 8013d08:	4b05      	ldr	r3, [pc, #20]	; (8013d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013d0a:	60ab      	str	r3, [r5, #8]
 8013d0c:	4b07      	ldr	r3, [pc, #28]	; (8013d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013d0e:	60eb      	str	r3, [r5, #12]
 8013d10:	bd38      	pop	{r3, r4, r5, pc}
 8013d12:	bf00      	nop
 8013d14:	2000a23c 	.word	0x2000a23c
 8013d18:	20000000 	.word	0x20000000
 8013d1c:	08012059 	.word	0x08012059
 8013d20:	2000007c 	.word	0x2000007c
 8013d24:	2000a240 	.word	0x2000a240
 8013d28:	08012057 	.word	0x08012057
 8013d2c:	20000080 	.word	0x20000080

08013d30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013d30:	b510      	push	{r4, lr}
 8013d32:	4604      	mov	r4, r0
 8013d34:	f7ff ff88 	bl	8013c48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013d38:	4620      	mov	r0, r4
 8013d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d3e:	f7ff bfbd 	b.w	8013cbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013d44:	b538      	push	{r3, r4, r5, lr}
 8013d46:	4c15      	ldr	r4, [pc, #84]	; (8013d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013d48:	7823      	ldrb	r3, [r4, #0]
 8013d4a:	f3bf 8f5b 	dmb	ish
 8013d4e:	07da      	lsls	r2, r3, #31
 8013d50:	4605      	mov	r5, r0
 8013d52:	d40b      	bmi.n	8013d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013d54:	4620      	mov	r0, r4
 8013d56:	f007 fbe2 	bl	801b51e <__cxa_guard_acquire>
 8013d5a:	b138      	cbz	r0, 8013d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013d5c:	4620      	mov	r0, r4
 8013d5e:	f007 fbea 	bl	801b536 <__cxa_guard_release>
 8013d62:	4a0f      	ldr	r2, [pc, #60]	; (8013da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013d64:	490f      	ldr	r1, [pc, #60]	; (8013da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013d66:	4810      	ldr	r0, [pc, #64]	; (8013da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013d68:	f007 fbd2 	bl	801b510 <__aeabi_atexit>
 8013d6c:	4c0f      	ldr	r4, [pc, #60]	; (8013dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013d6e:	7823      	ldrb	r3, [r4, #0]
 8013d70:	f3bf 8f5b 	dmb	ish
 8013d74:	07db      	lsls	r3, r3, #31
 8013d76:	d40b      	bmi.n	8013d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013d78:	4620      	mov	r0, r4
 8013d7a:	f007 fbd0 	bl	801b51e <__cxa_guard_acquire>
 8013d7e:	b138      	cbz	r0, 8013d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013d80:	4620      	mov	r0, r4
 8013d82:	f007 fbd8 	bl	801b536 <__cxa_guard_release>
 8013d86:	4a06      	ldr	r2, [pc, #24]	; (8013da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013d88:	4909      	ldr	r1, [pc, #36]	; (8013db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013d8a:	480a      	ldr	r0, [pc, #40]	; (8013db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013d8c:	f007 fbc0 	bl	801b510 <__aeabi_atexit>
 8013d90:	4b05      	ldr	r3, [pc, #20]	; (8013da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013d92:	622b      	str	r3, [r5, #32]
 8013d94:	4b07      	ldr	r3, [pc, #28]	; (8013db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013d96:	626b      	str	r3, [r5, #36]	; 0x24
 8013d98:	bd38      	pop	{r3, r4, r5, pc}
 8013d9a:	bf00      	nop
 8013d9c:	2000a26c 	.word	0x2000a26c
 8013da0:	20000000 	.word	0x20000000
 8013da4:	0801204d 	.word	0x0801204d
 8013da8:	200000ac 	.word	0x200000ac
 8013dac:	2000a270 	.word	0x2000a270
 8013db0:	0801204b 	.word	0x0801204b
 8013db4:	200000b0 	.word	0x200000b0

08013db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013db8:	b538      	push	{r3, r4, r5, lr}
 8013dba:	4c15      	ldr	r4, [pc, #84]	; (8013e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013dbc:	7823      	ldrb	r3, [r4, #0]
 8013dbe:	f3bf 8f5b 	dmb	ish
 8013dc2:	07da      	lsls	r2, r3, #31
 8013dc4:	4605      	mov	r5, r0
 8013dc6:	d40b      	bmi.n	8013de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013dc8:	4620      	mov	r0, r4
 8013dca:	f007 fba8 	bl	801b51e <__cxa_guard_acquire>
 8013dce:	b138      	cbz	r0, 8013de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013dd0:	4620      	mov	r0, r4
 8013dd2:	f007 fbb0 	bl	801b536 <__cxa_guard_release>
 8013dd6:	4a0f      	ldr	r2, [pc, #60]	; (8013e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013dd8:	490f      	ldr	r1, [pc, #60]	; (8013e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013dda:	4810      	ldr	r0, [pc, #64]	; (8013e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013ddc:	f007 fb98 	bl	801b510 <__aeabi_atexit>
 8013de0:	4c0f      	ldr	r4, [pc, #60]	; (8013e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013de2:	7823      	ldrb	r3, [r4, #0]
 8013de4:	f3bf 8f5b 	dmb	ish
 8013de8:	07db      	lsls	r3, r3, #31
 8013dea:	d40b      	bmi.n	8013e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013dec:	4620      	mov	r0, r4
 8013dee:	f007 fb96 	bl	801b51e <__cxa_guard_acquire>
 8013df2:	b138      	cbz	r0, 8013e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013df4:	4620      	mov	r0, r4
 8013df6:	f007 fb9e 	bl	801b536 <__cxa_guard_release>
 8013dfa:	4a06      	ldr	r2, [pc, #24]	; (8013e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013dfc:	4909      	ldr	r1, [pc, #36]	; (8013e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013dfe:	480a      	ldr	r0, [pc, #40]	; (8013e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013e00:	f007 fb86 	bl	801b510 <__aeabi_atexit>
 8013e04:	4b05      	ldr	r3, [pc, #20]	; (8013e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013e06:	61ab      	str	r3, [r5, #24]
 8013e08:	4b07      	ldr	r3, [pc, #28]	; (8013e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013e0a:	61eb      	str	r3, [r5, #28]
 8013e0c:	bd38      	pop	{r3, r4, r5, pc}
 8013e0e:	bf00      	nop
 8013e10:	2000a244 	.word	0x2000a244
 8013e14:	20000000 	.word	0x20000000
 8013e18:	08012051 	.word	0x08012051
 8013e1c:	20000084 	.word	0x20000084
 8013e20:	2000a248 	.word	0x2000a248
 8013e24:	0801204f 	.word	0x0801204f
 8013e28:	20000088 	.word	0x20000088

08013e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013e2c:	b510      	push	{r4, lr}
 8013e2e:	4604      	mov	r4, r0
 8013e30:	f7ff ff88 	bl	8013d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013e34:	4620      	mov	r0, r4
 8013e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e3a:	f7ff bfbd 	b.w	8013db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013e40:	b538      	push	{r3, r4, r5, lr}
 8013e42:	4c15      	ldr	r4, [pc, #84]	; (8013e98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013e44:	7823      	ldrb	r3, [r4, #0]
 8013e46:	f3bf 8f5b 	dmb	ish
 8013e4a:	07da      	lsls	r2, r3, #31
 8013e4c:	4605      	mov	r5, r0
 8013e4e:	d40b      	bmi.n	8013e68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013e50:	4620      	mov	r0, r4
 8013e52:	f007 fb64 	bl	801b51e <__cxa_guard_acquire>
 8013e56:	b138      	cbz	r0, 8013e68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013e58:	4620      	mov	r0, r4
 8013e5a:	f007 fb6c 	bl	801b536 <__cxa_guard_release>
 8013e5e:	4a0f      	ldr	r2, [pc, #60]	; (8013e9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013e60:	490f      	ldr	r1, [pc, #60]	; (8013ea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013e62:	4810      	ldr	r0, [pc, #64]	; (8013ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013e64:	f007 fb54 	bl	801b510 <__aeabi_atexit>
 8013e68:	4c0f      	ldr	r4, [pc, #60]	; (8013ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013e6a:	7823      	ldrb	r3, [r4, #0]
 8013e6c:	f3bf 8f5b 	dmb	ish
 8013e70:	07db      	lsls	r3, r3, #31
 8013e72:	d40b      	bmi.n	8013e8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013e74:	4620      	mov	r0, r4
 8013e76:	f007 fb52 	bl	801b51e <__cxa_guard_acquire>
 8013e7a:	b138      	cbz	r0, 8013e8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013e7c:	4620      	mov	r0, r4
 8013e7e:	f007 fb5a 	bl	801b536 <__cxa_guard_release>
 8013e82:	4a06      	ldr	r2, [pc, #24]	; (8013e9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013e84:	4909      	ldr	r1, [pc, #36]	; (8013eac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013e86:	480a      	ldr	r0, [pc, #40]	; (8013eb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013e88:	f007 fb42 	bl	801b510 <__aeabi_atexit>
 8013e8c:	4b05      	ldr	r3, [pc, #20]	; (8013ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013e8e:	632b      	str	r3, [r5, #48]	; 0x30
 8013e90:	4b07      	ldr	r3, [pc, #28]	; (8013eb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013e92:	636b      	str	r3, [r5, #52]	; 0x34
 8013e94:	bd38      	pop	{r3, r4, r5, pc}
 8013e96:	bf00      	nop
 8013e98:	2000a27c 	.word	0x2000a27c
 8013e9c:	20000000 	.word	0x20000000
 8013ea0:	08012045 	.word	0x08012045
 8013ea4:	200000bc 	.word	0x200000bc
 8013ea8:	2000a280 	.word	0x2000a280
 8013eac:	08012043 	.word	0x08012043
 8013eb0:	200000c0 	.word	0x200000c0

08013eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013eb4:	b538      	push	{r3, r4, r5, lr}
 8013eb6:	4c15      	ldr	r4, [pc, #84]	; (8013f0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013eb8:	7823      	ldrb	r3, [r4, #0]
 8013eba:	f3bf 8f5b 	dmb	ish
 8013ebe:	07da      	lsls	r2, r3, #31
 8013ec0:	4605      	mov	r5, r0
 8013ec2:	d40b      	bmi.n	8013edc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013ec4:	4620      	mov	r0, r4
 8013ec6:	f007 fb2a 	bl	801b51e <__cxa_guard_acquire>
 8013eca:	b138      	cbz	r0, 8013edc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013ecc:	4620      	mov	r0, r4
 8013ece:	f007 fb32 	bl	801b536 <__cxa_guard_release>
 8013ed2:	4a0f      	ldr	r2, [pc, #60]	; (8013f10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013ed4:	490f      	ldr	r1, [pc, #60]	; (8013f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013ed6:	4810      	ldr	r0, [pc, #64]	; (8013f18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013ed8:	f007 fb1a 	bl	801b510 <__aeabi_atexit>
 8013edc:	4c0f      	ldr	r4, [pc, #60]	; (8013f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013ede:	7823      	ldrb	r3, [r4, #0]
 8013ee0:	f3bf 8f5b 	dmb	ish
 8013ee4:	07db      	lsls	r3, r3, #31
 8013ee6:	d40b      	bmi.n	8013f00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013ee8:	4620      	mov	r0, r4
 8013eea:	f007 fb18 	bl	801b51e <__cxa_guard_acquire>
 8013eee:	b138      	cbz	r0, 8013f00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	f007 fb20 	bl	801b536 <__cxa_guard_release>
 8013ef6:	4a06      	ldr	r2, [pc, #24]	; (8013f10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013ef8:	4909      	ldr	r1, [pc, #36]	; (8013f20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013efa:	480a      	ldr	r0, [pc, #40]	; (8013f24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013efc:	f007 fb08 	bl	801b510 <__aeabi_atexit>
 8013f00:	4b05      	ldr	r3, [pc, #20]	; (8013f18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013f02:	62ab      	str	r3, [r5, #40]	; 0x28
 8013f04:	4b07      	ldr	r3, [pc, #28]	; (8013f24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013f06:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013f08:	bd38      	pop	{r3, r4, r5, pc}
 8013f0a:	bf00      	nop
 8013f0c:	2000a24c 	.word	0x2000a24c
 8013f10:	20000000 	.word	0x20000000
 8013f14:	08012049 	.word	0x08012049
 8013f18:	2000008c 	.word	0x2000008c
 8013f1c:	2000a250 	.word	0x2000a250
 8013f20:	08012047 	.word	0x08012047
 8013f24:	20000090 	.word	0x20000090

08013f28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013f28:	b510      	push	{r4, lr}
 8013f2a:	4604      	mov	r4, r0
 8013f2c:	f7ff ff88 	bl	8013e40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013f30:	4620      	mov	r0, r4
 8013f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f36:	f7ff bfbd 	b.w	8013eb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013f3c:	b538      	push	{r3, r4, r5, lr}
 8013f3e:	4c15      	ldr	r4, [pc, #84]	; (8013f94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013f40:	7823      	ldrb	r3, [r4, #0]
 8013f42:	f3bf 8f5b 	dmb	ish
 8013f46:	07da      	lsls	r2, r3, #31
 8013f48:	4605      	mov	r5, r0
 8013f4a:	d40b      	bmi.n	8013f64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	f007 fae6 	bl	801b51e <__cxa_guard_acquire>
 8013f52:	b138      	cbz	r0, 8013f64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013f54:	4620      	mov	r0, r4
 8013f56:	f007 faee 	bl	801b536 <__cxa_guard_release>
 8013f5a:	4a0f      	ldr	r2, [pc, #60]	; (8013f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013f5c:	490f      	ldr	r1, [pc, #60]	; (8013f9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013f5e:	4810      	ldr	r0, [pc, #64]	; (8013fa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013f60:	f007 fad6 	bl	801b510 <__aeabi_atexit>
 8013f64:	4c0f      	ldr	r4, [pc, #60]	; (8013fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013f66:	7823      	ldrb	r3, [r4, #0]
 8013f68:	f3bf 8f5b 	dmb	ish
 8013f6c:	07db      	lsls	r3, r3, #31
 8013f6e:	d40b      	bmi.n	8013f88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013f70:	4620      	mov	r0, r4
 8013f72:	f007 fad4 	bl	801b51e <__cxa_guard_acquire>
 8013f76:	b138      	cbz	r0, 8013f88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013f78:	4620      	mov	r0, r4
 8013f7a:	f007 fadc 	bl	801b536 <__cxa_guard_release>
 8013f7e:	4a06      	ldr	r2, [pc, #24]	; (8013f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013f80:	4909      	ldr	r1, [pc, #36]	; (8013fa8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013f82:	480a      	ldr	r0, [pc, #40]	; (8013fac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013f84:	f007 fac4 	bl	801b510 <__aeabi_atexit>
 8013f88:	4b05      	ldr	r3, [pc, #20]	; (8013fa0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013f8a:	652b      	str	r3, [r5, #80]	; 0x50
 8013f8c:	4b07      	ldr	r3, [pc, #28]	; (8013fac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013f8e:	656b      	str	r3, [r5, #84]	; 0x54
 8013f90:	bd38      	pop	{r3, r4, r5, pc}
 8013f92:	bf00      	nop
 8013f94:	2000a284 	.word	0x2000a284
 8013f98:	20000000 	.word	0x20000000
 8013f9c:	08012035 	.word	0x08012035
 8013fa0:	200000c4 	.word	0x200000c4
 8013fa4:	2000a288 	.word	0x2000a288
 8013fa8:	08012033 	.word	0x08012033
 8013fac:	200000c8 	.word	0x200000c8

08013fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013fb0:	b538      	push	{r3, r4, r5, lr}
 8013fb2:	4c15      	ldr	r4, [pc, #84]	; (8014008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013fb4:	7823      	ldrb	r3, [r4, #0]
 8013fb6:	f3bf 8f5b 	dmb	ish
 8013fba:	07da      	lsls	r2, r3, #31
 8013fbc:	4605      	mov	r5, r0
 8013fbe:	d40b      	bmi.n	8013fd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013fc0:	4620      	mov	r0, r4
 8013fc2:	f007 faac 	bl	801b51e <__cxa_guard_acquire>
 8013fc6:	b138      	cbz	r0, 8013fd8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013fc8:	4620      	mov	r0, r4
 8013fca:	f007 fab4 	bl	801b536 <__cxa_guard_release>
 8013fce:	4a0f      	ldr	r2, [pc, #60]	; (801400c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013fd0:	490f      	ldr	r1, [pc, #60]	; (8014010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013fd2:	4810      	ldr	r0, [pc, #64]	; (8014014 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013fd4:	f007 fa9c 	bl	801b510 <__aeabi_atexit>
 8013fd8:	4c0f      	ldr	r4, [pc, #60]	; (8014018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013fda:	7823      	ldrb	r3, [r4, #0]
 8013fdc:	f3bf 8f5b 	dmb	ish
 8013fe0:	07db      	lsls	r3, r3, #31
 8013fe2:	d40b      	bmi.n	8013ffc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	f007 fa9a 	bl	801b51e <__cxa_guard_acquire>
 8013fea:	b138      	cbz	r0, 8013ffc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013fec:	4620      	mov	r0, r4
 8013fee:	f007 faa2 	bl	801b536 <__cxa_guard_release>
 8013ff2:	4a06      	ldr	r2, [pc, #24]	; (801400c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013ff4:	4909      	ldr	r1, [pc, #36]	; (801401c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013ff6:	480a      	ldr	r0, [pc, #40]	; (8014020 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013ff8:	f007 fa8a 	bl	801b510 <__aeabi_atexit>
 8013ffc:	4b05      	ldr	r3, [pc, #20]	; (8014014 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013ffe:	64ab      	str	r3, [r5, #72]	; 0x48
 8014000:	4b07      	ldr	r3, [pc, #28]	; (8014020 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014002:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014004:	bd38      	pop	{r3, r4, r5, pc}
 8014006:	bf00      	nop
 8014008:	2000a28c 	.word	0x2000a28c
 801400c:	20000000 	.word	0x20000000
 8014010:	08012039 	.word	0x08012039
 8014014:	200000cc 	.word	0x200000cc
 8014018:	2000a290 	.word	0x2000a290
 801401c:	08012037 	.word	0x08012037
 8014020:	200000d0 	.word	0x200000d0

08014024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014024:	b538      	push	{r3, r4, r5, lr}
 8014026:	4c15      	ldr	r4, [pc, #84]	; (801407c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014028:	7823      	ldrb	r3, [r4, #0]
 801402a:	f3bf 8f5b 	dmb	ish
 801402e:	07da      	lsls	r2, r3, #31
 8014030:	4605      	mov	r5, r0
 8014032:	d40b      	bmi.n	801404c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014034:	4620      	mov	r0, r4
 8014036:	f007 fa72 	bl	801b51e <__cxa_guard_acquire>
 801403a:	b138      	cbz	r0, 801404c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801403c:	4620      	mov	r0, r4
 801403e:	f007 fa7a 	bl	801b536 <__cxa_guard_release>
 8014042:	4a0f      	ldr	r2, [pc, #60]	; (8014080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014044:	490f      	ldr	r1, [pc, #60]	; (8014084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014046:	4810      	ldr	r0, [pc, #64]	; (8014088 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014048:	f007 fa62 	bl	801b510 <__aeabi_atexit>
 801404c:	4c0f      	ldr	r4, [pc, #60]	; (801408c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801404e:	7823      	ldrb	r3, [r4, #0]
 8014050:	f3bf 8f5b 	dmb	ish
 8014054:	07db      	lsls	r3, r3, #31
 8014056:	d40b      	bmi.n	8014070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014058:	4620      	mov	r0, r4
 801405a:	f007 fa60 	bl	801b51e <__cxa_guard_acquire>
 801405e:	b138      	cbz	r0, 8014070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014060:	4620      	mov	r0, r4
 8014062:	f007 fa68 	bl	801b536 <__cxa_guard_release>
 8014066:	4a06      	ldr	r2, [pc, #24]	; (8014080 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014068:	4909      	ldr	r1, [pc, #36]	; (8014090 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801406a:	480a      	ldr	r0, [pc, #40]	; (8014094 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801406c:	f007 fa50 	bl	801b510 <__aeabi_atexit>
 8014070:	4b05      	ldr	r3, [pc, #20]	; (8014088 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014072:	642b      	str	r3, [r5, #64]	; 0x40
 8014074:	4b07      	ldr	r3, [pc, #28]	; (8014094 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014076:	646b      	str	r3, [r5, #68]	; 0x44
 8014078:	bd38      	pop	{r3, r4, r5, pc}
 801407a:	bf00      	nop
 801407c:	2000a254 	.word	0x2000a254
 8014080:	20000000 	.word	0x20000000
 8014084:	0801203d 	.word	0x0801203d
 8014088:	20000094 	.word	0x20000094
 801408c:	2000a258 	.word	0x2000a258
 8014090:	0801203b 	.word	0x0801203b
 8014094:	20000098 	.word	0x20000098

08014098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8014098:	b538      	push	{r3, r4, r5, lr}
 801409a:	4c15      	ldr	r4, [pc, #84]	; (80140f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801409c:	7823      	ldrb	r3, [r4, #0]
 801409e:	f3bf 8f5b 	dmb	ish
 80140a2:	07da      	lsls	r2, r3, #31
 80140a4:	4605      	mov	r5, r0
 80140a6:	d40b      	bmi.n	80140c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80140a8:	4620      	mov	r0, r4
 80140aa:	f007 fa38 	bl	801b51e <__cxa_guard_acquire>
 80140ae:	b138      	cbz	r0, 80140c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80140b0:	4620      	mov	r0, r4
 80140b2:	f007 fa40 	bl	801b536 <__cxa_guard_release>
 80140b6:	4a0f      	ldr	r2, [pc, #60]	; (80140f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80140b8:	490f      	ldr	r1, [pc, #60]	; (80140f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80140ba:	4810      	ldr	r0, [pc, #64]	; (80140fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80140bc:	f007 fa28 	bl	801b510 <__aeabi_atexit>
 80140c0:	4c0f      	ldr	r4, [pc, #60]	; (8014100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80140c2:	7823      	ldrb	r3, [r4, #0]
 80140c4:	f3bf 8f5b 	dmb	ish
 80140c8:	07db      	lsls	r3, r3, #31
 80140ca:	d40b      	bmi.n	80140e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80140cc:	4620      	mov	r0, r4
 80140ce:	f007 fa26 	bl	801b51e <__cxa_guard_acquire>
 80140d2:	b138      	cbz	r0, 80140e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80140d4:	4620      	mov	r0, r4
 80140d6:	f007 fa2e 	bl	801b536 <__cxa_guard_release>
 80140da:	4a06      	ldr	r2, [pc, #24]	; (80140f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80140dc:	4909      	ldr	r1, [pc, #36]	; (8014104 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80140de:	480a      	ldr	r0, [pc, #40]	; (8014108 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80140e0:	f007 fa16 	bl	801b510 <__aeabi_atexit>
 80140e4:	4b05      	ldr	r3, [pc, #20]	; (80140fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80140e6:	63ab      	str	r3, [r5, #56]	; 0x38
 80140e8:	4b07      	ldr	r3, [pc, #28]	; (8014108 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80140ea:	63eb      	str	r3, [r5, #60]	; 0x3c
 80140ec:	bd38      	pop	{r3, r4, r5, pc}
 80140ee:	bf00      	nop
 80140f0:	2000a274 	.word	0x2000a274
 80140f4:	20000000 	.word	0x20000000
 80140f8:	08012041 	.word	0x08012041
 80140fc:	200000b4 	.word	0x200000b4
 8014100:	2000a278 	.word	0x2000a278
 8014104:	0801203f 	.word	0x0801203f
 8014108:	200000b8 	.word	0x200000b8

0801410c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801410c:	b510      	push	{r4, lr}
 801410e:	4604      	mov	r4, r0
 8014110:	f7ff ff14 	bl	8013f3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014114:	4620      	mov	r0, r4
 8014116:	f7ff ff85 	bl	8014024 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801411a:	4620      	mov	r0, r4
 801411c:	f7ff ff48 	bl	8013fb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014120:	4620      	mov	r0, r4
 8014122:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014126:	f7ff bfb7 	b.w	8014098 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801412c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801412c:	b538      	push	{r3, r4, r5, lr}
 801412e:	4c15      	ldr	r4, [pc, #84]	; (8014184 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014130:	7823      	ldrb	r3, [r4, #0]
 8014132:	f3bf 8f5b 	dmb	ish
 8014136:	07da      	lsls	r2, r3, #31
 8014138:	4605      	mov	r5, r0
 801413a:	d40b      	bmi.n	8014154 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801413c:	4620      	mov	r0, r4
 801413e:	f007 f9ee 	bl	801b51e <__cxa_guard_acquire>
 8014142:	b138      	cbz	r0, 8014154 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014144:	4620      	mov	r0, r4
 8014146:	f007 f9f6 	bl	801b536 <__cxa_guard_release>
 801414a:	4a0f      	ldr	r2, [pc, #60]	; (8014188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801414c:	490f      	ldr	r1, [pc, #60]	; (801418c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801414e:	4810      	ldr	r0, [pc, #64]	; (8014190 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014150:	f007 f9de 	bl	801b510 <__aeabi_atexit>
 8014154:	4c0f      	ldr	r4, [pc, #60]	; (8014194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014156:	7823      	ldrb	r3, [r4, #0]
 8014158:	f3bf 8f5b 	dmb	ish
 801415c:	07db      	lsls	r3, r3, #31
 801415e:	d40b      	bmi.n	8014178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014160:	4620      	mov	r0, r4
 8014162:	f007 f9dc 	bl	801b51e <__cxa_guard_acquire>
 8014166:	b138      	cbz	r0, 8014178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014168:	4620      	mov	r0, r4
 801416a:	f007 f9e4 	bl	801b536 <__cxa_guard_release>
 801416e:	4a06      	ldr	r2, [pc, #24]	; (8014188 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014170:	4909      	ldr	r1, [pc, #36]	; (8014198 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8014172:	480a      	ldr	r0, [pc, #40]	; (801419c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014174:	f007 f9cc 	bl	801b510 <__aeabi_atexit>
 8014178:	4b05      	ldr	r3, [pc, #20]	; (8014190 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801417a:	662b      	str	r3, [r5, #96]	; 0x60
 801417c:	4b07      	ldr	r3, [pc, #28]	; (801419c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801417e:	666b      	str	r3, [r5, #100]	; 0x64
 8014180:	bd38      	pop	{r3, r4, r5, pc}
 8014182:	bf00      	nop
 8014184:	2000a25c 	.word	0x2000a25c
 8014188:	20000000 	.word	0x20000000
 801418c:	0801202d 	.word	0x0801202d
 8014190:	2000009c 	.word	0x2000009c
 8014194:	2000a260 	.word	0x2000a260
 8014198:	0801202b 	.word	0x0801202b
 801419c:	200000a0 	.word	0x200000a0

080141a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80141a0:	b538      	push	{r3, r4, r5, lr}
 80141a2:	4c15      	ldr	r4, [pc, #84]	; (80141f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80141a4:	7823      	ldrb	r3, [r4, #0]
 80141a6:	f3bf 8f5b 	dmb	ish
 80141aa:	07da      	lsls	r2, r3, #31
 80141ac:	4605      	mov	r5, r0
 80141ae:	d40b      	bmi.n	80141c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80141b0:	4620      	mov	r0, r4
 80141b2:	f007 f9b4 	bl	801b51e <__cxa_guard_acquire>
 80141b6:	b138      	cbz	r0, 80141c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80141b8:	4620      	mov	r0, r4
 80141ba:	f007 f9bc 	bl	801b536 <__cxa_guard_release>
 80141be:	4a0f      	ldr	r2, [pc, #60]	; (80141fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80141c0:	490f      	ldr	r1, [pc, #60]	; (8014200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80141c2:	4810      	ldr	r0, [pc, #64]	; (8014204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80141c4:	f007 f9a4 	bl	801b510 <__aeabi_atexit>
 80141c8:	4c0f      	ldr	r4, [pc, #60]	; (8014208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80141ca:	7823      	ldrb	r3, [r4, #0]
 80141cc:	f3bf 8f5b 	dmb	ish
 80141d0:	07db      	lsls	r3, r3, #31
 80141d2:	d40b      	bmi.n	80141ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80141d4:	4620      	mov	r0, r4
 80141d6:	f007 f9a2 	bl	801b51e <__cxa_guard_acquire>
 80141da:	b138      	cbz	r0, 80141ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80141dc:	4620      	mov	r0, r4
 80141de:	f007 f9aa 	bl	801b536 <__cxa_guard_release>
 80141e2:	4a06      	ldr	r2, [pc, #24]	; (80141fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80141e4:	4909      	ldr	r1, [pc, #36]	; (801420c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80141e6:	480a      	ldr	r0, [pc, #40]	; (8014210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80141e8:	f007 f992 	bl	801b510 <__aeabi_atexit>
 80141ec:	4b05      	ldr	r3, [pc, #20]	; (8014204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80141ee:	65ab      	str	r3, [r5, #88]	; 0x58
 80141f0:	4b07      	ldr	r3, [pc, #28]	; (8014210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80141f2:	65eb      	str	r3, [r5, #92]	; 0x5c
 80141f4:	bd38      	pop	{r3, r4, r5, pc}
 80141f6:	bf00      	nop
 80141f8:	2000a234 	.word	0x2000a234
 80141fc:	20000000 	.word	0x20000000
 8014200:	08012031 	.word	0x08012031
 8014204:	20000074 	.word	0x20000074
 8014208:	2000a238 	.word	0x2000a238
 801420c:	0801202f 	.word	0x0801202f
 8014210:	20000078 	.word	0x20000078

08014214 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014214:	b510      	push	{r4, lr}
 8014216:	4604      	mov	r4, r0
 8014218:	f7ff ff88 	bl	801412c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801421c:	4620      	mov	r0, r4
 801421e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014222:	f7ff bfbd 	b.w	80141a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014228:	b538      	push	{r3, r4, r5, lr}
 801422a:	4c15      	ldr	r4, [pc, #84]	; (8014280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801422c:	7823      	ldrb	r3, [r4, #0]
 801422e:	f3bf 8f5b 	dmb	ish
 8014232:	07da      	lsls	r2, r3, #31
 8014234:	4605      	mov	r5, r0
 8014236:	d40b      	bmi.n	8014250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014238:	4620      	mov	r0, r4
 801423a:	f007 f970 	bl	801b51e <__cxa_guard_acquire>
 801423e:	b138      	cbz	r0, 8014250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014240:	4620      	mov	r0, r4
 8014242:	f007 f978 	bl	801b536 <__cxa_guard_release>
 8014246:	4a0f      	ldr	r2, [pc, #60]	; (8014284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014248:	490f      	ldr	r1, [pc, #60]	; (8014288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801424a:	4810      	ldr	r0, [pc, #64]	; (801428c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801424c:	f007 f960 	bl	801b510 <__aeabi_atexit>
 8014250:	4c0f      	ldr	r4, [pc, #60]	; (8014290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014252:	7823      	ldrb	r3, [r4, #0]
 8014254:	f3bf 8f5b 	dmb	ish
 8014258:	07db      	lsls	r3, r3, #31
 801425a:	d40b      	bmi.n	8014274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801425c:	4620      	mov	r0, r4
 801425e:	f007 f95e 	bl	801b51e <__cxa_guard_acquire>
 8014262:	b138      	cbz	r0, 8014274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014264:	4620      	mov	r0, r4
 8014266:	f007 f966 	bl	801b536 <__cxa_guard_release>
 801426a:	4a06      	ldr	r2, [pc, #24]	; (8014284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801426c:	4909      	ldr	r1, [pc, #36]	; (8014294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801426e:	480a      	ldr	r0, [pc, #40]	; (8014298 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014270:	f007 f94e 	bl	801b510 <__aeabi_atexit>
 8014274:	4b05      	ldr	r3, [pc, #20]	; (801428c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014276:	672b      	str	r3, [r5, #112]	; 0x70
 8014278:	4b07      	ldr	r3, [pc, #28]	; (8014298 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801427a:	676b      	str	r3, [r5, #116]	; 0x74
 801427c:	bd38      	pop	{r3, r4, r5, pc}
 801427e:	bf00      	nop
 8014280:	2000a22c 	.word	0x2000a22c
 8014284:	20000000 	.word	0x20000000
 8014288:	08012025 	.word	0x08012025
 801428c:	2000006c 	.word	0x2000006c
 8014290:	2000a230 	.word	0x2000a230
 8014294:	08012023 	.word	0x08012023
 8014298:	20000070 	.word	0x20000070

0801429c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801429c:	b538      	push	{r3, r4, r5, lr}
 801429e:	4c15      	ldr	r4, [pc, #84]	; (80142f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80142a0:	7823      	ldrb	r3, [r4, #0]
 80142a2:	f3bf 8f5b 	dmb	ish
 80142a6:	07da      	lsls	r2, r3, #31
 80142a8:	4605      	mov	r5, r0
 80142aa:	d40b      	bmi.n	80142c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80142ac:	4620      	mov	r0, r4
 80142ae:	f007 f936 	bl	801b51e <__cxa_guard_acquire>
 80142b2:	b138      	cbz	r0, 80142c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80142b4:	4620      	mov	r0, r4
 80142b6:	f007 f93e 	bl	801b536 <__cxa_guard_release>
 80142ba:	4a0f      	ldr	r2, [pc, #60]	; (80142f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80142bc:	490f      	ldr	r1, [pc, #60]	; (80142fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80142be:	4810      	ldr	r0, [pc, #64]	; (8014300 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80142c0:	f007 f926 	bl	801b510 <__aeabi_atexit>
 80142c4:	4c0f      	ldr	r4, [pc, #60]	; (8014304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80142c6:	7823      	ldrb	r3, [r4, #0]
 80142c8:	f3bf 8f5b 	dmb	ish
 80142cc:	07db      	lsls	r3, r3, #31
 80142ce:	d40b      	bmi.n	80142e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80142d0:	4620      	mov	r0, r4
 80142d2:	f007 f924 	bl	801b51e <__cxa_guard_acquire>
 80142d6:	b138      	cbz	r0, 80142e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80142d8:	4620      	mov	r0, r4
 80142da:	f007 f92c 	bl	801b536 <__cxa_guard_release>
 80142de:	4a06      	ldr	r2, [pc, #24]	; (80142f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80142e0:	4909      	ldr	r1, [pc, #36]	; (8014308 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80142e2:	480a      	ldr	r0, [pc, #40]	; (801430c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80142e4:	f007 f914 	bl	801b510 <__aeabi_atexit>
 80142e8:	4b05      	ldr	r3, [pc, #20]	; (8014300 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80142ea:	66ab      	str	r3, [r5, #104]	; 0x68
 80142ec:	4b07      	ldr	r3, [pc, #28]	; (801430c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80142ee:	66eb      	str	r3, [r5, #108]	; 0x6c
 80142f0:	bd38      	pop	{r3, r4, r5, pc}
 80142f2:	bf00      	nop
 80142f4:	2000a224 	.word	0x2000a224
 80142f8:	20000000 	.word	0x20000000
 80142fc:	08012029 	.word	0x08012029
 8014300:	20000064 	.word	0x20000064
 8014304:	2000a228 	.word	0x2000a228
 8014308:	08012027 	.word	0x08012027
 801430c:	20000068 	.word	0x20000068

08014310 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014310:	b510      	push	{r4, lr}
 8014312:	4604      	mov	r4, r0
 8014314:	f7ff ff88 	bl	8014228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014318:	4620      	mov	r0, r4
 801431a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801431e:	f7ff bfbd 	b.w	801429c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014322 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014322:	b510      	push	{r4, lr}
 8014324:	4604      	mov	r4, r0
 8014326:	f7ff fff3 	bl	8014310 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801432a:	4620      	mov	r0, r4
 801432c:	f7ff ff72 	bl	8014214 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014330:	4620      	mov	r0, r4
 8014332:	f7ff fdf9 	bl	8013f28 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014336:	4620      	mov	r0, r4
 8014338:	f7ff fcfa 	bl	8013d30 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801433c:	4620      	mov	r0, r4
 801433e:	f7ff fd75 	bl	8013e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014342:	4620      	mov	r0, r4
 8014344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014348:	f7ff bee0 	b.w	801410c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801434c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801434c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014350:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014354:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014358:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801435c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014360:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014364:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014368:	8808      	ldrh	r0, [r1, #0]
 801436a:	fb0e 4708 	mla	r7, lr, r8, r4
 801436e:	f1be 0f00 	cmp.w	lr, #0
 8014372:	eb02 0a07 	add.w	sl, r2, r7
 8014376:	db37      	blt.n	80143e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014378:	45f3      	cmp	fp, lr
 801437a:	dd35      	ble.n	80143e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801437c:	2c00      	cmp	r4, #0
 801437e:	db31      	blt.n	80143e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014380:	45a0      	cmp	r8, r4
 8014382:	dd2f      	ble.n	80143e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014384:	5dd2      	ldrb	r2, [r2, r7]
 8014386:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801438a:	1c62      	adds	r2, r4, #1
 801438c:	d42f      	bmi.n	80143ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801438e:	4590      	cmp	r8, r2
 8014390:	dd2d      	ble.n	80143ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014392:	b366      	cbz	r6, 80143ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014394:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014398:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801439c:	f11e 0e01 	adds.w	lr, lr, #1
 80143a0:	d429      	bmi.n	80143f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80143a2:	45f3      	cmp	fp, lr
 80143a4:	dd27      	ble.n	80143f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80143a6:	f1bc 0f00 	cmp.w	ip, #0
 80143aa:	f000 80a1 	beq.w	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80143ae:	2c00      	cmp	r4, #0
 80143b0:	db1f      	blt.n	80143f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80143b2:	45a0      	cmp	r8, r4
 80143b4:	dd1d      	ble.n	80143f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80143b6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80143ba:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80143be:	3401      	adds	r4, #1
 80143c0:	d41c      	bmi.n	80143fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80143c2:	45a0      	cmp	r8, r4
 80143c4:	dd1a      	ble.n	80143fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80143c6:	b1de      	cbz	r6, 8014400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80143c8:	44d0      	add	r8, sl
 80143ca:	f898 2001 	ldrb.w	r2, [r8, #1]
 80143ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80143d2:	2e0f      	cmp	r6, #15
 80143d4:	d915      	bls.n	8014402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80143d6:	4b49      	ldr	r3, [pc, #292]	; (80144fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80143d8:	4a49      	ldr	r2, [pc, #292]	; (8014500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80143da:	484a      	ldr	r0, [pc, #296]	; (8014504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80143dc:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 80143e0:	f007 f8ca 	bl	801b578 <__assert_func>
 80143e4:	4681      	mov	r9, r0
 80143e6:	e7d0      	b.n	801438a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80143e8:	4607      	mov	r7, r0
 80143ea:	4681      	mov	r9, r0
 80143ec:	e7d6      	b.n	801439c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80143ee:	4607      	mov	r7, r0
 80143f0:	e7d4      	b.n	801439c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80143f2:	4686      	mov	lr, r0
 80143f4:	e7e3      	b.n	80143be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80143f6:	4603      	mov	r3, r0
 80143f8:	4686      	mov	lr, r0
 80143fa:	e7ea      	b.n	80143d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80143fc:	4603      	mov	r3, r0
 80143fe:	e7e8      	b.n	80143d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014400:	4603      	mov	r3, r0
 8014402:	f1bc 0f0f 	cmp.w	ip, #15
 8014406:	d8e6      	bhi.n	80143d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014408:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801440c:	fb16 f80c 	smulbb	r8, r6, ip
 8014410:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014414:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014418:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801441c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014420:	ea44 0909 	orr.w	r9, r4, r9
 8014424:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014428:	f1cc 0410 	rsb	r4, ip, #16
 801442c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014430:	1ba4      	subs	r4, r4, r6
 8014432:	041a      	lsls	r2, r3, #16
 8014434:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014438:	ea4a 0707 	orr.w	r7, sl, r7
 801443c:	4377      	muls	r7, r6
 801443e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014442:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014446:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801444a:	fb04 7409 	mla	r4, r4, r9, r7
 801444e:	4313      	orrs	r3, r2
 8014450:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014454:	fb08 4303 	mla	r3, r8, r3, r4
 8014458:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801445c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014460:	4322      	orrs	r2, r4
 8014462:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014466:	fb0c 3202 	mla	r2, ip, r2, r3
 801446a:	0d53      	lsrs	r3, r2, #21
 801446c:	0952      	lsrs	r2, r2, #5
 801446e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014472:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014476:	431a      	orrs	r2, r3
 8014478:	b293      	uxth	r3, r2
 801447a:	b2af      	uxth	r7, r5
 801447c:	1202      	asrs	r2, r0, #8
 801447e:	43ed      	mvns	r5, r5
 8014480:	b2ed      	uxtb	r5, r5
 8014482:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014486:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801448a:	fb12 f205 	smulbb	r2, r2, r5
 801448e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014492:	fb0c 2c07 	mla	ip, ip, r7, r2
 8014496:	00dc      	lsls	r4, r3, #3
 8014498:	10da      	asrs	r2, r3, #3
 801449a:	10c6      	asrs	r6, r0, #3
 801449c:	00c3      	lsls	r3, r0, #3
 801449e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80144a2:	b2db      	uxtb	r3, r3
 80144a4:	fb16 f605 	smulbb	r6, r6, r5
 80144a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80144ac:	b2e4      	uxtb	r4, r4
 80144ae:	fb13 f305 	smulbb	r3, r3, r5
 80144b2:	fa1f fc8c 	uxth.w	ip, ip
 80144b6:	fb02 6207 	mla	r2, r2, r7, r6
 80144ba:	fb04 3307 	mla	r3, r4, r7, r3
 80144be:	b296      	uxth	r6, r2
 80144c0:	b29a      	uxth	r2, r3
 80144c2:	f10c 0301 	add.w	r3, ip, #1
 80144c6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80144ca:	1c53      	adds	r3, r2, #1
 80144cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80144d0:	1c72      	adds	r2, r6, #1
 80144d2:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80144d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80144da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80144de:	0952      	lsrs	r2, r2, #5
 80144e0:	ea43 030c 	orr.w	r3, r3, ip
 80144e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80144e8:	4313      	orrs	r3, r2
 80144ea:	800b      	strh	r3, [r1, #0]
 80144ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144f0:	2e0f      	cmp	r6, #15
 80144f2:	f63f af70 	bhi.w	80143d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80144f6:	4603      	mov	r3, r0
 80144f8:	4686      	mov	lr, r0
 80144fa:	e785      	b.n	8014408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80144fc:	0801f4be 	.word	0x0801f4be
 8014500:	0801fb33 	.word	0x0801fb33
 8014504:	0801f542 	.word	0x0801f542

08014508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801450c:	ed2d 8b08 	vpush	{d8-d11}
 8014510:	b099      	sub	sp, #100	; 0x64
 8014512:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014516:	9215      	str	r2, [sp, #84]	; 0x54
 8014518:	9309      	str	r3, [sp, #36]	; 0x24
 801451a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801451c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014520:	930d      	str	r3, [sp, #52]	; 0x34
 8014522:	910c      	str	r1, [sp, #48]	; 0x30
 8014524:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014528:	9016      	str	r0, [sp, #88]	; 0x58
 801452a:	6850      	ldr	r0, [r2, #4]
 801452c:	6812      	ldr	r2, [r2, #0]
 801452e:	fb00 1303 	mla	r3, r0, r3, r1
 8014532:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014536:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014538:	681b      	ldr	r3, [r3, #0]
 801453a:	930b      	str	r3, [sp, #44]	; 0x2c
 801453c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801453e:	685e      	ldr	r6, [r3, #4]
 8014540:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014542:	43db      	mvns	r3, r3
 8014544:	b2db      	uxtb	r3, r3
 8014546:	eeb0 aa40 	vmov.f32	s20, s0
 801454a:	eef0 9a60 	vmov.f32	s19, s1
 801454e:	eeb0 9a41 	vmov.f32	s18, s2
 8014552:	eeb0 8a62 	vmov.f32	s16, s5
 8014556:	eef0 8a43 	vmov.f32	s17, s6
 801455a:	eef0 ba44 	vmov.f32	s23, s8
 801455e:	eeb0 ba64 	vmov.f32	s22, s9
 8014562:	eef0 aa45 	vmov.f32	s21, s10
 8014566:	3604      	adds	r6, #4
 8014568:	930a      	str	r3, [sp, #40]	; 0x28
 801456a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801456c:	2b00      	cmp	r3, #0
 801456e:	dc03      	bgt.n	8014578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014570:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014572:	2b00      	cmp	r3, #0
 8014574:	f340 8225 	ble.w	80149c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014578:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801457a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801457e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014582:	1e48      	subs	r0, r1, #1
 8014584:	1e57      	subs	r7, r2, #1
 8014586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014588:	2b00      	cmp	r3, #0
 801458a:	f340 80e3 	ble.w	8014754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 801458e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014592:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014596:	d406      	bmi.n	80145a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014598:	4584      	cmp	ip, r0
 801459a:	da04      	bge.n	80145a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801459c:	2b00      	cmp	r3, #0
 801459e:	db02      	blt.n	80145a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80145a0:	42bb      	cmp	r3, r7
 80145a2:	f2c0 80d8 	blt.w	8014756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80145a6:	f11c 0c01 	adds.w	ip, ip, #1
 80145aa:	f100 80c9 	bmi.w	8014740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80145ae:	4561      	cmp	r1, ip
 80145b0:	f2c0 80c6 	blt.w	8014740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80145b4:	3301      	adds	r3, #1
 80145b6:	f100 80c3 	bmi.w	8014740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80145ba:	429a      	cmp	r2, r3
 80145bc:	f2c0 80c0 	blt.w	8014740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80145c0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80145c4:	4647      	mov	r7, r8
 80145c6:	f1bb 0f00 	cmp.w	fp, #0
 80145ca:	f340 80e3 	ble.w	8014794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80145ce:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80145d0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80145d2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80145d6:	689b      	ldr	r3, [r3, #8]
 80145d8:	ea5f 422a 	movs.w	r2, sl, asr #16
 80145dc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80145e0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80145e4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80145e8:	f100 8121 	bmi.w	801482e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80145ec:	f103 39ff 	add.w	r9, r3, #4294967295
 80145f0:	454a      	cmp	r2, r9
 80145f2:	f280 811c 	bge.w	801482e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80145f6:	f1bc 0f00 	cmp.w	ip, #0
 80145fa:	f2c0 8118 	blt.w	801482e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80145fe:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014602:	45cc      	cmp	ip, r9
 8014604:	f280 8113 	bge.w	801482e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014608:	b21b      	sxth	r3, r3
 801460a:	fb0c 2203 	mla	r2, ip, r3, r2
 801460e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014610:	eb04 0902 	add.w	r9, r4, r2
 8014614:	5ca2      	ldrb	r2, [r4, r2]
 8014616:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801461a:	2800      	cmp	r0, #0
 801461c:	f000 80fe 	beq.w	801481c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014620:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014624:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014628:	9211      	str	r2, [sp, #68]	; 0x44
 801462a:	b151      	cbz	r1, 8014642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801462c:	eb09 0203 	add.w	r2, r9, r3
 8014630:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014634:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014638:	930f      	str	r3, [sp, #60]	; 0x3c
 801463a:	7853      	ldrb	r3, [r2, #1]
 801463c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014640:	9312      	str	r3, [sp, #72]	; 0x48
 8014642:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014644:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014646:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801464a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801464e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014652:	ea4c 0c03 	orr.w	ip, ip, r3
 8014656:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014658:	041b      	lsls	r3, r3, #16
 801465a:	fb10 f201 	smulbb	r2, r0, r1
 801465e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014662:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014666:	10d2      	asrs	r2, r2, #3
 8014668:	4323      	orrs	r3, r4
 801466a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801466e:	4353      	muls	r3, r2
 8014670:	fb09 330c 	mla	r3, r9, ip, r3
 8014674:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014678:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801467c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014680:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014684:	f1c1 0c10 	rsb	ip, r1, #16
 8014688:	ebac 0c00 	sub.w	ip, ip, r0
 801468c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014690:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014694:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014696:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014698:	0418      	lsls	r0, r3, #16
 801469a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801469e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80146a2:	4318      	orrs	r0, r3
 80146a4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80146a8:	fb02 c200 	mla	r2, r2, r0, ip
 80146ac:	0d53      	lsrs	r3, r2, #21
 80146ae:	0952      	lsrs	r2, r2, #5
 80146b0:	8838      	ldrh	r0, [r7, #0]
 80146b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80146b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80146ba:	431a      	orrs	r2, r3
 80146bc:	b292      	uxth	r2, r2
 80146be:	1201      	asrs	r1, r0, #8
 80146c0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80146c4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80146c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80146cc:	fb11 f104 	smulbb	r1, r1, r4
 80146d0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80146d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80146d8:	00c0      	lsls	r0, r0, #3
 80146da:	fb0c 1c03 	mla	ip, ip, r3, r1
 80146de:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80146e2:	10d1      	asrs	r1, r2, #3
 80146e4:	b2c0      	uxtb	r0, r0
 80146e6:	00d2      	lsls	r2, r2, #3
 80146e8:	b2d2      	uxtb	r2, r2
 80146ea:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80146ee:	fb1e fe04 	smulbb	lr, lr, r4
 80146f2:	fb10 f004 	smulbb	r0, r0, r4
 80146f6:	fa1f fc8c 	uxth.w	ip, ip
 80146fa:	fb01 e103 	mla	r1, r1, r3, lr
 80146fe:	fb02 0303 	mla	r3, r2, r3, r0
 8014702:	b29a      	uxth	r2, r3
 8014704:	f10c 0301 	add.w	r3, ip, #1
 8014708:	b289      	uxth	r1, r1
 801470a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801470e:	1c53      	adds	r3, r2, #1
 8014710:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014714:	1c4a      	adds	r2, r1, #1
 8014716:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801471a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801471e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014722:	0949      	lsrs	r1, r1, #5
 8014724:	ea43 030c 	orr.w	r3, r3, ip
 8014728:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801472c:	430b      	orrs	r3, r1
 801472e:	803b      	strh	r3, [r7, #0]
 8014730:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014732:	449a      	add	sl, r3
 8014734:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014736:	3702      	adds	r7, #2
 8014738:	441d      	add	r5, r3
 801473a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801473e:	e742      	b.n	80145c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014740:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014742:	449a      	add	sl, r3
 8014744:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014746:	441d      	add	r5, r3
 8014748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801474a:	3b01      	subs	r3, #1
 801474c:	9309      	str	r3, [sp, #36]	; 0x24
 801474e:	f108 0802 	add.w	r8, r8, #2
 8014752:	e718      	b.n	8014586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014754:	d023      	beq.n	801479e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014756:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014758:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801475a:	3b01      	subs	r3, #1
 801475c:	fb00 a003 	mla	r0, r0, r3, sl
 8014760:	1400      	asrs	r0, r0, #16
 8014762:	f53f af2d 	bmi.w	80145c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014766:	3901      	subs	r1, #1
 8014768:	4288      	cmp	r0, r1
 801476a:	f6bf af29 	bge.w	80145c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801476e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014770:	fb01 5303 	mla	r3, r1, r3, r5
 8014774:	141b      	asrs	r3, r3, #16
 8014776:	f53f af23 	bmi.w	80145c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801477a:	3a01      	subs	r2, #1
 801477c:	4293      	cmp	r3, r2
 801477e:	f6bf af1f 	bge.w	80145c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014782:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014786:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801478a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801478e:	f1be 0f00 	cmp.w	lr, #0
 8014792:	dc6c      	bgt.n	801486e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014796:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801479a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801479e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147a0:	2b00      	cmp	r3, #0
 80147a2:	f340 810e 	ble.w	80149c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80147a6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80147aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80147ae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80147b2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147b4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80147b8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80147bc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80147c0:	eef0 6a48 	vmov.f32	s13, s16
 80147c4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80147c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147cc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80147d0:	ee16 aa90 	vmov	sl, s13
 80147d4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80147d8:	eef0 6a68 	vmov.f32	s13, s17
 80147dc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80147e0:	ee18 2a10 	vmov	r2, s16
 80147e4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80147e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80147ec:	ee18 2a90 	vmov	r2, s17
 80147f0:	932d      	str	r3, [sp, #180]	; 0xb4
 80147f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80147f8:	932e      	str	r3, [sp, #184]	; 0xb8
 80147fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147fc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80147fe:	3b01      	subs	r3, #1
 8014800:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014804:	930c      	str	r3, [sp, #48]	; 0x30
 8014806:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014808:	bf08      	it	eq
 801480a:	4613      	moveq	r3, r2
 801480c:	ee16 5a90 	vmov	r5, s13
 8014810:	9309      	str	r3, [sp, #36]	; 0x24
 8014812:	eef0 8a67 	vmov.f32	s17, s15
 8014816:	eeb0 8a47 	vmov.f32	s16, s14
 801481a:	e6a6      	b.n	801456a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801481c:	2900      	cmp	r1, #0
 801481e:	f43f af10 	beq.w	8014642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014822:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014826:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801482a:	930f      	str	r3, [sp, #60]	; 0x3c
 801482c:	e709      	b.n	8014642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801482e:	f112 0901 	adds.w	r9, r2, #1
 8014832:	f53f af7d 	bmi.w	8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014836:	454b      	cmp	r3, r9
 8014838:	f6ff af7a 	blt.w	8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801483c:	f11c 0901 	adds.w	r9, ip, #1
 8014840:	f53f af76 	bmi.w	8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014844:	45ce      	cmp	lr, r9
 8014846:	f6ff af73 	blt.w	8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801484a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801484c:	9202      	str	r2, [sp, #8]
 801484e:	b21b      	sxth	r3, r3
 8014850:	fa0f f28e 	sxth.w	r2, lr
 8014854:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014858:	e9cd c003 	strd	ip, r0, [sp, #12]
 801485c:	9201      	str	r2, [sp, #4]
 801485e:	9300      	str	r3, [sp, #0]
 8014860:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014862:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014864:	4633      	mov	r3, r6
 8014866:	4639      	mov	r1, r7
 8014868:	f7ff fd70 	bl	801434c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801486c:	e760      	b.n	8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801486e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014870:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014872:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014876:	ea4f 422a 	mov.w	r2, sl, asr #16
 801487a:	1429      	asrs	r1, r5, #16
 801487c:	fb03 2101 	mla	r1, r3, r1, r2
 8014880:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014882:	440a      	add	r2, r1
 8014884:	5c61      	ldrb	r1, [r4, r1]
 8014886:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801488a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801488e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014892:	f1bc 0f00 	cmp.w	ip, #0
 8014896:	f000 808c 	beq.w	80149b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801489a:	7857      	ldrb	r7, [r2, #1]
 801489c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80148a0:	9413      	str	r4, [sp, #76]	; 0x4c
 80148a2:	b140      	cbz	r0, 80148b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80148a4:	18d7      	adds	r7, r2, r3
 80148a6:	5cd3      	ldrb	r3, [r2, r3]
 80148a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80148ac:	9310      	str	r3, [sp, #64]	; 0x40
 80148ae:	787b      	ldrb	r3, [r7, #1]
 80148b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80148b4:	9314      	str	r3, [sp, #80]	; 0x50
 80148b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80148b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80148ba:	fb1c f200 	smulbb	r2, ip, r0
 80148be:	041f      	lsls	r7, r3, #16
 80148c0:	10d2      	asrs	r2, r2, #3
 80148c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80148c6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80148ca:	431f      	orrs	r7, r3
 80148cc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80148d0:	9317      	str	r3, [sp, #92]	; 0x5c
 80148d2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80148d4:	041b      	lsls	r3, r3, #16
 80148d6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80148da:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80148de:	ea43 030b 	orr.w	r3, r3, fp
 80148e2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80148e4:	4353      	muls	r3, r2
 80148e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80148ea:	fb04 3707 	mla	r7, r4, r7, r3
 80148ee:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80148f2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80148f6:	ea43 0b01 	orr.w	fp, r3, r1
 80148fa:	f1c0 0110 	rsb	r1, r0, #16
 80148fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014900:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014902:	eba1 0c0c 	sub.w	ip, r1, ip
 8014906:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801490a:	fb0c 770b 	mla	r7, ip, fp, r7
 801490e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014912:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014916:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801491a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801491e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014922:	fb02 770c 	mla	r7, r2, ip, r7
 8014926:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014928:	0d79      	lsrs	r1, r7, #21
 801492a:	097f      	lsrs	r7, r7, #5
 801492c:	8812      	ldrh	r2, [r2, #0]
 801492e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014932:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014936:	430f      	orrs	r7, r1
 8014938:	b2bb      	uxth	r3, r7
 801493a:	1211      	asrs	r1, r2, #8
 801493c:	1218      	asrs	r0, r3, #8
 801493e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014942:	fb11 f104 	smulbb	r1, r1, r4
 8014946:	10d7      	asrs	r7, r2, #3
 8014948:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801494c:	00d2      	lsls	r2, r2, #3
 801494e:	fb00 1009 	mla	r0, r0, r9, r1
 8014952:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014956:	10d9      	asrs	r1, r3, #3
 8014958:	b2d2      	uxtb	r2, r2
 801495a:	00db      	lsls	r3, r3, #3
 801495c:	fb17 f704 	smulbb	r7, r7, r4
 8014960:	fb12 f204 	smulbb	r2, r2, r4
 8014964:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014968:	b2db      	uxtb	r3, r3
 801496a:	b280      	uxth	r0, r0
 801496c:	fb01 7109 	mla	r1, r1, r9, r7
 8014970:	fb03 2309 	mla	r3, r3, r9, r2
 8014974:	b29b      	uxth	r3, r3
 8014976:	b289      	uxth	r1, r1
 8014978:	1c42      	adds	r2, r0, #1
 801497a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801497e:	1c4f      	adds	r7, r1, #1
 8014980:	1c5a      	adds	r2, r3, #1
 8014982:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014986:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801498a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801498e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014992:	0949      	lsrs	r1, r1, #5
 8014994:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014996:	4310      	orrs	r0, r2
 8014998:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801499c:	4308      	orrs	r0, r1
 801499e:	f823 0b02 	strh.w	r0, [r3], #2
 80149a2:	930e      	str	r3, [sp, #56]	; 0x38
 80149a4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80149a6:	449a      	add	sl, r3
 80149a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80149aa:	f10e 3eff 	add.w	lr, lr, #4294967295
 80149ae:	441d      	add	r5, r3
 80149b0:	e6ed      	b.n	801478e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 80149b2:	2800      	cmp	r0, #0
 80149b4:	f43f af7f 	beq.w	80148b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80149b8:	5cd3      	ldrb	r3, [r2, r3]
 80149ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80149be:	9310      	str	r3, [sp, #64]	; 0x40
 80149c0:	e779      	b.n	80148b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80149c2:	b019      	add	sp, #100	; 0x64
 80149c4:	ecbd 8b08 	vpop	{d8-d11}
 80149c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80149cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80149d0:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80149d4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80149d8:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80149dc:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80149e0:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80149e4:	8808      	ldrh	r0, [r1, #0]
 80149e6:	fb06 570e 	mla	r7, r6, lr, r5
 80149ea:	2e00      	cmp	r6, #0
 80149ec:	eb02 0807 	add.w	r8, r2, r7
 80149f0:	db38      	blt.n	8014a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80149f2:	45b1      	cmp	r9, r6
 80149f4:	dd36      	ble.n	8014a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80149f6:	2d00      	cmp	r5, #0
 80149f8:	db32      	blt.n	8014a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80149fa:	45ae      	cmp	lr, r5
 80149fc:	dd30      	ble.n	8014a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80149fe:	5dd2      	ldrb	r2, [r2, r7]
 8014a00:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014a04:	1c6a      	adds	r2, r5, #1
 8014a06:	d430      	bmi.n	8014a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a08:	4596      	cmp	lr, r2
 8014a0a:	dd2e      	ble.n	8014a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a0c:	b36c      	cbz	r4, 8014a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014a0e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014a12:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014a16:	3601      	adds	r6, #1
 8014a18:	d42b      	bmi.n	8014a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014a1a:	45b1      	cmp	r9, r6
 8014a1c:	dd29      	ble.n	8014a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014a1e:	f1bc 0f00 	cmp.w	ip, #0
 8014a22:	d028      	beq.n	8014a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014a24:	2d00      	cmp	r5, #0
 8014a26:	db22      	blt.n	8014a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014a28:	45ae      	cmp	lr, r5
 8014a2a:	dd20      	ble.n	8014a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014a2c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014a30:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014a34:	3501      	adds	r5, #1
 8014a36:	d407      	bmi.n	8014a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a38:	45ae      	cmp	lr, r5
 8014a3a:	dd05      	ble.n	8014a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a3c:	b134      	cbz	r4, 8014a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014a3e:	44c6      	add	lr, r8
 8014a40:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014a44:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014a48:	2c0f      	cmp	r4, #15
 8014a4a:	d802      	bhi.n	8014a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014a4c:	f1bc 0f0f 	cmp.w	ip, #15
 8014a50:	d914      	bls.n	8014a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014a52:	4b26      	ldr	r3, [pc, #152]	; (8014aec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014a54:	4a26      	ldr	r2, [pc, #152]	; (8014af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014a56:	4827      	ldr	r0, [pc, #156]	; (8014af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014a58:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8014a5c:	f006 fd8c 	bl	801b578 <__assert_func>
 8014a60:	4607      	mov	r7, r0
 8014a62:	e7cf      	b.n	8014a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014a64:	4602      	mov	r2, r0
 8014a66:	4607      	mov	r7, r0
 8014a68:	e7d5      	b.n	8014a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014a6a:	4602      	mov	r2, r0
 8014a6c:	e7d3      	b.n	8014a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014a6e:	4606      	mov	r6, r0
 8014a70:	e7e0      	b.n	8014a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014a72:	4606      	mov	r6, r0
 8014a74:	e7e8      	b.n	8014a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014a76:	2c0f      	cmp	r4, #15
 8014a78:	d8eb      	bhi.n	8014a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014a7a:	4606      	mov	r6, r0
 8014a7c:	043d      	lsls	r5, r7, #16
 8014a7e:	fb14 f30c 	smulbb	r3, r4, ip
 8014a82:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014a86:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014a8a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014a8e:	10db      	asrs	r3, r3, #3
 8014a90:	432f      	orrs	r7, r5
 8014a92:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014a96:	f1cc 0510 	rsb	r5, ip, #16
 8014a9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014a9e:	1b2d      	subs	r5, r5, r4
 8014aa0:	ea4e 0202 	orr.w	r2, lr, r2
 8014aa4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014aa8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014aac:	4354      	muls	r4, r2
 8014aae:	fb05 4507 	mla	r5, r5, r7, r4
 8014ab2:	0404      	lsls	r4, r0, #16
 8014ab4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014ab8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014abc:	4320      	orrs	r0, r4
 8014abe:	fb03 5400 	mla	r4, r3, r0, r5
 8014ac2:	0430      	lsls	r0, r6, #16
 8014ac4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ac8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014acc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014ad0:	4330      	orrs	r0, r6
 8014ad2:	fb03 4000 	mla	r0, r3, r0, r4
 8014ad6:	0d43      	lsrs	r3, r0, #21
 8014ad8:	0940      	lsrs	r0, r0, #5
 8014ada:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014ade:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014ae2:	4318      	orrs	r0, r3
 8014ae4:	8008      	strh	r0, [r1, #0]
 8014ae6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014aea:	bf00      	nop
 8014aec:	0801f4be 	.word	0x0801f4be
 8014af0:	0801fb33 	.word	0x0801fb33
 8014af4:	0801f542 	.word	0x0801f542

08014af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014afc:	ed2d 8b0a 	vpush	{d8-d12}
 8014b00:	b093      	sub	sp, #76	; 0x4c
 8014b02:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8014b06:	920f      	str	r2, [sp, #60]	; 0x3c
 8014b08:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014b0a:	9108      	str	r1, [sp, #32]
 8014b0c:	9306      	str	r3, [sp, #24]
 8014b0e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014b12:	9010      	str	r0, [sp, #64]	; 0x40
 8014b14:	6850      	ldr	r0, [r2, #4]
 8014b16:	6812      	ldr	r2, [r2, #0]
 8014b18:	fb00 1303 	mla	r3, r0, r3, r1
 8014b1c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014b20:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b22:	681b      	ldr	r3, [r3, #0]
 8014b24:	9307      	str	r3, [sp, #28]
 8014b26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b28:	685f      	ldr	r7, [r3, #4]
 8014b2a:	eeb0 aa40 	vmov.f32	s20, s0
 8014b2e:	eef0 9a60 	vmov.f32	s19, s1
 8014b32:	eeb0 9a41 	vmov.f32	s18, s2
 8014b36:	eeb0 8a62 	vmov.f32	s16, s5
 8014b3a:	eef0 8a43 	vmov.f32	s17, s6
 8014b3e:	eeb0 ca44 	vmov.f32	s24, s8
 8014b42:	eef0 ba64 	vmov.f32	s23, s9
 8014b46:	eeb0 ba45 	vmov.f32	s22, s10
 8014b4a:	3704      	adds	r7, #4
 8014b4c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014b50:	9b08      	ldr	r3, [sp, #32]
 8014b52:	2b00      	cmp	r3, #0
 8014b54:	dc03      	bgt.n	8014b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014b56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	f340 81b2 	ble.w	8014ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014b5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014b64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014b68:	1e48      	subs	r0, r1, #1
 8014b6a:	f102 3cff 	add.w	ip, r2, #4294967295
 8014b6e:	9b06      	ldr	r3, [sp, #24]
 8014b70:	2b00      	cmp	r3, #0
 8014b72:	f340 80a9 	ble.w	8014cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8014b76:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8014b7a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014b7e:	d406      	bmi.n	8014b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b80:	4586      	cmp	lr, r0
 8014b82:	da04      	bge.n	8014b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b84:	2b00      	cmp	r3, #0
 8014b86:	db02      	blt.n	8014b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b88:	4563      	cmp	r3, ip
 8014b8a:	f2c0 809e 	blt.w	8014cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014b8e:	f11e 0e01 	adds.w	lr, lr, #1
 8014b92:	f100 808f 	bmi.w	8014cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014b96:	4571      	cmp	r1, lr
 8014b98:	f2c0 808c 	blt.w	8014cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014b9c:	3301      	adds	r3, #1
 8014b9e:	f100 8089 	bmi.w	8014cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ba2:	429a      	cmp	r2, r3
 8014ba4:	f2c0 8086 	blt.w	8014cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014ba8:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014bac:	46c8      	mov	r8, r9
 8014bae:	f1bb 0f00 	cmp.w	fp, #0
 8014bb2:	f340 80a6 	ble.w	8014d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8014bb6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014bb8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014bba:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014bbe:	689b      	ldr	r3, [r3, #8]
 8014bc0:	1422      	asrs	r2, r4, #16
 8014bc2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8014bc6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8014bca:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014bce:	f100 80e3 	bmi.w	8014d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bd2:	f103 3aff 	add.w	sl, r3, #4294967295
 8014bd6:	4552      	cmp	r2, sl
 8014bd8:	f280 80de 	bge.w	8014d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bdc:	f1bc 0f00 	cmp.w	ip, #0
 8014be0:	f2c0 80da 	blt.w	8014d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014be4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014be8:	45d4      	cmp	ip, sl
 8014bea:	f280 80d5 	bge.w	8014d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014bee:	b21b      	sxth	r3, r3
 8014bf0:	fb0c 2203 	mla	r2, ip, r3, r2
 8014bf4:	9d07      	ldr	r5, [sp, #28]
 8014bf6:	eb05 0a02 	add.w	sl, r5, r2
 8014bfa:	5caa      	ldrb	r2, [r5, r2]
 8014bfc:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014c00:	2800      	cmp	r0, #0
 8014c02:	f000 80c0 	beq.w	8014d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8014c06:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014c0a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014c0e:	920b      	str	r2, [sp, #44]	; 0x2c
 8014c10:	b151      	cbz	r1, 8014c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014c12:	eb0a 0203 	add.w	r2, sl, r3
 8014c16:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014c1a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c1e:	9309      	str	r3, [sp, #36]	; 0x24
 8014c20:	7853      	ldrb	r3, [r2, #1]
 8014c22:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c26:	930c      	str	r3, [sp, #48]	; 0x30
 8014c28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c2a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014c2c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014c30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c38:	ea4c 0c03 	orr.w	ip, ip, r3
 8014c3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c3e:	041b      	lsls	r3, r3, #16
 8014c40:	fb10 f201 	smulbb	r2, r0, r1
 8014c44:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014c48:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014c4c:	10d2      	asrs	r2, r2, #3
 8014c4e:	432b      	orrs	r3, r5
 8014c50:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8014c54:	4353      	muls	r3, r2
 8014c56:	fb0a 330c 	mla	r3, sl, ip, r3
 8014c5a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014c5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c62:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014c66:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014c6a:	f1c1 0c10 	rsb	ip, r1, #16
 8014c6e:	ebac 0c00 	sub.w	ip, ip, r0
 8014c72:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014c76:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c7c:	0418      	lsls	r0, r3, #16
 8014c7e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014c82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c86:	4318      	orrs	r0, r3
 8014c88:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014c8c:	fb02 c200 	mla	r2, r2, r0, ip
 8014c90:	0d53      	lsrs	r3, r2, #21
 8014c92:	0952      	lsrs	r2, r2, #5
 8014c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014c98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014c9c:	431a      	orrs	r2, r3
 8014c9e:	f8a8 2000 	strh.w	r2, [r8]
 8014ca2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ca4:	441c      	add	r4, r3
 8014ca6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ca8:	f108 0802 	add.w	r8, r8, #2
 8014cac:	441e      	add	r6, r3
 8014cae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014cb2:	e77c      	b.n	8014bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014cb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014cb6:	441c      	add	r4, r3
 8014cb8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cba:	441e      	add	r6, r3
 8014cbc:	9b06      	ldr	r3, [sp, #24]
 8014cbe:	3b01      	subs	r3, #1
 8014cc0:	9306      	str	r3, [sp, #24]
 8014cc2:	f109 0902 	add.w	r9, r9, #2
 8014cc6:	e752      	b.n	8014b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014cc8:	d020      	beq.n	8014d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014cca:	9b06      	ldr	r3, [sp, #24]
 8014ccc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014cce:	3b01      	subs	r3, #1
 8014cd0:	fb00 4003 	mla	r0, r0, r3, r4
 8014cd4:	1400      	asrs	r0, r0, #16
 8014cd6:	f53f af67 	bmi.w	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cda:	3901      	subs	r1, #1
 8014cdc:	4288      	cmp	r0, r1
 8014cde:	f6bf af63 	bge.w	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014ce2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014ce4:	fb01 6303 	mla	r3, r1, r3, r6
 8014ce8:	141b      	asrs	r3, r3, #16
 8014cea:	f53f af5d 	bmi.w	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cee:	3a01      	subs	r2, #1
 8014cf0:	4293      	cmp	r3, r2
 8014cf2:	f6bf af59 	bge.w	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cf6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014cfa:	46ca      	mov	sl, r9
 8014cfc:	f1b8 0f00 	cmp.w	r8, #0
 8014d00:	dc67      	bgt.n	8014dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8014d02:	9b06      	ldr	r3, [sp, #24]
 8014d04:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014d08:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014d0c:	9b08      	ldr	r3, [sp, #32]
 8014d0e:	2b00      	cmp	r3, #0
 8014d10:	f340 80d7 	ble.w	8014ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014d14:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014d18:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014d1c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014d20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d22:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014d26:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014d2a:	eef0 6a48 	vmov.f32	s13, s16
 8014d2e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014d32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d36:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014d3a:	ee16 4a90 	vmov	r4, s13
 8014d3e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014d42:	eef0 6a68 	vmov.f32	s13, s17
 8014d46:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014d4a:	ee18 2a10 	vmov	r2, s16
 8014d4e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014d52:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d56:	ee18 2a90 	vmov	r2, s17
 8014d5a:	9329      	str	r3, [sp, #164]	; 0xa4
 8014d5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d62:	932a      	str	r3, [sp, #168]	; 0xa8
 8014d64:	9b08      	ldr	r3, [sp, #32]
 8014d66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014d68:	3b01      	subs	r3, #1
 8014d6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d6e:	9308      	str	r3, [sp, #32]
 8014d70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014d72:	bf08      	it	eq
 8014d74:	4613      	moveq	r3, r2
 8014d76:	ee16 6a90 	vmov	r6, s13
 8014d7a:	9306      	str	r3, [sp, #24]
 8014d7c:	eef0 8a67 	vmov.f32	s17, s15
 8014d80:	eeb0 8a47 	vmov.f32	s16, s14
 8014d84:	e6e4      	b.n	8014b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014d86:	2900      	cmp	r1, #0
 8014d88:	f43f af4e 	beq.w	8014c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014d8c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014d90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014d94:	9309      	str	r3, [sp, #36]	; 0x24
 8014d96:	e747      	b.n	8014c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014d98:	f112 0a01 	adds.w	sl, r2, #1
 8014d9c:	d481      	bmi.n	8014ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014d9e:	4553      	cmp	r3, sl
 8014da0:	f6ff af7f 	blt.w	8014ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014da4:	f11c 0a01 	adds.w	sl, ip, #1
 8014da8:	f53f af7b 	bmi.w	8014ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014dac:	45d6      	cmp	lr, sl
 8014dae:	f6ff af78 	blt.w	8014ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014db2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8014db6:	b21b      	sxth	r3, r3
 8014db8:	fa0f f28e 	sxth.w	r2, lr
 8014dbc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014dc0:	9201      	str	r2, [sp, #4]
 8014dc2:	9300      	str	r3, [sp, #0]
 8014dc4:	9a07      	ldr	r2, [sp, #28]
 8014dc6:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014dc8:	463b      	mov	r3, r7
 8014dca:	4641      	mov	r1, r8
 8014dcc:	f7ff fdfe 	bl	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014dd0:	e767      	b.n	8014ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014dd2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014dd4:	9d07      	ldr	r5, [sp, #28]
 8014dd6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014dda:	1422      	asrs	r2, r4, #16
 8014ddc:	1431      	asrs	r1, r6, #16
 8014dde:	fb03 2101 	mla	r1, r3, r1, r2
 8014de2:	9a07      	ldr	r2, [sp, #28]
 8014de4:	440a      	add	r2, r1
 8014de6:	5c69      	ldrb	r1, [r5, r1]
 8014de8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014dec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014df0:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8014df4:	f1be 0f00 	cmp.w	lr, #0
 8014df8:	d05c      	beq.n	8014eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8014dfa:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014dfe:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8014e02:	950d      	str	r5, [sp, #52]	; 0x34
 8014e04:	b150      	cbz	r0, 8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014e06:	eb02 0c03 	add.w	ip, r2, r3
 8014e0a:	5cd3      	ldrb	r3, [r2, r3]
 8014e0c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014e10:	930a      	str	r3, [sp, #40]	; 0x28
 8014e12:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8014e16:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014e1a:	930e      	str	r3, [sp, #56]	; 0x38
 8014e1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e1e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014e20:	fb1e f200 	smulbb	r2, lr, r0
 8014e24:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014e28:	10d2      	asrs	r2, r2, #3
 8014e2a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014e2e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014e32:	ea4c 0c03 	orr.w	ip, ip, r3
 8014e36:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014e3a:	9311      	str	r3, [sp, #68]	; 0x44
 8014e3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e3e:	041b      	lsls	r3, r3, #16
 8014e40:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014e44:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014e48:	ea43 030b 	orr.w	r3, r3, fp
 8014e4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014e4e:	4353      	muls	r3, r2
 8014e50:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014e54:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014e58:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014e5c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014e60:	ea43 0b01 	orr.w	fp, r3, r1
 8014e64:	f1c0 0110 	rsb	r1, r0, #16
 8014e68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014e6a:	eba1 0e0e 	sub.w	lr, r1, lr
 8014e6e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014e72:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014e76:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014e7a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014e7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014e82:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014e86:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014e8a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014e8e:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014e92:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014e96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014e9a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014e9e:	ea43 0c0c 	orr.w	ip, r3, ip
 8014ea2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ea4:	f82a cb02 	strh.w	ip, [sl], #2
 8014ea8:	441c      	add	r4, r3
 8014eaa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014eac:	f108 38ff 	add.w	r8, r8, #4294967295
 8014eb0:	441e      	add	r6, r3
 8014eb2:	e723      	b.n	8014cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014eb4:	2800      	cmp	r0, #0
 8014eb6:	d0b1      	beq.n	8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014eb8:	5cd3      	ldrb	r3, [r2, r3]
 8014eba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014ebe:	930a      	str	r3, [sp, #40]	; 0x28
 8014ec0:	e7ac      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014ec2:	b013      	add	sp, #76	; 0x4c
 8014ec4:	ecbd 8b0a 	vpop	{d8-d12}
 8014ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ed0:	468b      	mov	fp, r1
 8014ed2:	8809      	ldrh	r1, [r1, #0]
 8014ed4:	b089      	sub	sp, #36	; 0x24
 8014ed6:	10cd      	asrs	r5, r1, #3
 8014ed8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014edc:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014ee0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014ee4:	00c9      	lsls	r1, r1, #3
 8014ee6:	9500      	str	r5, [sp, #0]
 8014ee8:	b2c9      	uxtb	r1, r1
 8014eea:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014eee:	9101      	str	r1, [sp, #4]
 8014ef0:	9900      	ldr	r1, [sp, #0]
 8014ef2:	9202      	str	r2, [sp, #8]
 8014ef4:	fb04 650e 	mla	r5, r4, lr, r6
 8014ef8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014efc:	eb02 0805 	add.w	r8, r2, r5
 8014f00:	0209      	lsls	r1, r1, #8
 8014f02:	9a01      	ldr	r2, [sp, #4]
 8014f04:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014f08:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014f0c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014f10:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014f14:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014f18:	4311      	orrs	r1, r2
 8014f1a:	2c00      	cmp	r4, #0
 8014f1c:	9107      	str	r1, [sp, #28]
 8014f1e:	db43      	blt.n	8014fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014f20:	45a2      	cmp	sl, r4
 8014f22:	dd41      	ble.n	8014fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014f24:	2e00      	cmp	r6, #0
 8014f26:	db3d      	blt.n	8014fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014f28:	45b6      	cmp	lr, r6
 8014f2a:	dd3b      	ble.n	8014fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014f2c:	9a02      	ldr	r2, [sp, #8]
 8014f2e:	5d55      	ldrb	r5, [r2, r5]
 8014f30:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014f34:	441d      	add	r5, r3
 8014f36:	1c72      	adds	r2, r6, #1
 8014f38:	d439      	bmi.n	8014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f3a:	4596      	cmp	lr, r2
 8014f3c:	dd37      	ble.n	8014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f3e:	2f00      	cmp	r7, #0
 8014f40:	d035      	beq.n	8014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014f42:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014f46:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014f4a:	4419      	add	r1, r3
 8014f4c:	3401      	adds	r4, #1
 8014f4e:	d432      	bmi.n	8014fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f50:	45a2      	cmp	sl, r4
 8014f52:	dd30      	ble.n	8014fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f54:	b378      	cbz	r0, 8014fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014f56:	2e00      	cmp	r6, #0
 8014f58:	db2b      	blt.n	8014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014f5a:	45b6      	cmp	lr, r6
 8014f5c:	dd29      	ble.n	8014fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014f5e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014f62:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014f66:	441c      	add	r4, r3
 8014f68:	3601      	adds	r6, #1
 8014f6a:	d427      	bmi.n	8014fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f6c:	45b6      	cmp	lr, r6
 8014f6e:	dd25      	ble.n	8014fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f70:	b327      	cbz	r7, 8014fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014f72:	44c6      	add	lr, r8
 8014f74:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014f78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f7c:	4413      	add	r3, r2
 8014f7e:	782a      	ldrb	r2, [r5, #0]
 8014f80:	9202      	str	r2, [sp, #8]
 8014f82:	780a      	ldrb	r2, [r1, #0]
 8014f84:	9203      	str	r2, [sp, #12]
 8014f86:	7822      	ldrb	r2, [r4, #0]
 8014f88:	9204      	str	r2, [sp, #16]
 8014f8a:	2f0f      	cmp	r7, #15
 8014f8c:	781a      	ldrb	r2, [r3, #0]
 8014f8e:	9205      	str	r2, [sp, #20]
 8014f90:	d801      	bhi.n	8014f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014f92:	280f      	cmp	r0, #15
 8014f94:	d914      	bls.n	8014fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014f96:	4b3f      	ldr	r3, [pc, #252]	; (8015094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014f98:	4a3f      	ldr	r2, [pc, #252]	; (8015098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014f9a:	4840      	ldr	r0, [pc, #256]	; (801509c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014f9c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8014fa0:	f006 faea 	bl	801b578 <__assert_func>
 8014fa4:	ad07      	add	r5, sp, #28
 8014fa6:	e7c6      	b.n	8014f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014fa8:	a907      	add	r1, sp, #28
 8014faa:	460d      	mov	r5, r1
 8014fac:	e7ce      	b.n	8014f4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014fae:	a907      	add	r1, sp, #28
 8014fb0:	e7cc      	b.n	8014f4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014fb2:	ac07      	add	r4, sp, #28
 8014fb4:	e7d8      	b.n	8014f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014fb6:	ab07      	add	r3, sp, #28
 8014fb8:	461c      	mov	r4, r3
 8014fba:	e7e0      	b.n	8014f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014fbc:	ab07      	add	r3, sp, #28
 8014fbe:	e7de      	b.n	8014f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014fc0:	b2ba      	uxth	r2, r7
 8014fc2:	b280      	uxth	r0, r0
 8014fc4:	fb02 fa00 	mul.w	sl, r2, r0
 8014fc8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014fcc:	0112      	lsls	r2, r2, #4
 8014fce:	b280      	uxth	r0, r0
 8014fd0:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014fd4:	7849      	ldrb	r1, [r1, #1]
 8014fd6:	78ae      	ldrb	r6, [r5, #2]
 8014fd8:	786d      	ldrb	r5, [r5, #1]
 8014fda:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014fde:	eba2 020a 	sub.w	r2, r2, sl
 8014fe2:	b292      	uxth	r2, r2
 8014fe4:	ebae 0e00 	sub.w	lr, lr, r0
 8014fe8:	fa1f fe8e 	uxth.w	lr, lr
 8014fec:	4351      	muls	r1, r2
 8014fee:	fb02 f808 	mul.w	r8, r2, r8
 8014ff2:	fb0e 8806 	mla	r8, lr, r6, r8
 8014ff6:	fb0e 1505 	mla	r5, lr, r5, r1
 8014ffa:	78a6      	ldrb	r6, [r4, #2]
 8014ffc:	7861      	ldrb	r1, [r4, #1]
 8014ffe:	fa1f f78c 	uxth.w	r7, ip
 8015002:	fb00 8806 	mla	r8, r0, r6, r8
 8015006:	fb00 5501 	mla	r5, r0, r1, r5
 801500a:	789e      	ldrb	r6, [r3, #2]
 801500c:	7859      	ldrb	r1, [r3, #1]
 801500e:	9b00      	ldr	r3, [sp, #0]
 8015010:	ea6f 0c0c 	mvn.w	ip, ip
 8015014:	fa5f fc8c 	uxtb.w	ip, ip
 8015018:	fb0a 5101 	mla	r1, sl, r1, r5
 801501c:	fb13 f50c 	smulbb	r5, r3, ip
 8015020:	9b03      	ldr	r3, [sp, #12]
 8015022:	435a      	muls	r2, r3
 8015024:	9b02      	ldr	r3, [sp, #8]
 8015026:	fb0e 2203 	mla	r2, lr, r3, r2
 801502a:	9b04      	ldr	r3, [sp, #16]
 801502c:	fb00 2003 	mla	r0, r0, r3, r2
 8015030:	9b05      	ldr	r3, [sp, #20]
 8015032:	fb0a 8606 	mla	r6, sl, r6, r8
 8015036:	fb19 f90c 	smulbb	r9, r9, ip
 801503a:	fb0a 0a03 	mla	sl, sl, r3, r0
 801503e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015042:	9b01      	ldr	r3, [sp, #4]
 8015044:	fb06 9607 	mla	r6, r6, r7, r9
 8015048:	b2b6      	uxth	r6, r6
 801504a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801504e:	fb13 fc0c 	smulbb	ip, r3, ip
 8015052:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015056:	fb01 5107 	mla	r1, r1, r7, r5
 801505a:	f106 0901 	add.w	r9, r6, #1
 801505e:	fb0a c707 	mla	r7, sl, r7, ip
 8015062:	b2bf      	uxth	r7, r7
 8015064:	b289      	uxth	r1, r1
 8015066:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801506a:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801506e:	1c4d      	adds	r5, r1, #1
 8015070:	1c7e      	adds	r6, r7, #1
 8015072:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015076:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801507a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801507e:	0949      	lsrs	r1, r1, #5
 8015080:	ea46 0609 	orr.w	r6, r6, r9
 8015084:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015088:	430e      	orrs	r6, r1
 801508a:	f8ab 6000 	strh.w	r6, [fp]
 801508e:	b009      	add	sp, #36	; 0x24
 8015090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015094:	0801f4be 	.word	0x0801f4be
 8015098:	0801fa8a 	.word	0x0801fa8a
 801509c:	0801f542 	.word	0x0801f542

080150a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80150a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150a4:	ed2d 8b08 	vpush	{d8-d11}
 80150a8:	b095      	sub	sp, #84	; 0x54
 80150aa:	eeb0 aa40 	vmov.f32	s20, s0
 80150ae:	9212      	str	r2, [sp, #72]	; 0x48
 80150b0:	9309      	str	r3, [sp, #36]	; 0x24
 80150b2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80150b4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80150b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80150ba:	910e      	str	r1, [sp, #56]	; 0x38
 80150bc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80150c0:	9013      	str	r0, [sp, #76]	; 0x4c
 80150c2:	6850      	ldr	r0, [r2, #4]
 80150c4:	6812      	ldr	r2, [r2, #0]
 80150c6:	fb00 1303 	mla	r3, r0, r3, r1
 80150ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80150ce:	930a      	str	r3, [sp, #40]	; 0x28
 80150d0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80150d2:	681b      	ldr	r3, [r3, #0]
 80150d4:	930d      	str	r3, [sp, #52]	; 0x34
 80150d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80150d8:	685c      	ldr	r4, [r3, #4]
 80150da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80150dc:	43db      	mvns	r3, r3
 80150de:	b2db      	uxtb	r3, r3
 80150e0:	eef0 9a60 	vmov.f32	s19, s1
 80150e4:	eeb0 9a41 	vmov.f32	s18, s2
 80150e8:	eeb0 8a62 	vmov.f32	s16, s5
 80150ec:	eef0 8a43 	vmov.f32	s17, s6
 80150f0:	eef0 ba44 	vmov.f32	s23, s8
 80150f4:	eeb0 ba64 	vmov.f32	s22, s9
 80150f8:	eef0 aa45 	vmov.f32	s21, s10
 80150fc:	3404      	adds	r4, #4
 80150fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8015100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015102:	2b00      	cmp	r3, #0
 8015104:	dc03      	bgt.n	801510e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015106:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015108:	2b00      	cmp	r3, #0
 801510a:	f340 8255 	ble.w	80155b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801510e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015110:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015114:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015118:	1e48      	subs	r0, r1, #1
 801511a:	1e55      	subs	r5, r2, #1
 801511c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801511e:	2b00      	cmp	r3, #0
 8015120:	f340 80f9 	ble.w	8015316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015124:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8015126:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015128:	1436      	asrs	r6, r6, #16
 801512a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801512e:	d406      	bmi.n	801513e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015130:	4286      	cmp	r6, r0
 8015132:	da04      	bge.n	801513e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015134:	2b00      	cmp	r3, #0
 8015136:	db02      	blt.n	801513e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015138:	42ab      	cmp	r3, r5
 801513a:	f2c0 80ed 	blt.w	8015318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801513e:	3601      	adds	r6, #1
 8015140:	f100 80da 	bmi.w	80152f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015144:	42b1      	cmp	r1, r6
 8015146:	f2c0 80d7 	blt.w	80152f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801514a:	3301      	adds	r3, #1
 801514c:	f100 80d4 	bmi.w	80152f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015150:	429a      	cmp	r2, r3
 8015152:	f2c0 80d1 	blt.w	80152f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015158:	9311      	str	r3, [sp, #68]	; 0x44
 801515a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801515c:	930c      	str	r3, [sp, #48]	; 0x30
 801515e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015160:	2b00      	cmp	r3, #0
 8015162:	f340 80fa 	ble.w	801535a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015166:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015168:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801516a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801516c:	68c6      	ldr	r6, [r0, #12]
 801516e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8015170:	141d      	asrs	r5, r3, #16
 8015172:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015176:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015178:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801517a:	1400      	asrs	r0, r0, #16
 801517c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015180:	6892      	ldr	r2, [r2, #8]
 8015182:	f100 813e 	bmi.w	8015402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015186:	1e57      	subs	r7, r2, #1
 8015188:	42b8      	cmp	r0, r7
 801518a:	f280 813a 	bge.w	8015402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801518e:	2d00      	cmp	r5, #0
 8015190:	f2c0 8137 	blt.w	8015402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015194:	1e77      	subs	r7, r6, #1
 8015196:	42bd      	cmp	r5, r7
 8015198:	f280 8133 	bge.w	8015402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801519c:	b212      	sxth	r2, r2
 801519e:	fb05 0002 	mla	r0, r5, r2, r0
 80151a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80151a4:	f815 a000 	ldrb.w	sl, [r5, r0]
 80151a8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80151ac:	182e      	adds	r6, r5, r0
 80151ae:	eb04 050a 	add.w	r5, r4, sl
 80151b2:	2b00      	cmp	r3, #0
 80151b4:	f000 8117 	beq.w	80153e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80151b8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80151bc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80151c0:	44a4      	add	ip, r4
 80151c2:	2900      	cmp	r1, #0
 80151c4:	f000 8117 	beq.w	80153f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80151c8:	18b0      	adds	r0, r6, r2
 80151ca:	5cb2      	ldrb	r2, [r6, r2]
 80151cc:	7840      	ldrb	r0, [r0, #1]
 80151ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80151d6:	4422      	add	r2, r4
 80151d8:	4420      	add	r0, r4
 80151da:	b29b      	uxth	r3, r3
 80151dc:	b289      	uxth	r1, r1
 80151de:	fb03 f901 	mul.w	r9, r3, r1
 80151e2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80151e6:	011b      	lsls	r3, r3, #4
 80151e8:	b289      	uxth	r1, r1
 80151ea:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80151ee:	f895 b002 	ldrb.w	fp, [r5, #2]
 80151f2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80151f4:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80151f8:	f8b6 e000 	ldrh.w	lr, [r6]
 80151fc:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015200:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015204:	eba3 0309 	sub.w	r3, r3, r9
 8015208:	b29b      	uxth	r3, r3
 801520a:	eba8 0801 	sub.w	r8, r8, r1
 801520e:	fa1f f888 	uxth.w	r8, r8
 8015212:	435f      	muls	r7, r3
 8015214:	fb08 770b 	mla	r7, r8, fp, r7
 8015218:	f892 b002 	ldrb.w	fp, [r2, #2]
 801521c:	9310      	str	r3, [sp, #64]	; 0x40
 801521e:	fb01 770b 	mla	r7, r1, fp, r7
 8015222:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015226:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015228:	fb09 770b 	mla	r7, r9, fp, r7
 801522c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015230:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015234:	fb1b fb03 	smulbb	fp, fp, r3
 8015238:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801523c:	fb07 b706 	mla	r7, r7, r6, fp
 8015240:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015242:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015246:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801524a:	f89c c000 	ldrb.w	ip, [ip]
 801524e:	435d      	muls	r5, r3
 8015250:	fb08 550b 	mla	r5, r8, fp, r5
 8015254:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015258:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801525a:	fb01 550b 	mla	r5, r1, fp, r5
 801525e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015262:	fb09 550b 	mla	r5, r9, fp, r5
 8015266:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801526a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801526e:	fb1b fb03 	smulbb	fp, fp, r3
 8015272:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015274:	fb03 f30c 	mul.w	r3, r3, ip
 8015278:	f892 c000 	ldrb.w	ip, [r2]
 801527c:	fb08 330a 	mla	r3, r8, sl, r3
 8015280:	fb01 330c 	mla	r3, r1, ip, r3
 8015284:	f890 c000 	ldrb.w	ip, [r0]
 8015288:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801528c:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015290:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015292:	fa5f fe8e 	uxtb.w	lr, lr
 8015296:	b2bf      	uxth	r7, r7
 8015298:	fb1e fe03 	smulbb	lr, lr, r3
 801529c:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80152a0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80152a4:	fb05 b506 	mla	r5, r5, r6, fp
 80152a8:	1c7b      	adds	r3, r7, #1
 80152aa:	fb0c e606 	mla	r6, ip, r6, lr
 80152ae:	b2ad      	uxth	r5, r5
 80152b0:	b2b6      	uxth	r6, r6
 80152b2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80152b6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80152ba:	f105 0b01 	add.w	fp, r5, #1
 80152be:	1c77      	adds	r7, r6, #1
 80152c0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80152c4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80152c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80152cc:	096d      	lsrs	r5, r5, #5
 80152ce:	431f      	orrs	r7, r3
 80152d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80152d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152d6:	433d      	orrs	r5, r7
 80152d8:	801d      	strh	r5, [r3, #0]
 80152da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80152de:	3302      	adds	r3, #2
 80152e0:	930c      	str	r3, [sp, #48]	; 0x30
 80152e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80152e4:	4413      	add	r3, r2
 80152e6:	9327      	str	r3, [sp, #156]	; 0x9c
 80152e8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80152ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80152ec:	4413      	add	r3, r2
 80152ee:	9328      	str	r3, [sp, #160]	; 0xa0
 80152f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80152f2:	3b01      	subs	r3, #1
 80152f4:	9311      	str	r3, [sp, #68]	; 0x44
 80152f6:	e732      	b.n	801515e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80152f8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80152fa:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80152fc:	4433      	add	r3, r6
 80152fe:	9327      	str	r3, [sp, #156]	; 0x9c
 8015300:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015302:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015304:	4433      	add	r3, r6
 8015306:	9328      	str	r3, [sp, #160]	; 0xa0
 8015308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801530a:	3b01      	subs	r3, #1
 801530c:	9309      	str	r3, [sp, #36]	; 0x24
 801530e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015310:	3302      	adds	r3, #2
 8015312:	930a      	str	r3, [sp, #40]	; 0x28
 8015314:	e702      	b.n	801511c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015316:	d027      	beq.n	8015368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015318:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801531a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801531c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801531e:	3b01      	subs	r3, #1
 8015320:	fb00 5003 	mla	r0, r0, r3, r5
 8015324:	1400      	asrs	r0, r0, #16
 8015326:	f53f af16 	bmi.w	8015156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801532a:	3901      	subs	r1, #1
 801532c:	4288      	cmp	r0, r1
 801532e:	f6bf af12 	bge.w	8015156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015332:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015334:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015336:	fb01 0303 	mla	r3, r1, r3, r0
 801533a:	141b      	asrs	r3, r3, #16
 801533c:	f53f af0b 	bmi.w	8015156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015340:	3a01      	subs	r2, #1
 8015342:	4293      	cmp	r3, r2
 8015344:	f6bf af07 	bge.w	8015156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015348:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801534a:	9311      	str	r3, [sp, #68]	; 0x44
 801534c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015350:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015352:	930c      	str	r3, [sp, #48]	; 0x30
 8015354:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015356:	2b00      	cmp	r3, #0
 8015358:	dc70      	bgt.n	801543c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801535a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801535c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801535e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015362:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015366:	930a      	str	r3, [sp, #40]	; 0x28
 8015368:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801536a:	2b00      	cmp	r3, #0
 801536c:	f340 8124 	ble.w	80155b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8015370:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015374:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015378:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801537c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801537e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015382:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015386:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801538a:	eef0 6a48 	vmov.f32	s13, s16
 801538e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015392:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015396:	ee37 8a48 	vsub.f32	s16, s14, s16
 801539a:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801539e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80153a2:	eef0 6a68 	vmov.f32	s13, s17
 80153a6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80153aa:	ee18 2a10 	vmov	r2, s16
 80153ae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80153b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80153b6:	ee18 2a90 	vmov	r2, s17
 80153ba:	9329      	str	r3, [sp, #164]	; 0xa4
 80153bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153be:	fb92 f3f3 	sdiv	r3, r2, r3
 80153c2:	932a      	str	r3, [sp, #168]	; 0xa8
 80153c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80153c8:	3b01      	subs	r3, #1
 80153ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80153ce:	930e      	str	r3, [sp, #56]	; 0x38
 80153d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153d2:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80153d6:	bf08      	it	eq
 80153d8:	4613      	moveq	r3, r2
 80153da:	9309      	str	r3, [sp, #36]	; 0x24
 80153dc:	eef0 8a67 	vmov.f32	s17, s15
 80153e0:	eeb0 8a47 	vmov.f32	s16, s14
 80153e4:	e68c      	b.n	8015100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80153e6:	b149      	cbz	r1, 80153fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80153e8:	5cb2      	ldrb	r2, [r6, r2]
 80153ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153ee:	4422      	add	r2, r4
 80153f0:	4628      	mov	r0, r5
 80153f2:	46ac      	mov	ip, r5
 80153f4:	e6f1      	b.n	80151da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80153f6:	4628      	mov	r0, r5
 80153f8:	462a      	mov	r2, r5
 80153fa:	e6ee      	b.n	80151da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80153fc:	4628      	mov	r0, r5
 80153fe:	462a      	mov	r2, r5
 8015400:	e7f7      	b.n	80153f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015402:	1c47      	adds	r7, r0, #1
 8015404:	f53f af69 	bmi.w	80152da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015408:	42ba      	cmp	r2, r7
 801540a:	f6ff af66 	blt.w	80152da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801540e:	1c6f      	adds	r7, r5, #1
 8015410:	f53f af63 	bmi.w	80152da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015414:	42be      	cmp	r6, r7
 8015416:	f6ff af60 	blt.w	80152da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801541a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801541c:	9002      	str	r0, [sp, #8]
 801541e:	b236      	sxth	r6, r6
 8015420:	b212      	sxth	r2, r2
 8015422:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015426:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801542a:	9200      	str	r2, [sp, #0]
 801542c:	9601      	str	r6, [sp, #4]
 801542e:	4623      	mov	r3, r4
 8015430:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015434:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015436:	f7ff fd49 	bl	8014ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801543a:	e74e      	b.n	80152da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801543c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801543e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015440:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015442:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015444:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015448:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801544a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801544e:	142d      	asrs	r5, r5, #16
 8015450:	1400      	asrs	r0, r0, #16
 8015452:	fb02 5000 	mla	r0, r2, r0, r5
 8015456:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015458:	f815 9000 	ldrb.w	r9, [r5, r0]
 801545c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015460:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015464:	182e      	adds	r6, r5, r0
 8015466:	eb04 0509 	add.w	r5, r4, r9
 801546a:	2b00      	cmp	r3, #0
 801546c:	f000 8096 	beq.w	801559c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8015470:	7877      	ldrb	r7, [r6, #1]
 8015472:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015476:	4427      	add	r7, r4
 8015478:	2900      	cmp	r1, #0
 801547a:	f000 8097 	beq.w	80155ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801547e:	18b0      	adds	r0, r6, r2
 8015480:	5cb2      	ldrb	r2, [r6, r2]
 8015482:	7840      	ldrb	r0, [r0, #1]
 8015484:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015488:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801548c:	4422      	add	r2, r4
 801548e:	4420      	add	r0, r4
 8015490:	b29b      	uxth	r3, r3
 8015492:	b289      	uxth	r1, r1
 8015494:	fb03 f801 	mul.w	r8, r3, r1
 8015498:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801549a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801549e:	f8b6 c000 	ldrh.w	ip, [r6]
 80154a2:	78be      	ldrb	r6, [r7, #2]
 80154a4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80154a8:	011b      	lsls	r3, r3, #4
 80154aa:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80154ae:	b289      	uxth	r1, r1
 80154b0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80154b4:	eba3 0308 	sub.w	r3, r3, r8
 80154b8:	b29b      	uxth	r3, r3
 80154ba:	ebae 0e01 	sub.w	lr, lr, r1
 80154be:	fa1f fe8e 	uxth.w	lr, lr
 80154c2:	435e      	muls	r6, r3
 80154c4:	fb0e 660b 	mla	r6, lr, fp, r6
 80154c8:	f892 b002 	ldrb.w	fp, [r2, #2]
 80154cc:	9310      	str	r3, [sp, #64]	; 0x40
 80154ce:	fb01 660b 	mla	r6, r1, fp, r6
 80154d2:	f890 b002 	ldrb.w	fp, [r0, #2]
 80154d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80154d8:	fb08 660b 	mla	r6, r8, fp, r6
 80154dc:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80154e0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80154e4:	fb1b fb03 	smulbb	fp, fp, r3
 80154e8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80154ec:	fb06 b60a 	mla	r6, r6, sl, fp
 80154f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80154f2:	f895 b001 	ldrb.w	fp, [r5, #1]
 80154f6:	787d      	ldrb	r5, [r7, #1]
 80154f8:	783f      	ldrb	r7, [r7, #0]
 80154fa:	435d      	muls	r5, r3
 80154fc:	fb0e 550b 	mla	r5, lr, fp, r5
 8015500:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015504:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015506:	fb01 550b 	mla	r5, r1, fp, r5
 801550a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801550e:	fb08 550b 	mla	r5, r8, fp, r5
 8015512:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015516:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801551a:	fb1b fb03 	smulbb	fp, fp, r3
 801551e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015520:	437b      	muls	r3, r7
 8015522:	7817      	ldrb	r7, [r2, #0]
 8015524:	fb0e 3309 	mla	r3, lr, r9, r3
 8015528:	fb01 3307 	mla	r3, r1, r7, r3
 801552c:	7807      	ldrb	r7, [r0, #0]
 801552e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015532:	fb08 3707 	mla	r7, r8, r7, r3
 8015536:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015538:	fa5f fc8c 	uxtb.w	ip, ip
 801553c:	fb1c fc03 	smulbb	ip, ip, r3
 8015540:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015544:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015548:	fb05 b50a 	mla	r5, r5, sl, fp
 801554c:	fb07 c70a 	mla	r7, r7, sl, ip
 8015550:	b2b6      	uxth	r6, r6
 8015552:	b2ad      	uxth	r5, r5
 8015554:	b2bf      	uxth	r7, r7
 8015556:	1c73      	adds	r3, r6, #1
 8015558:	1c7a      	adds	r2, r7, #1
 801555a:	f105 0b01 	add.w	fp, r5, #1
 801555e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015562:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015566:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801556a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801556e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015572:	096d      	lsrs	r5, r5, #5
 8015574:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015576:	4316      	orrs	r6, r2
 8015578:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801557c:	432e      	orrs	r6, r5
 801557e:	f823 6b02 	strh.w	r6, [r3], #2
 8015582:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015584:	930c      	str	r3, [sp, #48]	; 0x30
 8015586:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015588:	4413      	add	r3, r2
 801558a:	9327      	str	r3, [sp, #156]	; 0x9c
 801558c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801558e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015590:	4413      	add	r3, r2
 8015592:	9328      	str	r3, [sp, #160]	; 0xa0
 8015594:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015596:	3b01      	subs	r3, #1
 8015598:	9311      	str	r3, [sp, #68]	; 0x44
 801559a:	e6db      	b.n	8015354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801559c:	b149      	cbz	r1, 80155b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801559e:	5cb2      	ldrb	r2, [r6, r2]
 80155a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80155a4:	4422      	add	r2, r4
 80155a6:	4628      	mov	r0, r5
 80155a8:	462f      	mov	r7, r5
 80155aa:	e771      	b.n	8015490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80155ac:	4628      	mov	r0, r5
 80155ae:	462a      	mov	r2, r5
 80155b0:	e76e      	b.n	8015490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80155b2:	4628      	mov	r0, r5
 80155b4:	462a      	mov	r2, r5
 80155b6:	e7f7      	b.n	80155a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80155b8:	b015      	add	sp, #84	; 0x54
 80155ba:	ecbd 8b08 	vpop	{d8-d11}
 80155be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80155c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c8:	880e      	ldrh	r6, [r1, #0]
 80155ca:	b085      	sub	sp, #20
 80155cc:	0230      	lsls	r0, r6, #8
 80155ce:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80155d2:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80155d6:	0170      	lsls	r0, r6, #5
 80155d8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80155dc:	9101      	str	r1, [sp, #4]
 80155de:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80155e2:	00f6      	lsls	r6, r6, #3
 80155e4:	ea4b 0000 	orr.w	r0, fp, r0
 80155e8:	b2f6      	uxtb	r6, r6
 80155ea:	4691      	mov	r9, r2
 80155ec:	fb05 7a0c 	mla	sl, r5, ip, r7
 80155f0:	4306      	orrs	r6, r0
 80155f2:	2d00      	cmp	r5, #0
 80155f4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80155f8:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80155fc:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015600:	9603      	str	r6, [sp, #12]
 8015602:	eb09 0e0a 	add.w	lr, r9, sl
 8015606:	db42      	blt.n	801568e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015608:	45a8      	cmp	r8, r5
 801560a:	dd40      	ble.n	801568e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801560c:	2f00      	cmp	r7, #0
 801560e:	db3c      	blt.n	801568a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015610:	45bc      	cmp	ip, r7
 8015612:	dd3a      	ble.n	801568a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015614:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015618:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801561c:	441e      	add	r6, r3
 801561e:	1c78      	adds	r0, r7, #1
 8015620:	d438      	bmi.n	8015694 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015622:	4584      	cmp	ip, r0
 8015624:	dd36      	ble.n	8015694 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015626:	b3aa      	cbz	r2, 8015694 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015628:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801562c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015630:	4418      	add	r0, r3
 8015632:	3501      	adds	r5, #1
 8015634:	d432      	bmi.n	801569c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015636:	45a8      	cmp	r8, r5
 8015638:	dd30      	ble.n	801569c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801563a:	b37c      	cbz	r4, 801569c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801563c:	2f00      	cmp	r7, #0
 801563e:	db2b      	blt.n	8015698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015640:	45bc      	cmp	ip, r7
 8015642:	dd29      	ble.n	8015698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015644:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015648:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801564c:	441d      	add	r5, r3
 801564e:	3701      	adds	r7, #1
 8015650:	d427      	bmi.n	80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015652:	45bc      	cmp	ip, r7
 8015654:	dd25      	ble.n	80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015656:	b322      	cbz	r2, 80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015658:	44f4      	add	ip, lr
 801565a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801565e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015662:	443b      	add	r3, r7
 8015664:	781f      	ldrb	r7, [r3, #0]
 8015666:	f896 9000 	ldrb.w	r9, [r6]
 801566a:	f890 a000 	ldrb.w	sl, [r0]
 801566e:	f895 8000 	ldrb.w	r8, [r5]
 8015672:	2a0f      	cmp	r2, #15
 8015674:	4639      	mov	r1, r7
 8015676:	d801      	bhi.n	801567c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015678:	2c0f      	cmp	r4, #15
 801567a:	d914      	bls.n	80156a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 801567c:	4b2c      	ldr	r3, [pc, #176]	; (8015730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801567e:	4a2d      	ldr	r2, [pc, #180]	; (8015734 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015680:	482d      	ldr	r0, [pc, #180]	; (8015738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015682:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015686:	f005 ff77 	bl	801b578 <__assert_func>
 801568a:	ae03      	add	r6, sp, #12
 801568c:	e7c7      	b.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801568e:	a803      	add	r0, sp, #12
 8015690:	4606      	mov	r6, r0
 8015692:	e7ce      	b.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015694:	a803      	add	r0, sp, #12
 8015696:	e7cc      	b.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015698:	ad03      	add	r5, sp, #12
 801569a:	e7d8      	b.n	801564e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 801569c:	ab03      	add	r3, sp, #12
 801569e:	461d      	mov	r5, r3
 80156a0:	e7e0      	b.n	8015664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80156a2:	ab03      	add	r3, sp, #12
 80156a4:	e7de      	b.n	8015664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80156a6:	b292      	uxth	r2, r2
 80156a8:	b2a4      	uxth	r4, r4
 80156aa:	fb02 fe04 	mul.w	lr, r2, r4
 80156ae:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 80156b2:	0112      	lsls	r2, r2, #4
 80156b4:	b2a4      	uxth	r4, r4
 80156b6:	f890 c002 	ldrb.w	ip, [r0, #2]
 80156ba:	f896 b002 	ldrb.w	fp, [r6, #2]
 80156be:	7840      	ldrb	r0, [r0, #1]
 80156c0:	7876      	ldrb	r6, [r6, #1]
 80156c2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80156c6:	eba2 020e 	sub.w	r2, r2, lr
 80156ca:	b292      	uxth	r2, r2
 80156cc:	1b3f      	subs	r7, r7, r4
 80156ce:	b2bf      	uxth	r7, r7
 80156d0:	fb02 fc0c 	mul.w	ip, r2, ip
 80156d4:	fb07 cc0b 	mla	ip, r7, fp, ip
 80156d8:	f895 b002 	ldrb.w	fp, [r5, #2]
 80156dc:	fb04 cc0b 	mla	ip, r4, fp, ip
 80156e0:	f893 b002 	ldrb.w	fp, [r3, #2]
 80156e4:	785b      	ldrb	r3, [r3, #1]
 80156e6:	fb0e cc0b 	mla	ip, lr, fp, ip
 80156ea:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80156ee:	fb02 fc0a 	mul.w	ip, r2, sl
 80156f2:	4342      	muls	r2, r0
 80156f4:	7868      	ldrb	r0, [r5, #1]
 80156f6:	fb07 cc09 	mla	ip, r7, r9, ip
 80156fa:	fb07 2206 	mla	r2, r7, r6, r2
 80156fe:	fb04 cc08 	mla	ip, r4, r8, ip
 8015702:	fb04 2400 	mla	r4, r4, r0, r2
 8015706:	fb0e cc01 	mla	ip, lr, r1, ip
 801570a:	fb0e 4e03 	mla	lr, lr, r3, r4
 801570e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015712:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015716:	ea4c 0c0b 	orr.w	ip, ip, fp
 801571a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801571e:	9b01      	ldr	r3, [sp, #4]
 8015720:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015724:	f8a3 c000 	strh.w	ip, [r3]
 8015728:	b005      	add	sp, #20
 801572a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801572e:	bf00      	nop
 8015730:	0801f4be 	.word	0x0801f4be
 8015734:	0801fa8a 	.word	0x0801fa8a
 8015738:	0801f542 	.word	0x0801f542

0801573c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801573c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015740:	ed2d 8b08 	vpush	{d8-d11}
 8015744:	b08f      	sub	sp, #60	; 0x3c
 8015746:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801574a:	920c      	str	r2, [sp, #48]	; 0x30
 801574c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801574e:	910a      	str	r1, [sp, #40]	; 0x28
 8015750:	9306      	str	r3, [sp, #24]
 8015752:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015756:	900d      	str	r0, [sp, #52]	; 0x34
 8015758:	6850      	ldr	r0, [r2, #4]
 801575a:	6812      	ldr	r2, [r2, #0]
 801575c:	fb00 1303 	mla	r3, r0, r3, r1
 8015760:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015764:	9307      	str	r3, [sp, #28]
 8015766:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015768:	681b      	ldr	r3, [r3, #0]
 801576a:	9308      	str	r3, [sp, #32]
 801576c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801576e:	685c      	ldr	r4, [r3, #4]
 8015770:	eeb0 aa40 	vmov.f32	s20, s0
 8015774:	eef0 9a60 	vmov.f32	s19, s1
 8015778:	eeb0 9a41 	vmov.f32	s18, s2
 801577c:	eeb0 8a62 	vmov.f32	s16, s5
 8015780:	eef0 8a43 	vmov.f32	s17, s6
 8015784:	eef0 ba44 	vmov.f32	s23, s8
 8015788:	eeb0 ba64 	vmov.f32	s22, s9
 801578c:	eef0 aa45 	vmov.f32	s21, s10
 8015790:	3404      	adds	r4, #4
 8015792:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015794:	2b00      	cmp	r3, #0
 8015796:	dc03      	bgt.n	80157a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801579a:	2b00      	cmp	r3, #0
 801579c:	f340 81d6 	ble.w	8015b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80157a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80157a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80157aa:	1e48      	subs	r0, r1, #1
 80157ac:	1e56      	subs	r6, r2, #1
 80157ae:	9b06      	ldr	r3, [sp, #24]
 80157b0:	2b00      	cmp	r3, #0
 80157b2:	f340 80b7 	ble.w	8015924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80157b6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80157ba:	ea4f 4325 	mov.w	r3, r5, asr #16
 80157be:	d406      	bmi.n	80157ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157c0:	4287      	cmp	r7, r0
 80157c2:	da04      	bge.n	80157ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157c4:	2b00      	cmp	r3, #0
 80157c6:	db02      	blt.n	80157ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80157c8:	42b3      	cmp	r3, r6
 80157ca:	f2c0 80ac 	blt.w	8015926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80157ce:	3701      	adds	r7, #1
 80157d0:	f100 809d 	bmi.w	801590e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157d4:	42b9      	cmp	r1, r7
 80157d6:	f2c0 809a 	blt.w	801590e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157da:	3301      	adds	r3, #1
 80157dc:	f100 8097 	bmi.w	801590e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157e0:	429a      	cmp	r2, r3
 80157e2:	f2c0 8094 	blt.w	801590e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157e6:	9b06      	ldr	r3, [sp, #24]
 80157e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80157ea:	9b07      	ldr	r3, [sp, #28]
 80157ec:	9309      	str	r3, [sp, #36]	; 0x24
 80157ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80157f0:	2b00      	cmp	r3, #0
 80157f2:	f340 80b5 	ble.w	8015960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80157f6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80157f8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80157fa:	68c7      	ldr	r7, [r0, #12]
 80157fc:	6892      	ldr	r2, [r2, #8]
 80157fe:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015802:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015806:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801580a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801580e:	f100 80fb 	bmi.w	8015a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015812:	f102 3cff 	add.w	ip, r2, #4294967295
 8015816:	4560      	cmp	r0, ip
 8015818:	f280 80f6 	bge.w	8015a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801581c:	2e00      	cmp	r6, #0
 801581e:	f2c0 80f3 	blt.w	8015a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015822:	f107 3cff 	add.w	ip, r7, #4294967295
 8015826:	4566      	cmp	r6, ip
 8015828:	f280 80ee 	bge.w	8015a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801582c:	b212      	sxth	r2, r2
 801582e:	fb06 0002 	mla	r0, r6, r2, r0
 8015832:	9e08      	ldr	r6, [sp, #32]
 8015834:	1837      	adds	r7, r6, r0
 8015836:	5c30      	ldrb	r0, [r6, r0]
 8015838:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801583c:	eb04 0c08 	add.w	ip, r4, r8
 8015840:	2b00      	cmp	r3, #0
 8015842:	f000 80d3 	beq.w	80159ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015846:	787e      	ldrb	r6, [r7, #1]
 8015848:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801584c:	4426      	add	r6, r4
 801584e:	2900      	cmp	r1, #0
 8015850:	f000 80d4 	beq.w	80159fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015854:	18b8      	adds	r0, r7, r2
 8015856:	5cba      	ldrb	r2, [r7, r2]
 8015858:	7840      	ldrb	r0, [r0, #1]
 801585a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801585e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015862:	4422      	add	r2, r4
 8015864:	4420      	add	r0, r4
 8015866:	b29b      	uxth	r3, r3
 8015868:	b289      	uxth	r1, r1
 801586a:	fb03 f901 	mul.w	r9, r3, r1
 801586e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015872:	011b      	lsls	r3, r3, #4
 8015874:	b289      	uxth	r1, r1
 8015876:	78b7      	ldrb	r7, [r6, #2]
 8015878:	f89c a002 	ldrb.w	sl, [ip, #2]
 801587c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015880:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015884:	eba3 0309 	sub.w	r3, r3, r9
 8015888:	b29b      	uxth	r3, r3
 801588a:	ebae 0e01 	sub.w	lr, lr, r1
 801588e:	fa1f fe8e 	uxth.w	lr, lr
 8015892:	435f      	muls	r7, r3
 8015894:	fb0e 770a 	mla	r7, lr, sl, r7
 8015898:	f892 a002 	ldrb.w	sl, [r2, #2]
 801589c:	fb01 770a 	mla	r7, r1, sl, r7
 80158a0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80158a4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80158a8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80158ac:	f896 8000 	ldrb.w	r8, [r6]
 80158b0:	7876      	ldrb	r6, [r6, #1]
 80158b2:	fb03 f808 	mul.w	r8, r3, r8
 80158b6:	fb0e 8807 	mla	r8, lr, r7, r8
 80158ba:	7817      	ldrb	r7, [r2, #0]
 80158bc:	fb01 8807 	mla	r8, r1, r7, r8
 80158c0:	7807      	ldrb	r7, [r0, #0]
 80158c2:	fb09 8707 	mla	r7, r9, r7, r8
 80158c6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80158ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80158ce:	ea47 070a 	orr.w	r7, r7, sl
 80158d2:	4373      	muls	r3, r6
 80158d4:	f892 a001 	ldrb.w	sl, [r2, #1]
 80158d8:	fb0e 330c 	mla	r3, lr, ip, r3
 80158dc:	fb01 310a 	mla	r1, r1, sl, r3
 80158e0:	f890 a001 	ldrb.w	sl, [r0, #1]
 80158e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158e6:	fb09 1a0a 	mla	sl, r9, sl, r1
 80158ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80158f2:	ea47 070a 	orr.w	r7, r7, sl
 80158f6:	801f      	strh	r7, [r3, #0]
 80158f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158fa:	3302      	adds	r3, #2
 80158fc:	9309      	str	r3, [sp, #36]	; 0x24
 80158fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015900:	449b      	add	fp, r3
 8015902:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015904:	441d      	add	r5, r3
 8015906:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015908:	3b01      	subs	r3, #1
 801590a:	930b      	str	r3, [sp, #44]	; 0x2c
 801590c:	e76f      	b.n	80157ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801590e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015910:	449b      	add	fp, r3
 8015912:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015914:	441d      	add	r5, r3
 8015916:	9b06      	ldr	r3, [sp, #24]
 8015918:	3b01      	subs	r3, #1
 801591a:	9306      	str	r3, [sp, #24]
 801591c:	9b07      	ldr	r3, [sp, #28]
 801591e:	3302      	adds	r3, #2
 8015920:	9307      	str	r3, [sp, #28]
 8015922:	e744      	b.n	80157ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015924:	d023      	beq.n	801596e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015926:	9b06      	ldr	r3, [sp, #24]
 8015928:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801592a:	3b01      	subs	r3, #1
 801592c:	fb00 b003 	mla	r0, r0, r3, fp
 8015930:	1400      	asrs	r0, r0, #16
 8015932:	f53f af58 	bmi.w	80157e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015936:	3901      	subs	r1, #1
 8015938:	4288      	cmp	r0, r1
 801593a:	f6bf af54 	bge.w	80157e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801593e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015940:	fb01 5303 	mla	r3, r1, r3, r5
 8015944:	141b      	asrs	r3, r3, #16
 8015946:	f53f af4e 	bmi.w	80157e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801594a:	3a01      	subs	r2, #1
 801594c:	4293      	cmp	r3, r2
 801594e:	f6bf af4a 	bge.w	80157e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015952:	9b06      	ldr	r3, [sp, #24]
 8015954:	9309      	str	r3, [sp, #36]	; 0x24
 8015956:	9b07      	ldr	r3, [sp, #28]
 8015958:	930b      	str	r3, [sp, #44]	; 0x2c
 801595a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801595c:	2b00      	cmp	r3, #0
 801595e:	dc70      	bgt.n	8015a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015960:	9b06      	ldr	r3, [sp, #24]
 8015962:	9a07      	ldr	r2, [sp, #28]
 8015964:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015968:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801596c:	9307      	str	r3, [sp, #28]
 801596e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015970:	2b00      	cmp	r3, #0
 8015972:	f340 80eb 	ble.w	8015b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015976:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801597a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801597e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015982:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015984:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015988:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801598c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015990:	eef0 6a48 	vmov.f32	s13, s16
 8015994:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801599c:	ee37 8a48 	vsub.f32	s16, s14, s16
 80159a0:	ee16 ba90 	vmov	fp, s13
 80159a4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80159a8:	eef0 6a68 	vmov.f32	s13, s17
 80159ac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80159b0:	ee18 2a10 	vmov	r2, s16
 80159b4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80159b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80159bc:	ee18 2a90 	vmov	r2, s17
 80159c0:	9323      	str	r3, [sp, #140]	; 0x8c
 80159c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80159c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80159c8:	9324      	str	r3, [sp, #144]	; 0x90
 80159ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80159ce:	3b01      	subs	r3, #1
 80159d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159d4:	930a      	str	r3, [sp, #40]	; 0x28
 80159d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80159d8:	bf08      	it	eq
 80159da:	4613      	moveq	r3, r2
 80159dc:	ee16 5a90 	vmov	r5, s13
 80159e0:	9306      	str	r3, [sp, #24]
 80159e2:	eef0 8a67 	vmov.f32	s17, s15
 80159e6:	eeb0 8a47 	vmov.f32	s16, s14
 80159ea:	e6d2      	b.n	8015792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80159ec:	b149      	cbz	r1, 8015a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80159ee:	5cba      	ldrb	r2, [r7, r2]
 80159f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159f4:	4422      	add	r2, r4
 80159f6:	4660      	mov	r0, ip
 80159f8:	4666      	mov	r6, ip
 80159fa:	e734      	b.n	8015866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80159fc:	4660      	mov	r0, ip
 80159fe:	4662      	mov	r2, ip
 8015a00:	e731      	b.n	8015866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015a02:	4660      	mov	r0, ip
 8015a04:	4662      	mov	r2, ip
 8015a06:	e7f7      	b.n	80159f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015a08:	f110 0c01 	adds.w	ip, r0, #1
 8015a0c:	f53f af74 	bmi.w	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a10:	4562      	cmp	r2, ip
 8015a12:	f6ff af71 	blt.w	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a16:	f116 0c01 	adds.w	ip, r6, #1
 8015a1a:	f53f af6d 	bmi.w	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a1e:	4567      	cmp	r7, ip
 8015a20:	f6ff af6a 	blt.w	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a24:	b23f      	sxth	r7, r7
 8015a26:	b212      	sxth	r2, r2
 8015a28:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015a2c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015a30:	9200      	str	r2, [sp, #0]
 8015a32:	9701      	str	r7, [sp, #4]
 8015a34:	4623      	mov	r3, r4
 8015a36:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015a3a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015a3c:	f7ff fdc2 	bl	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015a40:	e75a      	b.n	80158f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015a42:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015a44:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015a48:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015a4c:	1428      	asrs	r0, r5, #16
 8015a4e:	fb02 6000 	mla	r0, r2, r0, r6
 8015a52:	9e08      	ldr	r6, [sp, #32]
 8015a54:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015a58:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015a5c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015a60:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015a64:	1837      	adds	r7, r6, r0
 8015a66:	eb04 0c08 	add.w	ip, r4, r8
 8015a6a:	2b00      	cmp	r3, #0
 8015a6c:	d060      	beq.n	8015b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015a6e:	787e      	ldrb	r6, [r7, #1]
 8015a70:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015a74:	4426      	add	r6, r4
 8015a76:	2900      	cmp	r1, #0
 8015a78:	d062      	beq.n	8015b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015a7a:	18b8      	adds	r0, r7, r2
 8015a7c:	5cba      	ldrb	r2, [r7, r2]
 8015a7e:	7840      	ldrb	r0, [r0, #1]
 8015a80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a84:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015a88:	4422      	add	r2, r4
 8015a8a:	4420      	add	r0, r4
 8015a8c:	b29b      	uxth	r3, r3
 8015a8e:	b289      	uxth	r1, r1
 8015a90:	fb03 f901 	mul.w	r9, r3, r1
 8015a94:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015a98:	011b      	lsls	r3, r3, #4
 8015a9a:	b289      	uxth	r1, r1
 8015a9c:	78b7      	ldrb	r7, [r6, #2]
 8015a9e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015aa2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015aa6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015aaa:	eba3 0309 	sub.w	r3, r3, r9
 8015aae:	b29b      	uxth	r3, r3
 8015ab0:	ebae 0e01 	sub.w	lr, lr, r1
 8015ab4:	fa1f fe8e 	uxth.w	lr, lr
 8015ab8:	435f      	muls	r7, r3
 8015aba:	fb0e 770a 	mla	r7, lr, sl, r7
 8015abe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015ac2:	fb01 770a 	mla	r7, r1, sl, r7
 8015ac6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015aca:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015ace:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015ad2:	f896 8000 	ldrb.w	r8, [r6]
 8015ad6:	7876      	ldrb	r6, [r6, #1]
 8015ad8:	fb03 f808 	mul.w	r8, r3, r8
 8015adc:	fb0e 8807 	mla	r8, lr, r7, r8
 8015ae0:	7817      	ldrb	r7, [r2, #0]
 8015ae2:	fb01 8807 	mla	r8, r1, r7, r8
 8015ae6:	7807      	ldrb	r7, [r0, #0]
 8015ae8:	fb09 8707 	mla	r7, r9, r7, r8
 8015aec:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015af0:	4373      	muls	r3, r6
 8015af2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015af6:	7856      	ldrb	r6, [r2, #1]
 8015af8:	ea47 070a 	orr.w	r7, r7, sl
 8015afc:	fb0e 330c 	mla	r3, lr, ip, r3
 8015b00:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015b04:	fb01 3306 	mla	r3, r1, r6, r3
 8015b08:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015b0c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b16:	ea47 070a 	orr.w	r7, r7, sl
 8015b1a:	f823 7b02 	strh.w	r7, [r3], #2
 8015b1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015b20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015b22:	449b      	add	fp, r3
 8015b24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015b26:	441d      	add	r5, r3
 8015b28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b2a:	3b01      	subs	r3, #1
 8015b2c:	9309      	str	r3, [sp, #36]	; 0x24
 8015b2e:	e714      	b.n	801595a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015b30:	b149      	cbz	r1, 8015b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015b32:	5cba      	ldrb	r2, [r7, r2]
 8015b34:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b38:	4422      	add	r2, r4
 8015b3a:	4660      	mov	r0, ip
 8015b3c:	4666      	mov	r6, ip
 8015b3e:	e7a5      	b.n	8015a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015b40:	4660      	mov	r0, ip
 8015b42:	4662      	mov	r2, ip
 8015b44:	e7a2      	b.n	8015a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015b46:	4660      	mov	r0, ip
 8015b48:	4662      	mov	r2, ip
 8015b4a:	e7f7      	b.n	8015b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015b4c:	b00f      	add	sp, #60	; 0x3c
 8015b4e:	ecbd 8b08 	vpop	{d8-d11}
 8015b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015b58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b5c:	880e      	ldrh	r6, [r1, #0]
 8015b5e:	b085      	sub	sp, #20
 8015b60:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8015b64:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015b68:	4691      	mov	r9, r2
 8015b6a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015b6e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015b72:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8015b76:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015b7a:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8015b7e:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8015b82:	9200      	str	r2, [sp, #0]
 8015b84:	00f6      	lsls	r6, r6, #3
 8015b86:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8015b8a:	9201      	str	r2, [sp, #4]
 8015b8c:	2c00      	cmp	r4, #0
 8015b8e:	b2f2      	uxtb	r2, r6
 8015b90:	fb04 560c 	mla	r6, r4, ip, r5
 8015b94:	9202      	str	r2, [sp, #8]
 8015b96:	eb09 0e06 	add.w	lr, r9, r6
 8015b9a:	db3e      	blt.n	8015c1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015b9c:	45a0      	cmp	r8, r4
 8015b9e:	dd3c      	ble.n	8015c1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015ba0:	2d00      	cmp	r5, #0
 8015ba2:	db38      	blt.n	8015c16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ba4:	45ac      	cmp	ip, r5
 8015ba6:	dd36      	ble.n	8015c16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ba8:	f819 2006 	ldrb.w	r2, [r9, r6]
 8015bac:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015bb0:	1c6e      	adds	r6, r5, #1
 8015bb2:	d435      	bmi.n	8015c20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015bb4:	45b4      	cmp	ip, r6
 8015bb6:	dd33      	ble.n	8015c20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8015bb8:	b3a0      	cbz	r0, 8015c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8015bba:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015bbe:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015bc2:	3401      	adds	r4, #1
 8015bc4:	d432      	bmi.n	8015c2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015bc6:	45a0      	cmp	r8, r4
 8015bc8:	dd30      	ble.n	8015c2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8015bca:	b397      	cbz	r7, 8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015bcc:	2d00      	cmp	r5, #0
 8015bce:	db2b      	blt.n	8015c28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015bd0:	45ac      	cmp	ip, r5
 8015bd2:	dd29      	ble.n	8015c28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015bd4:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015bd8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015bdc:	3501      	adds	r5, #1
 8015bde:	d42b      	bmi.n	8015c38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015be0:	45ac      	cmp	ip, r5
 8015be2:	dd29      	ble.n	8015c38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8015be4:	b350      	cbz	r0, 8015c3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8015be6:	44f4      	add	ip, lr
 8015be8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015bec:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015bf0:	280f      	cmp	r0, #15
 8015bf2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015bf6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015bfa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015bfe:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015c02:	d801      	bhi.n	8015c08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8015c04:	2f0f      	cmp	r7, #15
 8015c06:	d91b      	bls.n	8015c40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8015c08:	4b84      	ldr	r3, [pc, #528]	; (8015e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015c0a:	4a85      	ldr	r2, [pc, #532]	; (8015e20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8015c0c:	4885      	ldr	r0, [pc, #532]	; (8015e24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8015c0e:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015c12:	f005 fcb1 	bl	801b578 <__assert_func>
 8015c16:	2200      	movs	r2, #0
 8015c18:	e7ca      	b.n	8015bb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8015c1a:	2600      	movs	r6, #0
 8015c1c:	4632      	mov	r2, r6
 8015c1e:	e7d0      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c20:	2600      	movs	r6, #0
 8015c22:	e7ce      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c24:	4606      	mov	r6, r0
 8015c26:	e7cc      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8015c28:	2400      	movs	r4, #0
 8015c2a:	e7d7      	b.n	8015bdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8015c2c:	2300      	movs	r3, #0
 8015c2e:	461c      	mov	r4, r3
 8015c30:	e7de      	b.n	8015bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c32:	463b      	mov	r3, r7
 8015c34:	463c      	mov	r4, r7
 8015c36:	e7db      	b.n	8015bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c38:	2300      	movs	r3, #0
 8015c3a:	e7d9      	b.n	8015bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c3c:	4603      	mov	r3, r0
 8015c3e:	e7d7      	b.n	8015bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8015c40:	b280      	uxth	r0, r0
 8015c42:	b2bf      	uxth	r7, r7
 8015c44:	fb00 fe07 	mul.w	lr, r0, r7
 8015c48:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015c4c:	0100      	lsls	r0, r0, #4
 8015c4e:	eba0 0c0e 	sub.w	ip, r0, lr
 8015c52:	b2bf      	uxth	r7, r7
 8015c54:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015c58:	fa1f fc8c 	uxth.w	ip, ip
 8015c5c:	1bed      	subs	r5, r5, r7
 8015c5e:	b2ad      	uxth	r5, r5
 8015c60:	fb0c f00a 	mul.w	r0, ip, sl
 8015c64:	fb05 000b 	mla	r0, r5, fp, r0
 8015c68:	fb07 0009 	mla	r0, r7, r9, r0
 8015c6c:	fb0e 0008 	mla	r0, lr, r8, r0
 8015c70:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015c74:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015c78:	9003      	str	r0, [sp, #12]
 8015c7a:	d018      	beq.n	8015cae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8015c7c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015c80:	fb0b f000 	mul.w	r0, fp, r0
 8015c84:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015c88:	fb0b fb02 	mul.w	fp, fp, r2
 8015c8c:	0a02      	lsrs	r2, r0, #8
 8015c8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015c92:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015c96:	4402      	add	r2, r0
 8015c98:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015c9c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015ca0:	0a12      	lsrs	r2, r2, #8
 8015ca2:	0a00      	lsrs	r0, r0, #8
 8015ca4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015ca8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015cac:	4302      	orrs	r2, r0
 8015cae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015cb2:	d019      	beq.n	8015ce8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8015cb4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015cb8:	fb0a fb0b 	mul.w	fp, sl, fp
 8015cbc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015cc0:	fb0a fa06 	mul.w	sl, sl, r6
 8015cc4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015cc8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015ccc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015cd0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015cd4:	445e      	add	r6, fp
 8015cd6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015cda:	0a36      	lsrs	r6, r6, #8
 8015cdc:	0a00      	lsrs	r0, r0, #8
 8015cde:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015ce2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015ce6:	4306      	orrs	r6, r0
 8015ce8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015cec:	d019      	beq.n	8015d22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8015cee:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015cf2:	fb09 fa0a 	mul.w	sl, r9, sl
 8015cf6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015cfa:	fb09 f904 	mul.w	r9, r9, r4
 8015cfe:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015d02:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015d06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015d0a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015d0e:	4454      	add	r4, sl
 8015d10:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8015d14:	0a24      	lsrs	r4, r4, #8
 8015d16:	0a00      	lsrs	r0, r0, #8
 8015d18:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015d1c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015d20:	4304      	orrs	r4, r0
 8015d22:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015d26:	d019      	beq.n	8015d5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8015d28:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015d2c:	fb08 f909 	mul.w	r9, r8, r9
 8015d30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d34:	fb08 f803 	mul.w	r8, r8, r3
 8015d38:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015d3c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d40:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015d44:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015d48:	444b      	add	r3, r9
 8015d4a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015d4e:	0a1b      	lsrs	r3, r3, #8
 8015d50:	0a00      	lsrs	r0, r0, #8
 8015d52:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d56:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015d5a:	4303      	orrs	r3, r0
 8015d5c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015d60:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015d64:	fb0c f808 	mul.w	r8, ip, r8
 8015d68:	fb05 8800 	mla	r8, r5, r0, r8
 8015d6c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015d70:	fb07 8800 	mla	r8, r7, r0, r8
 8015d74:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015d78:	fb0e 8000 	mla	r0, lr, r0, r8
 8015d7c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015d80:	fb0c f606 	mul.w	r6, ip, r6
 8015d84:	0a00      	lsrs	r0, r0, #8
 8015d86:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015d8a:	fb05 6202 	mla	r2, r5, r2, r6
 8015d8e:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8015d92:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015d96:	fb07 2700 	mla	r7, r7, r0, r2
 8015d9a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015d9e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8015da2:	9c03      	ldr	r4, [sp, #12]
 8015da4:	9e01      	ldr	r6, [sp, #4]
 8015da6:	b29b      	uxth	r3, r3
 8015da8:	435c      	muls	r4, r3
 8015daa:	fb0e 7000 	mla	r0, lr, r0, r7
 8015dae:	1c62      	adds	r2, r4, #1
 8015db0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015db4:	0a00      	lsrs	r0, r0, #8
 8015db6:	9c00      	ldr	r4, [sp, #0]
 8015db8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015dbc:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8015dc0:	ea48 0000 	orr.w	r0, r8, r0
 8015dc4:	b2d2      	uxtb	r2, r2
 8015dc6:	fb14 f402 	smulbb	r4, r4, r2
 8015dca:	0c05      	lsrs	r5, r0, #16
 8015dcc:	fb05 4503 	mla	r5, r5, r3, r4
 8015dd0:	fb16 f602 	smulbb	r6, r6, r2
 8015dd4:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8015dd8:	fb04 6403 	mla	r4, r4, r3, r6
 8015ddc:	9e02      	ldr	r6, [sp, #8]
 8015dde:	b2c0      	uxtb	r0, r0
 8015de0:	fb16 f202 	smulbb	r2, r6, r2
 8015de4:	fb00 2303 	mla	r3, r0, r3, r2
 8015de8:	b2ad      	uxth	r5, r5
 8015dea:	b298      	uxth	r0, r3
 8015dec:	1c43      	adds	r3, r0, #1
 8015dee:	1c6a      	adds	r2, r5, #1
 8015df0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015df4:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015df8:	b2a4      	uxth	r4, r4
 8015dfa:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015dfe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015e02:	4313      	orrs	r3, r2
 8015e04:	1c62      	adds	r2, r4, #1
 8015e06:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015e0a:	0952      	lsrs	r2, r2, #5
 8015e0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e10:	4313      	orrs	r3, r2
 8015e12:	800b      	strh	r3, [r1, #0]
 8015e14:	b005      	add	sp, #20
 8015e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e1a:	bf00      	nop
 8015e1c:	0801f4be 	.word	0x0801f4be
 8015e20:	0801fa8a 	.word	0x0801fa8a
 8015e24:	0801f542 	.word	0x0801f542

08015e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e2c:	ed2d 8b08 	vpush	{d8-d11}
 8015e30:	b09f      	sub	sp, #124	; 0x7c
 8015e32:	eeb0 aa40 	vmov.f32	s20, s0
 8015e36:	921b      	str	r2, [sp, #108]	; 0x6c
 8015e38:	9309      	str	r3, [sp, #36]	; 0x24
 8015e3a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8015e3c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8015e40:	931c      	str	r3, [sp, #112]	; 0x70
 8015e42:	9119      	str	r1, [sp, #100]	; 0x64
 8015e44:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8015e48:	901d      	str	r0, [sp, #116]	; 0x74
 8015e4a:	6850      	ldr	r0, [r2, #4]
 8015e4c:	6812      	ldr	r2, [r2, #0]
 8015e4e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8015e50:	fb00 1303 	mla	r3, r0, r3, r1
 8015e54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e58:	930c      	str	r3, [sp, #48]	; 0x30
 8015e5a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e5c:	681b      	ldr	r3, [r3, #0]
 8015e5e:	9312      	str	r3, [sp, #72]	; 0x48
 8015e60:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e62:	685e      	ldr	r6, [r3, #4]
 8015e64:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8015e68:	930d      	str	r3, [sp, #52]	; 0x34
 8015e6a:	eef0 9a60 	vmov.f32	s19, s1
 8015e6e:	eeb0 9a41 	vmov.f32	s18, s2
 8015e72:	eeb0 8a62 	vmov.f32	s16, s5
 8015e76:	eef0 8a43 	vmov.f32	s17, s6
 8015e7a:	eef0 ba44 	vmov.f32	s23, s8
 8015e7e:	eeb0 ba64 	vmov.f32	s22, s9
 8015e82:	eef0 aa45 	vmov.f32	s21, s10
 8015e86:	3604      	adds	r6, #4
 8015e88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015e8a:	2b00      	cmp	r3, #0
 8015e8c:	dc03      	bgt.n	8015e96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015e8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015e90:	2b00      	cmp	r3, #0
 8015e92:	f340 8388 	ble.w	80165a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8015e96:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015e98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015e9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015ea0:	1e48      	subs	r0, r1, #1
 8015ea2:	1e57      	subs	r7, r2, #1
 8015ea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ea6:	2b00      	cmp	r3, #0
 8015ea8:	f340 8195 	ble.w	80161d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015eac:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015eae:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015eb2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015eb6:	d406      	bmi.n	8015ec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015eb8:	4584      	cmp	ip, r0
 8015eba:	da04      	bge.n	8015ec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ebc:	2b00      	cmp	r3, #0
 8015ebe:	db02      	blt.n	8015ec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ec0:	42bb      	cmp	r3, r7
 8015ec2:	f2c0 8189 	blt.w	80161d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8015ec6:	f11c 0c01 	adds.w	ip, ip, #1
 8015eca:	f100 8177 	bmi.w	80161bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015ece:	4561      	cmp	r1, ip
 8015ed0:	f2c0 8174 	blt.w	80161bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015ed4:	3301      	adds	r3, #1
 8015ed6:	f100 8171 	bmi.w	80161bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015eda:	429a      	cmp	r2, r3
 8015edc:	f2c0 816e 	blt.w	80161bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ee2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015ee4:	931a      	str	r3, [sp, #104]	; 0x68
 8015ee6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015ee8:	2b00      	cmp	r3, #0
 8015eea:	f340 8193 	ble.w	8016214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015eee:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015ef0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015ef4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015ef6:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015efa:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015efc:	141b      	asrs	r3, r3, #16
 8015efe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015f02:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015f06:	f100 81d6 	bmi.w	80162b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8015f0e:	4543      	cmp	r3, r8
 8015f10:	f280 81d1 	bge.w	80162b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015f14:	f1bc 0f00 	cmp.w	ip, #0
 8015f18:	f2c0 81cd 	blt.w	80162b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015f1c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015f20:	45c4      	cmp	ip, r8
 8015f22:	f280 81c8 	bge.w	80162b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015f26:	b200      	sxth	r0, r0
 8015f28:	fb0c 3300 	mla	r3, ip, r0, r3
 8015f2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015f2e:	eb04 0803 	add.w	r8, r4, r3
 8015f32:	5ce3      	ldrb	r3, [r4, r3]
 8015f34:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015f38:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015f3c:	2a00      	cmp	r2, #0
 8015f3e:	f000 81af 	beq.w	80162a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015f42:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015f46:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015f4a:	940e      	str	r4, [sp, #56]	; 0x38
 8015f4c:	0e24      	lsrs	r4, r4, #24
 8015f4e:	9415      	str	r4, [sp, #84]	; 0x54
 8015f50:	b179      	cbz	r1, 8015f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015f52:	eb08 0c00 	add.w	ip, r8, r0
 8015f56:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015f5a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015f5e:	900a      	str	r0, [sp, #40]	; 0x28
 8015f60:	0e00      	lsrs	r0, r0, #24
 8015f62:	9013      	str	r0, [sp, #76]	; 0x4c
 8015f64:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015f68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015f6c:	900f      	str	r0, [sp, #60]	; 0x3c
 8015f6e:	0e00      	lsrs	r0, r0, #24
 8015f70:	9016      	str	r0, [sp, #88]	; 0x58
 8015f72:	b292      	uxth	r2, r2
 8015f74:	b289      	uxth	r1, r1
 8015f76:	fb02 f901 	mul.w	r9, r2, r1
 8015f7a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015f7e:	0112      	lsls	r2, r2, #4
 8015f80:	eba2 0809 	sub.w	r8, r2, r9
 8015f84:	b289      	uxth	r1, r1
 8015f86:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015f8a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015f8e:	fa1f f888 	uxth.w	r8, r8
 8015f92:	1a52      	subs	r2, r2, r1
 8015f94:	b292      	uxth	r2, r2
 8015f96:	fb08 f000 	mul.w	r0, r8, r0
 8015f9a:	fb02 000e 	mla	r0, r2, lr, r0
 8015f9e:	fb01 0004 	mla	r0, r1, r4, r0
 8015fa2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015fa4:	fb09 0004 	mla	r0, r9, r4, r0
 8015fa8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015fac:	2800      	cmp	r0, #0
 8015fae:	f000 80fa 	beq.w	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015fb2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015fb6:	d01b      	beq.n	8015ff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015fb8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015fbc:	fb0e fa0a 	mul.w	sl, lr, sl
 8015fc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015fc4:	fb0e fe03 	mul.w	lr, lr, r3
 8015fc8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015fcc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015fd0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015fd4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015fd8:	4453      	add	r3, sl
 8015fda:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015fde:	0a1b      	lsrs	r3, r3, #8
 8015fe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015fe4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015fe8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015fec:	ea43 030c 	orr.w	r3, r3, ip
 8015ff0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015ff2:	2cff      	cmp	r4, #255	; 0xff
 8015ff4:	d021      	beq.n	801603a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8015ff6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015ff8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015ffc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015ffe:	fb04 fb0b 	mul.w	fp, r4, fp
 8016002:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016004:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016008:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801600a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801600e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016012:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016016:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801601a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801601e:	44de      	add	lr, fp
 8016020:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016024:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016028:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801602c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016030:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016034:	ea4e 040a 	orr.w	r4, lr, sl
 8016038:	940e      	str	r4, [sp, #56]	; 0x38
 801603a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801603c:	2cff      	cmp	r4, #255	; 0xff
 801603e:	d021      	beq.n	8016084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8016040:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016042:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016046:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016048:	fb04 fb0b 	mul.w	fp, r4, fp
 801604c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801604e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016052:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016054:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016058:	fb04 fa0a 	mul.w	sl, r4, sl
 801605c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016060:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016064:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016068:	44de      	add	lr, fp
 801606a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801606e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016072:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016076:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801607a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801607e:	ea4e 040a 	orr.w	r4, lr, sl
 8016082:	940a      	str	r4, [sp, #40]	; 0x28
 8016084:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016086:	2cff      	cmp	r4, #255	; 0xff
 8016088:	d021      	beq.n	80160ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801608a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801608c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016090:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016092:	fb04 fb0b 	mul.w	fp, r4, fp
 8016096:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016098:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801609c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801609e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80160a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80160a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80160ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80160b2:	44de      	add	lr, fp
 80160b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80160b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80160bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80160c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80160c8:	ea4e 040a 	orr.w	r4, lr, sl
 80160cc:	940f      	str	r4, [sp, #60]	; 0x3c
 80160ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80160d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80160d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80160d6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80160da:	fb08 fc0c 	mul.w	ip, r8, ip
 80160de:	fb02 cc0e 	mla	ip, r2, lr, ip
 80160e2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80160e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80160e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 80160ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80160f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80160f2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80160f6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80160fa:	fb08 f80e 	mul.w	r8, r8, lr
 80160fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016102:	fb02 8303 	mla	r3, r2, r3, r8
 8016106:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016108:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801610a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801610e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016110:	fb01 330a 	mla	r3, r1, sl, r3
 8016114:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016118:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801611a:	fb09 3901 	mla	r9, r9, r1, r3
 801611e:	4342      	muls	r2, r0
 8016120:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016124:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016128:	883b      	ldrh	r3, [r7, #0]
 801612a:	1c50      	adds	r0, r2, #1
 801612c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016130:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016134:	ea4c 0c09 	orr.w	ip, ip, r9
 8016138:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801613c:	1219      	asrs	r1, r3, #8
 801613e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8016142:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016146:	b2c0      	uxtb	r0, r0
 8016148:	fb12 f204 	smulbb	r2, r2, r4
 801614c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016150:	fb01 2100 	mla	r1, r1, r0, r2
 8016154:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016158:	10da      	asrs	r2, r3, #3
 801615a:	fa5f fc8c 	uxtb.w	ip, ip
 801615e:	00db      	lsls	r3, r3, #3
 8016160:	fb1c fc04 	smulbb	ip, ip, r4
 8016164:	b2db      	uxtb	r3, r3
 8016166:	b289      	uxth	r1, r1
 8016168:	fb03 c300 	mla	r3, r3, r0, ip
 801616c:	fa1f fc83 	uxth.w	ip, r3
 8016170:	1c4b      	adds	r3, r1, #1
 8016172:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016176:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801617a:	fb1e fe04 	smulbb	lr, lr, r4
 801617e:	f10c 0301 	add.w	r3, ip, #1
 8016182:	fb02 e200 	mla	r2, r2, r0, lr
 8016186:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801618a:	b292      	uxth	r2, r2
 801618c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016190:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016194:	430b      	orrs	r3, r1
 8016196:	1c51      	adds	r1, r2, #1
 8016198:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801619c:	0952      	lsrs	r2, r2, #5
 801619e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161a2:	4313      	orrs	r3, r2
 80161a4:	803b      	strh	r3, [r7, #0]
 80161a6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80161a8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80161aa:	441a      	add	r2, r3
 80161ac:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80161ae:	9231      	str	r2, [sp, #196]	; 0xc4
 80161b0:	441d      	add	r5, r3
 80161b2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80161b4:	3b01      	subs	r3, #1
 80161b6:	3702      	adds	r7, #2
 80161b8:	931a      	str	r3, [sp, #104]	; 0x68
 80161ba:	e694      	b.n	8015ee6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80161bc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80161be:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80161c0:	441c      	add	r4, r3
 80161c2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80161c4:	9431      	str	r4, [sp, #196]	; 0xc4
 80161c6:	441d      	add	r5, r3
 80161c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161ca:	3b01      	subs	r3, #1
 80161cc:	9309      	str	r3, [sp, #36]	; 0x24
 80161ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80161d0:	3302      	adds	r3, #2
 80161d2:	930c      	str	r3, [sp, #48]	; 0x30
 80161d4:	e666      	b.n	8015ea4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80161d6:	d024      	beq.n	8016222 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 80161d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161da:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80161dc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80161de:	3b01      	subs	r3, #1
 80161e0:	fb00 4003 	mla	r0, r0, r3, r4
 80161e4:	1400      	asrs	r0, r0, #16
 80161e6:	f53f ae7b 	bmi.w	8015ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80161ea:	3901      	subs	r1, #1
 80161ec:	4288      	cmp	r0, r1
 80161ee:	f6bf ae77 	bge.w	8015ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80161f2:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80161f4:	fb01 5303 	mla	r3, r1, r3, r5
 80161f8:	141b      	asrs	r3, r3, #16
 80161fa:	f53f ae71 	bmi.w	8015ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80161fe:	3a01      	subs	r2, #1
 8016200:	4293      	cmp	r3, r2
 8016202:	f6bf ae6d 	bge.w	8015ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016206:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801620a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801620e:	f1bb 0f00 	cmp.w	fp, #0
 8016212:	dc70      	bgt.n	80162f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016214:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016216:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801621a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801621c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016220:	930c      	str	r3, [sp, #48]	; 0x30
 8016222:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016224:	2b00      	cmp	r3, #0
 8016226:	f340 81be 	ble.w	80165a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801622a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801622e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016232:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016236:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016238:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801623c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016240:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016244:	eef0 6a48 	vmov.f32	s13, s16
 8016248:	ee69 7a27 	vmul.f32	s15, s18, s15
 801624c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016250:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016254:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016258:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801625c:	eef0 6a68 	vmov.f32	s13, s17
 8016260:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016264:	ee18 2a10 	vmov	r2, s16
 8016268:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801626c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016270:	ee18 2a90 	vmov	r2, s17
 8016274:	9333      	str	r3, [sp, #204]	; 0xcc
 8016276:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016278:	fb92 f3f3 	sdiv	r3, r2, r3
 801627c:	9334      	str	r3, [sp, #208]	; 0xd0
 801627e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016280:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8016282:	3b01      	subs	r3, #1
 8016284:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016288:	9319      	str	r3, [sp, #100]	; 0x64
 801628a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801628c:	bf08      	it	eq
 801628e:	4613      	moveq	r3, r2
 8016290:	ee16 5a90 	vmov	r5, s13
 8016294:	9309      	str	r3, [sp, #36]	; 0x24
 8016296:	eef0 8a67 	vmov.f32	s17, s15
 801629a:	eeb0 8a47 	vmov.f32	s16, s14
 801629e:	e5f3      	b.n	8015e88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80162a0:	2900      	cmp	r1, #0
 80162a2:	f43f ae66 	beq.w	8015f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80162a6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80162aa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80162ae:	900a      	str	r0, [sp, #40]	; 0x28
 80162b0:	0e00      	lsrs	r0, r0, #24
 80162b2:	9013      	str	r0, [sp, #76]	; 0x4c
 80162b4:	e65d      	b.n	8015f72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80162b6:	f113 0801 	adds.w	r8, r3, #1
 80162ba:	f53f af74 	bmi.w	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80162be:	4540      	cmp	r0, r8
 80162c0:	f6ff af71 	blt.w	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80162c4:	f11c 0801 	adds.w	r8, ip, #1
 80162c8:	f53f af6d 	bmi.w	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80162cc:	45c6      	cmp	lr, r8
 80162ce:	f6ff af6a 	blt.w	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80162d2:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80162d4:	9302      	str	r3, [sp, #8]
 80162d6:	b200      	sxth	r0, r0
 80162d8:	fa0f f38e 	sxth.w	r3, lr
 80162dc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80162e0:	e9cd c203 	strd	ip, r2, [sp, #12]
 80162e4:	9301      	str	r3, [sp, #4]
 80162e6:	9000      	str	r0, [sp, #0]
 80162e8:	4633      	mov	r3, r6
 80162ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162ec:	981d      	ldr	r0, [sp, #116]	; 0x74
 80162ee:	4639      	mov	r1, r7
 80162f0:	f7ff fc32 	bl	8015b58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80162f4:	e757      	b.n	80161a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80162f6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80162f8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80162fa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80162fe:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016300:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016304:	1427      	asrs	r7, r4, #16
 8016306:	142b      	asrs	r3, r5, #16
 8016308:	fb01 7303 	mla	r3, r1, r3, r7
 801630c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801630e:	18e7      	adds	r7, r4, r3
 8016310:	5ce3      	ldrb	r3, [r4, r3]
 8016312:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016316:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801631a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801631e:	2a00      	cmp	r2, #0
 8016320:	f000 8137 	beq.w	8016592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8016324:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016328:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801632c:	9410      	str	r4, [sp, #64]	; 0x40
 801632e:	0e24      	lsrs	r4, r4, #24
 8016330:	9417      	str	r4, [sp, #92]	; 0x5c
 8016332:	b170      	cbz	r0, 8016352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016334:	eb07 0e01 	add.w	lr, r7, r1
 8016338:	5c79      	ldrb	r1, [r7, r1]
 801633a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801633e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016340:	0e09      	lsrs	r1, r1, #24
 8016342:	9114      	str	r1, [sp, #80]	; 0x50
 8016344:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016348:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801634c:	9111      	str	r1, [sp, #68]	; 0x44
 801634e:	0e09      	lsrs	r1, r1, #24
 8016350:	9118      	str	r1, [sp, #96]	; 0x60
 8016352:	b292      	uxth	r2, r2
 8016354:	b280      	uxth	r0, r0
 8016356:	fb02 f800 	mul.w	r8, r2, r0
 801635a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801635e:	0112      	lsls	r2, r2, #4
 8016360:	eba2 0e08 	sub.w	lr, r2, r8
 8016364:	b280      	uxth	r0, r0
 8016366:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801636a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801636c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801636e:	fa1f fe8e 	uxth.w	lr, lr
 8016372:	1a12      	subs	r2, r2, r0
 8016374:	b292      	uxth	r2, r2
 8016376:	fb0e f101 	mul.w	r1, lr, r1
 801637a:	fb02 110c 	mla	r1, r2, ip, r1
 801637e:	fb00 1104 	mla	r1, r0, r4, r1
 8016382:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016384:	fb08 1104 	mla	r1, r8, r4, r1
 8016388:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801638c:	2900      	cmp	r1, #0
 801638e:	f000 80f5 	beq.w	801657c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8016392:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016396:	d019      	beq.n	80163cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8016398:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801639c:	fb0c fa0a 	mul.w	sl, ip, sl
 80163a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163a4:	fb0c fc03 	mul.w	ip, ip, r3
 80163a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80163ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163b0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80163b4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80163b8:	4453      	add	r3, sl
 80163ba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80163be:	0a1b      	lsrs	r3, r3, #8
 80163c0:	0a3f      	lsrs	r7, r7, #8
 80163c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163c6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80163ca:	433b      	orrs	r3, r7
 80163cc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163ce:	2cff      	cmp	r4, #255	; 0xff
 80163d0:	d020      	beq.n	8016414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80163d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80163d8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163da:	4367      	muls	r7, r4
 80163dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80163de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80163e2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80163e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80163e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80163ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80163f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80163f4:	44bc      	add	ip, r7
 80163f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80163fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80163fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801640a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801640e:	ea4c 040a 	orr.w	r4, ip, sl
 8016412:	9410      	str	r4, [sp, #64]	; 0x40
 8016414:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016416:	2cff      	cmp	r4, #255	; 0xff
 8016418:	d020      	beq.n	801645c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801641a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801641c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016420:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016422:	4367      	muls	r7, r4
 8016424:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016426:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801642a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801642c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016430:	fb04 fa0a 	mul.w	sl, r4, sl
 8016434:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016438:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801643c:	44bc      	add	ip, r7
 801643e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016442:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016446:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801644a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801644e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016452:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016456:	ea4c 040a 	orr.w	r4, ip, sl
 801645a:	940b      	str	r4, [sp, #44]	; 0x2c
 801645c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801645e:	2cff      	cmp	r4, #255	; 0xff
 8016460:	d020      	beq.n	80164a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016462:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016464:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016468:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801646a:	4367      	muls	r7, r4
 801646c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801646e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016472:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016474:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016478:	fb04 fa0a 	mul.w	sl, r4, sl
 801647c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016480:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016484:	44bc      	add	ip, r7
 8016486:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801648a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801648e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016492:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016496:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801649a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801649e:	ea4c 040a 	orr.w	r4, ip, sl
 80164a2:	9411      	str	r4, [sp, #68]	; 0x44
 80164a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80164a6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80164aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80164ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80164b0:	fb0e f707 	mul.w	r7, lr, r7
 80164b4:	fb02 770c 	mla	r7, r2, ip, r7
 80164b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80164bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80164be:	fb00 770c 	mla	r7, r0, ip, r7
 80164c2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80164c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80164c8:	fb08 770c 	mla	r7, r8, ip, r7
 80164cc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80164d0:	fb0e fe0c 	mul.w	lr, lr, ip
 80164d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164d8:	fb02 e303 	mla	r3, r2, r3, lr
 80164dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80164de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80164e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80164e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80164e6:	fb00 330a 	mla	r3, r0, sl, r3
 80164ea:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80164ee:	fb08 3c0c 	mla	ip, r8, ip, r3
 80164f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80164f4:	f8b9 0000 	ldrh.w	r0, [r9]
 80164f8:	434b      	muls	r3, r1
 80164fa:	0a3f      	lsrs	r7, r7, #8
 80164fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016500:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016504:	1c59      	adds	r1, r3, #1
 8016506:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801650a:	ea47 070c 	orr.w	r7, r7, ip
 801650e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016512:	1202      	asrs	r2, r0, #8
 8016514:	0c3b      	lsrs	r3, r7, #16
 8016516:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801651a:	b2c9      	uxtb	r1, r1
 801651c:	fb13 f304 	smulbb	r3, r3, r4
 8016520:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016524:	fb02 3201 	mla	r2, r2, r1, r3
 8016528:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801652c:	10c3      	asrs	r3, r0, #3
 801652e:	b2ff      	uxtb	r7, r7
 8016530:	00c0      	lsls	r0, r0, #3
 8016532:	b292      	uxth	r2, r2
 8016534:	fb1c fc04 	smulbb	ip, ip, r4
 8016538:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801653c:	b2c0      	uxtb	r0, r0
 801653e:	fb17 f704 	smulbb	r7, r7, r4
 8016542:	fb03 c301 	mla	r3, r3, r1, ip
 8016546:	fb00 7001 	mla	r0, r0, r1, r7
 801654a:	f102 0c01 	add.w	ip, r2, #1
 801654e:	b280      	uxth	r0, r0
 8016550:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016554:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016558:	1c42      	adds	r2, r0, #1
 801655a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801655e:	b29b      	uxth	r3, r3
 8016560:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016564:	ea42 020c 	orr.w	r2, r2, ip
 8016568:	f103 0c01 	add.w	ip, r3, #1
 801656c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016570:	095b      	lsrs	r3, r3, #5
 8016572:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016576:	431a      	orrs	r2, r3
 8016578:	f8a9 2000 	strh.w	r2, [r9]
 801657c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801657e:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016580:	441a      	add	r2, r3
 8016582:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016584:	9231      	str	r2, [sp, #196]	; 0xc4
 8016586:	f109 0902 	add.w	r9, r9, #2
 801658a:	441d      	add	r5, r3
 801658c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016590:	e63d      	b.n	801620e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016592:	2800      	cmp	r0, #0
 8016594:	f43f aedd 	beq.w	8016352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016598:	5c79      	ldrb	r1, [r7, r1]
 801659a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801659e:	910b      	str	r1, [sp, #44]	; 0x2c
 80165a0:	0e09      	lsrs	r1, r1, #24
 80165a2:	9114      	str	r1, [sp, #80]	; 0x50
 80165a4:	e6d5      	b.n	8016352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80165a6:	b01f      	add	sp, #124	; 0x7c
 80165a8:	ecbd 8b08 	vpop	{d8-d11}
 80165ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80165b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165b4:	880e      	ldrh	r6, [r1, #0]
 80165b6:	b085      	sub	sp, #20
 80165b8:	ea4f 2826 	mov.w	r8, r6, asr #8
 80165bc:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80165c0:	4691      	mov	r9, r2
 80165c2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80165c6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 80165ca:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80165ce:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80165d2:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 80165d6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80165da:	9200      	str	r2, [sp, #0]
 80165dc:	00f6      	lsls	r6, r6, #3
 80165de:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 80165e2:	9201      	str	r2, [sp, #4]
 80165e4:	2c00      	cmp	r4, #0
 80165e6:	b2f2      	uxtb	r2, r6
 80165e8:	fb04 560c 	mla	r6, r4, ip, r5
 80165ec:	9202      	str	r2, [sp, #8]
 80165ee:	eb09 0806 	add.w	r8, r9, r6
 80165f2:	db3f      	blt.n	8016674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 80165f4:	45a6      	cmp	lr, r4
 80165f6:	dd3d      	ble.n	8016674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 80165f8:	2d00      	cmp	r5, #0
 80165fa:	db39      	blt.n	8016670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 80165fc:	45ac      	cmp	ip, r5
 80165fe:	dd37      	ble.n	8016670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016600:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016604:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016608:	1c6e      	adds	r6, r5, #1
 801660a:	d436      	bmi.n	801667a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801660c:	45b4      	cmp	ip, r6
 801660e:	dd34      	ble.n	801667a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016610:	b3a8      	cbz	r0, 801667e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016612:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016616:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801661a:	3401      	adds	r4, #1
 801661c:	d433      	bmi.n	8016686 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801661e:	45a6      	cmp	lr, r4
 8016620:	dd31      	ble.n	8016686 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016622:	b39f      	cbz	r7, 801668c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016624:	2d00      	cmp	r5, #0
 8016626:	eb08 0e0c 	add.w	lr, r8, ip
 801662a:	db2a      	blt.n	8016682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801662c:	45ac      	cmp	ip, r5
 801662e:	dd28      	ble.n	8016682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016630:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016634:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016638:	3501      	adds	r5, #1
 801663a:	d42a      	bmi.n	8016692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801663c:	45ac      	cmp	ip, r5
 801663e:	dd28      	ble.n	8016692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016640:	b348      	cbz	r0, 8016696 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016642:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016646:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801664a:	280f      	cmp	r0, #15
 801664c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016650:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016654:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016658:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801665c:	d801      	bhi.n	8016662 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801665e:	2f0f      	cmp	r7, #15
 8016660:	d91b      	bls.n	801669a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016662:	4b7d      	ldr	r3, [pc, #500]	; (8016858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016664:	4a7d      	ldr	r2, [pc, #500]	; (801685c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016666:	487e      	ldr	r0, [pc, #504]	; (8016860 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016668:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801666c:	f004 ff84 	bl	801b578 <__assert_func>
 8016670:	2200      	movs	r2, #0
 8016672:	e7c9      	b.n	8016608 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016674:	2600      	movs	r6, #0
 8016676:	4632      	mov	r2, r6
 8016678:	e7cf      	b.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801667a:	2600      	movs	r6, #0
 801667c:	e7cd      	b.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801667e:	4606      	mov	r6, r0
 8016680:	e7cb      	b.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016682:	2400      	movs	r4, #0
 8016684:	e7d8      	b.n	8016638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016686:	2300      	movs	r3, #0
 8016688:	461c      	mov	r4, r3
 801668a:	e7de      	b.n	801664a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801668c:	463b      	mov	r3, r7
 801668e:	463c      	mov	r4, r7
 8016690:	e7db      	b.n	801664a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016692:	2300      	movs	r3, #0
 8016694:	e7d9      	b.n	801664a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016696:	4603      	mov	r3, r0
 8016698:	e7d7      	b.n	801664a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801669a:	b280      	uxth	r0, r0
 801669c:	b2bf      	uxth	r7, r7
 801669e:	fb00 fe07 	mul.w	lr, r0, r7
 80166a2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80166a6:	0100      	lsls	r0, r0, #4
 80166a8:	eba0 0c0e 	sub.w	ip, r0, lr
 80166ac:	b2bf      	uxth	r7, r7
 80166ae:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80166b2:	fa1f fc8c 	uxth.w	ip, ip
 80166b6:	1bed      	subs	r5, r5, r7
 80166b8:	b2ad      	uxth	r5, r5
 80166ba:	fb0c f00a 	mul.w	r0, ip, sl
 80166be:	fb05 000b 	mla	r0, r5, fp, r0
 80166c2:	fb07 0009 	mla	r0, r7, r9, r0
 80166c6:	fb0e 0008 	mla	r0, lr, r8, r0
 80166ca:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80166ce:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80166d2:	9003      	str	r0, [sp, #12]
 80166d4:	d018      	beq.n	8016708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 80166d6:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80166da:	fb0b f000 	mul.w	r0, fp, r0
 80166de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80166e2:	fb0b fb02 	mul.w	fp, fp, r2
 80166e6:	0a02      	lsrs	r2, r0, #8
 80166e8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80166ec:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80166f0:	4402      	add	r2, r0
 80166f2:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80166f6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80166fa:	0a12      	lsrs	r2, r2, #8
 80166fc:	0a00      	lsrs	r0, r0, #8
 80166fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016702:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016706:	4302      	orrs	r2, r0
 8016708:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801670c:	d019      	beq.n	8016742 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801670e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016712:	fb0a fb0b 	mul.w	fp, sl, fp
 8016716:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801671a:	fb0a fa06 	mul.w	sl, sl, r6
 801671e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016722:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016726:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801672a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801672e:	445e      	add	r6, fp
 8016730:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016734:	0a36      	lsrs	r6, r6, #8
 8016736:	0a00      	lsrs	r0, r0, #8
 8016738:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801673c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016740:	4306      	orrs	r6, r0
 8016742:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016746:	d019      	beq.n	801677c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016748:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801674c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016750:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016754:	fb09 f904 	mul.w	r9, r9, r4
 8016758:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801675c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016760:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016764:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016768:	4454      	add	r4, sl
 801676a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801676e:	0a24      	lsrs	r4, r4, #8
 8016770:	0a00      	lsrs	r0, r0, #8
 8016772:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016776:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801677a:	4304      	orrs	r4, r0
 801677c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016780:	d019      	beq.n	80167b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016782:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016786:	fb08 f909 	mul.w	r9, r8, r9
 801678a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801678e:	fb08 f803 	mul.w	r8, r8, r3
 8016792:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016796:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801679a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801679e:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80167a2:	444b      	add	r3, r9
 80167a4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80167a8:	0a1b      	lsrs	r3, r3, #8
 80167aa:	0a00      	lsrs	r0, r0, #8
 80167ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167b0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80167b4:	4303      	orrs	r3, r0
 80167b6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80167ba:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80167be:	fb0c f808 	mul.w	r8, ip, r8
 80167c2:	fb05 8800 	mla	r8, r5, r0, r8
 80167c6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80167ca:	fb07 8800 	mla	r8, r7, r0, r8
 80167ce:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80167d2:	fb0e 8000 	mla	r0, lr, r0, r8
 80167d6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80167da:	fb0c f606 	mul.w	r6, ip, r6
 80167de:	0a00      	lsrs	r0, r0, #8
 80167e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80167e4:	fb05 6202 	mla	r2, r5, r2, r6
 80167e8:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80167ec:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80167f0:	fb07 2700 	mla	r7, r7, r0, r2
 80167f4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80167f8:	9b03      	ldr	r3, [sp, #12]
 80167fa:	9d00      	ldr	r5, [sp, #0]
 80167fc:	9a02      	ldr	r2, [sp, #8]
 80167fe:	fb0e 7000 	mla	r0, lr, r0, r7
 8016802:	43dc      	mvns	r4, r3
 8016804:	9b01      	ldr	r3, [sp, #4]
 8016806:	b2e4      	uxtb	r4, r4
 8016808:	0a00      	lsrs	r0, r0, #8
 801680a:	4363      	muls	r3, r4
 801680c:	4365      	muls	r5, r4
 801680e:	4362      	muls	r2, r4
 8016810:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016814:	ea48 0000 	orr.w	r0, r8, r0
 8016818:	4614      	mov	r4, r2
 801681a:	1c5e      	adds	r6, r3, #1
 801681c:	1c6a      	adds	r2, r5, #1
 801681e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016822:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016826:	0a03      	lsrs	r3, r0, #8
 8016828:	0c02      	lsrs	r2, r0, #16
 801682a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801682e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016832:	00db      	lsls	r3, r3, #3
 8016834:	0212      	lsls	r2, r2, #8
 8016836:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801683a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801683e:	4313      	orrs	r3, r2
 8016840:	1c62      	adds	r2, r4, #1
 8016842:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016846:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801684a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801684e:	4318      	orrs	r0, r3
 8016850:	8008      	strh	r0, [r1, #0]
 8016852:	b005      	add	sp, #20
 8016854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016858:	0801f4be 	.word	0x0801f4be
 801685c:	0801fa8a 	.word	0x0801fa8a
 8016860:	0801f542 	.word	0x0801f542

08016864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016868:	ed2d 8b08 	vpush	{d8-d11}
 801686c:	b09b      	sub	sp, #108	; 0x6c
 801686e:	eeb0 aa40 	vmov.f32	s20, s0
 8016872:	9218      	str	r2, [sp, #96]	; 0x60
 8016874:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016876:	9116      	str	r1, [sp, #88]	; 0x58
 8016878:	9307      	str	r3, [sp, #28]
 801687a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801687e:	9019      	str	r0, [sp, #100]	; 0x64
 8016880:	6850      	ldr	r0, [r2, #4]
 8016882:	6812      	ldr	r2, [r2, #0]
 8016884:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016886:	fb00 1303 	mla	r3, r0, r3, r1
 801688a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801688e:	930a      	str	r3, [sp, #40]	; 0x28
 8016890:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016892:	681b      	ldr	r3, [r3, #0]
 8016894:	930f      	str	r3, [sp, #60]	; 0x3c
 8016896:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016898:	685e      	ldr	r6, [r3, #4]
 801689a:	eef0 9a60 	vmov.f32	s19, s1
 801689e:	eeb0 9a41 	vmov.f32	s18, s2
 80168a2:	eeb0 8a62 	vmov.f32	s16, s5
 80168a6:	eef0 8a43 	vmov.f32	s17, s6
 80168aa:	eef0 ba44 	vmov.f32	s23, s8
 80168ae:	eeb0 ba64 	vmov.f32	s22, s9
 80168b2:	eef0 aa45 	vmov.f32	s21, s10
 80168b6:	3604      	adds	r6, #4
 80168b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80168ba:	2b00      	cmp	r3, #0
 80168bc:	dc03      	bgt.n	80168c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80168be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80168c0:	2b00      	cmp	r3, #0
 80168c2:	f340 8373 	ble.w	8016fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80168c6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80168c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80168cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80168d0:	1e48      	subs	r0, r1, #1
 80168d2:	1e57      	subs	r7, r2, #1
 80168d4:	9b07      	ldr	r3, [sp, #28]
 80168d6:	2b00      	cmp	r3, #0
 80168d8:	f340 8190 	ble.w	8016bfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80168dc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80168de:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80168e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80168e6:	d406      	bmi.n	80168f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168e8:	4584      	cmp	ip, r0
 80168ea:	da04      	bge.n	80168f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168ec:	2b00      	cmp	r3, #0
 80168ee:	db02      	blt.n	80168f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80168f0:	42bb      	cmp	r3, r7
 80168f2:	f2c0 8184 	blt.w	8016bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 80168f6:	f11c 0c01 	adds.w	ip, ip, #1
 80168fa:	f100 8172 	bmi.w	8016be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80168fe:	4561      	cmp	r1, ip
 8016900:	f2c0 816f 	blt.w	8016be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016904:	3301      	adds	r3, #1
 8016906:	f100 816c 	bmi.w	8016be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801690a:	429a      	cmp	r2, r3
 801690c:	f2c0 8169 	blt.w	8016be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016910:	9b07      	ldr	r3, [sp, #28]
 8016912:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016914:	9317      	str	r3, [sp, #92]	; 0x5c
 8016916:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016918:	2b00      	cmp	r3, #0
 801691a:	f340 818e 	ble.w	8016c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801691e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016920:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016924:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016926:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801692a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801692c:	141b      	asrs	r3, r3, #16
 801692e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016932:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016936:	f100 81d1 	bmi.w	8016cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801693a:	f101 38ff 	add.w	r8, r1, #4294967295
 801693e:	4543      	cmp	r3, r8
 8016940:	f280 81cc 	bge.w	8016cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016944:	f1bc 0f00 	cmp.w	ip, #0
 8016948:	f2c0 81c8 	blt.w	8016cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801694c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016950:	45c4      	cmp	ip, r8
 8016952:	f280 81c3 	bge.w	8016cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016956:	b209      	sxth	r1, r1
 8016958:	fb0c 3301 	mla	r3, ip, r1, r3
 801695c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801695e:	eb04 0803 	add.w	r8, r4, r3
 8016962:	5ce3      	ldrb	r3, [r4, r3]
 8016964:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016968:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801696c:	2a00      	cmp	r2, #0
 801696e:	f000 81aa 	beq.w	8016cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8016972:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016976:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801697a:	940b      	str	r4, [sp, #44]	; 0x2c
 801697c:	0e24      	lsrs	r4, r4, #24
 801697e:	9412      	str	r4, [sp, #72]	; 0x48
 8016980:	b178      	cbz	r0, 80169a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016982:	eb08 0c01 	add.w	ip, r8, r1
 8016986:	f818 1001 	ldrb.w	r1, [r8, r1]
 801698a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801698e:	9108      	str	r1, [sp, #32]
 8016990:	0e09      	lsrs	r1, r1, #24
 8016992:	9110      	str	r1, [sp, #64]	; 0x40
 8016994:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016998:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801699c:	910c      	str	r1, [sp, #48]	; 0x30
 801699e:	0e09      	lsrs	r1, r1, #24
 80169a0:	9113      	str	r1, [sp, #76]	; 0x4c
 80169a2:	b292      	uxth	r2, r2
 80169a4:	b280      	uxth	r0, r0
 80169a6:	fb02 f900 	mul.w	r9, r2, r0
 80169aa:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80169ae:	0112      	lsls	r2, r2, #4
 80169b0:	eba2 0809 	sub.w	r8, r2, r9
 80169b4:	b280      	uxth	r0, r0
 80169b6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80169ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 80169bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169be:	fa1f f888 	uxth.w	r8, r8
 80169c2:	1a12      	subs	r2, r2, r0
 80169c4:	b292      	uxth	r2, r2
 80169c6:	fb08 f101 	mul.w	r1, r8, r1
 80169ca:	fb02 110e 	mla	r1, r2, lr, r1
 80169ce:	fb00 1104 	mla	r1, r0, r4, r1
 80169d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80169d4:	fb09 1104 	mla	r1, r9, r4, r1
 80169d8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80169dc:	2900      	cmp	r1, #0
 80169de:	f000 80f5 	beq.w	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80169e2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80169e6:	d01b      	beq.n	8016a20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80169e8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80169ec:	fb0e fa0a 	mul.w	sl, lr, sl
 80169f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80169f4:	fb0e fe03 	mul.w	lr, lr, r3
 80169f8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80169fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a00:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016a04:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016a08:	4453      	add	r3, sl
 8016a0a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016a0e:	0a1b      	lsrs	r3, r3, #8
 8016a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a18:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016a1c:	ea43 030c 	orr.w	r3, r3, ip
 8016a20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a22:	2cff      	cmp	r4, #255	; 0xff
 8016a24:	d021      	beq.n	8016a6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016a26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a28:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016a2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a2e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016a32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016a3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a46:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016a4a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016a4e:	44de      	add	lr, fp
 8016a50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016a54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016a58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a64:	ea4e 040a 	orr.w	r4, lr, sl
 8016a68:	940b      	str	r4, [sp, #44]	; 0x2c
 8016a6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a6c:	2cff      	cmp	r4, #255	; 0xff
 8016a6e:	d021      	beq.n	8016ab4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016a70:	9c08      	ldr	r4, [sp, #32]
 8016a72:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016a76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a78:	fb04 fb0b 	mul.w	fp, r4, fp
 8016a7c:	9c08      	ldr	r4, [sp, #32]
 8016a7e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016a88:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016a90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016a94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016a98:	44de      	add	lr, fp
 8016a9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016a9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016aa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016aa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016aaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016aae:	ea4e 040a 	orr.w	r4, lr, sl
 8016ab2:	9408      	str	r4, [sp, #32]
 8016ab4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ab6:	2cff      	cmp	r4, #255	; 0xff
 8016ab8:	d021      	beq.n	8016afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016aba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016abc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016ac0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ac2:	fb04 fb0b 	mul.w	fp, r4, fp
 8016ac6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016ac8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016acc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ace:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016ad2:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ad6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ada:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016ade:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016ae2:	44de      	add	lr, fp
 8016ae4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016ae8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016aec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016af0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016af4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016af8:	ea4e 040a 	orr.w	r4, lr, sl
 8016afc:	940c      	str	r4, [sp, #48]	; 0x30
 8016afe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b00:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b04:	9c08      	ldr	r4, [sp, #32]
 8016b06:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016b0a:	fb08 fc0c 	mul.w	ip, r8, ip
 8016b0e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016b12:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016b16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016b18:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016b1c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016b20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b22:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016b26:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016b2a:	fb08 f80e 	mul.w	r8, r8, lr
 8016b2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b32:	fb02 8303 	mla	r3, r2, r3, r8
 8016b36:	9a08      	ldr	r2, [sp, #32]
 8016b38:	f8b7 8000 	ldrh.w	r8, [r7]
 8016b3c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016b40:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016b42:	fb00 330a 	mla	r3, r0, sl, r3
 8016b46:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016b4a:	fb09 3900 	mla	r9, r9, r0, r3
 8016b4e:	43c9      	mvns	r1, r1
 8016b50:	ea4f 2228 	mov.w	r2, r8, asr #8
 8016b54:	fa5f fe81 	uxtb.w	lr, r1
 8016b58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b5c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016b60:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016b64:	fb02 f20e 	mul.w	r2, r2, lr
 8016b68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b6c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016b70:	ea4c 0c09 	orr.w	ip, ip, r9
 8016b74:	1c53      	adds	r3, r2, #1
 8016b76:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8016b7a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8016b7e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8016b82:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016b86:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016b8a:	4a63      	ldr	r2, [pc, #396]	; (8016d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8016b8c:	fb00 f00e 	mul.w	r0, r0, lr
 8016b90:	b2db      	uxtb	r3, r3
 8016b92:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8016b96:	1c43      	adds	r3, r0, #1
 8016b98:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016b9c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016ba0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8016ba4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016ba8:	b2c9      	uxtb	r1, r1
 8016baa:	00db      	lsls	r3, r3, #3
 8016bac:	fb01 f10e 	mul.w	r1, r1, lr
 8016bb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016bb4:	4313      	orrs	r3, r2
 8016bb6:	1c4a      	adds	r2, r1, #1
 8016bb8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016bbc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016bc0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8016bc4:	ea4c 0c03 	orr.w	ip, ip, r3
 8016bc8:	f8a7 c000 	strh.w	ip, [r7]
 8016bcc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016bce:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016bd0:	441a      	add	r2, r3
 8016bd2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016bd4:	922d      	str	r2, [sp, #180]	; 0xb4
 8016bd6:	441d      	add	r5, r3
 8016bd8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016bda:	3b01      	subs	r3, #1
 8016bdc:	3702      	adds	r7, #2
 8016bde:	9317      	str	r3, [sp, #92]	; 0x5c
 8016be0:	e699      	b.n	8016916 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016be2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016be4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016be6:	441c      	add	r4, r3
 8016be8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016bea:	942d      	str	r4, [sp, #180]	; 0xb4
 8016bec:	441d      	add	r5, r3
 8016bee:	9b07      	ldr	r3, [sp, #28]
 8016bf0:	3b01      	subs	r3, #1
 8016bf2:	9307      	str	r3, [sp, #28]
 8016bf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016bf6:	3302      	adds	r3, #2
 8016bf8:	930a      	str	r3, [sp, #40]	; 0x28
 8016bfa:	e66b      	b.n	80168d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bfc:	d024      	beq.n	8016c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8016bfe:	9b07      	ldr	r3, [sp, #28]
 8016c00:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8016c02:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016c04:	3b01      	subs	r3, #1
 8016c06:	fb00 4003 	mla	r0, r0, r3, r4
 8016c0a:	1400      	asrs	r0, r0, #16
 8016c0c:	f53f ae80 	bmi.w	8016910 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c10:	3901      	subs	r1, #1
 8016c12:	4288      	cmp	r0, r1
 8016c14:	f6bf ae7c 	bge.w	8016910 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c18:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016c1a:	fb01 5303 	mla	r3, r1, r3, r5
 8016c1e:	141b      	asrs	r3, r3, #16
 8016c20:	f53f ae76 	bmi.w	8016910 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c24:	3a01      	subs	r2, #1
 8016c26:	4293      	cmp	r3, r2
 8016c28:	f6bf ae72 	bge.w	8016910 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016c2c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016c30:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8016c34:	f1bb 0f00 	cmp.w	fp, #0
 8016c38:	dc70      	bgt.n	8016d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8016c3a:	9b07      	ldr	r3, [sp, #28]
 8016c3c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c42:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016c46:	930a      	str	r3, [sp, #40]	; 0x28
 8016c48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016c4a:	2b00      	cmp	r3, #0
 8016c4c:	f340 81ae 	ble.w	8016fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016c50:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016c54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016c58:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016c5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016c5e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016c62:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016c66:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016c6a:	eef0 6a48 	vmov.f32	s13, s16
 8016c6e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016c72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c76:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016c7a:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8016c7e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016c82:	eef0 6a68 	vmov.f32	s13, s17
 8016c86:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016c8a:	ee18 2a10 	vmov	r2, s16
 8016c8e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c96:	ee18 2a90 	vmov	r2, s17
 8016c9a:	932f      	str	r3, [sp, #188]	; 0xbc
 8016c9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016c9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ca2:	9330      	str	r3, [sp, #192]	; 0xc0
 8016ca4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016ca6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016ca8:	3b01      	subs	r3, #1
 8016caa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016cae:	9316      	str	r3, [sp, #88]	; 0x58
 8016cb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016cb2:	bf08      	it	eq
 8016cb4:	4613      	moveq	r3, r2
 8016cb6:	ee16 5a90 	vmov	r5, s13
 8016cba:	9307      	str	r3, [sp, #28]
 8016cbc:	eef0 8a67 	vmov.f32	s17, s15
 8016cc0:	eeb0 8a47 	vmov.f32	s16, s14
 8016cc4:	e5f8      	b.n	80168b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016cc6:	2800      	cmp	r0, #0
 8016cc8:	f43f ae6b 	beq.w	80169a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016ccc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016cd0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016cd4:	9108      	str	r1, [sp, #32]
 8016cd6:	0e09      	lsrs	r1, r1, #24
 8016cd8:	9110      	str	r1, [sp, #64]	; 0x40
 8016cda:	e662      	b.n	80169a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016cdc:	f113 0801 	adds.w	r8, r3, #1
 8016ce0:	f53f af74 	bmi.w	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016ce4:	4541      	cmp	r1, r8
 8016ce6:	f6ff af71 	blt.w	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016cea:	f11c 0801 	adds.w	r8, ip, #1
 8016cee:	f53f af6d 	bmi.w	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016cf2:	45c6      	cmp	lr, r8
 8016cf4:	f6ff af6a 	blt.w	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016cf8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016cfc:	b209      	sxth	r1, r1
 8016cfe:	fa0f f38e 	sxth.w	r3, lr
 8016d02:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8016d06:	9301      	str	r3, [sp, #4]
 8016d08:	9100      	str	r1, [sp, #0]
 8016d0a:	4633      	mov	r3, r6
 8016d0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016d0e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016d10:	4639      	mov	r1, r7
 8016d12:	f7ff fc4d 	bl	80165b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016d16:	e759      	b.n	8016bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016d18:	fffff800 	.word	0xfffff800
 8016d1c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d1e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016d20:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016d24:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016d2a:	1427      	asrs	r7, r4, #16
 8016d2c:	142b      	asrs	r3, r5, #16
 8016d2e:	fb01 7303 	mla	r3, r1, r3, r7
 8016d32:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016d34:	18e7      	adds	r7, r4, r3
 8016d36:	5ce3      	ldrb	r3, [r4, r3]
 8016d38:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016d3c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016d40:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016d44:	2a00      	cmp	r2, #0
 8016d46:	f000 8127 	beq.w	8016f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8016d4a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016d4e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016d52:	940d      	str	r4, [sp, #52]	; 0x34
 8016d54:	0e24      	lsrs	r4, r4, #24
 8016d56:	9414      	str	r4, [sp, #80]	; 0x50
 8016d58:	b170      	cbz	r0, 8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016d5a:	eb07 0e01 	add.w	lr, r7, r1
 8016d5e:	5c79      	ldrb	r1, [r7, r1]
 8016d60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016d64:	9109      	str	r1, [sp, #36]	; 0x24
 8016d66:	0e09      	lsrs	r1, r1, #24
 8016d68:	9111      	str	r1, [sp, #68]	; 0x44
 8016d6a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016d6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016d72:	910e      	str	r1, [sp, #56]	; 0x38
 8016d74:	0e09      	lsrs	r1, r1, #24
 8016d76:	9115      	str	r1, [sp, #84]	; 0x54
 8016d78:	b292      	uxth	r2, r2
 8016d7a:	b280      	uxth	r0, r0
 8016d7c:	fb02 f800 	mul.w	r8, r2, r0
 8016d80:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016d84:	0112      	lsls	r2, r2, #4
 8016d86:	eba2 0e08 	sub.w	lr, r2, r8
 8016d8a:	b280      	uxth	r0, r0
 8016d8c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016d90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016d94:	fa1f fe8e 	uxth.w	lr, lr
 8016d98:	1a09      	subs	r1, r1, r0
 8016d9a:	b289      	uxth	r1, r1
 8016d9c:	fb0e f202 	mul.w	r2, lr, r2
 8016da0:	fb01 220c 	mla	r2, r1, ip, r2
 8016da4:	fb00 2204 	mla	r2, r0, r4, r2
 8016da8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016daa:	fb08 2204 	mla	r2, r8, r4, r2
 8016dae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016db2:	2a00      	cmp	r2, #0
 8016db4:	f000 80e5 	beq.w	8016f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8016db8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016dbc:	d019      	beq.n	8016df2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8016dbe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016dc2:	fb0c fa0a 	mul.w	sl, ip, sl
 8016dc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016dca:	fb0c fc03 	mul.w	ip, ip, r3
 8016dce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016dd2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016dd6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016dda:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016dde:	4453      	add	r3, sl
 8016de0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016de4:	0a1b      	lsrs	r3, r3, #8
 8016de6:	0a3f      	lsrs	r7, r7, #8
 8016de8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016dec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016df0:	433b      	orrs	r3, r7
 8016df2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016df4:	2cff      	cmp	r4, #255	; 0xff
 8016df6:	d020      	beq.n	8016e3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8016df8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016dfa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016dfe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016e00:	4367      	muls	r7, r4
 8016e02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016e04:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e08:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016e0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e0e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016e12:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016e16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e1a:	44bc      	add	ip, r7
 8016e1c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016e20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016e24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016e2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016e34:	ea4c 040a 	orr.w	r4, ip, sl
 8016e38:	940d      	str	r4, [sp, #52]	; 0x34
 8016e3a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e3c:	2cff      	cmp	r4, #255	; 0xff
 8016e3e:	d020      	beq.n	8016e82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8016e40:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e42:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016e46:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e48:	4367      	muls	r7, r4
 8016e4a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e52:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e56:	fb04 fa0a 	mul.w	sl, r4, sl
 8016e5a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016e5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e62:	44bc      	add	ip, r7
 8016e64:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016e68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016e6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016e74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016e78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016e7c:	ea4c 040a 	orr.w	r4, ip, sl
 8016e80:	9409      	str	r4, [sp, #36]	; 0x24
 8016e82:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e84:	2cff      	cmp	r4, #255	; 0xff
 8016e86:	d020      	beq.n	8016eca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8016e88:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016e8a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016e8e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e90:	4367      	muls	r7, r4
 8016e92:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016e94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e98:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016e9e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ea2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ea6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016eaa:	44bc      	add	ip, r7
 8016eac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016eb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016eb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016eb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ebc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ec0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016ec4:	ea4c 040a 	orr.w	r4, ip, sl
 8016ec8:	940e      	str	r4, [sp, #56]	; 0x38
 8016eca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016ecc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016ed0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016ed2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016ed6:	fb0e f707 	mul.w	r7, lr, r7
 8016eda:	fb01 770c 	mla	r7, r1, ip, r7
 8016ede:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016ee2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016ee4:	fb00 770c 	mla	r7, r0, ip, r7
 8016ee8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016eec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016eee:	fb08 770c 	mla	r7, r8, ip, r7
 8016ef2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016ef6:	fb0e fe0c 	mul.w	lr, lr, ip
 8016efa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016efe:	fb01 e303 	mla	r3, r1, r3, lr
 8016f02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016f04:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8016f08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016f0a:	fb00 330a 	mla	r3, r0, sl, r3
 8016f0e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8016f12:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016f16:	f8b9 3000 	ldrh.w	r3, [r9]
 8016f1a:	43d2      	mvns	r2, r2
 8016f1c:	1218      	asrs	r0, r3, #8
 8016f1e:	b2d2      	uxtb	r2, r2
 8016f20:	10d9      	asrs	r1, r3, #3
 8016f22:	0a3f      	lsrs	r7, r7, #8
 8016f24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f2c:	00db      	lsls	r3, r3, #3
 8016f2e:	4350      	muls	r0, r2
 8016f30:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016f34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016f38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016f3c:	b2db      	uxtb	r3, r3
 8016f3e:	ea47 070c 	orr.w	r7, r7, ip
 8016f42:	4351      	muls	r1, r2
 8016f44:	4353      	muls	r3, r2
 8016f46:	1c42      	adds	r2, r0, #1
 8016f48:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016f4c:	0c3a      	lsrs	r2, r7, #16
 8016f4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016f52:	4a19      	ldr	r2, [pc, #100]	; (8016fb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8016f54:	b2c0      	uxtb	r0, r0
 8016f56:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016f5a:	1c4a      	adds	r2, r1, #1
 8016f5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016f60:	0a3a      	lsrs	r2, r7, #8
 8016f62:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016f66:	00c9      	lsls	r1, r1, #3
 8016f68:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016f6c:	4301      	orrs	r1, r0
 8016f6e:	1c58      	adds	r0, r3, #1
 8016f70:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016f74:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8016f78:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8016f7c:	4308      	orrs	r0, r1
 8016f7e:	f8a9 0000 	strh.w	r0, [r9]
 8016f82:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016f84:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016f86:	441a      	add	r2, r3
 8016f88:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016f8a:	922d      	str	r2, [sp, #180]	; 0xb4
 8016f8c:	f109 0902 	add.w	r9, r9, #2
 8016f90:	441d      	add	r5, r3
 8016f92:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016f96:	e64d      	b.n	8016c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8016f98:	2800      	cmp	r0, #0
 8016f9a:	f43f aeed 	beq.w	8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016f9e:	5c79      	ldrb	r1, [r7, r1]
 8016fa0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016fa4:	9109      	str	r1, [sp, #36]	; 0x24
 8016fa6:	0e09      	lsrs	r1, r1, #24
 8016fa8:	9111      	str	r1, [sp, #68]	; 0x44
 8016faa:	e6e5      	b.n	8016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016fac:	b01b      	add	sp, #108	; 0x6c
 8016fae:	ecbd 8b08 	vpop	{d8-d11}
 8016fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fb6:	bf00      	nop
 8016fb8:	fffff800 	.word	0xfffff800

08016fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fc0:	b085      	sub	sp, #20
 8016fc2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016fc6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016fca:	9103      	str	r1, [sp, #12]
 8016fcc:	fb05 7106 	mla	r1, r5, r6, r7
 8016fd0:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8016fd4:	2d00      	cmp	r5, #0
 8016fd6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016fda:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016fde:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8016fe2:	9401      	str	r4, [sp, #4]
 8016fe4:	eb03 0901 	add.w	r9, r3, r1
 8016fe8:	f2c0 80c0 	blt.w	801716c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016fec:	45a8      	cmp	r8, r5
 8016fee:	f340 80bd 	ble.w	801716c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016ff2:	2f00      	cmp	r7, #0
 8016ff4:	f2c0 80b6 	blt.w	8017164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016ff8:	42be      	cmp	r6, r7
 8016ffa:	f340 80b3 	ble.w	8017164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016ffe:	f813 c001 	ldrb.w	ip, [r3, r1]
 8017002:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8017006:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801700a:	d019      	beq.n	8017040 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801700c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017010:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017014:	435a      	muls	r2, r3
 8017016:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801701a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801701e:	fb0c f403 	mul.w	r4, ip, r3
 8017022:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017026:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801702a:	441a      	add	r2, r3
 801702c:	f104 0320 	add.w	r3, r4, #32
 8017030:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017034:	0a1b      	lsrs	r3, r3, #8
 8017036:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801703a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801703e:	4319      	orrs	r1, r3
 8017040:	b289      	uxth	r1, r1
 8017042:	1c7b      	adds	r3, r7, #1
 8017044:	f100 8097 	bmi.w	8017176 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017048:	429e      	cmp	r6, r3
 801704a:	f340 8094 	ble.w	8017176 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801704e:	2800      	cmp	r0, #0
 8017050:	f000 8094 	beq.w	801717c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8017054:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017058:	9b01      	ldr	r3, [sp, #4]
 801705a:	2cff      	cmp	r4, #255	; 0xff
 801705c:	885b      	ldrh	r3, [r3, #2]
 801705e:	d01b      	beq.n	8017098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017060:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017064:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017068:	fb0a f202 	mul.w	r2, sl, r2
 801706c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017070:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017074:	fb04 fa03 	mul.w	sl, r4, r3
 8017078:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801707c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017080:	441a      	add	r2, r3
 8017082:	f10a 0320 	add.w	r3, sl, #32
 8017086:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801708a:	0a1b      	lsrs	r3, r3, #8
 801708c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017090:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017094:	ea4b 0303 	orr.w	r3, fp, r3
 8017098:	b29b      	uxth	r3, r3
 801709a:	3501      	adds	r5, #1
 801709c:	d474      	bmi.n	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801709e:	45a8      	cmp	r8, r5
 80170a0:	dd72      	ble.n	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80170a2:	f1be 0f00 	cmp.w	lr, #0
 80170a6:	f000 8120 	beq.w	80172ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80170aa:	2f00      	cmp	r7, #0
 80170ac:	db69      	blt.n	8017182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80170ae:	42be      	cmp	r6, r7
 80170b0:	dd67      	ble.n	8017182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80170b2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80170b6:	9a01      	ldr	r2, [sp, #4]
 80170b8:	2dff      	cmp	r5, #255	; 0xff
 80170ba:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80170be:	d01c      	beq.n	80170fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80170c0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80170c4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80170c8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80170cc:	fb05 fa0b 	mul.w	sl, r5, fp
 80170d0:	fb08 f802 	mul.w	r8, r8, r2
 80170d4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80170d8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80170dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80170e0:	4490      	add	r8, r2
 80170e2:	f10a 0220 	add.w	r2, sl, #32
 80170e6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80170ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80170ee:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80170f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170f6:	ea4b 0b0a 	orr.w	fp, fp, sl
 80170fa:	fa1f fb8b 	uxth.w	fp, fp
 80170fe:	3701      	adds	r7, #1
 8017100:	d447      	bmi.n	8017192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017102:	42be      	cmp	r6, r7
 8017104:	dd45      	ble.n	8017192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017106:	2800      	cmp	r0, #0
 8017108:	d046      	beq.n	8017198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801710a:	3601      	adds	r6, #1
 801710c:	9a01      	ldr	r2, [sp, #4]
 801710e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017112:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017116:	2fff      	cmp	r7, #255	; 0xff
 8017118:	d01a      	beq.n	8017150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801711a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801711e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017122:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017126:	fb07 f902 	mul.w	r9, r7, r2
 801712a:	fb08 f806 	mul.w	r8, r8, r6
 801712e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017132:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017136:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801713a:	44b0      	add	r8, r6
 801713c:	f109 0620 	add.w	r6, r9, #32
 8017140:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017144:	0a36      	lsrs	r6, r6, #8
 8017146:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801714a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801714e:	4332      	orrs	r2, r6
 8017150:	b292      	uxth	r2, r2
 8017152:	280f      	cmp	r0, #15
 8017154:	d922      	bls.n	801719c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017156:	4b69      	ldr	r3, [pc, #420]	; (80172fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017158:	4a69      	ldr	r2, [pc, #420]	; (8017300 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801715a:	486a      	ldr	r0, [pc, #424]	; (8017304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801715c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017160:	f004 fa0a 	bl	801b578 <__assert_func>
 8017164:	f04f 0c00 	mov.w	ip, #0
 8017168:	4661      	mov	r1, ip
 801716a:	e76a      	b.n	8017042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801716c:	2400      	movs	r4, #0
 801716e:	46a4      	mov	ip, r4
 8017170:	4623      	mov	r3, r4
 8017172:	4621      	mov	r1, r4
 8017174:	e791      	b.n	801709a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017176:	2400      	movs	r4, #0
 8017178:	4623      	mov	r3, r4
 801717a:	e78e      	b.n	801709a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801717c:	4604      	mov	r4, r0
 801717e:	4603      	mov	r3, r0
 8017180:	e78b      	b.n	801709a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017182:	2500      	movs	r5, #0
 8017184:	46ab      	mov	fp, r5
 8017186:	e7ba      	b.n	80170fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8017188:	2700      	movs	r7, #0
 801718a:	463d      	mov	r5, r7
 801718c:	463a      	mov	r2, r7
 801718e:	46bb      	mov	fp, r7
 8017190:	e7df      	b.n	8017152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8017192:	2700      	movs	r7, #0
 8017194:	463a      	mov	r2, r7
 8017196:	e7dc      	b.n	8017152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8017198:	4607      	mov	r7, r0
 801719a:	4602      	mov	r2, r0
 801719c:	f1be 0f0f 	cmp.w	lr, #15
 80171a0:	d8d9      	bhi.n	8017156 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80171a2:	b286      	uxth	r6, r0
 80171a4:	fa1f f98e 	uxth.w	r9, lr
 80171a8:	fb06 f809 	mul.w	r8, r6, r9
 80171ac:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80171b0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80171b4:	0136      	lsls	r6, r6, #4
 80171b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80171ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80171be:	9601      	str	r6, [sp, #4]
 80171c0:	ea4a 0101 	orr.w	r1, sl, r1
 80171c4:	fa1f f689 	uxth.w	r6, r9
 80171c8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80171cc:	fb10 f90e 	smulbb	r9, r0, lr
 80171d0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80171d4:	9602      	str	r6, [sp, #8]
 80171d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80171da:	460e      	mov	r6, r1
 80171dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80171e0:	f1ce 0110 	rsb	r1, lr, #16
 80171e4:	1a09      	subs	r1, r1, r0
 80171e6:	ea4a 0303 	orr.w	r3, sl, r3
 80171ea:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80171ee:	4343      	muls	r3, r0
 80171f0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80171f4:	9801      	ldr	r0, [sp, #4]
 80171f6:	fb01 3106 	mla	r1, r1, r6, r3
 80171fa:	9e02      	ldr	r6, [sp, #8]
 80171fc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017200:	1b80      	subs	r0, r0, r6
 8017202:	9e01      	ldr	r6, [sp, #4]
 8017204:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017208:	eba6 0608 	sub.w	r6, r6, r8
 801720c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017210:	b2b6      	uxth	r6, r6
 8017212:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017216:	ea4a 0202 	orr.w	r2, sl, r2
 801721a:	b280      	uxth	r0, r0
 801721c:	4374      	muls	r4, r6
 801721e:	fb09 1302 	mla	r3, r9, r2, r1
 8017222:	fb0c 4400 	mla	r4, ip, r0, r4
 8017226:	9a03      	ldr	r2, [sp, #12]
 8017228:	9802      	ldr	r0, [sp, #8]
 801722a:	8811      	ldrh	r1, [r2, #0]
 801722c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017230:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017234:	fb00 4505 	mla	r5, r0, r5, r4
 8017238:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801723c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017240:	fb08 5707 	mla	r7, r8, r7, r5
 8017244:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017248:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801724c:	b292      	uxth	r2, r2
 801724e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017252:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017256:	4357      	muls	r7, r2
 8017258:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801725c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017260:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017264:	f107 0801 	add.w	r8, r7, #1
 8017268:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801726c:	ea43 0e0e 	orr.w	lr, r3, lr
 8017270:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8017274:	fa1f f38e 	uxth.w	r3, lr
 8017278:	1208      	asrs	r0, r1, #8
 801727a:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801727e:	b2ff      	uxtb	r7, r7
 8017280:	121c      	asrs	r4, r3, #8
 8017282:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017286:	fb10 f007 	smulbb	r0, r0, r7
 801728a:	10cd      	asrs	r5, r1, #3
 801728c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017290:	fb04 0402 	mla	r4, r4, r2, r0
 8017294:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017298:	10d8      	asrs	r0, r3, #3
 801729a:	fb15 f507 	smulbb	r5, r5, r7
 801729e:	00db      	lsls	r3, r3, #3
 80172a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80172a4:	fb00 5002 	mla	r0, r0, r2, r5
 80172a8:	b2dd      	uxtb	r5, r3
 80172aa:	00cb      	lsls	r3, r1, #3
 80172ac:	b2db      	uxtb	r3, r3
 80172ae:	fb13 f307 	smulbb	r3, r3, r7
 80172b2:	fb05 3202 	mla	r2, r5, r2, r3
 80172b6:	b2a4      	uxth	r4, r4
 80172b8:	b292      	uxth	r2, r2
 80172ba:	1c63      	adds	r3, r4, #1
 80172bc:	b280      	uxth	r0, r0
 80172be:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80172c2:	1c53      	adds	r3, r2, #1
 80172c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80172c8:	1c42      	adds	r2, r0, #1
 80172ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80172ce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80172d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80172d6:	0940      	lsrs	r0, r0, #5
 80172d8:	4323      	orrs	r3, r4
 80172da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80172de:	9a03      	ldr	r2, [sp, #12]
 80172e0:	4303      	orrs	r3, r0
 80172e2:	8013      	strh	r3, [r2, #0]
 80172e4:	b005      	add	sp, #20
 80172e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172ea:	280f      	cmp	r0, #15
 80172ec:	f63f af33 	bhi.w	8017156 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80172f0:	4677      	mov	r7, lr
 80172f2:	4675      	mov	r5, lr
 80172f4:	4672      	mov	r2, lr
 80172f6:	46f3      	mov	fp, lr
 80172f8:	e753      	b.n	80171a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 80172fa:	bf00      	nop
 80172fc:	0801f4be 	.word	0x0801f4be
 8017300:	0801fa8a 	.word	0x0801fa8a
 8017304:	0801f542 	.word	0x0801f542

08017308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801730c:	ed2d 8b08 	vpush	{d8-d11}
 8017310:	b097      	sub	sp, #92	; 0x5c
 8017312:	eeb0 aa40 	vmov.f32	s20, s0
 8017316:	9214      	str	r2, [sp, #80]	; 0x50
 8017318:	9308      	str	r3, [sp, #32]
 801731a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801731c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017320:	9312      	str	r3, [sp, #72]	; 0x48
 8017322:	9111      	str	r1, [sp, #68]	; 0x44
 8017324:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017328:	9015      	str	r0, [sp, #84]	; 0x54
 801732a:	6850      	ldr	r0, [r2, #4]
 801732c:	6812      	ldr	r2, [r2, #0]
 801732e:	fb00 1303 	mla	r3, r0, r3, r1
 8017332:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017336:	9309      	str	r3, [sp, #36]	; 0x24
 8017338:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801733a:	681b      	ldr	r3, [r3, #0]
 801733c:	930b      	str	r3, [sp, #44]	; 0x2c
 801733e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017340:	685b      	ldr	r3, [r3, #4]
 8017342:	930c      	str	r3, [sp, #48]	; 0x30
 8017344:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017348:	930a      	str	r3, [sp, #40]	; 0x28
 801734a:	eef0 9a60 	vmov.f32	s19, s1
 801734e:	eeb0 9a41 	vmov.f32	s18, s2
 8017352:	eeb0 8a62 	vmov.f32	s16, s5
 8017356:	eef0 8a43 	vmov.f32	s17, s6
 801735a:	eef0 ba44 	vmov.f32	s23, s8
 801735e:	eeb0 ba64 	vmov.f32	s22, s9
 8017362:	eef0 aa45 	vmov.f32	s21, s10
 8017366:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017368:	2b00      	cmp	r3, #0
 801736a:	dc03      	bgt.n	8017374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801736c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801736e:	2b00      	cmp	r3, #0
 8017370:	f340 83cb 	ble.w	8017b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017374:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017376:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801737a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801737e:	1e48      	subs	r0, r1, #1
 8017380:	1e55      	subs	r5, r2, #1
 8017382:	9b08      	ldr	r3, [sp, #32]
 8017384:	2b00      	cmp	r3, #0
 8017386:	f340 81a3 	ble.w	80176d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801738a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801738c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801738e:	1436      	asrs	r6, r6, #16
 8017390:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017394:	d406      	bmi.n	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017396:	4286      	cmp	r6, r0
 8017398:	da04      	bge.n	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801739a:	2b00      	cmp	r3, #0
 801739c:	db02      	blt.n	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801739e:	42ab      	cmp	r3, r5
 80173a0:	f2c0 8197 	blt.w	80176d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80173a4:	3601      	adds	r6, #1
 80173a6:	f100 8184 	bmi.w	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173aa:	42b1      	cmp	r1, r6
 80173ac:	f2c0 8181 	blt.w	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173b0:	3301      	adds	r3, #1
 80173b2:	f100 817e 	bmi.w	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173b6:	429a      	cmp	r2, r3
 80173b8:	f2c0 817b 	blt.w	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80173bc:	9b08      	ldr	r3, [sp, #32]
 80173be:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80173c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80173c2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80173c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80173c8:	2b00      	cmp	r3, #0
 80173ca:	f340 81a4 	ble.w	8017716 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80173ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173d0:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80173d2:	1418      	asrs	r0, r3, #16
 80173d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80173d6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80173da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173dc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80173e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80173e2:	142d      	asrs	r5, r5, #16
 80173e4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80173e8:	f100 81f8 	bmi.w	80177dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80173ec:	f102 3eff 	add.w	lr, r2, #4294967295
 80173f0:	4575      	cmp	r5, lr
 80173f2:	f280 81f3 	bge.w	80177dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80173f6:	2800      	cmp	r0, #0
 80173f8:	f2c0 81f0 	blt.w	80177dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80173fc:	f103 3eff 	add.w	lr, r3, #4294967295
 8017400:	4570      	cmp	r0, lr
 8017402:	f280 81eb 	bge.w	80177dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017406:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017408:	b212      	sxth	r2, r2
 801740a:	fb00 5002 	mla	r0, r0, r2, r5
 801740e:	fa1f fe81 	uxth.w	lr, r1
 8017412:	eb03 0a00 	add.w	sl, r3, r0
 8017416:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801741a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801741e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017422:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017426:	b29b      	uxth	r3, r3
 8017428:	f1bc 0f00 	cmp.w	ip, #0
 801742c:	f000 81b9 	beq.w	80177a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017430:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017434:	940d      	str	r4, [sp, #52]	; 0x34
 8017436:	eb0a 0b02 	add.w	fp, sl, r2
 801743a:	fa1f fa8c 	uxth.w	sl, ip
 801743e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017442:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017446:	fa1f fa8a 	uxth.w	sl, sl
 801744a:	eba5 050e 	sub.w	r5, r5, lr
 801744e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017452:	940e      	str	r4, [sp, #56]	; 0x38
 8017454:	eba3 030a 	sub.w	r3, r3, sl
 8017458:	b2ad      	uxth	r5, r5
 801745a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801745c:	b29b      	uxth	r3, r3
 801745e:	fb08 f505 	mul.w	r5, r8, r5
 8017462:	fb09 5303 	mla	r3, r9, r3, r5
 8017466:	fb0a 3304 	mla	r3, sl, r4, r3
 801746a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801746c:	fb0e 3304 	mla	r3, lr, r4, r3
 8017470:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017474:	2b00      	cmp	r3, #0
 8017476:	f000 810f 	beq.w	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801747a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801747c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017480:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017484:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017488:	f000 8190 	beq.w	80177ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 801748c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017490:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017494:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017498:	fb09 f000 	mul.w	r0, r9, r0
 801749c:	fb0a fe0e 	mul.w	lr, sl, lr
 80174a0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80174a4:	f100 0b20 	add.w	fp, r0, #32
 80174a8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80174ac:	44ce      	add	lr, r9
 80174ae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80174b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80174b6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80174ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80174be:	ea4e 0909 	orr.w	r9, lr, r9
 80174c2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80174c6:	8868      	ldrh	r0, [r5, #2]
 80174c8:	d019      	beq.n	80174fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80174ca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80174ce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80174d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80174d6:	fb08 f800 	mul.w	r8, r8, r0
 80174da:	fb0a fe0e 	mul.w	lr, sl, lr
 80174de:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80174e2:	f108 0b20 	add.w	fp, r8, #32
 80174e6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80174ea:	4486      	add	lr, r0
 80174ec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80174f0:	0a00      	lsrs	r0, r0, #8
 80174f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80174f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80174fa:	ea4e 0000 	orr.w	r0, lr, r0
 80174fe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017502:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017506:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801750a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801750e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017512:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017516:	ea4e 0909 	orr.w	r9, lr, r9
 801751a:	ea4a 0000 	orr.w	r0, sl, r0
 801751e:	f1bc 0f00 	cmp.w	ip, #0
 8017522:	f000 8145 	beq.w	80177b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017526:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801752a:	3a01      	subs	r2, #1
 801752c:	0052      	lsls	r2, r2, #1
 801752e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017530:	3202      	adds	r2, #2
 8017532:	2cff      	cmp	r4, #255	; 0xff
 8017534:	eb05 0e02 	add.w	lr, r5, r2
 8017538:	5aaa      	ldrh	r2, [r5, r2]
 801753a:	d018      	beq.n	801756e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801753c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017540:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017544:	fb04 fa02 	mul.w	sl, r4, r2
 8017548:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801754c:	fb08 f805 	mul.w	r8, r8, r5
 8017550:	f10a 0520 	add.w	r5, sl, #32
 8017554:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017558:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801755c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017560:	4442      	add	r2, r8
 8017562:	0a2d      	lsrs	r5, r5, #8
 8017564:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017568:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801756c:	432a      	orrs	r2, r5
 801756e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017570:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017574:	2cff      	cmp	r4, #255	; 0xff
 8017576:	d01a      	beq.n	80175ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017578:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801757c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017580:	fb04 fa05 	mul.w	sl, r4, r5
 8017584:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017588:	fb08 f80e 	mul.w	r8, r8, lr
 801758c:	f10a 0e20 	add.w	lr, sl, #32
 8017590:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017594:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017598:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801759c:	4445      	add	r5, r8
 801759e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175a2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80175a6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80175aa:	ea45 050e 	orr.w	r5, r5, lr
 80175ae:	fb1c fe01 	smulbb	lr, ip, r1
 80175b2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80175b6:	f1cc 0810 	rsb	r8, ip, #16
 80175ba:	eba8 0801 	sub.w	r8, r8, r1
 80175be:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80175c2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80175c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80175ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80175ce:	4341      	muls	r1, r0
 80175d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80175d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80175d8:	ea4a 0202 	orr.w	r2, sl, r2
 80175dc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80175e0:	fb09 1108 	mla	r1, r9, r8, r1
 80175e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80175e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80175ec:	fb0c 1102 	mla	r1, ip, r2, r1
 80175f0:	ea4b 0505 	orr.w	r5, fp, r5
 80175f4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80175f8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80175fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017600:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017604:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017608:	ea42 0e0e 	orr.w	lr, r2, lr
 801760c:	fa1f f28e 	uxth.w	r2, lr
 8017610:	2bff      	cmp	r3, #255	; 0xff
 8017612:	d103      	bne.n	801761c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017614:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017616:	29ff      	cmp	r1, #255	; 0xff
 8017618:	f000 80de 	beq.w	80177d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801761c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801761e:	8838      	ldrh	r0, [r7, #0]
 8017620:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017622:	434b      	muls	r3, r1
 8017624:	f103 0c01 	add.w	ip, r3, #1
 8017628:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801762c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017630:	fa5f fc83 	uxtb.w	ip, r3
 8017634:	1203      	asrs	r3, r0, #8
 8017636:	1215      	asrs	r5, r2, #8
 8017638:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801763c:	fb13 f30c 	smulbb	r3, r3, ip
 8017640:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017644:	fb05 3501 	mla	r5, r5, r1, r3
 8017648:	10c3      	asrs	r3, r0, #3
 801764a:	10d1      	asrs	r1, r2, #3
 801764c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017650:	fb13 f30c 	smulbb	r3, r3, ip
 8017654:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017658:	fb01 3104 	mla	r1, r1, r4, r3
 801765c:	00c3      	lsls	r3, r0, #3
 801765e:	00d2      	lsls	r2, r2, #3
 8017660:	b2db      	uxtb	r3, r3
 8017662:	b2d2      	uxtb	r2, r2
 8017664:	fb13 f30c 	smulbb	r3, r3, ip
 8017668:	b2ad      	uxth	r5, r5
 801766a:	fb02 3304 	mla	r3, r2, r4, r3
 801766e:	b29a      	uxth	r2, r3
 8017670:	1c6b      	adds	r3, r5, #1
 8017672:	b289      	uxth	r1, r1
 8017674:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017678:	1c53      	adds	r3, r2, #1
 801767a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801767e:	1c4a      	adds	r2, r1, #1
 8017680:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017684:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017688:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801768c:	0949      	lsrs	r1, r1, #5
 801768e:	432b      	orrs	r3, r5
 8017690:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017694:	430b      	orrs	r3, r1
 8017696:	803b      	strh	r3, [r7, #0]
 8017698:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801769a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801769c:	4413      	add	r3, r2
 801769e:	9329      	str	r3, [sp, #164]	; 0xa4
 80176a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80176a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80176a4:	441a      	add	r2, r3
 80176a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80176a8:	922a      	str	r2, [sp, #168]	; 0xa8
 80176aa:	3b01      	subs	r3, #1
 80176ac:	3702      	adds	r7, #2
 80176ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80176b0:	e689      	b.n	80173c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80176b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80176b4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80176b6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80176b8:	4433      	add	r3, r6
 80176ba:	9329      	str	r3, [sp, #164]	; 0xa4
 80176bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80176be:	441c      	add	r4, r3
 80176c0:	9b08      	ldr	r3, [sp, #32]
 80176c2:	942a      	str	r4, [sp, #168]	; 0xa8
 80176c4:	3b01      	subs	r3, #1
 80176c6:	9308      	str	r3, [sp, #32]
 80176c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80176ca:	3302      	adds	r3, #2
 80176cc:	9309      	str	r3, [sp, #36]	; 0x24
 80176ce:	e658      	b.n	8017382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80176d0:	d028      	beq.n	8017724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80176d2:	9b08      	ldr	r3, [sp, #32]
 80176d4:	982b      	ldr	r0, [sp, #172]	; 0xac
 80176d6:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80176d8:	3b01      	subs	r3, #1
 80176da:	fb00 5003 	mla	r0, r0, r3, r5
 80176de:	1400      	asrs	r0, r0, #16
 80176e0:	f53f ae6c 	bmi.w	80173bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80176e4:	3901      	subs	r1, #1
 80176e6:	4288      	cmp	r0, r1
 80176e8:	f6bf ae68 	bge.w	80173bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80176ec:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80176ee:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80176f0:	fb01 0303 	mla	r3, r1, r3, r0
 80176f4:	141b      	asrs	r3, r3, #16
 80176f6:	f53f ae61 	bmi.w	80173bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80176fa:	3a01      	subs	r2, #1
 80176fc:	4293      	cmp	r3, r2
 80176fe:	f6bf ae5d 	bge.w	80173bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017702:	9b08      	ldr	r3, [sp, #32]
 8017704:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017708:	9313      	str	r3, [sp, #76]	; 0x4c
 801770a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801770e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017710:	2b00      	cmp	r3, #0
 8017712:	f300 8082 	bgt.w	801781a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017716:	9b08      	ldr	r3, [sp, #32]
 8017718:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801771c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801771e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017722:	9309      	str	r3, [sp, #36]	; 0x24
 8017724:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017726:	2b00      	cmp	r3, #0
 8017728:	f340 81ef 	ble.w	8017b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801772c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017730:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017734:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017738:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801773a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801773e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017742:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017746:	eef0 6a48 	vmov.f32	s13, s16
 801774a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801774e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017752:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017756:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801775a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801775e:	eef0 6a68 	vmov.f32	s13, s17
 8017762:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017766:	ee18 2a10 	vmov	r2, s16
 801776a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801776e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017772:	ee18 2a90 	vmov	r2, s17
 8017776:	932b      	str	r3, [sp, #172]	; 0xac
 8017778:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801777a:	fb92 f3f3 	sdiv	r3, r2, r3
 801777e:	932c      	str	r3, [sp, #176]	; 0xb0
 8017780:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017782:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017784:	3b01      	subs	r3, #1
 8017786:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801778a:	9311      	str	r3, [sp, #68]	; 0x44
 801778c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801778e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017792:	bf08      	it	eq
 8017794:	4613      	moveq	r3, r2
 8017796:	9308      	str	r3, [sp, #32]
 8017798:	eef0 8a67 	vmov.f32	s17, s15
 801779c:	eeb0 8a47 	vmov.f32	s16, s14
 80177a0:	e5e1      	b.n	8017366 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80177a2:	fb08 f505 	mul.w	r5, r8, r5
 80177a6:	fb09 5303 	mla	r3, r9, r3, r5
 80177aa:	e661      	b.n	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80177ac:	4681      	mov	r9, r0
 80177ae:	e688      	b.n	80174c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80177b0:	f1c1 0210 	rsb	r2, r1, #16
 80177b4:	4341      	muls	r1, r0
 80177b6:	fb09 1902 	mla	r9, r9, r2, r1
 80177ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80177be:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80177c2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80177c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177ca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80177ce:	ea42 0909 	orr.w	r9, r2, r9
 80177d2:	fa1f f289 	uxth.w	r2, r9
 80177d6:	e71b      	b.n	8017610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 80177d8:	803a      	strh	r2, [r7, #0]
 80177da:	e75d      	b.n	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177dc:	f115 0e01 	adds.w	lr, r5, #1
 80177e0:	f53f af5a 	bmi.w	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177e4:	4572      	cmp	r2, lr
 80177e6:	f6ff af57 	blt.w	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177ea:	f110 0e01 	adds.w	lr, r0, #1
 80177ee:	f53f af53 	bmi.w	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177f2:	4573      	cmp	r3, lr
 80177f4:	f6ff af50 	blt.w	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80177fa:	9502      	str	r5, [sp, #8]
 80177fc:	b21b      	sxth	r3, r3
 80177fe:	b212      	sxth	r2, r2
 8017800:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017804:	9301      	str	r3, [sp, #4]
 8017806:	9200      	str	r2, [sp, #0]
 8017808:	e9cd c405 	strd	ip, r4, [sp, #20]
 801780c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017810:	4639      	mov	r1, r7
 8017812:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017814:	f7ff fbd2 	bl	8016fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017818:	e73e      	b.n	8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801781a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801781c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017820:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017822:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017826:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017828:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801782c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801782e:	141f      	asrs	r7, r3, #16
 8017830:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017832:	141b      	asrs	r3, r3, #16
 8017834:	fb01 3707 	mla	r7, r1, r7, r3
 8017838:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801783a:	fa1f fc82 	uxth.w	ip, r2
 801783e:	eb03 0a07 	add.w	sl, r3, r7
 8017842:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017846:	f813 9007 	ldrb.w	r9, [r3, r7]
 801784a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801784e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017852:	b29b      	uxth	r3, r3
 8017854:	2d00      	cmp	r5, #0
 8017856:	f000 813d 	beq.w	8017ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801785a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801785e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017860:	eb0a 0b01 	add.w	fp, sl, r1
 8017864:	fa1f fa85 	uxth.w	sl, r5
 8017868:	fb0a fc0c 	mul.w	ip, sl, ip
 801786c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017870:	fa1f fa8a 	uxth.w	sl, sl
 8017874:	eba0 000c 	sub.w	r0, r0, ip
 8017878:	eba3 030a 	sub.w	r3, r3, sl
 801787c:	b280      	uxth	r0, r0
 801787e:	fb08 f000 	mul.w	r0, r8, r0
 8017882:	b29b      	uxth	r3, r3
 8017884:	fb09 0303 	mla	r3, r9, r3, r0
 8017888:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801788a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801788e:	9410      	str	r4, [sp, #64]	; 0x40
 8017890:	fb0a 3300 	mla	r3, sl, r0, r3
 8017894:	fb0c 3304 	mla	r3, ip, r4, r3
 8017898:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801789c:	2b00      	cmp	r3, #0
 801789e:	f000 810b 	beq.w	8017ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80178a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80178a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80178aa:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80178ae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80178b2:	f000 8114 	beq.w	8017ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80178b6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80178ba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80178be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80178c2:	fb09 f707 	mul.w	r7, r9, r7
 80178c6:	fb0a fc0c 	mul.w	ip, sl, ip
 80178ca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80178ce:	f107 0b20 	add.w	fp, r7, #32
 80178d2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80178d6:	44cc      	add	ip, r9
 80178d8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80178dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80178e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80178e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178e8:	ea4c 0909 	orr.w	r9, ip, r9
 80178ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80178f0:	8847      	ldrh	r7, [r0, #2]
 80178f2:	d019      	beq.n	8017928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 80178f4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80178f8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80178fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017900:	fb08 f807 	mul.w	r8, r8, r7
 8017904:	fb0a fc0c 	mul.w	ip, sl, ip
 8017908:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801790c:	f108 0b20 	add.w	fp, r8, #32
 8017910:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017914:	44bc      	add	ip, r7
 8017916:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801791a:	0a3f      	lsrs	r7, r7, #8
 801791c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017920:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017924:	ea4c 0707 	orr.w	r7, ip, r7
 8017928:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801792c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017930:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017934:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017938:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801793c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017940:	ea4c 0909 	orr.w	r9, ip, r9
 8017944:	ea4a 0707 	orr.w	r7, sl, r7
 8017948:	2d00      	cmp	r5, #0
 801794a:	f000 80ca 	beq.w	8017ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801794e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017952:	3901      	subs	r1, #1
 8017954:	0049      	lsls	r1, r1, #1
 8017956:	3102      	adds	r1, #2
 8017958:	eb00 0c01 	add.w	ip, r0, r1
 801795c:	5a41      	ldrh	r1, [r0, r1]
 801795e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017960:	28ff      	cmp	r0, #255	; 0xff
 8017962:	d019      	beq.n	8017998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017964:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017966:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801796a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801796e:	fb04 fa01 	mul.w	sl, r4, r1
 8017972:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017976:	fb08 f800 	mul.w	r8, r8, r0
 801797a:	f10a 0020 	add.w	r0, sl, #32
 801797e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017982:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017986:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801798a:	4441      	add	r1, r8
 801798c:	0a00      	lsrs	r0, r0, #8
 801798e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017992:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017996:	4301      	orrs	r1, r0
 8017998:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801799a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801799e:	2cff      	cmp	r4, #255	; 0xff
 80179a0:	d01a      	beq.n	80179d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80179a2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80179a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179aa:	fb04 fa00 	mul.w	sl, r4, r0
 80179ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80179b2:	fb08 f80c 	mul.w	r8, r8, ip
 80179b6:	f10a 0c20 	add.w	ip, sl, #32
 80179ba:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80179be:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80179c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80179c6:	4440      	add	r0, r8
 80179c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179cc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80179d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80179d4:	ea40 000c 	orr.w	r0, r0, ip
 80179d8:	fb15 fc02 	smulbb	ip, r5, r2
 80179dc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80179e0:	f1c5 0810 	rsb	r8, r5, #16
 80179e4:	eba8 0802 	sub.w	r8, r8, r2
 80179e8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80179ec:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80179f0:	437a      	muls	r2, r7
 80179f2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80179f6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80179fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80179fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017a02:	fb09 2208 	mla	r2, r9, r8, r2
 8017a06:	ea4a 0101 	orr.w	r1, sl, r1
 8017a0a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017a0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a16:	fb05 2201 	mla	r2, r5, r1, r2
 8017a1a:	ea4b 0000 	orr.w	r0, fp, r0
 8017a1e:	fb0c 2200 	mla	r2, ip, r0, r2
 8017a22:	0d57      	lsrs	r7, r2, #21
 8017a24:	0952      	lsrs	r2, r2, #5
 8017a26:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a2e:	433a      	orrs	r2, r7
 8017a30:	2bff      	cmp	r3, #255	; 0xff
 8017a32:	b292      	uxth	r2, r2
 8017a34:	d102      	bne.n	8017a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017a36:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017a38:	29ff      	cmp	r1, #255	; 0xff
 8017a3a:	d063      	beq.n	8017b04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8017a3c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017a3e:	f8be 1000 	ldrh.w	r1, [lr]
 8017a42:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017a44:	4343      	muls	r3, r0
 8017a46:	1c58      	adds	r0, r3, #1
 8017a48:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017a4c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017a50:	1208      	asrs	r0, r1, #8
 8017a52:	b2db      	uxtb	r3, r3
 8017a54:	1215      	asrs	r5, r2, #8
 8017a56:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a5a:	fb10 f003 	smulbb	r0, r0, r3
 8017a5e:	10cf      	asrs	r7, r1, #3
 8017a60:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017a64:	00c9      	lsls	r1, r1, #3
 8017a66:	fb05 0504 	mla	r5, r5, r4, r0
 8017a6a:	b2c9      	uxtb	r1, r1
 8017a6c:	10d0      	asrs	r0, r2, #3
 8017a6e:	00d2      	lsls	r2, r2, #3
 8017a70:	fb11 f103 	smulbb	r1, r1, r3
 8017a74:	b2d2      	uxtb	r2, r2
 8017a76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017a7a:	fb02 1204 	mla	r2, r2, r4, r1
 8017a7e:	fb17 f703 	smulbb	r7, r7, r3
 8017a82:	b2ad      	uxth	r5, r5
 8017a84:	b292      	uxth	r2, r2
 8017a86:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017a8a:	fb00 7004 	mla	r0, r0, r4, r7
 8017a8e:	1c6b      	adds	r3, r5, #1
 8017a90:	1c57      	adds	r7, r2, #1
 8017a92:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017a96:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017a9a:	b280      	uxth	r0, r0
 8017a9c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017aa0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017aa4:	433d      	orrs	r5, r7
 8017aa6:	1c47      	adds	r7, r0, #1
 8017aa8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017aac:	097f      	lsrs	r7, r7, #5
 8017aae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ab2:	433d      	orrs	r5, r7
 8017ab4:	f8ae 5000 	strh.w	r5, [lr]
 8017ab8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017aba:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017abc:	4413      	add	r3, r2
 8017abe:	9329      	str	r3, [sp, #164]	; 0xa4
 8017ac0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017ac2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ac4:	441a      	add	r2, r3
 8017ac6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ac8:	922a      	str	r2, [sp, #168]	; 0xa8
 8017aca:	3b01      	subs	r3, #1
 8017acc:	f10e 0e02 	add.w	lr, lr, #2
 8017ad0:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ad2:	e61c      	b.n	801770e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017ad4:	fb08 f000 	mul.w	r0, r8, r0
 8017ad8:	fb09 0303 	mla	r3, r9, r3, r0
 8017adc:	e6dc      	b.n	8017898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017ade:	46b9      	mov	r9, r7
 8017ae0:	e704      	b.n	80178ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017ae2:	f1c2 0110 	rsb	r1, r2, #16
 8017ae6:	437a      	muls	r2, r7
 8017ae8:	fb09 2901 	mla	r9, r9, r1, r2
 8017aec:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017af0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017af4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017af8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017afc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b00:	4302      	orrs	r2, r0
 8017b02:	e795      	b.n	8017a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017b04:	f8ae 2000 	strh.w	r2, [lr]
 8017b08:	e7d6      	b.n	8017ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017b0a:	b017      	add	sp, #92	; 0x5c
 8017b0c:	ecbd 8b08 	vpop	{d8-d11}
 8017b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b18:	b085      	sub	sp, #20
 8017b1a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017b1e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017b22:	9103      	str	r1, [sp, #12]
 8017b24:	fb05 7106 	mla	r1, r5, r6, r7
 8017b28:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8017b2c:	2d00      	cmp	r5, #0
 8017b2e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017b32:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017b36:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017b3a:	9401      	str	r4, [sp, #4]
 8017b3c:	eb02 0901 	add.w	r9, r2, r1
 8017b40:	f2c0 80c0 	blt.w	8017cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017b44:	45a8      	cmp	r8, r5
 8017b46:	f340 80bd 	ble.w	8017cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017b4a:	2f00      	cmp	r7, #0
 8017b4c:	f2c0 80b6 	blt.w	8017cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017b50:	42be      	cmp	r6, r7
 8017b52:	f340 80b3 	ble.w	8017cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017b56:	f812 c001 	ldrb.w	ip, [r2, r1]
 8017b5a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8017b5e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017b62:	d019      	beq.n	8017b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8017b64:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017b68:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017b6c:	435a      	muls	r2, r3
 8017b6e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8017b72:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017b76:	fb0c f403 	mul.w	r4, ip, r3
 8017b7a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017b7e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017b82:	441a      	add	r2, r3
 8017b84:	f104 0320 	add.w	r3, r4, #32
 8017b88:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017b8c:	0a1b      	lsrs	r3, r3, #8
 8017b8e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8017b92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b96:	4319      	orrs	r1, r3
 8017b98:	b289      	uxth	r1, r1
 8017b9a:	1c7b      	adds	r3, r7, #1
 8017b9c:	f100 8097 	bmi.w	8017cce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017ba0:	429e      	cmp	r6, r3
 8017ba2:	f340 8094 	ble.w	8017cce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017ba6:	2800      	cmp	r0, #0
 8017ba8:	f000 8094 	beq.w	8017cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8017bac:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017bb0:	9b01      	ldr	r3, [sp, #4]
 8017bb2:	2cff      	cmp	r4, #255	; 0xff
 8017bb4:	885b      	ldrh	r3, [r3, #2]
 8017bb6:	d01b      	beq.n	8017bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8017bb8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017bbc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017bc0:	fb0a f202 	mul.w	r2, sl, r2
 8017bc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017bc8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017bcc:	fb04 fa03 	mul.w	sl, r4, r3
 8017bd0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017bd4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017bd8:	441a      	add	r2, r3
 8017bda:	f10a 0320 	add.w	r3, sl, #32
 8017bde:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017be2:	0a1b      	lsrs	r3, r3, #8
 8017be4:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017be8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017bec:	ea4b 0303 	orr.w	r3, fp, r3
 8017bf0:	b29b      	uxth	r3, r3
 8017bf2:	3501      	adds	r5, #1
 8017bf4:	d474      	bmi.n	8017ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017bf6:	45a8      	cmp	r8, r5
 8017bf8:	dd72      	ble.n	8017ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017bfa:	f1be 0f00 	cmp.w	lr, #0
 8017bfe:	f000 8110 	beq.w	8017e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8017c02:	2f00      	cmp	r7, #0
 8017c04:	db69      	blt.n	8017cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017c06:	42be      	cmp	r6, r7
 8017c08:	dd67      	ble.n	8017cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017c0a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017c0e:	9a01      	ldr	r2, [sp, #4]
 8017c10:	2dff      	cmp	r5, #255	; 0xff
 8017c12:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017c16:	d01c      	beq.n	8017c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8017c18:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017c1c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017c20:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017c24:	fb05 fa0b 	mul.w	sl, r5, fp
 8017c28:	fb08 f802 	mul.w	r8, r8, r2
 8017c2c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017c30:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8017c34:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c38:	4490      	add	r8, r2
 8017c3a:	f10a 0220 	add.w	r2, sl, #32
 8017c3e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8017c42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c46:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017c4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017c4e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8017c52:	fa1f fb8b 	uxth.w	fp, fp
 8017c56:	3701      	adds	r7, #1
 8017c58:	d447      	bmi.n	8017cea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017c5a:	42be      	cmp	r6, r7
 8017c5c:	dd45      	ble.n	8017cea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8017c5e:	2800      	cmp	r0, #0
 8017c60:	d046      	beq.n	8017cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8017c62:	3601      	adds	r6, #1
 8017c64:	9a01      	ldr	r2, [sp, #4]
 8017c66:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017c6a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017c6e:	2fff      	cmp	r7, #255	; 0xff
 8017c70:	d01a      	beq.n	8017ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8017c72:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8017c76:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017c7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c7e:	fb07 f902 	mul.w	r9, r7, r2
 8017c82:	fb08 f806 	mul.w	r8, r8, r6
 8017c86:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017c8a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017c8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c92:	44b0      	add	r8, r6
 8017c94:	f109 0620 	add.w	r6, r9, #32
 8017c98:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017c9c:	0a36      	lsrs	r6, r6, #8
 8017c9e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8017ca2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017ca6:	4332      	orrs	r2, r6
 8017ca8:	b292      	uxth	r2, r2
 8017caa:	280f      	cmp	r0, #15
 8017cac:	d922      	bls.n	8017cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017cae:	4b61      	ldr	r3, [pc, #388]	; (8017e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8017cb0:	4a61      	ldr	r2, [pc, #388]	; (8017e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8017cb2:	4862      	ldr	r0, [pc, #392]	; (8017e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8017cb4:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017cb8:	f003 fc5e 	bl	801b578 <__assert_func>
 8017cbc:	f04f 0c00 	mov.w	ip, #0
 8017cc0:	4661      	mov	r1, ip
 8017cc2:	e76a      	b.n	8017b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017cc4:	2400      	movs	r4, #0
 8017cc6:	46a4      	mov	ip, r4
 8017cc8:	4623      	mov	r3, r4
 8017cca:	4621      	mov	r1, r4
 8017ccc:	e791      	b.n	8017bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017cce:	2400      	movs	r4, #0
 8017cd0:	4623      	mov	r3, r4
 8017cd2:	e78e      	b.n	8017bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017cd4:	4604      	mov	r4, r0
 8017cd6:	4603      	mov	r3, r0
 8017cd8:	e78b      	b.n	8017bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017cda:	2500      	movs	r5, #0
 8017cdc:	46ab      	mov	fp, r5
 8017cde:	e7ba      	b.n	8017c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8017ce0:	2700      	movs	r7, #0
 8017ce2:	463d      	mov	r5, r7
 8017ce4:	463a      	mov	r2, r7
 8017ce6:	46bb      	mov	fp, r7
 8017ce8:	e7df      	b.n	8017caa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017cea:	2700      	movs	r7, #0
 8017cec:	463a      	mov	r2, r7
 8017cee:	e7dc      	b.n	8017caa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017cf0:	4607      	mov	r7, r0
 8017cf2:	4602      	mov	r2, r0
 8017cf4:	f1be 0f0f 	cmp.w	lr, #15
 8017cf8:	d8d9      	bhi.n	8017cae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017cfa:	b286      	uxth	r6, r0
 8017cfc:	fa1f f98e 	uxth.w	r9, lr
 8017d00:	fb06 f809 	mul.w	r8, r6, r9
 8017d04:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017d08:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017d0c:	0136      	lsls	r6, r6, #4
 8017d0e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017d16:	9601      	str	r6, [sp, #4]
 8017d18:	ea4a 0101 	orr.w	r1, sl, r1
 8017d1c:	fa1f f689 	uxth.w	r6, r9
 8017d20:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017d24:	fb10 f90e 	smulbb	r9, r0, lr
 8017d28:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017d2c:	9602      	str	r6, [sp, #8]
 8017d2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d32:	460e      	mov	r6, r1
 8017d34:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d38:	f1ce 0110 	rsb	r1, lr, #16
 8017d3c:	1a09      	subs	r1, r1, r0
 8017d3e:	ea4a 0303 	orr.w	r3, sl, r3
 8017d42:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8017d46:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017d4a:	4343      	muls	r3, r0
 8017d4c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017d50:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017d58:	fb01 3106 	mla	r1, r1, r6, r3
 8017d5c:	ea4a 0202 	orr.w	r2, sl, r2
 8017d60:	fb09 1302 	mla	r3, r9, r2, r1
 8017d64:	9a03      	ldr	r2, [sp, #12]
 8017d66:	9802      	ldr	r0, [sp, #8]
 8017d68:	8811      	ldrh	r1, [r2, #0]
 8017d6a:	9a01      	ldr	r2, [sp, #4]
 8017d6c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017d70:	1a12      	subs	r2, r2, r0
 8017d72:	9801      	ldr	r0, [sp, #4]
 8017d74:	eba0 0608 	sub.w	r6, r0, r8
 8017d78:	b2b6      	uxth	r6, r6
 8017d7a:	b292      	uxth	r2, r2
 8017d7c:	4374      	muls	r4, r6
 8017d7e:	fb0c 4402 	mla	r4, ip, r2, r4
 8017d82:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017d86:	9a02      	ldr	r2, [sp, #8]
 8017d88:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017d90:	fb02 4505 	mla	r5, r2, r5, r4
 8017d94:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017d98:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017d9c:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017da0:	fb08 5707 	mla	r7, r8, r7, r5
 8017da4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017da8:	120a      	asrs	r2, r1, #8
 8017daa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017dae:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8017db2:	b2ff      	uxtb	r7, r7
 8017db4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017db8:	10c8      	asrs	r0, r1, #3
 8017dba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017dbe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017dc2:	00c9      	lsls	r1, r1, #3
 8017dc4:	437a      	muls	r2, r7
 8017dc6:	ea43 0e0e 	orr.w	lr, r3, lr
 8017dca:	b2c9      	uxtb	r1, r1
 8017dcc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017dd0:	fa1f f38e 	uxth.w	r3, lr
 8017dd4:	4378      	muls	r0, r7
 8017dd6:	434f      	muls	r7, r1
 8017dd8:	1c51      	adds	r1, r2, #1
 8017dda:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017dde:	121a      	asrs	r2, r3, #8
 8017de0:	f022 0207 	bic.w	r2, r2, #7
 8017de4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017de8:	1c41      	adds	r1, r0, #1
 8017dea:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017dee:	10d9      	asrs	r1, r3, #3
 8017df0:	f021 0103 	bic.w	r1, r1, #3
 8017df4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017df8:	0212      	lsls	r2, r2, #8
 8017dfa:	00c9      	lsls	r1, r1, #3
 8017dfc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e00:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017e04:	430a      	orrs	r2, r1
 8017e06:	1c79      	adds	r1, r7, #1
 8017e08:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017e0c:	00db      	lsls	r3, r3, #3
 8017e0e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017e12:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8017e16:	4313      	orrs	r3, r2
 8017e18:	9a03      	ldr	r2, [sp, #12]
 8017e1a:	8013      	strh	r3, [r2, #0]
 8017e1c:	b005      	add	sp, #20
 8017e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e22:	280f      	cmp	r0, #15
 8017e24:	f63f af43 	bhi.w	8017cae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017e28:	4677      	mov	r7, lr
 8017e2a:	4675      	mov	r5, lr
 8017e2c:	4672      	mov	r2, lr
 8017e2e:	46f3      	mov	fp, lr
 8017e30:	e763      	b.n	8017cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8017e32:	bf00      	nop
 8017e34:	0801f4be 	.word	0x0801f4be
 8017e38:	0801fa8a 	.word	0x0801fa8a
 8017e3c:	0801f542 	.word	0x0801f542

08017e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e44:	ed2d 8b08 	vpush	{d8-d11}
 8017e48:	b093      	sub	sp, #76	; 0x4c
 8017e4a:	eeb0 aa40 	vmov.f32	s20, s0
 8017e4e:	9210      	str	r2, [sp, #64]	; 0x40
 8017e50:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017e52:	910e      	str	r1, [sp, #56]	; 0x38
 8017e54:	9306      	str	r3, [sp, #24]
 8017e56:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8017e5a:	9011      	str	r0, [sp, #68]	; 0x44
 8017e5c:	6850      	ldr	r0, [r2, #4]
 8017e5e:	6812      	ldr	r2, [r2, #0]
 8017e60:	fb00 1303 	mla	r3, r0, r3, r1
 8017e64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017e68:	9307      	str	r3, [sp, #28]
 8017e6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e6c:	681b      	ldr	r3, [r3, #0]
 8017e6e:	9308      	str	r3, [sp, #32]
 8017e70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e72:	685b      	ldr	r3, [r3, #4]
 8017e74:	9309      	str	r3, [sp, #36]	; 0x24
 8017e76:	eef0 9a60 	vmov.f32	s19, s1
 8017e7a:	eeb0 9a41 	vmov.f32	s18, s2
 8017e7e:	eeb0 8a62 	vmov.f32	s16, s5
 8017e82:	eef0 8a43 	vmov.f32	s17, s6
 8017e86:	eef0 ba44 	vmov.f32	s23, s8
 8017e8a:	eeb0 ba64 	vmov.f32	s22, s9
 8017e8e:	eef0 aa45 	vmov.f32	s21, s10
 8017e92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e94:	2b00      	cmp	r3, #0
 8017e96:	dc03      	bgt.n	8017ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017e98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e9a:	2b00      	cmp	r3, #0
 8017e9c:	f340 83b7 	ble.w	801860e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8017ea0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ea2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ea6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017eaa:	1e48      	subs	r0, r1, #1
 8017eac:	1e55      	subs	r5, r2, #1
 8017eae:	9b06      	ldr	r3, [sp, #24]
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	f340 819a 	ble.w	80181ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017eb6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8017eb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017eba:	1436      	asrs	r6, r6, #16
 8017ebc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017ec0:	d406      	bmi.n	8017ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017ec2:	4286      	cmp	r6, r0
 8017ec4:	da04      	bge.n	8017ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017ec6:	2b00      	cmp	r3, #0
 8017ec8:	db02      	blt.n	8017ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017eca:	42ab      	cmp	r3, r5
 8017ecc:	f2c0 818e 	blt.w	80181ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8017ed0:	3601      	adds	r6, #1
 8017ed2:	f100 817b 	bmi.w	80181cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017ed6:	42b1      	cmp	r1, r6
 8017ed8:	f2c0 8178 	blt.w	80181cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017edc:	3301      	adds	r3, #1
 8017ede:	f100 8175 	bmi.w	80181cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017ee2:	429a      	cmp	r2, r3
 8017ee4:	f2c0 8172 	blt.w	80181cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017ee8:	9b06      	ldr	r3, [sp, #24]
 8017eea:	9f07      	ldr	r7, [sp, #28]
 8017eec:	930f      	str	r3, [sp, #60]	; 0x3c
 8017eee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017ef2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017ef4:	2b00      	cmp	r3, #0
 8017ef6:	f340 819b 	ble.w	8018230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8017efa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017efc:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017efe:	1418      	asrs	r0, r3, #16
 8017f00:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017f02:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017f06:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f08:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017f0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017f0e:	142d      	asrs	r5, r5, #16
 8017f10:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017f14:	f100 81ef 	bmi.w	80182f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017f18:	f102 3eff 	add.w	lr, r2, #4294967295
 8017f1c:	4575      	cmp	r5, lr
 8017f1e:	f280 81ea 	bge.w	80182f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017f22:	2800      	cmp	r0, #0
 8017f24:	f2c0 81e7 	blt.w	80182f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017f28:	f103 3eff 	add.w	lr, r3, #4294967295
 8017f2c:	4570      	cmp	r0, lr
 8017f2e:	f280 81e2 	bge.w	80182f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8017f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f34:	b212      	sxth	r2, r2
 8017f36:	fb00 5002 	mla	r0, r0, r2, r5
 8017f3a:	fa1f fe81 	uxth.w	lr, r1
 8017f3e:	eb03 0a00 	add.w	sl, r3, r0
 8017f42:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017f46:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017f4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017f4e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017f52:	b29b      	uxth	r3, r3
 8017f54:	f1bc 0f00 	cmp.w	ip, #0
 8017f58:	f000 81b0 	beq.w	80182bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8017f5c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017f60:	940a      	str	r4, [sp, #40]	; 0x28
 8017f62:	eb0a 0b02 	add.w	fp, sl, r2
 8017f66:	fa1f fa8c 	uxth.w	sl, ip
 8017f6a:	fb0a fe0e 	mul.w	lr, sl, lr
 8017f6e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017f72:	fa1f fa8a 	uxth.w	sl, sl
 8017f76:	eba5 050e 	sub.w	r5, r5, lr
 8017f7a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017f7e:	940b      	str	r4, [sp, #44]	; 0x2c
 8017f80:	eba3 030a 	sub.w	r3, r3, sl
 8017f84:	b2ad      	uxth	r5, r5
 8017f86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017f88:	b29b      	uxth	r3, r3
 8017f8a:	fb08 f505 	mul.w	r5, r8, r5
 8017f8e:	fb09 5303 	mla	r3, r9, r3, r5
 8017f92:	fb0a 3304 	mla	r3, sl, r4, r3
 8017f96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f98:	fb0e 3304 	mla	r3, lr, r4, r3
 8017f9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017fa0:	2b00      	cmp	r3, #0
 8017fa2:	f000 8106 	beq.w	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017fa6:	9c08      	ldr	r4, [sp, #32]
 8017fa8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017fac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017fb0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017fb4:	f000 8187 	beq.w	80182c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8017fb8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017fbc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017fc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017fc4:	fb09 f000 	mul.w	r0, r9, r0
 8017fc8:	fb0a fe0e 	mul.w	lr, sl, lr
 8017fcc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017fd0:	f100 0b20 	add.w	fp, r0, #32
 8017fd4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017fd8:	44ce      	add	lr, r9
 8017fda:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017fde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017fe2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017fe6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017fea:	ea4e 0909 	orr.w	r9, lr, r9
 8017fee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017ff2:	8868      	ldrh	r0, [r5, #2]
 8017ff4:	d019      	beq.n	801802a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017ff6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017ffa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017ffe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018002:	fb08 f800 	mul.w	r8, r8, r0
 8018006:	fb0a fe0e 	mul.w	lr, sl, lr
 801800a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801800e:	f108 0b20 	add.w	fp, r8, #32
 8018012:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018016:	4486      	add	lr, r0
 8018018:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801801c:	0a00      	lsrs	r0, r0, #8
 801801e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018022:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018026:	ea4e 0000 	orr.w	r0, lr, r0
 801802a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801802e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018032:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018036:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801803a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801803e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018042:	ea4e 0909 	orr.w	r9, lr, r9
 8018046:	ea4a 0000 	orr.w	r0, sl, r0
 801804a:	f1bc 0f00 	cmp.w	ip, #0
 801804e:	f000 813c 	beq.w	80182ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8018052:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018056:	3a01      	subs	r2, #1
 8018058:	0052      	lsls	r2, r2, #1
 801805a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801805c:	3202      	adds	r2, #2
 801805e:	2cff      	cmp	r4, #255	; 0xff
 8018060:	eb05 0e02 	add.w	lr, r5, r2
 8018064:	5aaa      	ldrh	r2, [r5, r2]
 8018066:	d018      	beq.n	801809a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018068:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801806c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018070:	fb04 fa02 	mul.w	sl, r4, r2
 8018074:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018078:	fb08 f805 	mul.w	r8, r8, r5
 801807c:	f10a 0520 	add.w	r5, sl, #32
 8018080:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018084:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018088:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801808c:	4442      	add	r2, r8
 801808e:	0a2d      	lsrs	r5, r5, #8
 8018090:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018094:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018098:	432a      	orrs	r2, r5
 801809a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801809c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80180a0:	2cff      	cmp	r4, #255	; 0xff
 80180a2:	d01a      	beq.n	80180da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80180a4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80180a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180ac:	fb04 fa05 	mul.w	sl, r4, r5
 80180b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80180b4:	fb08 f80e 	mul.w	r8, r8, lr
 80180b8:	f10a 0e20 	add.w	lr, sl, #32
 80180bc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80180c0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80180c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180c8:	4445      	add	r5, r8
 80180ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80180ce:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80180d2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80180d6:	ea45 050e 	orr.w	r5, r5, lr
 80180da:	fb1c fe01 	smulbb	lr, ip, r1
 80180de:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80180e2:	f1cc 0810 	rsb	r8, ip, #16
 80180e6:	eba8 0801 	sub.w	r8, r8, r1
 80180ea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80180ee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80180f2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80180f6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80180fa:	4341      	muls	r1, r0
 80180fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018100:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018104:	ea4a 0202 	orr.w	r2, sl, r2
 8018108:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801810c:	fb09 1108 	mla	r1, r9, r8, r1
 8018110:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018114:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018118:	fb0c 1102 	mla	r1, ip, r2, r1
 801811c:	ea4b 0505 	orr.w	r5, fp, r5
 8018120:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018124:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018128:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801812c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018130:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018134:	ea42 0e0e 	orr.w	lr, r2, lr
 8018138:	fa1f f28e 	uxth.w	r2, lr
 801813c:	2bff      	cmp	r3, #255	; 0xff
 801813e:	f000 80d8 	beq.w	80182f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8018142:	f8b7 c000 	ldrh.w	ip, [r7]
 8018146:	43db      	mvns	r3, r3
 8018148:	ea4f 202c 	mov.w	r0, ip, asr #8
 801814c:	fa5f fe83 	uxtb.w	lr, r3
 8018150:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018154:	fb00 f00e 	mul.w	r0, r0, lr
 8018158:	1c41      	adds	r1, r0, #1
 801815a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801815e:	1211      	asrs	r1, r2, #8
 8018160:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018164:	f021 0107 	bic.w	r1, r1, #7
 8018168:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801816c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018170:	486f      	ldr	r0, [pc, #444]	; (8018330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8018172:	fb05 f50e 	mul.w	r5, r5, lr
 8018176:	b2c9      	uxtb	r1, r1
 8018178:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801817c:	1c69      	adds	r1, r5, #1
 801817e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018182:	10d1      	asrs	r1, r2, #3
 8018184:	f021 0103 	bic.w	r1, r1, #3
 8018188:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801818c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018190:	b2db      	uxtb	r3, r3
 8018192:	00c9      	lsls	r1, r1, #3
 8018194:	fb03 f30e 	mul.w	r3, r3, lr
 8018198:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801819c:	4301      	orrs	r1, r0
 801819e:	1c58      	adds	r0, r3, #1
 80181a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80181a4:	00d3      	lsls	r3, r2, #3
 80181a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80181aa:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80181ae:	4319      	orrs	r1, r3
 80181b0:	8039      	strh	r1, [r7, #0]
 80181b2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80181b4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80181b6:	4413      	add	r3, r2
 80181b8:	9325      	str	r3, [sp, #148]	; 0x94
 80181ba:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80181bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80181be:	441a      	add	r2, r3
 80181c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80181c2:	9226      	str	r2, [sp, #152]	; 0x98
 80181c4:	3b01      	subs	r3, #1
 80181c6:	3702      	adds	r7, #2
 80181c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80181ca:	e692      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80181cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80181ce:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80181d0:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80181d2:	4433      	add	r3, r6
 80181d4:	9325      	str	r3, [sp, #148]	; 0x94
 80181d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80181d8:	441c      	add	r4, r3
 80181da:	9b06      	ldr	r3, [sp, #24]
 80181dc:	9426      	str	r4, [sp, #152]	; 0x98
 80181de:	3b01      	subs	r3, #1
 80181e0:	9306      	str	r3, [sp, #24]
 80181e2:	9b07      	ldr	r3, [sp, #28]
 80181e4:	3302      	adds	r3, #2
 80181e6:	9307      	str	r3, [sp, #28]
 80181e8:	e661      	b.n	8017eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80181ea:	d028      	beq.n	801823e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 80181ec:	9b06      	ldr	r3, [sp, #24]
 80181ee:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80181f0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80181f2:	3b01      	subs	r3, #1
 80181f4:	fb00 5003 	mla	r0, r0, r3, r5
 80181f8:	1400      	asrs	r0, r0, #16
 80181fa:	f53f ae75 	bmi.w	8017ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80181fe:	3901      	subs	r1, #1
 8018200:	4288      	cmp	r0, r1
 8018202:	f6bf ae71 	bge.w	8017ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018206:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018208:	9826      	ldr	r0, [sp, #152]	; 0x98
 801820a:	fb01 0303 	mla	r3, r1, r3, r0
 801820e:	141b      	asrs	r3, r3, #16
 8018210:	f53f ae6a 	bmi.w	8017ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018214:	3a01      	subs	r2, #1
 8018216:	4293      	cmp	r3, r2
 8018218:	f6bf ae66 	bge.w	8017ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801821c:	9b06      	ldr	r3, [sp, #24]
 801821e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018222:	930f      	str	r3, [sp, #60]	; 0x3c
 8018224:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018228:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801822a:	2b00      	cmp	r3, #0
 801822c:	f300 8082 	bgt.w	8018334 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018230:	9b06      	ldr	r3, [sp, #24]
 8018232:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018236:	9b07      	ldr	r3, [sp, #28]
 8018238:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801823c:	9307      	str	r3, [sp, #28]
 801823e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018240:	2b00      	cmp	r3, #0
 8018242:	f340 81e4 	ble.w	801860e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8018246:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801824a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801824e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018252:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018254:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018258:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801825c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018260:	eef0 6a48 	vmov.f32	s13, s16
 8018264:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018268:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801826c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018270:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018274:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018278:	eef0 6a68 	vmov.f32	s13, s17
 801827c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018280:	ee18 2a10 	vmov	r2, s16
 8018284:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018288:	fb92 f3f3 	sdiv	r3, r2, r3
 801828c:	ee18 2a90 	vmov	r2, s17
 8018290:	9327      	str	r3, [sp, #156]	; 0x9c
 8018292:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018294:	fb92 f3f3 	sdiv	r3, r2, r3
 8018298:	9328      	str	r3, [sp, #160]	; 0xa0
 801829a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801829c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801829e:	3b01      	subs	r3, #1
 80182a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80182a4:	930e      	str	r3, [sp, #56]	; 0x38
 80182a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80182a8:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80182ac:	bf08      	it	eq
 80182ae:	4613      	moveq	r3, r2
 80182b0:	9306      	str	r3, [sp, #24]
 80182b2:	eef0 8a67 	vmov.f32	s17, s15
 80182b6:	eeb0 8a47 	vmov.f32	s16, s14
 80182ba:	e5ea      	b.n	8017e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80182bc:	fb08 f505 	mul.w	r5, r8, r5
 80182c0:	fb09 5303 	mla	r3, r9, r3, r5
 80182c4:	e66a      	b.n	8017f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80182c6:	4681      	mov	r9, r0
 80182c8:	e691      	b.n	8017fee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80182ca:	f1c1 0210 	rsb	r2, r1, #16
 80182ce:	4341      	muls	r1, r0
 80182d0:	fb09 1902 	mla	r9, r9, r2, r1
 80182d4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80182d8:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80182dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80182e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80182e4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80182e8:	ea42 0909 	orr.w	r9, r2, r9
 80182ec:	fa1f f289 	uxth.w	r2, r9
 80182f0:	e724      	b.n	801813c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80182f2:	803a      	strh	r2, [r7, #0]
 80182f4:	e75d      	b.n	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80182f6:	f115 0e01 	adds.w	lr, r5, #1
 80182fa:	f53f af5a 	bmi.w	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80182fe:	4572      	cmp	r2, lr
 8018300:	f6ff af57 	blt.w	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018304:	f110 0e01 	adds.w	lr, r0, #1
 8018308:	f53f af53 	bmi.w	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801830c:	4573      	cmp	r3, lr
 801830e:	f6ff af50 	blt.w	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018312:	b21b      	sxth	r3, r3
 8018314:	b212      	sxth	r2, r2
 8018316:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801831a:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801831e:	9301      	str	r3, [sp, #4]
 8018320:	9200      	str	r2, [sp, #0]
 8018322:	4639      	mov	r1, r7
 8018324:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8018328:	9811      	ldr	r0, [sp, #68]	; 0x44
 801832a:	f7ff fbf3 	bl	8017b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801832e:	e740      	b.n	80181b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018330:	fffff800 	.word	0xfffff800
 8018334:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018336:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801833a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801833c:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018340:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018342:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018346:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018348:	141f      	asrs	r7, r3, #16
 801834a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801834c:	141b      	asrs	r3, r3, #16
 801834e:	fb01 3707 	mla	r7, r1, r7, r3
 8018352:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018354:	fa1f fc82 	uxth.w	ip, r2
 8018358:	eb03 0a07 	add.w	sl, r3, r7
 801835c:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018360:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018364:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018368:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801836c:	b29b      	uxth	r3, r3
 801836e:	2d00      	cmp	r5, #0
 8018370:	f000 8132 	beq.w	80185d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 8018374:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018378:	940c      	str	r4, [sp, #48]	; 0x30
 801837a:	eb0a 0b01 	add.w	fp, sl, r1
 801837e:	fa1f fa85 	uxth.w	sl, r5
 8018382:	fb0a fc0c 	mul.w	ip, sl, ip
 8018386:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801838a:	fa1f fa8a 	uxth.w	sl, sl
 801838e:	eba0 000c 	sub.w	r0, r0, ip
 8018392:	eba3 030a 	sub.w	r3, r3, sl
 8018396:	b280      	uxth	r0, r0
 8018398:	fb08 f000 	mul.w	r0, r8, r0
 801839c:	b29b      	uxth	r3, r3
 801839e:	fb09 0303 	mla	r3, r9, r3, r0
 80183a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80183a4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80183a8:	940d      	str	r4, [sp, #52]	; 0x34
 80183aa:	fb0a 3300 	mla	r3, sl, r0, r3
 80183ae:	fb0c 3304 	mla	r3, ip, r4, r3
 80183b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80183b6:	2b00      	cmp	r3, #0
 80183b8:	f000 8100 	beq.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 80183bc:	9808      	ldr	r0, [sp, #32]
 80183be:	9c08      	ldr	r4, [sp, #32]
 80183c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80183c4:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80183c8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80183cc:	f000 8109 	beq.w	80185e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 80183d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80183d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80183d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80183dc:	fb09 f707 	mul.w	r7, r9, r7
 80183e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80183e4:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80183e8:	f107 0b20 	add.w	fp, r7, #32
 80183ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80183f0:	44cc      	add	ip, r9
 80183f2:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80183f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80183fa:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80183fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018402:	ea4c 0909 	orr.w	r9, ip, r9
 8018406:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801840a:	8847      	ldrh	r7, [r0, #2]
 801840c:	d019      	beq.n	8018442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801840e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018412:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018416:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801841a:	fb08 f807 	mul.w	r8, r8, r7
 801841e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018422:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018426:	f108 0b20 	add.w	fp, r8, #32
 801842a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801842e:	44bc      	add	ip, r7
 8018430:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018434:	0a3f      	lsrs	r7, r7, #8
 8018436:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801843a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801843e:	ea4c 0707 	orr.w	r7, ip, r7
 8018442:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018446:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801844a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801844e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018452:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018456:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801845a:	ea4c 0909 	orr.w	r9, ip, r9
 801845e:	ea4a 0707 	orr.w	r7, sl, r7
 8018462:	2d00      	cmp	r5, #0
 8018464:	f000 80bf 	beq.w	80185e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 8018468:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801846c:	3901      	subs	r1, #1
 801846e:	0049      	lsls	r1, r1, #1
 8018470:	3102      	adds	r1, #2
 8018472:	eb00 0c01 	add.w	ip, r0, r1
 8018476:	5a41      	ldrh	r1, [r0, r1]
 8018478:	980c      	ldr	r0, [sp, #48]	; 0x30
 801847a:	28ff      	cmp	r0, #255	; 0xff
 801847c:	d019      	beq.n	80184b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801847e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018480:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018484:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018488:	fb04 fa01 	mul.w	sl, r4, r1
 801848c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018490:	fb08 f800 	mul.w	r8, r8, r0
 8018494:	f10a 0020 	add.w	r0, sl, #32
 8018498:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801849c:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80184a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184a4:	4441      	add	r1, r8
 80184a6:	0a00      	lsrs	r0, r0, #8
 80184a8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80184ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184b0:	4301      	orrs	r1, r0
 80184b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80184b4:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80184b8:	2cff      	cmp	r4, #255	; 0xff
 80184ba:	d01a      	beq.n	80184f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80184bc:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80184c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184c4:	fb04 fa00 	mul.w	sl, r4, r0
 80184c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80184cc:	fb08 f80c 	mul.w	r8, r8, ip
 80184d0:	f10a 0c20 	add.w	ip, sl, #32
 80184d4:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80184d8:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80184dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184e0:	4440      	add	r0, r8
 80184e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184e6:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80184ea:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80184ee:	ea40 000c 	orr.w	r0, r0, ip
 80184f2:	fb15 fc02 	smulbb	ip, r5, r2
 80184f6:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80184fa:	f1c5 0810 	rsb	r8, r5, #16
 80184fe:	eba8 0802 	sub.w	r8, r8, r2
 8018502:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018506:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801850a:	437a      	muls	r2, r7
 801850c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018510:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018514:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018518:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801851c:	fb09 2208 	mla	r2, r9, r8, r2
 8018520:	ea4a 0101 	orr.w	r1, sl, r1
 8018524:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018528:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801852c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018530:	fb05 2201 	mla	r2, r5, r1, r2
 8018534:	ea4b 0000 	orr.w	r0, fp, r0
 8018538:	fb0c 2200 	mla	r2, ip, r0, r2
 801853c:	0d57      	lsrs	r7, r2, #21
 801853e:	0952      	lsrs	r2, r2, #5
 8018540:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018544:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018548:	433a      	orrs	r2, r7
 801854a:	2bff      	cmp	r3, #255	; 0xff
 801854c:	b292      	uxth	r2, r2
 801854e:	d05b      	beq.n	8018608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018550:	f8be 7000 	ldrh.w	r7, [lr]
 8018554:	4c30      	ldr	r4, [pc, #192]	; (8018618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8018556:	43db      	mvns	r3, r3
 8018558:	1238      	asrs	r0, r7, #8
 801855a:	fa5f fc83 	uxtb.w	ip, r3
 801855e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018562:	10fd      	asrs	r5, r7, #3
 8018564:	fb00 f00c 	mul.w	r0, r0, ip
 8018568:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801856c:	fb05 f10c 	mul.w	r1, r5, ip
 8018570:	1c45      	adds	r5, r0, #1
 8018572:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018576:	1215      	asrs	r5, r2, #8
 8018578:	f025 0507 	bic.w	r5, r5, #7
 801857c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018580:	1c4d      	adds	r5, r1, #1
 8018582:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018586:	10d1      	asrs	r1, r2, #3
 8018588:	f021 0103 	bic.w	r1, r1, #3
 801858c:	00fb      	lsls	r3, r7, #3
 801858e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018592:	b2db      	uxtb	r3, r3
 8018594:	b2c0      	uxtb	r0, r0
 8018596:	00c9      	lsls	r1, r1, #3
 8018598:	fb03 f30c 	mul.w	r3, r3, ip
 801859c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80185a0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80185a4:	4308      	orrs	r0, r1
 80185a6:	1c59      	adds	r1, r3, #1
 80185a8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80185ac:	00d2      	lsls	r2, r2, #3
 80185ae:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80185b2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80185b6:	4318      	orrs	r0, r3
 80185b8:	f8ae 0000 	strh.w	r0, [lr]
 80185bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80185be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80185c0:	4413      	add	r3, r2
 80185c2:	9325      	str	r3, [sp, #148]	; 0x94
 80185c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80185c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80185c8:	441a      	add	r2, r3
 80185ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185cc:	9226      	str	r2, [sp, #152]	; 0x98
 80185ce:	3b01      	subs	r3, #1
 80185d0:	f10e 0e02 	add.w	lr, lr, #2
 80185d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80185d6:	e627      	b.n	8018228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80185d8:	fb08 f000 	mul.w	r0, r8, r0
 80185dc:	fb09 0303 	mla	r3, r9, r3, r0
 80185e0:	e6e7      	b.n	80183b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 80185e2:	46b9      	mov	r9, r7
 80185e4:	e70f      	b.n	8018406 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 80185e6:	f1c2 0110 	rsb	r1, r2, #16
 80185ea:	437a      	muls	r2, r7
 80185ec:	fb09 2901 	mla	r9, r9, r1, r2
 80185f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80185f4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80185f8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80185fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018600:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018604:	4302      	orrs	r2, r0
 8018606:	e7a0      	b.n	801854a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8018608:	f8ae 2000 	strh.w	r2, [lr]
 801860c:	e7d6      	b.n	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 801860e:	b013      	add	sp, #76	; 0x4c
 8018610:	ecbd 8b08 	vpop	{d8-d11}
 8018614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018618:	fffff800 	.word	0xfffff800

0801861c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801861c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018620:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018624:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018628:	f1bc 0f00 	cmp.w	ip, #0
 801862c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018630:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018634:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018638:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801863c:	8808      	ldrh	r0, [r1, #0]
 801863e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018642:	db2f      	blt.n	80186a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018644:	45e2      	cmp	sl, ip
 8018646:	dd2d      	ble.n	80186a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018648:	2c00      	cmp	r4, #0
 801864a:	db29      	blt.n	80186a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801864c:	42a3      	cmp	r3, r4
 801864e:	dd27      	ble.n	80186a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018650:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018654:	1c62      	adds	r2, r4, #1
 8018656:	d428      	bmi.n	80186aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018658:	4293      	cmp	r3, r2
 801865a:	dd26      	ble.n	80186aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801865c:	b32f      	cbz	r7, 80186aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801865e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018662:	f11c 0c01 	adds.w	ip, ip, #1
 8018666:	d424      	bmi.n	80186b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018668:	45e2      	cmp	sl, ip
 801866a:	dd22      	ble.n	80186b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801866c:	2e00      	cmp	r6, #0
 801866e:	f000 809d 	beq.w	80187ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018672:	2c00      	cmp	r4, #0
 8018674:	db1b      	blt.n	80186ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018676:	42a3      	cmp	r3, r4
 8018678:	dd19      	ble.n	80186ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801867a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801867e:	3401      	adds	r4, #1
 8018680:	d41a      	bmi.n	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018682:	42a3      	cmp	r3, r4
 8018684:	dd18      	ble.n	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018686:	b1cf      	cbz	r7, 80186bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018688:	3301      	adds	r3, #1
 801868a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801868e:	2f0f      	cmp	r7, #15
 8018690:	d915      	bls.n	80186be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018692:	4b49      	ldr	r3, [pc, #292]	; (80187b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018694:	4a49      	ldr	r2, [pc, #292]	; (80187bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018696:	484a      	ldr	r0, [pc, #296]	; (80187c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018698:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801869c:	f002 ff6c 	bl	801b578 <__assert_func>
 80186a0:	4681      	mov	r9, r0
 80186a2:	e7d7      	b.n	8018654 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80186a4:	4686      	mov	lr, r0
 80186a6:	4681      	mov	r9, r0
 80186a8:	e7db      	b.n	8018662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80186aa:	4686      	mov	lr, r0
 80186ac:	e7d9      	b.n	8018662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80186ae:	4684      	mov	ip, r0
 80186b0:	e7e5      	b.n	801867e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80186b2:	4603      	mov	r3, r0
 80186b4:	4684      	mov	ip, r0
 80186b6:	e7ea      	b.n	801868e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80186b8:	4603      	mov	r3, r0
 80186ba:	e7e8      	b.n	801868e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80186bc:	4603      	mov	r3, r0
 80186be:	2e0f      	cmp	r6, #15
 80186c0:	d8e7      	bhi.n	8018692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80186c2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80186c6:	fb17 f806 	smulbb	r8, r7, r6
 80186ca:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80186ce:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80186d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80186d6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80186da:	ea44 0909 	orr.w	r9, r4, r9
 80186de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80186e2:	f1c6 0410 	rsb	r4, r6, #16
 80186e6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80186ea:	1be4      	subs	r4, r4, r7
 80186ec:	041a      	lsls	r2, r3, #16
 80186ee:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80186f2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80186f6:	fb07 fe0e 	mul.w	lr, r7, lr
 80186fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80186fe:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018702:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018706:	fb04 e409 	mla	r4, r4, r9, lr
 801870a:	4313      	orrs	r3, r2
 801870c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018710:	fb08 4303 	mla	r3, r8, r3, r4
 8018714:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018718:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801871c:	4322      	orrs	r2, r4
 801871e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018722:	fb06 3202 	mla	r2, r6, r2, r3
 8018726:	0d53      	lsrs	r3, r2, #21
 8018728:	0952      	lsrs	r2, r2, #5
 801872a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801872e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018732:	431a      	orrs	r2, r3
 8018734:	b293      	uxth	r3, r2
 8018736:	b2af      	uxth	r7, r5
 8018738:	1202      	asrs	r2, r0, #8
 801873a:	43ed      	mvns	r5, r5
 801873c:	b2ed      	uxtb	r5, r5
 801873e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018742:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018746:	fb12 f205 	smulbb	r2, r2, r5
 801874a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801874e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018752:	00dc      	lsls	r4, r3, #3
 8018754:	10da      	asrs	r2, r3, #3
 8018756:	10c6      	asrs	r6, r0, #3
 8018758:	00c3      	lsls	r3, r0, #3
 801875a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801875e:	b2db      	uxtb	r3, r3
 8018760:	fb16 f605 	smulbb	r6, r6, r5
 8018764:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018768:	b2e4      	uxtb	r4, r4
 801876a:	fb13 f305 	smulbb	r3, r3, r5
 801876e:	fa1f fc8c 	uxth.w	ip, ip
 8018772:	fb02 6207 	mla	r2, r2, r7, r6
 8018776:	fb04 3307 	mla	r3, r4, r7, r3
 801877a:	b296      	uxth	r6, r2
 801877c:	b29a      	uxth	r2, r3
 801877e:	f10c 0301 	add.w	r3, ip, #1
 8018782:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018786:	1c53      	adds	r3, r2, #1
 8018788:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801878c:	1c72      	adds	r2, r6, #1
 801878e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018792:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018796:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801879a:	0952      	lsrs	r2, r2, #5
 801879c:	ea43 030c 	orr.w	r3, r3, ip
 80187a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187a4:	4313      	orrs	r3, r2
 80187a6:	800b      	strh	r3, [r1, #0]
 80187a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80187ac:	2f0f      	cmp	r7, #15
 80187ae:	f63f af70 	bhi.w	8018692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80187b2:	4603      	mov	r3, r0
 80187b4:	4684      	mov	ip, r0
 80187b6:	e784      	b.n	80186c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80187b8:	0801f4be 	.word	0x0801f4be
 80187bc:	0801fb33 	.word	0x0801fb33
 80187c0:	0801f542 	.word	0x0801f542

080187c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187c8:	ed2d 8b08 	vpush	{d8-d11}
 80187cc:	b093      	sub	sp, #76	; 0x4c
 80187ce:	461d      	mov	r5, r3
 80187d0:	9210      	str	r2, [sp, #64]	; 0x40
 80187d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80187d4:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 80187d8:	920b      	str	r2, [sp, #44]	; 0x2c
 80187da:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 80187de:	910a      	str	r1, [sp, #40]	; 0x28
 80187e0:	6859      	ldr	r1, [r3, #4]
 80187e2:	681b      	ldr	r3, [r3, #0]
 80187e4:	9011      	str	r0, [sp, #68]	; 0x44
 80187e6:	fb01 2707 	mla	r7, r1, r7, r2
 80187ea:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80187ee:	9307      	str	r3, [sp, #28]
 80187f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187f2:	681b      	ldr	r3, [r3, #0]
 80187f4:	9309      	str	r3, [sp, #36]	; 0x24
 80187f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80187f8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80187fc:	43db      	mvns	r3, r3
 80187fe:	b2db      	uxtb	r3, r3
 8018800:	eeb0 aa40 	vmov.f32	s20, s0
 8018804:	eef0 9a60 	vmov.f32	s19, s1
 8018808:	eeb0 9a41 	vmov.f32	s18, s2
 801880c:	eeb0 8a62 	vmov.f32	s16, s5
 8018810:	eef0 8a43 	vmov.f32	s17, s6
 8018814:	eef0 ba44 	vmov.f32	s23, s8
 8018818:	eeb0 ba64 	vmov.f32	s22, s9
 801881c:	eef0 aa45 	vmov.f32	s21, s10
 8018820:	9308      	str	r3, [sp, #32]
 8018822:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018824:	2b00      	cmp	r3, #0
 8018826:	dc03      	bgt.n	8018830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018828:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801882a:	2b00      	cmp	r3, #0
 801882c:	f340 8203 	ble.w	8018c36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018830:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018832:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018836:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801883a:	1e48      	subs	r0, r1, #1
 801883c:	f102 3cff 	add.w	ip, r2, #4294967295
 8018840:	2d00      	cmp	r5, #0
 8018842:	f340 80da 	ble.w	80189fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018846:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801884a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801884e:	d406      	bmi.n	801885e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018850:	4586      	cmp	lr, r0
 8018852:	da04      	bge.n	801885e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018854:	2b00      	cmp	r3, #0
 8018856:	db02      	blt.n	801885e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018858:	4563      	cmp	r3, ip
 801885a:	f2c0 80cf 	blt.w	80189fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801885e:	f11e 0e01 	adds.w	lr, lr, #1
 8018862:	f100 80c1 	bmi.w	80189e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018866:	4571      	cmp	r1, lr
 8018868:	f2c0 80be 	blt.w	80189e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801886c:	3301      	adds	r3, #1
 801886e:	f100 80bb 	bmi.w	80189e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018872:	429a      	cmp	r2, r3
 8018874:	f2c0 80b8 	blt.w	80189e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018878:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801887c:	46a9      	mov	r9, r5
 801887e:	f1b9 0f00 	cmp.w	r9, #0
 8018882:	f340 80d8 	ble.w	8018a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018886:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018888:	1421      	asrs	r1, r4, #16
 801888a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801888e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018892:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018896:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801889a:	f100 8111 	bmi.w	8018ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801889e:	f10e 3aff 	add.w	sl, lr, #4294967295
 80188a2:	4551      	cmp	r1, sl
 80188a4:	f280 810c 	bge.w	8018ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188a8:	2800      	cmp	r0, #0
 80188aa:	f2c0 8109 	blt.w	8018ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188ae:	f103 3aff 	add.w	sl, r3, #4294967295
 80188b2:	4550      	cmp	r0, sl
 80188b4:	f280 8104 	bge.w	8018ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80188b8:	fa0f f38e 	sxth.w	r3, lr
 80188bc:	fb00 1103 	mla	r1, r0, r3, r1
 80188c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80188c2:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80188c6:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80188ca:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80188ce:	f1bc 0f00 	cmp.w	ip, #0
 80188d2:	d007      	beq.n	80188e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80188d4:	005b      	lsls	r3, r3, #1
 80188d6:	eb0a 0003 	add.w	r0, sl, r3
 80188da:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80188de:	930c      	str	r3, [sp, #48]	; 0x30
 80188e0:	8843      	ldrh	r3, [r0, #2]
 80188e2:	930d      	str	r3, [sp, #52]	; 0x34
 80188e4:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80188e8:	fb12 f30c 	smulbb	r3, r2, ip
 80188ec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80188f0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80188f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80188f8:	10db      	asrs	r3, r3, #3
 80188fa:	ea40 000e 	orr.w	r0, r0, lr
 80188fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018902:	f1cc 0e10 	rsb	lr, ip, #16
 8018906:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801890a:	ebae 0e02 	sub.w	lr, lr, r2
 801890e:	ea4a 0101 	orr.w	r1, sl, r1
 8018912:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018916:	4351      	muls	r1, r2
 8018918:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801891a:	9f08      	ldr	r7, [sp, #32]
 801891c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018920:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018924:	0410      	lsls	r0, r2, #16
 8018926:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801892a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801892e:	4310      	orrs	r0, r2
 8018930:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018932:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018934:	0412      	lsls	r2, r2, #16
 8018936:	fb03 e000 	mla	r0, r3, r0, lr
 801893a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801893e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018942:	ea42 020e 	orr.w	r2, r2, lr
 8018946:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801894a:	fb03 0302 	mla	r3, r3, r2, r0
 801894e:	0d5a      	lsrs	r2, r3, #21
 8018950:	095b      	lsrs	r3, r3, #5
 8018952:	f8b8 0000 	ldrh.w	r0, [r8]
 8018956:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801895a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801895e:	4313      	orrs	r3, r2
 8018960:	b29b      	uxth	r3, r3
 8018962:	1201      	asrs	r1, r0, #8
 8018964:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018968:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801896c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018970:	fb11 f107 	smulbb	r1, r1, r7
 8018974:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018978:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801897c:	00c0      	lsls	r0, r0, #3
 801897e:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018982:	b2c0      	uxtb	r0, r0
 8018984:	10d9      	asrs	r1, r3, #3
 8018986:	00db      	lsls	r3, r3, #3
 8018988:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801898c:	b2db      	uxtb	r3, r3
 801898e:	fb10 f007 	smulbb	r0, r0, r7
 8018992:	fa1f fc8c 	uxth.w	ip, ip
 8018996:	fb03 0302 	mla	r3, r3, r2, r0
 801899a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801899e:	fb1e fe07 	smulbb	lr, lr, r7
 80189a2:	fb01 e102 	mla	r1, r1, r2, lr
 80189a6:	b29a      	uxth	r2, r3
 80189a8:	f10c 0301 	add.w	r3, ip, #1
 80189ac:	b289      	uxth	r1, r1
 80189ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80189b2:	1c53      	adds	r3, r2, #1
 80189b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80189b8:	1c4a      	adds	r2, r1, #1
 80189ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80189be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80189c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80189c6:	0949      	lsrs	r1, r1, #5
 80189c8:	ea43 030c 	orr.w	r3, r3, ip
 80189cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189d0:	430b      	orrs	r3, r1
 80189d2:	f8a8 3000 	strh.w	r3, [r8]
 80189d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80189d8:	441c      	add	r4, r3
 80189da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189dc:	f108 0802 	add.w	r8, r8, #2
 80189e0:	441e      	add	r6, r3
 80189e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80189e6:	e74a      	b.n	801887e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80189e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80189ea:	441c      	add	r4, r3
 80189ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80189ee:	441e      	add	r6, r3
 80189f0:	9b07      	ldr	r3, [sp, #28]
 80189f2:	3302      	adds	r3, #2
 80189f4:	3d01      	subs	r5, #1
 80189f6:	9307      	str	r3, [sp, #28]
 80189f8:	e722      	b.n	8018840 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80189fa:	d022      	beq.n	8018a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80189fc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80189fe:	1e6b      	subs	r3, r5, #1
 8018a00:	fb00 4003 	mla	r0, r0, r3, r4
 8018a04:	1400      	asrs	r0, r0, #16
 8018a06:	f53f af37 	bmi.w	8018878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a0a:	3901      	subs	r1, #1
 8018a0c:	4288      	cmp	r0, r1
 8018a0e:	f6bf af33 	bge.w	8018878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a12:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018a14:	fb01 6303 	mla	r3, r1, r3, r6
 8018a18:	141b      	asrs	r3, r3, #16
 8018a1a:	f53f af2d 	bmi.w	8018878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a1e:	3a01      	subs	r2, #1
 8018a20:	4293      	cmp	r3, r2
 8018a22:	f6bf af29 	bge.w	8018878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018a26:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018a2a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018a2e:	46a8      	mov	r8, r5
 8018a30:	f1b8 0f00 	cmp.w	r8, #0
 8018a34:	dc5e      	bgt.n	8018af4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018a36:	9b07      	ldr	r3, [sp, #28]
 8018a38:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018a3c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018a40:	9307      	str	r3, [sp, #28]
 8018a42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a44:	2b00      	cmp	r3, #0
 8018a46:	f340 80f6 	ble.w	8018c36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018a4a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018a4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a52:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018a56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a58:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018a5c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018a60:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018a64:	eef0 6a48 	vmov.f32	s13, s16
 8018a68:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018a6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a70:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018a74:	ee16 4a90 	vmov	r4, s13
 8018a78:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018a7c:	eef0 6a68 	vmov.f32	s13, s17
 8018a80:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018a84:	ee18 2a10 	vmov	r2, s16
 8018a88:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018a8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a90:	ee18 2a90 	vmov	r2, s17
 8018a94:	9327      	str	r3, [sp, #156]	; 0x9c
 8018a96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a98:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a9c:	9328      	str	r3, [sp, #160]	; 0xa0
 8018a9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018aa0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018aa2:	3b01      	subs	r3, #1
 8018aa4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018aa8:	930a      	str	r3, [sp, #40]	; 0x28
 8018aaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018aac:	ee16 6a90 	vmov	r6, s13
 8018ab0:	bf14      	ite	ne
 8018ab2:	461d      	movne	r5, r3
 8018ab4:	4615      	moveq	r5, r2
 8018ab6:	eef0 8a67 	vmov.f32	s17, s15
 8018aba:	eeb0 8a47 	vmov.f32	s16, s14
 8018abe:	e6b0      	b.n	8018822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018ac0:	f111 0a01 	adds.w	sl, r1, #1
 8018ac4:	d487      	bmi.n	80189d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ac6:	45d6      	cmp	lr, sl
 8018ac8:	db85      	blt.n	80189d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018aca:	f110 0a01 	adds.w	sl, r0, #1
 8018ace:	d482      	bmi.n	80189d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ad0:	4553      	cmp	r3, sl
 8018ad2:	db80      	blt.n	80189d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ad4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018ad6:	9101      	str	r1, [sp, #4]
 8018ad8:	b21b      	sxth	r3, r3
 8018ada:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018ade:	9300      	str	r3, [sp, #0]
 8018ae0:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018ae4:	fa0f f38e 	sxth.w	r3, lr
 8018ae8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018aea:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018aec:	4641      	mov	r1, r8
 8018aee:	f7ff fd95 	bl	801861c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018af2:	e770      	b.n	80189d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018af4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018af6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018af8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018afc:	1430      	asrs	r0, r6, #16
 8018afe:	1423      	asrs	r3, r4, #16
 8018b00:	fb01 3000 	mla	r0, r1, r0, r3
 8018b04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b06:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018b0a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018b0e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018b12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018b16:	8858      	ldrh	r0, [r3, #2]
 8018b18:	f1be 0f00 	cmp.w	lr, #0
 8018b1c:	d00b      	beq.n	8018b36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018b1e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018b22:	3901      	subs	r1, #1
 8018b24:	0049      	lsls	r1, r1, #1
 8018b26:	3102      	adds	r1, #2
 8018b28:	eb03 0b01 	add.w	fp, r3, r1
 8018b2c:	5a5b      	ldrh	r3, [r3, r1]
 8018b2e:	930e      	str	r3, [sp, #56]	; 0x38
 8018b30:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018b34:	930f      	str	r3, [sp, #60]	; 0x3c
 8018b36:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018b3a:	fb12 f30e 	smulbb	r3, r2, lr
 8018b3e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b42:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018b46:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018b4a:	10db      	asrs	r3, r3, #3
 8018b4c:	ea41 010c 	orr.w	r1, r1, ip
 8018b50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b54:	f1ce 0c10 	rsb	ip, lr, #16
 8018b58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b5c:	ebac 0c02 	sub.w	ip, ip, r2
 8018b60:	ea4b 0000 	orr.w	r0, fp, r0
 8018b64:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018b68:	4350      	muls	r0, r2
 8018b6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018b6c:	9f08      	ldr	r7, [sp, #32]
 8018b6e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018b72:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018b76:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018b7a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8018b7e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018b80:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018b82:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b86:	0412      	lsls	r2, r2, #16
 8018b88:	ea4b 0101 	orr.w	r1, fp, r1
 8018b8c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b94:	fb03 c101 	mla	r1, r3, r1, ip
 8018b98:	4302      	orrs	r2, r0
 8018b9a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018b9e:	fb03 1202 	mla	r2, r3, r2, r1
 8018ba2:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8018ba6:	0952      	lsrs	r2, r2, #5
 8018ba8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8018bac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018bb0:	f8b9 2000 	ldrh.w	r2, [r9]
 8018bb4:	ea4b 0303 	orr.w	r3, fp, r3
 8018bb8:	b29b      	uxth	r3, r3
 8018bba:	1211      	asrs	r1, r2, #8
 8018bbc:	1218      	asrs	r0, r3, #8
 8018bbe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018bc2:	fb11 f107 	smulbb	r1, r1, r7
 8018bc6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018bca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018bce:	00d2      	lsls	r2, r2, #3
 8018bd0:	fb00 100a 	mla	r0, r0, sl, r1
 8018bd4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018bd8:	10d9      	asrs	r1, r3, #3
 8018bda:	b2d2      	uxtb	r2, r2
 8018bdc:	00db      	lsls	r3, r3, #3
 8018bde:	fb1c fc07 	smulbb	ip, ip, r7
 8018be2:	fb12 f207 	smulbb	r2, r2, r7
 8018be6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018bea:	b2db      	uxtb	r3, r3
 8018bec:	b280      	uxth	r0, r0
 8018bee:	fb01 c10a 	mla	r1, r1, sl, ip
 8018bf2:	fb03 230a 	mla	r3, r3, sl, r2
 8018bf6:	b29b      	uxth	r3, r3
 8018bf8:	b289      	uxth	r1, r1
 8018bfa:	1c42      	adds	r2, r0, #1
 8018bfc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018c00:	f101 0c01 	add.w	ip, r1, #1
 8018c04:	1c5a      	adds	r2, r3, #1
 8018c06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018c0a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018c0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018c10:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018c14:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018c18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018c1c:	4310      	orrs	r0, r2
 8018c1e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018c22:	441c      	add	r4, r3
 8018c24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c26:	ea40 000c 	orr.w	r0, r0, ip
 8018c2a:	f829 0b02 	strh.w	r0, [r9], #2
 8018c2e:	441e      	add	r6, r3
 8018c30:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c34:	e6fc      	b.n	8018a30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8018c36:	b013      	add	sp, #76	; 0x4c
 8018c38:	ecbd 8b08 	vpop	{d8-d11}
 8018c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c44:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018c48:	fb06 5c03 	mla	ip, r6, r3, r5
 8018c4c:	2e00      	cmp	r6, #0
 8018c4e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018c52:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018c56:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8018c5a:	8808      	ldrh	r0, [r1, #0]
 8018c5c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018c60:	db2e      	blt.n	8018cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018c62:	45b0      	cmp	r8, r6
 8018c64:	dd2c      	ble.n	8018cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018c66:	2d00      	cmp	r5, #0
 8018c68:	db28      	blt.n	8018cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018c6a:	42ab      	cmp	r3, r5
 8018c6c:	dd26      	ble.n	8018cbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018c6e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8018c72:	1c6a      	adds	r2, r5, #1
 8018c74:	d427      	bmi.n	8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c76:	4293      	cmp	r3, r2
 8018c78:	dd25      	ble.n	8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c7a:	b324      	cbz	r4, 8018cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018c7c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018c80:	3601      	adds	r6, #1
 8018c82:	d424      	bmi.n	8018cce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018c84:	45b0      	cmp	r8, r6
 8018c86:	dd22      	ble.n	8018cce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018c88:	b31f      	cbz	r7, 8018cd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8018c8a:	2d00      	cmp	r5, #0
 8018c8c:	db1d      	blt.n	8018cca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018c8e:	42ab      	cmp	r3, r5
 8018c90:	dd1b      	ble.n	8018cca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018c92:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018c96:	3501      	adds	r5, #1
 8018c98:	d405      	bmi.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018c9a:	42ab      	cmp	r3, r5
 8018c9c:	dd03      	ble.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018c9e:	b124      	cbz	r4, 8018caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018ca0:	3301      	adds	r3, #1
 8018ca2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018ca6:	2c0f      	cmp	r4, #15
 8018ca8:	d801      	bhi.n	8018cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018caa:	2f0f      	cmp	r7, #15
 8018cac:	d914      	bls.n	8018cd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8018cae:	4b27      	ldr	r3, [pc, #156]	; (8018d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018cb0:	4a27      	ldr	r2, [pc, #156]	; (8018d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018cb2:	4828      	ldr	r0, [pc, #160]	; (8018d54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018cb4:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8018cb8:	f002 fc5e 	bl	801b578 <__assert_func>
 8018cbc:	4684      	mov	ip, r0
 8018cbe:	e7d8      	b.n	8018c72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018cc0:	4602      	mov	r2, r0
 8018cc2:	4684      	mov	ip, r0
 8018cc4:	e7dc      	b.n	8018c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018cc6:	4602      	mov	r2, r0
 8018cc8:	e7da      	b.n	8018c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018cca:	4606      	mov	r6, r0
 8018ccc:	e7e3      	b.n	8018c96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018cce:	4606      	mov	r6, r0
 8018cd0:	e7e9      	b.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018cd2:	2c0f      	cmp	r4, #15
 8018cd4:	d8eb      	bhi.n	8018cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018cd6:	4606      	mov	r6, r0
 8018cd8:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018cdc:	fb14 f307 	smulbb	r3, r4, r7
 8018ce0:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018ce4:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018ce8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018cec:	10db      	asrs	r3, r3, #3
 8018cee:	ea45 0c0c 	orr.w	ip, r5, ip
 8018cf2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018cf6:	f1c7 0510 	rsb	r5, r7, #16
 8018cfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018cfe:	1b2d      	subs	r5, r5, r4
 8018d00:	ea4e 0202 	orr.w	r2, lr, r2
 8018d04:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018d08:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018d0c:	4354      	muls	r4, r2
 8018d0e:	fb05 450c 	mla	r5, r5, ip, r4
 8018d12:	0404      	lsls	r4, r0, #16
 8018d14:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d1c:	4320      	orrs	r0, r4
 8018d1e:	fb03 5400 	mla	r4, r3, r0, r5
 8018d22:	0430      	lsls	r0, r6, #16
 8018d24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d28:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018d2c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018d30:	4330      	orrs	r0, r6
 8018d32:	fb07 4000 	mla	r0, r7, r0, r4
 8018d36:	0d43      	lsrs	r3, r0, #21
 8018d38:	0940      	lsrs	r0, r0, #5
 8018d3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d42:	4318      	orrs	r0, r3
 8018d44:	8008      	strh	r0, [r1, #0]
 8018d46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018d4a:	bf00      	nop
 8018d4c:	0801f4be 	.word	0x0801f4be
 8018d50:	0801fb33 	.word	0x0801fb33
 8018d54:	0801f542 	.word	0x0801f542

08018d58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d5c:	ed2d 8b08 	vpush	{d8-d11}
 8018d60:	b08f      	sub	sp, #60	; 0x3c
 8018d62:	461d      	mov	r5, r3
 8018d64:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018d66:	920c      	str	r2, [sp, #48]	; 0x30
 8018d68:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8018d6c:	9107      	str	r1, [sp, #28]
 8018d6e:	6859      	ldr	r1, [r3, #4]
 8018d70:	681b      	ldr	r3, [r3, #0]
 8018d72:	900d      	str	r0, [sp, #52]	; 0x34
 8018d74:	fb01 2707 	mla	r7, r1, r7, r2
 8018d78:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8018d7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d7e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8018d82:	f8d3 8000 	ldr.w	r8, [r3]
 8018d86:	eeb0 aa40 	vmov.f32	s20, s0
 8018d8a:	eef0 9a60 	vmov.f32	s19, s1
 8018d8e:	eeb0 9a41 	vmov.f32	s18, s2
 8018d92:	eeb0 8a62 	vmov.f32	s16, s5
 8018d96:	eef0 8a43 	vmov.f32	s17, s6
 8018d9a:	eef0 ba44 	vmov.f32	s23, s8
 8018d9e:	eeb0 ba64 	vmov.f32	s22, s9
 8018da2:	eef0 aa45 	vmov.f32	s21, s10
 8018da6:	9b07      	ldr	r3, [sp, #28]
 8018da8:	2b00      	cmp	r3, #0
 8018daa:	dc03      	bgt.n	8018db4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018dac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018dae:	2b00      	cmp	r3, #0
 8018db0:	f340 8181 	ble.w	80190b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018db4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018db6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018dba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018dbe:	1e48      	subs	r0, r1, #1
 8018dc0:	f102 3cff 	add.w	ip, r2, #4294967295
 8018dc4:	2d00      	cmp	r5, #0
 8018dc6:	f340 809b 	ble.w	8018f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8018dca:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018dce:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018dd2:	d406      	bmi.n	8018de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018dd4:	4586      	cmp	lr, r0
 8018dd6:	da04      	bge.n	8018de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018dd8:	2b00      	cmp	r3, #0
 8018dda:	db02      	blt.n	8018de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018ddc:	4563      	cmp	r3, ip
 8018dde:	f2c0 8090 	blt.w	8018f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018de2:	f11e 0e01 	adds.w	lr, lr, #1
 8018de6:	f100 8084 	bmi.w	8018ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018dea:	4571      	cmp	r1, lr
 8018dec:	f2c0 8081 	blt.w	8018ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018df0:	3301      	adds	r3, #1
 8018df2:	d47e      	bmi.n	8018ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018df4:	429a      	cmp	r2, r3
 8018df6:	db7c      	blt.n	8018ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018df8:	46aa      	mov	sl, r5
 8018dfa:	46b9      	mov	r9, r7
 8018dfc:	f1ba 0f00 	cmp.w	sl, #0
 8018e00:	f340 8099 	ble.w	8018f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018e04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e06:	1421      	asrs	r1, r4, #16
 8018e08:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018e0c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018e10:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018e14:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018e18:	f100 80d0 	bmi.w	8018fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e1c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018e20:	4559      	cmp	r1, fp
 8018e22:	f280 80cb 	bge.w	8018fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e26:	2800      	cmp	r0, #0
 8018e28:	f2c0 80c8 	blt.w	8018fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e2c:	f103 3bff 	add.w	fp, r3, #4294967295
 8018e30:	4558      	cmp	r0, fp
 8018e32:	f280 80c3 	bge.w	8018fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018e36:	fa0f fe8e 	sxth.w	lr, lr
 8018e3a:	fb00 110e 	mla	r1, r0, lr, r1
 8018e3e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018e42:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8018e46:	8841      	ldrh	r1, [r0, #2]
 8018e48:	f1bc 0f00 	cmp.w	ip, #0
 8018e4c:	d00b      	beq.n	8018e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018e4e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8018e52:	3b01      	subs	r3, #1
 8018e54:	005b      	lsls	r3, r3, #1
 8018e56:	3302      	adds	r3, #2
 8018e58:	eb00 0e03 	add.w	lr, r0, r3
 8018e5c:	5ac3      	ldrh	r3, [r0, r3]
 8018e5e:	9308      	str	r3, [sp, #32]
 8018e60:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8018e64:	9309      	str	r3, [sp, #36]	; 0x24
 8018e66:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8018e6a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018e6e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018e72:	ea40 000b 	orr.w	r0, r0, fp
 8018e76:	fb12 f30c 	smulbb	r3, r2, ip
 8018e7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018e7e:	10db      	asrs	r3, r3, #3
 8018e80:	f1cc 0e10 	rsb	lr, ip, #16
 8018e84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018e88:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e8c:	ebae 0e02 	sub.w	lr, lr, r2
 8018e90:	ea4b 0101 	orr.w	r1, fp, r1
 8018e94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018e98:	4351      	muls	r1, r2
 8018e9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018e9c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018ea0:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018ea4:	0410      	lsls	r0, r2, #16
 8018ea6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018eaa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018eae:	4310      	orrs	r0, r2
 8018eb0:	9a08      	ldr	r2, [sp, #32]
 8018eb2:	9908      	ldr	r1, [sp, #32]
 8018eb4:	0412      	lsls	r2, r2, #16
 8018eb6:	fb03 e000 	mla	r0, r3, r0, lr
 8018eba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018ebe:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018ec2:	ea42 020e 	orr.w	r2, r2, lr
 8018ec6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018eca:	fb03 0302 	mla	r3, r3, r2, r0
 8018ece:	0d5a      	lsrs	r2, r3, #21
 8018ed0:	095b      	lsrs	r3, r3, #5
 8018ed2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018ed6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018eda:	4313      	orrs	r3, r2
 8018edc:	f8a9 3000 	strh.w	r3, [r9]
 8018ee0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018ee2:	441c      	add	r4, r3
 8018ee4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ee6:	f109 0902 	add.w	r9, r9, #2
 8018eea:	441e      	add	r6, r3
 8018eec:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018ef0:	e784      	b.n	8018dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8018ef2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018ef4:	441c      	add	r4, r3
 8018ef6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ef8:	3d01      	subs	r5, #1
 8018efa:	441e      	add	r6, r3
 8018efc:	3702      	adds	r7, #2
 8018efe:	e761      	b.n	8018dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018f00:	d01d      	beq.n	8018f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018f02:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018f04:	1e6b      	subs	r3, r5, #1
 8018f06:	fb00 4003 	mla	r0, r0, r3, r4
 8018f0a:	1400      	asrs	r0, r0, #16
 8018f0c:	f53f af74 	bmi.w	8018df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f10:	3901      	subs	r1, #1
 8018f12:	4288      	cmp	r0, r1
 8018f14:	f6bf af70 	bge.w	8018df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f18:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018f1a:	fb01 6303 	mla	r3, r1, r3, r6
 8018f1e:	141b      	asrs	r3, r3, #16
 8018f20:	f53f af6a 	bmi.w	8018df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f24:	3a01      	subs	r2, #1
 8018f26:	4293      	cmp	r3, r2
 8018f28:	f6bf af66 	bge.w	8018df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018f2c:	46a9      	mov	r9, r5
 8018f2e:	46ba      	mov	sl, r7
 8018f30:	f1b9 0f00 	cmp.w	r9, #0
 8018f34:	dc5a      	bgt.n	8018fec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f36:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018f3a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8018f3e:	9b07      	ldr	r3, [sp, #28]
 8018f40:	2b00      	cmp	r3, #0
 8018f42:	f340 80b8 	ble.w	80190b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018f46:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f4a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f4e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f54:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f58:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f5c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f60:	eef0 6a48 	vmov.f32	s13, s16
 8018f64:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f6c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f70:	ee16 4a90 	vmov	r4, s13
 8018f74:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f78:	eef0 6a68 	vmov.f32	s13, s17
 8018f7c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f80:	ee18 2a10 	vmov	r2, s16
 8018f84:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f88:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f8c:	ee18 2a90 	vmov	r2, s17
 8018f90:	9323      	str	r3, [sp, #140]	; 0x8c
 8018f92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f94:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f98:	9324      	str	r3, [sp, #144]	; 0x90
 8018f9a:	9b07      	ldr	r3, [sp, #28]
 8018f9c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018f9e:	3b01      	subs	r3, #1
 8018fa0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fa4:	9307      	str	r3, [sp, #28]
 8018fa6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018fa8:	ee16 6a90 	vmov	r6, s13
 8018fac:	bf14      	ite	ne
 8018fae:	461d      	movne	r5, r3
 8018fb0:	4615      	moveq	r5, r2
 8018fb2:	eef0 8a67 	vmov.f32	s17, s15
 8018fb6:	eeb0 8a47 	vmov.f32	s16, s14
 8018fba:	e6f4      	b.n	8018da6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018fbc:	f111 0b01 	adds.w	fp, r1, #1
 8018fc0:	d48e      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fc2:	45de      	cmp	lr, fp
 8018fc4:	db8c      	blt.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fc6:	f110 0b01 	adds.w	fp, r0, #1
 8018fca:	d489      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fcc:	455b      	cmp	r3, fp
 8018fce:	db87      	blt.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fd0:	b21b      	sxth	r3, r3
 8018fd2:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8018fd6:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8018fda:	9300      	str	r3, [sp, #0]
 8018fdc:	4642      	mov	r2, r8
 8018fde:	fa0f f38e 	sxth.w	r3, lr
 8018fe2:	4649      	mov	r1, r9
 8018fe4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018fe6:	f7ff fe2b 	bl	8018c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018fea:	e779      	b.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018fec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018fee:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018ff2:	1420      	asrs	r0, r4, #16
 8018ff4:	1431      	asrs	r1, r6, #16
 8018ff6:	fb03 0101 	mla	r1, r3, r1, r0
 8018ffa:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018ffe:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019002:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019006:	8841      	ldrh	r1, [r0, #2]
 8019008:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801900c:	f1be 0f00 	cmp.w	lr, #0
 8019010:	d00b      	beq.n	801902a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8019012:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019016:	3b01      	subs	r3, #1
 8019018:	005b      	lsls	r3, r3, #1
 801901a:	3302      	adds	r3, #2
 801901c:	eb00 0b03 	add.w	fp, r0, r3
 8019020:	5ac3      	ldrh	r3, [r0, r3]
 8019022:	930a      	str	r3, [sp, #40]	; 0x28
 8019024:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019028:	930b      	str	r3, [sp, #44]	; 0x2c
 801902a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801902e:	fb12 f30e 	smulbb	r3, r2, lr
 8019032:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019036:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801903a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801903e:	10db      	asrs	r3, r3, #3
 8019040:	ea40 000c 	orr.w	r0, r0, ip
 8019044:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019048:	f1ce 0c10 	rsb	ip, lr, #16
 801904c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019050:	ebac 0c02 	sub.w	ip, ip, r2
 8019054:	ea4b 0101 	orr.w	r1, fp, r1
 8019058:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801905c:	4351      	muls	r1, r2
 801905e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019060:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019064:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019068:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801906c:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8019070:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019072:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019074:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019078:	0412      	lsls	r2, r2, #16
 801907a:	ea4b 0000 	orr.w	r0, fp, r0
 801907e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019082:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8019086:	fb03 c000 	mla	r0, r3, r0, ip
 801908a:	ea42 0b0b 	orr.w	fp, r2, fp
 801908e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019092:	fb03 000b 	mla	r0, r3, fp, r0
 8019096:	0d43      	lsrs	r3, r0, #21
 8019098:	0940      	lsrs	r0, r0, #5
 801909a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801909e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80190a2:	4318      	orrs	r0, r3
 80190a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80190a6:	f82a 0b02 	strh.w	r0, [sl], #2
 80190aa:	441c      	add	r4, r3
 80190ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80190ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80190b2:	441e      	add	r6, r3
 80190b4:	e73c      	b.n	8018f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80190b6:	b00f      	add	sp, #60	; 0x3c
 80190b8:	ecbd 8b08 	vpop	{d8-d11}
 80190bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80190c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190c4:	880e      	ldrh	r6, [r1, #0]
 80190c6:	b085      	sub	sp, #20
 80190c8:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80190cc:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 80190d0:	4690      	mov	r8, r2
 80190d2:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 80190d6:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 80190da:	9200      	str	r2, [sp, #0]
 80190dc:	00f6      	lsls	r6, r6, #3
 80190de:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 80190e2:	9201      	str	r2, [sp, #4]
 80190e4:	2c00      	cmp	r4, #0
 80190e6:	b2f2      	uxtb	r2, r6
 80190e8:	fb04 5603 	mla	r6, r4, r3, r5
 80190ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80190f0:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 80190f4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80190f8:	9202      	str	r2, [sp, #8]
 80190fa:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 80190fe:	db36      	blt.n	801916e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8019100:	45a6      	cmp	lr, r4
 8019102:	dd34      	ble.n	801916e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8019104:	2d00      	cmp	r5, #0
 8019106:	db30      	blt.n	801916a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8019108:	42ab      	cmp	r3, r5
 801910a:	dd2e      	ble.n	801916a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801910c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8019110:	1c6e      	adds	r6, r5, #1
 8019112:	d42f      	bmi.n	8019174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019114:	42b3      	cmp	r3, r6
 8019116:	dd2d      	ble.n	8019174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019118:	b370      	cbz	r0, 8019178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801911a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801911e:	3401      	adds	r4, #1
 8019120:	d42e      	bmi.n	8019180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8019122:	45a6      	cmp	lr, r4
 8019124:	dd2c      	ble.n	8019180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8019126:	b377      	cbz	r7, 8019186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8019128:	2d00      	cmp	r5, #0
 801912a:	db27      	blt.n	801917c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801912c:	42ab      	cmp	r3, r5
 801912e:	dd25      	ble.n	801917c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8019130:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019134:	3501      	adds	r5, #1
 8019136:	d429      	bmi.n	801918c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019138:	42ab      	cmp	r3, r5
 801913a:	dd27      	ble.n	801918c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801913c:	b340      	cbz	r0, 8019190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801913e:	3301      	adds	r3, #1
 8019140:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019144:	280f      	cmp	r0, #15
 8019146:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801914a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801914e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019152:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019156:	d801      	bhi.n	801915c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019158:	2f0f      	cmp	r7, #15
 801915a:	d91b      	bls.n	8019194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801915c:	4b84      	ldr	r3, [pc, #528]	; (8019370 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801915e:	4a85      	ldr	r2, [pc, #532]	; (8019374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8019160:	4885      	ldr	r0, [pc, #532]	; (8019378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8019162:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019166:	f002 fa07 	bl	801b578 <__assert_func>
 801916a:	2200      	movs	r2, #0
 801916c:	e7d0      	b.n	8019110 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801916e:	2600      	movs	r6, #0
 8019170:	4632      	mov	r2, r6
 8019172:	e7d4      	b.n	801911e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019174:	2600      	movs	r6, #0
 8019176:	e7d2      	b.n	801911e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019178:	4606      	mov	r6, r0
 801917a:	e7d0      	b.n	801911e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801917c:	2400      	movs	r4, #0
 801917e:	e7d9      	b.n	8019134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8019180:	2300      	movs	r3, #0
 8019182:	461c      	mov	r4, r3
 8019184:	e7de      	b.n	8019144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8019186:	463b      	mov	r3, r7
 8019188:	463c      	mov	r4, r7
 801918a:	e7db      	b.n	8019144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801918c:	2300      	movs	r3, #0
 801918e:	e7d9      	b.n	8019144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8019190:	4603      	mov	r3, r0
 8019192:	e7d7      	b.n	8019144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8019194:	b280      	uxth	r0, r0
 8019196:	b2bf      	uxth	r7, r7
 8019198:	fb00 fe07 	mul.w	lr, r0, r7
 801919c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80191a0:	0100      	lsls	r0, r0, #4
 80191a2:	eba0 0c0e 	sub.w	ip, r0, lr
 80191a6:	b2bf      	uxth	r7, r7
 80191a8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80191ac:	fa1f fc8c 	uxth.w	ip, ip
 80191b0:	1bed      	subs	r5, r5, r7
 80191b2:	b2ad      	uxth	r5, r5
 80191b4:	fb0c f00a 	mul.w	r0, ip, sl
 80191b8:	fb05 000b 	mla	r0, r5, fp, r0
 80191bc:	fb07 0009 	mla	r0, r7, r9, r0
 80191c0:	fb0e 0008 	mla	r0, lr, r8, r0
 80191c4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80191c8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80191cc:	9003      	str	r0, [sp, #12]
 80191ce:	d018      	beq.n	8019202 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80191d0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80191d4:	fb0b f000 	mul.w	r0, fp, r0
 80191d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80191dc:	fb0b fb02 	mul.w	fp, fp, r2
 80191e0:	0a02      	lsrs	r2, r0, #8
 80191e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80191e6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80191ea:	4402      	add	r2, r0
 80191ec:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80191f0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80191f4:	0a12      	lsrs	r2, r2, #8
 80191f6:	0a00      	lsrs	r0, r0, #8
 80191f8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80191fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019200:	4302      	orrs	r2, r0
 8019202:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019206:	d019      	beq.n	801923c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8019208:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801920c:	fb0a fb0b 	mul.w	fp, sl, fp
 8019210:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019214:	fb0a fa06 	mul.w	sl, sl, r6
 8019218:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801921c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019220:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019224:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019228:	445e      	add	r6, fp
 801922a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801922e:	0a36      	lsrs	r6, r6, #8
 8019230:	0a00      	lsrs	r0, r0, #8
 8019232:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019236:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801923a:	4306      	orrs	r6, r0
 801923c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019240:	d019      	beq.n	8019276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8019242:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019246:	fb09 fa0a 	mul.w	sl, r9, sl
 801924a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801924e:	fb09 f904 	mul.w	r9, r9, r4
 8019252:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019256:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801925a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801925e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019262:	4454      	add	r4, sl
 8019264:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019268:	0a24      	lsrs	r4, r4, #8
 801926a:	0a00      	lsrs	r0, r0, #8
 801926c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019270:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019274:	4304      	orrs	r4, r0
 8019276:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801927a:	d019      	beq.n	80192b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801927c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019280:	fb08 f909 	mul.w	r9, r8, r9
 8019284:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019288:	fb08 f803 	mul.w	r8, r8, r3
 801928c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019290:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019294:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019298:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801929c:	444b      	add	r3, r9
 801929e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80192a2:	0a1b      	lsrs	r3, r3, #8
 80192a4:	0a00      	lsrs	r0, r0, #8
 80192a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80192aa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80192ae:	4303      	orrs	r3, r0
 80192b0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80192b4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80192b8:	fb0c f808 	mul.w	r8, ip, r8
 80192bc:	fb05 8800 	mla	r8, r5, r0, r8
 80192c0:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80192c4:	fb07 8800 	mla	r8, r7, r0, r8
 80192c8:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80192cc:	fb0e 8000 	mla	r0, lr, r0, r8
 80192d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80192d4:	fb0c f606 	mul.w	r6, ip, r6
 80192d8:	0a00      	lsrs	r0, r0, #8
 80192da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80192de:	fb05 6202 	mla	r2, r5, r2, r6
 80192e2:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80192e6:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80192ea:	fb07 2700 	mla	r7, r7, r0, r2
 80192ee:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80192f2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80192f6:	9c03      	ldr	r4, [sp, #12]
 80192f8:	9e01      	ldr	r6, [sp, #4]
 80192fa:	b29b      	uxth	r3, r3
 80192fc:	435c      	muls	r4, r3
 80192fe:	fb0e 7000 	mla	r0, lr, r0, r7
 8019302:	1c62      	adds	r2, r4, #1
 8019304:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019308:	0a00      	lsrs	r0, r0, #8
 801930a:	9c00      	ldr	r4, [sp, #0]
 801930c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019310:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019314:	ea48 0000 	orr.w	r0, r8, r0
 8019318:	b2d2      	uxtb	r2, r2
 801931a:	fb14 f402 	smulbb	r4, r4, r2
 801931e:	0c05      	lsrs	r5, r0, #16
 8019320:	fb05 4503 	mla	r5, r5, r3, r4
 8019324:	fb16 f602 	smulbb	r6, r6, r2
 8019328:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801932c:	fb04 6403 	mla	r4, r4, r3, r6
 8019330:	9e02      	ldr	r6, [sp, #8]
 8019332:	b2c0      	uxtb	r0, r0
 8019334:	fb16 f202 	smulbb	r2, r6, r2
 8019338:	fb00 2303 	mla	r3, r0, r3, r2
 801933c:	b2ad      	uxth	r5, r5
 801933e:	b298      	uxth	r0, r3
 8019340:	1c43      	adds	r3, r0, #1
 8019342:	1c6a      	adds	r2, r5, #1
 8019344:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019348:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801934c:	b2a4      	uxth	r4, r4
 801934e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019352:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019356:	4313      	orrs	r3, r2
 8019358:	1c62      	adds	r2, r4, #1
 801935a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801935e:	0952      	lsrs	r2, r2, #5
 8019360:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019364:	4313      	orrs	r3, r2
 8019366:	800b      	strh	r3, [r1, #0]
 8019368:	b005      	add	sp, #20
 801936a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801936e:	bf00      	nop
 8019370:	0801f4be 	.word	0x0801f4be
 8019374:	0801fa8a 	.word	0x0801fa8a
 8019378:	0801f542 	.word	0x0801f542

0801937c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801937c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019380:	ed2d 8b08 	vpush	{d8-d11}
 8019384:	b09d      	sub	sp, #116	; 0x74
 8019386:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801938a:	9219      	str	r2, [sp, #100]	; 0x64
 801938c:	9307      	str	r3, [sp, #28]
 801938e:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019390:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8019394:	931a      	str	r3, [sp, #104]	; 0x68
 8019396:	9117      	str	r1, [sp, #92]	; 0x5c
 8019398:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801939c:	901b      	str	r0, [sp, #108]	; 0x6c
 801939e:	6850      	ldr	r0, [r2, #4]
 80193a0:	6812      	ldr	r2, [r2, #0]
 80193a2:	fb00 1303 	mla	r3, r0, r3, r1
 80193a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193aa:	930a      	str	r3, [sp, #40]	; 0x28
 80193ac:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80193ae:	681b      	ldr	r3, [r3, #0]
 80193b0:	9310      	str	r3, [sp, #64]	; 0x40
 80193b2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80193b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80193b8:	eeb0 aa40 	vmov.f32	s20, s0
 80193bc:	eef0 9a60 	vmov.f32	s19, s1
 80193c0:	eeb0 9a41 	vmov.f32	s18, s2
 80193c4:	eeb0 8a62 	vmov.f32	s16, s5
 80193c8:	eef0 8a43 	vmov.f32	s17, s6
 80193cc:	eef0 ba44 	vmov.f32	s23, s8
 80193d0:	eeb0 ba64 	vmov.f32	s22, s9
 80193d4:	eef0 aa45 	vmov.f32	s21, s10
 80193d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80193da:	2b00      	cmp	r3, #0
 80193dc:	dc03      	bgt.n	80193e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80193de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80193e0:	2b00      	cmp	r3, #0
 80193e2:	f340 8375 	ble.w	8019ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80193e6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80193e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80193ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80193f0:	1e48      	subs	r0, r1, #1
 80193f2:	1e57      	subs	r7, r2, #1
 80193f4:	9b07      	ldr	r3, [sp, #28]
 80193f6:	2b00      	cmp	r3, #0
 80193f8:	f340 818e 	ble.w	8019718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80193fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019400:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019404:	d406      	bmi.n	8019414 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019406:	4584      	cmp	ip, r0
 8019408:	da04      	bge.n	8019414 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801940a:	2b00      	cmp	r3, #0
 801940c:	db02      	blt.n	8019414 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801940e:	42bb      	cmp	r3, r7
 8019410:	f2c0 8183 	blt.w	801971a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019414:	f11c 0c01 	adds.w	ip, ip, #1
 8019418:	f100 8173 	bmi.w	8019702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801941c:	4561      	cmp	r1, ip
 801941e:	f2c0 8170 	blt.w	8019702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019422:	3301      	adds	r3, #1
 8019424:	f100 816d 	bmi.w	8019702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019428:	429a      	cmp	r2, r3
 801942a:	f2c0 816a 	blt.w	8019702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801942e:	9b07      	ldr	r3, [sp, #28]
 8019430:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019432:	9318      	str	r3, [sp, #96]	; 0x60
 8019434:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019436:	2b00      	cmp	r3, #0
 8019438:	f340 818c 	ble.w	8019754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801943c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801943e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019440:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019444:	689b      	ldr	r3, [r3, #8]
 8019446:	1422      	asrs	r2, r4, #16
 8019448:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801944c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019450:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019454:	f100 81cd 	bmi.w	80197f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019458:	f103 38ff 	add.w	r8, r3, #4294967295
 801945c:	4542      	cmp	r2, r8
 801945e:	f280 81c8 	bge.w	80197f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019462:	f1bc 0f00 	cmp.w	ip, #0
 8019466:	f2c0 81c4 	blt.w	80197f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801946a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801946e:	45c4      	cmp	ip, r8
 8019470:	f280 81bf 	bge.w	80197f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019474:	b21b      	sxth	r3, r3
 8019476:	fb0c 2203 	mla	r2, ip, r3, r2
 801947a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801947c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019480:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019484:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019488:	2800      	cmp	r0, #0
 801948a:	f000 81a9 	beq.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801948e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019492:	950c      	str	r5, [sp, #48]	; 0x30
 8019494:	0e2d      	lsrs	r5, r5, #24
 8019496:	9513      	str	r5, [sp, #76]	; 0x4c
 8019498:	b181      	cbz	r1, 80194bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801949a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801949e:	3b01      	subs	r3, #1
 80194a0:	009b      	lsls	r3, r3, #2
 80194a2:	3304      	adds	r3, #4
 80194a4:	eb08 0c03 	add.w	ip, r8, r3
 80194a8:	f858 3003 	ldr.w	r3, [r8, r3]
 80194ac:	9308      	str	r3, [sp, #32]
 80194ae:	0e1b      	lsrs	r3, r3, #24
 80194b0:	9311      	str	r3, [sp, #68]	; 0x44
 80194b2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80194b6:	930d      	str	r3, [sp, #52]	; 0x34
 80194b8:	0e1b      	lsrs	r3, r3, #24
 80194ba:	9314      	str	r3, [sp, #80]	; 0x50
 80194bc:	b280      	uxth	r0, r0
 80194be:	b289      	uxth	r1, r1
 80194c0:	fb00 f901 	mul.w	r9, r0, r1
 80194c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80194c8:	0100      	lsls	r0, r0, #4
 80194ca:	eba0 0809 	sub.w	r8, r0, r9
 80194ce:	b289      	uxth	r1, r1
 80194d0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80194d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80194d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194d8:	fa1f f888 	uxth.w	r8, r8
 80194dc:	1a5b      	subs	r3, r3, r1
 80194de:	b29b      	uxth	r3, r3
 80194e0:	fb08 f000 	mul.w	r0, r8, r0
 80194e4:	fb03 000e 	mla	r0, r3, lr, r0
 80194e8:	fb01 0005 	mla	r0, r1, r5, r0
 80194ec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194ee:	fb09 0005 	mla	r0, r9, r5, r0
 80194f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80194f6:	2800      	cmp	r0, #0
 80194f8:	f000 80fa 	beq.w	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80194fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019500:	d01b      	beq.n	801953a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019502:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019506:	fb0e fa0a 	mul.w	sl, lr, sl
 801950a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801950e:	fb0e fe02 	mul.w	lr, lr, r2
 8019512:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019516:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801951a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801951e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019522:	4452      	add	r2, sl
 8019524:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019528:	0a12      	lsrs	r2, r2, #8
 801952a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801952e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019532:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019536:	ea42 020c 	orr.w	r2, r2, ip
 801953a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801953c:	2dff      	cmp	r5, #255	; 0xff
 801953e:	d021      	beq.n	8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019540:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019542:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019546:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019548:	fb05 fb0b 	mul.w	fp, r5, fp
 801954c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801954e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019552:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019554:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019558:	fb05 fa0a 	mul.w	sl, r5, sl
 801955c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019560:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019564:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019568:	44de      	add	lr, fp
 801956a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801956e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019572:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019576:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801957a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801957e:	ea4e 050a 	orr.w	r5, lr, sl
 8019582:	950c      	str	r5, [sp, #48]	; 0x30
 8019584:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019586:	2dff      	cmp	r5, #255	; 0xff
 8019588:	d021      	beq.n	80195ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801958a:	9d08      	ldr	r5, [sp, #32]
 801958c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019590:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019592:	fb05 fb0b 	mul.w	fp, r5, fp
 8019596:	9d08      	ldr	r5, [sp, #32]
 8019598:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801959c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801959e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80195a2:	fb05 fa0a 	mul.w	sl, r5, sl
 80195a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80195ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80195b2:	44de      	add	lr, fp
 80195b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80195b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80195bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80195c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80195c8:	ea4e 050a 	orr.w	r5, lr, sl
 80195cc:	9508      	str	r5, [sp, #32]
 80195ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195d0:	2dff      	cmp	r5, #255	; 0xff
 80195d2:	d021      	beq.n	8019618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80195d4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80195d6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80195da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195dc:	fb05 fb0b 	mul.w	fp, r5, fp
 80195e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80195e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80195e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80195e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80195ec:	fb05 fa0a 	mul.w	sl, r5, sl
 80195f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80195f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80195fc:	44de      	add	lr, fp
 80195fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019602:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019606:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801960a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801960e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019612:	ea4e 050a 	orr.w	r5, lr, sl
 8019616:	950d      	str	r5, [sp, #52]	; 0x34
 8019618:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801961a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801961e:	9d08      	ldr	r5, [sp, #32]
 8019620:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019624:	fb08 fc0c 	mul.w	ip, r8, ip
 8019628:	fb03 cc0e 	mla	ip, r3, lr, ip
 801962c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019630:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019632:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019636:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801963a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801963c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019640:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019644:	fb08 f80e 	mul.w	r8, r8, lr
 8019648:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801964c:	fb03 8202 	mla	r2, r3, r2, r8
 8019650:	9b08      	ldr	r3, [sp, #32]
 8019652:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019654:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019658:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801965a:	fb01 220a 	mla	r2, r1, sl, r2
 801965e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019662:	fb09 2901 	mla	r9, r9, r1, r2
 8019666:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019668:	883b      	ldrh	r3, [r7, #0]
 801966a:	4342      	muls	r2, r0
 801966c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019670:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019674:	1c50      	adds	r0, r2, #1
 8019676:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801967a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801967e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019682:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019686:	1219      	asrs	r1, r3, #8
 8019688:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801968c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019690:	b2c0      	uxtb	r0, r0
 8019692:	fb12 f205 	smulbb	r2, r2, r5
 8019696:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801969a:	fb01 2100 	mla	r1, r1, r0, r2
 801969e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80196a2:	10da      	asrs	r2, r3, #3
 80196a4:	fa5f fc8c 	uxtb.w	ip, ip
 80196a8:	00db      	lsls	r3, r3, #3
 80196aa:	fb1c fc05 	smulbb	ip, ip, r5
 80196ae:	b2db      	uxtb	r3, r3
 80196b0:	b289      	uxth	r1, r1
 80196b2:	fb03 c300 	mla	r3, r3, r0, ip
 80196b6:	fa1f fc83 	uxth.w	ip, r3
 80196ba:	1c4b      	adds	r3, r1, #1
 80196bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80196c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80196c4:	fb1e fe05 	smulbb	lr, lr, r5
 80196c8:	f10c 0301 	add.w	r3, ip, #1
 80196cc:	fb02 e200 	mla	r2, r2, r0, lr
 80196d0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80196d4:	b292      	uxth	r2, r2
 80196d6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80196da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80196de:	430b      	orrs	r3, r1
 80196e0:	1c51      	adds	r1, r2, #1
 80196e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80196e6:	0952      	lsrs	r2, r2, #5
 80196e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80196ec:	4313      	orrs	r3, r2
 80196ee:	803b      	strh	r3, [r7, #0]
 80196f0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80196f2:	441c      	add	r4, r3
 80196f4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80196f6:	441e      	add	r6, r3
 80196f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80196fa:	3b01      	subs	r3, #1
 80196fc:	3702      	adds	r7, #2
 80196fe:	9318      	str	r3, [sp, #96]	; 0x60
 8019700:	e698      	b.n	8019434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019702:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019704:	441c      	add	r4, r3
 8019706:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019708:	441e      	add	r6, r3
 801970a:	9b07      	ldr	r3, [sp, #28]
 801970c:	3b01      	subs	r3, #1
 801970e:	9307      	str	r3, [sp, #28]
 8019710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019712:	3302      	adds	r3, #2
 8019714:	930a      	str	r3, [sp, #40]	; 0x28
 8019716:	e66d      	b.n	80193f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019718:	d023      	beq.n	8019762 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801971a:	9b07      	ldr	r3, [sp, #28]
 801971c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801971e:	3b01      	subs	r3, #1
 8019720:	fb00 4003 	mla	r0, r0, r3, r4
 8019724:	1400      	asrs	r0, r0, #16
 8019726:	f53f ae82 	bmi.w	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801972a:	3901      	subs	r1, #1
 801972c:	4288      	cmp	r0, r1
 801972e:	f6bf ae7e 	bge.w	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019732:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019734:	fb01 6303 	mla	r3, r1, r3, r6
 8019738:	141b      	asrs	r3, r3, #16
 801973a:	f53f ae78 	bmi.w	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801973e:	3a01      	subs	r2, #1
 8019740:	4293      	cmp	r3, r2
 8019742:	f6bf ae74 	bge.w	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019746:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801974a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801974e:	f1bb 0f00 	cmp.w	fp, #0
 8019752:	dc6c      	bgt.n	801982e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019754:	9b07      	ldr	r3, [sp, #28]
 8019756:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801975a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801975c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019760:	930a      	str	r3, [sp, #40]	; 0x28
 8019762:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019764:	2b00      	cmp	r3, #0
 8019766:	f340 81b3 	ble.w	8019ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801976a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801976e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019772:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019776:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019778:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801977c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019780:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019784:	eef0 6a48 	vmov.f32	s13, s16
 8019788:	ee69 7a27 	vmul.f32	s15, s18, s15
 801978c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019790:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019794:	ee16 4a90 	vmov	r4, s13
 8019798:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801979c:	eef0 6a68 	vmov.f32	s13, s17
 80197a0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80197a4:	ee18 2a10 	vmov	r2, s16
 80197a8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80197ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80197b0:	ee18 2a90 	vmov	r2, s17
 80197b4:	9331      	str	r3, [sp, #196]	; 0xc4
 80197b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80197bc:	9332      	str	r3, [sp, #200]	; 0xc8
 80197be:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80197c0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80197c2:	3b01      	subs	r3, #1
 80197c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197c8:	9317      	str	r3, [sp, #92]	; 0x5c
 80197ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197cc:	bf08      	it	eq
 80197ce:	4613      	moveq	r3, r2
 80197d0:	ee16 6a90 	vmov	r6, s13
 80197d4:	9307      	str	r3, [sp, #28]
 80197d6:	eef0 8a67 	vmov.f32	s17, s15
 80197da:	eeb0 8a47 	vmov.f32	s16, s14
 80197de:	e5fb      	b.n	80193d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80197e0:	2900      	cmp	r1, #0
 80197e2:	f43f ae6b 	beq.w	80194bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80197e6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80197ea:	9308      	str	r3, [sp, #32]
 80197ec:	0e1b      	lsrs	r3, r3, #24
 80197ee:	9311      	str	r3, [sp, #68]	; 0x44
 80197f0:	e664      	b.n	80194bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80197f2:	f112 0801 	adds.w	r8, r2, #1
 80197f6:	f53f af7b 	bmi.w	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80197fa:	4543      	cmp	r3, r8
 80197fc:	f6ff af78 	blt.w	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019800:	f11c 0801 	adds.w	r8, ip, #1
 8019804:	f53f af74 	bmi.w	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019808:	45c6      	cmp	lr, r8
 801980a:	f6ff af71 	blt.w	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801980e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019810:	9201      	str	r2, [sp, #4]
 8019812:	fa0f f28e 	sxth.w	r2, lr
 8019816:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801981a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801981e:	9200      	str	r2, [sp, #0]
 8019820:	b21b      	sxth	r3, r3
 8019822:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019824:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019826:	4639      	mov	r1, r7
 8019828:	f7ff fc4a 	bl	80190c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801982c:	e760      	b.n	80196f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801982e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019830:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019832:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019836:	1427      	asrs	r7, r4, #16
 8019838:	1433      	asrs	r3, r6, #16
 801983a:	fb01 7303 	mla	r3, r1, r3, r7
 801983e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019842:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019846:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801984a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801984e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019852:	2a00      	cmp	r2, #0
 8019854:	f000 8133 	beq.w	8019abe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019858:	687d      	ldr	r5, [r7, #4]
 801985a:	950e      	str	r5, [sp, #56]	; 0x38
 801985c:	0e2d      	lsrs	r5, r5, #24
 801985e:	9515      	str	r5, [sp, #84]	; 0x54
 8019860:	b178      	cbz	r0, 8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019862:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019866:	3901      	subs	r1, #1
 8019868:	0089      	lsls	r1, r1, #2
 801986a:	3104      	adds	r1, #4
 801986c:	eb07 0e01 	add.w	lr, r7, r1
 8019870:	5879      	ldr	r1, [r7, r1]
 8019872:	9109      	str	r1, [sp, #36]	; 0x24
 8019874:	0e09      	lsrs	r1, r1, #24
 8019876:	9112      	str	r1, [sp, #72]	; 0x48
 8019878:	f8de 1004 	ldr.w	r1, [lr, #4]
 801987c:	910f      	str	r1, [sp, #60]	; 0x3c
 801987e:	0e09      	lsrs	r1, r1, #24
 8019880:	9116      	str	r1, [sp, #88]	; 0x58
 8019882:	b292      	uxth	r2, r2
 8019884:	b280      	uxth	r0, r0
 8019886:	fb02 f800 	mul.w	r8, r2, r0
 801988a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801988e:	0112      	lsls	r2, r2, #4
 8019890:	eba2 0e08 	sub.w	lr, r2, r8
 8019894:	b280      	uxth	r0, r0
 8019896:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801989a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801989c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801989e:	fa1f fe8e 	uxth.w	lr, lr
 80198a2:	1a12      	subs	r2, r2, r0
 80198a4:	b292      	uxth	r2, r2
 80198a6:	fb0e f101 	mul.w	r1, lr, r1
 80198aa:	fb02 110c 	mla	r1, r2, ip, r1
 80198ae:	fb00 1105 	mla	r1, r0, r5, r1
 80198b2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80198b4:	fb08 1105 	mla	r1, r8, r5, r1
 80198b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80198bc:	2900      	cmp	r1, #0
 80198be:	f000 80f5 	beq.w	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80198c2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80198c6:	d019      	beq.n	80198fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80198c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80198cc:	fb0c fa0a 	mul.w	sl, ip, sl
 80198d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80198d4:	fb0c fc03 	mul.w	ip, ip, r3
 80198d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80198dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80198e4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80198e8:	4453      	add	r3, sl
 80198ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80198ee:	0a1b      	lsrs	r3, r3, #8
 80198f0:	0a3f      	lsrs	r7, r7, #8
 80198f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80198fa:	433b      	orrs	r3, r7
 80198fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80198fe:	2dff      	cmp	r5, #255	; 0xff
 8019900:	d020      	beq.n	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019902:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019904:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019908:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801990a:	436f      	muls	r7, r5
 801990c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801990e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019912:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019914:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019918:	fb05 fa0a 	mul.w	sl, r5, sl
 801991c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019920:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019924:	44bc      	add	ip, r7
 8019926:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801992a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801992e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019936:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801993a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801993e:	ea4c 050a 	orr.w	r5, ip, sl
 8019942:	950e      	str	r5, [sp, #56]	; 0x38
 8019944:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019946:	2dff      	cmp	r5, #255	; 0xff
 8019948:	d020      	beq.n	801998c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801994a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801994c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019950:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019952:	436f      	muls	r7, r5
 8019954:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019956:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801995a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801995c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019960:	fb05 fa0a 	mul.w	sl, r5, sl
 8019964:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019968:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801996c:	44bc      	add	ip, r7
 801996e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019972:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019976:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801997a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801997e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019982:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019986:	ea4c 050a 	orr.w	r5, ip, sl
 801998a:	9509      	str	r5, [sp, #36]	; 0x24
 801998c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801998e:	2dff      	cmp	r5, #255	; 0xff
 8019990:	d020      	beq.n	80199d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8019992:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019994:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019998:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801999a:	436f      	muls	r7, r5
 801999c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801999e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80199a2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80199a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80199a8:	fb05 fa0a 	mul.w	sl, r5, sl
 80199ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80199b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199b4:	44bc      	add	ip, r7
 80199b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80199ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80199be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199ce:	ea4c 050a 	orr.w	r5, ip, sl
 80199d2:	950f      	str	r5, [sp, #60]	; 0x3c
 80199d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80199d6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80199da:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80199dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80199e0:	fb0e f707 	mul.w	r7, lr, r7
 80199e4:	fb02 770c 	mla	r7, r2, ip, r7
 80199e8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80199ec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80199ee:	fb00 770c 	mla	r7, r0, ip, r7
 80199f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80199f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80199f8:	fb08 770c 	mla	r7, r8, ip, r7
 80199fc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019a00:	fb0e fe0c 	mul.w	lr, lr, ip
 8019a04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019a08:	fb02 e303 	mla	r3, r2, r3, lr
 8019a0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019a0e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a10:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019a14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a16:	fb00 330a 	mla	r3, r0, sl, r3
 8019a1a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019a1e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019a22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019a24:	f8b9 0000 	ldrh.w	r0, [r9]
 8019a28:	4359      	muls	r1, r3
 8019a2a:	0a3f      	lsrs	r7, r7, #8
 8019a2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a30:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019a34:	1c4b      	adds	r3, r1, #1
 8019a36:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019a3a:	ea47 070c 	orr.w	r7, r7, ip
 8019a3e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019a42:	1202      	asrs	r2, r0, #8
 8019a44:	0c3b      	lsrs	r3, r7, #16
 8019a46:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019a4a:	b2c9      	uxtb	r1, r1
 8019a4c:	fb13 f305 	smulbb	r3, r3, r5
 8019a50:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019a54:	fb02 3201 	mla	r2, r2, r1, r3
 8019a58:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019a5c:	10c3      	asrs	r3, r0, #3
 8019a5e:	b2ff      	uxtb	r7, r7
 8019a60:	00c0      	lsls	r0, r0, #3
 8019a62:	b2c0      	uxtb	r0, r0
 8019a64:	fb17 f705 	smulbb	r7, r7, r5
 8019a68:	fb00 7001 	mla	r0, r0, r1, r7
 8019a6c:	b292      	uxth	r2, r2
 8019a6e:	fb1c fc05 	smulbb	ip, ip, r5
 8019a72:	b280      	uxth	r0, r0
 8019a74:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019a78:	fb03 c301 	mla	r3, r3, r1, ip
 8019a7c:	1c51      	adds	r1, r2, #1
 8019a7e:	f100 0c01 	add.w	ip, r0, #1
 8019a82:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019a86:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019a8a:	b29b      	uxth	r3, r3
 8019a8c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019a90:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019a94:	ea4c 0202 	orr.w	r2, ip, r2
 8019a98:	f103 0c01 	add.w	ip, r3, #1
 8019a9c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019aa0:	095b      	lsrs	r3, r3, #5
 8019aa2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019aa6:	431a      	orrs	r2, r3
 8019aa8:	f8a9 2000 	strh.w	r2, [r9]
 8019aac:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019aae:	441c      	add	r4, r3
 8019ab0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019ab2:	f109 0902 	add.w	r9, r9, #2
 8019ab6:	441e      	add	r6, r3
 8019ab8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019abc:	e647      	b.n	801974e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8019abe:	2800      	cmp	r0, #0
 8019ac0:	f43f aedf 	beq.w	8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019ac4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019ac8:	9109      	str	r1, [sp, #36]	; 0x24
 8019aca:	0e09      	lsrs	r1, r1, #24
 8019acc:	9112      	str	r1, [sp, #72]	; 0x48
 8019ace:	e6d8      	b.n	8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019ad0:	b01d      	add	sp, #116	; 0x74
 8019ad2:	ecbd 8b08 	vpop	{d8-d11}
 8019ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ae0:	880e      	ldrh	r6, [r1, #0]
 8019ae2:	b085      	sub	sp, #20
 8019ae4:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019ae8:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8019aec:	4690      	mov	r8, r2
 8019aee:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019af2:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019af6:	9200      	str	r2, [sp, #0]
 8019af8:	00f6      	lsls	r6, r6, #3
 8019afa:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8019afe:	9201      	str	r2, [sp, #4]
 8019b00:	2c00      	cmp	r4, #0
 8019b02:	b2f2      	uxtb	r2, r6
 8019b04:	fb04 5603 	mla	r6, r4, r3, r5
 8019b08:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019b0c:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8019b10:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019b14:	9202      	str	r2, [sp, #8]
 8019b16:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 8019b1a:	db37      	blt.n	8019b8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019b1c:	45a4      	cmp	ip, r4
 8019b1e:	dd35      	ble.n	8019b8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019b20:	2d00      	cmp	r5, #0
 8019b22:	db31      	blt.n	8019b88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8019b24:	42ab      	cmp	r3, r5
 8019b26:	dd2f      	ble.n	8019b88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8019b28:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8019b2c:	1c6e      	adds	r6, r5, #1
 8019b2e:	d430      	bmi.n	8019b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8019b30:	42b3      	cmp	r3, r6
 8019b32:	dd2e      	ble.n	8019b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8019b34:	b378      	cbz	r0, 8019b96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 8019b36:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019b3a:	3401      	adds	r4, #1
 8019b3c:	d42f      	bmi.n	8019b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019b3e:	45a4      	cmp	ip, r4
 8019b40:	dd2d      	ble.n	8019b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019b42:	b37f      	cbz	r7, 8019ba4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019b44:	2d00      	cmp	r5, #0
 8019b46:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 8019b4a:	db26      	blt.n	8019b9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019b4c:	42ab      	cmp	r3, r5
 8019b4e:	dd24      	ble.n	8019b9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019b50:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019b54:	3501      	adds	r5, #1
 8019b56:	d428      	bmi.n	8019baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8019b58:	42ab      	cmp	r3, r5
 8019b5a:	dd26      	ble.n	8019baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8019b5c:	b338      	cbz	r0, 8019bae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 8019b5e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019b62:	280f      	cmp	r0, #15
 8019b64:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019b68:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019b6c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019b70:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019b74:	d801      	bhi.n	8019b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019b76:	2f0f      	cmp	r7, #15
 8019b78:	d91b      	bls.n	8019bb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 8019b7a:	4b7d      	ldr	r3, [pc, #500]	; (8019d70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 8019b7c:	4a7d      	ldr	r2, [pc, #500]	; (8019d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 8019b7e:	487e      	ldr	r0, [pc, #504]	; (8019d78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8019b80:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019b84:	f001 fcf8 	bl	801b578 <__assert_func>
 8019b88:	2200      	movs	r2, #0
 8019b8a:	e7cf      	b.n	8019b2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 8019b8c:	2600      	movs	r6, #0
 8019b8e:	4632      	mov	r2, r6
 8019b90:	e7d3      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019b92:	2600      	movs	r6, #0
 8019b94:	e7d1      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019b96:	4606      	mov	r6, r0
 8019b98:	e7cf      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019b9a:	2400      	movs	r4, #0
 8019b9c:	e7da      	b.n	8019b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8019b9e:	2300      	movs	r3, #0
 8019ba0:	461c      	mov	r4, r3
 8019ba2:	e7de      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019ba4:	463b      	mov	r3, r7
 8019ba6:	463c      	mov	r4, r7
 8019ba8:	e7db      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019baa:	2300      	movs	r3, #0
 8019bac:	e7d9      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019bae:	4603      	mov	r3, r0
 8019bb0:	e7d7      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019bb2:	b280      	uxth	r0, r0
 8019bb4:	b2bf      	uxth	r7, r7
 8019bb6:	fb00 fe07 	mul.w	lr, r0, r7
 8019bba:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019bbe:	0100      	lsls	r0, r0, #4
 8019bc0:	eba0 0c0e 	sub.w	ip, r0, lr
 8019bc4:	b2bf      	uxth	r7, r7
 8019bc6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019bca:	fa1f fc8c 	uxth.w	ip, ip
 8019bce:	1bed      	subs	r5, r5, r7
 8019bd0:	b2ad      	uxth	r5, r5
 8019bd2:	fb0c f00a 	mul.w	r0, ip, sl
 8019bd6:	fb05 000b 	mla	r0, r5, fp, r0
 8019bda:	fb07 0009 	mla	r0, r7, r9, r0
 8019bde:	fb0e 0008 	mla	r0, lr, r8, r0
 8019be2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019be6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019bea:	9003      	str	r0, [sp, #12]
 8019bec:	d018      	beq.n	8019c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 8019bee:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019bf2:	fb0b f000 	mul.w	r0, fp, r0
 8019bf6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019bfa:	fb0b fb02 	mul.w	fp, fp, r2
 8019bfe:	0a02      	lsrs	r2, r0, #8
 8019c00:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019c04:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019c08:	4402      	add	r2, r0
 8019c0a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019c0e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019c12:	0a12      	lsrs	r2, r2, #8
 8019c14:	0a00      	lsrs	r0, r0, #8
 8019c16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019c1a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c1e:	4302      	orrs	r2, r0
 8019c20:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019c24:	d019      	beq.n	8019c5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 8019c26:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019c2a:	fb0a fb0b 	mul.w	fp, sl, fp
 8019c2e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019c32:	fb0a fa06 	mul.w	sl, sl, r6
 8019c36:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019c3a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c3e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c42:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019c46:	445e      	add	r6, fp
 8019c48:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019c4c:	0a36      	lsrs	r6, r6, #8
 8019c4e:	0a00      	lsrs	r0, r0, #8
 8019c50:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019c54:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c58:	4306      	orrs	r6, r0
 8019c5a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019c5e:	d019      	beq.n	8019c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 8019c60:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019c64:	fb09 fa0a 	mul.w	sl, r9, sl
 8019c68:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019c6c:	fb09 f904 	mul.w	r9, r9, r4
 8019c70:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019c74:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019c78:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019c7c:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019c80:	4454      	add	r4, sl
 8019c82:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019c86:	0a24      	lsrs	r4, r4, #8
 8019c88:	0a00      	lsrs	r0, r0, #8
 8019c8a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019c8e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019c92:	4304      	orrs	r4, r0
 8019c94:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019c98:	d019      	beq.n	8019cce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 8019c9a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019c9e:	fb08 f909 	mul.w	r9, r8, r9
 8019ca2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ca6:	fb08 f803 	mul.w	r8, r8, r3
 8019caa:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019cae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019cb2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019cb6:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019cba:	444b      	add	r3, r9
 8019cbc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019cc0:	0a1b      	lsrs	r3, r3, #8
 8019cc2:	0a00      	lsrs	r0, r0, #8
 8019cc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019cc8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019ccc:	4303      	orrs	r3, r0
 8019cce:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019cd2:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019cd6:	fb0c f808 	mul.w	r8, ip, r8
 8019cda:	fb05 8800 	mla	r8, r5, r0, r8
 8019cde:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019ce2:	fb07 8800 	mla	r8, r7, r0, r8
 8019ce6:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019cea:	fb0e 8000 	mla	r0, lr, r0, r8
 8019cee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019cf2:	fb0c f606 	mul.w	r6, ip, r6
 8019cf6:	0a00      	lsrs	r0, r0, #8
 8019cf8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019cfc:	fb05 6202 	mla	r2, r5, r2, r6
 8019d00:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019d04:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019d08:	fb07 2700 	mla	r7, r7, r0, r2
 8019d0c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019d10:	9b03      	ldr	r3, [sp, #12]
 8019d12:	9d00      	ldr	r5, [sp, #0]
 8019d14:	9a02      	ldr	r2, [sp, #8]
 8019d16:	fb0e 7000 	mla	r0, lr, r0, r7
 8019d1a:	43dc      	mvns	r4, r3
 8019d1c:	9b01      	ldr	r3, [sp, #4]
 8019d1e:	b2e4      	uxtb	r4, r4
 8019d20:	0a00      	lsrs	r0, r0, #8
 8019d22:	4363      	muls	r3, r4
 8019d24:	4365      	muls	r5, r4
 8019d26:	4362      	muls	r2, r4
 8019d28:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019d2c:	ea48 0000 	orr.w	r0, r8, r0
 8019d30:	4614      	mov	r4, r2
 8019d32:	1c5e      	adds	r6, r3, #1
 8019d34:	1c6a      	adds	r2, r5, #1
 8019d36:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8019d3a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019d3e:	0a03      	lsrs	r3, r0, #8
 8019d40:	0c02      	lsrs	r2, r0, #16
 8019d42:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8019d46:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8019d4a:	00db      	lsls	r3, r3, #3
 8019d4c:	0212      	lsls	r2, r2, #8
 8019d4e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019d52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019d56:	4313      	orrs	r3, r2
 8019d58:	1c62      	adds	r2, r4, #1
 8019d5a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019d5e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8019d62:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019d66:	4318      	orrs	r0, r3
 8019d68:	8008      	strh	r0, [r1, #0]
 8019d6a:	b005      	add	sp, #20
 8019d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d70:	0801f4be 	.word	0x0801f4be
 8019d74:	0801fa8a 	.word	0x0801fa8a
 8019d78:	0801f542 	.word	0x0801f542

08019d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d80:	ed2d 8b08 	vpush	{d8-d11}
 8019d84:	b09b      	sub	sp, #108	; 0x6c
 8019d86:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8019d8a:	9218      	str	r2, [sp, #96]	; 0x60
 8019d8c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019d8e:	9116      	str	r1, [sp, #88]	; 0x58
 8019d90:	9307      	str	r3, [sp, #28]
 8019d92:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8019d96:	9019      	str	r0, [sp, #100]	; 0x64
 8019d98:	6850      	ldr	r0, [r2, #4]
 8019d9a:	6812      	ldr	r2, [r2, #0]
 8019d9c:	fb00 1303 	mla	r3, r0, r3, r1
 8019da0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019da4:	930a      	str	r3, [sp, #40]	; 0x28
 8019da6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019da8:	681b      	ldr	r3, [r3, #0]
 8019daa:	930f      	str	r3, [sp, #60]	; 0x3c
 8019dac:	eeb0 aa40 	vmov.f32	s20, s0
 8019db0:	eef0 9a60 	vmov.f32	s19, s1
 8019db4:	eeb0 9a41 	vmov.f32	s18, s2
 8019db8:	eeb0 8a62 	vmov.f32	s16, s5
 8019dbc:	eef0 8a43 	vmov.f32	s17, s6
 8019dc0:	eef0 ba44 	vmov.f32	s23, s8
 8019dc4:	eeb0 ba64 	vmov.f32	s22, s9
 8019dc8:	eef0 aa45 	vmov.f32	s21, s10
 8019dcc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019dce:	2b00      	cmp	r3, #0
 8019dd0:	dc03      	bgt.n	8019dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019dd2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019dd4:	2b00      	cmp	r3, #0
 8019dd6:	f340 8389 	ble.w	801a4ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8019dda:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019ddc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019de0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019de4:	1e48      	subs	r0, r1, #1
 8019de6:	1e57      	subs	r7, r2, #1
 8019de8:	9b07      	ldr	r3, [sp, #28]
 8019dea:	2b00      	cmp	r3, #0
 8019dec:	f340 818b 	ble.w	801a106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019df0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019df4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019df8:	d406      	bmi.n	8019e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019dfa:	4584      	cmp	ip, r0
 8019dfc:	da04      	bge.n	8019e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019dfe:	2b00      	cmp	r3, #0
 8019e00:	db02      	blt.n	8019e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e02:	42bb      	cmp	r3, r7
 8019e04:	f2c0 8180 	blt.w	801a108 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019e08:	f11c 0c01 	adds.w	ip, ip, #1
 8019e0c:	f100 8170 	bmi.w	801a0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e10:	4561      	cmp	r1, ip
 8019e12:	f2c0 816d 	blt.w	801a0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e16:	3301      	adds	r3, #1
 8019e18:	f100 816a 	bmi.w	801a0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e1c:	429a      	cmp	r2, r3
 8019e1e:	f2c0 8167 	blt.w	801a0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019e22:	9b07      	ldr	r3, [sp, #28]
 8019e24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019e26:	9317      	str	r3, [sp, #92]	; 0x5c
 8019e28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e2a:	2b00      	cmp	r3, #0
 8019e2c:	f340 8189 	ble.w	801a142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8019e30:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8019e32:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019e34:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019e38:	689b      	ldr	r3, [r3, #8]
 8019e3a:	1422      	asrs	r2, r4, #16
 8019e3c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019e40:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019e44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019e48:	f100 81d4 	bmi.w	801a1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019e4c:	f103 38ff 	add.w	r8, r3, #4294967295
 8019e50:	4542      	cmp	r2, r8
 8019e52:	f280 81cf 	bge.w	801a1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019e56:	f1bc 0f00 	cmp.w	ip, #0
 8019e5a:	f2c0 81cb 	blt.w	801a1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019e5e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019e62:	45c4      	cmp	ip, r8
 8019e64:	f280 81c6 	bge.w	801a1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019e68:	b21b      	sxth	r3, r3
 8019e6a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019e6e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019e70:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019e74:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019e78:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019e7c:	2900      	cmp	r1, #0
 8019e7e:	f000 81a6 	beq.w	801a1ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019e82:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019e86:	950b      	str	r5, [sp, #44]	; 0x2c
 8019e88:	0e2d      	lsrs	r5, r5, #24
 8019e8a:	9512      	str	r5, [sp, #72]	; 0x48
 8019e8c:	b180      	cbz	r0, 8019eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019e8e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019e92:	3b01      	subs	r3, #1
 8019e94:	009b      	lsls	r3, r3, #2
 8019e96:	3304      	adds	r3, #4
 8019e98:	eb08 0c03 	add.w	ip, r8, r3
 8019e9c:	f858 3003 	ldr.w	r3, [r8, r3]
 8019ea0:	9308      	str	r3, [sp, #32]
 8019ea2:	0e1b      	lsrs	r3, r3, #24
 8019ea4:	9310      	str	r3, [sp, #64]	; 0x40
 8019ea6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019eaa:	930c      	str	r3, [sp, #48]	; 0x30
 8019eac:	0e1b      	lsrs	r3, r3, #24
 8019eae:	9313      	str	r3, [sp, #76]	; 0x4c
 8019eb0:	b289      	uxth	r1, r1
 8019eb2:	b280      	uxth	r0, r0
 8019eb4:	fb01 f900 	mul.w	r9, r1, r0
 8019eb8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019ebc:	0109      	lsls	r1, r1, #4
 8019ebe:	eba1 0809 	sub.w	r8, r1, r9
 8019ec2:	b280      	uxth	r0, r0
 8019ec4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019ec8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019eca:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ecc:	fa1f f888 	uxth.w	r8, r8
 8019ed0:	1a09      	subs	r1, r1, r0
 8019ed2:	b289      	uxth	r1, r1
 8019ed4:	fb08 f303 	mul.w	r3, r8, r3
 8019ed8:	fb01 330e 	mla	r3, r1, lr, r3
 8019edc:	fb00 3305 	mla	r3, r0, r5, r3
 8019ee0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019ee2:	fb09 3305 	mla	r3, r9, r5, r3
 8019ee6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019eea:	2b00      	cmp	r3, #0
 8019eec:	f000 80f7 	beq.w	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019ef0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019ef4:	d01b      	beq.n	8019f2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8019ef6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019efa:	fb0e fa0a 	mul.w	sl, lr, sl
 8019efe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019f02:	fb0e fe02 	mul.w	lr, lr, r2
 8019f06:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019f0a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019f0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019f12:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019f16:	4452      	add	r2, sl
 8019f18:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f1c:	0a12      	lsrs	r2, r2, #8
 8019f1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019f26:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f2a:	ea42 020c 	orr.w	r2, r2, ip
 8019f2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f30:	2dff      	cmp	r5, #255	; 0xff
 8019f32:	d021      	beq.n	8019f78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019f34:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f36:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019f3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f3c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019f40:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f42:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019f46:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f4c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019f50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019f58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019f5c:	44de      	add	lr, fp
 8019f5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019f62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019f6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019f72:	ea4e 050a 	orr.w	r5, lr, sl
 8019f76:	950b      	str	r5, [sp, #44]	; 0x2c
 8019f78:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019f7a:	2dff      	cmp	r5, #255	; 0xff
 8019f7c:	d021      	beq.n	8019fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8019f7e:	9d08      	ldr	r5, [sp, #32]
 8019f80:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019f84:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019f86:	fb05 fb0b 	mul.w	fp, r5, fp
 8019f8a:	9d08      	ldr	r5, [sp, #32]
 8019f8c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019f90:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019f92:	fb05 fa0e 	mul.w	sl, r5, lr
 8019f96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019f9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019f9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019fa2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019fa6:	44de      	add	lr, fp
 8019fa8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019fac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019fb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fbc:	ea4e 050a 	orr.w	r5, lr, sl
 8019fc0:	9508      	str	r5, [sp, #32]
 8019fc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fc4:	2dff      	cmp	r5, #255	; 0xff
 8019fc6:	d021      	beq.n	801a00c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019fc8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019fca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019fce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fd0:	fb05 fb0b 	mul.w	fp, r5, fp
 8019fd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019fd6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019fda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019fdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019fe0:	fb05 fa0a 	mul.w	sl, r5, sl
 8019fe4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019fe8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019fec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019ff0:	44de      	add	lr, fp
 8019ff2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019ff6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ffa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ffe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a002:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a006:	ea4e 050a 	orr.w	r5, lr, sl
 801a00a:	950c      	str	r5, [sp, #48]	; 0x30
 801a00c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a00e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a012:	9d08      	ldr	r5, [sp, #32]
 801a014:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a018:	fb08 fc0c 	mul.w	ip, r8, ip
 801a01c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a020:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a024:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a026:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a02a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a02e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a030:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a034:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a038:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a03c:	fb08 f80e 	mul.w	r8, r8, lr
 801a040:	fb01 8202 	mla	r2, r1, r2, r8
 801a044:	9908      	ldr	r1, [sp, #32]
 801a046:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a04a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a04c:	fb00 220a 	mla	r2, r0, sl, r2
 801a050:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a054:	fb09 2900 	mla	r9, r9, r0, r2
 801a058:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a05c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a060:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a064:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a068:	ea4c 0c09 	orr.w	ip, ip, r9
 801a06c:	2bff      	cmp	r3, #255	; 0xff
 801a06e:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801a072:	f000 80b5 	beq.w	801a1e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801a076:	8839      	ldrh	r1, [r7, #0]
 801a078:	43db      	mvns	r3, r3
 801a07a:	ea4f 2821 	mov.w	r8, r1, asr #8
 801a07e:	fa5f f983 	uxtb.w	r9, r3
 801a082:	10ca      	asrs	r2, r1, #3
 801a084:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a088:	fb08 f809 	mul.w	r8, r8, r9
 801a08c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a090:	fb02 fe09 	mul.w	lr, r2, r9
 801a094:	f108 0201 	add.w	r2, r8, #1
 801a098:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a09c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a0a0:	00cb      	lsls	r3, r1, #3
 801a0a2:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 801a0a6:	4961      	ldr	r1, [pc, #388]	; (801a22c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801a0a8:	b2d2      	uxtb	r2, r2
 801a0aa:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 801a0ae:	f10e 0201 	add.w	r2, lr, #1
 801a0b2:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 801a0b6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a0ba:	b2db      	uxtb	r3, r3
 801a0bc:	00d2      	lsls	r2, r2, #3
 801a0be:	fb03 f309 	mul.w	r3, r3, r9
 801a0c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0c6:	430a      	orrs	r2, r1
 801a0c8:	1c59      	adds	r1, r3, #1
 801a0ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a0ce:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a0d2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a0d6:	ea42 0c0c 	orr.w	ip, r2, ip
 801a0da:	f8a7 c000 	strh.w	ip, [r7]
 801a0de:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a0e0:	441c      	add	r4, r3
 801a0e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a0e4:	441e      	add	r6, r3
 801a0e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a0e8:	3b01      	subs	r3, #1
 801a0ea:	3702      	adds	r7, #2
 801a0ec:	9317      	str	r3, [sp, #92]	; 0x5c
 801a0ee:	e69b      	b.n	8019e28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a0f0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a0f2:	441c      	add	r4, r3
 801a0f4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a0f6:	441e      	add	r6, r3
 801a0f8:	9b07      	ldr	r3, [sp, #28]
 801a0fa:	3b01      	subs	r3, #1
 801a0fc:	9307      	str	r3, [sp, #28]
 801a0fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a100:	3302      	adds	r3, #2
 801a102:	930a      	str	r3, [sp, #40]	; 0x28
 801a104:	e670      	b.n	8019de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a106:	d023      	beq.n	801a150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801a108:	9b07      	ldr	r3, [sp, #28]
 801a10a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a10c:	3b01      	subs	r3, #1
 801a10e:	fb00 4003 	mla	r0, r0, r3, r4
 801a112:	1400      	asrs	r0, r0, #16
 801a114:	f53f ae85 	bmi.w	8019e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a118:	3901      	subs	r1, #1
 801a11a:	4288      	cmp	r0, r1
 801a11c:	f6bf ae81 	bge.w	8019e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a120:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a122:	fb01 6303 	mla	r3, r1, r3, r6
 801a126:	141b      	asrs	r3, r3, #16
 801a128:	f53f ae7b 	bmi.w	8019e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a12c:	3a01      	subs	r2, #1
 801a12e:	4293      	cmp	r3, r2
 801a130:	f6bf ae77 	bge.w	8019e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a134:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a138:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a13c:	f1bb 0f00 	cmp.w	fp, #0
 801a140:	dc76      	bgt.n	801a230 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a142:	9b07      	ldr	r3, [sp, #28]
 801a144:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a148:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a14a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a14e:	930a      	str	r3, [sp, #40]	; 0x28
 801a150:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a152:	2b00      	cmp	r3, #0
 801a154:	f340 81ca 	ble.w	801a4ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801a158:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a15c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a160:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a164:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a166:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a16a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a16e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a172:	eef0 6a48 	vmov.f32	s13, s16
 801a176:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a17a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a17e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a182:	ee16 4a90 	vmov	r4, s13
 801a186:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a18a:	eef0 6a68 	vmov.f32	s13, s17
 801a18e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a192:	ee18 2a10 	vmov	r2, s16
 801a196:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a19a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a19e:	ee18 2a90 	vmov	r2, s17
 801a1a2:	932f      	str	r3, [sp, #188]	; 0xbc
 801a1a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a1a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1aa:	9330      	str	r3, [sp, #192]	; 0xc0
 801a1ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a1ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a1b0:	3b01      	subs	r3, #1
 801a1b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1b6:	9316      	str	r3, [sp, #88]	; 0x58
 801a1b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a1ba:	bf08      	it	eq
 801a1bc:	4613      	moveq	r3, r2
 801a1be:	ee16 6a90 	vmov	r6, s13
 801a1c2:	9307      	str	r3, [sp, #28]
 801a1c4:	eef0 8a67 	vmov.f32	s17, s15
 801a1c8:	eeb0 8a47 	vmov.f32	s16, s14
 801a1cc:	e5fe      	b.n	8019dcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a1ce:	2800      	cmp	r0, #0
 801a1d0:	f43f ae6e 	beq.w	8019eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a1d4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a1d8:	9308      	str	r3, [sp, #32]
 801a1da:	0e1b      	lsrs	r3, r3, #24
 801a1dc:	9310      	str	r3, [sp, #64]	; 0x40
 801a1de:	e667      	b.n	8019eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a1e0:	ea4f 125c 	mov.w	r2, ip, lsr #5
 801a1e4:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 801a1e8:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 801a1ec:	f022 0207 	bic.w	r2, r2, #7
 801a1f0:	431a      	orrs	r2, r3
 801a1f2:	e76e      	b.n	801a0d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a1f4:	f112 0801 	adds.w	r8, r2, #1
 801a1f8:	f53f af71 	bmi.w	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a1fc:	4543      	cmp	r3, r8
 801a1fe:	f6ff af6e 	blt.w	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a202:	f11c 0801 	adds.w	r8, ip, #1
 801a206:	f53f af6a 	bmi.w	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a20a:	45c6      	cmp	lr, r8
 801a20c:	f6ff af67 	blt.w	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a210:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a214:	fa0f f28e 	sxth.w	r2, lr
 801a218:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a21c:	9200      	str	r2, [sp, #0]
 801a21e:	b21b      	sxth	r3, r3
 801a220:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a222:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a224:	4639      	mov	r1, r7
 801a226:	f7ff fc59 	bl	8019adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a22a:	e758      	b.n	801a0de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801a22c:	fffff800 	.word	0xfffff800
 801a230:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a232:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a234:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a238:	1421      	asrs	r1, r4, #16
 801a23a:	1433      	asrs	r3, r6, #16
 801a23c:	fb07 1303 	mla	r3, r7, r3, r1
 801a240:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a242:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a246:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a24a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a24e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a252:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a256:	2a00      	cmp	r2, #0
 801a258:	f000 8131 	beq.w	801a4be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801a25c:	684d      	ldr	r5, [r1, #4]
 801a25e:	950d      	str	r5, [sp, #52]	; 0x34
 801a260:	0e2d      	lsrs	r5, r5, #24
 801a262:	9514      	str	r5, [sp, #80]	; 0x50
 801a264:	b178      	cbz	r0, 801a286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a266:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a26a:	3f01      	subs	r7, #1
 801a26c:	00bf      	lsls	r7, r7, #2
 801a26e:	3704      	adds	r7, #4
 801a270:	eb01 0e07 	add.w	lr, r1, r7
 801a274:	59c9      	ldr	r1, [r1, r7]
 801a276:	9109      	str	r1, [sp, #36]	; 0x24
 801a278:	0e09      	lsrs	r1, r1, #24
 801a27a:	9111      	str	r1, [sp, #68]	; 0x44
 801a27c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a280:	910e      	str	r1, [sp, #56]	; 0x38
 801a282:	0e09      	lsrs	r1, r1, #24
 801a284:	9115      	str	r1, [sp, #84]	; 0x54
 801a286:	b292      	uxth	r2, r2
 801a288:	b280      	uxth	r0, r0
 801a28a:	fb02 f900 	mul.w	r9, r2, r0
 801a28e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a292:	0112      	lsls	r2, r2, #4
 801a294:	eba2 0e09 	sub.w	lr, r2, r9
 801a298:	b280      	uxth	r0, r0
 801a29a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a29e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a2a2:	fa1f fe8e 	uxth.w	lr, lr
 801a2a6:	1a09      	subs	r1, r1, r0
 801a2a8:	b289      	uxth	r1, r1
 801a2aa:	fb0e f202 	mul.w	r2, lr, r2
 801a2ae:	fb01 220c 	mla	r2, r1, ip, r2
 801a2b2:	fb00 2205 	mla	r2, r0, r5, r2
 801a2b6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a2b8:	fb09 2205 	mla	r2, r9, r5, r2
 801a2bc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a2c0:	2a00      	cmp	r2, #0
 801a2c2:	f000 80f3 	beq.w	801a4ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a2c6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a2ca:	d019      	beq.n	801a300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 801a2cc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a2d0:	fb0c fa0a 	mul.w	sl, ip, sl
 801a2d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a2d8:	fb0c fc03 	mul.w	ip, ip, r3
 801a2dc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a2e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a2e4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a2e8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a2ec:	4453      	add	r3, sl
 801a2ee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a2f2:	0a1b      	lsrs	r3, r3, #8
 801a2f4:	0a3f      	lsrs	r7, r7, #8
 801a2f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a2fa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a2fe:	433b      	orrs	r3, r7
 801a300:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a302:	2dff      	cmp	r5, #255	; 0xff
 801a304:	d020      	beq.n	801a348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 801a306:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a308:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a30c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a30e:	436f      	muls	r7, r5
 801a310:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a312:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a316:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a318:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a31c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a320:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a324:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a328:	44bc      	add	ip, r7
 801a32a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a32e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a332:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a336:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a33a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a33e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a342:	ea4c 050a 	orr.w	r5, ip, sl
 801a346:	950d      	str	r5, [sp, #52]	; 0x34
 801a348:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a34a:	2dff      	cmp	r5, #255	; 0xff
 801a34c:	d020      	beq.n	801a390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 801a34e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a350:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a354:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a356:	436f      	muls	r7, r5
 801a358:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a35a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a35e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a360:	fb05 fa0c 	mul.w	sl, r5, ip
 801a364:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a368:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a36c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a370:	44bc      	add	ip, r7
 801a372:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a376:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a37a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a37e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a386:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a38a:	ea4c 050a 	orr.w	r5, ip, sl
 801a38e:	9509      	str	r5, [sp, #36]	; 0x24
 801a390:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a392:	2dff      	cmp	r5, #255	; 0xff
 801a394:	d020      	beq.n	801a3d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 801a396:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a398:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a39c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a39e:	436f      	muls	r7, r5
 801a3a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a3a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a3a6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a3a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a3ac:	fb05 fa0a 	mul.w	sl, r5, sl
 801a3b0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a3b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3b8:	44bc      	add	ip, r7
 801a3ba:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a3be:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a3c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3d2:	ea4c 050a 	orr.w	r5, ip, sl
 801a3d6:	950e      	str	r5, [sp, #56]	; 0x38
 801a3d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a3da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a3de:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a3e0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a3e4:	fb0e f707 	mul.w	r7, lr, r7
 801a3e8:	fb01 770c 	mla	r7, r1, ip, r7
 801a3ec:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a3f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a3f2:	fb00 770c 	mla	r7, r0, ip, r7
 801a3f6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a3fa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a3fc:	fb09 770c 	mla	r7, r9, ip, r7
 801a400:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a404:	fb0e fe0c 	mul.w	lr, lr, ip
 801a408:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a40c:	fb01 e303 	mla	r3, r1, r3, lr
 801a410:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a412:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a416:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a418:	fb00 330a 	mla	r3, r0, sl, r3
 801a41c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a420:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a424:	0a3f      	lsrs	r7, r7, #8
 801a426:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a42a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a42e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a432:	ea47 070c 	orr.w	r7, r7, ip
 801a436:	2aff      	cmp	r2, #255	; 0xff
 801a438:	ea4f 2017 	mov.w	r0, r7, lsr #8
 801a43c:	d048      	beq.n	801a4d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801a43e:	f8b8 1000 	ldrh.w	r1, [r8]
 801a442:	43d2      	mvns	r2, r2
 801a444:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a448:	fa5f f982 	uxtb.w	r9, r2
 801a44c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a450:	fb0e fe09 	mul.w	lr, lr, r9
 801a454:	f10e 0301 	add.w	r3, lr, #1
 801a458:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 801a45c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801a460:	0c3b      	lsrs	r3, r7, #16
 801a462:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801a466:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a46a:	4b23      	ldr	r3, [pc, #140]	; (801a4f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801a46c:	fb0c fc09 	mul.w	ip, ip, r9
 801a470:	00ca      	lsls	r2, r1, #3
 801a472:	fa5f fe8e 	uxtb.w	lr, lr
 801a476:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 801a47a:	b2d2      	uxtb	r2, r2
 801a47c:	f10c 0301 	add.w	r3, ip, #1
 801a480:	fb02 f209 	mul.w	r2, r2, r9
 801a484:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a488:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a48c:	1c51      	adds	r1, r2, #1
 801a48e:	00db      	lsls	r3, r3, #3
 801a490:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a494:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a498:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a49c:	ea4e 0e03 	orr.w	lr, lr, r3
 801a4a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a4a4:	ea47 0e0e 	orr.w	lr, r7, lr
 801a4a8:	f8a8 e000 	strh.w	lr, [r8]
 801a4ac:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a4ae:	441c      	add	r4, r3
 801a4b0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a4b2:	f108 0802 	add.w	r8, r8, #2
 801a4b6:	441e      	add	r6, r3
 801a4b8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a4bc:	e63e      	b.n	801a13c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a4be:	2800      	cmp	r0, #0
 801a4c0:	f43f aee1 	beq.w	801a286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a4c4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a4c8:	9109      	str	r1, [sp, #36]	; 0x24
 801a4ca:	0e09      	lsrs	r1, r1, #24
 801a4cc:	9111      	str	r1, [sp, #68]	; 0x44
 801a4ce:	e6da      	b.n	801a286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801a4d0:	097a      	lsrs	r2, r7, #5
 801a4d2:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 801a4d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4da:	f020 0007 	bic.w	r0, r0, #7
 801a4de:	4310      	orrs	r0, r2
 801a4e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a4e4:	4307      	orrs	r7, r0
 801a4e6:	f8a8 7000 	strh.w	r7, [r8]
 801a4ea:	e7df      	b.n	801a4ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a4ec:	b01b      	add	sp, #108	; 0x6c
 801a4ee:	ecbd 8b08 	vpop	{d8-d11}
 801a4f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4f6:	bf00      	nop
 801a4f8:	fffff800 	.word	0xfffff800

0801a4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a4fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a500:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a504:	2c00      	cmp	r4, #0
 801a506:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a50a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a50e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a512:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a516:	fb04 ce03 	mla	lr, r4, r3, ip
 801a51a:	db60      	blt.n	801a5de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a51c:	45a1      	cmp	r9, r4
 801a51e:	dd5e      	ble.n	801a5de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a520:	f1bc 0f00 	cmp.w	ip, #0
 801a524:	db59      	blt.n	801a5da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a526:	45e0      	cmp	r8, ip
 801a528:	dd57      	ble.n	801a5da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a52a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a52e:	f01e 0f01 	tst.w	lr, #1
 801a532:	5c16      	ldrb	r6, [r2, r0]
 801a534:	bf0c      	ite	eq
 801a536:	f006 060f 	andeq.w	r6, r6, #15
 801a53a:	1136      	asrne	r6, r6, #4
 801a53c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a540:	b2f6      	uxtb	r6, r6
 801a542:	f11c 0001 	adds.w	r0, ip, #1
 801a546:	d44d      	bmi.n	801a5e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a548:	4580      	cmp	r8, r0
 801a54a:	dd4b      	ble.n	801a5e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a54c:	2d00      	cmp	r5, #0
 801a54e:	d04b      	beq.n	801a5e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a550:	f10e 0a01 	add.w	sl, lr, #1
 801a554:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a558:	f01a 0f01 	tst.w	sl, #1
 801a55c:	5c10      	ldrb	r0, [r2, r0]
 801a55e:	bf0c      	ite	eq
 801a560:	f000 000f 	andeq.w	r0, r0, #15
 801a564:	1100      	asrne	r0, r0, #4
 801a566:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a56a:	b2c0      	uxtb	r0, r0
 801a56c:	3401      	adds	r4, #1
 801a56e:	d43f      	bmi.n	801a5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a570:	45a1      	cmp	r9, r4
 801a572:	dd3d      	ble.n	801a5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a574:	2f00      	cmp	r7, #0
 801a576:	f000 809b 	beq.w	801a6b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 801a57a:	f1bc 0f00 	cmp.w	ip, #0
 801a57e:	db35      	blt.n	801a5ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a580:	45e0      	cmp	r8, ip
 801a582:	dd33      	ble.n	801a5ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a584:	eb03 090e 	add.w	r9, r3, lr
 801a588:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a58c:	f019 0f01 	tst.w	r9, #1
 801a590:	5d14      	ldrb	r4, [r2, r4]
 801a592:	bf0c      	ite	eq
 801a594:	f004 040f 	andeq.w	r4, r4, #15
 801a598:	1124      	asrne	r4, r4, #4
 801a59a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a59e:	b2e4      	uxtb	r4, r4
 801a5a0:	f11c 0c01 	adds.w	ip, ip, #1
 801a5a4:	d427      	bmi.n	801a5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a5a6:	45e0      	cmp	r8, ip
 801a5a8:	dd25      	ble.n	801a5f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a5aa:	b335      	cbz	r5, 801a5fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a5ac:	3301      	adds	r3, #1
 801a5ae:	449e      	add	lr, r3
 801a5b0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a5b4:	f01e 0f01 	tst.w	lr, #1
 801a5b8:	5cd2      	ldrb	r2, [r2, r3]
 801a5ba:	bf0c      	ite	eq
 801a5bc:	f002 020f 	andeq.w	r2, r2, #15
 801a5c0:	1112      	asrne	r2, r2, #4
 801a5c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5c6:	b2d3      	uxtb	r3, r2
 801a5c8:	2d0f      	cmp	r5, #15
 801a5ca:	d917      	bls.n	801a5fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a5cc:	4b3b      	ldr	r3, [pc, #236]	; (801a6bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 801a5ce:	4a3c      	ldr	r2, [pc, #240]	; (801a6c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801a5d0:	483c      	ldr	r0, [pc, #240]	; (801a6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a5d2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801a5d6:	f000 ffcf 	bl	801b578 <__assert_func>
 801a5da:	2600      	movs	r6, #0
 801a5dc:	e7b1      	b.n	801a542 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a5de:	2000      	movs	r0, #0
 801a5e0:	4606      	mov	r6, r0
 801a5e2:	e7c3      	b.n	801a56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a5e4:	2000      	movs	r0, #0
 801a5e6:	e7c1      	b.n	801a56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a5e8:	4628      	mov	r0, r5
 801a5ea:	e7bf      	b.n	801a56c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a5ec:	2400      	movs	r4, #0
 801a5ee:	e7d7      	b.n	801a5a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a5f0:	2300      	movs	r3, #0
 801a5f2:	461c      	mov	r4, r3
 801a5f4:	e7e8      	b.n	801a5c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a5f6:	2300      	movs	r3, #0
 801a5f8:	e7e6      	b.n	801a5c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a5fa:	462b      	mov	r3, r5
 801a5fc:	2f0f      	cmp	r7, #15
 801a5fe:	d8e5      	bhi.n	801a5cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a600:	b2ad      	uxth	r5, r5
 801a602:	b2bf      	uxth	r7, r7
 801a604:	fb05 fc07 	mul.w	ip, r5, r7
 801a608:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a60c:	012d      	lsls	r5, r5, #4
 801a60e:	b2bf      	uxth	r7, r7
 801a610:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a614:	eba5 050c 	sub.w	r5, r5, ip
 801a618:	1bd2      	subs	r2, r2, r7
 801a61a:	b2ad      	uxth	r5, r5
 801a61c:	b292      	uxth	r2, r2
 801a61e:	4368      	muls	r0, r5
 801a620:	fb06 0002 	mla	r0, r6, r2, r0
 801a624:	fb07 0404 	mla	r4, r7, r4, r0
 801a628:	fb0c 4303 	mla	r3, ip, r3, r4
 801a62c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a630:	2b00      	cmp	r3, #0
 801a632:	d03b      	beq.n	801a6ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 801a634:	4a24      	ldr	r2, [pc, #144]	; (801a6c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a636:	880e      	ldrh	r6, [r1, #0]
 801a638:	6815      	ldr	r5, [r2, #0]
 801a63a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801a63e:	435a      	muls	r2, r3
 801a640:	1c53      	adds	r3, r2, #1
 801a642:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a646:	121b      	asrs	r3, r3, #8
 801a648:	b29a      	uxth	r2, r3
 801a64a:	1234      	asrs	r4, r6, #8
 801a64c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a650:	43db      	mvns	r3, r3
 801a652:	b2db      	uxtb	r3, r3
 801a654:	fb10 f002 	smulbb	r0, r0, r2
 801a658:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a65c:	fb04 0403 	mla	r4, r4, r3, r0
 801a660:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801a664:	10f0      	asrs	r0, r6, #3
 801a666:	b2ed      	uxtb	r5, r5
 801a668:	00f6      	lsls	r6, r6, #3
 801a66a:	fb17 f702 	smulbb	r7, r7, r2
 801a66e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a672:	fb15 f202 	smulbb	r2, r5, r2
 801a676:	b2f6      	uxtb	r6, r6
 801a678:	b2a4      	uxth	r4, r4
 801a67a:	fb00 7003 	mla	r0, r0, r3, r7
 801a67e:	fb06 2303 	mla	r3, r6, r3, r2
 801a682:	b29a      	uxth	r2, r3
 801a684:	1c63      	adds	r3, r4, #1
 801a686:	b280      	uxth	r0, r0
 801a688:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a68c:	1c53      	adds	r3, r2, #1
 801a68e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a692:	1c42      	adds	r2, r0, #1
 801a694:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a698:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a69c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a6a0:	0940      	lsrs	r0, r0, #5
 801a6a2:	4323      	orrs	r3, r4
 801a6a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a6a8:	4303      	orrs	r3, r0
 801a6aa:	800b      	strh	r3, [r1, #0]
 801a6ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a6b0:	2d0f      	cmp	r5, #15
 801a6b2:	d88b      	bhi.n	801a5cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a6b4:	463b      	mov	r3, r7
 801a6b6:	463c      	mov	r4, r7
 801a6b8:	e7a2      	b.n	801a600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a6ba:	bf00      	nop
 801a6bc:	0801f4be 	.word	0x0801f4be
 801a6c0:	0801fa8a 	.word	0x0801fa8a
 801a6c4:	0801f542 	.word	0x0801f542
 801a6c8:	2000a1a0 	.word	0x2000a1a0

0801a6cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6d0:	ed2d 8b08 	vpush	{d8-d11}
 801a6d4:	b097      	sub	sp, #92	; 0x5c
 801a6d6:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801a6da:	9214      	str	r2, [sp, #80]	; 0x50
 801a6dc:	9309      	str	r3, [sp, #36]	; 0x24
 801a6de:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a6e0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a6e4:	910e      	str	r1, [sp, #56]	; 0x38
 801a6e6:	930f      	str	r3, [sp, #60]	; 0x3c
 801a6e8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a6ec:	9015      	str	r0, [sp, #84]	; 0x54
 801a6ee:	6850      	ldr	r0, [r2, #4]
 801a6f0:	6812      	ldr	r2, [r2, #0]
 801a6f2:	fb00 1303 	mla	r3, r0, r3, r1
 801a6f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a6fa:	930a      	str	r3, [sp, #40]	; 0x28
 801a6fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a6fe:	689b      	ldr	r3, [r3, #8]
 801a700:	3301      	adds	r3, #1
 801a702:	f023 0301 	bic.w	r3, r3, #1
 801a706:	930b      	str	r3, [sp, #44]	; 0x2c
 801a708:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a70a:	681f      	ldr	r7, [r3, #0]
 801a70c:	eeb0 aa40 	vmov.f32	s20, s0
 801a710:	eef0 9a60 	vmov.f32	s19, s1
 801a714:	eeb0 9a41 	vmov.f32	s18, s2
 801a718:	eeb0 8a62 	vmov.f32	s16, s5
 801a71c:	eef0 8a43 	vmov.f32	s17, s6
 801a720:	eef0 ba44 	vmov.f32	s23, s8
 801a724:	eeb0 ba64 	vmov.f32	s22, s9
 801a728:	eef0 aa45 	vmov.f32	s21, s10
 801a72c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a72e:	2b00      	cmp	r3, #0
 801a730:	dc03      	bgt.n	801a73a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a732:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a734:	2b00      	cmp	r3, #0
 801a736:	f340 8257 	ble.w	801abe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801a73a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a73c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a740:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a744:	1e48      	subs	r0, r1, #1
 801a746:	f102 3cff 	add.w	ip, r2, #4294967295
 801a74a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	f340 80eb 	ble.w	801a928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801a752:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a756:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a75a:	d406      	bmi.n	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a75c:	4586      	cmp	lr, r0
 801a75e:	da04      	bge.n	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a760:	2b00      	cmp	r3, #0
 801a762:	db02      	blt.n	801a76a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a764:	4563      	cmp	r3, ip
 801a766:	f2c0 80e0 	blt.w	801a92a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801a76a:	f11e 0e01 	adds.w	lr, lr, #1
 801a76e:	f100 80d0 	bmi.w	801a912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a772:	4571      	cmp	r1, lr
 801a774:	f2c0 80cd 	blt.w	801a912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a778:	3301      	adds	r3, #1
 801a77a:	f100 80ca 	bmi.w	801a912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a77e:	429a      	cmp	r2, r3
 801a780:	f2c0 80c7 	blt.w	801a912 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a784:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 801a788:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 801a78c:	f1b9 0f00 	cmp.w	r9, #0
 801a790:	f340 80e8 	ble.w	801a964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a794:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a796:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a79a:	1423      	asrs	r3, r4, #16
 801a79c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a7a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a7a4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a7a8:	f100 8133 	bmi.w	801aa12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a7ac:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a7b0:	455b      	cmp	r3, fp
 801a7b2:	f280 812e 	bge.w	801aa12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a7b6:	2800      	cmp	r0, #0
 801a7b8:	f2c0 812b 	blt.w	801aa12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a7bc:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a7c0:	4558      	cmp	r0, fp
 801a7c2:	f280 8126 	bge.w	801aa12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801a7c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a7c8:	fb00 3305 	mla	r3, r0, r5, r3
 801a7cc:	0858      	lsrs	r0, r3, #1
 801a7ce:	07dd      	lsls	r5, r3, #31
 801a7d0:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a7d4:	bf54      	ite	pl
 801a7d6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a7da:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a7de:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a7e2:	fa5f fc8c 	uxtb.w	ip, ip
 801a7e6:	2a00      	cmp	r2, #0
 801a7e8:	f000 8102 	beq.w	801a9f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801a7ec:	1c58      	adds	r0, r3, #1
 801a7ee:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a7f2:	07c0      	lsls	r0, r0, #31
 801a7f4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a7f8:	bf54      	ite	pl
 801a7fa:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a7fe:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a802:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a806:	fa5f f08e 	uxtb.w	r0, lr
 801a80a:	9010      	str	r0, [sp, #64]	; 0x40
 801a80c:	b1c9      	cbz	r1, 801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a80e:	4453      	add	r3, sl
 801a810:	0858      	lsrs	r0, r3, #1
 801a812:	07dd      	lsls	r5, r3, #31
 801a814:	5c38      	ldrb	r0, [r7, r0]
 801a816:	bf54      	ite	pl
 801a818:	f000 000f 	andpl.w	r0, r0, #15
 801a81c:	1100      	asrmi	r0, r0, #4
 801a81e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a822:	3301      	adds	r3, #1
 801a824:	b2c0      	uxtb	r0, r0
 801a826:	900c      	str	r0, [sp, #48]	; 0x30
 801a828:	0858      	lsrs	r0, r3, #1
 801a82a:	07dd      	lsls	r5, r3, #31
 801a82c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801a830:	bf54      	ite	pl
 801a832:	f00e 030f 	andpl.w	r3, lr, #15
 801a836:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801a83a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a83e:	b2db      	uxtb	r3, r3
 801a840:	9311      	str	r3, [sp, #68]	; 0x44
 801a842:	b292      	uxth	r2, r2
 801a844:	b289      	uxth	r1, r1
 801a846:	fb02 f301 	mul.w	r3, r2, r1
 801a84a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a84e:	0112      	lsls	r2, r2, #4
 801a850:	b289      	uxth	r1, r1
 801a852:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801a856:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a858:	1ad2      	subs	r2, r2, r3
 801a85a:	1a40      	subs	r0, r0, r1
 801a85c:	b292      	uxth	r2, r2
 801a85e:	436a      	muls	r2, r5
 801a860:	b280      	uxth	r0, r0
 801a862:	fb0c 2c00 	mla	ip, ip, r0, r2
 801a866:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a868:	fb01 c102 	mla	r1, r1, r2, ip
 801a86c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a86e:	fb03 1302 	mla	r3, r3, r2, r1
 801a872:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a876:	2b00      	cmp	r3, #0
 801a878:	d042      	beq.n	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a87a:	4a76      	ldr	r2, [pc, #472]	; (801aa54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 801a87c:	f8b8 c000 	ldrh.w	ip, [r8]
 801a880:	6810      	ldr	r0, [r2, #0]
 801a882:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a884:	4353      	muls	r3, r2
 801a886:	1c5a      	adds	r2, r3, #1
 801a888:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a88c:	121b      	asrs	r3, r3, #8
 801a88e:	fa1f fe83 	uxth.w	lr, r3
 801a892:	ea4f 212c 	mov.w	r1, ip, asr #8
 801a896:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801a89a:	43db      	mvns	r3, r3
 801a89c:	b2db      	uxtb	r3, r3
 801a89e:	fb12 f20e 	smulbb	r2, r2, lr
 801a8a2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a8a6:	fb01 2103 	mla	r1, r1, r3, r2
 801a8aa:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801a8ae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a8b2:	b2c0      	uxtb	r0, r0
 801a8b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8b8:	fb1b fb0e 	smulbb	fp, fp, lr
 801a8bc:	b289      	uxth	r1, r1
 801a8be:	fb10 fe0e 	smulbb	lr, r0, lr
 801a8c2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a8c6:	fa5f fc8c 	uxtb.w	ip, ip
 801a8ca:	fb02 b203 	mla	r2, r2, r3, fp
 801a8ce:	1c48      	adds	r0, r1, #1
 801a8d0:	fb0c e303 	mla	r3, ip, r3, lr
 801a8d4:	b292      	uxth	r2, r2
 801a8d6:	b29b      	uxth	r3, r3
 801a8d8:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a8dc:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801a8e0:	f102 0b01 	add.w	fp, r2, #1
 801a8e4:	1c59      	adds	r1, r3, #1
 801a8e6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a8ea:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801a8ee:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a8f2:	0952      	lsrs	r2, r2, #5
 801a8f4:	4301      	orrs	r1, r0
 801a8f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8fa:	4311      	orrs	r1, r2
 801a8fc:	f8a8 1000 	strh.w	r1, [r8]
 801a900:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a902:	441c      	add	r4, r3
 801a904:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a906:	f108 0802 	add.w	r8, r8, #2
 801a90a:	441e      	add	r6, r3
 801a90c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a910:	e73c      	b.n	801a78c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801a912:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a914:	441c      	add	r4, r3
 801a916:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a918:	441e      	add	r6, r3
 801a91a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a91c:	3b01      	subs	r3, #1
 801a91e:	9309      	str	r3, [sp, #36]	; 0x24
 801a920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a922:	3302      	adds	r3, #2
 801a924:	930a      	str	r3, [sp, #40]	; 0x28
 801a926:	e710      	b.n	801a74a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a928:	d023      	beq.n	801a972 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a92a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a92c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801a92e:	3b01      	subs	r3, #1
 801a930:	fb00 4003 	mla	r0, r0, r3, r4
 801a934:	1400      	asrs	r0, r0, #16
 801a936:	f53f af25 	bmi.w	801a784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a93a:	3901      	subs	r1, #1
 801a93c:	4288      	cmp	r0, r1
 801a93e:	f6bf af21 	bge.w	801a784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a942:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801a944:	fb01 6303 	mla	r3, r1, r3, r6
 801a948:	141b      	asrs	r3, r3, #16
 801a94a:	f53f af1b 	bmi.w	801a784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a94e:	3a01      	subs	r2, #1
 801a950:	4293      	cmp	r3, r2
 801a952:	f6bf af17 	bge.w	801a784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a956:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 801a95a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801a95e:	f1b8 0f00 	cmp.w	r8, #0
 801a962:	dc79      	bgt.n	801aa58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a964:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a966:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a96a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a96c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a970:	930a      	str	r3, [sp, #40]	; 0x28
 801a972:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a974:	2b00      	cmp	r3, #0
 801a976:	f340 8137 	ble.w	801abe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801a97a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a97e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a982:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a986:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a988:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a98c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a990:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a994:	eef0 6a48 	vmov.f32	s13, s16
 801a998:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a99c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9a0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a9a4:	ee16 4a90 	vmov	r4, s13
 801a9a8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a9ac:	eef0 6a68 	vmov.f32	s13, s17
 801a9b0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a9b4:	ee18 2a10 	vmov	r2, s16
 801a9b8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a9bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9c0:	ee18 2a90 	vmov	r2, s17
 801a9c4:	932b      	str	r3, [sp, #172]	; 0xac
 801a9c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9cc:	932c      	str	r3, [sp, #176]	; 0xb0
 801a9ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a9d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9d2:	3b01      	subs	r3, #1
 801a9d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9d8:	930e      	str	r3, [sp, #56]	; 0x38
 801a9da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9dc:	bf08      	it	eq
 801a9de:	4613      	moveq	r3, r2
 801a9e0:	ee16 6a90 	vmov	r6, s13
 801a9e4:	9309      	str	r3, [sp, #36]	; 0x24
 801a9e6:	eef0 8a67 	vmov.f32	s17, s15
 801a9ea:	eeb0 8a47 	vmov.f32	s16, s14
 801a9ee:	e69d      	b.n	801a72c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a9f0:	2900      	cmp	r1, #0
 801a9f2:	f43f af26 	beq.w	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a9f6:	eb0a 0003 	add.w	r0, sl, r3
 801a9fa:	0843      	lsrs	r3, r0, #1
 801a9fc:	07c0      	lsls	r0, r0, #31
 801a9fe:	5cfb      	ldrb	r3, [r7, r3]
 801aa00:	bf54      	ite	pl
 801aa02:	f003 030f 	andpl.w	r3, r3, #15
 801aa06:	111b      	asrmi	r3, r3, #4
 801aa08:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801aa0c:	b2db      	uxtb	r3, r3
 801aa0e:	930c      	str	r3, [sp, #48]	; 0x30
 801aa10:	e717      	b.n	801a842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aa12:	f113 0b01 	adds.w	fp, r3, #1
 801aa16:	f53f af73 	bmi.w	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa1a:	45dc      	cmp	ip, fp
 801aa1c:	f6ff af70 	blt.w	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa20:	f110 0b01 	adds.w	fp, r0, #1
 801aa24:	f53f af6c 	bmi.w	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa28:	45de      	cmp	lr, fp
 801aa2a:	f6ff af69 	blt.w	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa2e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aa30:	9302      	str	r3, [sp, #8]
 801aa32:	fa0f f38e 	sxth.w	r3, lr
 801aa36:	9301      	str	r3, [sp, #4]
 801aa38:	fa0f f38c 	sxth.w	r3, ip
 801aa3c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801aa40:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801aa44:	9300      	str	r3, [sp, #0]
 801aa46:	463a      	mov	r2, r7
 801aa48:	4653      	mov	r3, sl
 801aa4a:	4641      	mov	r1, r8
 801aa4c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa4e:	f7ff fd55 	bl	801a4fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801aa52:	e755      	b.n	801a900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801aa54:	2000a1a0 	.word	0x2000a1a0
 801aa58:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801aa5a:	1422      	asrs	r2, r4, #16
 801aa5c:	1433      	asrs	r3, r6, #16
 801aa5e:	fb05 2303 	mla	r3, r5, r3, r2
 801aa62:	085a      	lsrs	r2, r3, #1
 801aa64:	07dd      	lsls	r5, r3, #31
 801aa66:	5cba      	ldrb	r2, [r7, r2]
 801aa68:	bf54      	ite	pl
 801aa6a:	f002 020f 	andpl.w	r2, r2, #15
 801aa6e:	1112      	asrmi	r2, r2, #4
 801aa70:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa74:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801aa78:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aa7c:	b2d2      	uxtb	r2, r2
 801aa7e:	2900      	cmp	r1, #0
 801aa80:	f000 809f 	beq.w	801abc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801aa84:	f103 0901 	add.w	r9, r3, #1
 801aa88:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 801aa8c:	f019 0f01 	tst.w	r9, #1
 801aa90:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aa94:	bf0c      	ite	eq
 801aa96:	f00c 0c0f 	andeq.w	ip, ip, #15
 801aa9a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801aa9e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aaa2:	fa5f f58c 	uxtb.w	r5, ip
 801aaa6:	9512      	str	r5, [sp, #72]	; 0x48
 801aaa8:	b1f8      	cbz	r0, 801aaea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801aaaa:	445b      	add	r3, fp
 801aaac:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aab0:	07dd      	lsls	r5, r3, #31
 801aab2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aab6:	bf54      	ite	pl
 801aab8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aabc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aac0:	3301      	adds	r3, #1
 801aac2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aac6:	fa5f f58c 	uxtb.w	r5, ip
 801aaca:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aace:	950d      	str	r5, [sp, #52]	; 0x34
 801aad0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aad4:	07dd      	lsls	r5, r3, #31
 801aad6:	bf54      	ite	pl
 801aad8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aadc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aae0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aae4:	fa5f f38c 	uxtb.w	r3, ip
 801aae8:	9313      	str	r3, [sp, #76]	; 0x4c
 801aaea:	b289      	uxth	r1, r1
 801aaec:	b280      	uxth	r0, r0
 801aaee:	fb01 f300 	mul.w	r3, r1, r0
 801aaf2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801aaf6:	0109      	lsls	r1, r1, #4
 801aaf8:	b280      	uxth	r0, r0
 801aafa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801aafe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab00:	1ac9      	subs	r1, r1, r3
 801ab02:	ebac 0c00 	sub.w	ip, ip, r0
 801ab06:	b289      	uxth	r1, r1
 801ab08:	4369      	muls	r1, r5
 801ab0a:	fa1f fc8c 	uxth.w	ip, ip
 801ab0e:	fb02 120c 	mla	r2, r2, ip, r1
 801ab12:	990d      	ldr	r1, [sp, #52]	; 0x34
 801ab14:	fb00 2001 	mla	r0, r0, r1, r2
 801ab18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab1a:	fb03 0302 	mla	r3, r3, r2, r0
 801ab1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab22:	2b00      	cmp	r3, #0
 801ab24:	d044      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ab26:	4a33      	ldr	r2, [pc, #204]	; (801abf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 801ab28:	f8be c000 	ldrh.w	ip, [lr]
 801ab2c:	6810      	ldr	r0, [r2, #0]
 801ab2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab30:	4353      	muls	r3, r2
 801ab32:	1c5a      	adds	r2, r3, #1
 801ab34:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ab38:	121b      	asrs	r3, r3, #8
 801ab3a:	fa1f f983 	uxth.w	r9, r3
 801ab3e:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ab42:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ab46:	43db      	mvns	r3, r3
 801ab48:	b2db      	uxtb	r3, r3
 801ab4a:	fb12 f209 	smulbb	r2, r2, r9
 801ab4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ab52:	fb01 2103 	mla	r1, r1, r3, r2
 801ab56:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ab5a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ab5e:	b2c0      	uxtb	r0, r0
 801ab60:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab64:	fa5f fc8c 	uxtb.w	ip, ip
 801ab68:	fb10 f009 	smulbb	r0, r0, r9
 801ab6c:	fb0c 0003 	mla	r0, ip, r3, r0
 801ab70:	b289      	uxth	r1, r1
 801ab72:	fb1a fa09 	smulbb	sl, sl, r9
 801ab76:	b280      	uxth	r0, r0
 801ab78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ab7c:	fb02 a203 	mla	r2, r2, r3, sl
 801ab80:	1c4b      	adds	r3, r1, #1
 801ab82:	f100 0a01 	add.w	sl, r0, #1
 801ab86:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ab8a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ab8e:	b292      	uxth	r2, r2
 801ab90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab94:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ab98:	ea4a 0101 	orr.w	r1, sl, r1
 801ab9c:	f102 0a01 	add.w	sl, r2, #1
 801aba0:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801aba4:	0952      	lsrs	r2, r2, #5
 801aba6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abaa:	4311      	orrs	r1, r2
 801abac:	f8ae 1000 	strh.w	r1, [lr]
 801abb0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801abb2:	441c      	add	r4, r3
 801abb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801abb6:	f10e 0e02 	add.w	lr, lr, #2
 801abba:	441e      	add	r6, r3
 801abbc:	f108 38ff 	add.w	r8, r8, #4294967295
 801abc0:	e6cd      	b.n	801a95e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801abc2:	2800      	cmp	r0, #0
 801abc4:	d091      	beq.n	801aaea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801abc6:	445b      	add	r3, fp
 801abc8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801abcc:	07db      	lsls	r3, r3, #31
 801abce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801abd2:	bf54      	ite	pl
 801abd4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801abd8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801abdc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801abe0:	fa5f f38c 	uxtb.w	r3, ip
 801abe4:	930d      	str	r3, [sp, #52]	; 0x34
 801abe6:	e780      	b.n	801aaea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801abe8:	b017      	add	sp, #92	; 0x5c
 801abea:	ecbd 8b08 	vpop	{d8-d11}
 801abee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abf2:	bf00      	nop
 801abf4:	2000a1a0 	.word	0x2000a1a0

0801abf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801abf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801abfc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801ac00:	2c00      	cmp	r4, #0
 801ac02:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ac06:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ac0a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ac0e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801ac12:	fb04 ce03 	mla	lr, r4, r3, ip
 801ac16:	db60      	blt.n	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ac18:	45a1      	cmp	r9, r4
 801ac1a:	dd5e      	ble.n	801acda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ac1c:	f1bc 0f00 	cmp.w	ip, #0
 801ac20:	db59      	blt.n	801acd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ac22:	45e0      	cmp	r8, ip
 801ac24:	dd57      	ble.n	801acd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ac26:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ac2a:	f01e 0f01 	tst.w	lr, #1
 801ac2e:	5c16      	ldrb	r6, [r2, r0]
 801ac30:	bf0c      	ite	eq
 801ac32:	f006 060f 	andeq.w	r6, r6, #15
 801ac36:	1136      	asrne	r6, r6, #4
 801ac38:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ac3c:	b2f6      	uxtb	r6, r6
 801ac3e:	f11c 0001 	adds.w	r0, ip, #1
 801ac42:	d44d      	bmi.n	801ace0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ac44:	4580      	cmp	r8, r0
 801ac46:	dd4b      	ble.n	801ace0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ac48:	2d00      	cmp	r5, #0
 801ac4a:	d04b      	beq.n	801ace4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801ac4c:	f10e 0a01 	add.w	sl, lr, #1
 801ac50:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ac54:	f01a 0f01 	tst.w	sl, #1
 801ac58:	5c10      	ldrb	r0, [r2, r0]
 801ac5a:	bf0c      	ite	eq
 801ac5c:	f000 000f 	andeq.w	r0, r0, #15
 801ac60:	1100      	asrne	r0, r0, #4
 801ac62:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ac66:	b2c0      	uxtb	r0, r0
 801ac68:	3401      	adds	r4, #1
 801ac6a:	d43f      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ac6c:	45a1      	cmp	r9, r4
 801ac6e:	dd3d      	ble.n	801acec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ac70:	2f00      	cmp	r7, #0
 801ac72:	f000 8093 	beq.w	801ad9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ac76:	f1bc 0f00 	cmp.w	ip, #0
 801ac7a:	db35      	blt.n	801ace8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ac7c:	45e0      	cmp	r8, ip
 801ac7e:	dd33      	ble.n	801ace8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ac80:	eb03 090e 	add.w	r9, r3, lr
 801ac84:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ac88:	f019 0f01 	tst.w	r9, #1
 801ac8c:	5d14      	ldrb	r4, [r2, r4]
 801ac8e:	bf0c      	ite	eq
 801ac90:	f004 040f 	andeq.w	r4, r4, #15
 801ac94:	1124      	asrne	r4, r4, #4
 801ac96:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ac9a:	b2e4      	uxtb	r4, r4
 801ac9c:	f11c 0c01 	adds.w	ip, ip, #1
 801aca0:	d427      	bmi.n	801acf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801aca2:	45e0      	cmp	r8, ip
 801aca4:	dd25      	ble.n	801acf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801aca6:	b335      	cbz	r5, 801acf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801aca8:	3301      	adds	r3, #1
 801acaa:	449e      	add	lr, r3
 801acac:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801acb0:	f01e 0f01 	tst.w	lr, #1
 801acb4:	5cd2      	ldrb	r2, [r2, r3]
 801acb6:	bf0c      	ite	eq
 801acb8:	f002 020f 	andeq.w	r2, r2, #15
 801acbc:	1112      	asrne	r2, r2, #4
 801acbe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801acc2:	b2d3      	uxtb	r3, r2
 801acc4:	2d0f      	cmp	r5, #15
 801acc6:	d917      	bls.n	801acf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801acc8:	4b37      	ldr	r3, [pc, #220]	; (801ada8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801acca:	4a38      	ldr	r2, [pc, #224]	; (801adac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801accc:	4838      	ldr	r0, [pc, #224]	; (801adb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801acce:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801acd2:	f000 fc51 	bl	801b578 <__assert_func>
 801acd6:	2600      	movs	r6, #0
 801acd8:	e7b1      	b.n	801ac3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801acda:	2000      	movs	r0, #0
 801acdc:	4606      	mov	r6, r0
 801acde:	e7c3      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ace0:	2000      	movs	r0, #0
 801ace2:	e7c1      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ace4:	4628      	mov	r0, r5
 801ace6:	e7bf      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ace8:	2400      	movs	r4, #0
 801acea:	e7d7      	b.n	801ac9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801acec:	2300      	movs	r3, #0
 801acee:	461c      	mov	r4, r3
 801acf0:	e7e8      	b.n	801acc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801acf2:	2300      	movs	r3, #0
 801acf4:	e7e6      	b.n	801acc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801acf6:	462b      	mov	r3, r5
 801acf8:	2f0f      	cmp	r7, #15
 801acfa:	d8e5      	bhi.n	801acc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801acfc:	b2ad      	uxth	r5, r5
 801acfe:	b2bf      	uxth	r7, r7
 801ad00:	fb05 fc07 	mul.w	ip, r5, r7
 801ad04:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ad08:	012d      	lsls	r5, r5, #4
 801ad0a:	b2bf      	uxth	r7, r7
 801ad0c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ad10:	eba5 050c 	sub.w	r5, r5, ip
 801ad14:	1bd2      	subs	r2, r2, r7
 801ad16:	b2ad      	uxth	r5, r5
 801ad18:	b292      	uxth	r2, r2
 801ad1a:	4368      	muls	r0, r5
 801ad1c:	fb06 0002 	mla	r0, r6, r2, r0
 801ad20:	fb07 0404 	mla	r4, r7, r4, r0
 801ad24:	fb0c 4303 	mla	r3, ip, r3, r4
 801ad28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad2c:	b3a3      	cbz	r3, 801ad98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ad2e:	4a21      	ldr	r2, [pc, #132]	; (801adb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ad30:	880e      	ldrh	r6, [r1, #0]
 801ad32:	6815      	ldr	r5, [r2, #0]
 801ad34:	1234      	asrs	r4, r6, #8
 801ad36:	b29a      	uxth	r2, r3
 801ad38:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ad3c:	43db      	mvns	r3, r3
 801ad3e:	b2db      	uxtb	r3, r3
 801ad40:	fb10 f002 	smulbb	r0, r0, r2
 801ad44:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ad48:	fb04 0403 	mla	r4, r4, r3, r0
 801ad4c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ad50:	10f0      	asrs	r0, r6, #3
 801ad52:	b2ed      	uxtb	r5, r5
 801ad54:	00f6      	lsls	r6, r6, #3
 801ad56:	fb17 f702 	smulbb	r7, r7, r2
 801ad5a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ad5e:	fb15 f202 	smulbb	r2, r5, r2
 801ad62:	b2f6      	uxtb	r6, r6
 801ad64:	b2a4      	uxth	r4, r4
 801ad66:	fb00 7003 	mla	r0, r0, r3, r7
 801ad6a:	fb06 2303 	mla	r3, r6, r3, r2
 801ad6e:	b29a      	uxth	r2, r3
 801ad70:	1c63      	adds	r3, r4, #1
 801ad72:	b280      	uxth	r0, r0
 801ad74:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ad78:	1c53      	adds	r3, r2, #1
 801ad7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ad7e:	1c42      	adds	r2, r0, #1
 801ad80:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ad84:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ad88:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad8c:	0940      	lsrs	r0, r0, #5
 801ad8e:	4323      	orrs	r3, r4
 801ad90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad94:	4303      	orrs	r3, r0
 801ad96:	800b      	strh	r3, [r1, #0]
 801ad98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ad9c:	2d0f      	cmp	r5, #15
 801ad9e:	d893      	bhi.n	801acc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ada0:	463b      	mov	r3, r7
 801ada2:	463c      	mov	r4, r7
 801ada4:	e7aa      	b.n	801acfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801ada6:	bf00      	nop
 801ada8:	0801f4be 	.word	0x0801f4be
 801adac:	0801fa8a 	.word	0x0801fa8a
 801adb0:	0801f542 	.word	0x0801f542
 801adb4:	2000a1a0 	.word	0x2000a1a0

0801adb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adbc:	ed2d 8b08 	vpush	{d8-d11}
 801adc0:	b093      	sub	sp, #76	; 0x4c
 801adc2:	461d      	mov	r5, r3
 801adc4:	920c      	str	r2, [sp, #48]	; 0x30
 801adc6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801adc8:	9107      	str	r1, [sp, #28]
 801adca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801adce:	9011      	str	r0, [sp, #68]	; 0x44
 801add0:	6850      	ldr	r0, [r2, #4]
 801add2:	6812      	ldr	r2, [r2, #0]
 801add4:	fb00 1303 	mla	r3, r0, r3, r1
 801add8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801addc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adde:	689b      	ldr	r3, [r3, #8]
 801ade0:	3301      	adds	r3, #1
 801ade2:	f023 0301 	bic.w	r3, r3, #1
 801ade6:	9306      	str	r3, [sp, #24]
 801ade8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adea:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801adee:	681f      	ldr	r7, [r3, #0]
 801adf0:	eeb0 aa40 	vmov.f32	s20, s0
 801adf4:	eef0 9a60 	vmov.f32	s19, s1
 801adf8:	eeb0 9a41 	vmov.f32	s18, s2
 801adfc:	eeb0 8a62 	vmov.f32	s16, s5
 801ae00:	eef0 8a43 	vmov.f32	s17, s6
 801ae04:	eef0 ba44 	vmov.f32	s23, s8
 801ae08:	eeb0 ba64 	vmov.f32	s22, s9
 801ae0c:	eef0 aa45 	vmov.f32	s21, s10
 801ae10:	9b07      	ldr	r3, [sp, #28]
 801ae12:	2b00      	cmp	r3, #0
 801ae14:	dc03      	bgt.n	801ae1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ae18:	2b00      	cmp	r3, #0
 801ae1a:	f340 8267 	ble.w	801b2ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801ae1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ae28:	1e48      	subs	r0, r1, #1
 801ae2a:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae2e:	2d00      	cmp	r5, #0
 801ae30:	f340 80eb 	ble.w	801b00a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ae34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ae38:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ae3c:	d406      	bmi.n	801ae4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae3e:	4586      	cmp	lr, r0
 801ae40:	da04      	bge.n	801ae4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae42:	2b00      	cmp	r3, #0
 801ae44:	db02      	blt.n	801ae4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ae46:	4563      	cmp	r3, ip
 801ae48:	f2c0 80e0 	blt.w	801b00c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ae4c:	f11e 0e01 	adds.w	lr, lr, #1
 801ae50:	f100 80d3 	bmi.w	801affa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae54:	4571      	cmp	r1, lr
 801ae56:	f2c0 80d0 	blt.w	801affa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae5a:	3301      	adds	r3, #1
 801ae5c:	f100 80cd 	bmi.w	801affa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae60:	429a      	cmp	r2, r3
 801ae62:	f2c0 80ca 	blt.w	801affa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae66:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ae6a:	9509      	str	r5, [sp, #36]	; 0x24
 801ae6c:	46c8      	mov	r8, r9
 801ae6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae70:	2b00      	cmp	r3, #0
 801ae72:	f340 80e9 	ble.w	801b048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ae76:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ae7a:	9308      	str	r3, [sp, #32]
 801ae7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae7e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ae82:	1423      	asrs	r3, r4, #16
 801ae84:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ae88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ae8c:	f100 813d 	bmi.w	801b10a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ae90:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ae94:	455b      	cmp	r3, fp
 801ae96:	f280 8138 	bge.w	801b10a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ae9a:	2800      	cmp	r0, #0
 801ae9c:	f2c0 8135 	blt.w	801b10a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801aea0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801aea4:	4558      	cmp	r0, fp
 801aea6:	f280 8130 	bge.w	801b10a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801aeaa:	9a06      	ldr	r2, [sp, #24]
 801aeac:	fb00 3302 	mla	r3, r0, r2, r3
 801aeb0:	0858      	lsrs	r0, r3, #1
 801aeb2:	07da      	lsls	r2, r3, #31
 801aeb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801aeb8:	9a08      	ldr	r2, [sp, #32]
 801aeba:	bf54      	ite	pl
 801aebc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aec0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aec4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aec8:	fa5f fc8c 	uxtb.w	ip, ip
 801aecc:	2a00      	cmp	r2, #0
 801aece:	f000 80fe 	beq.w	801b0ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801aed2:	1c58      	adds	r0, r3, #1
 801aed4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801aed8:	07c0      	lsls	r0, r0, #31
 801aeda:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801aede:	bf54      	ite	pl
 801aee0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801aee4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801aee8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801aeec:	fa5f fe8e 	uxtb.w	lr, lr
 801aef0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801aef4:	b1b9      	cbz	r1, 801af26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801aef6:	4453      	add	r3, sl
 801aef8:	0858      	lsrs	r0, r3, #1
 801aefa:	07da      	lsls	r2, r3, #31
 801aefc:	5c38      	ldrb	r0, [r7, r0]
 801aefe:	bf54      	ite	pl
 801af00:	f000 000f 	andpl.w	r0, r0, #15
 801af04:	1100      	asrmi	r0, r0, #4
 801af06:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801af0a:	b2c0      	uxtb	r0, r0
 801af0c:	900a      	str	r0, [sp, #40]	; 0x28
 801af0e:	1c58      	adds	r0, r3, #1
 801af10:	0843      	lsrs	r3, r0, #1
 801af12:	07c2      	lsls	r2, r0, #31
 801af14:	5cfb      	ldrb	r3, [r7, r3]
 801af16:	bf54      	ite	pl
 801af18:	f003 030f 	andpl.w	r3, r3, #15
 801af1c:	111b      	asrmi	r3, r3, #4
 801af1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801af22:	b2db      	uxtb	r3, r3
 801af24:	930e      	str	r3, [sp, #56]	; 0x38
 801af26:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801af2a:	b289      	uxth	r1, r1
 801af2c:	fb02 f301 	mul.w	r3, r2, r1
 801af30:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801af34:	0112      	lsls	r2, r2, #4
 801af36:	b289      	uxth	r1, r1
 801af38:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801af3c:	1a40      	subs	r0, r0, r1
 801af3e:	fa1f fe80 	uxth.w	lr, r0
 801af42:	1ad2      	subs	r2, r2, r3
 801af44:	980d      	ldr	r0, [sp, #52]	; 0x34
 801af46:	b292      	uxth	r2, r2
 801af48:	4342      	muls	r2, r0
 801af4a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801af4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af50:	fb01 c102 	mla	r1, r1, r2, ip
 801af54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801af56:	fb03 1302 	mla	r3, r3, r2, r1
 801af5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af5e:	2b00      	cmp	r3, #0
 801af60:	d041      	beq.n	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801af62:	4a7a      	ldr	r2, [pc, #488]	; (801b14c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 801af64:	6810      	ldr	r0, [r2, #0]
 801af66:	2bff      	cmp	r3, #255	; 0xff
 801af68:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801af6c:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801af70:	fa5f fe80 	uxtb.w	lr, r0
 801af74:	f000 80bc 	beq.w	801b0f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801af78:	f8b8 c000 	ldrh.w	ip, [r8]
 801af7c:	fa1f fb83 	uxth.w	fp, r3
 801af80:	ea4f 202c 	mov.w	r0, ip, asr #8
 801af84:	43db      	mvns	r3, r3
 801af86:	b2d2      	uxtb	r2, r2
 801af88:	b2db      	uxtb	r3, r3
 801af8a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af8e:	fb12 f20b 	smulbb	r2, r2, fp
 801af92:	fb00 2203 	mla	r2, r0, r3, r2
 801af96:	b2c9      	uxtb	r1, r1
 801af98:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801af9c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801afa0:	b292      	uxth	r2, r2
 801afa2:	fb11 f10b 	smulbb	r1, r1, fp
 801afa6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801afaa:	fa5f fc8c 	uxtb.w	ip, ip
 801afae:	fb1e fe0b 	smulbb	lr, lr, fp
 801afb2:	fb00 1003 	mla	r0, r0, r3, r1
 801afb6:	1c51      	adds	r1, r2, #1
 801afb8:	fb0c e303 	mla	r3, ip, r3, lr
 801afbc:	b29b      	uxth	r3, r3
 801afbe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801afc2:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 801afc6:	1c5a      	adds	r2, r3, #1
 801afc8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801afcc:	b280      	uxth	r0, r0
 801afce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801afd2:	430a      	orrs	r2, r1
 801afd4:	1c41      	adds	r1, r0, #1
 801afd6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801afda:	0940      	lsrs	r0, r0, #5
 801afdc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801afe0:	4302      	orrs	r2, r0
 801afe2:	f8a8 2000 	strh.w	r2, [r8]
 801afe6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801afe8:	441c      	add	r4, r3
 801afea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801afec:	441e      	add	r6, r3
 801afee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aff0:	3b01      	subs	r3, #1
 801aff2:	f108 0802 	add.w	r8, r8, #2
 801aff6:	9309      	str	r3, [sp, #36]	; 0x24
 801aff8:	e739      	b.n	801ae6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801affa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801affc:	441c      	add	r4, r3
 801affe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b000:	3d01      	subs	r5, #1
 801b002:	441e      	add	r6, r3
 801b004:	f109 0902 	add.w	r9, r9, #2
 801b008:	e711      	b.n	801ae2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b00a:	d021      	beq.n	801b050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b00c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b00e:	1e6b      	subs	r3, r5, #1
 801b010:	fb00 4003 	mla	r0, r0, r3, r4
 801b014:	1400      	asrs	r0, r0, #16
 801b016:	f53f af26 	bmi.w	801ae66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b01a:	3901      	subs	r1, #1
 801b01c:	4288      	cmp	r0, r1
 801b01e:	f6bf af22 	bge.w	801ae66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b022:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b024:	fb01 6303 	mla	r3, r1, r3, r6
 801b028:	141b      	asrs	r3, r3, #16
 801b02a:	f53f af1c 	bmi.w	801ae66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b02e:	3a01      	subs	r2, #1
 801b030:	4293      	cmp	r3, r2
 801b032:	f6bf af18 	bge.w	801ae66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b036:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b03a:	9308      	str	r3, [sp, #32]
 801b03c:	46aa      	mov	sl, r5
 801b03e:	46c8      	mov	r8, r9
 801b040:	f1ba 0f00 	cmp.w	sl, #0
 801b044:	f300 8086 	bgt.w	801b154 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801b048:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b04c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b050:	9b07      	ldr	r3, [sp, #28]
 801b052:	2b00      	cmp	r3, #0
 801b054:	f340 814a 	ble.w	801b2ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b058:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b05c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b060:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b064:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b066:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b06a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b06e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b072:	eef0 6a48 	vmov.f32	s13, s16
 801b076:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b07a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b07e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b082:	ee16 4a90 	vmov	r4, s13
 801b086:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b08a:	eef0 6a68 	vmov.f32	s13, s17
 801b08e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b092:	ee18 2a10 	vmov	r2, s16
 801b096:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b09a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b09e:	ee18 2a90 	vmov	r2, s17
 801b0a2:	9327      	str	r3, [sp, #156]	; 0x9c
 801b0a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0aa:	9328      	str	r3, [sp, #160]	; 0xa0
 801b0ac:	9b07      	ldr	r3, [sp, #28]
 801b0ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b0b0:	3b01      	subs	r3, #1
 801b0b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0b6:	9307      	str	r3, [sp, #28]
 801b0b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0ba:	ee16 6a90 	vmov	r6, s13
 801b0be:	bf14      	ite	ne
 801b0c0:	461d      	movne	r5, r3
 801b0c2:	4615      	moveq	r5, r2
 801b0c4:	eef0 8a67 	vmov.f32	s17, s15
 801b0c8:	eeb0 8a47 	vmov.f32	s16, s14
 801b0cc:	e6a0      	b.n	801ae10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b0ce:	2900      	cmp	r1, #0
 801b0d0:	f43f af29 	beq.w	801af26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b0d4:	eb0a 0003 	add.w	r0, sl, r3
 801b0d8:	0843      	lsrs	r3, r0, #1
 801b0da:	07c0      	lsls	r0, r0, #31
 801b0dc:	5cfb      	ldrb	r3, [r7, r3]
 801b0de:	bf54      	ite	pl
 801b0e0:	f003 030f 	andpl.w	r3, r3, #15
 801b0e4:	111b      	asrmi	r3, r3, #4
 801b0e6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b0ea:	b2db      	uxtb	r3, r3
 801b0ec:	930a      	str	r3, [sp, #40]	; 0x28
 801b0ee:	e71a      	b.n	801af26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b0f0:	4b17      	ldr	r3, [pc, #92]	; (801b150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801b0f2:	00c9      	lsls	r1, r1, #3
 801b0f4:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801b0f8:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801b0fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b100:	ea4e 0e01 	orr.w	lr, lr, r1
 801b104:	f8a8 e000 	strh.w	lr, [r8]
 801b108:	e76d      	b.n	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b10a:	f113 0b01 	adds.w	fp, r3, #1
 801b10e:	f53f af6a 	bmi.w	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b112:	45dc      	cmp	ip, fp
 801b114:	f6ff af67 	blt.w	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b118:	f110 0b01 	adds.w	fp, r0, #1
 801b11c:	f53f af63 	bmi.w	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b120:	45de      	cmp	lr, fp
 801b122:	f6ff af60 	blt.w	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b126:	9a08      	ldr	r2, [sp, #32]
 801b128:	9302      	str	r3, [sp, #8]
 801b12a:	fa0f f38e 	sxth.w	r3, lr
 801b12e:	9301      	str	r3, [sp, #4]
 801b130:	fa0f f38c 	sxth.w	r3, ip
 801b134:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b138:	9105      	str	r1, [sp, #20]
 801b13a:	9300      	str	r3, [sp, #0]
 801b13c:	463a      	mov	r2, r7
 801b13e:	4653      	mov	r3, sl
 801b140:	4641      	mov	r1, r8
 801b142:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b144:	f7ff fd58 	bl	801abf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b148:	e74d      	b.n	801afe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b14a:	bf00      	nop
 801b14c:	2000a1a0 	.word	0x2000a1a0
 801b150:	fffff800 	.word	0xfffff800
 801b154:	9906      	ldr	r1, [sp, #24]
 801b156:	1422      	asrs	r2, r4, #16
 801b158:	1433      	asrs	r3, r6, #16
 801b15a:	fb01 2303 	mla	r3, r1, r3, r2
 801b15e:	085a      	lsrs	r2, r3, #1
 801b160:	07d9      	lsls	r1, r3, #31
 801b162:	5cba      	ldrb	r2, [r7, r2]
 801b164:	bf54      	ite	pl
 801b166:	f002 020f 	andpl.w	r2, r2, #15
 801b16a:	1112      	asrmi	r2, r2, #4
 801b16c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b170:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b174:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b178:	b2d2      	uxtb	r2, r2
 801b17a:	2800      	cmp	r0, #0
 801b17c:	f000 8098 	beq.w	801b2b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801b180:	f103 0e01 	add.w	lr, r3, #1
 801b184:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801b188:	f01e 0f01 	tst.w	lr, #1
 801b18c:	5c79      	ldrb	r1, [r7, r1]
 801b18e:	bf0c      	ite	eq
 801b190:	f001 010f 	andeq.w	r1, r1, #15
 801b194:	1109      	asrne	r1, r1, #4
 801b196:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b19a:	b2c9      	uxtb	r1, r1
 801b19c:	910f      	str	r1, [sp, #60]	; 0x3c
 801b19e:	f1bc 0f00 	cmp.w	ip, #0
 801b1a2:	d019      	beq.n	801b1d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b1a4:	9908      	ldr	r1, [sp, #32]
 801b1a6:	440b      	add	r3, r1
 801b1a8:	0859      	lsrs	r1, r3, #1
 801b1aa:	f013 0f01 	tst.w	r3, #1
 801b1ae:	5c79      	ldrb	r1, [r7, r1]
 801b1b0:	bf0c      	ite	eq
 801b1b2:	f001 010f 	andeq.w	r1, r1, #15
 801b1b6:	1109      	asrne	r1, r1, #4
 801b1b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b1bc:	b2c9      	uxtb	r1, r1
 801b1be:	3301      	adds	r3, #1
 801b1c0:	910b      	str	r1, [sp, #44]	; 0x2c
 801b1c2:	0859      	lsrs	r1, r3, #1
 801b1c4:	07db      	lsls	r3, r3, #31
 801b1c6:	5c79      	ldrb	r1, [r7, r1]
 801b1c8:	bf54      	ite	pl
 801b1ca:	f001 010f 	andpl.w	r1, r1, #15
 801b1ce:	1109      	asrmi	r1, r1, #4
 801b1d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b1d4:	b2c9      	uxtb	r1, r1
 801b1d6:	9110      	str	r1, [sp, #64]	; 0x40
 801b1d8:	b280      	uxth	r0, r0
 801b1da:	fa1f fc8c 	uxth.w	ip, ip
 801b1de:	fb00 f30c 	mul.w	r3, r0, ip
 801b1e2:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b1e6:	0100      	lsls	r0, r0, #4
 801b1e8:	fa1f fc8c 	uxth.w	ip, ip
 801b1ec:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b1f0:	eba1 010c 	sub.w	r1, r1, ip
 801b1f4:	fa1f fe81 	uxth.w	lr, r1
 801b1f8:	1ac0      	subs	r0, r0, r3
 801b1fa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b1fc:	b280      	uxth	r0, r0
 801b1fe:	4348      	muls	r0, r1
 801b200:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b202:	fb02 020e 	mla	r2, r2, lr, r0
 801b206:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b20a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b20c:	fb03 c302 	mla	r3, r3, r2, ip
 801b210:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b214:	2b00      	cmp	r3, #0
 801b216:	d042      	beq.n	801b29e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801b218:	4a37      	ldr	r2, [pc, #220]	; (801b2f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b21a:	6810      	ldr	r0, [r2, #0]
 801b21c:	2bff      	cmp	r3, #255	; 0xff
 801b21e:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801b222:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801b226:	fa5f fe80 	uxtb.w	lr, r0
 801b22a:	d052      	beq.n	801b2d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801b22c:	f8b8 c000 	ldrh.w	ip, [r8]
 801b230:	fa1f fb83 	uxth.w	fp, r3
 801b234:	ea4f 202c 	mov.w	r0, ip, asr #8
 801b238:	43db      	mvns	r3, r3
 801b23a:	b2d2      	uxtb	r2, r2
 801b23c:	b2db      	uxtb	r3, r3
 801b23e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b242:	fb12 f20b 	smulbb	r2, r2, fp
 801b246:	fb00 2203 	mla	r2, r0, r3, r2
 801b24a:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801b24e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b252:	fa5f fc8c 	uxtb.w	ip, ip
 801b256:	fb1e fe0b 	smulbb	lr, lr, fp
 801b25a:	fb0c ee03 	mla	lr, ip, r3, lr
 801b25e:	b2c9      	uxtb	r1, r1
 801b260:	b292      	uxth	r2, r2
 801b262:	fb11 f10b 	smulbb	r1, r1, fp
 801b266:	fa1f fe8e 	uxth.w	lr, lr
 801b26a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b26e:	fb00 1003 	mla	r0, r0, r3, r1
 801b272:	1c53      	adds	r3, r2, #1
 801b274:	f10e 0101 	add.w	r1, lr, #1
 801b278:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b27c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b280:	b280      	uxth	r0, r0
 801b282:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b286:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b28a:	430a      	orrs	r2, r1
 801b28c:	1c41      	adds	r1, r0, #1
 801b28e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b292:	0940      	lsrs	r0, r0, #5
 801b294:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b298:	4302      	orrs	r2, r0
 801b29a:	f8a8 2000 	strh.w	r2, [r8]
 801b29e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b2a0:	441c      	add	r4, r3
 801b2a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b2a4:	f108 0802 	add.w	r8, r8, #2
 801b2a8:	441e      	add	r6, r3
 801b2aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b2ae:	e6c7      	b.n	801b040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b2b0:	f1bc 0f00 	cmp.w	ip, #0
 801b2b4:	d090      	beq.n	801b1d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b2b6:	9908      	ldr	r1, [sp, #32]
 801b2b8:	440b      	add	r3, r1
 801b2ba:	0859      	lsrs	r1, r3, #1
 801b2bc:	07db      	lsls	r3, r3, #31
 801b2be:	5c79      	ldrb	r1, [r7, r1]
 801b2c0:	bf54      	ite	pl
 801b2c2:	f001 010f 	andpl.w	r1, r1, #15
 801b2c6:	1109      	asrmi	r1, r1, #4
 801b2c8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b2cc:	b2c9      	uxtb	r1, r1
 801b2ce:	910b      	str	r1, [sp, #44]	; 0x2c
 801b2d0:	e782      	b.n	801b1d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801b2d2:	4b0a      	ldr	r3, [pc, #40]	; (801b2fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801b2d4:	00c9      	lsls	r1, r1, #3
 801b2d6:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801b2da:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801b2de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b2e2:	ea4e 0e01 	orr.w	lr, lr, r1
 801b2e6:	f8a8 e000 	strh.w	lr, [r8]
 801b2ea:	e7d8      	b.n	801b29e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801b2ec:	b013      	add	sp, #76	; 0x4c
 801b2ee:	ecbd 8b08 	vpop	{d8-d11}
 801b2f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2f6:	bf00      	nop
 801b2f8:	2000a1a0 	.word	0x2000a1a0
 801b2fc:	fffff800 	.word	0xfffff800

0801b300 <CRC_Lock>:
 801b300:	b530      	push	{r4, r5, lr}
 801b302:	4a20      	ldr	r2, [pc, #128]	; (801b384 <CRC_Lock+0x84>)
 801b304:	6813      	ldr	r3, [r2, #0]
 801b306:	f023 0301 	bic.w	r3, r3, #1
 801b30a:	6013      	str	r3, [r2, #0]
 801b30c:	4b1e      	ldr	r3, [pc, #120]	; (801b388 <CRC_Lock+0x88>)
 801b30e:	681a      	ldr	r2, [r3, #0]
 801b310:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b314:	4022      	ands	r2, r4
 801b316:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b31a:	42aa      	cmp	r2, r5
 801b31c:	d005      	beq.n	801b32a <CRC_Lock+0x2a>
 801b31e:	681b      	ldr	r3, [r3, #0]
 801b320:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b324:	4023      	ands	r3, r4
 801b326:	4293      	cmp	r3, r2
 801b328:	d124      	bne.n	801b374 <CRC_Lock+0x74>
 801b32a:	4b18      	ldr	r3, [pc, #96]	; (801b38c <CRC_Lock+0x8c>)
 801b32c:	681b      	ldr	r3, [r3, #0]
 801b32e:	bb0b      	cbnz	r3, 801b374 <CRC_Lock+0x74>
 801b330:	4b17      	ldr	r3, [pc, #92]	; (801b390 <CRC_Lock+0x90>)
 801b332:	681a      	ldr	r2, [r3, #0]
 801b334:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b338:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b33c:	d00d      	beq.n	801b35a <CRC_Lock+0x5a>
 801b33e:	681a      	ldr	r2, [r3, #0]
 801b340:	f240 4483 	movw	r4, #1155	; 0x483
 801b344:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b348:	42a2      	cmp	r2, r4
 801b34a:	d006      	beq.n	801b35a <CRC_Lock+0x5a>
 801b34c:	681b      	ldr	r3, [r3, #0]
 801b34e:	f240 4285 	movw	r2, #1157	; 0x485
 801b352:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b356:	4293      	cmp	r3, r2
 801b358:	d10c      	bne.n	801b374 <CRC_Lock+0x74>
 801b35a:	4b0e      	ldr	r3, [pc, #56]	; (801b394 <CRC_Lock+0x94>)
 801b35c:	2201      	movs	r2, #1
 801b35e:	601a      	str	r2, [r3, #0]
 801b360:	681a      	ldr	r2, [r3, #0]
 801b362:	2a00      	cmp	r2, #0
 801b364:	d1fc      	bne.n	801b360 <CRC_Lock+0x60>
 801b366:	4b0c      	ldr	r3, [pc, #48]	; (801b398 <CRC_Lock+0x98>)
 801b368:	6018      	str	r0, [r3, #0]
 801b36a:	6818      	ldr	r0, [r3, #0]
 801b36c:	1a43      	subs	r3, r0, r1
 801b36e:	4258      	negs	r0, r3
 801b370:	4158      	adcs	r0, r3
 801b372:	bd30      	pop	{r4, r5, pc}
 801b374:	4b09      	ldr	r3, [pc, #36]	; (801b39c <CRC_Lock+0x9c>)
 801b376:	2201      	movs	r2, #1
 801b378:	601a      	str	r2, [r3, #0]
 801b37a:	681a      	ldr	r2, [r3, #0]
 801b37c:	2a00      	cmp	r2, #0
 801b37e:	d1fc      	bne.n	801b37a <CRC_Lock+0x7a>
 801b380:	4b07      	ldr	r3, [pc, #28]	; (801b3a0 <CRC_Lock+0xa0>)
 801b382:	e7f1      	b.n	801b368 <CRC_Lock+0x68>
 801b384:	e0002000 	.word	0xe0002000
 801b388:	e000ed00 	.word	0xe000ed00
 801b38c:	e0042000 	.word	0xe0042000
 801b390:	5c001000 	.word	0x5c001000
 801b394:	58024c08 	.word	0x58024c08
 801b398:	58024c00 	.word	0x58024c00
 801b39c:	40023008 	.word	0x40023008
 801b3a0:	40023000 	.word	0x40023000

0801b3a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b3a4:	6101      	str	r1, [r0, #16]
 801b3a6:	4770      	bx	lr

0801b3a8 <_ZN8touchgfx8Gestures4tickEv>:
 801b3a8:	7b83      	ldrb	r3, [r0, #14]
 801b3aa:	b14b      	cbz	r3, 801b3c0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b3ac:	8903      	ldrh	r3, [r0, #8]
 801b3ae:	3301      	adds	r3, #1
 801b3b0:	b29b      	uxth	r3, r3
 801b3b2:	2b07      	cmp	r3, #7
 801b3b4:	8103      	strh	r3, [r0, #8]
 801b3b6:	bf81      	itttt	hi
 801b3b8:	2300      	movhi	r3, #0
 801b3ba:	8143      	strhhi	r3, [r0, #10]
 801b3bc:	8183      	strhhi	r3, [r0, #12]
 801b3be:	7383      	strbhi	r3, [r0, #14]
 801b3c0:	4770      	bx	lr
	...

0801b3c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b3c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b3c8:	4604      	mov	r4, r0
 801b3ca:	8880      	ldrh	r0, [r0, #4]
 801b3cc:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b3d0:	4698      	mov	r8, r3
 801b3d2:	eba8 0000 	sub.w	r0, r8, r0
 801b3d6:	4b1c      	ldr	r3, [pc, #112]	; (801b448 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b3d8:	9300      	str	r3, [sp, #0]
 801b3da:	b280      	uxth	r0, r0
 801b3dc:	2300      	movs	r3, #0
 801b3de:	f88d 3004 	strb.w	r3, [sp, #4]
 801b3e2:	b203      	sxth	r3, r0
 801b3e4:	2b00      	cmp	r3, #0
 801b3e6:	bfb8      	it	lt
 801b3e8:	4240      	neglt	r0, r0
 801b3ea:	4617      	mov	r7, r2
 801b3ec:	8aa2      	ldrh	r2, [r4, #20]
 801b3ee:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b3f2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b3f6:	bfb8      	it	lt
 801b3f8:	b203      	sxthlt	r3, r0
 801b3fa:	460e      	mov	r6, r1
 801b3fc:	4293      	cmp	r3, r2
 801b3fe:	88e1      	ldrh	r1, [r4, #6]
 801b400:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b404:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b408:	dc08      	bgt.n	801b41c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b40a:	1a69      	subs	r1, r5, r1
 801b40c:	b289      	uxth	r1, r1
 801b40e:	b20b      	sxth	r3, r1
 801b410:	2b00      	cmp	r3, #0
 801b412:	bfbc      	itt	lt
 801b414:	4249      	neglt	r1, r1
 801b416:	b20b      	sxthlt	r3, r1
 801b418:	429a      	cmp	r2, r3
 801b41a:	da13      	bge.n	801b444 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b41c:	6920      	ldr	r0, [r4, #16]
 801b41e:	6803      	ldr	r3, [r0, #0]
 801b420:	4669      	mov	r1, sp
 801b422:	685b      	ldr	r3, [r3, #4]
 801b424:	4798      	blx	r3
 801b426:	eba8 0606 	sub.w	r6, r8, r6
 801b42a:	2300      	movs	r3, #0
 801b42c:	1bef      	subs	r7, r5, r7
 801b42e:	2001      	movs	r0, #1
 801b430:	8123      	strh	r3, [r4, #8]
 801b432:	8166      	strh	r6, [r4, #10]
 801b434:	81a7      	strh	r7, [r4, #12]
 801b436:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b43a:	80e5      	strh	r5, [r4, #6]
 801b43c:	73a0      	strb	r0, [r4, #14]
 801b43e:	b004      	add	sp, #16
 801b440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b444:	2000      	movs	r0, #0
 801b446:	e7fa      	b.n	801b43e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b448:	0801e954 	.word	0x0801e954

0801b44c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b44c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b44e:	461e      	mov	r6, r3
 801b450:	1e4b      	subs	r3, r1, #1
 801b452:	2b01      	cmp	r3, #1
 801b454:	b085      	sub	sp, #20
 801b456:	4604      	mov	r4, r0
 801b458:	460d      	mov	r5, r1
 801b45a:	4617      	mov	r7, r2
 801b45c:	d84b      	bhi.n	801b4f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b45e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b462:	1cd3      	adds	r3, r2, #3
 801b464:	b29b      	uxth	r3, r3
 801b466:	2b06      	cmp	r3, #6
 801b468:	d916      	bls.n	801b498 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b46a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b50c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b46e:	f8cd c004 	str.w	ip, [sp, #4]
 801b472:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b476:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b47a:	6900      	ldr	r0, [r0, #16]
 801b47c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b480:	f04f 0c00 	mov.w	ip, #0
 801b484:	f88d c008 	strb.w	ip, [sp, #8]
 801b488:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b48c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b490:	6803      	ldr	r3, [r0, #0]
 801b492:	a901      	add	r1, sp, #4
 801b494:	689b      	ldr	r3, [r3, #8]
 801b496:	4798      	blx	r3
 801b498:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b49c:	1cd3      	adds	r3, r2, #3
 801b49e:	b29b      	uxth	r3, r3
 801b4a0:	2b06      	cmp	r3, #6
 801b4a2:	d916      	bls.n	801b4d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b4a4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b50c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b4a8:	f8cd c004 	str.w	ip, [sp, #4]
 801b4ac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b4b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b4b4:	6920      	ldr	r0, [r4, #16]
 801b4b6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b4ba:	f04f 0c01 	mov.w	ip, #1
 801b4be:	f88d c008 	strb.w	ip, [sp, #8]
 801b4c2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b4c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b4ca:	6803      	ldr	r3, [r0, #0]
 801b4cc:	a901      	add	r1, sp, #4
 801b4ce:	689b      	ldr	r3, [r3, #8]
 801b4d0:	4798      	blx	r3
 801b4d2:	4b0d      	ldr	r3, [pc, #52]	; (801b508 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b4d4:	9301      	str	r3, [sp, #4]
 801b4d6:	6920      	ldr	r0, [r4, #16]
 801b4d8:	f88d 5008 	strb.w	r5, [sp, #8]
 801b4dc:	2300      	movs	r3, #0
 801b4de:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b4e2:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b4e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b4ea:	6803      	ldr	r3, [r0, #0]
 801b4ec:	a901      	add	r1, sp, #4
 801b4ee:	681b      	ldr	r3, [r3, #0]
 801b4f0:	4798      	blx	r3
 801b4f2:	b005      	add	sp, #20
 801b4f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b4f6:	2900      	cmp	r1, #0
 801b4f8:	d1eb      	bne.n	801b4d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b4fa:	80a2      	strh	r2, [r4, #4]
 801b4fc:	80c6      	strh	r6, [r0, #6]
 801b4fe:	60a1      	str	r1, [r4, #8]
 801b500:	81a1      	strh	r1, [r4, #12]
 801b502:	73a1      	strb	r1, [r4, #14]
 801b504:	e7e5      	b.n	801b4d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b506:	bf00      	nop
 801b508:	0801e940 	.word	0x0801e940
 801b50c:	0801e968 	.word	0x0801e968

0801b510 <__aeabi_atexit>:
 801b510:	460b      	mov	r3, r1
 801b512:	4601      	mov	r1, r0
 801b514:	4618      	mov	r0, r3
 801b516:	f000 b853 	b.w	801b5c0 <__cxa_atexit>

0801b51a <_ZdlPvj>:
 801b51a:	f000 b812 	b.w	801b542 <_ZdlPv>

0801b51e <__cxa_guard_acquire>:
 801b51e:	6803      	ldr	r3, [r0, #0]
 801b520:	07db      	lsls	r3, r3, #31
 801b522:	d406      	bmi.n	801b532 <__cxa_guard_acquire+0x14>
 801b524:	7843      	ldrb	r3, [r0, #1]
 801b526:	b103      	cbz	r3, 801b52a <__cxa_guard_acquire+0xc>
 801b528:	deff      	udf	#255	; 0xff
 801b52a:	2301      	movs	r3, #1
 801b52c:	7043      	strb	r3, [r0, #1]
 801b52e:	4618      	mov	r0, r3
 801b530:	4770      	bx	lr
 801b532:	2000      	movs	r0, #0
 801b534:	4770      	bx	lr

0801b536 <__cxa_guard_release>:
 801b536:	2301      	movs	r3, #1
 801b538:	6003      	str	r3, [r0, #0]
 801b53a:	4770      	bx	lr

0801b53c <__cxa_pure_virtual>:
 801b53c:	b508      	push	{r3, lr}
 801b53e:	f000 f80f 	bl	801b560 <_ZSt9terminatev>

0801b542 <_ZdlPv>:
 801b542:	f000 b88f 	b.w	801b664 <free>

0801b546 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b546:	b508      	push	{r3, lr}
 801b548:	4780      	blx	r0
 801b54a:	f000 f80e 	bl	801b56a <abort>
	...

0801b550 <_ZSt13get_terminatev>:
 801b550:	4b02      	ldr	r3, [pc, #8]	; (801b55c <_ZSt13get_terminatev+0xc>)
 801b552:	6818      	ldr	r0, [r3, #0]
 801b554:	f3bf 8f5b 	dmb	ish
 801b558:	4770      	bx	lr
 801b55a:	bf00      	nop
 801b55c:	200000d4 	.word	0x200000d4

0801b560 <_ZSt9terminatev>:
 801b560:	b508      	push	{r3, lr}
 801b562:	f7ff fff5 	bl	801b550 <_ZSt13get_terminatev>
 801b566:	f7ff ffee 	bl	801b546 <_ZN10__cxxabiv111__terminateEPFvvE>

0801b56a <abort>:
 801b56a:	b508      	push	{r3, lr}
 801b56c:	2006      	movs	r0, #6
 801b56e:	f000 fc67 	bl	801be40 <raise>
 801b572:	2001      	movs	r0, #1
 801b574:	f7e6 fcc6 	bl	8001f04 <_exit>

0801b578 <__assert_func>:
 801b578:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b57a:	4614      	mov	r4, r2
 801b57c:	461a      	mov	r2, r3
 801b57e:	4b09      	ldr	r3, [pc, #36]	; (801b5a4 <__assert_func+0x2c>)
 801b580:	681b      	ldr	r3, [r3, #0]
 801b582:	4605      	mov	r5, r0
 801b584:	68d8      	ldr	r0, [r3, #12]
 801b586:	b14c      	cbz	r4, 801b59c <__assert_func+0x24>
 801b588:	4b07      	ldr	r3, [pc, #28]	; (801b5a8 <__assert_func+0x30>)
 801b58a:	9100      	str	r1, [sp, #0]
 801b58c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b590:	4906      	ldr	r1, [pc, #24]	; (801b5ac <__assert_func+0x34>)
 801b592:	462b      	mov	r3, r5
 801b594:	f000 f828 	bl	801b5e8 <fiprintf>
 801b598:	f7ff ffe7 	bl	801b56a <abort>
 801b59c:	4b04      	ldr	r3, [pc, #16]	; (801b5b0 <__assert_func+0x38>)
 801b59e:	461c      	mov	r4, r3
 801b5a0:	e7f3      	b.n	801b58a <__assert_func+0x12>
 801b5a2:	bf00      	nop
 801b5a4:	200000d8 	.word	0x200000d8
 801b5a8:	0801fcc5 	.word	0x0801fcc5
 801b5ac:	0801fcd2 	.word	0x0801fcd2
 801b5b0:	0801fd00 	.word	0x0801fd00

0801b5b4 <atexit>:
 801b5b4:	2300      	movs	r3, #0
 801b5b6:	4601      	mov	r1, r0
 801b5b8:	461a      	mov	r2, r3
 801b5ba:	4618      	mov	r0, r3
 801b5bc:	f000 bd1c 	b.w	801bff8 <__register_exitproc>

0801b5c0 <__cxa_atexit>:
 801b5c0:	b510      	push	{r4, lr}
 801b5c2:	4c05      	ldr	r4, [pc, #20]	; (801b5d8 <__cxa_atexit+0x18>)
 801b5c4:	4613      	mov	r3, r2
 801b5c6:	b12c      	cbz	r4, 801b5d4 <__cxa_atexit+0x14>
 801b5c8:	460a      	mov	r2, r1
 801b5ca:	4601      	mov	r1, r0
 801b5cc:	2002      	movs	r0, #2
 801b5ce:	f000 fd13 	bl	801bff8 <__register_exitproc>
 801b5d2:	bd10      	pop	{r4, pc}
 801b5d4:	4620      	mov	r0, r4
 801b5d6:	e7fc      	b.n	801b5d2 <__cxa_atexit+0x12>
 801b5d8:	0801bff9 	.word	0x0801bff9

0801b5dc <__errno>:
 801b5dc:	4b01      	ldr	r3, [pc, #4]	; (801b5e4 <__errno+0x8>)
 801b5de:	6818      	ldr	r0, [r3, #0]
 801b5e0:	4770      	bx	lr
 801b5e2:	bf00      	nop
 801b5e4:	200000d8 	.word	0x200000d8

0801b5e8 <fiprintf>:
 801b5e8:	b40e      	push	{r1, r2, r3}
 801b5ea:	b503      	push	{r0, r1, lr}
 801b5ec:	4601      	mov	r1, r0
 801b5ee:	ab03      	add	r3, sp, #12
 801b5f0:	4805      	ldr	r0, [pc, #20]	; (801b608 <fiprintf+0x20>)
 801b5f2:	f853 2b04 	ldr.w	r2, [r3], #4
 801b5f6:	6800      	ldr	r0, [r0, #0]
 801b5f8:	9301      	str	r3, [sp, #4]
 801b5fa:	f000 f925 	bl	801b848 <_vfiprintf_r>
 801b5fe:	b002      	add	sp, #8
 801b600:	f85d eb04 	ldr.w	lr, [sp], #4
 801b604:	b003      	add	sp, #12
 801b606:	4770      	bx	lr
 801b608:	200000d8 	.word	0x200000d8

0801b60c <__libc_init_array>:
 801b60c:	b570      	push	{r4, r5, r6, lr}
 801b60e:	4d0d      	ldr	r5, [pc, #52]	; (801b644 <__libc_init_array+0x38>)
 801b610:	4c0d      	ldr	r4, [pc, #52]	; (801b648 <__libc_init_array+0x3c>)
 801b612:	1b64      	subs	r4, r4, r5
 801b614:	10a4      	asrs	r4, r4, #2
 801b616:	2600      	movs	r6, #0
 801b618:	42a6      	cmp	r6, r4
 801b61a:	d109      	bne.n	801b630 <__libc_init_array+0x24>
 801b61c:	4d0b      	ldr	r5, [pc, #44]	; (801b64c <__libc_init_array+0x40>)
 801b61e:	4c0c      	ldr	r4, [pc, #48]	; (801b650 <__libc_init_array+0x44>)
 801b620:	f001 f824 	bl	801c66c <_init>
 801b624:	1b64      	subs	r4, r4, r5
 801b626:	10a4      	asrs	r4, r4, #2
 801b628:	2600      	movs	r6, #0
 801b62a:	42a6      	cmp	r6, r4
 801b62c:	d105      	bne.n	801b63a <__libc_init_array+0x2e>
 801b62e:	bd70      	pop	{r4, r5, r6, pc}
 801b630:	f855 3b04 	ldr.w	r3, [r5], #4
 801b634:	4798      	blx	r3
 801b636:	3601      	adds	r6, #1
 801b638:	e7ee      	b.n	801b618 <__libc_init_array+0xc>
 801b63a:	f855 3b04 	ldr.w	r3, [r5], #4
 801b63e:	4798      	blx	r3
 801b640:	3601      	adds	r6, #1
 801b642:	e7f2      	b.n	801b62a <__libc_init_array+0x1e>
 801b644:	0801fdc8 	.word	0x0801fdc8
 801b648:	0801fdc8 	.word	0x0801fdc8
 801b64c:	0801fdc8 	.word	0x0801fdc8
 801b650:	0801fde0 	.word	0x0801fde0

0801b654 <malloc>:
 801b654:	4b02      	ldr	r3, [pc, #8]	; (801b660 <malloc+0xc>)
 801b656:	4601      	mov	r1, r0
 801b658:	6818      	ldr	r0, [r3, #0]
 801b65a:	f000 b871 	b.w	801b740 <_malloc_r>
 801b65e:	bf00      	nop
 801b660:	200000d8 	.word	0x200000d8

0801b664 <free>:
 801b664:	4b02      	ldr	r3, [pc, #8]	; (801b670 <free+0xc>)
 801b666:	4601      	mov	r1, r0
 801b668:	6818      	ldr	r0, [r3, #0]
 801b66a:	f000 b819 	b.w	801b6a0 <_free_r>
 801b66e:	bf00      	nop
 801b670:	200000d8 	.word	0x200000d8

0801b674 <memcpy>:
 801b674:	440a      	add	r2, r1
 801b676:	4291      	cmp	r1, r2
 801b678:	f100 33ff 	add.w	r3, r0, #4294967295
 801b67c:	d100      	bne.n	801b680 <memcpy+0xc>
 801b67e:	4770      	bx	lr
 801b680:	b510      	push	{r4, lr}
 801b682:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b686:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b68a:	4291      	cmp	r1, r2
 801b68c:	d1f9      	bne.n	801b682 <memcpy+0xe>
 801b68e:	bd10      	pop	{r4, pc}

0801b690 <memset>:
 801b690:	4402      	add	r2, r0
 801b692:	4603      	mov	r3, r0
 801b694:	4293      	cmp	r3, r2
 801b696:	d100      	bne.n	801b69a <memset+0xa>
 801b698:	4770      	bx	lr
 801b69a:	f803 1b01 	strb.w	r1, [r3], #1
 801b69e:	e7f9      	b.n	801b694 <memset+0x4>

0801b6a0 <_free_r>:
 801b6a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b6a2:	2900      	cmp	r1, #0
 801b6a4:	d048      	beq.n	801b738 <_free_r+0x98>
 801b6a6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b6aa:	9001      	str	r0, [sp, #4]
 801b6ac:	2b00      	cmp	r3, #0
 801b6ae:	f1a1 0404 	sub.w	r4, r1, #4
 801b6b2:	bfb8      	it	lt
 801b6b4:	18e4      	addlt	r4, r4, r3
 801b6b6:	f000 ff21 	bl	801c4fc <__malloc_lock>
 801b6ba:	4a20      	ldr	r2, [pc, #128]	; (801b73c <_free_r+0x9c>)
 801b6bc:	9801      	ldr	r0, [sp, #4]
 801b6be:	6813      	ldr	r3, [r2, #0]
 801b6c0:	4615      	mov	r5, r2
 801b6c2:	b933      	cbnz	r3, 801b6d2 <_free_r+0x32>
 801b6c4:	6063      	str	r3, [r4, #4]
 801b6c6:	6014      	str	r4, [r2, #0]
 801b6c8:	b003      	add	sp, #12
 801b6ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801b6ce:	f000 bf1b 	b.w	801c508 <__malloc_unlock>
 801b6d2:	42a3      	cmp	r3, r4
 801b6d4:	d90b      	bls.n	801b6ee <_free_r+0x4e>
 801b6d6:	6821      	ldr	r1, [r4, #0]
 801b6d8:	1862      	adds	r2, r4, r1
 801b6da:	4293      	cmp	r3, r2
 801b6dc:	bf04      	itt	eq
 801b6de:	681a      	ldreq	r2, [r3, #0]
 801b6e0:	685b      	ldreq	r3, [r3, #4]
 801b6e2:	6063      	str	r3, [r4, #4]
 801b6e4:	bf04      	itt	eq
 801b6e6:	1852      	addeq	r2, r2, r1
 801b6e8:	6022      	streq	r2, [r4, #0]
 801b6ea:	602c      	str	r4, [r5, #0]
 801b6ec:	e7ec      	b.n	801b6c8 <_free_r+0x28>
 801b6ee:	461a      	mov	r2, r3
 801b6f0:	685b      	ldr	r3, [r3, #4]
 801b6f2:	b10b      	cbz	r3, 801b6f8 <_free_r+0x58>
 801b6f4:	42a3      	cmp	r3, r4
 801b6f6:	d9fa      	bls.n	801b6ee <_free_r+0x4e>
 801b6f8:	6811      	ldr	r1, [r2, #0]
 801b6fa:	1855      	adds	r5, r2, r1
 801b6fc:	42a5      	cmp	r5, r4
 801b6fe:	d10b      	bne.n	801b718 <_free_r+0x78>
 801b700:	6824      	ldr	r4, [r4, #0]
 801b702:	4421      	add	r1, r4
 801b704:	1854      	adds	r4, r2, r1
 801b706:	42a3      	cmp	r3, r4
 801b708:	6011      	str	r1, [r2, #0]
 801b70a:	d1dd      	bne.n	801b6c8 <_free_r+0x28>
 801b70c:	681c      	ldr	r4, [r3, #0]
 801b70e:	685b      	ldr	r3, [r3, #4]
 801b710:	6053      	str	r3, [r2, #4]
 801b712:	4421      	add	r1, r4
 801b714:	6011      	str	r1, [r2, #0]
 801b716:	e7d7      	b.n	801b6c8 <_free_r+0x28>
 801b718:	d902      	bls.n	801b720 <_free_r+0x80>
 801b71a:	230c      	movs	r3, #12
 801b71c:	6003      	str	r3, [r0, #0]
 801b71e:	e7d3      	b.n	801b6c8 <_free_r+0x28>
 801b720:	6825      	ldr	r5, [r4, #0]
 801b722:	1961      	adds	r1, r4, r5
 801b724:	428b      	cmp	r3, r1
 801b726:	bf04      	itt	eq
 801b728:	6819      	ldreq	r1, [r3, #0]
 801b72a:	685b      	ldreq	r3, [r3, #4]
 801b72c:	6063      	str	r3, [r4, #4]
 801b72e:	bf04      	itt	eq
 801b730:	1949      	addeq	r1, r1, r5
 801b732:	6021      	streq	r1, [r4, #0]
 801b734:	6054      	str	r4, [r2, #4]
 801b736:	e7c7      	b.n	801b6c8 <_free_r+0x28>
 801b738:	b003      	add	sp, #12
 801b73a:	bd30      	pop	{r4, r5, pc}
 801b73c:	2000a294 	.word	0x2000a294

0801b740 <_malloc_r>:
 801b740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b742:	1ccd      	adds	r5, r1, #3
 801b744:	f025 0503 	bic.w	r5, r5, #3
 801b748:	3508      	adds	r5, #8
 801b74a:	2d0c      	cmp	r5, #12
 801b74c:	bf38      	it	cc
 801b74e:	250c      	movcc	r5, #12
 801b750:	2d00      	cmp	r5, #0
 801b752:	4606      	mov	r6, r0
 801b754:	db01      	blt.n	801b75a <_malloc_r+0x1a>
 801b756:	42a9      	cmp	r1, r5
 801b758:	d903      	bls.n	801b762 <_malloc_r+0x22>
 801b75a:	230c      	movs	r3, #12
 801b75c:	6033      	str	r3, [r6, #0]
 801b75e:	2000      	movs	r0, #0
 801b760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b762:	f000 fecb 	bl	801c4fc <__malloc_lock>
 801b766:	4921      	ldr	r1, [pc, #132]	; (801b7ec <_malloc_r+0xac>)
 801b768:	680a      	ldr	r2, [r1, #0]
 801b76a:	4614      	mov	r4, r2
 801b76c:	b99c      	cbnz	r4, 801b796 <_malloc_r+0x56>
 801b76e:	4f20      	ldr	r7, [pc, #128]	; (801b7f0 <_malloc_r+0xb0>)
 801b770:	683b      	ldr	r3, [r7, #0]
 801b772:	b923      	cbnz	r3, 801b77e <_malloc_r+0x3e>
 801b774:	4621      	mov	r1, r4
 801b776:	4630      	mov	r0, r6
 801b778:	f000 fb2a 	bl	801bdd0 <_sbrk_r>
 801b77c:	6038      	str	r0, [r7, #0]
 801b77e:	4629      	mov	r1, r5
 801b780:	4630      	mov	r0, r6
 801b782:	f000 fb25 	bl	801bdd0 <_sbrk_r>
 801b786:	1c43      	adds	r3, r0, #1
 801b788:	d123      	bne.n	801b7d2 <_malloc_r+0x92>
 801b78a:	230c      	movs	r3, #12
 801b78c:	6033      	str	r3, [r6, #0]
 801b78e:	4630      	mov	r0, r6
 801b790:	f000 feba 	bl	801c508 <__malloc_unlock>
 801b794:	e7e3      	b.n	801b75e <_malloc_r+0x1e>
 801b796:	6823      	ldr	r3, [r4, #0]
 801b798:	1b5b      	subs	r3, r3, r5
 801b79a:	d417      	bmi.n	801b7cc <_malloc_r+0x8c>
 801b79c:	2b0b      	cmp	r3, #11
 801b79e:	d903      	bls.n	801b7a8 <_malloc_r+0x68>
 801b7a0:	6023      	str	r3, [r4, #0]
 801b7a2:	441c      	add	r4, r3
 801b7a4:	6025      	str	r5, [r4, #0]
 801b7a6:	e004      	b.n	801b7b2 <_malloc_r+0x72>
 801b7a8:	6863      	ldr	r3, [r4, #4]
 801b7aa:	42a2      	cmp	r2, r4
 801b7ac:	bf0c      	ite	eq
 801b7ae:	600b      	streq	r3, [r1, #0]
 801b7b0:	6053      	strne	r3, [r2, #4]
 801b7b2:	4630      	mov	r0, r6
 801b7b4:	f000 fea8 	bl	801c508 <__malloc_unlock>
 801b7b8:	f104 000b 	add.w	r0, r4, #11
 801b7bc:	1d23      	adds	r3, r4, #4
 801b7be:	f020 0007 	bic.w	r0, r0, #7
 801b7c2:	1ac2      	subs	r2, r0, r3
 801b7c4:	d0cc      	beq.n	801b760 <_malloc_r+0x20>
 801b7c6:	1a1b      	subs	r3, r3, r0
 801b7c8:	50a3      	str	r3, [r4, r2]
 801b7ca:	e7c9      	b.n	801b760 <_malloc_r+0x20>
 801b7cc:	4622      	mov	r2, r4
 801b7ce:	6864      	ldr	r4, [r4, #4]
 801b7d0:	e7cc      	b.n	801b76c <_malloc_r+0x2c>
 801b7d2:	1cc4      	adds	r4, r0, #3
 801b7d4:	f024 0403 	bic.w	r4, r4, #3
 801b7d8:	42a0      	cmp	r0, r4
 801b7da:	d0e3      	beq.n	801b7a4 <_malloc_r+0x64>
 801b7dc:	1a21      	subs	r1, r4, r0
 801b7de:	4630      	mov	r0, r6
 801b7e0:	f000 faf6 	bl	801bdd0 <_sbrk_r>
 801b7e4:	3001      	adds	r0, #1
 801b7e6:	d1dd      	bne.n	801b7a4 <_malloc_r+0x64>
 801b7e8:	e7cf      	b.n	801b78a <_malloc_r+0x4a>
 801b7ea:	bf00      	nop
 801b7ec:	2000a294 	.word	0x2000a294
 801b7f0:	2000a298 	.word	0x2000a298

0801b7f4 <__sfputc_r>:
 801b7f4:	6893      	ldr	r3, [r2, #8]
 801b7f6:	3b01      	subs	r3, #1
 801b7f8:	2b00      	cmp	r3, #0
 801b7fa:	b410      	push	{r4}
 801b7fc:	6093      	str	r3, [r2, #8]
 801b7fe:	da08      	bge.n	801b812 <__sfputc_r+0x1e>
 801b800:	6994      	ldr	r4, [r2, #24]
 801b802:	42a3      	cmp	r3, r4
 801b804:	db01      	blt.n	801b80a <__sfputc_r+0x16>
 801b806:	290a      	cmp	r1, #10
 801b808:	d103      	bne.n	801b812 <__sfputc_r+0x1e>
 801b80a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b80e:	f000 bb33 	b.w	801be78 <__swbuf_r>
 801b812:	6813      	ldr	r3, [r2, #0]
 801b814:	1c58      	adds	r0, r3, #1
 801b816:	6010      	str	r0, [r2, #0]
 801b818:	7019      	strb	r1, [r3, #0]
 801b81a:	4608      	mov	r0, r1
 801b81c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b820:	4770      	bx	lr

0801b822 <__sfputs_r>:
 801b822:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b824:	4606      	mov	r6, r0
 801b826:	460f      	mov	r7, r1
 801b828:	4614      	mov	r4, r2
 801b82a:	18d5      	adds	r5, r2, r3
 801b82c:	42ac      	cmp	r4, r5
 801b82e:	d101      	bne.n	801b834 <__sfputs_r+0x12>
 801b830:	2000      	movs	r0, #0
 801b832:	e007      	b.n	801b844 <__sfputs_r+0x22>
 801b834:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b838:	463a      	mov	r2, r7
 801b83a:	4630      	mov	r0, r6
 801b83c:	f7ff ffda 	bl	801b7f4 <__sfputc_r>
 801b840:	1c43      	adds	r3, r0, #1
 801b842:	d1f3      	bne.n	801b82c <__sfputs_r+0xa>
 801b844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b848 <_vfiprintf_r>:
 801b848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b84c:	460d      	mov	r5, r1
 801b84e:	b09d      	sub	sp, #116	; 0x74
 801b850:	4614      	mov	r4, r2
 801b852:	4698      	mov	r8, r3
 801b854:	4606      	mov	r6, r0
 801b856:	b118      	cbz	r0, 801b860 <_vfiprintf_r+0x18>
 801b858:	6983      	ldr	r3, [r0, #24]
 801b85a:	b90b      	cbnz	r3, 801b860 <_vfiprintf_r+0x18>
 801b85c:	f000 fd48 	bl	801c2f0 <__sinit>
 801b860:	4b89      	ldr	r3, [pc, #548]	; (801ba88 <_vfiprintf_r+0x240>)
 801b862:	429d      	cmp	r5, r3
 801b864:	d11b      	bne.n	801b89e <_vfiprintf_r+0x56>
 801b866:	6875      	ldr	r5, [r6, #4]
 801b868:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b86a:	07d9      	lsls	r1, r3, #31
 801b86c:	d405      	bmi.n	801b87a <_vfiprintf_r+0x32>
 801b86e:	89ab      	ldrh	r3, [r5, #12]
 801b870:	059a      	lsls	r2, r3, #22
 801b872:	d402      	bmi.n	801b87a <_vfiprintf_r+0x32>
 801b874:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b876:	f000 fdd9 	bl	801c42c <__retarget_lock_acquire_recursive>
 801b87a:	89ab      	ldrh	r3, [r5, #12]
 801b87c:	071b      	lsls	r3, r3, #28
 801b87e:	d501      	bpl.n	801b884 <_vfiprintf_r+0x3c>
 801b880:	692b      	ldr	r3, [r5, #16]
 801b882:	b9eb      	cbnz	r3, 801b8c0 <_vfiprintf_r+0x78>
 801b884:	4629      	mov	r1, r5
 801b886:	4630      	mov	r0, r6
 801b888:	f000 fb48 	bl	801bf1c <__swsetup_r>
 801b88c:	b1c0      	cbz	r0, 801b8c0 <_vfiprintf_r+0x78>
 801b88e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b890:	07dc      	lsls	r4, r3, #31
 801b892:	d50e      	bpl.n	801b8b2 <_vfiprintf_r+0x6a>
 801b894:	f04f 30ff 	mov.w	r0, #4294967295
 801b898:	b01d      	add	sp, #116	; 0x74
 801b89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b89e:	4b7b      	ldr	r3, [pc, #492]	; (801ba8c <_vfiprintf_r+0x244>)
 801b8a0:	429d      	cmp	r5, r3
 801b8a2:	d101      	bne.n	801b8a8 <_vfiprintf_r+0x60>
 801b8a4:	68b5      	ldr	r5, [r6, #8]
 801b8a6:	e7df      	b.n	801b868 <_vfiprintf_r+0x20>
 801b8a8:	4b79      	ldr	r3, [pc, #484]	; (801ba90 <_vfiprintf_r+0x248>)
 801b8aa:	429d      	cmp	r5, r3
 801b8ac:	bf08      	it	eq
 801b8ae:	68f5      	ldreq	r5, [r6, #12]
 801b8b0:	e7da      	b.n	801b868 <_vfiprintf_r+0x20>
 801b8b2:	89ab      	ldrh	r3, [r5, #12]
 801b8b4:	0598      	lsls	r0, r3, #22
 801b8b6:	d4ed      	bmi.n	801b894 <_vfiprintf_r+0x4c>
 801b8b8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b8ba:	f000 fdb9 	bl	801c430 <__retarget_lock_release_recursive>
 801b8be:	e7e9      	b.n	801b894 <_vfiprintf_r+0x4c>
 801b8c0:	2300      	movs	r3, #0
 801b8c2:	9309      	str	r3, [sp, #36]	; 0x24
 801b8c4:	2320      	movs	r3, #32
 801b8c6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b8ca:	f8cd 800c 	str.w	r8, [sp, #12]
 801b8ce:	2330      	movs	r3, #48	; 0x30
 801b8d0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801ba94 <_vfiprintf_r+0x24c>
 801b8d4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b8d8:	f04f 0901 	mov.w	r9, #1
 801b8dc:	4623      	mov	r3, r4
 801b8de:	469a      	mov	sl, r3
 801b8e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b8e4:	b10a      	cbz	r2, 801b8ea <_vfiprintf_r+0xa2>
 801b8e6:	2a25      	cmp	r2, #37	; 0x25
 801b8e8:	d1f9      	bne.n	801b8de <_vfiprintf_r+0x96>
 801b8ea:	ebba 0b04 	subs.w	fp, sl, r4
 801b8ee:	d00b      	beq.n	801b908 <_vfiprintf_r+0xc0>
 801b8f0:	465b      	mov	r3, fp
 801b8f2:	4622      	mov	r2, r4
 801b8f4:	4629      	mov	r1, r5
 801b8f6:	4630      	mov	r0, r6
 801b8f8:	f7ff ff93 	bl	801b822 <__sfputs_r>
 801b8fc:	3001      	adds	r0, #1
 801b8fe:	f000 80aa 	beq.w	801ba56 <_vfiprintf_r+0x20e>
 801b902:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b904:	445a      	add	r2, fp
 801b906:	9209      	str	r2, [sp, #36]	; 0x24
 801b908:	f89a 3000 	ldrb.w	r3, [sl]
 801b90c:	2b00      	cmp	r3, #0
 801b90e:	f000 80a2 	beq.w	801ba56 <_vfiprintf_r+0x20e>
 801b912:	2300      	movs	r3, #0
 801b914:	f04f 32ff 	mov.w	r2, #4294967295
 801b918:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b91c:	f10a 0a01 	add.w	sl, sl, #1
 801b920:	9304      	str	r3, [sp, #16]
 801b922:	9307      	str	r3, [sp, #28]
 801b924:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b928:	931a      	str	r3, [sp, #104]	; 0x68
 801b92a:	4654      	mov	r4, sl
 801b92c:	2205      	movs	r2, #5
 801b92e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b932:	4858      	ldr	r0, [pc, #352]	; (801ba94 <_vfiprintf_r+0x24c>)
 801b934:	f7e4 fc64 	bl	8000200 <memchr>
 801b938:	9a04      	ldr	r2, [sp, #16]
 801b93a:	b9d8      	cbnz	r0, 801b974 <_vfiprintf_r+0x12c>
 801b93c:	06d1      	lsls	r1, r2, #27
 801b93e:	bf44      	itt	mi
 801b940:	2320      	movmi	r3, #32
 801b942:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b946:	0713      	lsls	r3, r2, #28
 801b948:	bf44      	itt	mi
 801b94a:	232b      	movmi	r3, #43	; 0x2b
 801b94c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b950:	f89a 3000 	ldrb.w	r3, [sl]
 801b954:	2b2a      	cmp	r3, #42	; 0x2a
 801b956:	d015      	beq.n	801b984 <_vfiprintf_r+0x13c>
 801b958:	9a07      	ldr	r2, [sp, #28]
 801b95a:	4654      	mov	r4, sl
 801b95c:	2000      	movs	r0, #0
 801b95e:	f04f 0c0a 	mov.w	ip, #10
 801b962:	4621      	mov	r1, r4
 801b964:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b968:	3b30      	subs	r3, #48	; 0x30
 801b96a:	2b09      	cmp	r3, #9
 801b96c:	d94e      	bls.n	801ba0c <_vfiprintf_r+0x1c4>
 801b96e:	b1b0      	cbz	r0, 801b99e <_vfiprintf_r+0x156>
 801b970:	9207      	str	r2, [sp, #28]
 801b972:	e014      	b.n	801b99e <_vfiprintf_r+0x156>
 801b974:	eba0 0308 	sub.w	r3, r0, r8
 801b978:	fa09 f303 	lsl.w	r3, r9, r3
 801b97c:	4313      	orrs	r3, r2
 801b97e:	9304      	str	r3, [sp, #16]
 801b980:	46a2      	mov	sl, r4
 801b982:	e7d2      	b.n	801b92a <_vfiprintf_r+0xe2>
 801b984:	9b03      	ldr	r3, [sp, #12]
 801b986:	1d19      	adds	r1, r3, #4
 801b988:	681b      	ldr	r3, [r3, #0]
 801b98a:	9103      	str	r1, [sp, #12]
 801b98c:	2b00      	cmp	r3, #0
 801b98e:	bfbb      	ittet	lt
 801b990:	425b      	neglt	r3, r3
 801b992:	f042 0202 	orrlt.w	r2, r2, #2
 801b996:	9307      	strge	r3, [sp, #28]
 801b998:	9307      	strlt	r3, [sp, #28]
 801b99a:	bfb8      	it	lt
 801b99c:	9204      	strlt	r2, [sp, #16]
 801b99e:	7823      	ldrb	r3, [r4, #0]
 801b9a0:	2b2e      	cmp	r3, #46	; 0x2e
 801b9a2:	d10c      	bne.n	801b9be <_vfiprintf_r+0x176>
 801b9a4:	7863      	ldrb	r3, [r4, #1]
 801b9a6:	2b2a      	cmp	r3, #42	; 0x2a
 801b9a8:	d135      	bne.n	801ba16 <_vfiprintf_r+0x1ce>
 801b9aa:	9b03      	ldr	r3, [sp, #12]
 801b9ac:	1d1a      	adds	r2, r3, #4
 801b9ae:	681b      	ldr	r3, [r3, #0]
 801b9b0:	9203      	str	r2, [sp, #12]
 801b9b2:	2b00      	cmp	r3, #0
 801b9b4:	bfb8      	it	lt
 801b9b6:	f04f 33ff 	movlt.w	r3, #4294967295
 801b9ba:	3402      	adds	r4, #2
 801b9bc:	9305      	str	r3, [sp, #20]
 801b9be:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801baa4 <_vfiprintf_r+0x25c>
 801b9c2:	7821      	ldrb	r1, [r4, #0]
 801b9c4:	2203      	movs	r2, #3
 801b9c6:	4650      	mov	r0, sl
 801b9c8:	f7e4 fc1a 	bl	8000200 <memchr>
 801b9cc:	b140      	cbz	r0, 801b9e0 <_vfiprintf_r+0x198>
 801b9ce:	2340      	movs	r3, #64	; 0x40
 801b9d0:	eba0 000a 	sub.w	r0, r0, sl
 801b9d4:	fa03 f000 	lsl.w	r0, r3, r0
 801b9d8:	9b04      	ldr	r3, [sp, #16]
 801b9da:	4303      	orrs	r3, r0
 801b9dc:	3401      	adds	r4, #1
 801b9de:	9304      	str	r3, [sp, #16]
 801b9e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b9e4:	482c      	ldr	r0, [pc, #176]	; (801ba98 <_vfiprintf_r+0x250>)
 801b9e6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b9ea:	2206      	movs	r2, #6
 801b9ec:	f7e4 fc08 	bl	8000200 <memchr>
 801b9f0:	2800      	cmp	r0, #0
 801b9f2:	d03f      	beq.n	801ba74 <_vfiprintf_r+0x22c>
 801b9f4:	4b29      	ldr	r3, [pc, #164]	; (801ba9c <_vfiprintf_r+0x254>)
 801b9f6:	bb1b      	cbnz	r3, 801ba40 <_vfiprintf_r+0x1f8>
 801b9f8:	9b03      	ldr	r3, [sp, #12]
 801b9fa:	3307      	adds	r3, #7
 801b9fc:	f023 0307 	bic.w	r3, r3, #7
 801ba00:	3308      	adds	r3, #8
 801ba02:	9303      	str	r3, [sp, #12]
 801ba04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba06:	443b      	add	r3, r7
 801ba08:	9309      	str	r3, [sp, #36]	; 0x24
 801ba0a:	e767      	b.n	801b8dc <_vfiprintf_r+0x94>
 801ba0c:	fb0c 3202 	mla	r2, ip, r2, r3
 801ba10:	460c      	mov	r4, r1
 801ba12:	2001      	movs	r0, #1
 801ba14:	e7a5      	b.n	801b962 <_vfiprintf_r+0x11a>
 801ba16:	2300      	movs	r3, #0
 801ba18:	3401      	adds	r4, #1
 801ba1a:	9305      	str	r3, [sp, #20]
 801ba1c:	4619      	mov	r1, r3
 801ba1e:	f04f 0c0a 	mov.w	ip, #10
 801ba22:	4620      	mov	r0, r4
 801ba24:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ba28:	3a30      	subs	r2, #48	; 0x30
 801ba2a:	2a09      	cmp	r2, #9
 801ba2c:	d903      	bls.n	801ba36 <_vfiprintf_r+0x1ee>
 801ba2e:	2b00      	cmp	r3, #0
 801ba30:	d0c5      	beq.n	801b9be <_vfiprintf_r+0x176>
 801ba32:	9105      	str	r1, [sp, #20]
 801ba34:	e7c3      	b.n	801b9be <_vfiprintf_r+0x176>
 801ba36:	fb0c 2101 	mla	r1, ip, r1, r2
 801ba3a:	4604      	mov	r4, r0
 801ba3c:	2301      	movs	r3, #1
 801ba3e:	e7f0      	b.n	801ba22 <_vfiprintf_r+0x1da>
 801ba40:	ab03      	add	r3, sp, #12
 801ba42:	9300      	str	r3, [sp, #0]
 801ba44:	462a      	mov	r2, r5
 801ba46:	4b16      	ldr	r3, [pc, #88]	; (801baa0 <_vfiprintf_r+0x258>)
 801ba48:	a904      	add	r1, sp, #16
 801ba4a:	4630      	mov	r0, r6
 801ba4c:	f3af 8000 	nop.w
 801ba50:	4607      	mov	r7, r0
 801ba52:	1c78      	adds	r0, r7, #1
 801ba54:	d1d6      	bne.n	801ba04 <_vfiprintf_r+0x1bc>
 801ba56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ba58:	07d9      	lsls	r1, r3, #31
 801ba5a:	d405      	bmi.n	801ba68 <_vfiprintf_r+0x220>
 801ba5c:	89ab      	ldrh	r3, [r5, #12]
 801ba5e:	059a      	lsls	r2, r3, #22
 801ba60:	d402      	bmi.n	801ba68 <_vfiprintf_r+0x220>
 801ba62:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ba64:	f000 fce4 	bl	801c430 <__retarget_lock_release_recursive>
 801ba68:	89ab      	ldrh	r3, [r5, #12]
 801ba6a:	065b      	lsls	r3, r3, #25
 801ba6c:	f53f af12 	bmi.w	801b894 <_vfiprintf_r+0x4c>
 801ba70:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ba72:	e711      	b.n	801b898 <_vfiprintf_r+0x50>
 801ba74:	ab03      	add	r3, sp, #12
 801ba76:	9300      	str	r3, [sp, #0]
 801ba78:	462a      	mov	r2, r5
 801ba7a:	4b09      	ldr	r3, [pc, #36]	; (801baa0 <_vfiprintf_r+0x258>)
 801ba7c:	a904      	add	r1, sp, #16
 801ba7e:	4630      	mov	r0, r6
 801ba80:	f000 f880 	bl	801bb84 <_printf_i>
 801ba84:	e7e4      	b.n	801ba50 <_vfiprintf_r+0x208>
 801ba86:	bf00      	nop
 801ba88:	0801fd60 	.word	0x0801fd60
 801ba8c:	0801fd80 	.word	0x0801fd80
 801ba90:	0801fd40 	.word	0x0801fd40
 801ba94:	0801fd08 	.word	0x0801fd08
 801ba98:	0801fd12 	.word	0x0801fd12
 801ba9c:	00000000 	.word	0x00000000
 801baa0:	0801b823 	.word	0x0801b823
 801baa4:	0801fd0e 	.word	0x0801fd0e

0801baa8 <_printf_common>:
 801baa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801baac:	4616      	mov	r6, r2
 801baae:	4699      	mov	r9, r3
 801bab0:	688a      	ldr	r2, [r1, #8]
 801bab2:	690b      	ldr	r3, [r1, #16]
 801bab4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801bab8:	4293      	cmp	r3, r2
 801baba:	bfb8      	it	lt
 801babc:	4613      	movlt	r3, r2
 801babe:	6033      	str	r3, [r6, #0]
 801bac0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801bac4:	4607      	mov	r7, r0
 801bac6:	460c      	mov	r4, r1
 801bac8:	b10a      	cbz	r2, 801bace <_printf_common+0x26>
 801baca:	3301      	adds	r3, #1
 801bacc:	6033      	str	r3, [r6, #0]
 801bace:	6823      	ldr	r3, [r4, #0]
 801bad0:	0699      	lsls	r1, r3, #26
 801bad2:	bf42      	ittt	mi
 801bad4:	6833      	ldrmi	r3, [r6, #0]
 801bad6:	3302      	addmi	r3, #2
 801bad8:	6033      	strmi	r3, [r6, #0]
 801bada:	6825      	ldr	r5, [r4, #0]
 801badc:	f015 0506 	ands.w	r5, r5, #6
 801bae0:	d106      	bne.n	801baf0 <_printf_common+0x48>
 801bae2:	f104 0a19 	add.w	sl, r4, #25
 801bae6:	68e3      	ldr	r3, [r4, #12]
 801bae8:	6832      	ldr	r2, [r6, #0]
 801baea:	1a9b      	subs	r3, r3, r2
 801baec:	42ab      	cmp	r3, r5
 801baee:	dc26      	bgt.n	801bb3e <_printf_common+0x96>
 801baf0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801baf4:	1e13      	subs	r3, r2, #0
 801baf6:	6822      	ldr	r2, [r4, #0]
 801baf8:	bf18      	it	ne
 801bafa:	2301      	movne	r3, #1
 801bafc:	0692      	lsls	r2, r2, #26
 801bafe:	d42b      	bmi.n	801bb58 <_printf_common+0xb0>
 801bb00:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bb04:	4649      	mov	r1, r9
 801bb06:	4638      	mov	r0, r7
 801bb08:	47c0      	blx	r8
 801bb0a:	3001      	adds	r0, #1
 801bb0c:	d01e      	beq.n	801bb4c <_printf_common+0xa4>
 801bb0e:	6823      	ldr	r3, [r4, #0]
 801bb10:	68e5      	ldr	r5, [r4, #12]
 801bb12:	6832      	ldr	r2, [r6, #0]
 801bb14:	f003 0306 	and.w	r3, r3, #6
 801bb18:	2b04      	cmp	r3, #4
 801bb1a:	bf08      	it	eq
 801bb1c:	1aad      	subeq	r5, r5, r2
 801bb1e:	68a3      	ldr	r3, [r4, #8]
 801bb20:	6922      	ldr	r2, [r4, #16]
 801bb22:	bf0c      	ite	eq
 801bb24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bb28:	2500      	movne	r5, #0
 801bb2a:	4293      	cmp	r3, r2
 801bb2c:	bfc4      	itt	gt
 801bb2e:	1a9b      	subgt	r3, r3, r2
 801bb30:	18ed      	addgt	r5, r5, r3
 801bb32:	2600      	movs	r6, #0
 801bb34:	341a      	adds	r4, #26
 801bb36:	42b5      	cmp	r5, r6
 801bb38:	d11a      	bne.n	801bb70 <_printf_common+0xc8>
 801bb3a:	2000      	movs	r0, #0
 801bb3c:	e008      	b.n	801bb50 <_printf_common+0xa8>
 801bb3e:	2301      	movs	r3, #1
 801bb40:	4652      	mov	r2, sl
 801bb42:	4649      	mov	r1, r9
 801bb44:	4638      	mov	r0, r7
 801bb46:	47c0      	blx	r8
 801bb48:	3001      	adds	r0, #1
 801bb4a:	d103      	bne.n	801bb54 <_printf_common+0xac>
 801bb4c:	f04f 30ff 	mov.w	r0, #4294967295
 801bb50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bb54:	3501      	adds	r5, #1
 801bb56:	e7c6      	b.n	801bae6 <_printf_common+0x3e>
 801bb58:	18e1      	adds	r1, r4, r3
 801bb5a:	1c5a      	adds	r2, r3, #1
 801bb5c:	2030      	movs	r0, #48	; 0x30
 801bb5e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801bb62:	4422      	add	r2, r4
 801bb64:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801bb68:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801bb6c:	3302      	adds	r3, #2
 801bb6e:	e7c7      	b.n	801bb00 <_printf_common+0x58>
 801bb70:	2301      	movs	r3, #1
 801bb72:	4622      	mov	r2, r4
 801bb74:	4649      	mov	r1, r9
 801bb76:	4638      	mov	r0, r7
 801bb78:	47c0      	blx	r8
 801bb7a:	3001      	adds	r0, #1
 801bb7c:	d0e6      	beq.n	801bb4c <_printf_common+0xa4>
 801bb7e:	3601      	adds	r6, #1
 801bb80:	e7d9      	b.n	801bb36 <_printf_common+0x8e>
	...

0801bb84 <_printf_i>:
 801bb84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bb88:	460c      	mov	r4, r1
 801bb8a:	4691      	mov	r9, r2
 801bb8c:	7e27      	ldrb	r7, [r4, #24]
 801bb8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bb90:	2f78      	cmp	r7, #120	; 0x78
 801bb92:	4680      	mov	r8, r0
 801bb94:	469a      	mov	sl, r3
 801bb96:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bb9a:	d807      	bhi.n	801bbac <_printf_i+0x28>
 801bb9c:	2f62      	cmp	r7, #98	; 0x62
 801bb9e:	d80a      	bhi.n	801bbb6 <_printf_i+0x32>
 801bba0:	2f00      	cmp	r7, #0
 801bba2:	f000 80d8 	beq.w	801bd56 <_printf_i+0x1d2>
 801bba6:	2f58      	cmp	r7, #88	; 0x58
 801bba8:	f000 80a3 	beq.w	801bcf2 <_printf_i+0x16e>
 801bbac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801bbb0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801bbb4:	e03a      	b.n	801bc2c <_printf_i+0xa8>
 801bbb6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801bbba:	2b15      	cmp	r3, #21
 801bbbc:	d8f6      	bhi.n	801bbac <_printf_i+0x28>
 801bbbe:	a001      	add	r0, pc, #4	; (adr r0, 801bbc4 <_printf_i+0x40>)
 801bbc0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801bbc4:	0801bc1d 	.word	0x0801bc1d
 801bbc8:	0801bc31 	.word	0x0801bc31
 801bbcc:	0801bbad 	.word	0x0801bbad
 801bbd0:	0801bbad 	.word	0x0801bbad
 801bbd4:	0801bbad 	.word	0x0801bbad
 801bbd8:	0801bbad 	.word	0x0801bbad
 801bbdc:	0801bc31 	.word	0x0801bc31
 801bbe0:	0801bbad 	.word	0x0801bbad
 801bbe4:	0801bbad 	.word	0x0801bbad
 801bbe8:	0801bbad 	.word	0x0801bbad
 801bbec:	0801bbad 	.word	0x0801bbad
 801bbf0:	0801bd3d 	.word	0x0801bd3d
 801bbf4:	0801bc61 	.word	0x0801bc61
 801bbf8:	0801bd1f 	.word	0x0801bd1f
 801bbfc:	0801bbad 	.word	0x0801bbad
 801bc00:	0801bbad 	.word	0x0801bbad
 801bc04:	0801bd5f 	.word	0x0801bd5f
 801bc08:	0801bbad 	.word	0x0801bbad
 801bc0c:	0801bc61 	.word	0x0801bc61
 801bc10:	0801bbad 	.word	0x0801bbad
 801bc14:	0801bbad 	.word	0x0801bbad
 801bc18:	0801bd27 	.word	0x0801bd27
 801bc1c:	680b      	ldr	r3, [r1, #0]
 801bc1e:	1d1a      	adds	r2, r3, #4
 801bc20:	681b      	ldr	r3, [r3, #0]
 801bc22:	600a      	str	r2, [r1, #0]
 801bc24:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801bc28:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bc2c:	2301      	movs	r3, #1
 801bc2e:	e0a3      	b.n	801bd78 <_printf_i+0x1f4>
 801bc30:	6825      	ldr	r5, [r4, #0]
 801bc32:	6808      	ldr	r0, [r1, #0]
 801bc34:	062e      	lsls	r6, r5, #24
 801bc36:	f100 0304 	add.w	r3, r0, #4
 801bc3a:	d50a      	bpl.n	801bc52 <_printf_i+0xce>
 801bc3c:	6805      	ldr	r5, [r0, #0]
 801bc3e:	600b      	str	r3, [r1, #0]
 801bc40:	2d00      	cmp	r5, #0
 801bc42:	da03      	bge.n	801bc4c <_printf_i+0xc8>
 801bc44:	232d      	movs	r3, #45	; 0x2d
 801bc46:	426d      	negs	r5, r5
 801bc48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bc4c:	485e      	ldr	r0, [pc, #376]	; (801bdc8 <_printf_i+0x244>)
 801bc4e:	230a      	movs	r3, #10
 801bc50:	e019      	b.n	801bc86 <_printf_i+0x102>
 801bc52:	f015 0f40 	tst.w	r5, #64	; 0x40
 801bc56:	6805      	ldr	r5, [r0, #0]
 801bc58:	600b      	str	r3, [r1, #0]
 801bc5a:	bf18      	it	ne
 801bc5c:	b22d      	sxthne	r5, r5
 801bc5e:	e7ef      	b.n	801bc40 <_printf_i+0xbc>
 801bc60:	680b      	ldr	r3, [r1, #0]
 801bc62:	6825      	ldr	r5, [r4, #0]
 801bc64:	1d18      	adds	r0, r3, #4
 801bc66:	6008      	str	r0, [r1, #0]
 801bc68:	0628      	lsls	r0, r5, #24
 801bc6a:	d501      	bpl.n	801bc70 <_printf_i+0xec>
 801bc6c:	681d      	ldr	r5, [r3, #0]
 801bc6e:	e002      	b.n	801bc76 <_printf_i+0xf2>
 801bc70:	0669      	lsls	r1, r5, #25
 801bc72:	d5fb      	bpl.n	801bc6c <_printf_i+0xe8>
 801bc74:	881d      	ldrh	r5, [r3, #0]
 801bc76:	4854      	ldr	r0, [pc, #336]	; (801bdc8 <_printf_i+0x244>)
 801bc78:	2f6f      	cmp	r7, #111	; 0x6f
 801bc7a:	bf0c      	ite	eq
 801bc7c:	2308      	moveq	r3, #8
 801bc7e:	230a      	movne	r3, #10
 801bc80:	2100      	movs	r1, #0
 801bc82:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801bc86:	6866      	ldr	r6, [r4, #4]
 801bc88:	60a6      	str	r6, [r4, #8]
 801bc8a:	2e00      	cmp	r6, #0
 801bc8c:	bfa2      	ittt	ge
 801bc8e:	6821      	ldrge	r1, [r4, #0]
 801bc90:	f021 0104 	bicge.w	r1, r1, #4
 801bc94:	6021      	strge	r1, [r4, #0]
 801bc96:	b90d      	cbnz	r5, 801bc9c <_printf_i+0x118>
 801bc98:	2e00      	cmp	r6, #0
 801bc9a:	d04d      	beq.n	801bd38 <_printf_i+0x1b4>
 801bc9c:	4616      	mov	r6, r2
 801bc9e:	fbb5 f1f3 	udiv	r1, r5, r3
 801bca2:	fb03 5711 	mls	r7, r3, r1, r5
 801bca6:	5dc7      	ldrb	r7, [r0, r7]
 801bca8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801bcac:	462f      	mov	r7, r5
 801bcae:	42bb      	cmp	r3, r7
 801bcb0:	460d      	mov	r5, r1
 801bcb2:	d9f4      	bls.n	801bc9e <_printf_i+0x11a>
 801bcb4:	2b08      	cmp	r3, #8
 801bcb6:	d10b      	bne.n	801bcd0 <_printf_i+0x14c>
 801bcb8:	6823      	ldr	r3, [r4, #0]
 801bcba:	07df      	lsls	r7, r3, #31
 801bcbc:	d508      	bpl.n	801bcd0 <_printf_i+0x14c>
 801bcbe:	6923      	ldr	r3, [r4, #16]
 801bcc0:	6861      	ldr	r1, [r4, #4]
 801bcc2:	4299      	cmp	r1, r3
 801bcc4:	bfde      	ittt	le
 801bcc6:	2330      	movle	r3, #48	; 0x30
 801bcc8:	f806 3c01 	strble.w	r3, [r6, #-1]
 801bccc:	f106 36ff 	addle.w	r6, r6, #4294967295
 801bcd0:	1b92      	subs	r2, r2, r6
 801bcd2:	6122      	str	r2, [r4, #16]
 801bcd4:	f8cd a000 	str.w	sl, [sp]
 801bcd8:	464b      	mov	r3, r9
 801bcda:	aa03      	add	r2, sp, #12
 801bcdc:	4621      	mov	r1, r4
 801bcde:	4640      	mov	r0, r8
 801bce0:	f7ff fee2 	bl	801baa8 <_printf_common>
 801bce4:	3001      	adds	r0, #1
 801bce6:	d14c      	bne.n	801bd82 <_printf_i+0x1fe>
 801bce8:	f04f 30ff 	mov.w	r0, #4294967295
 801bcec:	b004      	add	sp, #16
 801bcee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bcf2:	4835      	ldr	r0, [pc, #212]	; (801bdc8 <_printf_i+0x244>)
 801bcf4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801bcf8:	6823      	ldr	r3, [r4, #0]
 801bcfa:	680e      	ldr	r6, [r1, #0]
 801bcfc:	061f      	lsls	r7, r3, #24
 801bcfe:	f856 5b04 	ldr.w	r5, [r6], #4
 801bd02:	600e      	str	r6, [r1, #0]
 801bd04:	d514      	bpl.n	801bd30 <_printf_i+0x1ac>
 801bd06:	07d9      	lsls	r1, r3, #31
 801bd08:	bf44      	itt	mi
 801bd0a:	f043 0320 	orrmi.w	r3, r3, #32
 801bd0e:	6023      	strmi	r3, [r4, #0]
 801bd10:	b91d      	cbnz	r5, 801bd1a <_printf_i+0x196>
 801bd12:	6823      	ldr	r3, [r4, #0]
 801bd14:	f023 0320 	bic.w	r3, r3, #32
 801bd18:	6023      	str	r3, [r4, #0]
 801bd1a:	2310      	movs	r3, #16
 801bd1c:	e7b0      	b.n	801bc80 <_printf_i+0xfc>
 801bd1e:	6823      	ldr	r3, [r4, #0]
 801bd20:	f043 0320 	orr.w	r3, r3, #32
 801bd24:	6023      	str	r3, [r4, #0]
 801bd26:	2378      	movs	r3, #120	; 0x78
 801bd28:	4828      	ldr	r0, [pc, #160]	; (801bdcc <_printf_i+0x248>)
 801bd2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801bd2e:	e7e3      	b.n	801bcf8 <_printf_i+0x174>
 801bd30:	065e      	lsls	r6, r3, #25
 801bd32:	bf48      	it	mi
 801bd34:	b2ad      	uxthmi	r5, r5
 801bd36:	e7e6      	b.n	801bd06 <_printf_i+0x182>
 801bd38:	4616      	mov	r6, r2
 801bd3a:	e7bb      	b.n	801bcb4 <_printf_i+0x130>
 801bd3c:	680b      	ldr	r3, [r1, #0]
 801bd3e:	6826      	ldr	r6, [r4, #0]
 801bd40:	6960      	ldr	r0, [r4, #20]
 801bd42:	1d1d      	adds	r5, r3, #4
 801bd44:	600d      	str	r5, [r1, #0]
 801bd46:	0635      	lsls	r5, r6, #24
 801bd48:	681b      	ldr	r3, [r3, #0]
 801bd4a:	d501      	bpl.n	801bd50 <_printf_i+0x1cc>
 801bd4c:	6018      	str	r0, [r3, #0]
 801bd4e:	e002      	b.n	801bd56 <_printf_i+0x1d2>
 801bd50:	0671      	lsls	r1, r6, #25
 801bd52:	d5fb      	bpl.n	801bd4c <_printf_i+0x1c8>
 801bd54:	8018      	strh	r0, [r3, #0]
 801bd56:	2300      	movs	r3, #0
 801bd58:	6123      	str	r3, [r4, #16]
 801bd5a:	4616      	mov	r6, r2
 801bd5c:	e7ba      	b.n	801bcd4 <_printf_i+0x150>
 801bd5e:	680b      	ldr	r3, [r1, #0]
 801bd60:	1d1a      	adds	r2, r3, #4
 801bd62:	600a      	str	r2, [r1, #0]
 801bd64:	681e      	ldr	r6, [r3, #0]
 801bd66:	6862      	ldr	r2, [r4, #4]
 801bd68:	2100      	movs	r1, #0
 801bd6a:	4630      	mov	r0, r6
 801bd6c:	f7e4 fa48 	bl	8000200 <memchr>
 801bd70:	b108      	cbz	r0, 801bd76 <_printf_i+0x1f2>
 801bd72:	1b80      	subs	r0, r0, r6
 801bd74:	6060      	str	r0, [r4, #4]
 801bd76:	6863      	ldr	r3, [r4, #4]
 801bd78:	6123      	str	r3, [r4, #16]
 801bd7a:	2300      	movs	r3, #0
 801bd7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801bd80:	e7a8      	b.n	801bcd4 <_printf_i+0x150>
 801bd82:	6923      	ldr	r3, [r4, #16]
 801bd84:	4632      	mov	r2, r6
 801bd86:	4649      	mov	r1, r9
 801bd88:	4640      	mov	r0, r8
 801bd8a:	47d0      	blx	sl
 801bd8c:	3001      	adds	r0, #1
 801bd8e:	d0ab      	beq.n	801bce8 <_printf_i+0x164>
 801bd90:	6823      	ldr	r3, [r4, #0]
 801bd92:	079b      	lsls	r3, r3, #30
 801bd94:	d413      	bmi.n	801bdbe <_printf_i+0x23a>
 801bd96:	68e0      	ldr	r0, [r4, #12]
 801bd98:	9b03      	ldr	r3, [sp, #12]
 801bd9a:	4298      	cmp	r0, r3
 801bd9c:	bfb8      	it	lt
 801bd9e:	4618      	movlt	r0, r3
 801bda0:	e7a4      	b.n	801bcec <_printf_i+0x168>
 801bda2:	2301      	movs	r3, #1
 801bda4:	4632      	mov	r2, r6
 801bda6:	4649      	mov	r1, r9
 801bda8:	4640      	mov	r0, r8
 801bdaa:	47d0      	blx	sl
 801bdac:	3001      	adds	r0, #1
 801bdae:	d09b      	beq.n	801bce8 <_printf_i+0x164>
 801bdb0:	3501      	adds	r5, #1
 801bdb2:	68e3      	ldr	r3, [r4, #12]
 801bdb4:	9903      	ldr	r1, [sp, #12]
 801bdb6:	1a5b      	subs	r3, r3, r1
 801bdb8:	42ab      	cmp	r3, r5
 801bdba:	dcf2      	bgt.n	801bda2 <_printf_i+0x21e>
 801bdbc:	e7eb      	b.n	801bd96 <_printf_i+0x212>
 801bdbe:	2500      	movs	r5, #0
 801bdc0:	f104 0619 	add.w	r6, r4, #25
 801bdc4:	e7f5      	b.n	801bdb2 <_printf_i+0x22e>
 801bdc6:	bf00      	nop
 801bdc8:	0801fd19 	.word	0x0801fd19
 801bdcc:	0801fd2a 	.word	0x0801fd2a

0801bdd0 <_sbrk_r>:
 801bdd0:	b538      	push	{r3, r4, r5, lr}
 801bdd2:	4d06      	ldr	r5, [pc, #24]	; (801bdec <_sbrk_r+0x1c>)
 801bdd4:	2300      	movs	r3, #0
 801bdd6:	4604      	mov	r4, r0
 801bdd8:	4608      	mov	r0, r1
 801bdda:	602b      	str	r3, [r5, #0]
 801bddc:	f7e6 f8be 	bl	8001f5c <_sbrk>
 801bde0:	1c43      	adds	r3, r0, #1
 801bde2:	d102      	bne.n	801bdea <_sbrk_r+0x1a>
 801bde4:	682b      	ldr	r3, [r5, #0]
 801bde6:	b103      	cbz	r3, 801bdea <_sbrk_r+0x1a>
 801bde8:	6023      	str	r3, [r4, #0]
 801bdea:	bd38      	pop	{r3, r4, r5, pc}
 801bdec:	2000a700 	.word	0x2000a700

0801bdf0 <_raise_r>:
 801bdf0:	291f      	cmp	r1, #31
 801bdf2:	b538      	push	{r3, r4, r5, lr}
 801bdf4:	4604      	mov	r4, r0
 801bdf6:	460d      	mov	r5, r1
 801bdf8:	d904      	bls.n	801be04 <_raise_r+0x14>
 801bdfa:	2316      	movs	r3, #22
 801bdfc:	6003      	str	r3, [r0, #0]
 801bdfe:	f04f 30ff 	mov.w	r0, #4294967295
 801be02:	bd38      	pop	{r3, r4, r5, pc}
 801be04:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801be06:	b112      	cbz	r2, 801be0e <_raise_r+0x1e>
 801be08:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801be0c:	b94b      	cbnz	r3, 801be22 <_raise_r+0x32>
 801be0e:	4620      	mov	r0, r4
 801be10:	f000 f830 	bl	801be74 <_getpid_r>
 801be14:	462a      	mov	r2, r5
 801be16:	4601      	mov	r1, r0
 801be18:	4620      	mov	r0, r4
 801be1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801be1e:	f000 b817 	b.w	801be50 <_kill_r>
 801be22:	2b01      	cmp	r3, #1
 801be24:	d00a      	beq.n	801be3c <_raise_r+0x4c>
 801be26:	1c59      	adds	r1, r3, #1
 801be28:	d103      	bne.n	801be32 <_raise_r+0x42>
 801be2a:	2316      	movs	r3, #22
 801be2c:	6003      	str	r3, [r0, #0]
 801be2e:	2001      	movs	r0, #1
 801be30:	e7e7      	b.n	801be02 <_raise_r+0x12>
 801be32:	2400      	movs	r4, #0
 801be34:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801be38:	4628      	mov	r0, r5
 801be3a:	4798      	blx	r3
 801be3c:	2000      	movs	r0, #0
 801be3e:	e7e0      	b.n	801be02 <_raise_r+0x12>

0801be40 <raise>:
 801be40:	4b02      	ldr	r3, [pc, #8]	; (801be4c <raise+0xc>)
 801be42:	4601      	mov	r1, r0
 801be44:	6818      	ldr	r0, [r3, #0]
 801be46:	f7ff bfd3 	b.w	801bdf0 <_raise_r>
 801be4a:	bf00      	nop
 801be4c:	200000d8 	.word	0x200000d8

0801be50 <_kill_r>:
 801be50:	b538      	push	{r3, r4, r5, lr}
 801be52:	4d07      	ldr	r5, [pc, #28]	; (801be70 <_kill_r+0x20>)
 801be54:	2300      	movs	r3, #0
 801be56:	4604      	mov	r4, r0
 801be58:	4608      	mov	r0, r1
 801be5a:	4611      	mov	r1, r2
 801be5c:	602b      	str	r3, [r5, #0]
 801be5e:	f7e6 f849 	bl	8001ef4 <_kill>
 801be62:	1c43      	adds	r3, r0, #1
 801be64:	d102      	bne.n	801be6c <_kill_r+0x1c>
 801be66:	682b      	ldr	r3, [r5, #0]
 801be68:	b103      	cbz	r3, 801be6c <_kill_r+0x1c>
 801be6a:	6023      	str	r3, [r4, #0]
 801be6c:	bd38      	pop	{r3, r4, r5, pc}
 801be6e:	bf00      	nop
 801be70:	2000a700 	.word	0x2000a700

0801be74 <_getpid_r>:
 801be74:	f7e6 b83c 	b.w	8001ef0 <_getpid>

0801be78 <__swbuf_r>:
 801be78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801be7a:	460e      	mov	r6, r1
 801be7c:	4614      	mov	r4, r2
 801be7e:	4605      	mov	r5, r0
 801be80:	b118      	cbz	r0, 801be8a <__swbuf_r+0x12>
 801be82:	6983      	ldr	r3, [r0, #24]
 801be84:	b90b      	cbnz	r3, 801be8a <__swbuf_r+0x12>
 801be86:	f000 fa33 	bl	801c2f0 <__sinit>
 801be8a:	4b21      	ldr	r3, [pc, #132]	; (801bf10 <__swbuf_r+0x98>)
 801be8c:	429c      	cmp	r4, r3
 801be8e:	d12b      	bne.n	801bee8 <__swbuf_r+0x70>
 801be90:	686c      	ldr	r4, [r5, #4]
 801be92:	69a3      	ldr	r3, [r4, #24]
 801be94:	60a3      	str	r3, [r4, #8]
 801be96:	89a3      	ldrh	r3, [r4, #12]
 801be98:	071a      	lsls	r2, r3, #28
 801be9a:	d52f      	bpl.n	801befc <__swbuf_r+0x84>
 801be9c:	6923      	ldr	r3, [r4, #16]
 801be9e:	b36b      	cbz	r3, 801befc <__swbuf_r+0x84>
 801bea0:	6923      	ldr	r3, [r4, #16]
 801bea2:	6820      	ldr	r0, [r4, #0]
 801bea4:	1ac0      	subs	r0, r0, r3
 801bea6:	6963      	ldr	r3, [r4, #20]
 801bea8:	b2f6      	uxtb	r6, r6
 801beaa:	4283      	cmp	r3, r0
 801beac:	4637      	mov	r7, r6
 801beae:	dc04      	bgt.n	801beba <__swbuf_r+0x42>
 801beb0:	4621      	mov	r1, r4
 801beb2:	4628      	mov	r0, r5
 801beb4:	f000 f988 	bl	801c1c8 <_fflush_r>
 801beb8:	bb30      	cbnz	r0, 801bf08 <__swbuf_r+0x90>
 801beba:	68a3      	ldr	r3, [r4, #8]
 801bebc:	3b01      	subs	r3, #1
 801bebe:	60a3      	str	r3, [r4, #8]
 801bec0:	6823      	ldr	r3, [r4, #0]
 801bec2:	1c5a      	adds	r2, r3, #1
 801bec4:	6022      	str	r2, [r4, #0]
 801bec6:	701e      	strb	r6, [r3, #0]
 801bec8:	6963      	ldr	r3, [r4, #20]
 801beca:	3001      	adds	r0, #1
 801becc:	4283      	cmp	r3, r0
 801bece:	d004      	beq.n	801beda <__swbuf_r+0x62>
 801bed0:	89a3      	ldrh	r3, [r4, #12]
 801bed2:	07db      	lsls	r3, r3, #31
 801bed4:	d506      	bpl.n	801bee4 <__swbuf_r+0x6c>
 801bed6:	2e0a      	cmp	r6, #10
 801bed8:	d104      	bne.n	801bee4 <__swbuf_r+0x6c>
 801beda:	4621      	mov	r1, r4
 801bedc:	4628      	mov	r0, r5
 801bede:	f000 f973 	bl	801c1c8 <_fflush_r>
 801bee2:	b988      	cbnz	r0, 801bf08 <__swbuf_r+0x90>
 801bee4:	4638      	mov	r0, r7
 801bee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bee8:	4b0a      	ldr	r3, [pc, #40]	; (801bf14 <__swbuf_r+0x9c>)
 801beea:	429c      	cmp	r4, r3
 801beec:	d101      	bne.n	801bef2 <__swbuf_r+0x7a>
 801beee:	68ac      	ldr	r4, [r5, #8]
 801bef0:	e7cf      	b.n	801be92 <__swbuf_r+0x1a>
 801bef2:	4b09      	ldr	r3, [pc, #36]	; (801bf18 <__swbuf_r+0xa0>)
 801bef4:	429c      	cmp	r4, r3
 801bef6:	bf08      	it	eq
 801bef8:	68ec      	ldreq	r4, [r5, #12]
 801befa:	e7ca      	b.n	801be92 <__swbuf_r+0x1a>
 801befc:	4621      	mov	r1, r4
 801befe:	4628      	mov	r0, r5
 801bf00:	f000 f80c 	bl	801bf1c <__swsetup_r>
 801bf04:	2800      	cmp	r0, #0
 801bf06:	d0cb      	beq.n	801bea0 <__swbuf_r+0x28>
 801bf08:	f04f 37ff 	mov.w	r7, #4294967295
 801bf0c:	e7ea      	b.n	801bee4 <__swbuf_r+0x6c>
 801bf0e:	bf00      	nop
 801bf10:	0801fd60 	.word	0x0801fd60
 801bf14:	0801fd80 	.word	0x0801fd80
 801bf18:	0801fd40 	.word	0x0801fd40

0801bf1c <__swsetup_r>:
 801bf1c:	4b32      	ldr	r3, [pc, #200]	; (801bfe8 <__swsetup_r+0xcc>)
 801bf1e:	b570      	push	{r4, r5, r6, lr}
 801bf20:	681d      	ldr	r5, [r3, #0]
 801bf22:	4606      	mov	r6, r0
 801bf24:	460c      	mov	r4, r1
 801bf26:	b125      	cbz	r5, 801bf32 <__swsetup_r+0x16>
 801bf28:	69ab      	ldr	r3, [r5, #24]
 801bf2a:	b913      	cbnz	r3, 801bf32 <__swsetup_r+0x16>
 801bf2c:	4628      	mov	r0, r5
 801bf2e:	f000 f9df 	bl	801c2f0 <__sinit>
 801bf32:	4b2e      	ldr	r3, [pc, #184]	; (801bfec <__swsetup_r+0xd0>)
 801bf34:	429c      	cmp	r4, r3
 801bf36:	d10f      	bne.n	801bf58 <__swsetup_r+0x3c>
 801bf38:	686c      	ldr	r4, [r5, #4]
 801bf3a:	89a3      	ldrh	r3, [r4, #12]
 801bf3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801bf40:	0719      	lsls	r1, r3, #28
 801bf42:	d42c      	bmi.n	801bf9e <__swsetup_r+0x82>
 801bf44:	06dd      	lsls	r5, r3, #27
 801bf46:	d411      	bmi.n	801bf6c <__swsetup_r+0x50>
 801bf48:	2309      	movs	r3, #9
 801bf4a:	6033      	str	r3, [r6, #0]
 801bf4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801bf50:	81a3      	strh	r3, [r4, #12]
 801bf52:	f04f 30ff 	mov.w	r0, #4294967295
 801bf56:	e03e      	b.n	801bfd6 <__swsetup_r+0xba>
 801bf58:	4b25      	ldr	r3, [pc, #148]	; (801bff0 <__swsetup_r+0xd4>)
 801bf5a:	429c      	cmp	r4, r3
 801bf5c:	d101      	bne.n	801bf62 <__swsetup_r+0x46>
 801bf5e:	68ac      	ldr	r4, [r5, #8]
 801bf60:	e7eb      	b.n	801bf3a <__swsetup_r+0x1e>
 801bf62:	4b24      	ldr	r3, [pc, #144]	; (801bff4 <__swsetup_r+0xd8>)
 801bf64:	429c      	cmp	r4, r3
 801bf66:	bf08      	it	eq
 801bf68:	68ec      	ldreq	r4, [r5, #12]
 801bf6a:	e7e6      	b.n	801bf3a <__swsetup_r+0x1e>
 801bf6c:	0758      	lsls	r0, r3, #29
 801bf6e:	d512      	bpl.n	801bf96 <__swsetup_r+0x7a>
 801bf70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bf72:	b141      	cbz	r1, 801bf86 <__swsetup_r+0x6a>
 801bf74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801bf78:	4299      	cmp	r1, r3
 801bf7a:	d002      	beq.n	801bf82 <__swsetup_r+0x66>
 801bf7c:	4630      	mov	r0, r6
 801bf7e:	f7ff fb8f 	bl	801b6a0 <_free_r>
 801bf82:	2300      	movs	r3, #0
 801bf84:	6363      	str	r3, [r4, #52]	; 0x34
 801bf86:	89a3      	ldrh	r3, [r4, #12]
 801bf88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801bf8c:	81a3      	strh	r3, [r4, #12]
 801bf8e:	2300      	movs	r3, #0
 801bf90:	6063      	str	r3, [r4, #4]
 801bf92:	6923      	ldr	r3, [r4, #16]
 801bf94:	6023      	str	r3, [r4, #0]
 801bf96:	89a3      	ldrh	r3, [r4, #12]
 801bf98:	f043 0308 	orr.w	r3, r3, #8
 801bf9c:	81a3      	strh	r3, [r4, #12]
 801bf9e:	6923      	ldr	r3, [r4, #16]
 801bfa0:	b94b      	cbnz	r3, 801bfb6 <__swsetup_r+0x9a>
 801bfa2:	89a3      	ldrh	r3, [r4, #12]
 801bfa4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801bfa8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801bfac:	d003      	beq.n	801bfb6 <__swsetup_r+0x9a>
 801bfae:	4621      	mov	r1, r4
 801bfb0:	4630      	mov	r0, r6
 801bfb2:	f000 fa63 	bl	801c47c <__smakebuf_r>
 801bfb6:	89a0      	ldrh	r0, [r4, #12]
 801bfb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801bfbc:	f010 0301 	ands.w	r3, r0, #1
 801bfc0:	d00a      	beq.n	801bfd8 <__swsetup_r+0xbc>
 801bfc2:	2300      	movs	r3, #0
 801bfc4:	60a3      	str	r3, [r4, #8]
 801bfc6:	6963      	ldr	r3, [r4, #20]
 801bfc8:	425b      	negs	r3, r3
 801bfca:	61a3      	str	r3, [r4, #24]
 801bfcc:	6923      	ldr	r3, [r4, #16]
 801bfce:	b943      	cbnz	r3, 801bfe2 <__swsetup_r+0xc6>
 801bfd0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801bfd4:	d1ba      	bne.n	801bf4c <__swsetup_r+0x30>
 801bfd6:	bd70      	pop	{r4, r5, r6, pc}
 801bfd8:	0781      	lsls	r1, r0, #30
 801bfda:	bf58      	it	pl
 801bfdc:	6963      	ldrpl	r3, [r4, #20]
 801bfde:	60a3      	str	r3, [r4, #8]
 801bfe0:	e7f4      	b.n	801bfcc <__swsetup_r+0xb0>
 801bfe2:	2000      	movs	r0, #0
 801bfe4:	e7f7      	b.n	801bfd6 <__swsetup_r+0xba>
 801bfe6:	bf00      	nop
 801bfe8:	200000d8 	.word	0x200000d8
 801bfec:	0801fd60 	.word	0x0801fd60
 801bff0:	0801fd80 	.word	0x0801fd80
 801bff4:	0801fd40 	.word	0x0801fd40

0801bff8 <__register_exitproc>:
 801bff8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bffc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c0b8 <__register_exitproc+0xc0>
 801c000:	4606      	mov	r6, r0
 801c002:	f8d8 0000 	ldr.w	r0, [r8]
 801c006:	461f      	mov	r7, r3
 801c008:	460d      	mov	r5, r1
 801c00a:	4691      	mov	r9, r2
 801c00c:	f000 fa0e 	bl	801c42c <__retarget_lock_acquire_recursive>
 801c010:	4b25      	ldr	r3, [pc, #148]	; (801c0a8 <__register_exitproc+0xb0>)
 801c012:	681c      	ldr	r4, [r3, #0]
 801c014:	b934      	cbnz	r4, 801c024 <__register_exitproc+0x2c>
 801c016:	4c25      	ldr	r4, [pc, #148]	; (801c0ac <__register_exitproc+0xb4>)
 801c018:	601c      	str	r4, [r3, #0]
 801c01a:	4b25      	ldr	r3, [pc, #148]	; (801c0b0 <__register_exitproc+0xb8>)
 801c01c:	b113      	cbz	r3, 801c024 <__register_exitproc+0x2c>
 801c01e:	681b      	ldr	r3, [r3, #0]
 801c020:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c024:	6863      	ldr	r3, [r4, #4]
 801c026:	2b1f      	cmp	r3, #31
 801c028:	dd07      	ble.n	801c03a <__register_exitproc+0x42>
 801c02a:	f8d8 0000 	ldr.w	r0, [r8]
 801c02e:	f000 f9ff 	bl	801c430 <__retarget_lock_release_recursive>
 801c032:	f04f 30ff 	mov.w	r0, #4294967295
 801c036:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c03a:	b34e      	cbz	r6, 801c090 <__register_exitproc+0x98>
 801c03c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c040:	b988      	cbnz	r0, 801c066 <__register_exitproc+0x6e>
 801c042:	4b1c      	ldr	r3, [pc, #112]	; (801c0b4 <__register_exitproc+0xbc>)
 801c044:	b923      	cbnz	r3, 801c050 <__register_exitproc+0x58>
 801c046:	f8d8 0000 	ldr.w	r0, [r8]
 801c04a:	f000 f9f0 	bl	801c42e <__retarget_lock_release>
 801c04e:	e7f0      	b.n	801c032 <__register_exitproc+0x3a>
 801c050:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c054:	f7ff fafe 	bl	801b654 <malloc>
 801c058:	2800      	cmp	r0, #0
 801c05a:	d0f4      	beq.n	801c046 <__register_exitproc+0x4e>
 801c05c:	2300      	movs	r3, #0
 801c05e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c062:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c066:	6863      	ldr	r3, [r4, #4]
 801c068:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c06c:	2201      	movs	r2, #1
 801c06e:	409a      	lsls	r2, r3
 801c070:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c074:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c078:	4313      	orrs	r3, r2
 801c07a:	2e02      	cmp	r6, #2
 801c07c:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c080:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c084:	bf02      	ittt	eq
 801c086:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c08a:	431a      	orreq	r2, r3
 801c08c:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801c090:	6863      	ldr	r3, [r4, #4]
 801c092:	f8d8 0000 	ldr.w	r0, [r8]
 801c096:	1c5a      	adds	r2, r3, #1
 801c098:	3302      	adds	r3, #2
 801c09a:	6062      	str	r2, [r4, #4]
 801c09c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c0a0:	f000 f9c6 	bl	801c430 <__retarget_lock_release_recursive>
 801c0a4:	2000      	movs	r0, #0
 801c0a6:	e7c6      	b.n	801c036 <__register_exitproc+0x3e>
 801c0a8:	2000a430 	.word	0x2000a430
 801c0ac:	2000a3a4 	.word	0x2000a3a4
 801c0b0:	0801fd3c 	.word	0x0801fd3c
 801c0b4:	0801b655 	.word	0x0801b655
 801c0b8:	2000013c 	.word	0x2000013c

0801c0bc <__sflush_r>:
 801c0bc:	898a      	ldrh	r2, [r1, #12]
 801c0be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c0c2:	4605      	mov	r5, r0
 801c0c4:	0710      	lsls	r0, r2, #28
 801c0c6:	460c      	mov	r4, r1
 801c0c8:	d458      	bmi.n	801c17c <__sflush_r+0xc0>
 801c0ca:	684b      	ldr	r3, [r1, #4]
 801c0cc:	2b00      	cmp	r3, #0
 801c0ce:	dc05      	bgt.n	801c0dc <__sflush_r+0x20>
 801c0d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c0d2:	2b00      	cmp	r3, #0
 801c0d4:	dc02      	bgt.n	801c0dc <__sflush_r+0x20>
 801c0d6:	2000      	movs	r0, #0
 801c0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c0dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c0de:	2e00      	cmp	r6, #0
 801c0e0:	d0f9      	beq.n	801c0d6 <__sflush_r+0x1a>
 801c0e2:	2300      	movs	r3, #0
 801c0e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c0e8:	682f      	ldr	r7, [r5, #0]
 801c0ea:	602b      	str	r3, [r5, #0]
 801c0ec:	d032      	beq.n	801c154 <__sflush_r+0x98>
 801c0ee:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c0f0:	89a3      	ldrh	r3, [r4, #12]
 801c0f2:	075a      	lsls	r2, r3, #29
 801c0f4:	d505      	bpl.n	801c102 <__sflush_r+0x46>
 801c0f6:	6863      	ldr	r3, [r4, #4]
 801c0f8:	1ac0      	subs	r0, r0, r3
 801c0fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c0fc:	b10b      	cbz	r3, 801c102 <__sflush_r+0x46>
 801c0fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c100:	1ac0      	subs	r0, r0, r3
 801c102:	2300      	movs	r3, #0
 801c104:	4602      	mov	r2, r0
 801c106:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c108:	6a21      	ldr	r1, [r4, #32]
 801c10a:	4628      	mov	r0, r5
 801c10c:	47b0      	blx	r6
 801c10e:	1c43      	adds	r3, r0, #1
 801c110:	89a3      	ldrh	r3, [r4, #12]
 801c112:	d106      	bne.n	801c122 <__sflush_r+0x66>
 801c114:	6829      	ldr	r1, [r5, #0]
 801c116:	291d      	cmp	r1, #29
 801c118:	d82c      	bhi.n	801c174 <__sflush_r+0xb8>
 801c11a:	4a2a      	ldr	r2, [pc, #168]	; (801c1c4 <__sflush_r+0x108>)
 801c11c:	40ca      	lsrs	r2, r1
 801c11e:	07d6      	lsls	r6, r2, #31
 801c120:	d528      	bpl.n	801c174 <__sflush_r+0xb8>
 801c122:	2200      	movs	r2, #0
 801c124:	6062      	str	r2, [r4, #4]
 801c126:	04d9      	lsls	r1, r3, #19
 801c128:	6922      	ldr	r2, [r4, #16]
 801c12a:	6022      	str	r2, [r4, #0]
 801c12c:	d504      	bpl.n	801c138 <__sflush_r+0x7c>
 801c12e:	1c42      	adds	r2, r0, #1
 801c130:	d101      	bne.n	801c136 <__sflush_r+0x7a>
 801c132:	682b      	ldr	r3, [r5, #0]
 801c134:	b903      	cbnz	r3, 801c138 <__sflush_r+0x7c>
 801c136:	6560      	str	r0, [r4, #84]	; 0x54
 801c138:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c13a:	602f      	str	r7, [r5, #0]
 801c13c:	2900      	cmp	r1, #0
 801c13e:	d0ca      	beq.n	801c0d6 <__sflush_r+0x1a>
 801c140:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c144:	4299      	cmp	r1, r3
 801c146:	d002      	beq.n	801c14e <__sflush_r+0x92>
 801c148:	4628      	mov	r0, r5
 801c14a:	f7ff faa9 	bl	801b6a0 <_free_r>
 801c14e:	2000      	movs	r0, #0
 801c150:	6360      	str	r0, [r4, #52]	; 0x34
 801c152:	e7c1      	b.n	801c0d8 <__sflush_r+0x1c>
 801c154:	6a21      	ldr	r1, [r4, #32]
 801c156:	2301      	movs	r3, #1
 801c158:	4628      	mov	r0, r5
 801c15a:	47b0      	blx	r6
 801c15c:	1c41      	adds	r1, r0, #1
 801c15e:	d1c7      	bne.n	801c0f0 <__sflush_r+0x34>
 801c160:	682b      	ldr	r3, [r5, #0]
 801c162:	2b00      	cmp	r3, #0
 801c164:	d0c4      	beq.n	801c0f0 <__sflush_r+0x34>
 801c166:	2b1d      	cmp	r3, #29
 801c168:	d001      	beq.n	801c16e <__sflush_r+0xb2>
 801c16a:	2b16      	cmp	r3, #22
 801c16c:	d101      	bne.n	801c172 <__sflush_r+0xb6>
 801c16e:	602f      	str	r7, [r5, #0]
 801c170:	e7b1      	b.n	801c0d6 <__sflush_r+0x1a>
 801c172:	89a3      	ldrh	r3, [r4, #12]
 801c174:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c178:	81a3      	strh	r3, [r4, #12]
 801c17a:	e7ad      	b.n	801c0d8 <__sflush_r+0x1c>
 801c17c:	690f      	ldr	r7, [r1, #16]
 801c17e:	2f00      	cmp	r7, #0
 801c180:	d0a9      	beq.n	801c0d6 <__sflush_r+0x1a>
 801c182:	0793      	lsls	r3, r2, #30
 801c184:	680e      	ldr	r6, [r1, #0]
 801c186:	bf08      	it	eq
 801c188:	694b      	ldreq	r3, [r1, #20]
 801c18a:	600f      	str	r7, [r1, #0]
 801c18c:	bf18      	it	ne
 801c18e:	2300      	movne	r3, #0
 801c190:	eba6 0807 	sub.w	r8, r6, r7
 801c194:	608b      	str	r3, [r1, #8]
 801c196:	f1b8 0f00 	cmp.w	r8, #0
 801c19a:	dd9c      	ble.n	801c0d6 <__sflush_r+0x1a>
 801c19c:	6a21      	ldr	r1, [r4, #32]
 801c19e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c1a0:	4643      	mov	r3, r8
 801c1a2:	463a      	mov	r2, r7
 801c1a4:	4628      	mov	r0, r5
 801c1a6:	47b0      	blx	r6
 801c1a8:	2800      	cmp	r0, #0
 801c1aa:	dc06      	bgt.n	801c1ba <__sflush_r+0xfe>
 801c1ac:	89a3      	ldrh	r3, [r4, #12]
 801c1ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c1b2:	81a3      	strh	r3, [r4, #12]
 801c1b4:	f04f 30ff 	mov.w	r0, #4294967295
 801c1b8:	e78e      	b.n	801c0d8 <__sflush_r+0x1c>
 801c1ba:	4407      	add	r7, r0
 801c1bc:	eba8 0800 	sub.w	r8, r8, r0
 801c1c0:	e7e9      	b.n	801c196 <__sflush_r+0xda>
 801c1c2:	bf00      	nop
 801c1c4:	20400001 	.word	0x20400001

0801c1c8 <_fflush_r>:
 801c1c8:	b538      	push	{r3, r4, r5, lr}
 801c1ca:	690b      	ldr	r3, [r1, #16]
 801c1cc:	4605      	mov	r5, r0
 801c1ce:	460c      	mov	r4, r1
 801c1d0:	b913      	cbnz	r3, 801c1d8 <_fflush_r+0x10>
 801c1d2:	2500      	movs	r5, #0
 801c1d4:	4628      	mov	r0, r5
 801c1d6:	bd38      	pop	{r3, r4, r5, pc}
 801c1d8:	b118      	cbz	r0, 801c1e2 <_fflush_r+0x1a>
 801c1da:	6983      	ldr	r3, [r0, #24]
 801c1dc:	b90b      	cbnz	r3, 801c1e2 <_fflush_r+0x1a>
 801c1de:	f000 f887 	bl	801c2f0 <__sinit>
 801c1e2:	4b14      	ldr	r3, [pc, #80]	; (801c234 <_fflush_r+0x6c>)
 801c1e4:	429c      	cmp	r4, r3
 801c1e6:	d11b      	bne.n	801c220 <_fflush_r+0x58>
 801c1e8:	686c      	ldr	r4, [r5, #4]
 801c1ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c1ee:	2b00      	cmp	r3, #0
 801c1f0:	d0ef      	beq.n	801c1d2 <_fflush_r+0xa>
 801c1f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c1f4:	07d0      	lsls	r0, r2, #31
 801c1f6:	d404      	bmi.n	801c202 <_fflush_r+0x3a>
 801c1f8:	0599      	lsls	r1, r3, #22
 801c1fa:	d402      	bmi.n	801c202 <_fflush_r+0x3a>
 801c1fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c1fe:	f000 f915 	bl	801c42c <__retarget_lock_acquire_recursive>
 801c202:	4628      	mov	r0, r5
 801c204:	4621      	mov	r1, r4
 801c206:	f7ff ff59 	bl	801c0bc <__sflush_r>
 801c20a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c20c:	07da      	lsls	r2, r3, #31
 801c20e:	4605      	mov	r5, r0
 801c210:	d4e0      	bmi.n	801c1d4 <_fflush_r+0xc>
 801c212:	89a3      	ldrh	r3, [r4, #12]
 801c214:	059b      	lsls	r3, r3, #22
 801c216:	d4dd      	bmi.n	801c1d4 <_fflush_r+0xc>
 801c218:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c21a:	f000 f909 	bl	801c430 <__retarget_lock_release_recursive>
 801c21e:	e7d9      	b.n	801c1d4 <_fflush_r+0xc>
 801c220:	4b05      	ldr	r3, [pc, #20]	; (801c238 <_fflush_r+0x70>)
 801c222:	429c      	cmp	r4, r3
 801c224:	d101      	bne.n	801c22a <_fflush_r+0x62>
 801c226:	68ac      	ldr	r4, [r5, #8]
 801c228:	e7df      	b.n	801c1ea <_fflush_r+0x22>
 801c22a:	4b04      	ldr	r3, [pc, #16]	; (801c23c <_fflush_r+0x74>)
 801c22c:	429c      	cmp	r4, r3
 801c22e:	bf08      	it	eq
 801c230:	68ec      	ldreq	r4, [r5, #12]
 801c232:	e7da      	b.n	801c1ea <_fflush_r+0x22>
 801c234:	0801fd60 	.word	0x0801fd60
 801c238:	0801fd80 	.word	0x0801fd80
 801c23c:	0801fd40 	.word	0x0801fd40

0801c240 <std>:
 801c240:	2300      	movs	r3, #0
 801c242:	b510      	push	{r4, lr}
 801c244:	4604      	mov	r4, r0
 801c246:	e9c0 3300 	strd	r3, r3, [r0]
 801c24a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c24e:	6083      	str	r3, [r0, #8]
 801c250:	8181      	strh	r1, [r0, #12]
 801c252:	6643      	str	r3, [r0, #100]	; 0x64
 801c254:	81c2      	strh	r2, [r0, #14]
 801c256:	6183      	str	r3, [r0, #24]
 801c258:	4619      	mov	r1, r3
 801c25a:	2208      	movs	r2, #8
 801c25c:	305c      	adds	r0, #92	; 0x5c
 801c25e:	f7ff fa17 	bl	801b690 <memset>
 801c262:	4b05      	ldr	r3, [pc, #20]	; (801c278 <std+0x38>)
 801c264:	6263      	str	r3, [r4, #36]	; 0x24
 801c266:	4b05      	ldr	r3, [pc, #20]	; (801c27c <std+0x3c>)
 801c268:	62a3      	str	r3, [r4, #40]	; 0x28
 801c26a:	4b05      	ldr	r3, [pc, #20]	; (801c280 <std+0x40>)
 801c26c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c26e:	4b05      	ldr	r3, [pc, #20]	; (801c284 <std+0x44>)
 801c270:	6224      	str	r4, [r4, #32]
 801c272:	6323      	str	r3, [r4, #48]	; 0x30
 801c274:	bd10      	pop	{r4, pc}
 801c276:	bf00      	nop
 801c278:	0801c515 	.word	0x0801c515
 801c27c:	0801c537 	.word	0x0801c537
 801c280:	0801c56f 	.word	0x0801c56f
 801c284:	0801c593 	.word	0x0801c593

0801c288 <_cleanup_r>:
 801c288:	4901      	ldr	r1, [pc, #4]	; (801c290 <_cleanup_r+0x8>)
 801c28a:	f000 b8af 	b.w	801c3ec <_fwalk_reent>
 801c28e:	bf00      	nop
 801c290:	0801c1c9 	.word	0x0801c1c9

0801c294 <__sfmoreglue>:
 801c294:	b570      	push	{r4, r5, r6, lr}
 801c296:	1e4a      	subs	r2, r1, #1
 801c298:	2568      	movs	r5, #104	; 0x68
 801c29a:	4355      	muls	r5, r2
 801c29c:	460e      	mov	r6, r1
 801c29e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c2a2:	f7ff fa4d 	bl	801b740 <_malloc_r>
 801c2a6:	4604      	mov	r4, r0
 801c2a8:	b140      	cbz	r0, 801c2bc <__sfmoreglue+0x28>
 801c2aa:	2100      	movs	r1, #0
 801c2ac:	e9c0 1600 	strd	r1, r6, [r0]
 801c2b0:	300c      	adds	r0, #12
 801c2b2:	60a0      	str	r0, [r4, #8]
 801c2b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c2b8:	f7ff f9ea 	bl	801b690 <memset>
 801c2bc:	4620      	mov	r0, r4
 801c2be:	bd70      	pop	{r4, r5, r6, pc}

0801c2c0 <__sfp_lock_acquire>:
 801c2c0:	4801      	ldr	r0, [pc, #4]	; (801c2c8 <__sfp_lock_acquire+0x8>)
 801c2c2:	f000 b8b3 	b.w	801c42c <__retarget_lock_acquire_recursive>
 801c2c6:	bf00      	nop
 801c2c8:	2000a6fc 	.word	0x2000a6fc

0801c2cc <__sfp_lock_release>:
 801c2cc:	4801      	ldr	r0, [pc, #4]	; (801c2d4 <__sfp_lock_release+0x8>)
 801c2ce:	f000 b8af 	b.w	801c430 <__retarget_lock_release_recursive>
 801c2d2:	bf00      	nop
 801c2d4:	2000a6fc 	.word	0x2000a6fc

0801c2d8 <__sinit_lock_acquire>:
 801c2d8:	4801      	ldr	r0, [pc, #4]	; (801c2e0 <__sinit_lock_acquire+0x8>)
 801c2da:	f000 b8a7 	b.w	801c42c <__retarget_lock_acquire_recursive>
 801c2de:	bf00      	nop
 801c2e0:	2000a6f7 	.word	0x2000a6f7

0801c2e4 <__sinit_lock_release>:
 801c2e4:	4801      	ldr	r0, [pc, #4]	; (801c2ec <__sinit_lock_release+0x8>)
 801c2e6:	f000 b8a3 	b.w	801c430 <__retarget_lock_release_recursive>
 801c2ea:	bf00      	nop
 801c2ec:	2000a6f7 	.word	0x2000a6f7

0801c2f0 <__sinit>:
 801c2f0:	b510      	push	{r4, lr}
 801c2f2:	4604      	mov	r4, r0
 801c2f4:	f7ff fff0 	bl	801c2d8 <__sinit_lock_acquire>
 801c2f8:	69a3      	ldr	r3, [r4, #24]
 801c2fa:	b11b      	cbz	r3, 801c304 <__sinit+0x14>
 801c2fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c300:	f7ff bff0 	b.w	801c2e4 <__sinit_lock_release>
 801c304:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c308:	6523      	str	r3, [r4, #80]	; 0x50
 801c30a:	4b13      	ldr	r3, [pc, #76]	; (801c358 <__sinit+0x68>)
 801c30c:	4a13      	ldr	r2, [pc, #76]	; (801c35c <__sinit+0x6c>)
 801c30e:	681b      	ldr	r3, [r3, #0]
 801c310:	62a2      	str	r2, [r4, #40]	; 0x28
 801c312:	42a3      	cmp	r3, r4
 801c314:	bf04      	itt	eq
 801c316:	2301      	moveq	r3, #1
 801c318:	61a3      	streq	r3, [r4, #24]
 801c31a:	4620      	mov	r0, r4
 801c31c:	f000 f820 	bl	801c360 <__sfp>
 801c320:	6060      	str	r0, [r4, #4]
 801c322:	4620      	mov	r0, r4
 801c324:	f000 f81c 	bl	801c360 <__sfp>
 801c328:	60a0      	str	r0, [r4, #8]
 801c32a:	4620      	mov	r0, r4
 801c32c:	f000 f818 	bl	801c360 <__sfp>
 801c330:	2200      	movs	r2, #0
 801c332:	60e0      	str	r0, [r4, #12]
 801c334:	2104      	movs	r1, #4
 801c336:	6860      	ldr	r0, [r4, #4]
 801c338:	f7ff ff82 	bl	801c240 <std>
 801c33c:	68a0      	ldr	r0, [r4, #8]
 801c33e:	2201      	movs	r2, #1
 801c340:	2109      	movs	r1, #9
 801c342:	f7ff ff7d 	bl	801c240 <std>
 801c346:	68e0      	ldr	r0, [r4, #12]
 801c348:	2202      	movs	r2, #2
 801c34a:	2112      	movs	r1, #18
 801c34c:	f7ff ff78 	bl	801c240 <std>
 801c350:	2301      	movs	r3, #1
 801c352:	61a3      	str	r3, [r4, #24]
 801c354:	e7d2      	b.n	801c2fc <__sinit+0xc>
 801c356:	bf00      	nop
 801c358:	0801fd04 	.word	0x0801fd04
 801c35c:	0801c289 	.word	0x0801c289

0801c360 <__sfp>:
 801c360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c362:	4607      	mov	r7, r0
 801c364:	f7ff ffac 	bl	801c2c0 <__sfp_lock_acquire>
 801c368:	4b1e      	ldr	r3, [pc, #120]	; (801c3e4 <__sfp+0x84>)
 801c36a:	681e      	ldr	r6, [r3, #0]
 801c36c:	69b3      	ldr	r3, [r6, #24]
 801c36e:	b913      	cbnz	r3, 801c376 <__sfp+0x16>
 801c370:	4630      	mov	r0, r6
 801c372:	f7ff ffbd 	bl	801c2f0 <__sinit>
 801c376:	3648      	adds	r6, #72	; 0x48
 801c378:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c37c:	3b01      	subs	r3, #1
 801c37e:	d503      	bpl.n	801c388 <__sfp+0x28>
 801c380:	6833      	ldr	r3, [r6, #0]
 801c382:	b30b      	cbz	r3, 801c3c8 <__sfp+0x68>
 801c384:	6836      	ldr	r6, [r6, #0]
 801c386:	e7f7      	b.n	801c378 <__sfp+0x18>
 801c388:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c38c:	b9d5      	cbnz	r5, 801c3c4 <__sfp+0x64>
 801c38e:	4b16      	ldr	r3, [pc, #88]	; (801c3e8 <__sfp+0x88>)
 801c390:	60e3      	str	r3, [r4, #12]
 801c392:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c396:	6665      	str	r5, [r4, #100]	; 0x64
 801c398:	f000 f847 	bl	801c42a <__retarget_lock_init_recursive>
 801c39c:	f7ff ff96 	bl	801c2cc <__sfp_lock_release>
 801c3a0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c3a4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c3a8:	6025      	str	r5, [r4, #0]
 801c3aa:	61a5      	str	r5, [r4, #24]
 801c3ac:	2208      	movs	r2, #8
 801c3ae:	4629      	mov	r1, r5
 801c3b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c3b4:	f7ff f96c 	bl	801b690 <memset>
 801c3b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c3bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c3c0:	4620      	mov	r0, r4
 801c3c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c3c4:	3468      	adds	r4, #104	; 0x68
 801c3c6:	e7d9      	b.n	801c37c <__sfp+0x1c>
 801c3c8:	2104      	movs	r1, #4
 801c3ca:	4638      	mov	r0, r7
 801c3cc:	f7ff ff62 	bl	801c294 <__sfmoreglue>
 801c3d0:	4604      	mov	r4, r0
 801c3d2:	6030      	str	r0, [r6, #0]
 801c3d4:	2800      	cmp	r0, #0
 801c3d6:	d1d5      	bne.n	801c384 <__sfp+0x24>
 801c3d8:	f7ff ff78 	bl	801c2cc <__sfp_lock_release>
 801c3dc:	230c      	movs	r3, #12
 801c3de:	603b      	str	r3, [r7, #0]
 801c3e0:	e7ee      	b.n	801c3c0 <__sfp+0x60>
 801c3e2:	bf00      	nop
 801c3e4:	0801fd04 	.word	0x0801fd04
 801c3e8:	ffff0001 	.word	0xffff0001

0801c3ec <_fwalk_reent>:
 801c3ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c3f0:	4606      	mov	r6, r0
 801c3f2:	4688      	mov	r8, r1
 801c3f4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c3f8:	2700      	movs	r7, #0
 801c3fa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801c3fe:	f1b9 0901 	subs.w	r9, r9, #1
 801c402:	d505      	bpl.n	801c410 <_fwalk_reent+0x24>
 801c404:	6824      	ldr	r4, [r4, #0]
 801c406:	2c00      	cmp	r4, #0
 801c408:	d1f7      	bne.n	801c3fa <_fwalk_reent+0xe>
 801c40a:	4638      	mov	r0, r7
 801c40c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c410:	89ab      	ldrh	r3, [r5, #12]
 801c412:	2b01      	cmp	r3, #1
 801c414:	d907      	bls.n	801c426 <_fwalk_reent+0x3a>
 801c416:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c41a:	3301      	adds	r3, #1
 801c41c:	d003      	beq.n	801c426 <_fwalk_reent+0x3a>
 801c41e:	4629      	mov	r1, r5
 801c420:	4630      	mov	r0, r6
 801c422:	47c0      	blx	r8
 801c424:	4307      	orrs	r7, r0
 801c426:	3568      	adds	r5, #104	; 0x68
 801c428:	e7e9      	b.n	801c3fe <_fwalk_reent+0x12>

0801c42a <__retarget_lock_init_recursive>:
 801c42a:	4770      	bx	lr

0801c42c <__retarget_lock_acquire_recursive>:
 801c42c:	4770      	bx	lr

0801c42e <__retarget_lock_release>:
 801c42e:	4770      	bx	lr

0801c430 <__retarget_lock_release_recursive>:
 801c430:	4770      	bx	lr

0801c432 <__swhatbuf_r>:
 801c432:	b570      	push	{r4, r5, r6, lr}
 801c434:	460e      	mov	r6, r1
 801c436:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c43a:	2900      	cmp	r1, #0
 801c43c:	b096      	sub	sp, #88	; 0x58
 801c43e:	4614      	mov	r4, r2
 801c440:	461d      	mov	r5, r3
 801c442:	da07      	bge.n	801c454 <__swhatbuf_r+0x22>
 801c444:	2300      	movs	r3, #0
 801c446:	602b      	str	r3, [r5, #0]
 801c448:	89b3      	ldrh	r3, [r6, #12]
 801c44a:	061a      	lsls	r2, r3, #24
 801c44c:	d410      	bmi.n	801c470 <__swhatbuf_r+0x3e>
 801c44e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c452:	e00e      	b.n	801c472 <__swhatbuf_r+0x40>
 801c454:	466a      	mov	r2, sp
 801c456:	f000 f8c3 	bl	801c5e0 <_fstat_r>
 801c45a:	2800      	cmp	r0, #0
 801c45c:	dbf2      	blt.n	801c444 <__swhatbuf_r+0x12>
 801c45e:	9a01      	ldr	r2, [sp, #4]
 801c460:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c464:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c468:	425a      	negs	r2, r3
 801c46a:	415a      	adcs	r2, r3
 801c46c:	602a      	str	r2, [r5, #0]
 801c46e:	e7ee      	b.n	801c44e <__swhatbuf_r+0x1c>
 801c470:	2340      	movs	r3, #64	; 0x40
 801c472:	2000      	movs	r0, #0
 801c474:	6023      	str	r3, [r4, #0]
 801c476:	b016      	add	sp, #88	; 0x58
 801c478:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c47c <__smakebuf_r>:
 801c47c:	898b      	ldrh	r3, [r1, #12]
 801c47e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c480:	079d      	lsls	r5, r3, #30
 801c482:	4606      	mov	r6, r0
 801c484:	460c      	mov	r4, r1
 801c486:	d507      	bpl.n	801c498 <__smakebuf_r+0x1c>
 801c488:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c48c:	6023      	str	r3, [r4, #0]
 801c48e:	6123      	str	r3, [r4, #16]
 801c490:	2301      	movs	r3, #1
 801c492:	6163      	str	r3, [r4, #20]
 801c494:	b002      	add	sp, #8
 801c496:	bd70      	pop	{r4, r5, r6, pc}
 801c498:	ab01      	add	r3, sp, #4
 801c49a:	466a      	mov	r2, sp
 801c49c:	f7ff ffc9 	bl	801c432 <__swhatbuf_r>
 801c4a0:	9900      	ldr	r1, [sp, #0]
 801c4a2:	4605      	mov	r5, r0
 801c4a4:	4630      	mov	r0, r6
 801c4a6:	f7ff f94b 	bl	801b740 <_malloc_r>
 801c4aa:	b948      	cbnz	r0, 801c4c0 <__smakebuf_r+0x44>
 801c4ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c4b0:	059a      	lsls	r2, r3, #22
 801c4b2:	d4ef      	bmi.n	801c494 <__smakebuf_r+0x18>
 801c4b4:	f023 0303 	bic.w	r3, r3, #3
 801c4b8:	f043 0302 	orr.w	r3, r3, #2
 801c4bc:	81a3      	strh	r3, [r4, #12]
 801c4be:	e7e3      	b.n	801c488 <__smakebuf_r+0xc>
 801c4c0:	4b0d      	ldr	r3, [pc, #52]	; (801c4f8 <__smakebuf_r+0x7c>)
 801c4c2:	62b3      	str	r3, [r6, #40]	; 0x28
 801c4c4:	89a3      	ldrh	r3, [r4, #12]
 801c4c6:	6020      	str	r0, [r4, #0]
 801c4c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c4cc:	81a3      	strh	r3, [r4, #12]
 801c4ce:	9b00      	ldr	r3, [sp, #0]
 801c4d0:	6163      	str	r3, [r4, #20]
 801c4d2:	9b01      	ldr	r3, [sp, #4]
 801c4d4:	6120      	str	r0, [r4, #16]
 801c4d6:	b15b      	cbz	r3, 801c4f0 <__smakebuf_r+0x74>
 801c4d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c4dc:	4630      	mov	r0, r6
 801c4de:	f000 f891 	bl	801c604 <_isatty_r>
 801c4e2:	b128      	cbz	r0, 801c4f0 <__smakebuf_r+0x74>
 801c4e4:	89a3      	ldrh	r3, [r4, #12]
 801c4e6:	f023 0303 	bic.w	r3, r3, #3
 801c4ea:	f043 0301 	orr.w	r3, r3, #1
 801c4ee:	81a3      	strh	r3, [r4, #12]
 801c4f0:	89a0      	ldrh	r0, [r4, #12]
 801c4f2:	4305      	orrs	r5, r0
 801c4f4:	81a5      	strh	r5, [r4, #12]
 801c4f6:	e7cd      	b.n	801c494 <__smakebuf_r+0x18>
 801c4f8:	0801c289 	.word	0x0801c289

0801c4fc <__malloc_lock>:
 801c4fc:	4801      	ldr	r0, [pc, #4]	; (801c504 <__malloc_lock+0x8>)
 801c4fe:	f7ff bf95 	b.w	801c42c <__retarget_lock_acquire_recursive>
 801c502:	bf00      	nop
 801c504:	2000a6f8 	.word	0x2000a6f8

0801c508 <__malloc_unlock>:
 801c508:	4801      	ldr	r0, [pc, #4]	; (801c510 <__malloc_unlock+0x8>)
 801c50a:	f7ff bf91 	b.w	801c430 <__retarget_lock_release_recursive>
 801c50e:	bf00      	nop
 801c510:	2000a6f8 	.word	0x2000a6f8

0801c514 <__sread>:
 801c514:	b510      	push	{r4, lr}
 801c516:	460c      	mov	r4, r1
 801c518:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c51c:	f000 f894 	bl	801c648 <_read_r>
 801c520:	2800      	cmp	r0, #0
 801c522:	bfab      	itete	ge
 801c524:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c526:	89a3      	ldrhlt	r3, [r4, #12]
 801c528:	181b      	addge	r3, r3, r0
 801c52a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c52e:	bfac      	ite	ge
 801c530:	6563      	strge	r3, [r4, #84]	; 0x54
 801c532:	81a3      	strhlt	r3, [r4, #12]
 801c534:	bd10      	pop	{r4, pc}

0801c536 <__swrite>:
 801c536:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c53a:	461f      	mov	r7, r3
 801c53c:	898b      	ldrh	r3, [r1, #12]
 801c53e:	05db      	lsls	r3, r3, #23
 801c540:	4605      	mov	r5, r0
 801c542:	460c      	mov	r4, r1
 801c544:	4616      	mov	r6, r2
 801c546:	d505      	bpl.n	801c554 <__swrite+0x1e>
 801c548:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c54c:	2302      	movs	r3, #2
 801c54e:	2200      	movs	r2, #0
 801c550:	f000 f868 	bl	801c624 <_lseek_r>
 801c554:	89a3      	ldrh	r3, [r4, #12]
 801c556:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c55a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c55e:	81a3      	strh	r3, [r4, #12]
 801c560:	4632      	mov	r2, r6
 801c562:	463b      	mov	r3, r7
 801c564:	4628      	mov	r0, r5
 801c566:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c56a:	f000 b817 	b.w	801c59c <_write_r>

0801c56e <__sseek>:
 801c56e:	b510      	push	{r4, lr}
 801c570:	460c      	mov	r4, r1
 801c572:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c576:	f000 f855 	bl	801c624 <_lseek_r>
 801c57a:	1c43      	adds	r3, r0, #1
 801c57c:	89a3      	ldrh	r3, [r4, #12]
 801c57e:	bf15      	itete	ne
 801c580:	6560      	strne	r0, [r4, #84]	; 0x54
 801c582:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c586:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c58a:	81a3      	strheq	r3, [r4, #12]
 801c58c:	bf18      	it	ne
 801c58e:	81a3      	strhne	r3, [r4, #12]
 801c590:	bd10      	pop	{r4, pc}

0801c592 <__sclose>:
 801c592:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c596:	f000 b813 	b.w	801c5c0 <_close_r>
	...

0801c59c <_write_r>:
 801c59c:	b538      	push	{r3, r4, r5, lr}
 801c59e:	4d07      	ldr	r5, [pc, #28]	; (801c5bc <_write_r+0x20>)
 801c5a0:	4604      	mov	r4, r0
 801c5a2:	4608      	mov	r0, r1
 801c5a4:	4611      	mov	r1, r2
 801c5a6:	2200      	movs	r2, #0
 801c5a8:	602a      	str	r2, [r5, #0]
 801c5aa:	461a      	mov	r2, r3
 801c5ac:	f7e5 fcbd 	bl	8001f2a <_write>
 801c5b0:	1c43      	adds	r3, r0, #1
 801c5b2:	d102      	bne.n	801c5ba <_write_r+0x1e>
 801c5b4:	682b      	ldr	r3, [r5, #0]
 801c5b6:	b103      	cbz	r3, 801c5ba <_write_r+0x1e>
 801c5b8:	6023      	str	r3, [r4, #0]
 801c5ba:	bd38      	pop	{r3, r4, r5, pc}
 801c5bc:	2000a700 	.word	0x2000a700

0801c5c0 <_close_r>:
 801c5c0:	b538      	push	{r3, r4, r5, lr}
 801c5c2:	4d06      	ldr	r5, [pc, #24]	; (801c5dc <_close_r+0x1c>)
 801c5c4:	2300      	movs	r3, #0
 801c5c6:	4604      	mov	r4, r0
 801c5c8:	4608      	mov	r0, r1
 801c5ca:	602b      	str	r3, [r5, #0]
 801c5cc:	f7e5 fcba 	bl	8001f44 <_close>
 801c5d0:	1c43      	adds	r3, r0, #1
 801c5d2:	d102      	bne.n	801c5da <_close_r+0x1a>
 801c5d4:	682b      	ldr	r3, [r5, #0]
 801c5d6:	b103      	cbz	r3, 801c5da <_close_r+0x1a>
 801c5d8:	6023      	str	r3, [r4, #0]
 801c5da:	bd38      	pop	{r3, r4, r5, pc}
 801c5dc:	2000a700 	.word	0x2000a700

0801c5e0 <_fstat_r>:
 801c5e0:	b538      	push	{r3, r4, r5, lr}
 801c5e2:	4d07      	ldr	r5, [pc, #28]	; (801c600 <_fstat_r+0x20>)
 801c5e4:	2300      	movs	r3, #0
 801c5e6:	4604      	mov	r4, r0
 801c5e8:	4608      	mov	r0, r1
 801c5ea:	4611      	mov	r1, r2
 801c5ec:	602b      	str	r3, [r5, #0]
 801c5ee:	f7e5 fcac 	bl	8001f4a <_fstat>
 801c5f2:	1c43      	adds	r3, r0, #1
 801c5f4:	d102      	bne.n	801c5fc <_fstat_r+0x1c>
 801c5f6:	682b      	ldr	r3, [r5, #0]
 801c5f8:	b103      	cbz	r3, 801c5fc <_fstat_r+0x1c>
 801c5fa:	6023      	str	r3, [r4, #0]
 801c5fc:	bd38      	pop	{r3, r4, r5, pc}
 801c5fe:	bf00      	nop
 801c600:	2000a700 	.word	0x2000a700

0801c604 <_isatty_r>:
 801c604:	b538      	push	{r3, r4, r5, lr}
 801c606:	4d06      	ldr	r5, [pc, #24]	; (801c620 <_isatty_r+0x1c>)
 801c608:	2300      	movs	r3, #0
 801c60a:	4604      	mov	r4, r0
 801c60c:	4608      	mov	r0, r1
 801c60e:	602b      	str	r3, [r5, #0]
 801c610:	f7e5 fca0 	bl	8001f54 <_isatty>
 801c614:	1c43      	adds	r3, r0, #1
 801c616:	d102      	bne.n	801c61e <_isatty_r+0x1a>
 801c618:	682b      	ldr	r3, [r5, #0]
 801c61a:	b103      	cbz	r3, 801c61e <_isatty_r+0x1a>
 801c61c:	6023      	str	r3, [r4, #0]
 801c61e:	bd38      	pop	{r3, r4, r5, pc}
 801c620:	2000a700 	.word	0x2000a700

0801c624 <_lseek_r>:
 801c624:	b538      	push	{r3, r4, r5, lr}
 801c626:	4d07      	ldr	r5, [pc, #28]	; (801c644 <_lseek_r+0x20>)
 801c628:	4604      	mov	r4, r0
 801c62a:	4608      	mov	r0, r1
 801c62c:	4611      	mov	r1, r2
 801c62e:	2200      	movs	r2, #0
 801c630:	602a      	str	r2, [r5, #0]
 801c632:	461a      	mov	r2, r3
 801c634:	f7e5 fc90 	bl	8001f58 <_lseek>
 801c638:	1c43      	adds	r3, r0, #1
 801c63a:	d102      	bne.n	801c642 <_lseek_r+0x1e>
 801c63c:	682b      	ldr	r3, [r5, #0]
 801c63e:	b103      	cbz	r3, 801c642 <_lseek_r+0x1e>
 801c640:	6023      	str	r3, [r4, #0]
 801c642:	bd38      	pop	{r3, r4, r5, pc}
 801c644:	2000a700 	.word	0x2000a700

0801c648 <_read_r>:
 801c648:	b538      	push	{r3, r4, r5, lr}
 801c64a:	4d07      	ldr	r5, [pc, #28]	; (801c668 <_read_r+0x20>)
 801c64c:	4604      	mov	r4, r0
 801c64e:	4608      	mov	r0, r1
 801c650:	4611      	mov	r1, r2
 801c652:	2200      	movs	r2, #0
 801c654:	602a      	str	r2, [r5, #0]
 801c656:	461a      	mov	r2, r3
 801c658:	f7e5 fc5a 	bl	8001f10 <_read>
 801c65c:	1c43      	adds	r3, r0, #1
 801c65e:	d102      	bne.n	801c666 <_read_r+0x1e>
 801c660:	682b      	ldr	r3, [r5, #0]
 801c662:	b103      	cbz	r3, 801c666 <_read_r+0x1e>
 801c664:	6023      	str	r3, [r4, #0]
 801c666:	bd38      	pop	{r3, r4, r5, pc}
 801c668:	2000a700 	.word	0x2000a700

0801c66c <_init>:
 801c66c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c66e:	bf00      	nop
 801c670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c672:	bc08      	pop	{r3}
 801c674:	469e      	mov	lr, r3
 801c676:	4770      	bx	lr

0801c678 <_fini>:
 801c678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c67a:	bf00      	nop
 801c67c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c67e:	bc08      	pop	{r3}
 801c680:	469e      	mov	lr, r3
 801c682:	4770      	bx	lr
