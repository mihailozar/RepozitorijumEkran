
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021e60  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000400c  08022020  08022020  00032020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000194  0802602c  0802602c  0003602c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  080261c0  080261c0  000799d4  2**0
                  CONTENTS
  5 .ARM          00000008  080261c0  080261c0  000361c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  080261c8  080261c8  000799d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  080261c8  080261c8  000361c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  080261e0  080261e0  000361e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000164  20000000  080261e8  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000ef60  20000164  0802634c  00040164  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000f0c4  0802634c  0004f0c4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000799d4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  00079a04  2**0
                  CONTENTS
 14 FontFlashSection 00029658  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000037c  90029658  90029658  00079658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   000608e5  00000000  00000000  00079a04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   001023b8  00000000  00000000  000da2e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000197d2  00000000  00000000  001dc6a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002df0  00000000  00000000  001f5e78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013206c  00000000  00000000  001f8c68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00007d88  00000000  00000000  0032acd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000415e9  00000000  00000000  00332a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  000395d5  00000000  00000000  00374049  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  003ad61e  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000088c0  00000000  00000000  003ad6f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000164 	.word	0x20000164
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08022008 	.word	0x08022008

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000168 	.word	0x20000168
 80001fc:	08022008 	.word	0x08022008

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f006 f9cb 	bl	800695c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f020 fd7b 	bl	80210c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff75 	bl	80014b8 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	080261e8 	.word	0x080261e8
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005e0:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005e4:	2000f0c4 	.word	0x2000f0c4

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bdef 	b.w	80011cc <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be5d 	b.w	80012ac <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f005 bd19 	b.w	800602c <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f005 bd50 	b.w	80060a0 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f020 fbcb 	bl	8020de2 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	20000180 	.word	0x20000180

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	20000180 	.word	0x20000180

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f020 fb8a 	bl	8020de2 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f020 fb82 	bl	8020de2 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f006 f881 	bl	80067f4 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f020 fb99 	bl	8020e40 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000184 	.word	0x20000184
 8000714:	080220ac 	.word	0x080220ac
 8000718:	080220bf 	.word	0x080220bf
 800071c:	080220e9 	.word	0x080220e9

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f006 f89f 	bl	8006870 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000184 	.word	0x20000184

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f007 ba9f 	b.w	8007cac <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000188 	.word	0x20000188
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f007 ba83 	b.w	8007cac <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000188 	.word	0x20000188
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f007 ba71 	b.w	8007cb6 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f007 fa51 	bl	8007ca0 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000188 	.word	0x20000188

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000198 	.word	0x20000198

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd94 	bl	80013b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	200001a4 	.word	0x200001a4
 80008a8:	200001a0 	.word	0x200001a0

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa17 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f006 ffd3 	bl	800787e <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa0a 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000ee2c 	.word	0x2000ee2c

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f00c fbd6 	bl	800d0a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd54 	b.w	80013ae <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd6b 	b.w	80013e0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd6b 	b.w	80013e4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd3d 	b.w	800138c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd43 	b.w	800139c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd67 	b.w	80013e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800091c:	4b02      	ldr	r3, [pc, #8]	; (8000928 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000922:	f00b bdaf 	b.w	800c484 <_ZN8touchgfx3HAL10beginFrameEv>
 8000926:	bf00      	nop
 8000928:	20000014 	.word	0x20000014

0800092c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800092c:	b510      	push	{r4, lr}
 800092e:	4604      	mov	r4, r0
    HAL::endFrame();
 8000930:	f00b fdb4 	bl	800c49c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000934:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000938:	b113      	cbz	r3, 8000940 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800093a:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800093c:	2201      	movs	r2, #1
 800093e:	701a      	strb	r2, [r3, #0]
    }
}
 8000940:	bd10      	pop	{r4, pc}
 8000942:	bf00      	nop
 8000944:	20000014 	.word	0x20000014

08000948 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000948:	f00b bd62 	b.w	800c410 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094c <_ZN11TouchGFXHALD0Ev>:
 800094c:	b510      	push	{r4, lr}
 800094e:	217c      	movs	r1, #124	; 0x7c
 8000950:	4604      	mov	r4, r0
 8000952:	f020 fa46 	bl	8020de2 <_ZdlPvj>
 8000956:	4620      	mov	r0, r4
 8000958:	bd10      	pop	{r4, pc}

0800095a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800095e:	b11b      	cbz	r3, 8000968 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000960:	6840      	ldr	r0, [r0, #4]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4718      	bx	r3
    }
 8000968:	4618      	mov	r0, r3
 800096a:	4770      	bx	lr

0800096c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800096c:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800096e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000972:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000976:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000978:	428c      	cmp	r4, r1
 800097a:	781a      	ldrb	r2, [r3, #0]
 800097c:	d00d      	beq.n	800099a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800097e:	b95a      	cbnz	r2, 8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000980:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000982:	490f      	ldr	r1, [pc, #60]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000984:	480f      	ldr	r0, [pc, #60]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000986:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000988:	4d0f      	ldr	r5, [pc, #60]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800098a:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800098c:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800098e:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000990:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8000992:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000994:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000996:	701a      	strb	r2, [r3, #0]
    }
 8000998:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800099a:	2a00      	cmp	r2, #0
 800099c:	d0fc      	beq.n	8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800099e:	4809      	ldr	r0, [pc, #36]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80009a0:	4a07      	ldr	r2, [pc, #28]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80009a2:	8801      	ldrh	r1, [r0, #0]
 80009a4:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80009a6:	4a05      	ldr	r2, [pc, #20]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80009a8:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80009aa:	8814      	ldrh	r4, [r2, #0]
 80009ac:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80009ae:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80009b0:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80009b2:	2200      	movs	r2, #0
 80009b4:	e7ef      	b.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80009b6:	bf00      	nop
 80009b8:	2000eb08 	.word	0x2000eb08
 80009bc:	2000eb04 	.word	0x2000eb04
 80009c0:	2000eb0a 	.word	0x2000eb0a
 80009c4:	2000eb06 	.word	0x2000eb06
 80009c8:	2000eb0c 	.word	0x2000eb0c

080009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009cc:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009ce:	4c0c      	ldr	r4, [pc, #48]	; (8000a00 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009d0:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009d2:	b931      	cbnz	r1, 80009e2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009d4:	4b0b      	ldr	r3, [pc, #44]	; (8000a04 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009d6:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009da:	f44f 7125 	mov.w	r1, #660	; 0x294
 80009de:	f020 fa2f 	bl	8020e40 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009e6:	3a00      	subs	r2, #0
 80009e8:	4909      	ldr	r1, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ec:	bf18      	it	ne
 80009ee:	2201      	movne	r2, #1
 80009f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009f2:	3b00      	subs	r3, #0
 80009f4:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009f6:	bf18      	it	ne
 80009f8:	2301      	movne	r3, #1
 80009fa:	7013      	strb	r3, [r2, #0]
}
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000198 	.word	0x20000198
 8000a04:	08022160 	.word	0x08022160
 8000a08:	08022198 	.word	0x08022198
 8000a0c:	080221e6 	.word	0x080221e6
 8000a10:	2000eb0e 	.word	0x2000eb0e
 8000a14:	2000eb0f 	.word	0x2000eb0f

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f006 ff28 	bl	800787e <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f006 ff2d 	bl	80078a0 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000ee2c 	.word	0x2000ee2c

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f006 ff1b 	bl	80078a0 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f006 ff03 	bl	800787e <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	200001b0 	.word	0x200001b0
 8000a80:	2000ee2c 	.word	0x2000ee2c

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc8a 	b.w	80013ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f006 fef7 	bl	80078a0 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000ee2c 	.word	0x2000ee2c

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f00c facf 	bl	800d0a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f006 fea6 	bl	800785e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000eb10 	.word	0x2000eb10
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	200001b2 	.word	0x200001b2
 8000b24:	2000019c 	.word	0x2000019c

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f006 be64 	b.w	800785e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	69db      	ldr	r3, [r3, #28]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	2000019c 	.word	0x2000019c
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000198 	.word	0x20000198
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	200001b2 	.word	0x200001b2
 8000c14:	2000eb10 	.word	0x2000eb10

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f00c fa56 	bl	800d0d4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000eb10 	.word	0x2000eb10

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	200001a4 	.word	0x200001a4
 8000c4c:	200001a0 	.word	0x200001a0
 8000c50:	08022070 	.word	0x08022070
 8000c54:	08022098 	.word	0x08022098

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f009 f8a8 	bl	8009db4 <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f020 f8e5 	bl	8020e40 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f009 f938 	bl	8009ef0 <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	212b      	movs	r1, #43	; 0x2b
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	200001b8 	.word	0x200001b8
 8000c94:	080222f8 	.word	0x080222f8
 8000c98:	08022341 	.word	0x08022341
 8000c9c:	08022370 	.word	0x08022370
 8000ca0:	200001b4 	.word	0x200001b4
 8000ca4:	080223ce 	.word	0x080223ce

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f009 b8ca 	b.w	8009e48 <osSemaphoreAcquire>
 8000cb4:	200001b8 	.word	0x200001b8

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f009 b8f0 	b.w	8009ea0 <osSemaphoreRelease>
 8000cc0:	200001b8 	.word	0x200001b8

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f009 b8bd 	b.w	8009e48 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	200001b8 	.word	0x200001b8

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f009 b941 	b.w	8009f68 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	200001b4 	.word	0x200001b4
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f009 f964 	bl	8009fc8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f009 f95d 	bl	8009fc8 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	200001b4 	.word	0x200001b4

08000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * running without an operating system, the implementation can run
 * a very short task and return.
 */
void OSWrappers::taskYield()
{
    osThreadYield();
 8000d18:	f009 b82e 	b.w	8009d78 <osThreadYield>

08000d1c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d1c:	6803      	ldr	r3, [r0, #0]
 8000d1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d20:	4718      	bx	r3

08000d22 <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d22:	2001      	movs	r0, #1
 8000d24:	4770      	bx	lr

08000d26 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d26:	6803      	ldr	r3, [r0, #0]
 8000d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d2a:	4718      	bx	r3

08000d2c <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d2c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2e:	2300      	movs	r3, #0
 8000d30:	9301      	str	r3, [sp, #4]
 8000d32:	4b0d      	ldr	r3, [pc, #52]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d36:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d3a:	631a      	str	r2, [r3, #48]	; 0x30
 8000d3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d42:	9201      	str	r2, [sp, #4]
 8000d44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d46:	691a      	ldr	r2, [r3, #16]
 8000d48:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d4c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4e:	691a      	ldr	r2, [r3, #16]
 8000d50:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d54:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d56:	4b05      	ldr	r3, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d58:	4a05      	ldr	r2, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d5a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5c:	4b05      	ldr	r3, [pc, #20]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d62:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d64:	b002      	add	sp, #8
 8000d66:	4770      	bx	lr
 8000d68:	40023800 	.word	0x40023800
 8000d6c:	2000ef1c 	.word	0x2000ef1c
 8000d70:	08000d81 	.word	0x08000d81
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d78:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000d7c:	4770      	bx	lr
	...

08000d80 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000d80:	4b02      	ldr	r3, [pc, #8]	; (8000d8c <DMA2D_XferCpltCallback+0xc>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d86:	6803      	ldr	r3, [r0, #0]
 8000d88:	695b      	ldr	r3, [r3, #20]
 8000d8a:	4718      	bx	r3
 8000d8c:	2000eb10 	.word	0x2000eb10

08000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d90:	b508      	push	{r3, lr}
 8000d92:	280b      	cmp	r0, #11
 8000d94:	d80b      	bhi.n	8000dae <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d96:	e8df f000 	tbb	[pc, r0]
 8000d9a:	0612      	.short	0x0612
 8000d9c:	0a0a0a10 	.word	0x0a0a0a10
 8000da0:	0808080a 	.word	0x0808080a
 8000da4:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da6:	2001      	movs	r0, #1
}
 8000da8:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000daa:	2005      	movs	r0, #5
        break;
 8000dac:	e7fc      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dae:	4b05      	ldr	r3, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000db0:	4a05      	ldr	r2, [pc, #20]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000db2:	4806      	ldr	r0, [pc, #24]	; (8000dcc <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db4:	2165      	movs	r1, #101	; 0x65
 8000db6:	f020 f843 	bl	8020e40 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000dba:	2000      	movs	r0, #0
 8000dbc:	e7f4      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dbe:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dc0:	e7f2      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dc2:	bf00      	nop
 8000dc4:	08022410 	.word	0x08022410
 8000dc8:	0802242b 	.word	0x0802242b
 8000dcc:	08022477 	.word	0x08022477

08000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dd0:	b508      	push	{r3, lr}
 8000dd2:	280a      	cmp	r0, #10
 8000dd4:	d809      	bhi.n	8000dea <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd6:	e8df f000 	tbb	[pc, r0]
 8000dda:	0610      	.short	0x0610
 8000ddc:	0808080e 	.word	0x0808080e
 8000de0:	06060608 	.word	0x06060608
 8000de4:	06          	.byte	0x06
 8000de5:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de6:	2001      	movs	r0, #1
}
 8000de8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000dea:	4b05      	ldr	r3, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000dec:	4a05      	ldr	r2, [pc, #20]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dee:	4806      	ldr	r0, [pc, #24]	; (8000e08 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000df0:	2186      	movs	r1, #134	; 0x86
 8000df2:	f020 f825 	bl	8020e40 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df6:	2000      	movs	r0, #0
 8000df8:	e7f6      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000dfa:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dfc:	e7f4      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfe:	bf00      	nop
 8000e00:	08022410 	.word	0x08022410
 8000e04:	080224d3 	.word	0x080224d3
 8000e08:	08022477 	.word	0x08022477

08000e0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e10:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e14:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e16:	4640      	mov	r0, r8
 8000e18:	f7ff ffba 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e20:	4638      	mov	r0, r7
 8000e22:	f7ff ffb5 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e26:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e28:	4638      	mov	r0, r7
 8000e2a:	f7ff ffd1 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2e:	8aa1      	ldrh	r1, [r4, #20]
 8000e30:	8b62      	ldrh	r2, [r4, #26]
 8000e32:	4b53      	ldr	r3, [pc, #332]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e34:	1a52      	subs	r2, r2, r1
 8000e36:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e38:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e3a:	8b22      	ldrh	r2, [r4, #24]
 8000e3c:	1a52      	subs	r2, r2, r1
 8000e3e:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e42:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e44:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e48:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4e:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e50:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e52:	f8d4 c000 	ldr.w	ip, [r4]
 8000e56:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e5a:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e5e:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e62:	469e      	mov	lr, r3
 8000e64:	d03b      	beq.n	8000ede <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000e66:	d815      	bhi.n	8000e94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000e68:	f1bc 0f20 	cmp.w	ip, #32
 8000e6c:	ea45 0002 	orr.w	r0, r5, r2
 8000e70:	d079      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e72:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e76:	d076      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e78:	f1bc 0f04 	cmp.w	ip, #4
 8000e7c:	d02b      	beq.n	8000ed6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e7e:	4b40      	ldr	r3, [pc, #256]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e80:	432a      	orrs	r2, r5
 8000e82:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e86:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e88:	61da      	str	r2, [r3, #28]
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8a:	bf14      	ite	ne
 8000e8c:	4a3d      	ldrne	r2, [pc, #244]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8e:	f240 2201 	movweq	r2, #513	; 0x201
 8000e92:	e01e      	b.n	8000ed2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc6>
    switch (blitOp.operation)
 8000e94:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000e98:	d007      	beq.n	8000eaa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000e9a:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000e9e:	d1ee      	bne.n	8000e7e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ea4:	f042 0209 	orr.w	r2, r2, #9
 8000ea8:	e003      	b.n	8000eb2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eae:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb2:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000eb4:	68e0      	ldr	r0, [r4, #12]
 8000eb6:	0202      	lsls	r2, r0, #8
 8000eb8:	0144      	lsls	r4, r0, #5
 8000eba:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000ebe:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ec2:	00c0      	lsls	r0, r0, #3
 8000ec4:	4322      	orrs	r2, r4
 8000ec6:	b2c0      	uxtb	r0, r0
 8000ec8:	4302      	orrs	r2, r0
 8000eca:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ecc:	4a2e      	ldr	r2, [pc, #184]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ece:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ed0:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ed2:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ed4:	e043      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed6:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eda:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000edc:	e7f6      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ede:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee0:	432a      	orrs	r2, r5
 8000ee2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ee6:	1d04      	adds	r4, r0, #4
 8000ee8:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eea:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000eec:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ef0:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000ef2:	b142      	cbz	r2, 8000f06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ef4:	2a01      	cmp	r2, #1
 8000ef6:	d01c      	beq.n	8000f32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
                assert(0 && "Unsupported format");
 8000ef8:	4b24      	ldr	r3, [pc, #144]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 8000efa:	4a25      	ldr	r2, [pc, #148]	; (8000f90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 8000efc:	4825      	ldr	r0, [pc, #148]	; (8000f94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000efe:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000f02:	f01f ff9d 	bl	8020e40 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f06:	8842      	ldrh	r2, [r0, #2]
 8000f08:	69d9      	ldr	r1, [r3, #28]
 8000f0a:	1e50      	subs	r0, r2, #1
 8000f0c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f10:	f022 0210 	bic.w	r2, r2, #16
 8000f14:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f18:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f1a:	2501      	movs	r5, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f1c:	4c18      	ldr	r4, [pc, #96]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000f1e:	69e3      	ldr	r3, [r4, #28]
 8000f20:	f043 0320 	orr.w	r3, r3, #32
 8000f24:	61e3      	str	r3, [r4, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f26:	69e3      	ldr	r3, [r4, #28]
 8000f28:	069b      	lsls	r3, r3, #26
 8000f2a:	d513      	bpl.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                OSWrappers::taskYield();
 8000f2c:	f7ff fef4 	bl	8000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f30:	e7f9      	b.n	8000f26 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x11a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f32:	8842      	ldrh	r2, [r0, #2]
 8000f34:	69d9      	ldr	r1, [r3, #28]
 8000f36:	1e50      	subs	r0, r2, #1
 8000f38:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f3c:	f022 0210 	bic.w	r2, r2, #16
 8000f40:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f44:	f1b9 05ff 	subs.w	r5, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f48:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f4c:	bf18      	it	ne
 8000f4e:	2501      	movne	r5, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f50:	61da      	str	r2, [r3, #28]
                break;
 8000f52:	e7e3      	b.n	8000f1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x110>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f54:	2310      	movs	r3, #16
 8000f56:	60a3      	str	r3, [r4, #8]
            if(blend)
 8000f58:	b11d      	cbz	r5, 8000f62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5a:	4b0b      	ldr	r3, [pc, #44]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5c:	6023      	str	r3, [r4, #0]
}
 8000f5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f62:	4b08      	ldr	r3, [pc, #32]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000f64:	e7fa      	b.n	8000f5c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f66:	4b08      	ldr	r3, [pc, #32]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f6c:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f70:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f74:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f78:	f8ce 3000 	str.w	r3, [lr]
        break;
 8000f7c:	e7ef      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
 8000f7e:	bf00      	nop
 8000f80:	4002b000 	.word	0x4002b000
 8000f84:	00010201 	.word	0x00010201
 8000f88:	00020201 	.word	0x00020201
 8000f8c:	08022520 	.word	0x08022520
 8000f90:	0802253a 	.word	0x0802253a
 8000f94:	08022477 	.word	0x08022477

08000f98 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000f9c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9e:	4630      	mov	r0, r6
 8000fa0:	f7ff ff16 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa4:	8aa7      	ldrh	r7, [r4, #20]
 8000fa6:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fa8:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000faa:	4b1e      	ldr	r3, [pc, #120]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fac:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb0:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb4:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb6:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb8:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fbc:	6821      	ldr	r1, [r4, #0]
 8000fbe:	2908      	cmp	r1, #8
 8000fc0:	d118      	bne.n	8000ff4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fc6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fc8:	7f21      	ldrb	r1, [r4, #28]
 8000fca:	4a17      	ldr	r2, [pc, #92]	; (8001028 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fcc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fd0:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fd2:	68e1      	ldr	r1, [r4, #12]
 8000fd4:	020a      	lsls	r2, r1, #8
 8000fd6:	0148      	lsls	r0, r1, #5
 8000fd8:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fdc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fe0:	00c9      	lsls	r1, r1, #3
 8000fe2:	4302      	orrs	r2, r0
 8000fe4:	b2c9      	uxtb	r1, r1
 8000fe6:	430a      	orrs	r2, r1
 8000fe8:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fea:	4a10      	ldr	r2, [pc, #64]	; (800102c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fec:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fee:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff0:	601a      	str	r2, [r3, #0]
    }
}
 8000ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff4:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ff6:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff8:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000ffa:	68e1      	ldr	r1, [r4, #12]
 8000ffc:	b91e      	cbnz	r6, 8001006 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000ffe:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001000:	4b08      	ldr	r3, [pc, #32]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8001002:	4a0b      	ldr	r2, [pc, #44]	; (8001030 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8001004:	e7f4      	b.n	8000ff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8001006:	020a      	lsls	r2, r1, #8
 8001008:	0148      	lsls	r0, r1, #5
 800100a:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 800100e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001012:	00c9      	lsls	r1, r1, #3
 8001014:	b2c9      	uxtb	r1, r1
 8001016:	4302      	orrs	r2, r0
 8001018:	430a      	orrs	r2, r1
 800101a:	7f21      	ldrb	r1, [r4, #28]
 800101c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001020:	639a      	str	r2, [r3, #56]	; 0x38
 8001022:	e7ed      	b.n	8001000 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001024:	4002b000 	.word	0x4002b000
 8001028:	00010009 	.word	0x00010009
 800102c:	00020201 	.word	0x00020201
 8001030:	00030201 	.word	0x00030201

08001034 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001034:	4b05      	ldr	r3, [pc, #20]	; (800104c <_ZN10STM32F4DMAD1Ev+0x18>)
 8001036:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001038:	4b05      	ldr	r3, [pc, #20]	; (8001050 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800103a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800103e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001042:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001046:	f3bf 8f6f 	isb	sy
}
 800104a:	4770      	bx	lr
 800104c:	08022584 	.word	0x08022584
 8001050:	e000e100 	.word	0xe000e100

08001054 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001054:	b510      	push	{r4, lr}
 8001056:	4604      	mov	r4, r0
}
 8001058:	f7ff ffec 	bl	8001034 <_ZN10STM32F4DMAD1Ev>
 800105c:	4620      	mov	r0, r4
 800105e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001062:	f01f febe 	bl	8020de2 <_ZdlPvj>
 8001066:	4620      	mov	r0, r4
 8001068:	bd10      	pop	{r4, pc}
	...

0800106c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800106c:	b570      	push	{r4, r5, r6, lr}
 800106e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001070:	4625      	mov	r5, r4
 8001072:	4b0a      	ldr	r3, [pc, #40]	; (800109c <_ZN10STM32F4DMAC1Ev+0x30>)
 8001074:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001076:	2600      	movs	r6, #0
 8001078:	6060      	str	r0, [r4, #4]
 800107a:	7226      	strb	r6, [r4, #8]
 800107c:	7266      	strb	r6, [r4, #9]
 800107e:	f845 3b20 	str.w	r3, [r5], #32
 8001082:	2260      	movs	r2, #96	; 0x60
 8001084:	4629      	mov	r1, r5
 8001086:	f00c f95d 	bl	800d344 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800108a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800108e:	60ee      	str	r6, [r5, #12]
 8001090:	3520      	adds	r5, #32
 8001092:	42ab      	cmp	r3, r5
 8001094:	d1fb      	bne.n	800108e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8001096:	4620      	mov	r0, r4
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	bf00      	nop
 800109c:	08022584 	.word	0x08022584

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010a4:	200c      	movs	r0, #12
 80010a6:	4770      	bx	lr

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010a8:	230c      	movs	r3, #12
 80010aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ae:	3008      	adds	r0, #8
 80010b0:	4770      	bx	lr

080010b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010b2:	230c      	movs	r3, #12
 80010b4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b8:	3008      	adds	r0, #8
 80010ba:	4770      	bx	lr

080010bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010bc:	2001      	movs	r0, #1
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c0:	f644 2004 	movw	r0, #18948	; 0x4a04
 80010c4:	4770      	bx	lr

080010c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010c6:	f644 2304 	movw	r3, #18948	; 0x4a04
 80010ca:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ce:	3008      	adds	r0, #8
 80010d0:	4770      	bx	lr

080010d2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d2:	f644 2304 	movw	r3, #18948	; 0x4a04
 80010d6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010da:	3008      	adds	r0, #8
 80010dc:	4770      	bx	lr

080010de <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010de:	2001      	movs	r0, #1
 80010e0:	4770      	bx	lr

080010e2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e2:	2010      	movs	r0, #16
 80010e4:	4770      	bx	lr

080010e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010ea:	3008      	adds	r0, #8
 80010ec:	4770      	bx	lr

080010ee <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ee:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010f6:	4608      	mov	r0, r1
 80010f8:	f001 b8a2 	b.w	8002240 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

080010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b03      	ldr	r3, [pc, #12]	; (800110c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f00a ff98 	bl	800c038 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001108:	4620      	mov	r0, r4
 800110a:	bd10      	pop	{r4, pc}
 800110c:	0802263c 	.word	0x0802263c

08001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001110:	b510      	push	{r4, lr}
 8001112:	4604      	mov	r4, r0
 8001114:	f7ff fff2 	bl	80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001118:	4620      	mov	r0, r4
 800111a:	2114      	movs	r1, #20
 800111c:	f01f fe61 	bl	8020de2 <_ZdlPvj>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}

08001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001124:	b510      	push	{r4, lr}
 8001126:	4b03      	ldr	r3, [pc, #12]	; (8001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001128:	6003      	str	r3, [r0, #0]
 800112a:	4604      	mov	r4, r0
 800112c:	f00a ff84 	bl	800c038 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	bd10      	pop	{r4, pc}
 8001134:	08022608 	.word	0x08022608

08001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001138:	b510      	push	{r4, lr}
 800113a:	4604      	mov	r4, r0
 800113c:	f7ff fff2 	bl	8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001140:	4620      	mov	r0, r4
 8001142:	f644 210c 	movw	r1, #18956	; 0x4a0c
 8001146:	f01f fe4c 	bl	8020de2 <_ZdlPvj>
 800114a:	4620      	mov	r0, r4
 800114c:	bd10      	pop	{r4, pc}
	...

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4b03      	ldr	r3, [pc, #12]	; (8001160 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001154:	6003      	str	r3, [r0, #0]
 8001156:	4604      	mov	r4, r0
 8001158:	f00a ff6e 	bl	800c038 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800115c:	4620      	mov	r0, r4
 800115e:	bd10      	pop	{r4, pc}
 8001160:	080225d4 	.word	0x080225d4

08001164 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001164:	b510      	push	{r4, lr}
 8001166:	4604      	mov	r4, r0
 8001168:	f7ff fff2 	bl	8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800116c:	4620      	mov	r0, r4
 800116e:	2118      	movs	r1, #24
 8001170:	f01f fe37 	bl	8020de2 <_ZdlPvj>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}

08001178 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001178:	b510      	push	{r4, lr}
 800117a:	4b09      	ldr	r3, [pc, #36]	; (80011a0 <_ZN12FrontendHeapD1Ev+0x28>)
 800117c:	6003      	str	r3, [r0, #0]
 800117e:	4604      	mov	r4, r0
 8001180:	f500 4094 	add.w	r0, r0, #18944	; 0x4a00
 8001184:	3038      	adds	r0, #56	; 0x38
 8001186:	f7ff ffb9 	bl	80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800118a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800118e:	f7ff ffc9 	bl	8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen3ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001192:	f104 0014 	add.w	r0, r4, #20
 8001196:	f7ff ffdb 	bl	8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800119a:	4620      	mov	r0, r4
 800119c:	bd10      	pop	{r4, pc}
 800119e:	bf00      	nop
 80011a0:	08022670 	.word	0x08022670

080011a4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011a4:	b508      	push	{r3, lr}
 80011a6:	4802      	ldr	r0, [pc, #8]	; (80011b0 <__tcf_0+0xc>)
 80011a8:	f7ff ffe6 	bl	8001178 <_ZN12FrontendHeapD1Ev>
 80011ac:	bd08      	pop	{r3, pc}
 80011ae:	bf00      	nop
 80011b0:	200001c0 	.word	0x200001c0

080011b4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011b4:	b510      	push	{r4, lr}
 80011b6:	4604      	mov	r4, r0
 80011b8:	f7ff ffde 	bl	8001178 <_ZN12FrontendHeapD1Ev>
 80011bc:	4620      	mov	r0, r4
 80011be:	f644 31a8 	movw	r1, #19368	; 0x4ba8
 80011c2:	f01f fe0e 	bl	8020de2 <_ZdlPvj>
 80011c6:	4620      	mov	r0, r4
 80011c8:	bd10      	pop	{r4, pc}
	...

080011cc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011cc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011d0:	f000 ff78 	bl	80020c4 <_ZN14BitmapDatabase11getInstanceEv>
 80011d4:	4605      	mov	r5, r0
 80011d6:	f000 ff79 	bl	80020cc <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011da:	2400      	movs	r4, #0
 80011dc:	4601      	mov	r1, r0
 80011de:	4623      	mov	r3, r4
 80011e0:	4628      	mov	r0, r5
 80011e2:	4622      	mov	r2, r4
 80011e4:	9400      	str	r4, [sp, #0]
 80011e6:	f012 fb27 	bl	8013838 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011ea:	4b24      	ldr	r3, [pc, #144]	; (800127c <touchgfx_init+0xb0>)
 80011ec:	4a24      	ldr	r2, [pc, #144]	; (8001280 <touchgfx_init+0xb4>)
        static FrontendHeap instance;
 80011ee:	4d25      	ldr	r5, [pc, #148]	; (8001284 <touchgfx_init+0xb8>)
 80011f0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011f2:	4620      	mov	r0, r4
 80011f4:	f004 fa68 	bl	80056c8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011f8:	4823      	ldr	r0, [pc, #140]	; (8001288 <touchgfx_init+0xbc>)
 80011fa:	f012 fa5f 	bl	80136bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011fe:	782b      	ldrb	r3, [r5, #0]
 8001200:	f3bf 8f5b 	dmb	ish
 8001204:	07db      	lsls	r3, r3, #31
 8001206:	d433      	bmi.n	8001270 <touchgfx_init+0xa4>
 8001208:	4628      	mov	r0, r5
 800120a:	f01f fdec 	bl	8020de6 <__cxa_guard_acquire>
 800120e:	b378      	cbz	r0, 8001270 <touchgfx_init+0xa4>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001210:	4c1e      	ldr	r4, [pc, #120]	; (800128c <touchgfx_init+0xc0>)
 8001212:	4f1f      	ldr	r7, [pc, #124]	; (8001290 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001214:	4b1f      	ldr	r3, [pc, #124]	; (8001294 <touchgfx_init+0xc8>)
 8001216:	6023      	str	r3, [r4, #0]
 8001218:	f107 0618 	add.w	r6, r7, #24
 800121c:	f104 0014 	add.w	r0, r4, #20
 8001220:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001224:	6060      	str	r0, [r4, #4]
 8001226:	f8c4 8008 	str.w	r8, [r4, #8]
 800122a:	60e7      	str	r7, [r4, #12]
 800122c:	6126      	str	r6, [r4, #16]
 800122e:	f00a ff05 	bl	800c03c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001232:	4b19      	ldr	r3, [pc, #100]	; (8001298 <touchgfx_init+0xcc>)
 8001234:	6163      	str	r3, [r4, #20]
 8001236:	4640      	mov	r0, r8
 8001238:	f00a ff00 	bl	800c03c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800123c:	4b17      	ldr	r3, [pc, #92]	; (800129c <touchgfx_init+0xd0>)
 800123e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001240:	4638      	mov	r0, r7
 8001242:	f00a fefb 	bl	800c03c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001246:	4b16      	ldr	r3, [pc, #88]	; (80012a0 <touchgfx_init+0xd4>)
 8001248:	603b      	str	r3, [r7, #0]
 800124a:	f107 0014 	add.w	r0, r7, #20
 800124e:	f004 fabd 	bl	80057cc <_ZN5ModelC1Ev>
 8001252:	4622      	mov	r2, r4
 8001254:	f107 0114 	add.w	r1, r7, #20
 8001258:	4630      	mov	r0, r6
 800125a:	f004 faad 	bl	80057b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800125e:	4630      	mov	r0, r6
 8001260:	f000 ffee 	bl	8002240 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001264:	4628      	mov	r0, r5
 8001266:	f01f fdca 	bl	8020dfe <__cxa_guard_release>
 800126a:	480e      	ldr	r0, [pc, #56]	; (80012a4 <touchgfx_init+0xd8>)
 800126c:	f01f fe06 	bl	8020e7c <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001270:	480d      	ldr	r0, [pc, #52]	; (80012a8 <touchgfx_init+0xdc>)
}
 8001272:	b002      	add	sp, #8
 8001274:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001278:	f7ff bafe 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 800127c:	2000eb8c 	.word	0x2000eb8c
 8001280:	20005a08 	.word	0x20005a08
 8001284:	200001bc 	.word	0x200001bc
 8001288:	2000001c 	.word	0x2000001c
 800128c:	200001c0 	.word	0x200001c0
 8001290:	20004bf8 	.word	0x20004bf8
 8001294:	08022670 	.word	0x08022670
 8001298:	080225d4 	.word	0x080225d4
 800129c:	08022608 	.word	0x08022608
 80012a0:	0802263c 	.word	0x0802263c
 80012a4:	080011a5 	.word	0x080011a5
 80012a8:	2000598c 	.word	0x2000598c

080012ac <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012ac:	4801      	ldr	r0, [pc, #4]	; (80012b4 <touchgfx_taskEntry+0x8>)
 80012ae:	f7ff bafd 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 80012b2:	bf00      	nop
 80012b4:	2000598c 	.word	0x2000598c

080012b8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012b8:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012ba:	4c24      	ldr	r4, [pc, #144]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012bc:	4e24      	ldr	r6, [pc, #144]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012be:	4b25      	ldr	r3, [pc, #148]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012c0:	4d25      	ldr	r5, [pc, #148]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012c2:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012c4:	4630      	mov	r0, r6
 80012c6:	f7ff fed1 	bl	800106c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012ca:	4628      	mov	r0, r5
 80012cc:	f015 fb38 	bl	8016940 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012d0:	4b22      	ldr	r3, [pc, #136]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012d8:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012dc:	4920      	ldr	r1, [pc, #128]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012de:	60dc      	str	r4, [r3, #12]
 80012e0:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012e4:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012e8:	6759      	str	r1, [r3, #116]	; 0x74
 80012ea:	2101      	movs	r1, #1
 80012ec:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012f0:	491c      	ldr	r1, [pc, #112]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012f2:	4c1d      	ldr	r4, [pc, #116]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 80012f4:	600b      	str	r3, [r1, #0]
        DISPLAY_WIDTH = width;
 80012f6:	491d      	ldr	r1, [pc, #116]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012f8:	851a      	strh	r2, [r3, #40]	; 0x28
 80012fa:	f44f 7050 	mov.w	r0, #832	; 0x340
 80012fe:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 8001300:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001304:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001308:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800130c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001310:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001314:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001318:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800131c:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001320:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001324:	62da      	str	r2, [r3, #44]	; 0x2c
 8001326:	861a      	strh	r2, [r3, #48]	; 0x30
 8001328:	661a      	str	r2, [r3, #96]	; 0x60
 800132a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800132e:	671a      	str	r2, [r3, #112]	; 0x70
 8001330:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_HEIGHT = height;
 8001334:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001336:	4c0e      	ldr	r4, [pc, #56]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001338:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 800133c:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800133e:	4c0d      	ldr	r4, [pc, #52]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001340:	4a0d      	ldr	r2, [pc, #52]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001342:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001344:	480d      	ldr	r0, [pc, #52]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001346:	601a      	str	r2, [r3, #0]
 8001348:	8001      	strh	r1, [r0, #0]
}
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	20004d68 	.word	0x20004d68
 8001350:	20004d6c 	.word	0x20004d6c
 8001354:	08022150 	.word	0x08022150
 8001358:	20005a0c 	.word	0x20005a0c
 800135c:	2000598c 	.word	0x2000598c
 8001360:	01000001 	.word	0x01000001
 8001364:	2000eb10 	.word	0x2000eb10
 8001368:	2000eb06 	.word	0x2000eb06
 800136c:	2000eb04 	.word	0x2000eb04
 8001370:	2000eb08 	.word	0x2000eb08
 8001374:	2000eb0a 	.word	0x2000eb0a
 8001378:	08022234 	.word	0x08022234
 800137c:	2000eb0c 	.word	0x2000eb0c

08001380 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001380:	4801      	ldr	r0, [pc, #4]	; (8001388 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001382:	f7ff be57 	b.w	8001034 <_ZN10STM32F4DMAD1Ev>
 8001386:	bf00      	nop
 8001388:	20004d6c 	.word	0x20004d6c

0800138c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800138c:	4b02      	ldr	r3, [pc, #8]	; (8001398 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800138e:	2290      	movs	r2, #144	; 0x90
 8001390:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001394:	4770      	bx	lr
 8001396:	bf00      	nop
 8001398:	e000e100 	.word	0xe000e100

0800139c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800139c:	4b02      	ldr	r3, [pc, #8]	; (80013a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800139e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013a2:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013a4:	4770      	bx	lr
 80013a6:	bf00      	nop
 80013a8:	e000e100 	.word	0xe000e100

080013ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013ac:	4770      	bx	lr

080013ae <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ae:	4770      	bx	lr

080013b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4604      	mov	r4, r0
    HAL::initialize();
 80013b4:	f00b f87f 	bl	800c4b6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013b8:	6823      	ldr	r3, [r4, #0]
 80013ba:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 80013bc:	f00f f96e 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 80013c0:	4601      	mov	r1, r0
 80013c2:	4620      	mov	r0, r4
 80013c4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013c6:	6823      	ldr	r3, [r4, #0]
 80013c8:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 80013cc:	2300      	movs	r3, #0
 80013ce:	461a      	mov	r2, r3
 80013d0:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013d4:	4620      	mov	r0, r4
 80013d6:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013d8:	2301      	movs	r3, #1
 80013da:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013de:	bd38      	pop	{r3, r4, r5, pc}

080013e0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013e0:	f00b b81c 	b.w	800c41c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013e4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013e4:	f00b b975 	b.w	800c6d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013e8:	4b04      	ldr	r3, [pc, #16]	; (80013fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013f6:	f3bf 8f6f 	isb	sy
}
 80013fa:	4770      	bx	lr
 80013fc:	e000e100 	.word	0xe000e100

08001400 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001400:	4901      	ldr	r1, [pc, #4]	; (8001408 <vApplicationIdleHook+0x8>)
 8001402:	2000      	movs	r0, #0
 8001404:	f00a b936 	b.w	800b674 <vTaskSetApplicationTaskTag>
 8001408:	08000c19 	.word	0x08000c19

0800140c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800140c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800140e:	2064      	movs	r0, #100	; 0x64
 8001410:	f008 fcc4 	bl	8009d9c <osDelay>
  for(;;)
 8001414:	e7fb      	b.n	800140e <StartDefaultTask+0x2>
	...

08001418 <SystemClock_Config>:
{
 8001418:	b530      	push	{r4, r5, lr}
 800141a:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800141c:	2210      	movs	r2, #16
 800141e:	2100      	movs	r1, #0
 8001420:	a809      	add	r0, sp, #36	; 0x24
 8001422:	f01f fe93 	bl	802114c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001426:	2214      	movs	r2, #20
 8001428:	2100      	movs	r1, #0
 800142a:	a802      	add	r0, sp, #8
 800142c:	f01f fe8e 	bl	802114c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001430:	2400      	movs	r4, #0
 8001432:	4b1f      	ldr	r3, [pc, #124]	; (80014b0 <SystemClock_Config+0x98>)
 8001434:	9400      	str	r4, [sp, #0]
 8001436:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001438:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800143c:	641a      	str	r2, [r3, #64]	; 0x40
 800143e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001440:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001444:	9300      	str	r3, [sp, #0]
 8001446:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001448:	4b1a      	ldr	r3, [pc, #104]	; (80014b4 <SystemClock_Config+0x9c>)
 800144a:	9401      	str	r4, [sp, #4]
 800144c:	681a      	ldr	r2, [r3, #0]
 800144e:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001452:	601a      	str	r2, [r3, #0]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800145a:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800145c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145e:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001460:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001464:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001468:	2502      	movs	r5, #2
 800146a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800146e:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001470:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001474:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001478:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 800147c:	2004      	movs	r0, #4
 800147e:	2306      	movs	r3, #6
 8001480:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001484:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001486:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001488:	f007 ffc2 	bl	8009410 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800148c:	f007 fa12 	bl	80088b4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001490:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001492:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001496:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001498:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800149c:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a0:	2105      	movs	r1, #5
 80014a2:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a4:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a8:	f007 fd86 	bl	8008fb8 <HAL_RCC_ClockConfig>
}
 80014ac:	b015      	add	sp, #84	; 0x54
 80014ae:	bd30      	pop	{r4, r5, pc}
 80014b0:	40023800 	.word	0x40023800
 80014b4:	40007000 	.word	0x40007000

080014b8 <main>:
{
 80014b8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014bc:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014be:	f005 fa5b 	bl	8006978 <HAL_Init>
  SystemClock_Config();
 80014c2:	f7ff ffa9 	bl	8001418 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c6:	2214      	movs	r2, #20
 80014c8:	2100      	movs	r1, #0
 80014ca:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014cc:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ce:	f01f fe3d 	bl	802114c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014d2:	4bc9      	ldr	r3, [pc, #804]	; (80017f8 <main+0x340>)
 80014d4:	9402      	str	r4, [sp, #8]
 80014d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014d8:	48c8      	ldr	r0, [pc, #800]	; (80017fc <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014da:	f042 0210 	orr.w	r2, r2, #16
 80014de:	631a      	str	r2, [r3, #48]	; 0x30
 80014e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e2:	f002 0210 	and.w	r2, r2, #16
 80014e6:	9202      	str	r2, [sp, #8]
 80014e8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014ea:	9403      	str	r4, [sp, #12]
 80014ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ee:	f042 0202 	orr.w	r2, r2, #2
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f002 0202 	and.w	r2, r2, #2
 80014fa:	9203      	str	r2, [sp, #12]
 80014fc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014fe:	9404      	str	r4, [sp, #16]
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001506:	631a      	str	r2, [r3, #48]	; 0x30
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800150e:	9204      	str	r2, [sp, #16]
 8001510:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001512:	9405      	str	r4, [sp, #20]
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f042 0208 	orr.w	r2, r2, #8
 800151a:	631a      	str	r2, [r3, #48]	; 0x30
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f002 0208 	and.w	r2, r2, #8
 8001522:	9205      	str	r2, [sp, #20]
 8001524:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001526:	9406      	str	r4, [sp, #24]
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800152e:	631a      	str	r2, [r3, #48]	; 0x30
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001536:	9206      	str	r2, [sp, #24]
 8001538:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800153a:	9407      	str	r4, [sp, #28]
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f042 0220 	orr.w	r2, r2, #32
 8001542:	631a      	str	r2, [r3, #48]	; 0x30
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f002 0220 	and.w	r2, r2, #32
 800154a:	9207      	str	r2, [sp, #28]
 800154c:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800154e:	9408      	str	r4, [sp, #32]
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001556:	631a      	str	r2, [r3, #48]	; 0x30
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800155e:	9208      	str	r2, [sp, #32]
 8001560:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001562:	9409      	str	r4, [sp, #36]	; 0x24
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800156a:	631a      	str	r2, [r3, #48]	; 0x30
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001572:	9209      	str	r2, [sp, #36]	; 0x24
 8001574:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001576:	940a      	str	r4, [sp, #40]	; 0x28
 8001578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157a:	f042 0204 	orr.w	r2, r2, #4
 800157e:	631a      	str	r2, [r3, #48]	; 0x30
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f002 0204 	and.w	r2, r2, #4
 8001586:	920a      	str	r2, [sp, #40]	; 0x28
 8001588:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800158a:	940b      	str	r4, [sp, #44]	; 0x2c
 800158c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001592:	631a      	str	r2, [r3, #48]	; 0x30
 8001594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001596:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800159a:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 800159c:	2201      	movs	r2, #1
 800159e:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015a2:	f006 fb83 	bl	8007cac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015a6:	4896      	ldr	r0, [pc, #600]	; (8001800 <main+0x348>)
 80015a8:	4622      	mov	r2, r4
 80015aa:	2110      	movs	r1, #16
 80015ac:	f006 fb7e 	bl	8007cac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015b0:	4894      	ldr	r0, [pc, #592]	; (8001804 <main+0x34c>)
 80015b2:	4622      	mov	r2, r4
 80015b4:	2140      	movs	r1, #64	; 0x40
 80015b6:	f006 fb79 	bl	8007cac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015ba:	4622      	mov	r2, r4
 80015bc:	4892      	ldr	r0, [pc, #584]	; (8001808 <main+0x350>)
 80015be:	2180      	movs	r1, #128	; 0x80
 80015c0:	f006 fb74 	bl	8007cac <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015c4:	2611      	movs	r6, #17
 80015c6:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015c8:	488c      	ldr	r0, [pc, #560]	; (80017fc <main+0x344>)
 80015ca:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015cc:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ce:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015d2:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d6:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015da:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015de:	f006 f9d7 	bl	8007990 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e2:	4887      	ldr	r0, [pc, #540]	; (8001800 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e6:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e8:	e9cd 972b 	strd	r9, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ec:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015f0:	f006 f9ce 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015f4:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015f6:	4883      	ldr	r0, [pc, #524]	; (8001804 <main+0x34c>)
 80015f8:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015fa:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fc:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001600:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001604:	f006 f9c4 	bl	8007990 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001608:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800160a:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800160c:	487e      	ldr	r0, [pc, #504]	; (8001808 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800160e:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001610:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001614:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001616:	f006 f9bb 	bl	8007990 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800161a:	487c      	ldr	r0, [pc, #496]	; (800180c <main+0x354>)
  hdma2d.Instance = DMA2D;
 800161c:	4e7c      	ldr	r6, [pc, #496]	; (8001810 <main+0x358>)
  hcrc.Instance = CRC;
 800161e:	4b7d      	ldr	r3, [pc, #500]	; (8001814 <main+0x35c>)
 8001620:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001622:	f005 fbd5 	bl	8006dd0 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001626:	4b7c      	ldr	r3, [pc, #496]	; (8001818 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001628:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800162c:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001630:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001632:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001636:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800163a:	f005 fcdd 	bl	8006ff8 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800163e:	4639      	mov	r1, r7
 8001640:	4630      	mov	r0, r6
 8001642:	f005 fd91 	bl	8007168 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001646:	4629      	mov	r1, r5
 8001648:	4622      	mov	r2, r4
 800164a:	486f      	ldr	r0, [pc, #444]	; (8001808 <main+0x350>)
  hdsi.Instance = DSI;
 800164c:	4e73      	ldr	r6, [pc, #460]	; (800181c <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800164e:	f006 fb2d 	bl	8007cac <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001652:	2014      	movs	r0, #20
 8001654:	f005 f9bc 	bl	80069d0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001658:	4629      	mov	r1, r5
 800165a:	463a      	mov	r2, r7
 800165c:	486a      	ldr	r0, [pc, #424]	; (8001808 <main+0x350>)
 800165e:	f006 fb25 	bl	8007cac <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001662:	200a      	movs	r0, #10
 8001664:	f005 f9b4 	bl	80069d0 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001668:	2224      	movs	r2, #36	; 0x24
 800166a:	4621      	mov	r1, r4
 800166c:	a815      	add	r0, sp, #84	; 0x54
 800166e:	f01f fd6d 	bl	802114c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001672:	2218      	movs	r2, #24
 8001674:	4621      	mov	r1, r4
 8001676:	a80f      	add	r0, sp, #60	; 0x3c
 8001678:	f01f fd68 	bl	802114c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 800167c:	2234      	movs	r2, #52	; 0x34
 800167e:	4621      	mov	r1, r4
 8001680:	a82b      	add	r0, sp, #172	; 0xac
 8001682:	f01f fd63 	bl	802114c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001686:	222c      	movs	r2, #44	; 0x2c
 8001688:	4621      	mov	r1, r4
 800168a:	a81e      	add	r0, sp, #120	; 0x78
 800168c:	f01f fd5e 	bl	802114c <memset>
  hdsi.Instance = DSI;
 8001690:	4b63      	ldr	r3, [pc, #396]	; (8001820 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 8001692:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001694:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001696:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800169a:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 800169c:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800169e:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016a0:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016a4:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a8:	f005 fe26 	bl	80072f8 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ac:	a915      	add	r1, sp, #84	; 0x54
 80016ae:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016b0:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016b4:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016b8:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016bc:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016c0:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016c2:	f006 f843 	bl	800774c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016c6:	221c      	movs	r2, #28
 80016c8:	2321      	movs	r3, #33	; 0x21
 80016ca:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016ce:	210f      	movs	r1, #15
 80016d0:	2319      	movs	r3, #25
 80016d2:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016d6:	4630      	mov	r0, r6
 80016d8:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016da:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016de:	f005 fff8 	bl	80076d2 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016e2:	4629      	mov	r1, r5
 80016e4:	4630      	mov	r0, r6
 80016e6:	f005 ffe3 	bl	80076b0 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016ea:	f242 7110 	movw	r1, #10000	; 0x2710
 80016ee:	4630      	mov	r0, r6
 80016f0:	f006 f937 	bl	8007962 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016f4:	4621      	mov	r1, r4
 80016f6:	4630      	mov	r0, r6
 80016f8:	f005 fd9b 	bl	8007232 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016fc:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001700:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001704:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001708:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800170c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001710:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001714:	e9cd b32d 	strd	fp, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001718:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800171c:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001720:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 8001724:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001728:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800172c:	e9cd a331 	strd	sl, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001730:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001734:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001738:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 800173c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001740:	a92b      	add	r1, sp, #172	; 0xac
 8001742:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001744:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001748:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800174c:	f005 ff7c 	bl	8007648 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001750:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001752:	a91e      	add	r1, sp, #120	; 0x78
 8001754:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001756:	e9cd 3920 	strd	r3, r9, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800175a:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 800175e:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001762:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001766:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800176a:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800176c:	f005 fefa 	bl	8007564 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001770:	4621      	mov	r1, r4
 8001772:	4630      	mov	r0, r6
 8001774:	f005 fee5 	bl	8007542 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001778:	482a      	ldr	r0, [pc, #168]	; (8001824 <main+0x36c>)
 800177a:	492b      	ldr	r1, [pc, #172]	; (8001828 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 800177c:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800177e:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001782:	2340      	movs	r3, #64	; 0x40
 8001784:	2120      	movs	r1, #32
 8001786:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800178a:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800178e:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001792:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001794:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001796:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 800179a:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 800179e:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017a0:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 80017a2:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017a6:	e9c0 2a09 	strd	r2, sl, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017aa:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017ae:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017b2:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017b6:	f007 ffe1 	bl	800977c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017ba:	f005 f805 	bl	80067c8 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017be:	f004 ffb5 	bl	800672c <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017c2:	2234      	movs	r2, #52	; 0x34
 80017c4:	4621      	mov	r1, r4
 80017c6:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017c8:	4d18      	ldr	r5, [pc, #96]	; (800182c <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ca:	f01f fcbf 	bl	802114c <memset>
  hltdc.Instance = LTDC;
 80017ce:	4a18      	ldr	r2, [pc, #96]	; (8001830 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017d0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017d2:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017d6:	23ca      	movs	r3, #202	; 0xca
 80017d8:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017dc:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017e0:	21cb      	movs	r1, #203	; 0xcb
 80017e2:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017e6:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017e8:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017ec:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017f0:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017f4:	e01e      	b.n	8001834 <main+0x37c>
 80017f6:	bf00      	nop
 80017f8:	40023800 	.word	0x40023800
 80017fc:	40022800 	.word	0x40022800
 8001800:	40020c00 	.word	0x40020c00
 8001804:	40021800 	.word	0x40021800
 8001808:	40021c00 	.word	0x40021c00
 800180c:	2000ee24 	.word	0x2000ee24
 8001810:	2000ef1c 	.word	0x2000ef1c
 8001814:	40023000 	.word	0x40023000
 8001818:	4002b000 	.word	0x4002b000
 800181c:	2000ee2c 	.word	0x2000ee2c
 8001820:	40016c00 	.word	0x40016c00
 8001824:	2000ef5c 	.word	0x2000ef5c
 8001828:	a0000140 	.word	0xa0000140
 800182c:	2000ee48 	.word	0x2000ee48
 8001830:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001834:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001838:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800183c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001840:	f006 ff02 	bl	8008648 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001844:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 8001846:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001848:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 800184c:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001850:	2005      	movs	r0, #5
 8001852:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001856:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 800185a:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800185e:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001860:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001864:	4628      	mov	r0, r5
 8001866:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001868:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 800186c:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800186e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 8001872:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 8001876:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800187a:	f006 ffb1 	bl	80087e0 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 800187e:	682a      	ldr	r2, [r5, #0]
 8001880:	6993      	ldr	r3, [r2, #24]
 8001882:	f023 0301 	bic.w	r3, r3, #1
 8001886:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001888:	4630      	mov	r0, r6
 800188a:	f005 ffc5 	bl	8007818 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 800188e:	4639      	mov	r1, r7
 8001890:	4640      	mov	r0, r8
 8001892:	f004 f90d 	bl	8005ab0 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001896:	2328      	movs	r3, #40	; 0x28
 8001898:	2215      	movs	r2, #21
 800189a:	4621      	mov	r1, r4
 800189c:	4630      	mov	r0, r6
 800189e:	9400      	str	r4, [sp, #0]
 80018a0:	f005 ffed 	bl	800787e <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018a4:	a92b      	add	r1, sp, #172	; 0xac
 80018a6:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018a8:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018ac:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018b0:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018b4:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018b8:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018bc:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018be:	f005 fec3 	bl	8007648 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018c2:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018c6:	4622      	mov	r2, r4
 80018c8:	4628      	mov	r0, r5
 80018ca:	f006 ffb7 	bl	800883c <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018ce:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018d0:	4824      	ldr	r0, [pc, #144]	; (8001964 <main+0x4ac>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018d2:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018d4:	4d24      	ldr	r5, [pc, #144]	; (8001968 <main+0x4b0>)
  hi2c1.Init.ClockSpeed = 400000;
 80018d6:	4e25      	ldr	r6, [pc, #148]	; (800196c <main+0x4b4>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018d8:	433b      	orrs	r3, r7
 80018da:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018dc:	4b24      	ldr	r3, [pc, #144]	; (8001970 <main+0x4b8>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018de:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018e0:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018e4:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018e6:	e9c0 3b04 	strd	r3, fp, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018ea:	e9c0 7902 	strd	r7, r9, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018ee:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018f2:	f007 f8f7 	bl	8008ae4 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018f6:	f004 fddf 	bl	80064b8 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018fa:	f004 fd13 	bl	8006324 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018fe:	f004 fc89 	bl	8006214 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001902:	4b1c      	ldr	r3, [pc, #112]	; (8001974 <main+0x4bc>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001904:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001906:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8001908:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 800190c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001910:	e9c5 a404 	strd	sl, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001914:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001918:	f006 fbb2 	bl	8008080 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 800191c:	4628      	mov	r0, r5
 800191e:	f006 fc57 	bl	80081d0 <HAL_I2C_DeInit>
  hcan2.Instance = CAN2;
 8001922:	4815      	ldr	r0, [pc, #84]	; (8001978 <main+0x4c0>)
 8001924:	4b15      	ldr	r3, [pc, #84]	; (800197c <main+0x4c4>)
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8001926:	6184      	str	r4, [r0, #24]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8001928:	8384      	strh	r4, [r0, #28]
  hcan2.Init.Prescaler = 16;
 800192a:	e9c0 3900 	strd	r3, r9, [r0]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 800192e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 8001932:	e9c0 4404 	strd	r4, r4, [r0, #16]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8001936:	f005 f85f 	bl	80069f8 <HAL_CAN_Init>
  MX_TouchGFX_Init();
 800193a:	f7fe fe56 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800193e:	f008 f9a5 	bl	8009c8c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001942:	4a0f      	ldr	r2, [pc, #60]	; (8001980 <main+0x4c8>)
 8001944:	480f      	ldr	r0, [pc, #60]	; (8001984 <main+0x4cc>)
 8001946:	4621      	mov	r1, r4
 8001948:	f008 f9cc 	bl	8009ce4 <osThreadNew>
 800194c:	4b0e      	ldr	r3, [pc, #56]	; (8001988 <main+0x4d0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800194e:	4a0f      	ldr	r2, [pc, #60]	; (800198c <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001950:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001952:	4621      	mov	r1, r4
 8001954:	480e      	ldr	r0, [pc, #56]	; (8001990 <main+0x4d8>)
 8001956:	f008 f9c5 	bl	8009ce4 <osThreadNew>
 800195a:	4b0e      	ldr	r3, [pc, #56]	; (8001994 <main+0x4dc>)
 800195c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800195e:	f008 f9a7 	bl	8009cb0 <osKernelStart>
  while (1)
 8001962:	e7fe      	b.n	8001962 <main+0x4aa>
 8001964:	2000ef90 	.word	0x2000ef90
 8001968:	2000edd0 	.word	0x2000edd0
 800196c:	40005400 	.word	0x40005400
 8001970:	a0001000 	.word	0xa0001000
 8001974:	00061a80 	.word	0x00061a80
 8001978:	2000eef0 	.word	0x2000eef0
 800197c:	40006800 	.word	0x40006800
 8001980:	080226bc 	.word	0x080226bc
 8001984:	0800140d 	.word	0x0800140d
 8001988:	2000edcc 	.word	0x2000edcc
 800198c:	08022698 	.word	0x08022698
 8001990:	080005ef 	.word	0x080005ef
 8001994:	2000ef18 	.word	0x2000ef18

08001998 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001998:	6802      	ldr	r2, [r0, #0]
 800199a:	4b03      	ldr	r3, [pc, #12]	; (80019a8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 800199c:	429a      	cmp	r2, r3
 800199e:	d101      	bne.n	80019a4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019a0:	f005 b804 	b.w	80069ac <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019a4:	4770      	bx	lr
 80019a6:	bf00      	nop
 80019a8:	40001000 	.word	0x40001000

080019ac <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80019ac:	4770      	bx	lr
	...

080019b0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019b0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019b2:	4b0e      	ldr	r3, [pc, #56]	; (80019ec <HAL_MspInit+0x3c>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	9200      	str	r2, [sp, #0]
 80019b8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ba:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019be:	6459      	str	r1, [r3, #68]	; 0x44
 80019c0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019c2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019c6:	9100      	str	r1, [sp, #0]
 80019c8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ca:	9201      	str	r2, [sp, #4]
 80019cc:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019ce:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019d2:	6419      	str	r1, [r3, #64]	; 0x40
 80019d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019da:	9301      	str	r3, [sp, #4]
 80019dc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019de:	210f      	movs	r1, #15
 80019e0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019e4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019e6:	f005 b99f 	b.w	8006d28 <HAL_NVIC_SetPriority>
 80019ea:	bf00      	nop
 80019ec:	40023800 	.word	0x40023800

080019f0 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 80019f0:	b510      	push	{r4, lr}
 80019f2:	4604      	mov	r4, r0
 80019f4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019f6:	2214      	movs	r2, #20
 80019f8:	2100      	movs	r1, #0
 80019fa:	a803      	add	r0, sp, #12
 80019fc:	f01f fba6 	bl	802114c <memset>
  if(hcan->Instance==CAN2)
 8001a00:	6822      	ldr	r2, [r4, #0]
 8001a02:	4b22      	ldr	r3, [pc, #136]	; (8001a8c <HAL_CAN_MspInit+0x9c>)
 8001a04:	429a      	cmp	r2, r3
 8001a06:	d13e      	bne.n	8001a86 <HAL_CAN_MspInit+0x96>
  {
  /* USER CODE BEGIN CAN2_MspInit 0 */

  /* USER CODE END CAN2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001a08:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
 8001a0c:	2400      	movs	r4, #0
 8001a0e:	9400      	str	r4, [sp, #0]
 8001a10:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a12:	481f      	ldr	r0, [pc, #124]	; (8001a90 <HAL_CAN_MspInit+0xa0>)
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001a14:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001a18:	641a      	str	r2, [r3, #64]	; 0x40
 8001a1a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a1c:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001a20:	9200      	str	r2, [sp, #0]
 8001a22:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001a24:	9401      	str	r4, [sp, #4]
 8001a26:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a28:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8001a2c:	641a      	str	r2, [r3, #64]	; 0x40
 8001a2e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a30:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 8001a34:	9201      	str	r2, [sp, #4]
 8001a36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a38:	9402      	str	r4, [sp, #8]
 8001a3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a3c:	f042 0202 	orr.w	r2, r2, #2
 8001a40:	631a      	str	r2, [r3, #48]	; 0x30
 8001a42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a44:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a46:	f003 0302 	and.w	r3, r3, #2
 8001a4a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a4c:	f242 0220 	movw	r2, #8224	; 0x2020
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a50:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a52:	2302      	movs	r3, #2
 8001a54:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8001a58:	2103      	movs	r1, #3
 8001a5a:	2309      	movs	r3, #9
 8001a5c:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a60:	a903      	add	r1, sp, #12
 8001a62:	f005 ff95 	bl	8007990 <HAL_GPIO_Init>

    /* CAN2 interrupt Init */
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 5, 0);
 8001a66:	4622      	mov	r2, r4
 8001a68:	2105      	movs	r1, #5
 8001a6a:	2040      	movs	r0, #64	; 0x40
 8001a6c:	f005 f95c 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 8001a70:	2040      	movs	r0, #64	; 0x40
 8001a72:	f005 f98b 	bl	8006d8c <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 5, 0);
 8001a76:	2041      	movs	r0, #65	; 0x41
 8001a78:	4622      	mov	r2, r4
 8001a7a:	2105      	movs	r1, #5
 8001a7c:	f005 f954 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 8001a80:	2041      	movs	r0, #65	; 0x41
 8001a82:	f005 f983 	bl	8006d8c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 8001a86:	b008      	add	sp, #32
 8001a88:	bd10      	pop	{r4, pc}
 8001a8a:	bf00      	nop
 8001a8c:	40006800 	.word	0x40006800
 8001a90:	40020400 	.word	0x40020400

08001a94 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a94:	6802      	ldr	r2, [r0, #0]
 8001a96:	4b09      	ldr	r3, [pc, #36]	; (8001abc <HAL_CRC_MspInit+0x28>)
 8001a98:	429a      	cmp	r2, r3
{
 8001a9a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a9c:	d10b      	bne.n	8001ab6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	9301      	str	r3, [sp, #4]
 8001aa2:	4b07      	ldr	r3, [pc, #28]	; (8001ac0 <HAL_CRC_MspInit+0x2c>)
 8001aa4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aa6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001aaa:	631a      	str	r2, [r3, #48]	; 0x30
 8001aac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aae:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001ab2:	9301      	str	r3, [sp, #4]
 8001ab4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001ab6:	b002      	add	sp, #8
 8001ab8:	4770      	bx	lr
 8001aba:	bf00      	nop
 8001abc:	40023000 	.word	0x40023000
 8001ac0:	40023800 	.word	0x40023800

08001ac4 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001ac4:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001ac6:	4b0f      	ldr	r3, [pc, #60]	; (8001b04 <HAL_DMA2D_MspInit+0x40>)
 8001ac8:	6802      	ldr	r2, [r0, #0]
 8001aca:	429a      	cmp	r2, r3
 8001acc:	d116      	bne.n	8001afc <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ace:	2200      	movs	r2, #0
 8001ad0:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ad4:	9201      	str	r2, [sp, #4]
 8001ad6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ad8:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001adc:	6319      	str	r1, [r3, #48]	; 0x30
 8001ade:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ae0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ae4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ae6:	2105      	movs	r1, #5
 8001ae8:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aea:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aec:	f005 f91c 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001af0:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001af2:	b003      	add	sp, #12
 8001af4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001af8:	f005 b948 	b.w	8006d8c <HAL_NVIC_EnableIRQ>
}
 8001afc:	b003      	add	sp, #12
 8001afe:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b02:	bf00      	nop
 8001b04:	4002b000 	.word	0x4002b000

08001b08 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001b08:	b510      	push	{r4, lr}
 8001b0a:	4604      	mov	r4, r0
 8001b0c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b0e:	2214      	movs	r2, #20
 8001b10:	2100      	movs	r1, #0
 8001b12:	a803      	add	r0, sp, #12
 8001b14:	f01f fb1a 	bl	802114c <memset>
  if(hdsi->Instance==DSI)
 8001b18:	6822      	ldr	r2, [r4, #0]
 8001b1a:	4b18      	ldr	r3, [pc, #96]	; (8001b7c <HAL_DSI_MspInit+0x74>)
 8001b1c:	429a      	cmp	r2, r3
 8001b1e:	d12a      	bne.n	8001b76 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b20:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001b24:	2400      	movs	r4, #0
 8001b26:	9401      	str	r4, [sp, #4]
 8001b28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b2a:	4815      	ldr	r0, [pc, #84]	; (8001b80 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b2c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001b30:	645a      	str	r2, [r3, #68]	; 0x44
 8001b32:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b34:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001b38:	9201      	str	r2, [sp, #4]
 8001b3a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b3c:	9402      	str	r4, [sp, #8]
 8001b3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b40:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b44:	631a      	str	r2, [r3, #48]	; 0x30
 8001b46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b48:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b4c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b4e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b50:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b52:	2302      	movs	r3, #2
 8001b54:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b58:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b5a:	230d      	movs	r3, #13
 8001b5c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b5e:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b62:	f005 ff15 	bl	8007990 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b66:	205c      	movs	r0, #92	; 0x5c
 8001b68:	4622      	mov	r2, r4
 8001b6a:	2105      	movs	r1, #5
 8001b6c:	f005 f8dc 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b70:	205c      	movs	r0, #92	; 0x5c
 8001b72:	f005 f90b 	bl	8006d8c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b76:	b008      	add	sp, #32
 8001b78:	bd10      	pop	{r4, pc}
 8001b7a:	bf00      	nop
 8001b7c:	40016c00 	.word	0x40016c00
 8001b80:	40022400 	.word	0x40022400

08001b84 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b84:	b530      	push	{r4, r5, lr}
 8001b86:	4604      	mov	r4, r0
 8001b88:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b8a:	2214      	movs	r2, #20
 8001b8c:	2100      	movs	r1, #0
 8001b8e:	a803      	add	r0, sp, #12
 8001b90:	f01f fadc 	bl	802114c <memset>
  if(hi2c->Instance==I2C1)
 8001b94:	6822      	ldr	r2, [r4, #0]
 8001b96:	4b1a      	ldr	r3, [pc, #104]	; (8001c00 <HAL_I2C_MspInit+0x7c>)
 8001b98:	429a      	cmp	r2, r3
 8001b9a:	d12f      	bne.n	8001bfc <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b9c:	4c19      	ldr	r4, [pc, #100]	; (8001c04 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b9e:	481a      	ldr	r0, [pc, #104]	; (8001c08 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ba0:	2500      	movs	r5, #0
 8001ba2:	9501      	str	r5, [sp, #4]
 8001ba4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ba6:	f043 0302 	orr.w	r3, r3, #2
 8001baa:	6323      	str	r3, [r4, #48]	; 0x30
 8001bac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001bae:	f003 0302 	and.w	r3, r3, #2
 8001bb2:	9301      	str	r3, [sp, #4]
 8001bb4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bb6:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001bba:	2312      	movs	r3, #18
 8001bbc:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc0:	2101      	movs	r1, #1
 8001bc2:	2303      	movs	r3, #3
 8001bc4:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bc8:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bca:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bcc:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bce:	f005 fedf 	bl	8007990 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001bd2:	9502      	str	r5, [sp, #8]
 8001bd4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bd6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bda:	6423      	str	r3, [r4, #64]	; 0x40
 8001bdc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bde:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001be2:	9302      	str	r3, [sp, #8]
 8001be4:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001be6:	6a23      	ldr	r3, [r4, #32]
 8001be8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bec:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001bee:	6a23      	ldr	r3, [r4, #32]
 8001bf0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bf4:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001bf6:	2064      	movs	r0, #100	; 0x64
 8001bf8:	f004 feea 	bl	80069d0 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bfc:	b009      	add	sp, #36	; 0x24
 8001bfe:	bd30      	pop	{r4, r5, pc}
 8001c00:	40005400 	.word	0x40005400
 8001c04:	40023800 	.word	0x40023800
 8001c08:	40020400 	.word	0x40020400

08001c0c <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001c0c:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001c0e:	6802      	ldr	r2, [r0, #0]
 8001c10:	4b0a      	ldr	r3, [pc, #40]	; (8001c3c <HAL_I2C_MspDeInit+0x30>)
 8001c12:	429a      	cmp	r2, r3
 8001c14:	d110      	bne.n	8001c38 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c16:	4a0a      	ldr	r2, [pc, #40]	; (8001c40 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c18:	480a      	ldr	r0, [pc, #40]	; (8001c44 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c1a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001c1c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001c20:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c22:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c26:	f005 ff99 	bl	8007b5c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001c2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001c2e:	4805      	ldr	r0, [pc, #20]	; (8001c44 <HAL_I2C_MspDeInit+0x38>)
 8001c30:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001c34:	f005 bf92 	b.w	8007b5c <HAL_GPIO_DeInit>
}
 8001c38:	bd08      	pop	{r3, pc}
 8001c3a:	bf00      	nop
 8001c3c:	40005400 	.word	0x40005400
 8001c40:	40023800 	.word	0x40023800
 8001c44:	40020400 	.word	0x40020400

08001c48 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c48:	b510      	push	{r4, lr}
 8001c4a:	4604      	mov	r4, r0
 8001c4c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c4e:	223c      	movs	r2, #60	; 0x3c
 8001c50:	2100      	movs	r1, #0
 8001c52:	a801      	add	r0, sp, #4
 8001c54:	f01f fa7a 	bl	802114c <memset>
  if(hltdc->Instance==LTDC)
 8001c58:	6822      	ldr	r2, [r4, #0]
 8001c5a:	4b13      	ldr	r3, [pc, #76]	; (8001ca8 <HAL_LTDC_MspInit+0x60>)
 8001c5c:	429a      	cmp	r2, r3
 8001c5e:	d121      	bne.n	8001ca4 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c60:	2308      	movs	r3, #8
 8001c62:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c64:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c68:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c6a:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c6c:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c6e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c70:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001c72:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c74:	f007 fa6a 	bl	800914c <HAL_RCCEx_PeriphCLKConfig>
 8001c78:	b108      	cbz	r0, 8001c7e <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001c7a:	f7ff fe97 	bl	80019ac <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c7e:	4b0b      	ldr	r3, [pc, #44]	; (8001cac <HAL_LTDC_MspInit+0x64>)
 8001c80:	9400      	str	r4, [sp, #0]
 8001c82:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c84:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c88:	645a      	str	r2, [r3, #68]	; 0x44
 8001c8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c8c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c90:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c92:	2058      	movs	r0, #88	; 0x58
 8001c94:	2200      	movs	r2, #0
 8001c96:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c98:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c9a:	f005 f845 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c9e:	2058      	movs	r0, #88	; 0x58
 8001ca0:	f005 f874 	bl	8006d8c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ca4:	b010      	add	sp, #64	; 0x40
 8001ca6:	bd10      	pop	{r4, pc}
 8001ca8:	40016800 	.word	0x40016800
 8001cac:	40023800 	.word	0x40023800

08001cb0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cb2:	4604      	mov	r4, r0
 8001cb4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cb6:	2214      	movs	r2, #20
 8001cb8:	2100      	movs	r1, #0
 8001cba:	a803      	add	r0, sp, #12
 8001cbc:	f01f fa46 	bl	802114c <memset>
  if(hqspi->Instance==QUADSPI)
 8001cc0:	6822      	ldr	r2, [r4, #0]
 8001cc2:	4b24      	ldr	r3, [pc, #144]	; (8001d54 <HAL_QSPI_MspInit+0xa4>)
 8001cc4:	429a      	cmp	r2, r3
 8001cc6:	d143      	bne.n	8001d50 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001cc8:	4b23      	ldr	r3, [pc, #140]	; (8001d58 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cca:	4824      	ldr	r0, [pc, #144]	; (8001d5c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001ccc:	2400      	movs	r4, #0
 8001cce:	9400      	str	r4, [sp, #0]
 8001cd0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cd2:	f042 0202 	orr.w	r2, r2, #2
 8001cd6:	639a      	str	r2, [r3, #56]	; 0x38
 8001cd8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cda:	f002 0202 	and.w	r2, r2, #2
 8001cde:	9200      	str	r2, [sp, #0]
 8001ce0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ce2:	9401      	str	r4, [sp, #4]
 8001ce4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ce6:	f042 0202 	orr.w	r2, r2, #2
 8001cea:	631a      	str	r2, [r3, #48]	; 0x30
 8001cec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cee:	f002 0202 	and.w	r2, r2, #2
 8001cf2:	9201      	str	r2, [sp, #4]
 8001cf4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cf6:	9402      	str	r4, [sp, #8]
 8001cf8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cfa:	f042 0220 	orr.w	r2, r2, #32
 8001cfe:	631a      	str	r2, [r3, #48]	; 0x30
 8001d00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d02:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d04:	f003 0320 	and.w	r3, r3, #32
 8001d08:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0a:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d0c:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d0e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d10:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d12:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d14:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d16:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d1a:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d1e:	f005 fe37 	bl	8007990 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001d22:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d26:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d2a:	480d      	ldr	r0, [pc, #52]	; (8001d60 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d2c:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d2e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d30:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d32:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d36:	f005 fe2b 	bl	8007990 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001d3a:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	4808      	ldr	r0, [pc, #32]	; (8001d60 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d40:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d42:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d44:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d48:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d4c:	f005 fe20 	bl	8007990 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001d50:	b009      	add	sp, #36	; 0x24
 8001d52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d54:	a0001000 	.word	0xa0001000
 8001d58:	40023800 	.word	0x40023800
 8001d5c:	40020400 	.word	0x40020400
 8001d60:	40021400 	.word	0x40021400

08001d64 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d64:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d66:	6802      	ldr	r2, [r0, #0]
 8001d68:	4b09      	ldr	r3, [pc, #36]	; (8001d90 <HAL_QSPI_MspDeInit+0x2c>)
 8001d6a:	429a      	cmp	r2, r3
 8001d6c:	d10f      	bne.n	8001d8e <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d6e:	4a09      	ldr	r2, [pc, #36]	; (8001d94 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d70:	4809      	ldr	r0, [pc, #36]	; (8001d98 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d72:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d74:	f023 0302 	bic.w	r3, r3, #2
 8001d78:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d7a:	2140      	movs	r1, #64	; 0x40
 8001d7c:	f005 feee 	bl	8007b5c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d80:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d84:	4805      	ldr	r0, [pc, #20]	; (8001d9c <HAL_QSPI_MspDeInit+0x38>)
 8001d86:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d8a:	f005 bee7 	b.w	8007b5c <HAL_GPIO_DeInit>
}
 8001d8e:	bd08      	pop	{r3, pc}
 8001d90:	a0001000 	.word	0xa0001000
 8001d94:	40023800 	.word	0x40023800
 8001d98:	40020400 	.word	0x40020400
 8001d9c:	40021400 	.word	0x40021400

08001da0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001da0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001da2:	4b31      	ldr	r3, [pc, #196]	; (8001e68 <HAL_SDRAM_MspInit+0xc8>)
 8001da4:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001da6:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001da8:	2c00      	cmp	r4, #0
 8001daa:	d15b      	bne.n	8001e64 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001dac:	2201      	movs	r2, #1
 8001dae:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001db0:	4b2e      	ldr	r3, [pc, #184]	; (8001e6c <HAL_SDRAM_MspInit+0xcc>)
 8001db2:	9400      	str	r4, [sp, #0]
 8001db4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001db6:	482e      	ldr	r0, [pc, #184]	; (8001e70 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001db8:	f042 0201 	orr.w	r2, r2, #1
 8001dbc:	639a      	str	r2, [r3, #56]	; 0x38
 8001dbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dc0:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dc2:	f003 0301 	and.w	r3, r3, #1
 8001dc6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dca:	2603      	movs	r6, #3
 8001dcc:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dce:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dd0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd2:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001dd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dda:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dde:	f005 fdd7 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001de2:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de6:	4823      	ldr	r0, [pc, #140]	; (8001e74 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001de8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dea:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dec:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001df0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001df4:	f005 fdcc 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001df8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dfc:	481e      	ldr	r0, [pc, #120]	; (8001e78 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dfe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e00:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e02:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e06:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e0a:	f005 fdc1 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e0e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e12:	481a      	ldr	r0, [pc, #104]	; (8001e7c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e14:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e16:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e18:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e1c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e20:	f005 fdb6 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e24:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e28:	4815      	ldr	r0, [pc, #84]	; (8001e80 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e2a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e2c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e32:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e36:	f005 fdab 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e3a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e3e:	4811      	ldr	r0, [pc, #68]	; (8001e84 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e40:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e42:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e44:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e48:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e4c:	f005 fda0 	bl	8007990 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e50:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e52:	480d      	ldr	r0, [pc, #52]	; (8001e88 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e54:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e58:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e5c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f005 fd96 	bl	8007990 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e64:	b007      	add	sp, #28
 8001e66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e68:	20005a88 	.word	0x20005a88
 8001e6c:	40023800 	.word	0x40023800
 8001e70:	40021000 	.word	0x40021000
 8001e74:	40021800 	.word	0x40021800
 8001e78:	40020c00 	.word	0x40020c00
 8001e7c:	40022000 	.word	0x40022000
 8001e80:	40021400 	.word	0x40021400
 8001e84:	40021c00 	.word	0x40021c00
 8001e88:	40020800 	.word	0x40020800

08001e8c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e8c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e8e:	4b17      	ldr	r3, [pc, #92]	; (8001eec <HAL_SDRAM_MspDeInit+0x60>)
 8001e90:	681a      	ldr	r2, [r3, #0]
 8001e92:	bb52      	cbnz	r2, 8001eea <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e94:	2201      	movs	r2, #1
 8001e96:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e98:	4a15      	ldr	r2, [pc, #84]	; (8001ef0 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e9a:	4816      	ldr	r0, [pc, #88]	; (8001ef4 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e9c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e9e:	f023 0301 	bic.w	r3, r3, #1
 8001ea2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001ea4:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001ea8:	f005 fe58 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001eac:	4812      	ldr	r0, [pc, #72]	; (8001ef8 <HAL_SDRAM_MspDeInit+0x6c>)
 8001eae:	f248 1133 	movw	r1, #33075	; 0x8133
 8001eb2:	f005 fe53 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001eb6:	4811      	ldr	r0, [pc, #68]	; (8001efc <HAL_SDRAM_MspDeInit+0x70>)
 8001eb8:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001ebc:	f005 fe4e 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001ec0:	480f      	ldr	r0, [pc, #60]	; (8001f00 <HAL_SDRAM_MspDeInit+0x74>)
 8001ec2:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001ec6:	f005 fe49 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001eca:	480e      	ldr	r0, [pc, #56]	; (8001f04 <HAL_SDRAM_MspDeInit+0x78>)
 8001ecc:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001ed0:	f005 fe44 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001ed4:	480c      	ldr	r0, [pc, #48]	; (8001f08 <HAL_SDRAM_MspDeInit+0x7c>)
 8001ed6:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001eda:	f005 fe3f 	bl	8007b5c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001ede:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001ee2:	480a      	ldr	r0, [pc, #40]	; (8001f0c <HAL_SDRAM_MspDeInit+0x80>)
 8001ee4:	210d      	movs	r1, #13
 8001ee6:	f005 be39 	b.w	8007b5c <HAL_GPIO_DeInit>
}
 8001eea:	bd08      	pop	{r3, pc}
 8001eec:	20005a84 	.word	0x20005a84
 8001ef0:	40023800 	.word	0x40023800
 8001ef4:	40021000 	.word	0x40021000
 8001ef8:	40021800 	.word	0x40021800
 8001efc:	40020c00 	.word	0x40020c00
 8001f00:	40022000 	.word	0x40022000
 8001f04:	40021400 	.word	0x40021400
 8001f08:	40021c00 	.word	0x40021c00
 8001f0c:	40020800 	.word	0x40020800

08001f10 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f10:	b530      	push	{r4, r5, lr}
 8001f12:	4601      	mov	r1, r0
 8001f14:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001f16:	2200      	movs	r2, #0
 8001f18:	2036      	movs	r0, #54	; 0x36
 8001f1a:	f004 ff05 	bl	8006d28 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001f1e:	2036      	movs	r0, #54	; 0x36
 8001f20:	f004 ff34 	bl	8006d8c <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f24:	2500      	movs	r5, #0
 8001f26:	4b15      	ldr	r3, [pc, #84]	; (8001f7c <HAL_InitTick+0x6c>)
 8001f28:	9502      	str	r5, [sp, #8]
 8001f2a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001f2c:	4c14      	ldr	r4, [pc, #80]	; (8001f80 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f2e:	f042 0210 	orr.w	r2, r2, #16
 8001f32:	641a      	str	r2, [r3, #64]	; 0x40
 8001f34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f36:	f003 0310 	and.w	r3, r3, #16
 8001f3a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f3c:	a901      	add	r1, sp, #4
 8001f3e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f40:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f42:	f007 f8e5 	bl	8009110 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f46:	f007 f8d3 	bl	80090f0 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001f4a:	4b0e      	ldr	r3, [pc, #56]	; (8001f84 <HAL_InitTick+0x74>)
 8001f4c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f4e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f52:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f54:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f56:	4b0c      	ldr	r3, [pc, #48]	; (8001f88 <HAL_InitTick+0x78>)
 8001f58:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f5c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f5e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f60:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f62:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f64:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f66:	f007 fda7 	bl	8009ab8 <HAL_TIM_Base_Init>
 8001f6a:	b920      	cbnz	r0, 8001f76 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f6c:	4620      	mov	r0, r4
 8001f6e:	f007 fc5d 	bl	800982c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f72:	b009      	add	sp, #36	; 0x24
 8001f74:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f76:	2001      	movs	r0, #1
 8001f78:	e7fb      	b.n	8001f72 <HAL_InitTick+0x62>
 8001f7a:	bf00      	nop
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	2000efdc 	.word	0x2000efdc
 8001f84:	40001000 	.word	0x40001000
 8001f88:	000f4240 	.word	0x000f4240

08001f8c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f8c:	4770      	bx	lr

08001f8e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f8e:	e7fe      	b.n	8001f8e <HardFault_Handler>

08001f90 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <MemManage_Handler>

08001f92 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f92:	e7fe      	b.n	8001f92 <BusFault_Handler>

08001f94 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f94:	e7fe      	b.n	8001f94 <UsageFault_Handler>

08001f96 <DebugMon_Handler>:
 8001f96:	4770      	bx	lr

08001f98 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f98:	4801      	ldr	r0, [pc, #4]	; (8001fa0 <TIM6_DAC_IRQHandler+0x8>)
 8001f9a:	f007 bc85 	b.w	80098a8 <HAL_TIM_IRQHandler>
 8001f9e:	bf00      	nop
 8001fa0:	2000efdc 	.word	0x2000efdc

08001fa4 <CAN2_RX0_IRQHandler>:
void CAN2_RX0_IRQHandler(void)
{
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8001fa4:	4801      	ldr	r0, [pc, #4]	; (8001fac <CAN2_RX0_IRQHandler+0x8>)
 8001fa6:	f004 bdaf 	b.w	8006b08 <HAL_CAN_IRQHandler>
 8001faa:	bf00      	nop
 8001fac:	2000eef0 	.word	0x2000eef0

08001fb0 <CAN2_RX1_IRQHandler>:
 8001fb0:	f7ff bff8 	b.w	8001fa4 <CAN2_RX0_IRQHandler>

08001fb4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fb4:	4801      	ldr	r0, [pc, #4]	; (8001fbc <LTDC_IRQHandler+0x8>)
 8001fb6:	f006 bbb6 	b.w	8008726 <HAL_LTDC_IRQHandler>
 8001fba:	bf00      	nop
 8001fbc:	2000ee48 	.word	0x2000ee48

08001fc0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fc0:	4801      	ldr	r0, [pc, #4]	; (8001fc8 <DMA2D_IRQHandler+0x8>)
 8001fc2:	f005 b847 	b.w	8007054 <HAL_DMA2D_IRQHandler>
 8001fc6:	bf00      	nop
 8001fc8:	2000ef1c 	.word	0x2000ef1c

08001fcc <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001fcc:	4801      	ldr	r0, [pc, #4]	; (8001fd4 <DSI_IRQHandler+0x8>)
 8001fce:	f005 ba46 	b.w	800745e <HAL_DSI_IRQHandler>
 8001fd2:	bf00      	nop
 8001fd4:	2000ee2c 	.word	0x2000ee2c

08001fd8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fd8:	2001      	movs	r0, #1
 8001fda:	4770      	bx	lr

08001fdc <_kill>:

int _kill(int pid, int sig)
{
 8001fdc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fde:	f01e ff61 	bl	8020ea4 <__errno>
 8001fe2:	2316      	movs	r3, #22
 8001fe4:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fe6:	f04f 30ff 	mov.w	r0, #4294967295
 8001fea:	bd08      	pop	{r3, pc}

08001fec <_exit>:

void _exit (int status)
{
 8001fec:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fee:	f01e ff59 	bl	8020ea4 <__errno>
 8001ff2:	2316      	movs	r3, #22
 8001ff4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001ff6:	e7fe      	b.n	8001ff6 <_exit+0xa>

08001ff8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ff8:	b570      	push	{r4, r5, r6, lr}
 8001ffa:	460e      	mov	r6, r1
 8001ffc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffe:	2500      	movs	r5, #0
 8002000:	42a5      	cmp	r5, r4
 8002002:	db01      	blt.n	8002008 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002004:	4620      	mov	r0, r4
 8002006:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002008:	f3af 8000 	nop.w
 800200c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200e:	3501      	adds	r5, #1
 8002010:	e7f6      	b.n	8002000 <_read+0x8>

08002012 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002012:	b570      	push	{r4, r5, r6, lr}
 8002014:	460e      	mov	r6, r1
 8002016:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002018:	2500      	movs	r5, #0
 800201a:	42a5      	cmp	r5, r4
 800201c:	db01      	blt.n	8002022 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800201e:	4620      	mov	r0, r4
 8002020:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002022:	5d70      	ldrb	r0, [r6, r5]
 8002024:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002028:	3501      	adds	r5, #1
 800202a:	e7f6      	b.n	800201a <_write+0x8>

0800202c <_close>:

int _close(int file)
{
	return -1;
}
 800202c:	f04f 30ff 	mov.w	r0, #4294967295
 8002030:	4770      	bx	lr

08002032 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002032:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002036:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002038:	2000      	movs	r0, #0
 800203a:	4770      	bx	lr

0800203c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800203c:	2001      	movs	r0, #1
 800203e:	4770      	bx	lr

08002040 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002040:	2000      	movs	r0, #0
 8002042:	4770      	bx	lr

08002044 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002044:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002046:	4b0a      	ldr	r3, [pc, #40]	; (8002070 <_sbrk+0x2c>)
 8002048:	6819      	ldr	r1, [r3, #0]
{
 800204a:	4602      	mov	r2, r0
	if (heap_end == 0)
 800204c:	b909      	cbnz	r1, 8002052 <_sbrk+0xe>
		heap_end = &end;
 800204e:	4909      	ldr	r1, [pc, #36]	; (8002074 <_sbrk+0x30>)
 8002050:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8002052:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8002054:	4669      	mov	r1, sp
 8002056:	4402      	add	r2, r0
 8002058:	428a      	cmp	r2, r1
 800205a:	d906      	bls.n	800206a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800205c:	f01e ff22 	bl	8020ea4 <__errno>
 8002060:	230c      	movs	r3, #12
 8002062:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002064:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002068:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800206a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 800206c:	e7fc      	b.n	8002068 <_sbrk+0x24>
 800206e:	bf00      	nop
 8002070:	20005a8c 	.word	0x20005a8c
 8002074:	2000f0c8 	.word	0x2000f0c8

08002078 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_01 = 3; // ROCK_TTF_30_4bpp
    static const touchgfx::FontId TYPOGRAPHY_02 = 4; // ROCK_TTF_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002078:	4770      	bx	lr

0800207a <_ZN23ApplicationFontProviderD0Ev>:
 800207a:	b510      	push	{r4, lr}
 800207c:	2104      	movs	r1, #4
 800207e:	4604      	mov	r4, r0
 8002080:	f01e feaf 	bl	8020de2 <_ZdlPvj>
 8002084:	4620      	mov	r0, r4
 8002086:	bd10      	pop	{r4, pc}

08002088 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002088:	b508      	push	{r3, lr}
 800208a:	2905      	cmp	r1, #5
 800208c:	d818      	bhi.n	80020c0 <_ZN23ApplicationFontProvider7getFontEt+0x38>
 800208e:	e8df f001 	tbb	[pc, r1]
 8002092:	0303      	.short	0x0303
 8002094:	130f0b07 	.word	0x130f0b07
    case Typography::DEFAULT:
        // ROCK_TTF_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // ROCK_TTF_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002098:	f003 fb62 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 800209c:	6800      	ldr	r0, [r0, #0]
        // ROCK_TTF_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 800209e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80020a0:	f003 fb5e 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 80020a4:	6840      	ldr	r0, [r0, #4]
 80020a6:	e7fa      	b.n	800209e <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80020a8:	f003 fb5a 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 80020ac:	6880      	ldr	r0, [r0, #8]
 80020ae:	e7f6      	b.n	800209e <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80020b0:	f003 fb56 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 80020b4:	68c0      	ldr	r0, [r0, #12]
 80020b6:	e7f2      	b.n	800209e <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80020b8:	f003 fb52 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 80020bc:	6900      	ldr	r0, [r0, #16]
 80020be:	e7ee      	b.n	800209e <_ZN23ApplicationFontProvider7getFontEt+0x16>
{
 80020c0:	2000      	movs	r0, #0
 80020c2:	e7ec      	b.n	800209e <_ZN23ApplicationFontProvider7getFontEt+0x16>

080020c4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020c4:	4800      	ldr	r0, [pc, #0]	; (80020c8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020c6:	4770      	bx	lr
 80020c8:	080226f4 	.word	0x080226f4

080020cc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020cc:	2001      	movs	r0, #1
 80020ce:	4770      	bx	lr

080020d0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020d0:	b513      	push	{r0, r1, r4, lr}
 80020d2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020d4:	b151      	cbz	r1, 80020ec <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020d6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020d8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020da:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020de:	aa01      	add	r2, sp, #4
 80020e0:	689c      	ldr	r4, [r3, #8]
 80020e2:	f10d 0303 	add.w	r3, sp, #3
 80020e6:	47a0      	blx	r4
        return glyph;
    }
 80020e8:	b002      	add	sp, #8
 80020ea:	bd10      	pop	{r4, pc}
            return 0;
 80020ec:	4608      	mov	r0, r1
 80020ee:	e7fb      	b.n	80020e8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020f0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020f0:	8940      	ldrh	r0, [r0, #10]
 80020f2:	4770      	bx	lr

080020f4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020f4:	8980      	ldrh	r0, [r0, #12]
 80020f6:	4770      	bx	lr

080020f8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020f8:	8880      	ldrh	r0, [r0, #4]
 80020fa:	4770      	bx	lr

080020fc <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020fc:	7983      	ldrb	r3, [r0, #6]
 80020fe:	8880      	ldrh	r0, [r0, #4]
 8002100:	4418      	add	r0, r3
    }
 8002102:	b280      	uxth	r0, r0
 8002104:	4770      	bx	lr

08002106 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002106:	79c0      	ldrb	r0, [r0, #7]
    }
 8002108:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800210c:	4770      	bx	lr

0800210e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800210e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002110:	09c0      	lsrs	r0, r0, #7
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002114:	4770      	bx	lr

08002116 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002116:	b510      	push	{r4, lr}
    }
 8002118:	2108      	movs	r1, #8
    virtual ~TypedText()
 800211a:	4604      	mov	r4, r0
    }
 800211c:	f01e fe61 	bl	8020de2 <_ZdlPvj>
 8002120:	4620      	mov	r0, r4
 8002122:	bd10      	pop	{r4, pc}

08002124 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002126:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800212a:	6808      	ldr	r0, [r1, #0]
 800212c:	6849      	ldr	r1, [r1, #4]
 800212e:	c303      	stmia	r3!, {r0, r1}
    }
 8002130:	4770      	bx	lr

08002132 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002132:	4770      	bx	lr

08002134 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002134:	4770      	bx	lr

08002136 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002136:	6041      	str	r1, [r0, #4]
    }
 8002138:	4770      	bx	lr

0800213a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800213c:	2301      	movs	r3, #1
 800213e:	7203      	strb	r3, [r0, #8]
    }
 8002140:	4770      	bx	lr

08002142 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002142:	4770      	bx	lr

08002144 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002144:	4770      	bx	lr

08002146 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002146:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002148:	68c2      	ldr	r2, [r0, #12]
 800214a:	6841      	ldr	r1, [r0, #4]
 800214c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800214e:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002150:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002154:	07d2      	lsls	r2, r2, #31
 8002156:	bf48      	it	mi
 8002158:	590a      	ldrmi	r2, [r1, r4]
 800215a:	689b      	ldr	r3, [r3, #8]
    }
 800215c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002160:	bf48      	it	mi
 8002162:	58d3      	ldrmi	r3, [r2, r3]
 8002164:	4718      	bx	r3

08002166 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002166:	6843      	ldr	r3, [r0, #4]
 8002168:	b12b      	cbz	r3, 8002176 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800216a:	6883      	ldr	r3, [r0, #8]
 800216c:	b92b      	cbnz	r3, 800217a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800216e:	68c0      	ldr	r0, [r0, #12]
 8002170:	f000 0001 	and.w	r0, r0, #1
 8002174:	4770      	bx	lr
 8002176:	4618      	mov	r0, r3
 8002178:	4770      	bx	lr
 800217a:	2001      	movs	r0, #1
    }
 800217c:	4770      	bx	lr

0800217e <_ZN8touchgfx12NoTransitionD0Ev>:
 800217e:	b510      	push	{r4, lr}
 8002180:	210c      	movs	r1, #12
 8002182:	4604      	mov	r4, r0
 8002184:	f01e fe2d 	bl	8020de2 <_ZdlPvj>
 8002188:	4620      	mov	r0, r4
 800218a:	bd10      	pop	{r4, pc}

0800218c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800218c:	b510      	push	{r4, lr}
 800218e:	2110      	movs	r1, #16
 8002190:	4604      	mov	r4, r0
 8002192:	f01e fe26 	bl	8020de2 <_ZdlPvj>
 8002196:	4620      	mov	r0, r4
 8002198:	bd10      	pop	{r4, pc}

0800219a <_ZN23FrontendApplicationBaseD0Ev>:
 800219a:	b510      	push	{r4, lr}
 800219c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80021a0:	4604      	mov	r4, r0
 80021a2:	f01e fe1e 	bl	8020de2 <_ZdlPvj>
 80021a6:	4620      	mov	r0, r4
 80021a8:	bd10      	pop	{r4, pc}

080021aa <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021aa:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80021ac:	f00e fa76 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 80021b0:	6803      	ldr	r3, [r0, #0]
    }
 80021b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80021b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021b8:	4718      	bx	r3

080021ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021ba:	b510      	push	{r4, lr}
 80021bc:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021be:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021c2:	b158      	cbz	r0, 80021dc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021c4:	6803      	ldr	r3, [r0, #0]
 80021c6:	68db      	ldr	r3, [r3, #12]
 80021c8:	4798      	blx	r3
 80021ca:	b138      	cbz	r0, 80021dc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021cc:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80021d0:	6803      	ldr	r3, [r0, #0]
 80021d2:	689b      	ldr	r3, [r3, #8]
 80021d4:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021d6:	2300      	movs	r3, #0
 80021d8:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80021dc:	bd10      	pop	{r4, pc}
	...

080021e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen3_screen/Screen3View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80021e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021e2:	4604      	mov	r4, r0
 80021e4:	4617      	mov	r7, r2
 80021e6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80021e8:	f00e fa78 	bl	80106dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80021ec:	4b10      	ldr	r3, [pc, #64]	; (8002230 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80021ee:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80021f0:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80021f4:	4e0f      	ldr	r6, [pc, #60]	; (8002234 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80021f6:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80021f8:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80021fc:	4b0e      	ldr	r3, [pc, #56]	; (8002238 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80021fe:	6830      	ldr	r0, [r6, #0]
 8002200:	6023      	str	r3, [r4, #0]
 8002202:	4b0e      	ldr	r3, [pc, #56]	; (800223c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002204:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002208:	6803      	ldr	r3, [r0, #0]
 800220a:	4629      	mov	r1, r5
 800220c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800220e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002212:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002214:	4628      	mov	r0, r5
 8002216:	f003 fa57 	bl	80056c8 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800221a:	6833      	ldr	r3, [r6, #0]
 800221c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002220:	b10a      	cbz	r2, 8002226 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002222:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002224:	b900      	cbnz	r0, 8002228 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002226:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002228:	f016 f8bd 	bl	80183a6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800222c:	4620      	mov	r0, r4
 800222e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002230:	2000eb7c 	.word	0x2000eb7c
 8002234:	2000eb10 	.word	0x2000eb10
 8002238:	08022c60 	.word	0x08022c60
 800223c:	08022c48 	.word	0x08022c48

08002240 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002240:	4b06      	ldr	r3, [pc, #24]	; (800225c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002242:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002246:	2300      	movs	r3, #0
 8002248:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800224c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002250:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002254:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002258:	4770      	bx	lr
 800225a:	bf00      	nop
 800225c:	080023e9 	.word	0x080023e9

08002260 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8002260:	4b06      	ldr	r3, [pc, #24]	; (800227c <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8002262:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002266:	2300      	movs	r3, #0
 8002268:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800226c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002270:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002274:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002278:	4770      	bx	lr
 800227a:	bf00      	nop
 800227c:	0800254d 	.word	0x0800254d

08002280 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>:
 8002280:	4b06      	ldr	r3, [pc, #24]	; (800229c <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv+0x1c>)
 8002282:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002286:	2300      	movs	r3, #0
 8002288:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800228c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002290:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002294:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002298:	4770      	bx	lr
 800229a:	bf00      	nop
 800229c:	080026b5 	.word	0x080026b5

080022a0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022a0:	6803      	ldr	r3, [r0, #0]
 80022a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a4:	4718      	bx	r3
	...

080022a8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022ac:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022ae:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022b0:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80022b4:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022b6:	6803      	ldr	r3, [r0, #0]
 80022b8:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022ba:	4688      	mov	r8, r1
 80022bc:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022be:	4798      	blx	r3
 80022c0:	f243 63a3 	movw	r3, #13987	; 0x36a3
 80022c4:	4298      	cmp	r0, r3
 80022c6:	d805      	bhi.n	80022d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 80022c8:	4b41      	ldr	r3, [pc, #260]	; (80023d0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80022ca:	4a42      	ldr	r2, [pc, #264]	; (80023d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80022cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022ce:	4842      	ldr	r0, [pc, #264]	; (80023d8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80022d0:	f01e fdb6 	bl	8020e40 <__assert_func>
 80022d4:	6860      	ldr	r0, [r4, #4]
 80022d6:	6803      	ldr	r3, [r0, #0]
 80022d8:	6a1b      	ldr	r3, [r3, #32]
 80022da:	4798      	blx	r3
 80022dc:	280f      	cmp	r0, #15
 80022de:	d803      	bhi.n	80022e8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 80022e0:	4b3e      	ldr	r3, [pc, #248]	; (80023dc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80022e2:	4a3c      	ldr	r2, [pc, #240]	; (80023d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80022e4:	21a4      	movs	r1, #164	; 0xa4
 80022e6:	e7f2      	b.n	80022ce <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022e8:	68e0      	ldr	r0, [r4, #12]
 80022ea:	6803      	ldr	r3, [r0, #0]
 80022ec:	6a1b      	ldr	r3, [r3, #32]
 80022ee:	4798      	blx	r3
 80022f0:	280b      	cmp	r0, #11
 80022f2:	d803      	bhi.n	80022fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 80022f4:	4b3a      	ldr	r3, [pc, #232]	; (80023e0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80022f6:	4a37      	ldr	r2, [pc, #220]	; (80023d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80022f8:	21a5      	movs	r1, #165	; 0xa5
 80022fa:	e7e8      	b.n	80022ce <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 80022fc:	f00e f9ce 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 8002300:	f00e f9d2 	bl	80106a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002304:	f8d9 0000 	ldr.w	r0, [r9]
 8002308:	b110      	cbz	r0, 8002310 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 800230a:	6803      	ldr	r3, [r0, #0]
 800230c:	68db      	ldr	r3, [r3, #12]
 800230e:	4798      	blx	r3
    if (*currentTrans)
 8002310:	f8d9 0000 	ldr.w	r0, [r9]
 8002314:	b110      	cbz	r0, 800231c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8002316:	6803      	ldr	r3, [r0, #0]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	4798      	blx	r3
    if (*currentScreen)
 800231c:	6838      	ldr	r0, [r7, #0]
 800231e:	b110      	cbz	r0, 8002326 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8002320:	6803      	ldr	r3, [r0, #0]
 8002322:	695b      	ldr	r3, [r3, #20]
 8002324:	4798      	blx	r3
    if (*currentPresenter)
 8002326:	f8d8 0000 	ldr.w	r0, [r8]
 800232a:	b110      	cbz	r0, 8002332 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 800232c:	6803      	ldr	r3, [r0, #0]
 800232e:	685b      	ldr	r3, [r3, #4]
 8002330:	4798      	blx	r3
    if (*currentScreen)
 8002332:	6838      	ldr	r0, [r7, #0]
 8002334:	b110      	cbz	r0, 800233c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	4798      	blx	r3
    if (*currentPresenter)
 800233c:	f8d8 0000 	ldr.w	r0, [r8]
 8002340:	b110      	cbz	r0, 8002348 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8002342:	6803      	ldr	r3, [r0, #0]
 8002344:	689b      	ldr	r3, [r3, #8]
 8002346:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002348:	68e0      	ldr	r0, [r4, #12]
 800234a:	2100      	movs	r1, #0
 800234c:	f7ff ffa8 	bl	80022a0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 8002350:	f04f 0b00 	mov.w	fp, #0
 8002354:	4b23      	ldr	r3, [pc, #140]	; (80023e4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002356:	6003      	str	r3, [r0, #0]
 8002358:	4605      	mov	r5, r0
 800235a:	f8c0 b004 	str.w	fp, [r0, #4]
 800235e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002362:	68a0      	ldr	r0, [r4, #8]
 8002364:	6803      	ldr	r3, [r0, #0]
 8002366:	4659      	mov	r1, fp
 8002368:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800236a:	4798      	blx	r3
 800236c:	4606      	mov	r6, r0
 800236e:	f003 faaf 	bl	80058d0 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002372:	6860      	ldr	r0, [r4, #4]
 8002374:	6803      	ldr	r3, [r0, #0]
 8002376:	4659      	mov	r1, fp
 8002378:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800237a:	4798      	blx	r3
 800237c:	4631      	mov	r1, r6
 800237e:	4604      	mov	r4, r0
 8002380:	f003 fa36 	bl	80057f0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002384:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002388:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800238c:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800238e:	b1e4      	cbz	r4, 80023ca <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002390:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002392:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002396:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002398:	f8c4 a008 	str.w	sl, [r4, #8]
 800239c:	4630      	mov	r0, r6
 800239e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80023a0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80023a2:	4798      	blx	r3
    newPresenter->activate();
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	4620      	mov	r0, r4
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023ac:	4629      	mov	r1, r5
 80023ae:	4630      	mov	r0, r6
 80023b0:	f00f fe59 	bl	8012066 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023b4:	682b      	ldr	r3, [r5, #0]
 80023b6:	4628      	mov	r0, r5
 80023b8:	691b      	ldr	r3, [r3, #16]
 80023ba:	4798      	blx	r3
    newTransition->invalidate();
 80023bc:	682b      	ldr	r3, [r5, #0]
 80023be:	4628      	mov	r0, r5
 80023c0:	695b      	ldr	r3, [r3, #20]
 80023c2:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 80023c4:	4620      	mov	r0, r4
 80023c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 80023ca:	4623      	mov	r3, r4
 80023cc:	e7e1      	b.n	8002392 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 80023ce:	bf00      	nop
 80023d0:	08022718 	.word	0x08022718
 80023d4:	080227a6 	.word	0x080227a6
 80023d8:	080228aa 	.word	0x080228aa
 80023dc:	080228f1 	.word	0x080228f1
 80023e0:	08022994 	.word	0x08022994
 80023e4:	08022ca4 	.word	0x08022ca4

080023e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 80023e8:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023ea:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80023ee:	9300      	str	r3, [sp, #0]
 80023f0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80023f4:	4b04      	ldr	r3, [pc, #16]	; (8002408 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80023f6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80023fa:	4804      	ldr	r0, [pc, #16]	; (800240c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80023fc:	f7ff ff54 	bl	80022a8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002400:	b003      	add	sp, #12
 8002402:	f85d fb04 	ldr.w	pc, [sp], #4
 8002406:	bf00      	nop
 8002408:	2000eb70 	.word	0x2000eb70
 800240c:	2000eb6c 	.word	0x2000eb6c

08002410 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002410:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002414:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002416:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002418:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 800241c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800241e:	6803      	ldr	r3, [r0, #0]
 8002420:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002422:	4688      	mov	r8, r1
 8002424:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002426:	4798      	blx	r3
 8002428:	2897      	cmp	r0, #151	; 0x97
 800242a:	d805      	bhi.n	8002438 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 800242c:	4b41      	ldr	r3, [pc, #260]	; (8002534 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 800242e:	4a42      	ldr	r2, [pc, #264]	; (8002538 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002430:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002432:	4842      	ldr	r0, [pc, #264]	; (800253c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002434:	f01e fd04 	bl	8020e40 <__assert_func>
 8002438:	6860      	ldr	r0, [r4, #4]
 800243a:	6803      	ldr	r3, [r0, #0]
 800243c:	6a1b      	ldr	r3, [r3, #32]
 800243e:	4798      	blx	r3
 8002440:	280f      	cmp	r0, #15
 8002442:	d803      	bhi.n	800244c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 8002444:	4b3e      	ldr	r3, [pc, #248]	; (8002540 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002446:	4a3c      	ldr	r2, [pc, #240]	; (8002538 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002448:	21a4      	movs	r1, #164	; 0xa4
 800244a:	e7f2      	b.n	8002432 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800244c:	68e0      	ldr	r0, [r4, #12]
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	6a1b      	ldr	r3, [r3, #32]
 8002452:	4798      	blx	r3
 8002454:	280b      	cmp	r0, #11
 8002456:	d803      	bhi.n	8002460 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 8002458:	4b3a      	ldr	r3, [pc, #232]	; (8002544 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800245a:	4a37      	ldr	r2, [pc, #220]	; (8002538 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800245c:	21a5      	movs	r1, #165	; 0xa5
 800245e:	e7e8      	b.n	8002432 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 8002460:	f00e f91c 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 8002464:	f00e f920 	bl	80106a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002468:	f8d9 0000 	ldr.w	r0, [r9]
 800246c:	b110      	cbz	r0, 8002474 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 800246e:	6803      	ldr	r3, [r0, #0]
 8002470:	68db      	ldr	r3, [r3, #12]
 8002472:	4798      	blx	r3
    if (*currentTrans)
 8002474:	f8d9 0000 	ldr.w	r0, [r9]
 8002478:	b110      	cbz	r0, 8002480 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	4798      	blx	r3
    if (*currentScreen)
 8002480:	6838      	ldr	r0, [r7, #0]
 8002482:	b110      	cbz	r0, 800248a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 8002484:	6803      	ldr	r3, [r0, #0]
 8002486:	695b      	ldr	r3, [r3, #20]
 8002488:	4798      	blx	r3
    if (*currentPresenter)
 800248a:	f8d8 0000 	ldr.w	r0, [r8]
 800248e:	b110      	cbz	r0, 8002496 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 8002490:	6803      	ldr	r3, [r0, #0]
 8002492:	685b      	ldr	r3, [r3, #4]
 8002494:	4798      	blx	r3
    if (*currentScreen)
 8002496:	6838      	ldr	r0, [r7, #0]
 8002498:	b110      	cbz	r0, 80024a0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 800249a:	6803      	ldr	r3, [r0, #0]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	4798      	blx	r3
    if (*currentPresenter)
 80024a0:	f8d8 0000 	ldr.w	r0, [r8]
 80024a4:	b110      	cbz	r0, 80024ac <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 80024a6:	6803      	ldr	r3, [r0, #0]
 80024a8:	689b      	ldr	r3, [r3, #8]
 80024aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80024ac:	68e0      	ldr	r0, [r4, #12]
 80024ae:	2100      	movs	r1, #0
 80024b0:	f7ff fef6 	bl	80022a0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80024b4:	f04f 0b00 	mov.w	fp, #0
 80024b8:	4b23      	ldr	r3, [pc, #140]	; (8002548 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80024ba:	6003      	str	r3, [r0, #0]
 80024bc:	4605      	mov	r5, r0
 80024be:	f8c0 b004 	str.w	fp, [r0, #4]
 80024c2:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024c6:	68a0      	ldr	r0, [r4, #8]
 80024c8:	6803      	ldr	r3, [r0, #0]
 80024ca:	4659      	mov	r1, fp
 80024cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024ce:	4798      	blx	r3
 80024d0:	4606      	mov	r6, r0
 80024d2:	f003 fa2f 	bl	8005934 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024d6:	6860      	ldr	r0, [r4, #4]
 80024d8:	6803      	ldr	r3, [r0, #0]
 80024da:	4659      	mov	r1, fp
 80024dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024de:	4798      	blx	r3
 80024e0:	4631      	mov	r1, r6
 80024e2:	4604      	mov	r4, r0
 80024e4:	f003 fa0c 	bl	8005900 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 80024e8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80024ec:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80024f0:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80024f2:	b1e4      	cbz	r4, 800252e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11e>
 80024f4:	1d23      	adds	r3, r4, #4
 80024f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024fa:	6833      	ldr	r3, [r6, #0]
 80024fc:	f8c4 a008 	str.w	sl, [r4, #8]
 8002500:	4630      	mov	r0, r6
 8002502:	68db      	ldr	r3, [r3, #12]
 8002504:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002506:	4798      	blx	r3
    newPresenter->activate();
 8002508:	6823      	ldr	r3, [r4, #0]
 800250a:	4620      	mov	r0, r4
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002510:	4629      	mov	r1, r5
 8002512:	4630      	mov	r0, r6
 8002514:	f00f fda7 	bl	8012066 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002518:	682b      	ldr	r3, [r5, #0]
 800251a:	4628      	mov	r0, r5
 800251c:	691b      	ldr	r3, [r3, #16]
 800251e:	4798      	blx	r3
    newTransition->invalidate();
 8002520:	682b      	ldr	r3, [r5, #0]
 8002522:	4628      	mov	r0, r5
 8002524:	695b      	ldr	r3, [r3, #20]
 8002526:	4798      	blx	r3
}
 8002528:	4620      	mov	r0, r4
 800252a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 800252e:	4623      	mov	r3, r4
 8002530:	e7e1      	b.n	80024f6 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe6>
 8002532:	bf00      	nop
 8002534:	08022718 	.word	0x08022718
 8002538:	08022a37 	.word	0x08022a37
 800253c:	080228aa 	.word	0x080228aa
 8002540:	080228f1 	.word	0x080228f1
 8002544:	08022994 	.word	0x08022994
 8002548:	08022ca4 	.word	0x08022ca4

0800254c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 800254c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800254e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002552:	9300      	str	r3, [sp, #0]
 8002554:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002558:	4b04      	ldr	r3, [pc, #16]	; (800256c <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 800255a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800255e:	4804      	ldr	r0, [pc, #16]	; (8002570 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8002560:	f7ff ff56 	bl	8002410 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002564:	b003      	add	sp, #12
 8002566:	f85d fb04 	ldr.w	pc, [sp], #4
 800256a:	bf00      	nop
 800256c:	2000eb70 	.word	0x2000eb70
 8002570:	2000eb6c 	.word	0x2000eb6c

08002574 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002574:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002578:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800257a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800257c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002580:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002582:	6803      	ldr	r3, [r0, #0]
 8002584:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002586:	4688      	mov	r8, r1
 8002588:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800258a:	4798      	blx	r3
 800258c:	f644 2303 	movw	r3, #18947	; 0x4a03
 8002590:	4298      	cmp	r0, r3
 8002592:	d805      	bhi.n	80025a0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8002594:	4b41      	ldr	r3, [pc, #260]	; (800269c <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002596:	4a42      	ldr	r2, [pc, #264]	; (80026a0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002598:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800259a:	4842      	ldr	r0, [pc, #264]	; (80026a4 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800259c:	f01e fc50 	bl	8020e40 <__assert_func>
 80025a0:	6860      	ldr	r0, [r4, #4]
 80025a2:	6803      	ldr	r3, [r0, #0]
 80025a4:	6a1b      	ldr	r3, [r3, #32]
 80025a6:	4798      	blx	r3
 80025a8:	280f      	cmp	r0, #15
 80025aa:	d803      	bhi.n	80025b4 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 80025ac:	4b3e      	ldr	r3, [pc, #248]	; (80026a8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80025ae:	4a3c      	ldr	r2, [pc, #240]	; (80026a0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80025b0:	21a4      	movs	r1, #164	; 0xa4
 80025b2:	e7f2      	b.n	800259a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025b4:	68e0      	ldr	r0, [r4, #12]
 80025b6:	6803      	ldr	r3, [r0, #0]
 80025b8:	6a1b      	ldr	r3, [r3, #32]
 80025ba:	4798      	blx	r3
 80025bc:	280b      	cmp	r0, #11
 80025be:	d803      	bhi.n	80025c8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 80025c0:	4b3a      	ldr	r3, [pc, #232]	; (80026ac <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80025c2:	4a37      	ldr	r2, [pc, #220]	; (80026a0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80025c4:	21a5      	movs	r1, #165	; 0xa5
 80025c6:	e7e8      	b.n	800259a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 80025c8:	f00e f868 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 80025cc:	f00e f86c 	bl	80106a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025d0:	f8d9 0000 	ldr.w	r0, [r9]
 80025d4:	b110      	cbz	r0, 80025dc <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 80025d6:	6803      	ldr	r3, [r0, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	4798      	blx	r3
    if (*currentTrans)
 80025dc:	f8d9 0000 	ldr.w	r0, [r9]
 80025e0:	b110      	cbz	r0, 80025e8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 80025e2:	6803      	ldr	r3, [r0, #0]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4798      	blx	r3
    if (*currentScreen)
 80025e8:	6838      	ldr	r0, [r7, #0]
 80025ea:	b110      	cbz	r0, 80025f2 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 80025ec:	6803      	ldr	r3, [r0, #0]
 80025ee:	695b      	ldr	r3, [r3, #20]
 80025f0:	4798      	blx	r3
    if (*currentPresenter)
 80025f2:	f8d8 0000 	ldr.w	r0, [r8]
 80025f6:	b110      	cbz	r0, 80025fe <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 80025f8:	6803      	ldr	r3, [r0, #0]
 80025fa:	685b      	ldr	r3, [r3, #4]
 80025fc:	4798      	blx	r3
    if (*currentScreen)
 80025fe:	6838      	ldr	r0, [r7, #0]
 8002600:	b110      	cbz	r0, 8002608 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	4798      	blx	r3
    if (*currentPresenter)
 8002608:	f8d8 0000 	ldr.w	r0, [r8]
 800260c:	b110      	cbz	r0, 8002614 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 800260e:	6803      	ldr	r3, [r0, #0]
 8002610:	689b      	ldr	r3, [r3, #8]
 8002612:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002614:	68e0      	ldr	r0, [r4, #12]
 8002616:	2100      	movs	r1, #0
 8002618:	f7ff fe42 	bl	80022a0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800261c:	f04f 0b00 	mov.w	fp, #0
 8002620:	4b23      	ldr	r3, [pc, #140]	; (80026b0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002622:	6003      	str	r3, [r0, #0]
 8002624:	4605      	mov	r5, r0
 8002626:	f8c0 b004 	str.w	fp, [r0, #4]
 800262a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800262e:	68a0      	ldr	r0, [r4, #8]
 8002630:	6803      	ldr	r3, [r0, #0]
 8002632:	4659      	mov	r1, fp
 8002634:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002636:	4798      	blx	r3
 8002638:	4606      	mov	r6, r0
 800263a:	f003 f9ad 	bl	8005998 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800263e:	6860      	ldr	r0, [r4, #4]
 8002640:	6803      	ldr	r3, [r0, #0]
 8002642:	4659      	mov	r1, fp
 8002644:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002646:	4798      	blx	r3
 8002648:	4631      	mov	r1, r6
 800264a:	4604      	mov	r4, r0
 800264c:	f003 f98a 	bl	8005964 <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 8002650:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002654:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002658:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800265a:	b1e4      	cbz	r4, 8002696 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 800265c:	1d23      	adds	r3, r4, #4
 800265e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002662:	6833      	ldr	r3, [r6, #0]
 8002664:	f8c4 a008 	str.w	sl, [r4, #8]
 8002668:	4630      	mov	r0, r6
 800266a:	68db      	ldr	r3, [r3, #12]
 800266c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800266e:	4798      	blx	r3
    newPresenter->activate();
 8002670:	6823      	ldr	r3, [r4, #0]
 8002672:	4620      	mov	r0, r4
 8002674:	681b      	ldr	r3, [r3, #0]
 8002676:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002678:	4629      	mov	r1, r5
 800267a:	4630      	mov	r0, r6
 800267c:	f00f fcf3 	bl	8012066 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002680:	682b      	ldr	r3, [r5, #0]
 8002682:	4628      	mov	r0, r5
 8002684:	691b      	ldr	r3, [r3, #16]
 8002686:	4798      	blx	r3
    newTransition->invalidate();
 8002688:	682b      	ldr	r3, [r5, #0]
 800268a:	4628      	mov	r0, r5
 800268c:	695b      	ldr	r3, [r3, #20]
 800268e:	4798      	blx	r3
}
 8002690:	4620      	mov	r0, r4
 8002692:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002696:	4623      	mov	r3, r4
 8002698:	e7e1      	b.n	800265e <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 800269a:	bf00      	nop
 800269c:	08022718 	.word	0x08022718
 80026a0:	08022b3b 	.word	0x08022b3b
 80026a4:	080228aa 	.word	0x080228aa
 80026a8:	080228f1 	.word	0x080228f1
 80026ac:	08022994 	.word	0x08022994
 80026b0:	08022ca4 	.word	0x08022ca4

080026b4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen3ScreenNoTransitionImpl()
{
 80026b4:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026b6:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80026ba:	9300      	str	r3, [sp, #0]
 80026bc:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80026c0:	4b04      	ldr	r3, [pc, #16]	; (80026d4 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>)
 80026c2:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80026c6:	4804      	ldr	r0, [pc, #16]	; (80026d8 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x24>)
 80026c8:	f7ff ff54 	bl	8002574 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80026cc:	b003      	add	sp, #12
 80026ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80026d2:	bf00      	nop
 80026d4:	2000eb70 	.word	0x2000eb70
 80026d8:	2000eb6c 	.word	0x2000eb6c

080026dc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80026dc:	6a00      	ldr	r0, [r0, #32]
 80026de:	4770      	bx	lr

080026e0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80026e0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80026e2:	4770      	bx	lr

080026e4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80026e4:	4770      	bx	lr

080026e6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80026e6:	888b      	ldrh	r3, [r1, #4]
 80026e8:	6980      	ldr	r0, [r0, #24]
 80026ea:	680a      	ldr	r2, [r1, #0]
 80026ec:	0adb      	lsrs	r3, r3, #11
 80026ee:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80026f2:	4410      	add	r0, r2
 80026f4:	4770      	bx	lr

080026f6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80026f6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80026f8:	b1c2      	cbz	r2, 800272c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80026fa:	7b13      	ldrb	r3, [r2, #12]
 80026fc:	b1b3      	cbz	r3, 800272c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80026fe:	7b54      	ldrb	r4, [r2, #13]
 8002700:	7ad2      	ldrb	r2, [r2, #11]
 8002702:	0224      	lsls	r4, r4, #8
 8002704:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002708:	4314      	orrs	r4, r2
 800270a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800270c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800270e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002712:	8813      	ldrh	r3, [r2, #0]
 8002714:	428b      	cmp	r3, r1
 8002716:	d102      	bne.n	800271e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002718:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800271c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800271e:	d805      	bhi.n	800272c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002720:	3801      	subs	r0, #1
 8002722:	b280      	uxth	r0, r0
 8002724:	3204      	adds	r2, #4
 8002726:	2800      	cmp	r0, #0
 8002728:	d1f3      	bne.n	8002712 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800272a:	e7f7      	b.n	800271c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800272c:	2000      	movs	r0, #0
 800272e:	e7f5      	b.n	800271c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002730 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002730:	b510      	push	{r4, lr}
 8002732:	2128      	movs	r1, #40	; 0x28
 8002734:	4604      	mov	r4, r0
 8002736:	f01e fb54 	bl	8020de2 <_ZdlPvj>
 800273a:	4620      	mov	r0, r4
 800273c:	bd10      	pop	{r4, pc}
	...

08002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002740:	b530      	push	{r4, r5, lr}
 8002742:	b089      	sub	sp, #36	; 0x24
 8002744:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002746:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800274a:	9506      	str	r5, [sp, #24]
 800274c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002750:	9505      	str	r5, [sp, #20]
 8002752:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002756:	9504      	str	r5, [sp, #16]
 8002758:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800275c:	9503      	str	r5, [sp, #12]
 800275e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002762:	9502      	str	r5, [sp, #8]
 8002764:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002768:	9501      	str	r5, [sp, #4]
 800276a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800276e:	9500      	str	r5, [sp, #0]
 8002770:	f00e ffcc 	bl	801170c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002774:	4b06      	ldr	r3, [pc, #24]	; (8002790 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002776:	6023      	str	r3, [r4, #0]
 8002778:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800277a:	61a3      	str	r3, [r4, #24]
 800277c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800277e:	61e3      	str	r3, [r4, #28]
 8002780:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002782:	6223      	str	r3, [r4, #32]
 8002784:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002786:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002788:	4620      	mov	r0, r4
 800278a:	b009      	add	sp, #36	; 0x24
 800278c:	bd30      	pop	{r4, r5, pc}
 800278e:	bf00      	nop
 8002790:	08022cc8 	.word	0x08022cc8

08002794 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002794:	2000      	movs	r0, #0
 8002796:	4770      	bx	lr

08002798 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002798:	8081      	strh	r1, [r0, #4]
    }
 800279a:	4770      	bx	lr

0800279c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800279c:	80c1      	strh	r1, [r0, #6]
    }
 800279e:	4770      	bx	lr

080027a0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80027a0:	8101      	strh	r1, [r0, #8]
    }
 80027a2:	4770      	bx	lr

080027a4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80027a4:	8141      	strh	r1, [r0, #10]
    }
 80027a6:	4770      	bx	lr

080027a8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80027a8:	4770      	bx	lr

080027aa <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 80027aa:	4770      	bx	lr

080027ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 80027ac:	4770      	bx	lr

080027ae <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 80027ae:	4770      	bx	lr

080027b0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80027b0:	4770      	bx	lr

080027b2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80027b2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80027b4:	88c4      	ldrh	r4, [r0, #6]
 80027b6:	6803      	ldr	r3, [r0, #0]
 80027b8:	1b12      	subs	r2, r2, r4
 80027ba:	8884      	ldrh	r4, [r0, #4]
 80027bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80027be:	1b09      	subs	r1, r1, r4
 80027c0:	b212      	sxth	r2, r2
    }
 80027c2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80027c6:	b209      	sxth	r1, r1
 80027c8:	4718      	bx	r3

080027ca <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80027ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027ce:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80027d0:	f04f 33ff 	mov.w	r3, #4294967295
 80027d4:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80027d6:	6813      	ldr	r3, [r2, #0]
 80027d8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80027da:	6010      	str	r0, [r2, #0]
    }
 80027dc:	4770      	bx	lr

080027de <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80027de:	4770      	bx	lr

080027e0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80027e0:	4770      	bx	lr

080027e2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80027e2:	4770      	bx	lr

080027e4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80027e4:	4770      	bx	lr

080027e6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80027e6:	4770      	bx	lr

080027e8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80027e8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80027ec:	b11a      	cbz	r2, 80027f6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80027ee:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80027f2:	b102      	cbz	r2, 80027f6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80027f4:	6018      	str	r0, [r3, #0]
        }
    }
 80027f6:	4770      	bx	lr

080027f8 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80027f8:	4770      	bx	lr

080027fa <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80027fa:	4770      	bx	lr

080027fc <_ZN15Screen1ViewBaseD0Ev>:
 80027fc:	b510      	push	{r4, lr}
 80027fe:	f243 61a4 	movw	r1, #13988	; 0x36a4
 8002802:	4604      	mov	r4, r0
 8002804:	f01e faed 	bl	8020de2 <_ZdlPvj>
 8002808:	4620      	mov	r0, r4
 800280a:	bd10      	pop	{r4, pc}

0800280c <_ZN15Screen1ViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
 800280c:	2901      	cmp	r1, #1
{
 800280e:	b508      	push	{r3, lr}
    if(1 == key)
 8002810:	d105      	bne.n	800281e <_ZN15Screen1ViewBase14handleKeyEventEh+0x12>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002812:	f00d ff43 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
 8002816:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 800281a:	f7ff bd21 	b.w	8002260 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 800281e:	bd08      	pop	{r3, pc}

08002820 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002820:	4a07      	ldr	r2, [pc, #28]	; (8002840 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002822:	6002      	str	r2, [r0, #0]
 8002824:	2200      	movs	r2, #0
 8002826:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800282a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800282e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002832:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002836:	f44f 7280 	mov.w	r2, #256	; 0x100
 800283a:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800283c:	4770      	bx	lr
 800283e:	bf00      	nop
 8002840:	08024934 	.word	0x08024934

08002844 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002844:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002846:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002848:	4604      	mov	r4, r0
        setX(x);
 800284a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 800284c:	4615      	mov	r5, r2
        setX(x);
 800284e:	4798      	blx	r3
        setY(y);
 8002850:	6823      	ldr	r3, [r4, #0]
 8002852:	4629      	mov	r1, r5
 8002854:	4620      	mov	r0, r4
 8002856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800285c:	4718      	bx	r3

0800285e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800285e:	b570      	push	{r4, r5, r6, lr}
 8002860:	4604      	mov	r4, r0
 8002862:	461d      	mov	r5, r3
 8002864:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002868:	f7ff ffec 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800286c:	6823      	ldr	r3, [r4, #0]
 800286e:	4629      	mov	r1, r5
 8002870:	4620      	mov	r0, r4
 8002872:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002874:	4798      	blx	r3
        setHeight(height);
 8002876:	6823      	ldr	r3, [r4, #0]
 8002878:	4631      	mov	r1, r6
 800287a:	4620      	mov	r0, r4
 800287c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800287e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002882:	4718      	bx	r3

08002884 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8002884:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002886:	2226      	movs	r2, #38	; 0x26
    Box()
 8002888:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 800288a:	2100      	movs	r1, #0
 800288c:	f01e fc5e 	bl	802114c <memset>
class Widget : public Drawable
 8002890:	4620      	mov	r0, r4
 8002892:	f7ff ffc5 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 8002896:	4b04      	ldr	r3, [pc, #16]	; (80028a8 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002898:	6023      	str	r3, [r4, #0]
 800289a:	23ff      	movs	r3, #255	; 0xff
 800289c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 80028a0:	2300      	movs	r3, #0
 80028a2:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 80028a4:	4620      	mov	r0, r4
 80028a6:	bd10      	pop	{r4, pc}
 80028a8:	08024534 	.word	0x08024534

080028ac <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 80028ac:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80028ae:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80028b0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80028b2:	2100      	movs	r1, #0
 80028b4:	f01e fc4a 	bl	802114c <memset>
 80028b8:	4620      	mov	r0, r4
 80028ba:	f7ff ffb1 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 80028be:	4b07      	ldr	r3, [pc, #28]	; (80028dc <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 80028c0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028c2:	4b07      	ldr	r3, [pc, #28]	; (80028e0 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 80028c4:	62a3      	str	r3, [r4, #40]	; 0x28
 80028c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028ca:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80028cc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80028d0:	2300      	movs	r3, #0
 80028d2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80028d6:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 80028d8:	4620      	mov	r0, r4
 80028da:	bd10      	pop	{r4, pc}
 80028dc:	0802448c 	.word	0x0802448c
 80028e0:	08022710 	.word	0x08022710

080028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80028e4:	b570      	push	{r4, r5, r6, lr}
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 80028e6:	22ff      	movs	r2, #255	; 0xff
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80028e8:	4e13      	ldr	r6, [pc, #76]	; (8002938 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80028ea:	7202      	strb	r2, [r0, #8]
        : AbstractPainter(), currentX(0), currentY(0)
 80028ec:	4a13      	ldr	r2, [pc, #76]	; (800293c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80028ee:	6002      	str	r2, [r0, #0]
 80028f0:	6832      	ldr	r2, [r6, #0]
 80028f2:	f892 1076 	ldrb.w	r1, [r2, #118]	; 0x76
 80028f6:	2300      	movs	r3, #0
 80028f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
    AbstractPainterRGB565()
 80028fc:	4604      	mov	r4, r0
 80028fe:	6043      	str	r3, [r0, #4]
 8002900:	b109      	cbz	r1, 8002906 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x22>
 8002902:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8002904:	b900      	cbnz	r0, 8002908 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x24>
        return instance->lcdRef;
 8002906:	6890      	ldr	r0, [r2, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002908:	6803      	ldr	r3, [r0, #0]
 800290a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800290c:	4798      	blx	r3
        if (HAL::getInstance()->getAuxiliaryLCD())
 800290e:	6833      	ldr	r3, [r6, #0]
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002910:	fab0 f580 	clz	r5, r0
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002914:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002916:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002918:	b128      	cbz	r0, 8002926 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x42>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800291a:	6803      	ldr	r3, [r0, #0]
 800291c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800291e:	4798      	blx	r3
 8002920:	2800      	cmp	r0, #0
 8002922:	bf08      	it	eq
 8002924:	2501      	moveq	r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002926:	b92d      	cbnz	r5, 8002934 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>
 8002928:	4b05      	ldr	r3, [pc, #20]	; (8002940 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800292a:	4a06      	ldr	r2, [pc, #24]	; (8002944 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800292c:	4806      	ldr	r0, [pc, #24]	; (8002948 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x64>)
 800292e:	212c      	movs	r1, #44	; 0x2c
 8002930:	f01e fa86 	bl	8020e40 <__assert_func>
    }
 8002934:	4620      	mov	r0, r4
 8002936:	bd70      	pop	{r4, r5, r6, pc}
 8002938:	2000eb10 	.word	0x2000eb10
 800293c:	08024080 	.word	0x08024080
 8002940:	08022d18 	.word	0x08022d18
 8002944:	08022d76 	.word	0x08022d76
 8002948:	08022daf 	.word	0x08022daf

0800294c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 800294c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002950:	ed2d 8b10 	vpush	{d8-d15}
 8002954:	4604      	mov	r4, r0
 8002956:	b093      	sub	sp, #76	; 0x4c
        : presenter(0)
 8002958:	f00f fa08 	bl	8011d6c <_ZN8touchgfx6ScreenC1Ev>
 800295c:	4622      	mov	r2, r4
 800295e:	2500      	movs	r5, #0
 8002960:	4bb8      	ldr	r3, [pc, #736]	; (8002c44 <_ZN15Screen1ViewBaseC1Ev+0x2f8>)
 8002962:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002964:	f842 3b40 	str.w	r3, [r2], #64
 8002968:	4610      	mov	r0, r2
 800296a:	ee09 2a90 	vmov	s19, r2
 800296e:	f7ff ff89 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8002972:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002976:	4618      	mov	r0, r3
 8002978:	9309      	str	r3, [sp, #36]	; 0x24
 800297a:	f7ff ff83 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800297e:	f104 0398 	add.w	r3, r4, #152	; 0x98
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 8002982:	f8df 82e4 	ldr.w	r8, [pc, #740]	; 8002c68 <_ZN15Screen1ViewBaseC1Ev+0x31c>
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002986:	4fb0      	ldr	r7, [pc, #704]	; (8002c48 <_ZN15Screen1ViewBaseC1Ev+0x2fc>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), painterColor(0)
 8002988:	f8df 92e0 	ldr.w	r9, [pc, #736]	; 8002c6c <_ZN15Screen1ViewBaseC1Ev+0x320>
 800298c:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
 8002990:	4618      	mov	r0, r3
 8002992:	ee08 3a10 	vmov	s16, r3
 8002996:	f7ff ff43 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 800299a:	f8c4 8098 	str.w	r8, [r4, #152]	; 0x98
 800299e:	4658      	mov	r0, fp
 80029a0:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 80029a4:	f7ff ff6e 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80029a8:	f104 03f0 	add.w	r3, r4, #240	; 0xf0
 80029ac:	4618      	mov	r0, r3
 80029ae:	ee0a 3a10 	vmov	s20, r3
 80029b2:	f7ff ff7b 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80029b6:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80029ba:	f8c4 70f0 	str.w	r7, [r4, #240]	; 0xf0
 80029be:	4618      	mov	r0, r3
 80029c0:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80029c4:	ee0a 3a90 	vmov	s21, r3
 80029c8:	f7ff ff70 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80029cc:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 80029d0:	4618      	mov	r0, r3
 80029d2:	f504 76cc 	add.w	r6, r4, #408	; 0x198
 80029d6:	ee08 3a90 	vmov	s17, r3
 80029da:	f7ff ff21 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 80029de:	f8c4 816c 	str.w	r8, [r4, #364]	; 0x16c
 80029e2:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
 80029e6:	4630      	mov	r0, r6
 80029e8:	f7ff ff1a 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 80029ec:	f504 73e2 	add.w	r3, r4, #452	; 0x1c4
 80029f0:	f8c4 8198 	str.w	r8, [r4, #408]	; 0x198
 80029f4:	4618      	mov	r0, r3
 80029f6:	f8c4 51c0 	str.w	r5, [r4, #448]	; 0x1c0
 80029fa:	930a      	str	r3, [sp, #40]	; 0x28
 80029fc:	f7ff ff42 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8002a00:	f504 73f8 	add.w	r3, r4, #496	; 0x1f0
 8002a04:	4618      	mov	r0, r3
 8002a06:	ee0b 3a10 	vmov	s22, r3
 8002a0a:	f00a fe4b 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
 8002a0e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002a12:	4618      	mov	r0, r3
 8002a14:	930f      	str	r3, [sp, #60]	; 0x3c
 8002a16:	f7ff ff65 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002a1a:	f504 7315 	add.w	r3, r4, #596	; 0x254
 8002a1e:	f8c4 923c 	str.w	r9, [r4, #572]	; 0x23c
 8002a22:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    void setColor(colortype color)
    {
        painterColor = color;
 8002a24:	f8c4 5250 	str.w	r5, [r4, #592]	; 0x250
 8002a28:	ee0b 3a90 	vmov	s23, r3
 8002a2c:	f00a fe3a 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8002a30:	f504 7328 	add.w	r3, r4, #672	; 0x2a0
 8002a34:	4618      	mov	r0, r3
 8002a36:	930e      	str	r3, [sp, #56]	; 0x38
 8002a38:	f7ff ff54 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002a3c:	f504 732e 	add.w	r3, r4, #696	; 0x2b8
 8002a40:	f8c4 92a0 	str.w	r9, [r4, #672]	; 0x2a0
 8002a44:	4618      	mov	r0, r3
        painterColor = color;
 8002a46:	f8c4 52b4 	str.w	r5, [r4, #692]	; 0x2b4
 8002a4a:	ee0c 3a10 	vmov	s24, r3
 8002a4e:	f00a fe29 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8002a52:	f504 7341 	add.w	r3, r4, #772	; 0x304
 8002a56:	4618      	mov	r0, r3
 8002a58:	930d      	str	r3, [sp, #52]	; 0x34
 8002a5a:	f7ff ff43 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002a5e:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002a62:	f8c4 9304 	str.w	r9, [r4, #772]	; 0x304
 8002a66:	4618      	mov	r0, r3
        painterColor = color;
 8002a68:	f8c4 5318 	str.w	r5, [r4, #792]	; 0x318
 8002a6c:	ee0c 3a90 	vmov	s25, r3
 8002a70:	f7ff ff1c 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a74:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8002a78:	4618      	mov	r0, r3
 8002a7a:	ee0d 3a10 	vmov	s26, r3
 8002a7e:	f7ff ff15 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a82:	f504 7365 	add.w	r3, r4, #916	; 0x394
 8002a86:	4618      	mov	r0, r3
 8002a88:	ee0d 3a90 	vmov	s27, r3
 8002a8c:	f7ff ff0e 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002a90:	f504 7374 	add.w	r3, r4, #976	; 0x3d0
 8002a94:	4618      	mov	r0, r3
 8002a96:	ee09 3a10 	vmov	s18, r3
 8002a9a:	f7ff fec1 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 8002a9e:	f504 737f 	add.w	r3, r4, #1020	; 0x3fc
 8002aa2:	f8c4 83d0 	str.w	r8, [r4, #976]	; 0x3d0
 8002aa6:	4618      	mov	r0, r3
 8002aa8:	f8c4 53f8 	str.w	r5, [r4, #1016]	; 0x3f8
 8002aac:	930b      	str	r3, [sp, #44]	; 0x2c
 8002aae:	f7ff fee9 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8002ab2:	f504 6385 	add.w	r3, r4, #1064	; 0x428
 8002ab6:	4618      	mov	r0, r3
 8002ab8:	ee0e 3a10 	vmov	s28, r3
 8002abc:	f7ff fef6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002ac0:	f204 4364 	addw	r3, r4, #1124	; 0x464
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	f204 49a4 	addw	r9, r4, #1188	; 0x4a4
 8002aca:	ee0e 3a90 	vmov	s29, r3
 8002ace:	f7ff feed 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002ad2:	f8c4 7464 	str.w	r7, [r4, #1124]	; 0x464
 8002ad6:	f8c4 54a0 	str.w	r5, [r4, #1184]	; 0x4a0
 8002ada:	4648      	mov	r0, r9
 8002adc:	f7ff fea0 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 8002ae0:	f504 639a 	add.w	r3, r4, #1232	; 0x4d0
 8002ae4:	f8c4 84a4 	str.w	r8, [r4, #1188]	; 0x4a4
 8002ae8:	4618      	mov	r0, r3
 8002aea:	f8c4 54cc 	str.w	r5, [r4, #1228]	; 0x4cc
 8002aee:	930c      	str	r3, [sp, #48]	; 0x30
 8002af0:	f7ff fec8 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8002af4:	f204 43fc 	addw	r3, r4, #1276	; 0x4fc
 8002af8:	4618      	mov	r0, r3
 8002afa:	ee0f 3a10 	vmov	s30, r3
 8002afe:	f7ff fed5 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b02:	f504 63a7 	add.w	r3, r4, #1336	; 0x538
 8002b06:	4618      	mov	r0, r3
 8002b08:	ee0f 3a90 	vmov	s31, r3
 8002b0c:	f7ff fece 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b10:	f204 5374 	addw	r3, r4, #1396	; 0x574
 8002b14:	4618      	mov	r0, r3
 8002b16:	f504 68b6 	add.w	r8, r4, #1456	; 0x5b0
 8002b1a:	9302      	str	r3, [sp, #8]
 8002b1c:	f7ff fec6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b20:	4640      	mov	r0, r8
 8002b22:	f7ff fec3 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b26:	f204 53ec 	addw	r3, r4, #1516	; 0x5ec
 8002b2a:	4618      	mov	r0, r3
 8002b2c:	9303      	str	r3, [sp, #12]
 8002b2e:	f7ff febd 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b32:	f204 632c 	addw	r3, r4, #1580	; 0x62c
 8002b36:	f8c4 75ec 	str.w	r7, [r4, #1516]	; 0x5ec
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	f8c4 5628 	str.w	r5, [r4, #1576]	; 0x628
 8002b40:	9304      	str	r3, [sp, #16]
 8002b42:	f7ff feb3 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b46:	f204 636c 	addw	r3, r4, #1644	; 0x66c
 8002b4a:	f8c4 762c 	str.w	r7, [r4, #1580]	; 0x62c
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f8c4 5668 	str.w	r5, [r4, #1640]	; 0x668
 8002b54:	9305      	str	r3, [sp, #20]
 8002b56:	f7ff fea9 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b5a:	f204 63ac 	addw	r3, r4, #1708	; 0x6ac
 8002b5e:	f8c4 766c 	str.w	r7, [r4, #1644]	; 0x66c
 8002b62:	4618      	mov	r0, r3
 8002b64:	f8c4 56a8 	str.w	r5, [r4, #1704]	; 0x6a8
 8002b68:	9306      	str	r3, [sp, #24]
 8002b6a:	f7ff fe9f 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b6e:	f504 63dd 	add.w	r3, r4, #1768	; 0x6e8
 8002b72:	4618      	mov	r0, r3
 8002b74:	9307      	str	r3, [sp, #28]
 8002b76:	f7ff fe99 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8002b7a:	f204 7324 	addw	r3, r4, #1828	; 0x724
 8002b7e:	4618      	mov	r0, r3
 8002b80:	9308      	str	r3, [sp, #32]
    __background.setPosition(0, 0, 800, 480);
 8002b82:	f44f 77f0 	mov.w	r7, #480	; 0x1e0
Screen1ViewBase::Screen1ViewBase()
 8002b86:	f7ff fe91 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b8a:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8002b8e:	f204 70c4 	addw	r0, r4, #1988	; 0x7c4
 8002b92:	f00c f865 	bl	800ec60 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002b96:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
    __background.setPosition(0, 0, 800, 480);
 8002b9a:	ee19 0a90 	vmov	r0, s19
 8002b9e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002ba2:	462a      	mov	r2, r5
 8002ba4:	4629      	mov	r1, r5
 8002ba6:	9700      	str	r7, [sp, #0]
 8002ba8:	f7ff fe59 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setPosition(0, 0, 800, 480);
 8002bac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002bae:	f8c4 a068 	str.w	sl, [r4, #104]	; 0x68
 8002bb2:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002bb6:	462a      	mov	r2, r5
 8002bb8:	4629      	mov	r1, r5
 8002bba:	9700      	str	r7, [sp, #0]
 8002bbc:	f7ff fe4f 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002bc0:	4b22      	ldr	r3, [pc, #136]	; (8002c4c <_ZN15Screen1ViewBaseC1Ev+0x300>)
 8002bc2:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    Levi.setPosition(0, 0, 450, 480);
 8002bc6:	ee18 0a10 	vmov	r0, s16
 8002bca:	f44f 73e1 	mov.w	r3, #450	; 0x1c2
 8002bce:	462a      	mov	r2, r5
 8002bd0:	4629      	mov	r1, r5
 8002bd2:	9700      	str	r7, [sp, #0]
 8002bd4:	f7ff fe43 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setPosition(13, 20, 437, 441);
 8002bd8:	f240 13b9 	movw	r3, #441	; 0x1b9
 8002bdc:	2214      	movs	r2, #20
 8002bde:	4658      	mov	r0, fp
 8002be0:	9300      	str	r3, [sp, #0]
 8002be2:	210d      	movs	r1, #13
 8002be4:	f240 13b5 	movw	r3, #437	; 0x1b5
 8002be8:	f7ff fe39 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002bec:	f04f 33ff 	mov.w	r3, #4294967295
    Levi.add(box2);
 8002bf0:	4659      	mov	r1, fp
 8002bf2:	ee18 0a10 	vmov	r0, s16
 8002bf6:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8002bfa:	f009 fac9 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    speed.setPosition(20, 31, 418, 353);
 8002bfe:	f240 1361 	movw	r3, #353	; 0x161
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	ee1a 0a10 	vmov	r0, s20
 8002c08:	f44f 73d1 	mov.w	r3, #418	; 0x1a2
 8002c0c:	221f      	movs	r2, #31
 8002c0e:	2114      	movs	r1, #20
 8002c10:	f7ff fe25 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c14:	4b0e      	ldr	r3, [pc, #56]	; (8002c50 <_ZN15Screen1ViewBaseC1Ev+0x304>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002c16:	f8c4 a120 	str.w	sl, [r4, #288]	; 0x120
 8002c1a:	681b      	ldr	r3, [r3, #0]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002c1c:	f8a4 5124 	strh.w	r5, [r4, #292]	; 0x124
    Unicode::snprintf(speedBuffer, SPEED_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID2).getText());
 8002c20:	f504 6bec 	add.w	fp, r4, #1888	; 0x760
 8002c24:	b92b      	cbnz	r3, 8002c32 <_ZN15Screen1ViewBaseC1Ev+0x2e6>
 8002c26:	4b0b      	ldr	r3, [pc, #44]	; (8002c54 <_ZN15Screen1ViewBaseC1Ev+0x308>)
 8002c28:	4a0b      	ldr	r2, [pc, #44]	; (8002c58 <_ZN15Screen1ViewBaseC1Ev+0x30c>)
 8002c2a:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c2c:	480b      	ldr	r0, [pc, #44]	; (8002c5c <_ZN15Screen1ViewBaseC1Ev+0x310>)
 8002c2e:	f01e f907 	bl	8020e40 <__assert_func>
 8002c32:	4b0b      	ldr	r3, [pc, #44]	; (8002c60 <_ZN15Screen1ViewBaseC1Ev+0x314>)
 8002c34:	881b      	ldrh	r3, [r3, #0]
 8002c36:	2b01      	cmp	r3, #1
 8002c38:	d81a      	bhi.n	8002c70 <_ZN15Screen1ViewBaseC1Ev+0x324>
 8002c3a:	4b0a      	ldr	r3, [pc, #40]	; (8002c64 <_ZN15Screen1ViewBaseC1Ev+0x318>)
 8002c3c:	4a06      	ldr	r2, [pc, #24]	; (8002c58 <_ZN15Screen1ViewBaseC1Ev+0x30c>)
 8002c3e:	21af      	movs	r1, #175	; 0xaf
 8002c40:	e7f4      	b.n	8002c2c <_ZN15Screen1ViewBaseC1Ev+0x2e0>
 8002c42:	bf00      	nop
 8002c44:	08022f28 	.word	0x08022f28
 8002c48:	08024598 	.word	0x08024598
 8002c4c:	ff071123 	.word	0xff071123
 8002c50:	2000eb80 	.word	0x2000eb80
 8002c54:	08022e11 	.word	0x08022e11
 8002c58:	08022e53 	.word	0x08022e53
 8002c5c:	08022e81 	.word	0x08022e81
 8002c60:	2000eb84 	.word	0x2000eb84
 8002c64:	08022ec8 	.word	0x08022ec8
 8002c68:	080237f4 	.word	0x080237f4
 8002c6c:	08024060 	.word	0x08024060
        return texts->getText(typedTextId);
 8002c70:	4bea      	ldr	r3, [pc, #936]	; (800301c <_ZN15Screen1ViewBaseC1Ev+0x6d0>)
 8002c72:	2101      	movs	r1, #1
 8002c74:	6818      	ldr	r0, [r3, #0]
 8002c76:	f002 fd63 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8002c7a:	4ae9      	ldr	r2, [pc, #932]	; (8003020 <_ZN15Screen1ViewBaseC1Ev+0x6d4>)
 8002c7c:	4603      	mov	r3, r0
 8002c7e:	210a      	movs	r1, #10
 8002c80:	4658      	mov	r0, fp
 8002c82:	f010 fd0d 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    speed.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002c86:	ee1a 0a10 	vmov	r0, s20
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002c8a:	f8c4 b12c 	str.w	fp, [r4, #300]	; 0x12c
 8002c8e:	a910      	add	r1, sp, #64	; 0x40
        : typedTextId(id)
 8002c90:	f8df b394 	ldr.w	fp, [pc, #916]	; 8003028 <_ZN15Screen1ViewBaseC1Ev+0x6dc>
 8002c94:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002c98:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
 8002c9c:	f00b fe0b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    Levi.add(speed);
 8002ca0:	ee1a 1a10 	vmov	r1, s20
 8002ca4:	ee18 0a10 	vmov	r0, s16
 8002ca8:	f009 fa72 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(176, 337);
 8002cac:	f240 1251 	movw	r2, #337	; 0x151
 8002cb0:	ee1a 0a90 	vmov	r0, s21
 8002cb4:	21b0      	movs	r1, #176	; 0xb0
 8002cb6:	f7ff fdc5 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002cba:	2302      	movs	r3, #2
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8002cbc:	ee1a 0a90 	vmov	r0, s21
 8002cc0:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002cc2:	f8c4 a160 	str.w	sl, [r4, #352]	; 0x160
        linespace = space;
 8002cc6:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
 8002cca:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002cce:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002cd2:	f00b fdf0 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    Levi.add(textArea1);
 8002cd6:	ee1a 1a90 	vmov	r1, s21
 8002cda:	ee18 0a10 	vmov	r0, s16
 8002cde:	f009 fa57 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    desni.setPosition(450, 0, 350, 480);
 8002ce2:	ee18 0a90 	vmov	r0, s17
 8002ce6:	9700      	str	r7, [sp, #0]
 8002ce8:	f44f 73af 	mov.w	r3, #350	; 0x15e
    CAN_STATUS.setPosition(19, 99, 312, 93);
 8002cec:	275d      	movs	r7, #93	; 0x5d
    desni.setPosition(450, 0, 350, 480);
 8002cee:	462a      	mov	r2, r5
 8002cf0:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 8002cf4:	f7ff fdb3 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    CAN_STATUS.setPosition(19, 99, 312, 93);
 8002cf8:	4630      	mov	r0, r6
 8002cfa:	9700      	str	r7, [sp, #0]
 8002cfc:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002d00:	2263      	movs	r2, #99	; 0x63
 8002d02:	2113      	movs	r1, #19
 8002d04:	f7ff fdab 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box3.setPosition(0, 0, 312, 93);
 8002d08:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002d0c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8002d0e:	9700      	str	r7, [sp, #0]
 8002d10:	462a      	mov	r2, r5
 8002d12:	4629      	mov	r1, r5
 8002d14:	f7ff fda3 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d18:	f04f 32ff 	mov.w	r2, #4294967295
    CAN_STATUS.add(box3);
 8002d1c:	4630      	mov	r0, r6
 8002d1e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002d20:	f8c4 21ec 	str.w	r2, [r4, #492]	; 0x1ec
 8002d24:	f009 fa34 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ecu.setPosition(15, 36, 58, 51);
 8002d28:	2233      	movs	r2, #51	; 0x33
 8002d2a:	233a      	movs	r3, #58	; 0x3a
 8002d2c:	ee1b 0a10 	vmov	r0, s22
 8002d30:	9200      	str	r2, [sp, #0]
 8002d32:	210f      	movs	r1, #15
 8002d34:	2224      	movs	r2, #36	; 0x24
 8002d36:	f7ff fd92 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002d3a:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8002d3e:	f44f 7748 	mov.w	r7, #800	; 0x320
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002d42:	f8c4 2230 	str.w	r2, [r4, #560]	; 0x230
 8002d46:	4ab7      	ldr	r2, [pc, #732]	; (8003024 <_ZN15Screen1ViewBaseC1Ev+0x6d8>)
 8002d48:	f8c4 2250 	str.w	r2, [r4, #592]	; 0x250
        this->circleCenterY = CWRUtil::toQ5(y);
 8002d4c:	e9c4 7788 	strd	r7, r7, [r4, #544]	; 0x220
    ecu.setPainter(ecuPainter);
 8002d50:	990f      	ldr	r1, [sp, #60]	; 0x3c
        this->circleRadius = CWRUtil::toQ5(r);
 8002d52:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
 8002d56:	ee1b 0a10 	vmov	r0, s22
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8002d5a:	f8c4 5234 	str.w	r5, [r4, #564]	; 0x234
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002d5e:	f8c4 522c 	str.w	r5, [r4, #556]	; 0x22c
 8002d62:	f00b f821 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    CAN_STATUS.add(ecu);
 8002d66:	4630      	mov	r0, r6
 8002d68:	ee1b 1a10 	vmov	r1, s22
 8002d6c:	f009 fa10 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms.setPosition(121, 36, 58, 51);
 8002d70:	2133      	movs	r1, #51	; 0x33
 8002d72:	233a      	movs	r3, #58	; 0x3a
 8002d74:	ee1b 0a90 	vmov	r0, s23
 8002d78:	9100      	str	r1, [sp, #0]
 8002d7a:	2224      	movs	r2, #36	; 0x24
 8002d7c:	2179      	movs	r1, #121	; 0x79
 8002d7e:	f7ff fd6e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d82:	4aa8      	ldr	r2, [pc, #672]	; (8003024 <_ZN15Screen1ViewBaseC1Ev+0x6d8>)
 8002d84:	f8c4 22b4 	str.w	r2, [r4, #692]	; 0x2b4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002d88:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
        this->circleCenterY = CWRUtil::toQ5(y);
 8002d8c:	e9c4 77a1 	strd	r7, r7, [r4, #644]	; 0x284
    bms.setPainter(bmsPainter);
 8002d90:	ee1b 0a90 	vmov	r0, s23
        this->circleRadius = CWRUtil::toQ5(r);
 8002d94:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002d98:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
        this->circleLineWidth = CWRUtil::toQ5(width);
 8002d9c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8002da0:	990e      	ldr	r1, [sp, #56]	; 0x38
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002da2:	f8c4 5290 	str.w	r5, [r4, #656]	; 0x290
 8002da6:	f00a ffff 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    CAN_STATUS.add(bms);
 8002daa:	4630      	mov	r0, r6
 8002dac:	ee1b 1a90 	vmov	r1, s23
 8002db0:	f009 f9ee 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    lvpb.setPosition(246, 36, 58, 51);
 8002db4:	2133      	movs	r1, #51	; 0x33
 8002db6:	233a      	movs	r3, #58	; 0x3a
 8002db8:	ee1c 0a10 	vmov	r0, s24
 8002dbc:	9100      	str	r1, [sp, #0]
 8002dbe:	2224      	movs	r2, #36	; 0x24
 8002dc0:	21f6      	movs	r1, #246	; 0xf6
 8002dc2:	f7ff fd4c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dc6:	4a97      	ldr	r2, [pc, #604]	; (8003024 <_ZN15Screen1ViewBaseC1Ev+0x6d8>)
 8002dc8:	f8c4 2318 	str.w	r2, [r4, #792]	; 0x318
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002dcc:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
        this->circleCenterY = CWRUtil::toQ5(y);
 8002dd0:	e9c4 77ba 	strd	r7, r7, [r4, #744]	; 0x2e8
    lvpb.setPainter(lvpbPainter);
 8002dd4:	ee1c 0a10 	vmov	r0, s24
        this->circleRadius = CWRUtil::toQ5(r);
 8002dd8:	f8c4 72f0 	str.w	r7, [r4, #752]	; 0x2f0
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002ddc:	f8c4 12f8 	str.w	r1, [r4, #760]	; 0x2f8
        this->circleLineWidth = CWRUtil::toQ5(width);
 8002de0:	f8c4 52fc 	str.w	r5, [r4, #764]	; 0x2fc
 8002de4:	990d      	ldr	r1, [sp, #52]	; 0x34
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002de6:	f8c4 52f4 	str.w	r5, [r4, #756]	; 0x2f4
 8002dea:	f00a ffdd 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    CAN_STATUS.add(lvpb);
 8002dee:	4630      	mov	r0, r6
 8002df0:	ee1c 1a10 	vmov	r1, s24
 8002df4:	f009 f9cc 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(95, 0);
 8002df8:	462a      	mov	r2, r5
 8002dfa:	ee1c 0a90 	vmov	r0, s25
 8002dfe:	215f      	movs	r1, #95	; 0x5f
 8002e00:	f7ff fd20 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002e04:	2305      	movs	r3, #5
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
 8002e06:	ee1c 0a90 	vmov	r0, s25
 8002e0a:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002e0c:	f8c4 a34c 	str.w	sl, [r4, #844]	; 0x34c
        linespace = space;
 8002e10:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
 8002e14:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002e18:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002e1c:	f00b fd4b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    CAN_STATUS.add(textArea4);
 8002e20:	4630      	mov	r0, r6
 8002e22:	ee1c 1a90 	vmov	r1, s25
 8002e26:	f009 f9b3 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(0, 0);
 8002e2a:	462a      	mov	r2, r5
 8002e2c:	ee1d 0a10 	vmov	r0, s26
 8002e30:	4629      	mov	r1, r5
 8002e32:	f7ff fd07 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002e36:	2304      	movs	r3, #4
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8002e38:	ee1d 0a10 	vmov	r0, s26
 8002e3c:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002e3e:	f8c4 a388 	str.w	sl, [r4, #904]	; 0x388
        linespace = space;
 8002e42:	f8a4 538c 	strh.w	r5, [r4, #908]	; 0x38c
 8002e46:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002e4a:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002e4e:	f00b fd32 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    CAN_STATUS.add(textArea3);
 8002e52:	4630      	mov	r0, r6
 8002e54:	ee1d 1a10 	vmov	r1, s26
 8002e58:	f009 f99a 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(232, 0);
 8002e5c:	462a      	mov	r2, r5
 8002e5e:	ee1d 0a90 	vmov	r0, s27
 8002e62:	21e8      	movs	r1, #232	; 0xe8
 8002e64:	f7ff fcee 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002e68:	2306      	movs	r3, #6
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 8002e6a:	ee1d 0a90 	vmov	r0, s27
 8002e6e:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002e70:	f8c4 a3c4 	str.w	sl, [r4, #964]	; 0x3c4
        linespace = space;
 8002e74:	f8a4 53c8 	strh.w	r5, [r4, #968]	; 0x3c8
 8002e78:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002e7c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002e80:	f00b fd19 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    CAN_STATUS.add(textArea5);
 8002e84:	4630      	mov	r0, r6
 8002e86:	ee1d 1a90 	vmov	r1, s27
 8002e8a:	f009 f981 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    desni.add(CAN_STATUS);
 8002e8e:	4631      	mov	r1, r6
 8002e90:	ee18 0a90 	vmov	r0, s17
    VEHICLE_STATE.setPosition(19, 20, 312, 65);
 8002e94:	2641      	movs	r6, #65	; 0x41
    desni.add(CAN_STATUS);
 8002e96:	f009 f97b 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    VEHICLE_STATE.setPosition(19, 20, 312, 65);
 8002e9a:	ee19 0a10 	vmov	r0, s18
 8002e9e:	9600      	str	r6, [sp, #0]
 8002ea0:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002ea4:	2214      	movs	r2, #20
 8002ea6:	2113      	movs	r1, #19
 8002ea8:	f7ff fcd9 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box5.setPosition(0, 0, 312, 65);
 8002eac:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002eb0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8002eb2:	9600      	str	r6, [sp, #0]
 8002eb4:	462a      	mov	r2, r5
 8002eb6:	4629      	mov	r1, r5
 8002eb8:	f7ff fcd1 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ebc:	f04f 32ff 	mov.w	r2, #4294967295
    VEHICLE_STATE.add(box5);
 8002ec0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002ec2:	f8c4 2424 	str.w	r2, [r4, #1060]	; 0x424
 8002ec6:	ee19 0a10 	vmov	r0, s18
 8002eca:	f009 f961 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6.setXY(0, 11);
 8002ece:	220b      	movs	r2, #11
 8002ed0:	ee1e 0a10 	vmov	r0, s28
 8002ed4:	4629      	mov	r1, r5
 8002ed6:	f7ff fcb5 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002eda:	2307      	movs	r3, #7
    textArea6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
 8002edc:	ee1e 0a10 	vmov	r0, s28
 8002ee0:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002ee2:	f8c4 a458 	str.w	sl, [r4, #1112]	; 0x458
        linespace = space;
 8002ee6:	f8a4 545c 	strh.w	r5, [r4, #1116]	; 0x45c
 8002eea:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002eee:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002ef2:	f00b fce0 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    VEHICLE_STATE.add(textArea6);
 8002ef6:	ee1e 1a10 	vmov	r1, s28
 8002efa:	ee19 0a10 	vmov	r0, s18
 8002efe:	f009 f947 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    vehicle_state.setPosition(103, 11, 201, 36);
 8002f02:	2324      	movs	r3, #36	; 0x24
 8002f04:	220b      	movs	r2, #11
 8002f06:	ee1e 0a90 	vmov	r0, s29
 8002f0a:	9300      	str	r3, [sp, #0]
 8002f0c:	2167      	movs	r1, #103	; 0x67
 8002f0e:	23c9      	movs	r3, #201	; 0xc9
 8002f10:	f7ff fca5 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    vehicle_state.setWildcard(vehicle_stateBuffer);
 8002f14:	f204 7374 	addw	r3, r4, #1908	; 0x774
 8002f18:	2608      	movs	r6, #8
 8002f1a:	f8c4 34a0 	str.w	r3, [r4, #1184]	; 0x4a0
    vehicle_state.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 8002f1e:	ee1e 0a90 	vmov	r0, s29
 8002f22:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002f24:	f8c4 a494 	str.w	sl, [r4, #1172]	; 0x494
        linespace = space;
 8002f28:	f8a4 5498 	strh.w	r5, [r4, #1176]	; 0x498
    vehicle_stateBuffer[0] = 0;
 8002f2c:	f8a4 5774 	strh.w	r5, [r4, #1908]	; 0x774
 8002f30:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8002f34:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
    vehicle_state.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 8002f38:	f00b fcbd 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    VEHICLE_STATE.add(vehicle_state);
 8002f3c:	ee1e 1a90 	vmov	r1, s29
 8002f40:	ee19 0a10 	vmov	r0, s18
 8002f44:	f009 f924 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    HV.setPosition(19, 213, 312, 249);
 8002f48:	27f9      	movs	r7, #249	; 0xf9
    desni.add(VEHICLE_STATE);
 8002f4a:	ee19 1a10 	vmov	r1, s18
 8002f4e:	ee18 0a90 	vmov	r0, s17
 8002f52:	f009 f91d 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    HV.setPosition(19, 213, 312, 249);
 8002f56:	9700      	str	r7, [sp, #0]
 8002f58:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002f5c:	22d5      	movs	r2, #213	; 0xd5
 8002f5e:	2113      	movs	r1, #19
 8002f60:	4648      	mov	r0, r9
 8002f62:	f7ff fc7c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box4.setPosition(0, 0, 312, 249);
 8002f66:	f44f 739c 	mov.w	r3, #312	; 0x138
 8002f6a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8002f6c:	9700      	str	r7, [sp, #0]
 8002f6e:	462a      	mov	r2, r5
 8002f70:	4629      	mov	r1, r5
 8002f72:	f7ff fc74 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f76:	f04f 32ff 	mov.w	r2, #4294967295
    HV.add(box4);
 8002f7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002f7c:	f8c4 24f8 	str.w	r2, [r4, #1272]	; 0x4f8
 8002f80:	4648      	mov	r0, r9
 8002f82:	f009 f905 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(128, 0);
 8002f86:	462a      	mov	r2, r5
 8002f88:	ee1f 0a10 	vmov	r0, s30
 8002f8c:	2180      	movs	r1, #128	; 0x80
 8002f8e:	f7ff fc59 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002f92:	2303      	movs	r3, #3
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 8002f94:	ee1f 0a10 	vmov	r0, s30
 8002f98:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002f9a:	f8c4 a52c 	str.w	sl, [r4, #1324]	; 0x52c
        linespace = space;
 8002f9e:	f8a4 5530 	strh.w	r5, [r4, #1328]	; 0x530
 8002fa2:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002fa6:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002faa:	f00b fc84 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea2);
 8002fae:	ee1f 1a10 	vmov	r1, s30
 8002fb2:	4648      	mov	r0, r9
 8002fb4:	f009 f8ec 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7.setXY(8, 62);
 8002fb8:	223e      	movs	r2, #62	; 0x3e
 8002fba:	4631      	mov	r1, r6
 8002fbc:	ee1f 0a90 	vmov	r0, s31
 8002fc0:	f7ff fc40 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002fc4:	2309      	movs	r3, #9
    textArea7.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
 8002fc6:	ee1f 0a90 	vmov	r0, s31
 8002fca:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8002fcc:	f8c4 a568 	str.w	sl, [r4, #1384]	; 0x568
        linespace = space;
 8002fd0:	f8a4 556c 	strh.w	r5, [r4, #1388]	; 0x56c
 8002fd4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8002fd8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8002fdc:	f00b fc6b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea7);
 8002fe0:	ee1f 1a90 	vmov	r1, s31
 8002fe4:	4648      	mov	r0, r9
 8002fe6:	f009 f8d3 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea8.setXY(8, 124);
 8002fea:	227c      	movs	r2, #124	; 0x7c
 8002fec:	4631      	mov	r1, r6
 8002fee:	9802      	ldr	r0, [sp, #8]
 8002ff0:	f7ff fc28 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8002ff4:	270a      	movs	r7, #10
    textArea8.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));
 8002ff6:	9802      	ldr	r0, [sp, #8]
        this->color = color;
 8002ff8:	f8c4 a5a4 	str.w	sl, [r4, #1444]	; 0x5a4
 8002ffc:	a910      	add	r1, sp, #64	; 0x40
        linespace = space;
 8002ffe:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
 8003002:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8003006:	f8ad 7044 	strh.w	r7, [sp, #68]	; 0x44
 800300a:	f00b fc54 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea8);
 800300e:	9902      	ldr	r1, [sp, #8]
 8003010:	4648      	mov	r0, r9
 8003012:	f009 f8bd 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea9.setXY(8, 187);
 8003016:	22bb      	movs	r2, #187	; 0xbb
 8003018:	4631      	mov	r1, r6
 800301a:	e007      	b.n	800302c <_ZN15Screen1ViewBaseC1Ev+0x6e0>
 800301c:	2000eb8c 	.word	0x2000eb8c
 8003020:	08022f1a 	.word	0x08022f1a
 8003024:	ff777777 	.word	0xff777777
 8003028:	08022710 	.word	0x08022710
 800302c:	4640      	mov	r0, r8
 800302e:	f7ff fc09 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8003032:	230b      	movs	r3, #11
    textArea9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 8003034:	4640      	mov	r0, r8
 8003036:	a910      	add	r1, sp, #64	; 0x40
        this->color = color;
 8003038:	f8c4 a5e0 	str.w	sl, [r4, #1504]	; 0x5e0
        linespace = space;
 800303c:	f8a4 55e4 	strh.w	r5, [r4, #1508]	; 0x5e4
 8003040:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8003044:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
    voltage.setPosition(205, 62, 43, 47);
 8003048:	262f      	movs	r6, #47	; 0x2f
    textArea9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 800304a:	f00b fc34 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea9);
 800304e:	4641      	mov	r1, r8
 8003050:	4648      	mov	r0, r9
 8003052:	f009 f89d 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage.setPosition(205, 62, 43, 47);
 8003056:	232b      	movs	r3, #43	; 0x2b
 8003058:	223e      	movs	r2, #62	; 0x3e
 800305a:	9803      	ldr	r0, [sp, #12]
 800305c:	9600      	str	r6, [sp, #0]
 800305e:	21cd      	movs	r1, #205	; 0xcd
 8003060:	f7ff fbfd 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003064:	4a7b      	ldr	r2, [pc, #492]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x908>)
        this->color = color;
 8003066:	f8c4 a61c 	str.w	sl, [r4, #1564]	; 0x61c
 800306a:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 800306c:	f8a4 5620 	strh.w	r5, [r4, #1568]	; 0x620
    Unicode::snprintf(voltageBuffer, VOLTAGE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID14).getText());
 8003070:	f504 68f1 	add.w	r8, r4, #1928	; 0x788
 8003074:	2b00      	cmp	r3, #0
 8003076:	f43f add6 	beq.w	8002c26 <_ZN15Screen1ViewBaseC1Ev+0x2da>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800307a:	4977      	ldr	r1, [pc, #476]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x90c>)
 800307c:	880b      	ldrh	r3, [r1, #0]
 800307e:	2b0d      	cmp	r3, #13
 8003080:	f67f addb 	bls.w	8002c3a <_ZN15Screen1ViewBaseC1Ev+0x2ee>
        return texts->getText(typedTextId);
 8003084:	4b75      	ldr	r3, [pc, #468]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x910>)
 8003086:	210d      	movs	r1, #13
 8003088:	6818      	ldr	r0, [r3, #0]
 800308a:	f002 fb59 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800308e:	4a74      	ldr	r2, [pc, #464]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x914>)
 8003090:	4603      	mov	r3, r0
 8003092:	4639      	mov	r1, r7
 8003094:	4640      	mov	r0, r8
 8003096:	f010 fb03 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));
 800309a:	a810      	add	r0, sp, #64	; 0x40
        : typedTextId(id)
 800309c:	230c      	movs	r3, #12
 800309e:	4601      	mov	r1, r0
 80030a0:	f8c4 8628 	str.w	r8, [r4, #1576]	; 0x628
 80030a4:	9803      	ldr	r0, [sp, #12]
 80030a6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80030aa:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80030ae:	f00b fc02 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(voltage);
 80030b2:	9903      	ldr	r1, [sp, #12]
 80030b4:	4648      	mov	r0, r9
 80030b6:	f009 f86b 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp.setPosition(205, 124, 43, 47);
 80030ba:	232b      	movs	r3, #43	; 0x2b
 80030bc:	227c      	movs	r2, #124	; 0x7c
 80030be:	9804      	ldr	r0, [sp, #16]
 80030c0:	9600      	str	r6, [sp, #0]
 80030c2:	21cd      	movs	r1, #205	; 0xcd
 80030c4:	f7ff fbcb 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80030c8:	4a62      	ldr	r2, [pc, #392]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x908>)
        this->color = color;
 80030ca:	f8c4 a65c 	str.w	sl, [r4, #1628]	; 0x65c
 80030ce:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 80030d0:	f8a4 5660 	strh.w	r5, [r4, #1632]	; 0x660
    Unicode::snprintf(tempBuffer, TEMP_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID16).getText());
 80030d4:	f204 789c 	addw	r8, r4, #1948	; 0x79c
 80030d8:	2b00      	cmp	r3, #0
 80030da:	f43f ada4 	beq.w	8002c26 <_ZN15Screen1ViewBaseC1Ev+0x2da>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80030de:	495e      	ldr	r1, [pc, #376]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x90c>)
 80030e0:	880b      	ldrh	r3, [r1, #0]
 80030e2:	2b0f      	cmp	r3, #15
 80030e4:	f67f ada9 	bls.w	8002c3a <_ZN15Screen1ViewBaseC1Ev+0x2ee>
        return texts->getText(typedTextId);
 80030e8:	4b5c      	ldr	r3, [pc, #368]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x910>)
 80030ea:	210f      	movs	r1, #15
 80030ec:	6818      	ldr	r0, [r3, #0]
 80030ee:	f002 fb27 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80030f2:	4a5b      	ldr	r2, [pc, #364]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x914>)
 80030f4:	4603      	mov	r3, r0
 80030f6:	4639      	mov	r1, r7
 80030f8:	4640      	mov	r0, r8
 80030fa:	f010 fad1 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    temp.setTypedText(touchgfx::TypedText(T_SINGLEUSEID15));
 80030fe:	a810      	add	r0, sp, #64	; 0x40
        : typedTextId(id)
 8003100:	230e      	movs	r3, #14
 8003102:	4601      	mov	r1, r0
 8003104:	f8c4 8668 	str.w	r8, [r4, #1640]	; 0x668
 8003108:	9804      	ldr	r0, [sp, #16]
 800310a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800310e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8003112:	f00b fbd0 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(temp);
 8003116:	9904      	ldr	r1, [sp, #16]
 8003118:	4648      	mov	r0, r9
 800311a:	f009 f839 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    soc.setPosition(205, 187, 43, 47);
 800311e:	232b      	movs	r3, #43	; 0x2b
 8003120:	22bb      	movs	r2, #187	; 0xbb
 8003122:	9805      	ldr	r0, [sp, #20]
 8003124:	9600      	str	r6, [sp, #0]
 8003126:	21cd      	movs	r1, #205	; 0xcd
 8003128:	f7ff fb99 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800312c:	4a49      	ldr	r2, [pc, #292]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x908>)
        this->color = color;
 800312e:	f8c4 a69c 	str.w	sl, [r4, #1692]	; 0x69c
 8003132:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 8003134:	f8a4 56a0 	strh.w	r5, [r4, #1696]	; 0x6a0
    Unicode::snprintf(socBuffer, SOC_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID18).getText());
 8003138:	f504 68f6 	add.w	r8, r4, #1968	; 0x7b0
 800313c:	2b00      	cmp	r3, #0
 800313e:	f43f ad72 	beq.w	8002c26 <_ZN15Screen1ViewBaseC1Ev+0x2da>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003142:	4945      	ldr	r1, [pc, #276]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x90c>)
 8003144:	880b      	ldrh	r3, [r1, #0]
 8003146:	2b11      	cmp	r3, #17
 8003148:	f67f ad77 	bls.w	8002c3a <_ZN15Screen1ViewBaseC1Ev+0x2ee>
        return texts->getText(typedTextId);
 800314c:	4b43      	ldr	r3, [pc, #268]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x910>)
 800314e:	2111      	movs	r1, #17
 8003150:	6818      	ldr	r0, [r3, #0]
 8003152:	f002 faf5 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8003156:	4a42      	ldr	r2, [pc, #264]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x914>)
 8003158:	4603      	mov	r3, r0
 800315a:	4639      	mov	r1, r7
 800315c:	4640      	mov	r0, r8
 800315e:	f010 fa9f 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003162:	2310      	movs	r3, #16
    soc.setTypedText(touchgfx::TypedText(T_SINGLEUSEID17));
 8003164:	9805      	ldr	r0, [sp, #20]
 8003166:	f8c4 86a8 	str.w	r8, [r4, #1704]	; 0x6a8
 800316a:	a910      	add	r1, sp, #64	; 0x40
 800316c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8003170:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8003174:	f00b fb9f 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(soc);
 8003178:	9905      	ldr	r1, [sp, #20]
 800317a:	4648      	mov	r0, r9
 800317c:	f009 f808 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea10.setPosition(268, 62, 28, 47);
 8003180:	223e      	movs	r2, #62	; 0x3e
 8003182:	9806      	ldr	r0, [sp, #24]
 8003184:	9600      	str	r6, [sp, #0]
 8003186:	231c      	movs	r3, #28
 8003188:	f44f 7186 	mov.w	r1, #268	; 0x10c
 800318c:	f7ff fb67 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003190:	2312      	movs	r3, #18
    textArea10.setTypedText(touchgfx::TypedText(T_SINGLEUSEID19));
 8003192:	9806      	ldr	r0, [sp, #24]
        this->color = color;
 8003194:	f8c4 a6dc 	str.w	sl, [r4, #1756]	; 0x6dc
 8003198:	a910      	add	r1, sp, #64	; 0x40
        linespace = space;
 800319a:	f8a4 56e0 	strh.w	r5, [r4, #1760]	; 0x6e0
 800319e:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80031a2:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80031a6:	f00b fb86 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea10);
 80031aa:	9906      	ldr	r1, [sp, #24]
 80031ac:	4648      	mov	r0, r9
 80031ae:	f008 ffef 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea10_1.setPosition(268, 124, 28, 47);
 80031b2:	227c      	movs	r2, #124	; 0x7c
 80031b4:	9807      	ldr	r0, [sp, #28]
 80031b6:	9600      	str	r6, [sp, #0]
 80031b8:	231c      	movs	r3, #28
 80031ba:	f44f 7186 	mov.w	r1, #268	; 0x10c
 80031be:	f7ff fb4e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 80031c2:	2313      	movs	r3, #19
    textArea10_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID20));
 80031c4:	9807      	ldr	r0, [sp, #28]
        this->color = color;
 80031c6:	f8c4 a718 	str.w	sl, [r4, #1816]	; 0x718
 80031ca:	a910      	add	r1, sp, #64	; 0x40
        linespace = space;
 80031cc:	f8a4 571c 	strh.w	r5, [r4, #1820]	; 0x71c
 80031d0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80031d4:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80031d8:	f00b fb6d 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea10_1);
 80031dc:	9907      	ldr	r1, [sp, #28]
 80031de:	4648      	mov	r0, r9
 80031e0:	f008 ffd6 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea10_2.setPosition(261, 187, 35, 47);
 80031e4:	22bb      	movs	r2, #187	; 0xbb
 80031e6:	9808      	ldr	r0, [sp, #32]
 80031e8:	9600      	str	r6, [sp, #0]
 80031ea:	2323      	movs	r3, #35	; 0x23
 80031ec:	f240 1105 	movw	r1, #261	; 0x105
 80031f0:	f7ff fb35 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 80031f4:	2314      	movs	r3, #20
    textArea10_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID21));
 80031f6:	9808      	ldr	r0, [sp, #32]
        this->color = color;
 80031f8:	f8c4 a754 	str.w	sl, [r4, #1876]	; 0x754
 80031fc:	a910      	add	r1, sp, #64	; 0x40
        linespace = space;
 80031fe:	f8a4 5758 	strh.w	r5, [r4, #1880]	; 0x758
 8003202:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8003206:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 800320a:	f00b fb54 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    HV.add(textArea10_2);
 800320e:	9908      	ldr	r1, [sp, #32]
 8003210:	4648      	mov	r0, r9
 8003212:	f008 ffbd 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    desni.add(HV);
 8003216:	ee18 0a90 	vmov	r0, s17
 800321a:	4649      	mov	r1, r9
 800321c:	f008 ffb8 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003220:	1d20      	adds	r0, r4, #4
 8003222:	ee19 1a90 	vmov	r1, s19
 8003226:	9002      	str	r0, [sp, #8]
 8003228:	f008 ffb2 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800322c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800322e:	9802      	ldr	r0, [sp, #8]
 8003230:	f008 ffae 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003234:	ee18 1a10 	vmov	r1, s16
 8003238:	9802      	ldr	r0, [sp, #8]
 800323a:	f008 ffa9 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800323e:	9802      	ldr	r0, [sp, #8]
 8003240:	ee18 1a90 	vmov	r1, s17
 8003244:	f008 ffa4 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003248:	4620      	mov	r0, r4
 800324a:	b013      	add	sp, #76	; 0x4c
 800324c:	ecbd 8b10 	vpop	{d8-d15}
 8003250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003254:	2000eb80 	.word	0x2000eb80
 8003258:	2000eb84 	.word	0x2000eb84
 800325c:	2000eb8c 	.word	0x2000eb8c
 8003260:	08022f1a 	.word	0x08022f1a

08003264 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8003264:	4770      	bx	lr

08003266 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 8003266:	4770      	bx	lr

08003268 <_ZN15Screen2ViewBaseD0Ev>:
 8003268:	b510      	push	{r4, lr}
 800326a:	2198      	movs	r1, #152	; 0x98
 800326c:	4604      	mov	r4, r0
 800326e:	f01d fdb8 	bl	8020de2 <_ZdlPvj>
 8003272:	4620      	mov	r0, r4
 8003274:	bd10      	pop	{r4, pc}

08003276 <_ZN15Screen2ViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void Screen2ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
 8003276:	2901      	cmp	r1, #1
{
 8003278:	b508      	push	{r3, lr}
    if(1 == key)
 800327a:	d105      	bne.n	8003288 <_ZN15Screen2ViewBase14handleKeyEventEh+0x12>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800327c:	f00d fa0e 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 1 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
}
 8003280:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen3ScreenNoTransition();
 8003284:	f7fe bffc 	b.w	8002280 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
}
 8003288:	bd08      	pop	{r3, pc}

0800328a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 800328a:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 800328c:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 800328e:	4604      	mov	r4, r0
        setWidth(width);
 8003290:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 8003292:	4615      	mov	r5, r2
        setWidth(width);
 8003294:	4798      	blx	r3
        setHeight(height);
 8003296:	6823      	ldr	r3, [r4, #0]
 8003298:	4629      	mov	r1, r5
 800329a:	4620      	mov	r0, r4
 800329c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800329e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80032a2:	4718      	bx	r3

080032a4 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 80032a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80032a6:	4604      	mov	r4, r0
 80032a8:	4625      	mov	r5, r4
 80032aa:	f00e fd5f 	bl	8011d6c <_ZN8touchgfx6ScreenC1Ev>
 80032ae:	2600      	movs	r6, #0
 80032b0:	4b1a      	ldr	r3, [pc, #104]	; (800331c <_ZN15Screen2ViewBaseC1Ev+0x78>)
 80032b2:	63e6      	str	r6, [r4, #60]	; 0x3c
 80032b4:	f845 3b40 	str.w	r3, [r5], #64
 80032b8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80032bc:	4628      	mov	r0, r5
 80032be:	f7ff fae1 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80032c2:	4638      	mov	r0, r7
 80032c4:	f7ff fade 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
        setX(x);
 80032c8:	4631      	mov	r1, r6
 80032ca:	4628      	mov	r0, r5
 80032cc:	f7ff fa64 	bl	8002798 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 80032d0:	4631      	mov	r1, r6
 80032d2:	4628      	mov	r0, r5
 80032d4:	f7ff fa62 	bl	800279c <_ZN8touchgfx8Drawable4setYEs>
        setWidthHeight(width, height);
 80032d8:	4628      	mov	r0, r5
 80032da:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80032de:	f44f 7148 	mov.w	r1, #800	; 0x320
 80032e2:	f7ff ffd2 	bl	800328a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80032e6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80032ea:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80032ee:	66a3      	str	r3, [r4, #104]	; 0x68
 80032f0:	4638      	mov	r0, r7
        rect.x = x;
 80032f2:	6726      	str	r6, [r4, #112]	; 0x70
        setWidthHeight(width, height);
 80032f4:	f44f 7148 	mov.w	r1, #800	; 0x320
 80032f8:	f7ff ffc7 	bl	800328a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80032fc:	4b08      	ldr	r3, [pc, #32]	; (8003320 <_ZN15Screen2ViewBaseC1Ev+0x7c>)
 80032fe:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8003302:	1d20      	adds	r0, r4, #4
 8003304:	4629      	mov	r1, r5
 8003306:	9001      	str	r0, [sp, #4]
 8003308:	f008 ff42 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800330c:	9801      	ldr	r0, [sp, #4]
 800330e:	4639      	mov	r1, r7
 8003310:	f008 ff3e 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003314:	4620      	mov	r0, r4
 8003316:	b003      	add	sp, #12
 8003318:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800331a:	bf00      	nop
 800331c:	08022f5c 	.word	0x08022f5c
 8003320:	ff071123 	.word	0xff071123

08003324 <_ZN15Screen3ViewBaseD1Ev>:

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase() {}
 8003324:	4770      	bx	lr

08003326 <_ZN15Screen3ViewBase11setupScreenEv>:
}

void Screen3ViewBase::setupScreen()
{

}
 8003326:	4770      	bx	lr

08003328 <_ZN15Screen3ViewBaseD0Ev>:
 8003328:	b510      	push	{r4, lr}
 800332a:	f644 2104 	movw	r1, #18948	; 0x4a04
 800332e:	4604      	mov	r4, r0
 8003330:	f01d fd57 	bl	8020de2 <_ZdlPvj>
 8003334:	4620      	mov	r0, r4
 8003336:	bd10      	pop	{r4, pc}

08003338 <_ZN15Screen3ViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void Screen3ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
 8003338:	2901      	cmp	r1, #1
{
 800333a:	b508      	push	{r3, lr}
    if(1 == key)
 800333c:	d105      	bne.n	800334a <_ZN15Screen3ViewBase14handleKeyEventEh+0x12>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800333e:	f00d f9ad 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}
 8003342:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8003346:	f7fe bf7b 	b.w	8002240 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 800334a:	bd08      	pop	{r3, pc}

0800334c <_ZN8touchgfx9ContainerC1Ev>:
    Container()
 800334c:	b510      	push	{r4, lr}
 800334e:	4604      	mov	r4, r0
          firstChild(0)
 8003350:	f7ff fa66 	bl	8002820 <_ZN8touchgfx8DrawableC1Ev>
 8003354:	4b02      	ldr	r3, [pc, #8]	; (8003360 <_ZN8touchgfx9ContainerC1Ev+0x14>)
 8003356:	6023      	str	r3, [r4, #0]
 8003358:	2300      	movs	r3, #0
 800335a:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 800335c:	4620      	mov	r0, r4
 800335e:	bd10      	pop	{r4, pc}
 8003360:	080237f4 	.word	0x080237f4

08003364 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 8003364:	b510      	push	{r4, lr}
 8003366:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8003368:	f7ff fa8c 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800336c:	4b03      	ldr	r3, [pc, #12]	; (800337c <_ZN8touchgfx13BoxWithBorderC1Ev+0x18>)
 800336e:	6023      	str	r3, [r4, #0]
 8003370:	2300      	movs	r3, #0
 8003372:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003374:	8623      	strh	r3, [r4, #48]	; 0x30
    {
    }
 8003376:	4620      	mov	r0, r4
 8003378:	bd10      	pop	{r4, pc}
 800337a:	bf00      	nop
 800337c:	08024640 	.word	0x08024640

08003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003380:	b510      	push	{r4, lr}
 8003382:	4604      	mov	r4, r0
        : TextArea(), wildcard(0)
 8003384:	f7ff fa92 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003388:	4b02      	ldr	r3, [pc, #8]	; (8003394 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800338a:	6023      	str	r3, [r4, #0]
 800338c:	2300      	movs	r3, #0
 800338e:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003390:	4620      	mov	r0, r4
 8003392:	bd10      	pop	{r4, pc}
 8003394:	08024598 	.word	0x08024598

08003398 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003398:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidth == widthQ5)
 800339a:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800339c:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5(int(value * Rasterizer::POLY_BASE_SIZE));
 80033a0:	ea4f 1241 	mov.w	r2, r1, lsl #5
 80033a4:	d004      	beq.n	80033b0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 80033a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidth = widthQ5;
 80033aa:	6402      	str	r2, [r0, #64]	; 0x40

        updateCachedShape();
 80033ac:	f00a bed2 	b.w	800e154 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 80033b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80033b4:	4770      	bx	lr
	...

080033b8 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase()
 80033b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033bc:	ed2d 8b10 	vpush	{d8-d15}
 80033c0:	4604      	mov	r4, r0
 80033c2:	b0e5      	sub	sp, #404	; 0x194
 80033c4:	f00e fcd2 	bl	8011d6c <_ZN8touchgfx6ScreenC1Ev>
 80033c8:	4622      	mov	r2, r4
 80033ca:	2500      	movs	r5, #0
 80033cc:	4bdd      	ldr	r3, [pc, #884]	; (8003744 <_ZN15Screen3ViewBaseC1Ev+0x38c>)
 80033ce:	63e5      	str	r5, [r4, #60]	; 0x3c
 80033d0:	f842 3b40 	str.w	r3, [r2], #64
 80033d4:	4610      	mov	r0, r2
 80033d6:	9244      	str	r2, [sp, #272]	; 0x110
 80033d8:	f7ff fa54 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80033dc:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80033e0:	4618      	mov	r0, r3
 80033e2:	9345      	str	r3, [sp, #276]	; 0x114
 80033e4:	f7ff fa4e 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80033e8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80033ec:	4618      	mov	r0, r3
 80033ee:	9346      	str	r3, [sp, #280]	; 0x118
 80033f0:	f7ff ffb8 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80033f4:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 80033f8:	4618      	mov	r0, r3
 80033fa:	931a      	str	r3, [sp, #104]	; 0x68
 80033fc:	f7ff fa56 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003400:	f504 7384 	add.w	r3, r4, #264	; 0x108
 8003404:	4618      	mov	r0, r3
 8003406:	9347      	str	r3, [sp, #284]	; 0x11c
 8003408:	f7ff ffac 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800340c:	f504 739e 	add.w	r3, r4, #316	; 0x13c
 8003410:	4618      	mov	r0, r3
 8003412:	931b      	str	r3, [sp, #108]	; 0x6c
 8003414:	f7ff fa4a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003418:	f504 73bc 	add.w	r3, r4, #376	; 0x178
 800341c:	4618      	mov	r0, r3
 800341e:	931c      	str	r3, [sp, #112]	; 0x70
 8003420:	f7ff fa44 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003424:	f504 73da 	add.w	r3, r4, #436	; 0x1b4
 8003428:	4618      	mov	r0, r3
 800342a:	931d      	str	r3, [sp, #116]	; 0x74
 800342c:	f7ff ffa8 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003430:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8003434:	4618      	mov	r0, r3
 8003436:	931e      	str	r3, [sp, #120]	; 0x78
 8003438:	f7ff fa38 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800343c:	f504 730c 	add.w	r3, r4, #560	; 0x230
 8003440:	4618      	mov	r0, r3
 8003442:	931f      	str	r3, [sp, #124]	; 0x7c
 8003444:	f7ff ff9c 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003448:	f504 731c 	add.w	r3, r4, #624	; 0x270
 800344c:	4618      	mov	r0, r3
 800344e:	9320      	str	r3, [sp, #128]	; 0x80
 8003450:	f7ff fa2c 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003454:	f504 732b 	add.w	r3, r4, #684	; 0x2ac
 8003458:	4618      	mov	r0, r3
 800345a:	ee08 3a10 	vmov	s16, r3
 800345e:	f7ff ff75 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003462:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
 8003466:	4618      	mov	r0, r3
 8003468:	9348      	str	r3, [sp, #288]	; 0x120
 800346a:	f7ff ff7b 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800346e:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8003472:	4618      	mov	r0, r3
 8003474:	9349      	str	r3, [sp, #292]	; 0x124
 8003476:	f7ff ff75 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800347a:	f504 7350 	add.w	r3, r4, #832	; 0x340
 800347e:	4618      	mov	r0, r3
 8003480:	934a      	str	r3, [sp, #296]	; 0x128
 8003482:	f7ff ff6f 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003486:	f504 735d 	add.w	r3, r4, #884	; 0x374
 800348a:	4618      	mov	r0, r3
 800348c:	934b      	str	r3, [sp, #300]	; 0x12c
 800348e:	f7ff ff69 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003492:	f504 736a 	add.w	r3, r4, #936	; 0x3a8
 8003496:	4618      	mov	r0, r3
 8003498:	f504 7877 	add.w	r8, r4, #988	; 0x3dc
 800349c:	934c      	str	r3, [sp, #304]	; 0x130
 800349e:	f7ff ff61 	bl	8003364 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80034a2:	4640      	mov	r0, r8
 80034a4:	f7ff ff52 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 80034a8:	f504 6381 	add.w	r3, r4, #1032	; 0x408
 80034ac:	4618      	mov	r0, r3
 80034ae:	934d      	str	r3, [sp, #308]	; 0x134
 80034b0:	f7ff f9e8 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80034b4:	f204 4334 	addw	r3, r4, #1076	; 0x434
 80034b8:	4618      	mov	r0, r3
 80034ba:	9321      	str	r3, [sp, #132]	; 0x84
 80034bc:	f7ff f9f6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80034c0:	f504 638e 	add.w	r3, r4, #1136	; 0x470
 80034c4:	4618      	mov	r0, r3
 80034c6:	9322      	str	r3, [sp, #136]	; 0x88
 80034c8:	f00a f8ec 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80034cc:	f204 43bc 	addw	r3, r4, #1212	; 0x4bc
 80034d0:	4618      	mov	r0, r3
 80034d2:	4e9d      	ldr	r6, [pc, #628]	; (8003748 <_ZN15Screen3ViewBaseC1Ev+0x390>)
 80034d4:	9359      	str	r3, [sp, #356]	; 0x164
 80034d6:	f7ff fa05 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80034da:	f204 43d4 	addw	r3, r4, #1236	; 0x4d4
 80034de:	f8c4 64bc 	str.w	r6, [r4, #1212]	; 0x4bc
 80034e2:	4618      	mov	r0, r3
        painterColor = color;
 80034e4:	f8c4 54d0 	str.w	r5, [r4, #1232]	; 0x4d0
 80034e8:	9310      	str	r3, [sp, #64]	; 0x40
 80034ea:	f7ff ff49 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80034ee:	f204 5314 	addw	r3, r4, #1300	; 0x514
 80034f2:	4618      	mov	r0, r3
 80034f4:	9323      	str	r3, [sp, #140]	; 0x8c
 80034f6:	f7ff f9d9 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80034fa:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80034fe:	4618      	mov	r0, r3
 8003500:	9324      	str	r3, [sp, #144]	; 0x90
 8003502:	f7ff ff3d 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003506:	f504 63b2 	add.w	r3, r4, #1424	; 0x590
 800350a:	4618      	mov	r0, r3
 800350c:	f204 5acc 	addw	sl, r4, #1484	; 0x5cc
 8003510:	9325      	str	r3, [sp, #148]	; 0x94
 8003512:	f7ff f9cb 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003516:	4650      	mov	r0, sl
 8003518:	f7ff ff18 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 800351c:	f504 63bf 	add.w	r3, r4, #1528	; 0x5f8
 8003520:	4618      	mov	r0, r3
 8003522:	934e      	str	r3, [sp, #312]	; 0x138
 8003524:	f7ff f9ae 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8003528:	f204 6324 	addw	r3, r4, #1572	; 0x624
 800352c:	4618      	mov	r0, r3
 800352e:	9326      	str	r3, [sp, #152]	; 0x98
 8003530:	f00a f8b8 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8003534:	f504 63ce 	add.w	r3, r4, #1648	; 0x670
 8003538:	4618      	mov	r0, r3
 800353a:	9358      	str	r3, [sp, #352]	; 0x160
 800353c:	f7ff f9d2 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003540:	f504 63d1 	add.w	r3, r4, #1672	; 0x688
 8003544:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
 8003548:	4618      	mov	r0, r3
        painterColor = color;
 800354a:	f8c4 5684 	str.w	r5, [r4, #1668]	; 0x684
 800354e:	9327      	str	r3, [sp, #156]	; 0x9c
 8003550:	f7ff f9ac 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003554:	f204 63c4 	addw	r3, r4, #1732	; 0x6c4
 8003558:	4618      	mov	r0, r3
 800355a:	9311      	str	r3, [sp, #68]	; 0x44
 800355c:	f7ff ff10 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003560:	f204 7304 	addw	r3, r4, #1796	; 0x704
 8003564:	4618      	mov	r0, r3
 8003566:	9328      	str	r3, [sp, #160]	; 0xa0
 8003568:	f7ff ff0a 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800356c:	f204 7344 	addw	r3, r4, #1860	; 0x744
 8003570:	4618      	mov	r0, r3
 8003572:	9329      	str	r3, [sp, #164]	; 0xa4
 8003574:	f7ff f99a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003578:	f504 63f0 	add.w	r3, r4, #1920	; 0x780
 800357c:	4618      	mov	r0, r3
 800357e:	932a      	str	r3, [sp, #168]	; 0xa8
 8003580:	f7ff f994 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003584:	f204 73bc 	addw	r3, r4, #1980	; 0x7bc
 8003588:	4618      	mov	r0, r3
 800358a:	ee0a 3a10 	vmov	s20, r3
 800358e:	f7ff fedd 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003592:	f504 63fd 	add.w	r3, r4, #2024	; 0x7e8
 8003596:	4618      	mov	r0, r3
 8003598:	934f      	str	r3, [sp, #316]	; 0x13c
 800359a:	f7ff f973 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800359e:	f604 0314 	addw	r3, r4, #2068	; 0x814
 80035a2:	4618      	mov	r0, r3
 80035a4:	932b      	str	r3, [sp, #172]	; 0xac
 80035a6:	f7ff f981 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80035aa:	f504 6305 	add.w	r3, r4, #2128	; 0x850
 80035ae:	4618      	mov	r0, r3
 80035b0:	932c      	str	r3, [sp, #176]	; 0xb0
 80035b2:	f00a f877 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 80035b6:	f604 039c 	addw	r3, r4, #2204	; 0x89c
 80035ba:	4618      	mov	r0, r3
 80035bc:	9357      	str	r3, [sp, #348]	; 0x15c
 80035be:	f7ff f991 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80035c2:	f604 03b4 	addw	r3, r4, #2228	; 0x8b4
 80035c6:	f8c4 689c 	str.w	r6, [r4, #2204]	; 0x89c
 80035ca:	4618      	mov	r0, r3
        painterColor = color;
 80035cc:	f8c4 58b0 	str.w	r5, [r4, #2224]	; 0x8b0
 80035d0:	9312      	str	r3, [sp, #72]	; 0x48
 80035d2:	f7ff fed5 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035d6:	f604 03f4 	addw	r3, r4, #2292	; 0x8f4
 80035da:	4618      	mov	r0, r3
 80035dc:	932d      	str	r3, [sp, #180]	; 0xb4
 80035de:	f7ff fecf 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80035e2:	f604 1334 	addw	r3, r4, #2356	; 0x934
 80035e6:	4618      	mov	r0, r3
 80035e8:	932e      	str	r3, [sp, #184]	; 0xb8
 80035ea:	f7ff f95f 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80035ee:	f504 6317 	add.w	r3, r4, #2416	; 0x970
 80035f2:	4618      	mov	r0, r3
 80035f4:	f604 1bac 	addw	fp, r4, #2476	; 0x9ac
 80035f8:	932f      	str	r3, [sp, #188]	; 0xbc
 80035fa:	f7ff f957 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80035fe:	4658      	mov	r0, fp
 8003600:	f7ff fea4 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003604:	f604 13d8 	addw	r3, r4, #2520	; 0x9d8
 8003608:	4618      	mov	r0, r3
 800360a:	9350      	str	r3, [sp, #320]	; 0x140
 800360c:	f7ff f93a 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8003610:	f604 2304 	addw	r3, r4, #2564	; 0xa04
 8003614:	4618      	mov	r0, r3
 8003616:	9330      	str	r3, [sp, #192]	; 0xc0
 8003618:	f7ff f948 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800361c:	f504 6324 	add.w	r3, r4, #2624	; 0xa40
 8003620:	4618      	mov	r0, r3
 8003622:	9331      	str	r3, [sp, #196]	; 0xc4
 8003624:	f00a f83e 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8003628:	f604 238c 	addw	r3, r4, #2700	; 0xa8c
 800362c:	4618      	mov	r0, r3
 800362e:	9356      	str	r3, [sp, #344]	; 0x158
 8003630:	f7ff f958 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003634:	f604 23a4 	addw	r3, r4, #2724	; 0xaa4
 8003638:	f8c4 6a8c 	str.w	r6, [r4, #2700]	; 0xa8c
 800363c:	4618      	mov	r0, r3
        painterColor = color;
 800363e:	f8c4 5aa0 	str.w	r5, [r4, #2720]	; 0xaa0
 8003642:	9332      	str	r3, [sp, #200]	; 0xc8
 8003644:	f7ff f932 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003648:	f504 632e 	add.w	r3, r4, #2784	; 0xae0
 800364c:	4618      	mov	r0, r3
 800364e:	9333      	str	r3, [sp, #204]	; 0xcc
 8003650:	f7ff f92c 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003654:	f604 331c 	addw	r3, r4, #2844	; 0xb1c
 8003658:	4618      	mov	r0, r3
 800365a:	9334      	str	r3, [sp, #208]	; 0xd0
 800365c:	f7ff fe90 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003660:	f604 335c 	addw	r3, r4, #2908	; 0xb5c
 8003664:	4618      	mov	r0, r3
 8003666:	9313      	str	r3, [sp, #76]	; 0x4c
 8003668:	f7ff fe8a 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800366c:	f604 339c 	addw	r3, r4, #2972	; 0xb9c
 8003670:	4618      	mov	r0, r3
 8003672:	ee0a 3a90 	vmov	s21, r3
 8003676:	f7ff fe69 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 800367a:	f604 33c8 	addw	r3, r4, #3016	; 0xbc8
 800367e:	4618      	mov	r0, r3
 8003680:	9351      	str	r3, [sp, #324]	; 0x144
 8003682:	f7ff f8ff 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8003686:	f604 33f4 	addw	r3, r4, #3060	; 0xbf4
 800368a:	4618      	mov	r0, r3
 800368c:	9335      	str	r3, [sp, #212]	; 0xd4
 800368e:	f7ff f90d 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003692:	f504 6343 	add.w	r3, r4, #3120	; 0xc30
 8003696:	4618      	mov	r0, r3
 8003698:	9336      	str	r3, [sp, #216]	; 0xd8
 800369a:	f00a f803 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 800369e:	f604 437c 	addw	r3, r4, #3196	; 0xc7c
 80036a2:	4618      	mov	r0, r3
 80036a4:	9355      	str	r3, [sp, #340]	; 0x154
 80036a6:	f7ff f91d 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80036aa:	f604 4394 	addw	r3, r4, #3220	; 0xc94
 80036ae:	f8c4 6c7c 	str.w	r6, [r4, #3196]	; 0xc7c
 80036b2:	4618      	mov	r0, r3
        painterColor = color;
 80036b4:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 80036b8:	9337      	str	r3, [sp, #220]	; 0xdc
 80036ba:	f7ff f8f7 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80036be:	f504 634d 	add.w	r3, r4, #3280	; 0xcd0
 80036c2:	4618      	mov	r0, r3
 80036c4:	9338      	str	r3, [sp, #224]	; 0xe0
 80036c6:	f7ff f8f1 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80036ca:	f604 530c 	addw	r3, r4, #3340	; 0xd0c
 80036ce:	4618      	mov	r0, r3
 80036d0:	9339      	str	r3, [sp, #228]	; 0xe4
 80036d2:	f7ff fe55 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80036d6:	f604 534c 	addw	r3, r4, #3404	; 0xd4c
 80036da:	4618      	mov	r0, r3
 80036dc:	9314      	str	r3, [sp, #80]	; 0x50
 80036de:	f7ff fe4f 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80036e2:	f604 538c 	addw	r3, r4, #3468	; 0xd8c
 80036e6:	4618      	mov	r0, r3
 80036e8:	ee0b 3a10 	vmov	s22, r3
 80036ec:	f7ff fe2e 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 80036f0:	f604 53b8 	addw	r3, r4, #3512	; 0xdb8
 80036f4:	4618      	mov	r0, r3
 80036f6:	9352      	str	r3, [sp, #328]	; 0x148
 80036f8:	f7ff f8c4 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 80036fc:	f604 53e4 	addw	r3, r4, #3556	; 0xde4
 8003700:	4618      	mov	r0, r3
 8003702:	933a      	str	r3, [sp, #232]	; 0xe8
 8003704:	f7ff f8d2 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003708:	f504 6362 	add.w	r3, r4, #3616	; 0xe20
 800370c:	4618      	mov	r0, r3
 800370e:	933b      	str	r3, [sp, #236]	; 0xec
 8003710:	f009 ffc8 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), painterColor(0)
 8003714:	f604 636c 	addw	r3, r4, #3692	; 0xe6c
 8003718:	4618      	mov	r0, r3
 800371a:	9354      	str	r3, [sp, #336]	; 0x150
 800371c:	f7ff f8e2 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003720:	f604 6384 	addw	r3, r4, #3716	; 0xe84
 8003724:	f8c4 6e6c 	str.w	r6, [r4, #3692]	; 0xe6c
 8003728:	4618      	mov	r0, r3
        painterColor = color;
 800372a:	f8c4 5e80 	str.w	r5, [r4, #3712]	; 0xe80
 800372e:	933c      	str	r3, [sp, #240]	; 0xf0
 8003730:	f7ff fe26 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003734:	f604 63c4 	addw	r3, r4, #3780	; 0xec4
 8003738:	4618      	mov	r0, r3
 800373a:	933d      	str	r3, [sp, #244]	; 0xf4
 800373c:	f7ff f8b6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003740:	e004      	b.n	800374c <_ZN15Screen3ViewBaseC1Ev+0x394>
 8003742:	bf00      	nop
 8003744:	08022f90 	.word	0x08022f90
 8003748:	08024060 	.word	0x08024060
 800374c:	f504 6370 	add.w	r3, r4, #3840	; 0xf00
 8003750:	4618      	mov	r0, r3
 8003752:	933e      	str	r3, [sp, #248]	; 0xf8
 8003754:	f7ff f8aa 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003758:	f604 733c 	addw	r3, r4, #3900	; 0xf3c
 800375c:	4618      	mov	r0, r3
 800375e:	9315      	str	r3, [sp, #84]	; 0x54
 8003760:	f7ff fe0e 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003764:	f604 737c 	addw	r3, r4, #3964	; 0xf7c
 8003768:	4618      	mov	r0, r3
 800376a:	ee0b 3a90 	vmov	s23, r3
 800376e:	f7ff fded 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003772:	f604 73a8 	addw	r3, r4, #4008	; 0xfa8
 8003776:	4618      	mov	r0, r3
 8003778:	9353      	str	r3, [sp, #332]	; 0x14c
 800377a:	f7ff f883 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800377e:	f604 73d4 	addw	r3, r4, #4052	; 0xfd4
 8003782:	4618      	mov	r0, r3
 8003784:	933f      	str	r3, [sp, #252]	; 0xfc
 8003786:	f7ff f891 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800378a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800378e:	3310      	adds	r3, #16
        : AbstractPainterRGB565(), painterColor(0)
 8003790:	f241 075c 	movw	r7, #4188	; 0x105c
 8003794:	4618      	mov	r0, r3
 8003796:	9304      	str	r3, [sp, #16]
 8003798:	f009 ff84 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
 800379c:	19e3      	adds	r3, r4, r7
 800379e:	4618      	mov	r0, r3
 80037a0:	9361      	str	r3, [sp, #388]	; 0x184
 80037a2:	f7ff f89f 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 80037a6:	f241 0370 	movw	r3, #4208	; 0x1070
        : AbstractPainterRGB565(), painterColor(0)
 80037aa:	51e6      	str	r6, [r4, r7]
        painterColor = color;
 80037ac:	50e5      	str	r5, [r4, r3]
 80037ae:	f504 5383 	add.w	r3, r4, #4192	; 0x1060
 80037b2:	3314      	adds	r3, #20
 80037b4:	4618      	mov	r0, r3
 80037b6:	ee0d 3a90 	vmov	s27, r3
 80037ba:	f7ff fde1 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037be:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80037c2:	3314      	adds	r3, #20
 80037c4:	4618      	mov	r0, r3
 80037c6:	ee0e 3a90 	vmov	s29, r3
 80037ca:	f7ff f86f 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80037ce:	f504 5387 	add.w	r3, r4, #4320	; 0x10e0
 80037d2:	3310      	adds	r3, #16
 80037d4:	4618      	mov	r0, r3
 80037d6:	ee0f 3a10 	vmov	s30, r3
 80037da:	f7ff f867 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80037de:	f504 5389 	add.w	r3, r4, #4384	; 0x1120
 80037e2:	330c      	adds	r3, #12
 80037e4:	4618      	mov	r0, r3
 80037e6:	ee0f 3a90 	vmov	s31, r3
 80037ea:	f7ff fdc9 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80037ee:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 80037f2:	330c      	adds	r3, #12
 80037f4:	4618      	mov	r0, r3
 80037f6:	ee08 3a90 	vmov	s17, r3
 80037fa:	f7ff fda7 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 80037fe:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 8003802:	3318      	adds	r3, #24
 8003804:	4618      	mov	r0, r3
 8003806:	9316      	str	r3, [sp, #88]	; 0x58
 8003808:	f7ff f83c 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800380c:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003810:	3304      	adds	r3, #4
 8003812:	4618      	mov	r0, r3
 8003814:	9305      	str	r3, [sp, #20]
 8003816:	f7ff f849 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800381a:	f504 5390 	add.w	r3, r4, #4608	; 0x1200
        : AbstractPainterRGB565(), painterColor(0)
 800381e:	f241 274c 	movw	r7, #4684	; 0x124c
 8003822:	4618      	mov	r0, r3
 8003824:	9340      	str	r3, [sp, #256]	; 0x100
 8003826:	f009 ff3d 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
 800382a:	19e3      	adds	r3, r4, r7
 800382c:	4618      	mov	r0, r3
 800382e:	9360      	str	r3, [sp, #384]	; 0x180
 8003830:	f7ff f858 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 8003834:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
        : AbstractPainterRGB565(), painterColor(0)
 8003838:	51e6      	str	r6, [r4, r7]
 800383a:	3304      	adds	r3, #4
        painterColor = color;
 800383c:	f843 5c04 	str.w	r5, [r3, #-4]
 8003840:	4618      	mov	r0, r3
 8003842:	9306      	str	r3, [sp, #24]
 8003844:	f7ff fd9c 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003848:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 800384c:	3304      	adds	r3, #4
 800384e:	4618      	mov	r0, r3
 8003850:	9307      	str	r3, [sp, #28]
 8003852:	f7ff f82b 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003856:	f504 5397 	add.w	r3, r4, #4832	; 0x12e0
 800385a:	4618      	mov	r0, r3
 800385c:	9341      	str	r3, [sp, #260]	; 0x104
 800385e:	f7ff f825 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003862:	f504 5398 	add.w	r3, r4, #4864	; 0x1300
 8003866:	331c      	adds	r3, #28
 8003868:	4618      	mov	r0, r3
 800386a:	9302      	str	r3, [sp, #8]
 800386c:	f7ff fd88 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003870:	f504 539a 	add.w	r3, r4, #4928	; 0x1340
 8003874:	331c      	adds	r3, #28
 8003876:	4618      	mov	r0, r3
 8003878:	ee09 3a10 	vmov	s18, r3
 800387c:	f7ff fd66 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003880:	f504 539c 	add.w	r3, r4, #4992	; 0x1380
 8003884:	3308      	adds	r3, #8
 8003886:	4618      	mov	r0, r3
 8003888:	9317      	str	r3, [sp, #92]	; 0x5c
 800388a:	f7fe fffb 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 800388e:	f504 539d 	add.w	r3, r4, #5024	; 0x13a0
 8003892:	3314      	adds	r3, #20
 8003894:	4618      	mov	r0, r3
 8003896:	9308      	str	r3, [sp, #32]
 8003898:	f7ff f808 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 800389c:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80038a0:	3310      	adds	r3, #16
        : AbstractPainterRGB565(), painterColor(0)
 80038a2:	f241 473c 	movw	r7, #5180	; 0x143c
 80038a6:	4618      	mov	r0, r3
 80038a8:	9309      	str	r3, [sp, #36]	; 0x24
 80038aa:	f009 fefb 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
 80038ae:	19e3      	adds	r3, r4, r7
 80038b0:	4618      	mov	r0, r3
 80038b2:	935f      	str	r3, [sp, #380]	; 0x17c
 80038b4:	f7ff f816 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 80038b8:	f241 4350 	movw	r3, #5200	; 0x1450
        : AbstractPainterRGB565(), painterColor(0)
 80038bc:	51e6      	str	r6, [r4, r7]
        painterColor = color;
 80038be:	50e5      	str	r5, [r4, r3]
 80038c0:	f504 53a2 	add.w	r3, r4, #5184	; 0x1440
 80038c4:	3314      	adds	r3, #20
 80038c6:	4618      	mov	r0, r3
 80038c8:	930a      	str	r3, [sp, #40]	; 0x28
 80038ca:	f7fe ffef 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80038ce:	f504 53a4 	add.w	r3, r4, #5248	; 0x1480
 80038d2:	3310      	adds	r3, #16
 80038d4:	4618      	mov	r0, r3
 80038d6:	9303      	str	r3, [sp, #12]
 80038d8:	f7ff fd52 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038dc:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 80038e0:	3310      	adds	r3, #16
 80038e2:	4618      	mov	r0, r3
 80038e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80038e6:	f7fe ffe1 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 80038ea:	f504 53a8 	add.w	r3, r4, #5376	; 0x1500
 80038ee:	330c      	adds	r3, #12
 80038f0:	4618      	mov	r0, r3
 80038f2:	930c      	str	r3, [sp, #48]	; 0x30
 80038f4:	f7ff fd44 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80038f8:	f504 53aa 	add.w	r3, r4, #5440	; 0x1540
 80038fc:	330c      	adds	r3, #12
 80038fe:	4618      	mov	r0, r3
 8003900:	ee09 3a90 	vmov	s19, r3
 8003904:	f7ff fd22 	bl	800334c <_ZN8touchgfx9ContainerC1Ev>
 8003908:	f504 53ab 	add.w	r3, r4, #5472	; 0x1560
 800390c:	3318      	adds	r3, #24
 800390e:	4618      	mov	r0, r3
 8003910:	9318      	str	r3, [sp, #96]	; 0x60
 8003912:	f7fe ffb7 	bl	8002884 <_ZN8touchgfx3BoxC1Ev>
 8003916:	f504 53ad 	add.w	r3, r4, #5536	; 0x15a0
 800391a:	3304      	adds	r3, #4
 800391c:	4618      	mov	r0, r3
 800391e:	930d      	str	r3, [sp, #52]	; 0x34
 8003920:	f7fe ffc4 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003924:	f504 53af 	add.w	r3, r4, #5600	; 0x15e0
        : AbstractPainterRGB565(), painterColor(0)
 8003928:	f241 672c 	movw	r7, #5676	; 0x162c
 800392c:	4618      	mov	r0, r3
 800392e:	9342      	str	r3, [sp, #264]	; 0x108
 8003930:	f009 feb8 	bl	800d6a4 <_ZN8touchgfx6CircleC1Ev>
 8003934:	19e3      	adds	r3, r4, r7
 8003936:	4618      	mov	r0, r3
 8003938:	935e      	str	r3, [sp, #376]	; 0x178
 800393a:	f7fe ffd3 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 800393e:	f504 53b2 	add.w	r3, r4, #5696	; 0x1640
        : AbstractPainterRGB565(), painterColor(0)
 8003942:	51e6      	str	r6, [r4, r7]
 8003944:	3304      	adds	r3, #4
        painterColor = color;
 8003946:	f843 5c04 	str.w	r5, [r3, #-4]
 800394a:	4618      	mov	r0, r3
 800394c:	930e      	str	r3, [sp, #56]	; 0x38
 800394e:	f7ff fd17 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003952:	f504 53b4 	add.w	r3, r4, #5760	; 0x1680
 8003956:	3304      	adds	r3, #4
 8003958:	4618      	mov	r0, r3
 800395a:	930f      	str	r3, [sp, #60]	; 0x3c
 800395c:	f7fe ffa6 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003960:	f504 53b6 	add.w	r3, r4, #5824	; 0x16c0
 8003964:	4618      	mov	r0, r3
 8003966:	9319      	str	r3, [sp, #100]	; 0x64
 8003968:	f7ff fd0a 	bl	8003380 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800396c:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8003970:	4618      	mov	r0, r3
 8003972:	9343      	str	r3, [sp, #268]	; 0x10c
 8003974:	f7fe ff9a 	bl	80028ac <_ZN8touchgfx8TextAreaC1Ev>
 8003978:	f504 53b9 	add.w	r3, r4, #5920	; 0x1720
 800397c:	331c      	adds	r3, #28
        : AbstractPainterRGB565(), painterColor(0)
 800397e:	f241 77b0 	movw	r7, #6064	; 0x17b0
 8003982:	4618      	mov	r0, r3
 8003984:	ee0c 3a10 	vmov	s24, r3
 8003988:	f00a fbc4 	bl	800e114 <_ZN8touchgfx4LineC1Ev>
 800398c:	19e3      	adds	r3, r4, r7
 800398e:	4618      	mov	r0, r3
 8003990:	935d      	str	r3, [sp, #372]	; 0x174
 8003992:	f7fe ffa7 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 8003996:	f241 73c4 	movw	r3, #6084	; 0x17c4
        : AbstractPainterRGB565(), painterColor(0)
 800399a:	51e6      	str	r6, [r4, r7]
        painterColor = color;
 800399c:	50e5      	str	r5, [r4, r3]
 800399e:	f504 53be 	add.w	r3, r4, #6080	; 0x17c0
 80039a2:	3308      	adds	r3, #8
        : AbstractPainterRGB565(), painterColor(0)
 80039a4:	f641 073c 	movw	r7, #6204	; 0x183c
 80039a8:	4618      	mov	r0, r3
 80039aa:	ee0c 3a90 	vmov	s25, r3
 80039ae:	f00a fbb1 	bl	800e114 <_ZN8touchgfx4LineC1Ev>
 80039b2:	19e3      	adds	r3, r4, r7
 80039b4:	4618      	mov	r0, r3
 80039b6:	935c      	str	r3, [sp, #368]	; 0x170
 80039b8:	f7fe ff94 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 80039bc:	f641 0350 	movw	r3, #6224	; 0x1850
        : AbstractPainterRGB565(), painterColor(0)
 80039c0:	51e6      	str	r6, [r4, r7]
        painterColor = color;
 80039c2:	50e5      	str	r5, [r4, r3]
 80039c4:	f504 53c2 	add.w	r3, r4, #6208	; 0x1840
 80039c8:	3314      	adds	r3, #20
        : AbstractPainterRGB565(), painterColor(0)
 80039ca:	f641 07c8 	movw	r7, #6344	; 0x18c8
 80039ce:	4618      	mov	r0, r3
 80039d0:	ee0d 3a10 	vmov	s26, r3
 80039d4:	f00a fb9e 	bl	800e114 <_ZN8touchgfx4LineC1Ev>
 80039d8:	19e3      	adds	r3, r4, r7
 80039da:	4618      	mov	r0, r3
 80039dc:	935b      	str	r3, [sp, #364]	; 0x16c
 80039de:	f7fe ff81 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 80039e2:	f641 03dc 	movw	r3, #6364	; 0x18dc
        : AbstractPainterRGB565(), painterColor(0)
 80039e6:	51e6      	str	r6, [r4, r7]
        painterColor = color;
 80039e8:	50e5      	str	r5, [r4, r3]
 80039ea:	f504 53c7 	add.w	r3, r4, #6368	; 0x18e0
        : AbstractPainterRGB565(), painterColor(0)
 80039ee:	f641 1754 	movw	r7, #6484	; 0x1954
 80039f2:	4618      	mov	r0, r3
 80039f4:	ee0e 3a10 	vmov	s28, r3
 80039f8:	f00a fb8c 	bl	800e114 <_ZN8touchgfx4LineC1Ev>
 80039fc:	19e3      	adds	r3, r4, r7
 80039fe:	4618      	mov	r0, r3
 8003a00:	935a      	str	r3, [sp, #360]	; 0x168
 8003a02:	f7fe ff6f 	bl	80028e4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        painterColor = color;
 8003a06:	f641 1368 	movw	r3, #6504	; 0x1968
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003a0a:	f504 50d9 	add.w	r0, r4, #6944	; 0x1b20
        : AbstractPainterRGB565(), painterColor(0)
 8003a0e:	51e6      	str	r6, [r4, r7]
 8003a10:	f642 61e0 	movw	r1, #12000	; 0x2ee0
        painterColor = color;
 8003a14:	50e5      	str	r5, [r4, r3]
 8003a16:	3004      	adds	r0, #4
 8003a18:	f00b f922 	bl	800ec60 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8003a1c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003a20:	9844      	ldr	r0, [sp, #272]	; 0x110
 8003a22:	9300      	str	r3, [sp, #0]
 8003a24:	462a      	mov	r2, r5
 8003a26:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003a2a:	4629      	mov	r1, r5
 8003a2c:	f7fe ff17 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a30:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003a34:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 8003a36:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003a3a:	9845      	ldr	r0, [sp, #276]	; 0x114
 8003a3c:	9300      	str	r3, [sp, #0]
 8003a3e:	462a      	mov	r2, r5
 8003a40:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003a44:	4629      	mov	r1, r5
 8003a46:	f7fe ff0a 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a4a:	f5a7 0779 	sub.w	r7, r7, #16318464	; 0xf90000
 8003a4e:	f46f 6303 	mvn.w	r3, #2096	; 0x830
 8003a52:	441f      	add	r7, r3
    boxWithBorder1.setPosition(0, 0, 239, 84);
 8003a54:	2354      	movs	r3, #84	; 0x54
 8003a56:	9846      	ldr	r0, [sp, #280]	; 0x118
 8003a58:	9300      	str	r3, [sp, #0]
 8003a5a:	462a      	mov	r2, r5
 8003a5c:	23ef      	movs	r3, #239	; 0xef
 8003a5e:	4629      	mov	r1, r5
 8003a60:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8003a64:	f7fe fefb 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003a68:	f04f 0905 	mov.w	r9, #5
        borderColor = color;
 8003a6c:	f04f 33ff 	mov.w	r3, #4294967295
    textArea1.setXY(46, 19);
 8003a70:	2213      	movs	r2, #19
 8003a72:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003a74:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        borderSize = size;
 8003a78:	f8a4 90c8 	strh.w	r9, [r4, #200]	; 0xc8
 8003a7c:	212e      	movs	r1, #46	; 0x2e
 8003a7e:	f8c4 70c0 	str.w	r7, [r4, #192]	; 0xc0
 8003a82:	f7fe fedf 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003a86:	f04f 33ff 	mov.w	r3, #4294967295
 8003a8a:	4e34      	ldr	r6, [pc, #208]	; (8003b5c <_ZN15Screen3ViewBaseC1Ev+0x7a4>)
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID22));
 8003a8c:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003a8e:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8003a92:	a962      	add	r1, sp, #392	; 0x188
 8003a94:	2315      	movs	r3, #21
        linespace = space;
 8003a96:	f8a4 5100 	strh.w	r5, [r4, #256]	; 0x100
 8003a9a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003a9e:	9662      	str	r6, [sp, #392]	; 0x188
 8003aa0:	f00a ff09 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    boxWithBorder2.setPosition(283, 66, 517, 96);
 8003aa4:	2360      	movs	r3, #96	; 0x60
 8003aa6:	9847      	ldr	r0, [sp, #284]	; 0x11c
 8003aa8:	9300      	str	r3, [sp, #0]
 8003aaa:	2242      	movs	r2, #66	; 0x42
 8003aac:	f240 2305 	movw	r3, #517	; 0x205
 8003ab0:	f240 111b 	movw	r1, #283	; 0x11b
 8003ab4:	f7fe fed3 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8003ab8:	f04f 33ff 	mov.w	r3, #4294967295
    textArea2.setXY(298, 91);
 8003abc:	225b      	movs	r2, #91	; 0x5b
 8003abe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003ac0:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
        borderSize = size;
 8003ac4:	f8a4 9138 	strh.w	r9, [r4, #312]	; 0x138
 8003ac8:	f44f 7195 	mov.w	r1, #298	; 0x12a
        this->color = color;
 8003acc:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 8003b7c <_ZN15Screen3ViewBaseC1Ev+0x7c4>
 8003ad0:	f8c4 7130 	str.w	r7, [r4, #304]	; 0x130
 8003ad4:	f7fe feb6 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8003ad8:	2316      	movs	r3, #22
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID23));
 8003ada:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003adc:	f8c4 916c 	str.w	r9, [r4, #364]	; 0x16c
 8003ae0:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8003ae2:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
 8003ae6:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003aea:	9662      	str	r6, [sp, #392]	; 0x188
 8003aec:	f00a fee3 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_1.setXY(541, 91);
 8003af0:	225b      	movs	r2, #91	; 0x5b
 8003af2:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003af4:	f240 211d 	movw	r1, #541	; 0x21d
 8003af8:	f7fe fea4 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8003afc:	2317      	movs	r3, #23
    textArea2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID24));
 8003afe:	981c      	ldr	r0, [sp, #112]	; 0x70
        this->color = color;
 8003b00:	f8c4 91a8 	str.w	r9, [r4, #424]	; 0x1a8
 8003b04:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8003b06:	f8a4 51ac 	strh.w	r5, [r4, #428]	; 0x1ac
 8003b0a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003b0e:	9662      	str	r6, [sp, #392]	; 0x188
 8003b10:	f00a fed1 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    total_voltage.setPosition(460, 91, 35, 47);
 8003b14:	232f      	movs	r3, #47	; 0x2f
 8003b16:	9300      	str	r3, [sp, #0]
 8003b18:	981d      	ldr	r0, [sp, #116]	; 0x74
 8003b1a:	2323      	movs	r3, #35	; 0x23
 8003b1c:	225b      	movs	r2, #91	; 0x5b
 8003b1e:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8003b22:	f7fe fe9c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003b26:	4b0e      	ldr	r3, [pc, #56]	; (8003b60 <_ZN15Screen3ViewBaseC1Ev+0x7a8>)
 8003b28:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b2c:	4b0d      	ldr	r3, [pc, #52]	; (8003b64 <_ZN15Screen3ViewBaseC1Ev+0x7ac>)
        linespace = space;
 8003b2e:	f8a4 51e8 	strh.w	r5, [r4, #488]	; 0x1e8
 8003b32:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(total_voltageBuffer, TOTAL_VOLTAGE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID26).getText());
 8003b34:	f504 59cb 	add.w	r9, r4, #6496	; 0x1960
 8003b38:	f109 090c 	add.w	r9, r9, #12
 8003b3c:	b92b      	cbnz	r3, 8003b4a <_ZN15Screen3ViewBaseC1Ev+0x792>
 8003b3e:	4b0a      	ldr	r3, [pc, #40]	; (8003b68 <_ZN15Screen3ViewBaseC1Ev+0x7b0>)
 8003b40:	4a0a      	ldr	r2, [pc, #40]	; (8003b6c <_ZN15Screen3ViewBaseC1Ev+0x7b4>)
 8003b42:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003b44:	480a      	ldr	r0, [pc, #40]	; (8003b70 <_ZN15Screen3ViewBaseC1Ev+0x7b8>)
 8003b46:	f01d f97b 	bl	8020e40 <__assert_func>
 8003b4a:	4b0a      	ldr	r3, [pc, #40]	; (8003b74 <_ZN15Screen3ViewBaseC1Ev+0x7bc>)
 8003b4c:	881b      	ldrh	r3, [r3, #0]
 8003b4e:	2b19      	cmp	r3, #25
 8003b50:	d816      	bhi.n	8003b80 <_ZN15Screen3ViewBaseC1Ev+0x7c8>
 8003b52:	4b09      	ldr	r3, [pc, #36]	; (8003b78 <_ZN15Screen3ViewBaseC1Ev+0x7c0>)
 8003b54:	4a05      	ldr	r2, [pc, #20]	; (8003b6c <_ZN15Screen3ViewBaseC1Ev+0x7b4>)
 8003b56:	21af      	movs	r1, #175	; 0xaf
 8003b58:	e7f4      	b.n	8003b44 <_ZN15Screen3ViewBaseC1Ev+0x78c>
 8003b5a:	bf00      	nop
 8003b5c:	08022710 	.word	0x08022710
 8003b60:	fffcfafa 	.word	0xfffcfafa
 8003b64:	2000eb80 	.word	0x2000eb80
 8003b68:	08022e11 	.word	0x08022e11
 8003b6c:	08022e53 	.word	0x08022e53
 8003b70:	08022e81 	.word	0x08022e81
 8003b74:	2000eb84 	.word	0x2000eb84
 8003b78:	08022ec8 	.word	0x08022ec8
 8003b7c:	fffaf2f2 	.word	0xfffaf2f2
        return texts->getText(typedTextId);
 8003b80:	4bd2      	ldr	r3, [pc, #840]	; (8003ecc <_ZN15Screen3ViewBaseC1Ev+0xb14>)
 8003b82:	2119      	movs	r1, #25
 8003b84:	6818      	ldr	r0, [r3, #0]
 8003b86:	f001 fddb 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8003b8a:	4ad1      	ldr	r2, [pc, #836]	; (8003ed0 <_ZN15Screen3ViewBaseC1Ev+0xb18>)
 8003b8c:	4603      	mov	r3, r0
 8003b8e:	210a      	movs	r1, #10
 8003b90:	4648      	mov	r0, r9
 8003b92:	f00f fd85 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003b96:	f04f 0118 	mov.w	r1, #24
    total_voltage.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));
 8003b9a:	981d      	ldr	r0, [sp, #116]	; 0x74
        wildcard = value;
 8003b9c:	f8c4 91f0 	str.w	r9, [r4, #496]	; 0x1f0
 8003ba0:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
 8003ba4:	a962      	add	r1, sp, #392	; 0x188
 8003ba6:	9662      	str	r6, [sp, #392]	; 0x188
 8003ba8:	f00a fe85 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea3.setXY(495, 91);
 8003bac:	225b      	movs	r2, #91	; 0x5b
 8003bae:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003bb0:	f240 11ef 	movw	r1, #495	; 0x1ef
 8003bb4:	f7fe fe46 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003bb8:	f04f 31ff 	mov.w	r1, #4294967295
 8003bbc:	231a      	movs	r3, #26
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));
 8003bbe:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003bc0:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
        linespace = space;
 8003bc4:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
 8003bc8:	a962      	add	r1, sp, #392	; 0x188
 8003bca:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003bce:	9662      	str	r6, [sp, #392]	; 0x188
 8003bd0:	f00a fe71 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    currnet.setPosition(697, 91, 36, 47);
 8003bd4:	212f      	movs	r1, #47	; 0x2f
 8003bd6:	9100      	str	r1, [sp, #0]
 8003bd8:	2324      	movs	r3, #36	; 0x24
 8003bda:	f240 21b9 	movw	r1, #697	; 0x2b9
 8003bde:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8003be0:	225b      	movs	r2, #91	; 0x5b
 8003be2:	f7fe fe3c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003be6:	f04f 31ff 	mov.w	r1, #4294967295
 8003bea:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bee:	49b9      	ldr	r1, [pc, #740]	; (8003ed4 <_ZN15Screen3ViewBaseC1Ev+0xb1c>)
        linespace = space;
 8003bf0:	f8a4 5264 	strh.w	r5, [r4, #612]	; 0x264
 8003bf4:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(currnetBuffer, CURRNET_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID29).getText());
 8003bf6:	f504 59cc 	add.w	r9, r4, #6528	; 0x1980
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d09f      	beq.n	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003bfe:	4bb6      	ldr	r3, [pc, #728]	; (8003ed8 <_ZN15Screen3ViewBaseC1Ev+0xb20>)
 8003c00:	881b      	ldrh	r3, [r3, #0]
 8003c02:	2b1c      	cmp	r3, #28
 8003c04:	d9a5      	bls.n	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8003c06:	4ab1      	ldr	r2, [pc, #708]	; (8003ecc <_ZN15Screen3ViewBaseC1Ev+0xb14>)
 8003c08:	211c      	movs	r1, #28
 8003c0a:	6810      	ldr	r0, [r2, #0]
 8003c0c:	f001 fd98 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8003c10:	4aaf      	ldr	r2, [pc, #700]	; (8003ed0 <_ZN15Screen3ViewBaseC1Ev+0xb18>)
 8003c12:	4603      	mov	r3, r0
 8003c14:	210a      	movs	r1, #10
 8003c16:	4648      	mov	r0, r9
 8003c18:	f00f fd42 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    currnet.setTypedText(touchgfx::TypedText(T_SINGLEUSEID28));
 8003c1c:	a862      	add	r0, sp, #392	; 0x188
        : typedTextId(id)
 8003c1e:	231b      	movs	r3, #27
 8003c20:	4601      	mov	r1, r0
 8003c22:	f8c4 926c 	str.w	r9, [r4, #620]	; 0x26c
 8003c26:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8003c28:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003c2c:	9662      	str	r6, [sp, #392]	; 0x188
 8003c2e:	f00a fe42 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea4.setXY(733, 91);
 8003c32:	225b      	movs	r2, #91	; 0x5b
 8003c34:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003c36:	f240 21dd 	movw	r1, #733	; 0x2dd
 8003c3a:	f7fe fe03 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003c3e:	f04f 30ff 	mov.w	r0, #4294967295
 8003c42:	f8c4 02a0 	str.w	r0, [r4, #672]	; 0x2a0
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID30));
 8003c46:	a862      	add	r0, sp, #392	; 0x188
    BMS.setPosition(0, 178, 800, 302);
 8003c48:	f44f 7997 	mov.w	r9, #302	; 0x12e
 8003c4c:	231d      	movs	r3, #29
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID30));
 8003c4e:	4601      	mov	r1, r0
        linespace = space;
 8003c50:	f8a4 52a4 	strh.w	r5, [r4, #676]	; 0x2a4
 8003c54:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003c56:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003c5a:	9662      	str	r6, [sp, #392]	; 0x188
 8003c5c:	f00a fe2b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    BMS.setPosition(0, 178, 800, 302);
 8003c60:	ee18 0a10 	vmov	r0, s16
 8003c64:	f8cd 9000 	str.w	r9, [sp]
 8003c68:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003c6c:	22b2      	movs	r2, #178	; 0xb2
 8003c6e:	4629      	mov	r1, r5
 8003c70:	f7fe fdf5 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    box1_2.setPosition(0, 0, 160, 302);
 8003c74:	23a0      	movs	r3, #160	; 0xa0
 8003c76:	462a      	mov	r2, r5
 8003c78:	9848      	ldr	r0, [sp, #288]	; 0x120
 8003c7a:	f8cd 9000 	str.w	r9, [sp]
 8003c7e:	4629      	mov	r1, r5
 8003c80:	f7fe fded 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003c84:	f04f 0005 	mov.w	r0, #5
        borderColor = color;
 8003c88:	e9c4 77c0 	strd	r7, r7, [r4, #768]	; 0x300
    BMS.add(box1_2);
 8003c8c:	9948      	ldr	r1, [sp, #288]	; 0x120
        borderSize = size;
 8003c8e:	f8a4 0308 	strh.w	r0, [r4, #776]	; 0x308
 8003c92:	ee18 0a10 	vmov	r0, s16
 8003c96:	f008 fa7b 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3_4.setPosition(160, 0, 160, 302);
 8003c9a:	23a0      	movs	r3, #160	; 0xa0
 8003c9c:	4619      	mov	r1, r3
 8003c9e:	462a      	mov	r2, r5
 8003ca0:	9849      	ldr	r0, [sp, #292]	; 0x124
 8003ca2:	f8cd 9000 	str.w	r9, [sp]
 8003ca6:	f7fe fdda 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003caa:	f04f 0005 	mov.w	r0, #5
        borderColor = color;
 8003cae:	e9c4 77cd 	strd	r7, r7, [r4, #820]	; 0x334
    BMS.add(box3_4);
 8003cb2:	9949      	ldr	r1, [sp, #292]	; 0x124
        borderSize = size;
 8003cb4:	f8a4 033c 	strh.w	r0, [r4, #828]	; 0x33c
 8003cb8:	ee18 0a10 	vmov	r0, s16
 8003cbc:	f008 fa68 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box5_6.setPosition(320, 0, 160, 302);
 8003cc0:	23a0      	movs	r3, #160	; 0xa0
 8003cc2:	462a      	mov	r2, r5
 8003cc4:	984a      	ldr	r0, [sp, #296]	; 0x128
 8003cc6:	f8cd 9000 	str.w	r9, [sp]
 8003cca:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003cce:	f7fe fdc6 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003cd2:	f04f 0005 	mov.w	r0, #5
        borderColor = color;
 8003cd6:	e9c4 77da 	strd	r7, r7, [r4, #872]	; 0x368
    BMS.add(box5_6);
 8003cda:	994a      	ldr	r1, [sp, #296]	; 0x128
        borderSize = size;
 8003cdc:	f8a4 0370 	strh.w	r0, [r4, #880]	; 0x370
 8003ce0:	ee18 0a10 	vmov	r0, s16
 8003ce4:	f008 fa54 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box7_8.setPosition(480, 0, 160, 302);
 8003ce8:	23a0      	movs	r3, #160	; 0xa0
 8003cea:	462a      	mov	r2, r5
 8003cec:	984b      	ldr	r0, [sp, #300]	; 0x12c
 8003cee:	f8cd 9000 	str.w	r9, [sp]
 8003cf2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8003cf6:	f7fe fdb2 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003cfa:	f04f 0005 	mov.w	r0, #5
        borderColor = color;
 8003cfe:	e9c4 77e7 	strd	r7, r7, [r4, #924]	; 0x39c
    BMS.add(box7_8);
 8003d02:	994b      	ldr	r1, [sp, #300]	; 0x12c
        borderSize = size;
 8003d04:	f8a4 03a4 	strh.w	r0, [r4, #932]	; 0x3a4
 8003d08:	ee18 0a10 	vmov	r0, s16
 8003d0c:	f008 fa40 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box9_10.setPosition(640, 0, 160, 302);
 8003d10:	23a0      	movs	r3, #160	; 0xa0
 8003d12:	462a      	mov	r2, r5
 8003d14:	984c      	ldr	r0, [sp, #304]	; 0x130
 8003d16:	f8cd 9000 	str.w	r9, [sp]
 8003d1a:	f44f 7120 	mov.w	r1, #640	; 0x280
 8003d1e:	f7fe fd9e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d22:	f04f 0005 	mov.w	r0, #5
        borderColor = color;
 8003d26:	e9c4 77f4 	strd	r7, r7, [r4, #976]	; 0x3d0
    BMS.add(box9_10);
 8003d2a:	994c      	ldr	r1, [sp, #304]	; 0x130
        borderSize = size;
 8003d2c:	f8a4 03d8 	strh.w	r0, [r4, #984]	; 0x3d8
 8003d30:	ee18 0a10 	vmov	r0, s16
 8003d34:	f008 fa2c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms1.setPosition(0, 0, 160, 151);
 8003d38:	2097      	movs	r0, #151	; 0x97
 8003d3a:	9000      	str	r0, [sp, #0]
 8003d3c:	23a0      	movs	r3, #160	; 0xa0
 8003d3e:	462a      	mov	r2, r5
 8003d40:	4629      	mov	r1, r5
 8003d42:	4640      	mov	r0, r8
 8003d44:	f7fe fd8b 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms1.setPosition(5, 43, 150, 108);
 8003d48:	206c      	movs	r0, #108	; 0x6c
 8003d4a:	2396      	movs	r3, #150	; 0x96
 8003d4c:	222b      	movs	r2, #43	; 0x2b
 8003d4e:	9000      	str	r0, [sp, #0]
 8003d50:	2105      	movs	r1, #5
 8003d52:	984d      	ldr	r0, [sp, #308]	; 0x134
 8003d54:	f7fe fd83 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d58:	f04f 30ff 	mov.w	r0, #4294967295
    bms1.add(boxbms1);
 8003d5c:	994d      	ldr	r1, [sp, #308]	; 0x134
 8003d5e:	f8c4 0430 	str.w	r0, [r4, #1072]	; 0x430
 8003d62:	4640      	mov	r0, r8
 8003d64:	f008 fa14 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(24, 14);
 8003d68:	220e      	movs	r2, #14
 8003d6a:	9821      	ldr	r0, [sp, #132]	; 0x84
 8003d6c:	2118      	movs	r1, #24
 8003d6e:	f7fe fd69 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003d72:	f04f 30ff 	mov.w	r0, #4294967295
 8003d76:	f8c4 0464 	str.w	r0, [r4, #1124]	; 0x464
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID31));
 8003d7a:	a862      	add	r0, sp, #392	; 0x188
 8003d7c:	231e      	movs	r3, #30
 8003d7e:	4601      	mov	r1, r0
        linespace = space;
 8003d80:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
 8003d84:	9821      	ldr	r0, [sp, #132]	; 0x84
 8003d86:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
    circle_bms1.setPosition(79, -16, 80, 80);
 8003d8a:	f04f 0950 	mov.w	r9, #80	; 0x50
 8003d8e:	9662      	str	r6, [sp, #392]	; 0x188
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID31));
 8003d90:	f00a fd91 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms1.add(textArea5);
 8003d94:	9921      	ldr	r1, [sp, #132]	; 0x84
 8003d96:	4640      	mov	r0, r8
 8003d98:	f008 f9fa 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms1.setPosition(79, -16, 80, 80);
 8003d9c:	464b      	mov	r3, r9
 8003d9e:	f06f 020f 	mvn.w	r2, #15
 8003da2:	9822      	ldr	r0, [sp, #136]	; 0x88
 8003da4:	f8cd 9000 	str.w	r9, [sp]
 8003da8:	214f      	movs	r1, #79	; 0x4f
 8003daa:	f7fe fd58 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = CWRUtil::toQ5(r);
 8003dae:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
 8003db2:	f8c4 04a8 	str.w	r0, [r4, #1192]	; 0x4a8
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003db6:	f44f 5034 	mov.w	r0, #11520	; 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8003dba:	f44f 67a0 	mov.w	r7, #1280	; 0x500
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003dbe:	f8c4 04b0 	str.w	r0, [r4, #1200]	; 0x4b0
 8003dc2:	f04f 30ff 	mov.w	r0, #4294967295
    circle_bms1.setPainter(circle_bms1Painter);
 8003dc6:	9959      	ldr	r1, [sp, #356]	; 0x164
 8003dc8:	f8c4 04d0 	str.w	r0, [r4, #1232]	; 0x4d0
        this->circleCenterX = CWRUtil::toQ5(x);
 8003dcc:	f8c4 74a0 	str.w	r7, [r4, #1184]	; 0x4a0
 8003dd0:	9822      	ldr	r0, [sp, #136]	; 0x88
        this->circleCenterY = CWRUtil::toQ5(y);
 8003dd2:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003dd6:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003dda:	f8c4 54ac 	str.w	r5, [r4, #1196]	; 0x4ac
 8003dde:	f009 ffe3 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms1.add(circle_bms1);
 8003de2:	9922      	ldr	r1, [sp, #136]	; 0x88
 8003de4:	4640      	mov	r0, r8
 8003de6:	f008 f9d3 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms1.setXY(33, 44);
 8003dea:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003dec:	2121      	movs	r1, #33	; 0x21
 8003dee:	222c      	movs	r2, #44	; 0x2c
 8003df0:	f7fe fd28 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003df4:	4937      	ldr	r1, [pc, #220]	; (8003ed4 <_ZN15Screen3ViewBaseC1Ev+0xb1c>)
 8003df6:	f8a4 5508 	strh.w	r5, [r4, #1288]	; 0x508
        this->color = color;
 8003dfa:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003dfe:	f8c4 0504 	str.w	r0, [r4, #1284]	; 0x504
 8003e02:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(voltage_bms1Buffer, VOLTAGE_BMS1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID42).getText());
 8003e04:	f504 50cc 	add.w	r0, r4, #6528	; 0x1980
 8003e08:	3014      	adds	r0, #20
 8003e0a:	9021      	str	r0, [sp, #132]	; 0x84
 8003e0c:	2b00      	cmp	r3, #0
 8003e0e:	f43f ae96 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003e12:	4b31      	ldr	r3, [pc, #196]	; (8003ed8 <_ZN15Screen3ViewBaseC1Ev+0xb20>)
 8003e14:	881b      	ldrh	r3, [r3, #0]
 8003e16:	2b29      	cmp	r3, #41	; 0x29
 8003e18:	f67f ae9b 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8003e1c:	4a2b      	ldr	r2, [pc, #172]	; (8003ecc <_ZN15Screen3ViewBaseC1Ev+0xb14>)
 8003e1e:	2129      	movs	r1, #41	; 0x29
 8003e20:	6810      	ldr	r0, [r2, #0]
 8003e22:	f001 fc8d 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8003e26:	4a2a      	ldr	r2, [pc, #168]	; (8003ed0 <_ZN15Screen3ViewBaseC1Ev+0xb18>)
 8003e28:	4603      	mov	r3, r0
 8003e2a:	210a      	movs	r1, #10
 8003e2c:	9821      	ldr	r0, [sp, #132]	; 0x84
 8003e2e:	f00f fc37 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003e32:	9821      	ldr	r0, [sp, #132]	; 0x84
 8003e34:	f8c4 0510 	str.w	r0, [r4, #1296]	; 0x510
    voltage_bms1.resizeToCurrentText();
 8003e38:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003e3a:	f00a fd1f 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    voltage_bms1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID41));
 8003e3e:	a862      	add	r0, sp, #392	; 0x188
        : typedTextId(id)
 8003e40:	2328      	movs	r3, #40	; 0x28
 8003e42:	4601      	mov	r1, r0
 8003e44:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003e46:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003e4a:	9662      	str	r6, [sp, #392]	; 0x188
 8003e4c:	f00a fd33 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms1.add(voltage_bms1);
 8003e50:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003e52:	4640      	mov	r0, r8
 8003e54:	f008 f99c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7.setXY(92, 97);
 8003e58:	2261      	movs	r2, #97	; 0x61
 8003e5a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8003e5c:	215c      	movs	r1, #92	; 0x5c
 8003e5e:	f7fe fcf1 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8003e62:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003e66:	f8c4 0544 	str.w	r0, [r4, #1348]	; 0x544
    textArea7.setTypedText(touchgfx::TypedText(T_SINGLEUSEID46));
 8003e6a:	a862      	add	r0, sp, #392	; 0x188
 8003e6c:	232d      	movs	r3, #45	; 0x2d
 8003e6e:	4601      	mov	r1, r0
        linespace = space;
 8003e70:	f8a4 5548 	strh.w	r5, [r4, #1352]	; 0x548
 8003e74:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8003e76:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003e7a:	9662      	str	r6, [sp, #392]	; 0x188
 8003e7c:	f00a fd1b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms1.add(textArea7);
 8003e80:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8003e82:	4640      	mov	r0, r8
 8003e84:	f008 f984 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms1.setPosition(38, 97, 44, 47);
 8003e88:	202f      	movs	r0, #47	; 0x2f
 8003e8a:	9000      	str	r0, [sp, #0]
 8003e8c:	232c      	movs	r3, #44	; 0x2c
 8003e8e:	9824      	ldr	r0, [sp, #144]	; 0x90
 8003e90:	2126      	movs	r1, #38	; 0x26
 8003e92:	2261      	movs	r2, #97	; 0x61
 8003e94:	f7fe fce3 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e98:	490e      	ldr	r1, [pc, #56]	; (8003ed4 <_ZN15Screen3ViewBaseC1Ev+0xb1c>)
 8003e9a:	f8a4 5584 	strh.w	r5, [r4, #1412]	; 0x584
        this->color = color;
 8003e9e:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003ea2:	f8c4 0580 	str.w	r0, [r4, #1408]	; 0x580
 8003ea6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(temp_bms1Buffer, TEMP_BMS1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID44).getText());
 8003ea8:	f504 50cd 	add.w	r0, r4, #6560	; 0x19a0
 8003eac:	3008      	adds	r0, #8
 8003eae:	9010      	str	r0, [sp, #64]	; 0x40
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	f43f ae44 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003eb6:	4b08      	ldr	r3, [pc, #32]	; (8003ed8 <_ZN15Screen3ViewBaseC1Ev+0xb20>)
 8003eb8:	881b      	ldrh	r3, [r3, #0]
 8003eba:	2b2b      	cmp	r3, #43	; 0x2b
 8003ebc:	f67f ae49 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8003ec0:	4a02      	ldr	r2, [pc, #8]	; (8003ecc <_ZN15Screen3ViewBaseC1Ev+0xb14>)
 8003ec2:	212b      	movs	r1, #43	; 0x2b
 8003ec4:	6810      	ldr	r0, [r2, #0]
 8003ec6:	f001 fc3b 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8003eca:	e007      	b.n	8003edc <_ZN15Screen3ViewBaseC1Ev+0xb24>
 8003ecc:	2000eb8c 	.word	0x2000eb8c
 8003ed0:	08022f1a 	.word	0x08022f1a
 8003ed4:	2000eb80 	.word	0x2000eb80
 8003ed8:	2000eb84 	.word	0x2000eb84
 8003edc:	4ad2      	ldr	r2, [pc, #840]	; (8004228 <_ZN15Screen3ViewBaseC1Ev+0xe70>)
 8003ede:	4603      	mov	r3, r0
 8003ee0:	210a      	movs	r1, #10
 8003ee2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003ee4:	f00f fbdc 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003ee8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003eea:	f8c4 058c 	str.w	r0, [r4, #1420]	; 0x58c
    temp_bms1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID43));
 8003eee:	a862      	add	r0, sp, #392	; 0x188
        : typedTextId(id)
 8003ef0:	232a      	movs	r3, #42	; 0x2a
 8003ef2:	4601      	mov	r1, r0
 8003ef4:	9824      	ldr	r0, [sp, #144]	; 0x90
 8003ef6:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003efa:	9662      	str	r6, [sp, #392]	; 0x188
 8003efc:	f00a fcdb 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms1.add(temp_bms1);
 8003f00:	9924      	ldr	r1, [sp, #144]	; 0x90
 8003f02:	4640      	mov	r0, r8
 8003f04:	f008 f944 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_1.setXY(96, 44);
 8003f08:	222c      	movs	r2, #44	; 0x2c
 8003f0a:	9825      	ldr	r0, [sp, #148]	; 0x94
 8003f0c:	2160      	movs	r1, #96	; 0x60
 8003f0e:	f7fe fc99 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8003f12:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003f16:	f8c4 05c0 	str.w	r0, [r4, #1472]	; 0x5c0
    textArea6_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID52));
 8003f1a:	a862      	add	r0, sp, #392	; 0x188
 8003f1c:	2333      	movs	r3, #51	; 0x33
 8003f1e:	4601      	mov	r1, r0
        linespace = space;
 8003f20:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
 8003f24:	9825      	ldr	r0, [sp, #148]	; 0x94
 8003f26:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003f2a:	9662      	str	r6, [sp, #392]	; 0x188
 8003f2c:	f00a fcc3 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms1.add(textArea6_1);
 8003f30:	9925      	ldr	r1, [sp, #148]	; 0x94
 8003f32:	4640      	mov	r0, r8
 8003f34:	f008 f92c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms1);
 8003f38:	ee18 0a10 	vmov	r0, s16
 8003f3c:	4641      	mov	r1, r8
 8003f3e:	f008 f927 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms2.setPosition(0, 151, 160, 151);
 8003f42:	2097      	movs	r0, #151	; 0x97
 8003f44:	4602      	mov	r2, r0
 8003f46:	4629      	mov	r1, r5
 8003f48:	9000      	str	r0, [sp, #0]
 8003f4a:	23a0      	movs	r3, #160	; 0xa0
 8003f4c:	4650      	mov	r0, sl
 8003f4e:	f7fe fc86 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2.setPosition(5, 36, 150, 108);
 8003f52:	206c      	movs	r0, #108	; 0x6c
 8003f54:	2396      	movs	r3, #150	; 0x96
 8003f56:	2224      	movs	r2, #36	; 0x24
 8003f58:	9000      	str	r0, [sp, #0]
 8003f5a:	2105      	movs	r1, #5
 8003f5c:	984e      	ldr	r0, [sp, #312]	; 0x138
 8003f5e:	f7fe fc7e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f62:	f04f 30ff 	mov.w	r0, #4294967295
    bms2.add(boxbms2);
 8003f66:	994e      	ldr	r1, [sp, #312]	; 0x138
 8003f68:	f8c4 0620 	str.w	r0, [r4, #1568]	; 0x620
 8003f6c:	4650      	mov	r0, sl
 8003f6e:	f008 f90f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms2.setPosition(79, -21, 80, 80);
 8003f72:	464b      	mov	r3, r9
 8003f74:	f06f 0214 	mvn.w	r2, #20
 8003f78:	9826      	ldr	r0, [sp, #152]	; 0x98
 8003f7a:	f8cd 9000 	str.w	r9, [sp]
 8003f7e:	214f      	movs	r1, #79	; 0x4f
 8003f80:	f7fe fc6d 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = CWRUtil::toQ5(r);
 8003f84:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
 8003f88:	f8c4 065c 	str.w	r0, [r4, #1628]	; 0x65c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003f8c:	f44f 5034 	mov.w	r0, #11520	; 0x2d00
 8003f90:	f8c4 0664 	str.w	r0, [r4, #1636]	; 0x664
 8003f94:	f04f 30ff 	mov.w	r0, #4294967295
    circle_bms2.setPainter(circle_bms2Painter);
 8003f98:	9958      	ldr	r1, [sp, #352]	; 0x160
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003f9a:	f8c4 5668 	str.w	r5, [r4, #1640]	; 0x668
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003f9e:	f8c4 5660 	str.w	r5, [r4, #1632]	; 0x660
 8003fa2:	f8c4 0684 	str.w	r0, [r4, #1668]	; 0x684
        this->circleCenterX = CWRUtil::toQ5(x);
 8003fa6:	f8c4 7654 	str.w	r7, [r4, #1620]	; 0x654
 8003faa:	9826      	ldr	r0, [sp, #152]	; 0x98
        this->circleCenterY = CWRUtil::toQ5(y);
 8003fac:	f8c4 7658 	str.w	r7, [r4, #1624]	; 0x658
 8003fb0:	f009 fefa 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms2.add(circle_bms2);
 8003fb4:	9926      	ldr	r1, [sp, #152]	; 0x98
 8003fb6:	4650      	mov	r0, sl
 8003fb8:	f008 f8ea 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setPosition(6, 7, 101, 41);
 8003fbc:	2329      	movs	r3, #41	; 0x29
 8003fbe:	2207      	movs	r2, #7
 8003fc0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8003fc2:	9300      	str	r3, [sp, #0]
 8003fc4:	2106      	movs	r1, #6
 8003fc6:	2365      	movs	r3, #101	; 0x65
 8003fc8:	f7fe fc49 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003fcc:	f04f 30ff 	mov.w	r0, #4294967295
 8003fd0:	f8c4 06b8 	str.w	r0, [r4, #1720]	; 0x6b8
    textArea5_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID32));
 8003fd4:	a862      	add	r0, sp, #392	; 0x188
 8003fd6:	231f      	movs	r3, #31
 8003fd8:	4601      	mov	r1, r0
        linespace = space;
 8003fda:	f8a4 56bc 	strh.w	r5, [r4, #1724]	; 0x6bc
 8003fde:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8003fe0:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8003fe4:	9662      	str	r6, [sp, #392]	; 0x188
 8003fe6:	f00a fc66 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms2.add(textArea5_1);
 8003fea:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003fec:	4650      	mov	r0, sl
 8003fee:	f008 f8cf 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms2.setXY(33, 36);
 8003ff2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003ff4:	2121      	movs	r1, #33	; 0x21
 8003ff6:	2224      	movs	r2, #36	; 0x24
 8003ff8:	f7fe fc24 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ffc:	498b      	ldr	r1, [pc, #556]	; (800422c <_ZN15Screen3ViewBaseC1Ev+0xe74>)
 8003ffe:	f8a4 56f8 	strh.w	r5, [r4, #1784]	; 0x6f8
 8004002:	680b      	ldr	r3, [r1, #0]
        this->color = color;
 8004004:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
    Unicode::snprintf(voltage_bms2Buffer, VOLTAGE_BMS2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID48).getText());
 8004008:	f504 55cd 	add.w	r5, r4, #6560	; 0x19a0
 800400c:	f8c4 06f4 	str.w	r0, [r4, #1780]	; 0x6f4
 8004010:	351c      	adds	r5, #28
 8004012:	2b00      	cmp	r3, #0
 8004014:	f43f ad93 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004018:	4b85      	ldr	r3, [pc, #532]	; (8004230 <_ZN15Screen3ViewBaseC1Ev+0xe78>)
 800401a:	881b      	ldrh	r3, [r3, #0]
 800401c:	2b2f      	cmp	r3, #47	; 0x2f
 800401e:	f67f ad98 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004022:	4a84      	ldr	r2, [pc, #528]	; (8004234 <_ZN15Screen3ViewBaseC1Ev+0xe7c>)
        : typedTextId(id)
 8004024:	4e84      	ldr	r6, [pc, #528]	; (8004238 <_ZN15Screen3ViewBaseC1Ev+0xe80>)
        return texts->getText(typedTextId);
 8004026:	6810      	ldr	r0, [r2, #0]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004028:	f8df 9200 	ldr.w	r9, [pc, #512]	; 800422c <_ZN15Screen3ViewBaseC1Ev+0xe74>
        return texts->getText(typedTextId);
 800402c:	212f      	movs	r1, #47	; 0x2f
 800402e:	f001 fb87 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004032:	4a7d      	ldr	r2, [pc, #500]	; (8004228 <_ZN15Screen3ViewBaseC1Ev+0xe70>)
 8004034:	4603      	mov	r3, r0
 8004036:	210a      	movs	r1, #10
 8004038:	4628      	mov	r0, r5
 800403a:	f00f fb31 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_bms2.resizeToCurrentText();
 800403e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004040:	f8c4 5700 	str.w	r5, [r4, #1792]	; 0x700
 8004044:	f00a fc1a 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004048:	f04f 012e 	mov.w	r1, #46	; 0x2e
    voltage_bms2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID47));
 800404c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800404e:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
 8004052:	a962      	add	r1, sp, #392	; 0x188
 8004054:	9662      	str	r6, [sp, #392]	; 0x188
 8004056:	f00a fc2e 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms2.add(voltage_bms2);
 800405a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800405c:	4650      	mov	r0, sl
 800405e:	f008 f897 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms2.setPosition(38, 90, 44, 47);
 8004062:	212f      	movs	r1, #47	; 0x2f
 8004064:	9100      	str	r1, [sp, #0]
 8004066:	232c      	movs	r3, #44	; 0x2c
 8004068:	9828      	ldr	r0, [sp, #160]	; 0xa0
 800406a:	225a      	movs	r2, #90	; 0x5a
 800406c:	2126      	movs	r1, #38	; 0x26
 800406e:	f7fe fbf6 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004072:	f8d9 3000 	ldr.w	r3, [r9]
 8004076:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
        linespace = space;
 800407a:	2500      	movs	r5, #0
    Unicode::snprintf(temp_bms2Buffer, TEMP_BMS2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID50).getText());
 800407c:	f504 58ce 	add.w	r8, r4, #6592	; 0x19c0
        this->color = color;
 8004080:	f8c4 7734 	str.w	r7, [r4, #1844]	; 0x734
        linespace = space;
 8004084:	f8a4 5738 	strh.w	r5, [r4, #1848]	; 0x738
 8004088:	f108 0810 	add.w	r8, r8, #16
 800408c:	2b00      	cmp	r3, #0
 800408e:	f43f ad56 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004092:	4b67      	ldr	r3, [pc, #412]	; (8004230 <_ZN15Screen3ViewBaseC1Ev+0xe78>)
 8004094:	881b      	ldrh	r3, [r3, #0]
 8004096:	2b31      	cmp	r3, #49	; 0x31
 8004098:	f67f ad5b 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 800409c:	4a65      	ldr	r2, [pc, #404]	; (8004234 <_ZN15Screen3ViewBaseC1Ev+0xe7c>)
 800409e:	2131      	movs	r1, #49	; 0x31
 80040a0:	6810      	ldr	r0, [r2, #0]
 80040a2:	f001 fb4d 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80040a6:	4a60      	ldr	r2, [pc, #384]	; (8004228 <_ZN15Screen3ViewBaseC1Ev+0xe70>)
 80040a8:	4603      	mov	r3, r0
 80040aa:	210a      	movs	r1, #10
 80040ac:	4640      	mov	r0, r8
 80040ae:	f00f faf7 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80040b2:	2330      	movs	r3, #48	; 0x30
    temp_bms2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID49));
 80040b4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80040b6:	f8c4 8740 	str.w	r8, [r4, #1856]	; 0x740
 80040ba:	a962      	add	r1, sp, #392	; 0x188
 80040bc:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80040c0:	9662      	str	r6, [sp, #392]	; 0x188
 80040c2:	f00a fbf8 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms2.add(temp_bms2);
 80040c6:	4650      	mov	r0, sl
 80040c8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80040ca:	f008 f861 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1.setXY(92, 90);
 80040ce:	225a      	movs	r2, #90	; 0x5a
 80040d0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80040d2:	215c      	movs	r1, #92	; 0x5c
 80040d4:	f7fe fbb6 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80040d8:	2332      	movs	r3, #50	; 0x32
    textArea7_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID51));
 80040da:	9829      	ldr	r0, [sp, #164]	; 0xa4
        this->color = color;
 80040dc:	f8c4 7774 	str.w	r7, [r4, #1908]	; 0x774
 80040e0:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 80040e2:	f8a4 5778 	strh.w	r5, [r4, #1912]	; 0x778
 80040e6:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80040ea:	9662      	str	r6, [sp, #392]	; 0x188
 80040ec:	f00a fbe3 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms2.add(textArea7_1);
 80040f0:	4650      	mov	r0, sl
 80040f2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80040f4:	f008 f84c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6.setXY(96, 36);
 80040f8:	2224      	movs	r2, #36	; 0x24
 80040fa:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80040fc:	2160      	movs	r1, #96	; 0x60
 80040fe:	f7fe fba1 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8004102:	f04f 012c 	mov.w	r1, #44	; 0x2c
    textArea6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID45));
 8004106:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8004108:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
        this->color = color;
 800410c:	f8c4 77b0 	str.w	r7, [r4, #1968]	; 0x7b0
 8004110:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004112:	f8a4 57b4 	strh.w	r5, [r4, #1972]	; 0x7b4
 8004116:	9662      	str	r6, [sp, #392]	; 0x188
 8004118:	f00a fbcd 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms2.add(textArea6);
 800411c:	4650      	mov	r0, sl
 800411e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8004120:	f008 f836 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms2);
 8004124:	4651      	mov	r1, sl
 8004126:	ee18 0a10 	vmov	r0, s16
 800412a:	f008 f831 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms4.setPosition(160, 151, 160, 151);
 800412e:	2197      	movs	r1, #151	; 0x97
 8004130:	23a0      	movs	r3, #160	; 0xa0
 8004132:	460a      	mov	r2, r1
 8004134:	ee1a 0a10 	vmov	r0, s20
 8004138:	9100      	str	r1, [sp, #0]
 800413a:	4619      	mov	r1, r3
 800413c:	f7fe fb8f 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_1.setPosition(5, 36, 150, 108);
 8004140:	216c      	movs	r1, #108	; 0x6c
 8004142:	2396      	movs	r3, #150	; 0x96
 8004144:	2224      	movs	r2, #36	; 0x24
 8004146:	f04f 38ff 	mov.w	r8, #4294967295
 800414a:	984f      	ldr	r0, [sp, #316]	; 0x13c
 800414c:	9100      	str	r1, [sp, #0]
 800414e:	2105      	movs	r1, #5
 8004150:	f7fe fb85 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    bms4.add(boxbms2_1);
 8004154:	994f      	ldr	r1, [sp, #316]	; 0x13c
 8004156:	f8c4 8810 	str.w	r8, [r4, #2064]	; 0x810
 800415a:	ee1a 0a10 	vmov	r0, s20
 800415e:	f008 f817 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_1.setPosition(6, 7, 101, 41);
 8004162:	2129      	movs	r1, #41	; 0x29
 8004164:	2207      	movs	r2, #7
 8004166:	982b      	ldr	r0, [sp, #172]	; 0xac
 8004168:	9100      	str	r1, [sp, #0]
 800416a:	2365      	movs	r3, #101	; 0x65
 800416c:	2106      	movs	r1, #6
 800416e:	f7fe fb76 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004172:	2320      	movs	r3, #32
    textArea5_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID33));
 8004174:	982b      	ldr	r0, [sp, #172]	; 0xac
        this->color = color;
 8004176:	f8c4 8844 	str.w	r8, [r4, #2116]	; 0x844
 800417a:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 800417c:	f8a4 5848 	strh.w	r5, [r4, #2120]	; 0x848
 8004180:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004184:	9662      	str	r6, [sp, #392]	; 0x188
 8004186:	f00a fb96 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms4.add(textArea5_1_1);
 800418a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800418c:	ee1a 0a10 	vmov	r0, s20
 8004190:	f007 fffe 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms4.setPosition(79, -21, 80, 80);
 8004194:	2150      	movs	r1, #80	; 0x50
 8004196:	460b      	mov	r3, r1
 8004198:	f06f 0214 	mvn.w	r2, #20
 800419c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800419e:	9100      	str	r1, [sp, #0]
 80041a0:	214f      	movs	r1, #79	; 0x4f
 80041a2:	f7fe fb5c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 80041a6:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80041aa:	f8c4 1880 	str.w	r1, [r4, #2176]	; 0x880
        this->circleCenterY = CWRUtil::toQ5(y);
 80041ae:	f8c4 1884 	str.w	r1, [r4, #2180]	; 0x884
        this->circleRadius = CWRUtil::toQ5(r);
 80041b2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80041b6:	f8c4 1888 	str.w	r1, [r4, #2184]	; 0x888
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80041ba:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
    circle_bms4.setPainter(circle_bms4Painter);
 80041be:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80041c0:	f8c4 1890 	str.w	r1, [r4, #2192]	; 0x890
        this->circleLineWidth = CWRUtil::toQ5(width);
 80041c4:	f8c4 5894 	str.w	r5, [r4, #2196]	; 0x894
 80041c8:	9957      	ldr	r1, [sp, #348]	; 0x15c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80041ca:	f8c4 588c 	str.w	r5, [r4, #2188]	; 0x88c
 80041ce:	f8c4 88b0 	str.w	r8, [r4, #2224]	; 0x8b0
 80041d2:	f009 fde9 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms4.add(circle_bms4);
 80041d6:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80041d8:	ee1a 0a10 	vmov	r0, s20
 80041dc:	f007 ffd8 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms4.setXY(41, 36);
 80041e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041e2:	2224      	movs	r2, #36	; 0x24
 80041e4:	2129      	movs	r1, #41	; 0x29
 80041e6:	f7fe fb2d 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80041ea:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80041ee:	f8c4 78e4 	str.w	r7, [r4, #2276]	; 0x8e4
    Unicode::snprintf(voltage_bms4Buffer, VOLTAGE_BMS4_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID62).getText());
 80041f2:	f504 5acf 	add.w	sl, r4, #6624	; 0x19e0
        linespace = space;
 80041f6:	f8a4 58e8 	strh.w	r5, [r4, #2280]	; 0x8e8
 80041fa:	f10a 0a04 	add.w	sl, sl, #4
 80041fe:	2b00      	cmp	r3, #0
 8004200:	f43f ac9d 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004204:	4b0a      	ldr	r3, [pc, #40]	; (8004230 <_ZN15Screen3ViewBaseC1Ev+0xe78>)
 8004206:	881b      	ldrh	r3, [r3, #0]
 8004208:	2b3d      	cmp	r3, #61	; 0x3d
 800420a:	f67f aca2 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 800420e:	4a09      	ldr	r2, [pc, #36]	; (8004234 <_ZN15Screen3ViewBaseC1Ev+0xe7c>)
 8004210:	213d      	movs	r1, #61	; 0x3d
 8004212:	6810      	ldr	r0, [r2, #0]
 8004214:	f001 fa94 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004218:	4a03      	ldr	r2, [pc, #12]	; (8004228 <_ZN15Screen3ViewBaseC1Ev+0xe70>)
 800421a:	4603      	mov	r3, r0
 800421c:	210a      	movs	r1, #10
 800421e:	4650      	mov	r0, sl
 8004220:	f00f fa3e 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_bms4.resizeToCurrentText();
 8004224:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004226:	e009      	b.n	800423c <_ZN15Screen3ViewBaseC1Ev+0xe84>
 8004228:	08022f1a 	.word	0x08022f1a
 800422c:	2000eb80 	.word	0x2000eb80
 8004230:	2000eb84 	.word	0x2000eb84
 8004234:	2000eb8c 	.word	0x2000eb8c
 8004238:	08022710 	.word	0x08022710
 800423c:	f8c4 a8f0 	str.w	sl, [r4, #2288]	; 0x8f0
 8004240:	f00a fb1c 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004244:	233c      	movs	r3, #60	; 0x3c
    voltage_bms4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID61));
 8004246:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004248:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800424c:	a962      	add	r1, sp, #392	; 0x188
 800424e:	9662      	str	r6, [sp, #392]	; 0x188
 8004250:	f00a fb31 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms4.add(voltage_bms4);
 8004254:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004256:	ee1a 0a10 	vmov	r0, s20
 800425a:	f007 ff99 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms4.setPosition(46, 90, 44, 47);
 800425e:	212f      	movs	r1, #47	; 0x2f
 8004260:	9100      	str	r1, [sp, #0]
 8004262:	232c      	movs	r3, #44	; 0x2c
 8004264:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8004266:	225a      	movs	r2, #90	; 0x5a
 8004268:	212e      	movs	r1, #46	; 0x2e
 800426a:	f7fe faf8 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800426e:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004272:	f8c4 7924 	str.w	r7, [r4, #2340]	; 0x924
    Unicode::snprintf(temp_bms4Buffer, TEMP_BMS4_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID60).getText());
 8004276:	f504 5acf 	add.w	sl, r4, #6624	; 0x19e0
        linespace = space;
 800427a:	f8a4 5928 	strh.w	r5, [r4, #2344]	; 0x928
 800427e:	f10a 0a18 	add.w	sl, sl, #24
 8004282:	2b00      	cmp	r3, #0
 8004284:	f43f ac5b 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004288:	4bd3      	ldr	r3, [pc, #844]	; (80045d8 <_ZN15Screen3ViewBaseC1Ev+0x1220>)
 800428a:	881b      	ldrh	r3, [r3, #0]
 800428c:	2b3b      	cmp	r3, #59	; 0x3b
 800428e:	f67f ac60 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004292:	4ad2      	ldr	r2, [pc, #840]	; (80045dc <_ZN15Screen3ViewBaseC1Ev+0x1224>)
 8004294:	213b      	movs	r1, #59	; 0x3b
 8004296:	6810      	ldr	r0, [r2, #0]
 8004298:	f001 fa52 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800429c:	4ad0      	ldr	r2, [pc, #832]	; (80045e0 <_ZN15Screen3ViewBaseC1Ev+0x1228>)
 800429e:	4603      	mov	r3, r0
 80042a0:	210a      	movs	r1, #10
 80042a2:	4650      	mov	r0, sl
 80042a4:	f00f f9fc 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80042a8:	233a      	movs	r3, #58	; 0x3a
    temp_bms4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID59));
 80042aa:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80042ac:	f8c4 a930 	str.w	sl, [r4, #2352]	; 0x930
 80042b0:	a962      	add	r1, sp, #392	; 0x188
 80042b2:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80042b6:	9662      	str	r6, [sp, #392]	; 0x188
 80042b8:	f00a fafd 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms4.add(temp_bms4);
 80042bc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80042be:	ee1a 0a10 	vmov	r0, s20
 80042c2:	f007 ff65 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_1.setXY(96, 90);
 80042c6:	225a      	movs	r2, #90	; 0x5a
 80042c8:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80042ca:	2160      	movs	r1, #96	; 0x60
 80042cc:	f7fe faba 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80042d0:	233f      	movs	r3, #63	; 0x3f
    textArea7_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID64));
 80042d2:	982e      	ldr	r0, [sp, #184]	; 0xb8
        this->color = color;
 80042d4:	f8c4 7964 	str.w	r7, [r4, #2404]	; 0x964
 80042d8:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 80042da:	f8a4 5968 	strh.w	r5, [r4, #2408]	; 0x968
 80042de:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80042e2:	9662      	str	r6, [sp, #392]	; 0x188
 80042e4:	f00a fae7 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms4.add(textArea7_1_1_1);
 80042e8:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80042ea:	ee1a 0a10 	vmov	r0, s20
 80042ee:	f007 ff4f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_1.setXY(105, 36);
 80042f2:	2224      	movs	r2, #36	; 0x24
 80042f4:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80042f6:	2169      	movs	r1, #105	; 0x69
 80042f8:	f7fe faa4 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80042fc:	233e      	movs	r3, #62	; 0x3e
    textArea6_2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID63));
 80042fe:	982f      	ldr	r0, [sp, #188]	; 0xbc
        this->color = color;
 8004300:	f8c4 79a0 	str.w	r7, [r4, #2464]	; 0x9a0
 8004304:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004306:	f8a4 59a4 	strh.w	r5, [r4, #2468]	; 0x9a4
 800430a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800430e:	9662      	str	r6, [sp, #392]	; 0x188
 8004310:	f00a fad1 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms4.add(textArea6_2_1);
 8004314:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8004316:	ee1a 0a10 	vmov	r0, s20
 800431a:	f007 ff39 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms4);
 800431e:	ee1a 1a10 	vmov	r1, s20
 8004322:	ee18 0a10 	vmov	r0, s16
 8004326:	f007 ff33 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms3.setPosition(159, 7, 160, 151);
 800432a:	2197      	movs	r1, #151	; 0x97
 800432c:	9100      	str	r1, [sp, #0]
 800432e:	23a0      	movs	r3, #160	; 0xa0
 8004330:	2207      	movs	r2, #7
 8004332:	219f      	movs	r1, #159	; 0x9f
 8004334:	4658      	mov	r0, fp
 8004336:	f7fe fa92 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2.setPosition(6, 36, 150, 108);
 800433a:	216c      	movs	r1, #108	; 0x6c
 800433c:	2396      	movs	r3, #150	; 0x96
 800433e:	2224      	movs	r2, #36	; 0x24
 8004340:	9850      	ldr	r0, [sp, #320]	; 0x140
 8004342:	9100      	str	r1, [sp, #0]
 8004344:	2106      	movs	r1, #6
 8004346:	f7fe fa8a 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    bms3.add(boxbms2_2);
 800434a:	9950      	ldr	r1, [sp, #320]	; 0x140
 800434c:	f8c4 8a00 	str.w	r8, [r4, #2560]	; 0xa00
 8004350:	4658      	mov	r0, fp
 8004352:	f007 ff1d 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2.setPosition(6, 7, 101, 41);
 8004356:	2129      	movs	r1, #41	; 0x29
 8004358:	2207      	movs	r2, #7
 800435a:	9830      	ldr	r0, [sp, #192]	; 0xc0
 800435c:	9100      	str	r1, [sp, #0]
 800435e:	2365      	movs	r3, #101	; 0x65
 8004360:	2106      	movs	r1, #6
 8004362:	f7fe fa7c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004366:	2321      	movs	r3, #33	; 0x21
    textArea5_1_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID34));
 8004368:	9830      	ldr	r0, [sp, #192]	; 0xc0
        this->color = color;
 800436a:	f8c4 8a34 	str.w	r8, [r4, #2612]	; 0xa34
 800436e:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004370:	f8a4 5a38 	strh.w	r5, [r4, #2616]	; 0xa38
 8004374:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004378:	9662      	str	r6, [sp, #392]	; 0x188
 800437a:	f00a fa9c 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms3.add(textArea5_1_2);
 800437e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8004380:	4658      	mov	r0, fp
 8004382:	f007 ff05 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms3.setPosition(80, -23, 80, 80);
 8004386:	2150      	movs	r1, #80	; 0x50
 8004388:	460b      	mov	r3, r1
 800438a:	f06f 0216 	mvn.w	r2, #22
 800438e:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8004390:	9100      	str	r1, [sp, #0]
 8004392:	f7fe fa64 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004396:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800439a:	f8c4 1a70 	str.w	r1, [r4, #2672]	; 0xa70
        this->circleCenterY = CWRUtil::toQ5(y);
 800439e:	f8c4 1a74 	str.w	r1, [r4, #2676]	; 0xa74
        this->circleRadius = CWRUtil::toQ5(r);
 80043a2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80043a6:	f8c4 1a78 	str.w	r1, [r4, #2680]	; 0xa78
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80043aa:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
    circle_bms3.setPainter(circle_bms3Painter);
 80043ae:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80043b0:	f8c4 1a80 	str.w	r1, [r4, #2688]	; 0xa80
 80043b4:	f8c4 8aa0 	str.w	r8, [r4, #2720]	; 0xaa0
 80043b8:	9956      	ldr	r1, [sp, #344]	; 0x158
        this->circleLineWidth = CWRUtil::toQ5(width);
 80043ba:	f8c4 5a84 	str.w	r5, [r4, #2692]	; 0xa84
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80043be:	f8c4 5a7c 	str.w	r5, [r4, #2684]	; 0xa7c
 80043c2:	f009 fcf1 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms3.add(circle_bms3);
 80043c6:	9931      	ldr	r1, [sp, #196]	; 0xc4
 80043c8:	4658      	mov	r0, fp
 80043ca:	f007 fee1 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1.setXY(97, 90);
 80043ce:	225a      	movs	r2, #90	; 0x5a
 80043d0:	9832      	ldr	r0, [sp, #200]	; 0xc8
 80043d2:	2161      	movs	r1, #97	; 0x61
 80043d4:	f7fe fa36 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80043d8:	2339      	movs	r3, #57	; 0x39
    textArea7_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID58));
 80043da:	9832      	ldr	r0, [sp, #200]	; 0xc8
        this->color = color;
 80043dc:	f8c4 7ad4 	str.w	r7, [r4, #2772]	; 0xad4
 80043e0:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 80043e2:	f8a4 5ad8 	strh.w	r5, [r4, #2776]	; 0xad8
 80043e6:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80043ea:	9662      	str	r6, [sp, #392]	; 0x188
 80043ec:	f00a fa63 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms3.add(textArea7_1_1);
 80043f0:	9932      	ldr	r1, [sp, #200]	; 0xc8
 80043f2:	4658      	mov	r0, fp
 80043f4:	f007 fecc 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2.setXY(106, 37);
 80043f8:	2225      	movs	r2, #37	; 0x25
 80043fa:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80043fc:	216a      	movs	r1, #106	; 0x6a
 80043fe:	f7fe fa21 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8004402:	2338      	movs	r3, #56	; 0x38
    textArea6_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID57));
 8004404:	9833      	ldr	r0, [sp, #204]	; 0xcc
        this->color = color;
 8004406:	f8c4 7b10 	str.w	r7, [r4, #2832]	; 0xb10
 800440a:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 800440c:	f8a4 5b14 	strh.w	r5, [r4, #2836]	; 0xb14
 8004410:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004414:	9662      	str	r6, [sp, #392]	; 0x188
 8004416:	f00a fa4e 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms3.add(textArea6_2);
 800441a:	9933      	ldr	r1, [sp, #204]	; 0xcc
 800441c:	4658      	mov	r0, fp
 800441e:	f007 feb7 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms3.setPosition(42, 90, 44, 47);
 8004422:	212f      	movs	r1, #47	; 0x2f
 8004424:	9100      	str	r1, [sp, #0]
 8004426:	232c      	movs	r3, #44	; 0x2c
 8004428:	9834      	ldr	r0, [sp, #208]	; 0xd0
 800442a:	225a      	movs	r2, #90	; 0x5a
 800442c:	212a      	movs	r1, #42	; 0x2a
 800442e:	f7fe fa16 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004432:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004436:	f8c4 7b4c 	str.w	r7, [r4, #2892]	; 0xb4c
    Unicode::snprintf(temp_bms3Buffer, TEMP_BMS3_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID56).getText());
 800443a:	f504 58d0 	add.w	r8, r4, #6656	; 0x1a00
        linespace = space;
 800443e:	f8a4 5b50 	strh.w	r5, [r4, #2896]	; 0xb50
 8004442:	f108 080c 	add.w	r8, r8, #12
 8004446:	2b00      	cmp	r3, #0
 8004448:	f43f ab79 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800444c:	4b62      	ldr	r3, [pc, #392]	; (80045d8 <_ZN15Screen3ViewBaseC1Ev+0x1220>)
 800444e:	881b      	ldrh	r3, [r3, #0]
 8004450:	2b37      	cmp	r3, #55	; 0x37
 8004452:	f67f ab7e 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004456:	4a61      	ldr	r2, [pc, #388]	; (80045dc <_ZN15Screen3ViewBaseC1Ev+0x1224>)
 8004458:	2137      	movs	r1, #55	; 0x37
 800445a:	6810      	ldr	r0, [r2, #0]
 800445c:	f001 f970 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004460:	4a5f      	ldr	r2, [pc, #380]	; (80045e0 <_ZN15Screen3ViewBaseC1Ev+0x1228>)
 8004462:	4603      	mov	r3, r0
 8004464:	210a      	movs	r1, #10
 8004466:	4640      	mov	r0, r8
 8004468:	f00f f91a 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800446c:	2336      	movs	r3, #54	; 0x36
    temp_bms3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID55));
 800446e:	9834      	ldr	r0, [sp, #208]	; 0xd0
 8004470:	f8c4 8b58 	str.w	r8, [r4, #2904]	; 0xb58
 8004474:	a962      	add	r1, sp, #392	; 0x188
 8004476:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800447a:	9662      	str	r6, [sp, #392]	; 0x188
 800447c:	f00a fa1b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms3.add(temp_bms3);
 8004480:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8004482:	4658      	mov	r0, fp
 8004484:	f007 fe84 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms3.setXY(42, 37);
 8004488:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800448a:	2225      	movs	r2, #37	; 0x25
 800448c:	212a      	movs	r1, #42	; 0x2a
 800448e:	f7fe f9d9 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004492:	f8d9 3000 	ldr.w	r3, [r9]
 8004496:	f8a4 5b90 	strh.w	r5, [r4, #2960]	; 0xb90
        this->color = color;
 800449a:	f8c4 7b8c 	str.w	r7, [r4, #2956]	; 0xb8c
    Unicode::snprintf(voltage_bms3Buffer, VOLTAGE_BMS3_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID54).getText());
 800449e:	f504 55d1 	add.w	r5, r4, #6688	; 0x1a20
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	f43f ab4b 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80044a8:	4b4b      	ldr	r3, [pc, #300]	; (80045d8 <_ZN15Screen3ViewBaseC1Ev+0x1220>)
 80044aa:	881b      	ldrh	r3, [r3, #0]
 80044ac:	2b35      	cmp	r3, #53	; 0x35
 80044ae:	f67f ab50 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 80044b2:	4a4a      	ldr	r2, [pc, #296]	; (80045dc <_ZN15Screen3ViewBaseC1Ev+0x1224>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044b4:	f8df a12c 	ldr.w	sl, [pc, #300]	; 80045e4 <_ZN15Screen3ViewBaseC1Ev+0x122c>
        return texts->getText(typedTextId);
 80044b8:	6810      	ldr	r0, [r2, #0]
 80044ba:	2135      	movs	r1, #53	; 0x35
 80044bc:	f001 f940 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80044c0:	4a47      	ldr	r2, [pc, #284]	; (80045e0 <_ZN15Screen3ViewBaseC1Ev+0x1228>)
 80044c2:	4603      	mov	r3, r0
 80044c4:	210a      	movs	r1, #10
 80044c6:	4628      	mov	r0, r5
 80044c8:	f00f f8ea 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_bms3.resizeToCurrentText();
 80044cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044ce:	f8c4 5b98 	str.w	r5, [r4, #2968]	; 0xb98
 80044d2:	f00a f9d3 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80044d6:	2334      	movs	r3, #52	; 0x34
    voltage_bms3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID53));
 80044d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044da:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80044de:	a962      	add	r1, sp, #392	; 0x188
 80044e0:	9662      	str	r6, [sp, #392]	; 0x188
 80044e2:	f00a f9e8 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms3.add(voltage_bms3);
 80044e6:	4658      	mov	r0, fp
 80044e8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044ea:	f007 fe51 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms3);
 80044ee:	4659      	mov	r1, fp
 80044f0:	ee18 0a10 	vmov	r0, s16
 80044f4:	f007 fe4c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms5.setPosition(320, 7, 160, 151);
 80044f8:	2197      	movs	r1, #151	; 0x97
 80044fa:	ee1a 0a90 	vmov	r0, s21
 80044fe:	9100      	str	r1, [sp, #0]
 8004500:	23a0      	movs	r3, #160	; 0xa0
 8004502:	2207      	movs	r2, #7
 8004504:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004508:	f7fe f9a9 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_1.setPosition(5, 36, 150, 108);
 800450c:	216c      	movs	r1, #108	; 0x6c
 800450e:	2396      	movs	r3, #150	; 0x96
 8004510:	2224      	movs	r2, #36	; 0x24
 8004512:	f04f 38ff 	mov.w	r8, #4294967295
 8004516:	9851      	ldr	r0, [sp, #324]	; 0x144
 8004518:	9100      	str	r1, [sp, #0]
 800451a:	2105      	movs	r1, #5
 800451c:	f7fe f99f 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    bms5.add(boxbms2_2_1);
 8004520:	9951      	ldr	r1, [sp, #324]	; 0x144
 8004522:	f8c4 8bf0 	str.w	r8, [r4, #3056]	; 0xbf0
 8004526:	ee1a 0a90 	vmov	r0, s21
 800452a:	f007 fe31 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_1.setPosition(6, 7, 101, 41);
 800452e:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8004530:	2500      	movs	r5, #0
 8004532:	2207      	movs	r2, #7
 8004534:	9835      	ldr	r0, [sp, #212]	; 0xd4
 8004536:	9100      	str	r1, [sp, #0]
 8004538:	2365      	movs	r3, #101	; 0x65
 800453a:	2106      	movs	r1, #6
 800453c:	f7fe f98f 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004540:	2322      	movs	r3, #34	; 0x22
    textArea5_1_2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID35));
 8004542:	9835      	ldr	r0, [sp, #212]	; 0xd4
        this->color = color;
 8004544:	f8c4 8c24 	str.w	r8, [r4, #3108]	; 0xc24
 8004548:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 800454a:	f8a4 5c28 	strh.w	r5, [r4, #3112]	; 0xc28
 800454e:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
    circle_bms5.setPosition(81, -23, 80, 80);
 8004552:	f04f 0950 	mov.w	r9, #80	; 0x50
 8004556:	9662      	str	r6, [sp, #392]	; 0x188
    textArea5_1_2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID35));
 8004558:	f00a f9ad 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms5.add(textArea5_1_2_1);
 800455c:	9935      	ldr	r1, [sp, #212]	; 0xd4
 800455e:	ee1a 0a90 	vmov	r0, s21
 8004562:	f007 fe15 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms5.setPosition(81, -23, 80, 80);
 8004566:	464b      	mov	r3, r9
 8004568:	f06f 0216 	mvn.w	r2, #22
 800456c:	9836      	ldr	r0, [sp, #216]	; 0xd8
 800456e:	f8cd 9000 	str.w	r9, [sp]
 8004572:	2151      	movs	r1, #81	; 0x51
 8004574:	f7fe f973 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004578:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800457c:	f8c4 1c60 	str.w	r1, [r4, #3168]	; 0xc60
        this->circleCenterY = CWRUtil::toQ5(y);
 8004580:	f8c4 1c64 	str.w	r1, [r4, #3172]	; 0xc64
        this->circleRadius = CWRUtil::toQ5(r);
 8004584:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004588:	f8c4 1c68 	str.w	r1, [r4, #3176]	; 0xc68
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800458c:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
    circle_bms5.setPainter(circle_bms5Painter);
 8004590:	9836      	ldr	r0, [sp, #216]	; 0xd8
 8004592:	f8c4 1c70 	str.w	r1, [r4, #3184]	; 0xc70
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004596:	f8c4 5c74 	str.w	r5, [r4, #3188]	; 0xc74
 800459a:	9955      	ldr	r1, [sp, #340]	; 0x154
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800459c:	f8c4 5c6c 	str.w	r5, [r4, #3180]	; 0xc6c
 80045a0:	f8c4 8c90 	str.w	r8, [r4, #3216]	; 0xc90
 80045a4:	f009 fc00 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms5.add(circle_bms5);
 80045a8:	9936      	ldr	r1, [sp, #216]	; 0xd8
 80045aa:	ee1a 0a90 	vmov	r0, s21
 80045ae:	f007 fdef 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2.setXY(90, 90);
 80045b2:	225a      	movs	r2, #90	; 0x5a
 80045b4:	4611      	mov	r1, r2
 80045b6:	9837      	ldr	r0, [sp, #220]	; 0xdc
 80045b8:	f7fe f944 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80045bc:	2345      	movs	r3, #69	; 0x45
    textArea7_1_1_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID70));
 80045be:	9837      	ldr	r0, [sp, #220]	; 0xdc
        this->color = color;
 80045c0:	f8c4 7cc4 	str.w	r7, [r4, #3268]	; 0xcc4
 80045c4:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 80045c6:	f8a4 5cc8 	strh.w	r5, [r4, #3272]	; 0xcc8
 80045ca:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80045ce:	9662      	str	r6, [sp, #392]	; 0x188
 80045d0:	f00a f971 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80045d4:	e008      	b.n	80045e8 <_ZN15Screen3ViewBaseC1Ev+0x1230>
 80045d6:	bf00      	nop
 80045d8:	2000eb84 	.word	0x2000eb84
 80045dc:	2000eb8c 	.word	0x2000eb8c
 80045e0:	08022f1a 	.word	0x08022f1a
 80045e4:	2000eb80 	.word	0x2000eb80
    bms5.add(textArea7_1_1_2);
 80045e8:	9937      	ldr	r1, [sp, #220]	; 0xdc
 80045ea:	ee1a 0a90 	vmov	r0, s21
 80045ee:	f007 fdcf 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2.setXY(106, 36);
 80045f2:	2224      	movs	r2, #36	; 0x24
 80045f4:	9838      	ldr	r0, [sp, #224]	; 0xe0
 80045f6:	216a      	movs	r1, #106	; 0x6a
 80045f8:	f7fe f924 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 80045fc:	2344      	movs	r3, #68	; 0x44
    textArea6_2_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID69));
 80045fe:	9838      	ldr	r0, [sp, #224]	; 0xe0
        this->color = color;
 8004600:	f8c4 7d00 	str.w	r7, [r4, #3328]	; 0xd00
 8004604:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004606:	f8a4 5d04 	strh.w	r5, [r4, #3332]	; 0xd04
 800460a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800460e:	9662      	str	r6, [sp, #392]	; 0x188
 8004610:	f00a f951 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms5.add(textArea6_2_2);
 8004614:	9938      	ldr	r1, [sp, #224]	; 0xe0
 8004616:	ee1a 0a90 	vmov	r0, s21
 800461a:	f007 fdb9 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms5.setPosition(44, 90, 44, 47);
 800461e:	232c      	movs	r3, #44	; 0x2c
 8004620:	212f      	movs	r1, #47	; 0x2f
 8004622:	9100      	str	r1, [sp, #0]
 8004624:	9839      	ldr	r0, [sp, #228]	; 0xe4
 8004626:	4619      	mov	r1, r3
 8004628:	225a      	movs	r2, #90	; 0x5a
 800462a:	f7fe f918 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800462e:	f8da 3000 	ldr.w	r3, [sl]
        this->color = color;
 8004632:	f8c4 7d3c 	str.w	r7, [r4, #3388]	; 0xd3c
    Unicode::snprintf(temp_bms5Buffer, TEMP_BMS5_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID68).getText());
 8004636:	f504 5bd1 	add.w	fp, r4, #6688	; 0x1a20
        linespace = space;
 800463a:	f8a4 5d40 	strh.w	r5, [r4, #3392]	; 0xd40
 800463e:	f10b 0b14 	add.w	fp, fp, #20
 8004642:	2b00      	cmp	r3, #0
 8004644:	f43f aa7b 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004648:	4bd2      	ldr	r3, [pc, #840]	; (8004994 <_ZN15Screen3ViewBaseC1Ev+0x15dc>)
 800464a:	881b      	ldrh	r3, [r3, #0]
 800464c:	2b43      	cmp	r3, #67	; 0x43
 800464e:	f67f aa80 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004652:	4ad1      	ldr	r2, [pc, #836]	; (8004998 <_ZN15Screen3ViewBaseC1Ev+0x15e0>)
 8004654:	2143      	movs	r1, #67	; 0x43
 8004656:	6810      	ldr	r0, [r2, #0]
 8004658:	f001 f872 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800465c:	4acf      	ldr	r2, [pc, #828]	; (800499c <_ZN15Screen3ViewBaseC1Ev+0x15e4>)
 800465e:	4603      	mov	r3, r0
 8004660:	210a      	movs	r1, #10
 8004662:	4658      	mov	r0, fp
 8004664:	f00f f81c 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004668:	2342      	movs	r3, #66	; 0x42
    temp_bms5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID67));
 800466a:	9839      	ldr	r0, [sp, #228]	; 0xe4
 800466c:	f8c4 bd48 	str.w	fp, [r4, #3400]	; 0xd48
 8004670:	a962      	add	r1, sp, #392	; 0x188
 8004672:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004676:	9662      	str	r6, [sp, #392]	; 0x188
 8004678:	f00a f91d 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms5.add(temp_bms5);
 800467c:	9939      	ldr	r1, [sp, #228]	; 0xe4
 800467e:	ee1a 0a90 	vmov	r0, s21
 8004682:	f007 fd85 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms5.setXY(39, 36);
 8004686:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004688:	2224      	movs	r2, #36	; 0x24
 800468a:	2127      	movs	r1, #39	; 0x27
 800468c:	f7fe f8da 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004690:	f8da 3000 	ldr.w	r3, [sl]
        this->color = color;
 8004694:	f8c4 7d7c 	str.w	r7, [r4, #3452]	; 0xd7c
    Unicode::snprintf(voltage_bms5Buffer, VOLTAGE_BMS5_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID66).getText());
 8004698:	f504 5bd2 	add.w	fp, r4, #6720	; 0x1a40
        linespace = space;
 800469c:	f8a4 5d80 	strh.w	r5, [r4, #3456]	; 0xd80
 80046a0:	f10b 0b08 	add.w	fp, fp, #8
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	f43f aa4a 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80046aa:	4bba      	ldr	r3, [pc, #744]	; (8004994 <_ZN15Screen3ViewBaseC1Ev+0x15dc>)
 80046ac:	881b      	ldrh	r3, [r3, #0]
 80046ae:	2b41      	cmp	r3, #65	; 0x41
 80046b0:	f67f aa4f 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 80046b4:	4ab8      	ldr	r2, [pc, #736]	; (8004998 <_ZN15Screen3ViewBaseC1Ev+0x15e0>)
 80046b6:	2141      	movs	r1, #65	; 0x41
 80046b8:	6810      	ldr	r0, [r2, #0]
 80046ba:	f001 f841 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80046be:	4ab7      	ldr	r2, [pc, #732]	; (800499c <_ZN15Screen3ViewBaseC1Ev+0x15e4>)
 80046c0:	4603      	mov	r3, r0
 80046c2:	210a      	movs	r1, #10
 80046c4:	4658      	mov	r0, fp
 80046c6:	f00e ffeb 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_bms5.resizeToCurrentText();
 80046ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80046cc:	f8c4 bd88 	str.w	fp, [r4, #3464]	; 0xd88
 80046d0:	f00a f8d4 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80046d4:	2340      	movs	r3, #64	; 0x40
    voltage_bms5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID65));
 80046d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80046d8:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80046dc:	a962      	add	r1, sp, #392	; 0x188
 80046de:	9662      	str	r6, [sp, #392]	; 0x188
 80046e0:	f00a f8e9 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms5.add(voltage_bms5);
 80046e4:	9914      	ldr	r1, [sp, #80]	; 0x50
 80046e6:	ee1a 0a90 	vmov	r0, s21
 80046ea:	f007 fd51 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms5);
 80046ee:	ee1a 1a90 	vmov	r1, s21
 80046f2:	ee18 0a10 	vmov	r0, s16
 80046f6:	f007 fd4b 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms6.setPosition(321, 151, 160, 151);
 80046fa:	2197      	movs	r1, #151	; 0x97
 80046fc:	460a      	mov	r2, r1
 80046fe:	ee1b 0a10 	vmov	r0, s22
 8004702:	9100      	str	r1, [sp, #0]
 8004704:	23a0      	movs	r3, #160	; 0xa0
 8004706:	f240 1141 	movw	r1, #321	; 0x141
 800470a:	f7fe f8a8 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_2.setPosition(4, 36, 150, 108);
 800470e:	216c      	movs	r1, #108	; 0x6c
 8004710:	2396      	movs	r3, #150	; 0x96
 8004712:	2224      	movs	r2, #36	; 0x24
 8004714:	9852      	ldr	r0, [sp, #328]	; 0x148
 8004716:	9100      	str	r1, [sp, #0]
 8004718:	2104      	movs	r1, #4
 800471a:	f7fe f8a0 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    bms6.add(boxbms2_2_2);
 800471e:	9952      	ldr	r1, [sp, #328]	; 0x148
 8004720:	f8c4 8de0 	str.w	r8, [r4, #3552]	; 0xde0
 8004724:	ee1b 0a10 	vmov	r0, s22
 8004728:	f007 fd32 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_2.setPosition(6, 7, 101, 41);
 800472c:	2129      	movs	r1, #41	; 0x29
 800472e:	2207      	movs	r2, #7
 8004730:	983a      	ldr	r0, [sp, #232]	; 0xe8
 8004732:	9100      	str	r1, [sp, #0]
 8004734:	2365      	movs	r3, #101	; 0x65
 8004736:	2106      	movs	r1, #6
 8004738:	f7fe f891 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 800473c:	2323      	movs	r3, #35	; 0x23
    textArea5_1_2_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID36));
 800473e:	983a      	ldr	r0, [sp, #232]	; 0xe8
        this->color = color;
 8004740:	f8c4 8e14 	str.w	r8, [r4, #3604]	; 0xe14
 8004744:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004746:	f8a4 5e18 	strh.w	r5, [r4, #3608]	; 0xe18
 800474a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800474e:	9662      	str	r6, [sp, #392]	; 0x188
 8004750:	f00a f8b1 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms6.add(textArea5_1_2_2);
 8004754:	993a      	ldr	r1, [sp, #232]	; 0xe8
 8004756:	ee1b 0a10 	vmov	r0, s22
 800475a:	f007 fd19 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms6.setPosition(81, -21, 80, 80);
 800475e:	464b      	mov	r3, r9
 8004760:	f06f 0214 	mvn.w	r2, #20
 8004764:	983b      	ldr	r0, [sp, #236]	; 0xec
 8004766:	f8cd 9000 	str.w	r9, [sp]
 800476a:	2151      	movs	r1, #81	; 0x51
 800476c:	f7fe f877 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004770:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004774:	f8c4 1e50 	str.w	r1, [r4, #3664]	; 0xe50
        this->circleCenterY = CWRUtil::toQ5(y);
 8004778:	f8c4 1e54 	str.w	r1, [r4, #3668]	; 0xe54
        this->circleRadius = CWRUtil::toQ5(r);
 800477c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004780:	f8c4 1e58 	str.w	r1, [r4, #3672]	; 0xe58
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004784:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
    circle_bms6.setPainter(circle_bms6Painter);
 8004788:	983b      	ldr	r0, [sp, #236]	; 0xec
 800478a:	f8c4 1e60 	str.w	r1, [r4, #3680]	; 0xe60
        this->circleLineWidth = CWRUtil::toQ5(width);
 800478e:	f8c4 5e64 	str.w	r5, [r4, #3684]	; 0xe64
 8004792:	9954      	ldr	r1, [sp, #336]	; 0x150
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8004794:	f8c4 5e5c 	str.w	r5, [r4, #3676]	; 0xe5c
 8004798:	f8c4 8e80 	str.w	r8, [r4, #3712]	; 0xe80
 800479c:	f009 fb04 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms6.add(circle_bms6);
 80047a0:	993b      	ldr	r1, [sp, #236]	; 0xec
 80047a2:	ee1b 0a10 	vmov	r0, s22
 80047a6:	f007 fcf3 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms6.setPosition(43, 90, 44, 47);
 80047aa:	212f      	movs	r1, #47	; 0x2f
 80047ac:	9100      	str	r1, [sp, #0]
 80047ae:	232c      	movs	r3, #44	; 0x2c
 80047b0:	983c      	ldr	r0, [sp, #240]	; 0xf0
 80047b2:	225a      	movs	r2, #90	; 0x5a
 80047b4:	212b      	movs	r1, #43	; 0x2b
 80047b6:	f7fe f852 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047ba:	f8da 3000 	ldr.w	r3, [sl]
        this->color = color;
 80047be:	f8c4 7eb4 	str.w	r7, [r4, #3764]	; 0xeb4
    Unicode::snprintf(temp_bms6Buffer, TEMP_BMS6_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID76).getText());
 80047c2:	f504 5bd2 	add.w	fp, r4, #6720	; 0x1a40
        linespace = space;
 80047c6:	f8a4 5eb8 	strh.w	r5, [r4, #3768]	; 0xeb8
 80047ca:	f10b 0b1c 	add.w	fp, fp, #28
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	f43f a9b5 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80047d4:	4b6f      	ldr	r3, [pc, #444]	; (8004994 <_ZN15Screen3ViewBaseC1Ev+0x15dc>)
 80047d6:	881b      	ldrh	r3, [r3, #0]
 80047d8:	2b4b      	cmp	r3, #75	; 0x4b
 80047da:	f67f a9ba 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 80047de:	4a6e      	ldr	r2, [pc, #440]	; (8004998 <_ZN15Screen3ViewBaseC1Ev+0x15e0>)
 80047e0:	214b      	movs	r1, #75	; 0x4b
 80047e2:	6810      	ldr	r0, [r2, #0]
 80047e4:	f000 ffac 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80047e8:	4a6c      	ldr	r2, [pc, #432]	; (800499c <_ZN15Screen3ViewBaseC1Ev+0x15e4>)
 80047ea:	4603      	mov	r3, r0
 80047ec:	210a      	movs	r1, #10
 80047ee:	4658      	mov	r0, fp
 80047f0:	f00e ff56 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80047f4:	234a      	movs	r3, #74	; 0x4a
    temp_bms6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID75));
 80047f6:	983c      	ldr	r0, [sp, #240]	; 0xf0
 80047f8:	f8c4 bec0 	str.w	fp, [r4, #3776]	; 0xec0
 80047fc:	a962      	add	r1, sp, #392	; 0x188
 80047fe:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004802:	9662      	str	r6, [sp, #392]	; 0x188
 8004804:	f00a f857 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms6.add(temp_bms6);
 8004808:	993c      	ldr	r1, [sp, #240]	; 0xf0
 800480a:	ee1b 0a10 	vmov	r0, s22
 800480e:	f007 fcbf 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2_1.setXY(105, 36);
 8004812:	2224      	movs	r2, #36	; 0x24
 8004814:	983d      	ldr	r0, [sp, #244]	; 0xf4
 8004816:	2169      	movs	r1, #105	; 0x69
 8004818:	f7fe f814 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 800481c:	2349      	movs	r3, #73	; 0x49
    textArea6_2_2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID74));
 800481e:	983d      	ldr	r0, [sp, #244]	; 0xf4
        this->color = color;
 8004820:	f8c4 7ef4 	str.w	r7, [r4, #3828]	; 0xef4
 8004824:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004826:	f8a4 5ef8 	strh.w	r5, [r4, #3832]	; 0xef8
 800482a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800482e:	9662      	str	r6, [sp, #392]	; 0x188
 8004830:	f00a f841 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms6.add(textArea6_2_2_1);
 8004834:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8004836:	ee1b 0a10 	vmov	r0, s22
 800483a:	f007 fca9 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2_1.setXY(91, 90);
 800483e:	225a      	movs	r2, #90	; 0x5a
 8004840:	983e      	ldr	r0, [sp, #248]	; 0xf8
 8004842:	215b      	movs	r1, #91	; 0x5b
 8004844:	f7fd fffe 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8004848:	2348      	movs	r3, #72	; 0x48
    textArea7_1_1_2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID73));
 800484a:	983e      	ldr	r0, [sp, #248]	; 0xf8
        this->color = color;
 800484c:	f8c4 7f30 	str.w	r7, [r4, #3888]	; 0xf30
 8004850:	a962      	add	r1, sp, #392	; 0x188
        linespace = space;
 8004852:	f8a4 5f34 	strh.w	r5, [r4, #3892]	; 0xf34
 8004856:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 800485a:	9662      	str	r6, [sp, #392]	; 0x188
 800485c:	f00a f82b 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms6.add(textArea7_1_1_2_1);
 8004860:	993e      	ldr	r1, [sp, #248]	; 0xf8
 8004862:	ee1b 0a10 	vmov	r0, s22
 8004866:	f007 fc93 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms6.setXY(38, 36);
 800486a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800486c:	2224      	movs	r2, #36	; 0x24
 800486e:	2126      	movs	r1, #38	; 0x26
 8004870:	f7fd ffe8 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004874:	f8da 3000 	ldr.w	r3, [sl]
        this->color = color;
 8004878:	f8c4 7f6c 	str.w	r7, [r4, #3948]	; 0xf6c
    Unicode::snprintf(voltage_bms6Buffer, VOLTAGE_BMS6_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID72).getText());
 800487c:	f504 5bd3 	add.w	fp, r4, #6752	; 0x1a60
        linespace = space;
 8004880:	f8a4 5f70 	strh.w	r5, [r4, #3952]	; 0xf70
 8004884:	f10b 0b10 	add.w	fp, fp, #16
 8004888:	2b00      	cmp	r3, #0
 800488a:	f43f a958 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800488e:	4b41      	ldr	r3, [pc, #260]	; (8004994 <_ZN15Screen3ViewBaseC1Ev+0x15dc>)
 8004890:	881b      	ldrh	r3, [r3, #0]
 8004892:	2b47      	cmp	r3, #71	; 0x47
 8004894:	f67f a95d 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004898:	4a3f      	ldr	r2, [pc, #252]	; (8004998 <_ZN15Screen3ViewBaseC1Ev+0x15e0>)
 800489a:	2147      	movs	r1, #71	; 0x47
 800489c:	6810      	ldr	r0, [r2, #0]
 800489e:	f000 ff4f 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80048a2:	4a3e      	ldr	r2, [pc, #248]	; (800499c <_ZN15Screen3ViewBaseC1Ev+0x15e4>)
 80048a4:	4603      	mov	r3, r0
 80048a6:	210a      	movs	r1, #10
 80048a8:	4658      	mov	r0, fp
 80048aa:	f00e fef9 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_bms6.resizeToCurrentText();
 80048ae:	9815      	ldr	r0, [sp, #84]	; 0x54
 80048b0:	f8c4 bf78 	str.w	fp, [r4, #3960]	; 0xf78
 80048b4:	f009 ffe2 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80048b8:	2346      	movs	r3, #70	; 0x46
    voltage_bms6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID71));
 80048ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80048bc:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80048c0:	a962      	add	r1, sp, #392	; 0x188
 80048c2:	9662      	str	r6, [sp, #392]	; 0x188
 80048c4:	f009 fff7 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms6.add(voltage_bms6);
 80048c8:	9915      	ldr	r1, [sp, #84]	; 0x54
 80048ca:	ee1b 0a10 	vmov	r0, s22
 80048ce:	f007 fc5f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms6);
 80048d2:	ee1b 1a10 	vmov	r1, s22
 80048d6:	ee18 0a10 	vmov	r0, s16
 80048da:	f007 fc59 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms7.setPosition(481, 7, 160, 151);
 80048de:	2197      	movs	r1, #151	; 0x97
 80048e0:	ee1b 0a90 	vmov	r0, s23
 80048e4:	9100      	str	r1, [sp, #0]
 80048e6:	23a0      	movs	r3, #160	; 0xa0
 80048e8:	2207      	movs	r2, #7
 80048ea:	f240 11e1 	movw	r1, #481	; 0x1e1
 80048ee:	f7fd ffb6 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_3.setPosition(4, 36, 150, 108);
 80048f2:	216c      	movs	r1, #108	; 0x6c
 80048f4:	2396      	movs	r3, #150	; 0x96
 80048f6:	2224      	movs	r2, #36	; 0x24
 80048f8:	9853      	ldr	r0, [sp, #332]	; 0x14c
 80048fa:	9100      	str	r1, [sp, #0]
 80048fc:	2104      	movs	r1, #4
 80048fe:	f7fd ffae 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    bms7.add(boxbms2_2_3);
 8004902:	9953      	ldr	r1, [sp, #332]	; 0x14c
 8004904:	f8c4 8fd0 	str.w	r8, [r4, #4048]	; 0xfd0
 8004908:	ee1b 0a90 	vmov	r0, s23
 800490c:	f007 fc40 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_3.setPosition(6, 7, 101, 41);
 8004910:	2129      	movs	r1, #41	; 0x29
 8004912:	2207      	movs	r2, #7
 8004914:	983f      	ldr	r0, [sp, #252]	; 0xfc
 8004916:	9100      	str	r1, [sp, #0]
 8004918:	2365      	movs	r3, #101	; 0x65
 800491a:	2106      	movs	r1, #6
 800491c:	f7fd ff9f 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004920:	f241 0304 	movw	r3, #4100	; 0x1004
    textArea5_1_2_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID37));
 8004924:	983f      	ldr	r0, [sp, #252]	; 0xfc
 8004926:	f844 8003 	str.w	r8, [r4, r3]
        linespace = space;
 800492a:	f241 0308 	movw	r3, #4104	; 0x1008
 800492e:	9662      	str	r6, [sp, #392]	; 0x188
 8004930:	52e5      	strh	r5, [r4, r3]
 8004932:	2624      	movs	r6, #36	; 0x24
 8004934:	a962      	add	r1, sp, #392	; 0x188
 8004936:	f8ad 618c 	strh.w	r6, [sp, #396]	; 0x18c
 800493a:	f009 ffbc 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms7.add(textArea5_1_2_3);
 800493e:	993f      	ldr	r1, [sp, #252]	; 0xfc
 8004940:	ee1b 0a90 	vmov	r0, s23
 8004944:	f007 fc24 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms7.setPosition(81, -23, 80, 80);
 8004948:	f06f 0216 	mvn.w	r2, #22
 800494c:	9804      	ldr	r0, [sp, #16]
 800494e:	f8cd 9000 	str.w	r9, [sp]
 8004952:	464b      	mov	r3, r9
 8004954:	2151      	movs	r1, #81	; 0x51
 8004956:	f7fd ff82 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 800495a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800495e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004962:	6019      	str	r1, [r3, #0]
        this->circleCenterY = CWRUtil::toQ5(y);
 8004964:	f241 0344 	movw	r3, #4164	; 0x1044
    circle_bms7.setPainter(circle_bms7Painter);
 8004968:	9804      	ldr	r0, [sp, #16]
 800496a:	50e1      	str	r1, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 800496c:	f241 0348 	movw	r3, #4168	; 0x1048
 8004970:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004974:	50e1      	str	r1, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004976:	f241 0354 	movw	r3, #4180	; 0x1054
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800497a:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
        this->circleLineWidth = CWRUtil::toQ5(width);
 800497e:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8004980:	f241 034c 	movw	r3, #4172	; 0x104c
 8004984:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004986:	f241 0350 	movw	r3, #4176	; 0x1050
 800498a:	50e1      	str	r1, [r4, r3]
 800498c:	f241 0370 	movw	r3, #4208	; 0x1070
 8004990:	e006      	b.n	80049a0 <_ZN15Screen3ViewBaseC1Ev+0x15e8>
 8004992:	bf00      	nop
 8004994:	2000eb84 	.word	0x2000eb84
 8004998:	2000eb8c 	.word	0x2000eb8c
 800499c:	08022f1a 	.word	0x08022f1a
 80049a0:	9961      	ldr	r1, [sp, #388]	; 0x184
 80049a2:	f844 8003 	str.w	r8, [r4, r3]
 80049a6:	f009 f9ff 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms7.add(circle_bms7);
 80049aa:	9904      	ldr	r1, [sp, #16]
 80049ac:	ee1b 0a90 	vmov	r0, s23
 80049b0:	f007 fbee 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms7.setXY(42, 36);
 80049b4:	212a      	movs	r1, #42	; 0x2a
 80049b6:	ee1d 0a90 	vmov	r0, s27
 80049ba:	4632      	mov	r2, r6
 80049bc:	f7fd ff42 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80049c0:	f241 03a4 	movw	r3, #4260	; 0x10a4
        linespace = space;
 80049c4:	ee1d 1a90 	vmov	r1, s27
        this->color = color;
 80049c8:	50e7      	str	r7, [r4, r3]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049ca:	f8da 3000 	ldr.w	r3, [sl]
        linespace = space;
 80049ce:	868d      	strh	r5, [r1, #52]	; 0x34
    Unicode::snprintf(voltage_bms7Buffer, VOLTAGE_BMS7_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID82).getText());
 80049d0:	f504 55d4 	add.w	r5, r4, #6784	; 0x1a80
 80049d4:	3504      	adds	r5, #4
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	f43f a8b1 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80049dc:	4bd1      	ldr	r3, [pc, #836]	; (8004d24 <_ZN15Screen3ViewBaseC1Ev+0x196c>)
 80049de:	881b      	ldrh	r3, [r3, #0]
 80049e0:	2b51      	cmp	r3, #81	; 0x51
 80049e2:	f67f a8b6 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 80049e6:	4ad0      	ldr	r2, [pc, #832]	; (8004d28 <_ZN15Screen3ViewBaseC1Ev+0x1970>)
        : typedTextId(id)
 80049e8:	4ed0      	ldr	r6, [pc, #832]	; (8004d2c <_ZN15Screen3ViewBaseC1Ev+0x1974>)
        return texts->getText(typedTextId);
 80049ea:	6810      	ldr	r0, [r2, #0]
 80049ec:	2151      	movs	r1, #81	; 0x51
 80049ee:	f000 fea7 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 80049f2:	4acf      	ldr	r2, [pc, #828]	; (8004d30 <_ZN15Screen3ViewBaseC1Ev+0x1978>)
 80049f4:	4603      	mov	r3, r0
 80049f6:	210a      	movs	r1, #10
 80049f8:	4628      	mov	r0, r5
 80049fa:	f00e fe51 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80049fe:	f241 03b0 	movw	r3, #4272	; 0x10b0
    voltage_bms7.resizeToCurrentText();
 8004a02:	ee1d 0a90 	vmov	r0, s27
 8004a06:	50e5      	str	r5, [r4, r3]
 8004a08:	f009 ff38 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    voltage_bms7.setTypedText(touchgfx::TypedText(T_SINGLEUSEID81));
 8004a0c:	ee1d 0a90 	vmov	r0, s27
 8004a10:	a962      	add	r1, sp, #392	; 0x188
        : typedTextId(id)
 8004a12:	f8ad 918c 	strh.w	r9, [sp, #396]	; 0x18c
 8004a16:	9662      	str	r6, [sp, #392]	; 0x188
 8004a18:	f009 ff4d 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms7.add(voltage_bms7);
 8004a1c:	ee1d 1a90 	vmov	r1, s27
 8004a20:	ee1b 0a90 	vmov	r0, s23
 8004a24:	f007 fbb4 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2_1_1.setXY(97, 90);
 8004a28:	225a      	movs	r2, #90	; 0x5a
 8004a2a:	ee1e 0a90 	vmov	r0, s29
 8004a2e:	2161      	movs	r1, #97	; 0x61
 8004a30:	f7fd ff08 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 8004a34:	ee1e 1a90 	vmov	r1, s29
        this->color = color;
 8004a38:	f241 03e4 	movw	r3, #4324	; 0x10e4
        linespace = space;
 8004a3c:	2500      	movs	r5, #0
        this->color = color;
 8004a3e:	50e7      	str	r7, [r4, r3]
    textArea7_1_1_2_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID80));
 8004a40:	ee1e 0a90 	vmov	r0, s29
 8004a44:	234f      	movs	r3, #79	; 0x4f
        linespace = space;
 8004a46:	868d      	strh	r5, [r1, #52]	; 0x34
 8004a48:	a962      	add	r1, sp, #392	; 0x188
 8004a4a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004a4e:	9662      	str	r6, [sp, #392]	; 0x188
 8004a50:	f009 ff31 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms7.add(textArea7_1_1_2_1_1);
 8004a54:	ee1e 1a90 	vmov	r1, s29
 8004a58:	ee1b 0a90 	vmov	r0, s23
 8004a5c:	f007 fb98 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2_1_1.setXY(107, 37);
 8004a60:	2225      	movs	r2, #37	; 0x25
 8004a62:	ee1f 0a10 	vmov	r0, s30
 8004a66:	216b      	movs	r1, #107	; 0x6b
 8004a68:	f7fd feec 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004a6c:	f504 5389 	add.w	r3, r4, #4384	; 0x1120
        linespace = space;
 8004a70:	ee1f 1a10 	vmov	r1, s30
        this->color = color;
 8004a74:	601f      	str	r7, [r3, #0]
        linespace = space;
 8004a76:	868d      	strh	r5, [r1, #52]	; 0x34
 8004a78:	f04f 014e 	mov.w	r1, #78	; 0x4e
    textArea6_2_2_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID79));
 8004a7c:	ee1f 0a10 	vmov	r0, s30
 8004a80:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
 8004a84:	a962      	add	r1, sp, #392	; 0x188
 8004a86:	9662      	str	r6, [sp, #392]	; 0x188
 8004a88:	f009 ff15 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms7.add(textArea6_2_2_1_1);
 8004a8c:	ee1f 1a10 	vmov	r1, s30
 8004a90:	ee1b 0a90 	vmov	r0, s23
 8004a94:	f007 fb7c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms7.setPosition(47, 90, 44, 47);
 8004a98:	212f      	movs	r1, #47	; 0x2f
 8004a9a:	9100      	str	r1, [sp, #0]
 8004a9c:	232c      	movs	r3, #44	; 0x2c
 8004a9e:	ee1f 0a90 	vmov	r0, s31
 8004aa2:	225a      	movs	r2, #90	; 0x5a
 8004aa4:	f7fd fedb 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004aa8:	46ca      	mov	sl, r9
        this->color = color;
 8004aaa:	f241 135c 	movw	r3, #4444	; 0x115c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004aae:	f8df 9284 	ldr.w	r9, [pc, #644]	; 8004d34 <_ZN15Screen3ViewBaseC1Ev+0x197c>
 8004ab2:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004ab4:	ee1f 1a90 	vmov	r1, s31
 8004ab8:	f8d9 3000 	ldr.w	r3, [r9]
 8004abc:	868d      	strh	r5, [r1, #52]	; 0x34
    Unicode::snprintf(temp_bms7Buffer, TEMP_BMS7_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID78).getText());
 8004abe:	f504 58d4 	add.w	r8, r4, #6784	; 0x1a80
 8004ac2:	f108 0818 	add.w	r8, r8, #24
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	f43f a839 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004acc:	4b95      	ldr	r3, [pc, #596]	; (8004d24 <_ZN15Screen3ViewBaseC1Ev+0x196c>)
 8004ace:	881b      	ldrh	r3, [r3, #0]
 8004ad0:	2b4d      	cmp	r3, #77	; 0x4d
 8004ad2:	f67f a83e 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004ad6:	4a94      	ldr	r2, [pc, #592]	; (8004d28 <_ZN15Screen3ViewBaseC1Ev+0x1970>)
 8004ad8:	214d      	movs	r1, #77	; 0x4d
 8004ada:	6810      	ldr	r0, [r2, #0]
 8004adc:	f000 fe30 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004ae0:	4a93      	ldr	r2, [pc, #588]	; (8004d30 <_ZN15Screen3ViewBaseC1Ev+0x1978>)
 8004ae2:	4603      	mov	r3, r0
 8004ae4:	210a      	movs	r1, #10
 8004ae6:	4640      	mov	r0, r8
 8004ae8:	f00e fdda 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004aec:	f241 1368 	movw	r3, #4456	; 0x1168
    temp_bms7.setTypedText(touchgfx::TypedText(T_SINGLEUSEID77));
 8004af0:	ee1f 0a90 	vmov	r0, s31
 8004af4:	f844 8003 	str.w	r8, [r4, r3]
 8004af8:	a962      	add	r1, sp, #392	; 0x188
        : typedTextId(id)
 8004afa:	234c      	movs	r3, #76	; 0x4c
 8004afc:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004b00:	9662      	str	r6, [sp, #392]	; 0x188
 8004b02:	f009 fed8 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms7.add(temp_bms7);
 8004b06:	ee1f 1a90 	vmov	r1, s31
 8004b0a:	ee1b 0a90 	vmov	r0, s23
 8004b0e:	f007 fb3f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms7);
 8004b12:	ee1b 1a90 	vmov	r1, s23
 8004b16:	ee18 0a10 	vmov	r0, s16
 8004b1a:	f007 fb39 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms8.setPosition(480, 151, 160, 151);
 8004b1e:	2197      	movs	r1, #151	; 0x97
 8004b20:	460a      	mov	r2, r1
 8004b22:	ee18 0a90 	vmov	r0, s17
 8004b26:	9100      	str	r1, [sp, #0]
 8004b28:	23a0      	movs	r3, #160	; 0xa0
 8004b2a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004b2e:	f7fd fe96 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_4.setPosition(5, 36, 150, 108);
 8004b32:	216c      	movs	r1, #108	; 0x6c
 8004b34:	2224      	movs	r2, #36	; 0x24
 8004b36:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004b38:	9100      	str	r1, [sp, #0]
 8004b3a:	2396      	movs	r3, #150	; 0x96
 8004b3c:	2105      	movs	r1, #5
 8004b3e:	f7fd fe8e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b42:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8004b46:	f04f 38ff 	mov.w	r8, #4294967295
    bms8.add(boxbms2_2_4);
 8004b4a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004b4c:	f8c3 8000 	str.w	r8, [r3]
 8004b50:	ee18 0a90 	vmov	r0, s17
 8004b54:	f007 fb1c 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_4.setPosition(11, 7, 101, 41);
 8004b58:	2129      	movs	r1, #41	; 0x29
 8004b5a:	2207      	movs	r2, #7
 8004b5c:	9805      	ldr	r0, [sp, #20]
 8004b5e:	9100      	str	r1, [sp, #0]
 8004b60:	2365      	movs	r3, #101	; 0x65
 8004b62:	210b      	movs	r1, #11
 8004b64:	f7fd fe7b 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004b68:	f241 13f4 	movw	r3, #4596	; 0x11f4
 8004b6c:	f04f 0125 	mov.w	r1, #37	; 0x25
 8004b70:	f844 8003 	str.w	r8, [r4, r3]
        linespace = space;
 8004b74:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
    textArea5_1_2_4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID38));
 8004b78:	9805      	ldr	r0, [sp, #20]
 8004b7a:	871d      	strh	r5, [r3, #56]	; 0x38
 8004b7c:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
 8004b80:	a962      	add	r1, sp, #392	; 0x188
 8004b82:	9662      	str	r6, [sp, #392]	; 0x188
 8004b84:	f009 fe97 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms8.add(textArea5_1_2_4);
 8004b88:	9905      	ldr	r1, [sp, #20]
 8004b8a:	ee18 0a90 	vmov	r0, s17
 8004b8e:	f007 faff 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms8.setPosition(82, -21, 80, 80);
 8004b92:	f06f 0214 	mvn.w	r2, #20
 8004b96:	9840      	ldr	r0, [sp, #256]	; 0x100
 8004b98:	f8cd a000 	str.w	sl, [sp]
 8004b9c:	4653      	mov	r3, sl
 8004b9e:	2152      	movs	r1, #82	; 0x52
 8004ba0:	f7fd fe5d 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004ba4:	f241 2330 	movw	r3, #4656	; 0x1230
 8004ba8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004bac:	50e1      	str	r1, [r4, r3]
        this->circleCenterY = CWRUtil::toQ5(y);
 8004bae:	f241 2334 	movw	r3, #4660	; 0x1234
    circle_bms8.setPainter(circle_bms8Painter);
 8004bb2:	9840      	ldr	r0, [sp, #256]	; 0x100
 8004bb4:	50e1      	str	r1, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 8004bb6:	f241 2338 	movw	r3, #4664	; 0x1238
 8004bba:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004bbe:	50e1      	str	r1, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004bc0:	f241 2344 	movw	r3, #4676	; 0x1244
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004bc4:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004bc8:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8004bca:	f241 233c 	movw	r3, #4668	; 0x123c
    Unicode::snprintf(temp_bms8Buffer, TEMP_BMS8_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID88).getText());
 8004bce:	f504 5bd5 	add.w	fp, r4, #6816	; 0x1aa0
 8004bd2:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004bd4:	f504 5392 	add.w	r3, r4, #4672	; 0x1240
 8004bd8:	f10b 0b0c 	add.w	fp, fp, #12
 8004bdc:	6019      	str	r1, [r3, #0]
 8004bde:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
    circle_bms8.setPainter(circle_bms8Painter);
 8004be2:	9960      	ldr	r1, [sp, #384]	; 0x180
 8004be4:	f8c3 8000 	str.w	r8, [r3]
 8004be8:	f009 f8de 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms8.add(circle_bms8);
 8004bec:	9940      	ldr	r1, [sp, #256]	; 0x100
 8004bee:	ee18 0a90 	vmov	r0, s17
 8004bf2:	f007 facd 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms8.setPosition(48, 90, 44, 47);
 8004bf6:	212f      	movs	r1, #47	; 0x2f
 8004bf8:	9100      	str	r1, [sp, #0]
 8004bfa:	232c      	movs	r3, #44	; 0x2c
 8004bfc:	9806      	ldr	r0, [sp, #24]
 8004bfe:	225a      	movs	r2, #90	; 0x5a
 8004c00:	2130      	movs	r1, #48	; 0x30
 8004c02:	f7fd fe2c 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004c06:	f241 2394 	movw	r3, #4756	; 0x1294
 8004c0a:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004c0c:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 8004c10:	871d      	strh	r5, [r3, #56]	; 0x38
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c12:	f8d9 3000 	ldr.w	r3, [r9]
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	f43e af91 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004c1c:	4b41      	ldr	r3, [pc, #260]	; (8004d24 <_ZN15Screen3ViewBaseC1Ev+0x196c>)
 8004c1e:	881b      	ldrh	r3, [r3, #0]
 8004c20:	2b57      	cmp	r3, #87	; 0x57
 8004c22:	f67e af96 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004c26:	4a40      	ldr	r2, [pc, #256]	; (8004d28 <_ZN15Screen3ViewBaseC1Ev+0x1970>)
 8004c28:	2157      	movs	r1, #87	; 0x57
 8004c2a:	6810      	ldr	r0, [r2, #0]
 8004c2c:	f000 fd88 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(temp_bms8Buffer, TEMP_BMS8_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID88).getText());
 8004c30:	4a3f      	ldr	r2, [pc, #252]	; (8004d30 <_ZN15Screen3ViewBaseC1Ev+0x1978>)
 8004c32:	4603      	mov	r3, r0
 8004c34:	210a      	movs	r1, #10
 8004c36:	4658      	mov	r0, fp
 8004c38:	f00e fd32 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004c3c:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
    temp_bms8.setTypedText(touchgfx::TypedText(T_SINGLEUSEID87));
 8004c40:	9806      	ldr	r0, [sp, #24]
 8004c42:	f8c3 b000 	str.w	fp, [r3]
 8004c46:	a962      	add	r1, sp, #392	; 0x188
        : typedTextId(id)
 8004c48:	2356      	movs	r3, #86	; 0x56
 8004c4a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004c4e:	9662      	str	r6, [sp, #392]	; 0x188
 8004c50:	f009 fe31 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms8.add(temp_bms8);
 8004c54:	9906      	ldr	r1, [sp, #24]
 8004c56:	ee18 0a90 	vmov	r0, s17
 8004c5a:	f007 fa99 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2_1_1_1.setXY(108, 36);
 8004c5e:	2224      	movs	r2, #36	; 0x24
 8004c60:	9807      	ldr	r0, [sp, #28]
 8004c62:	216c      	movs	r1, #108	; 0x6c
 8004c64:	f7fd fdee 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004c68:	f241 23d4 	movw	r3, #4820	; 0x12d4
    textArea6_2_2_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID86));
 8004c6c:	9807      	ldr	r0, [sp, #28]
 8004c6e:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004c70:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8004c74:	a962      	add	r1, sp, #392	; 0x188
 8004c76:	871d      	strh	r5, [r3, #56]	; 0x38
 8004c78:	2355      	movs	r3, #85	; 0x55
 8004c7a:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004c7e:	9662      	str	r6, [sp, #392]	; 0x188
 8004c80:	f009 fe19 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms8.add(textArea6_2_2_1_1_1);
 8004c84:	9907      	ldr	r1, [sp, #28]
 8004c86:	ee18 0a90 	vmov	r0, s17
 8004c8a:	f007 fa81 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2_1_1_1.setXY(98, 90);
 8004c8e:	225a      	movs	r2, #90	; 0x5a
 8004c90:	9841      	ldr	r0, [sp, #260]	; 0x104
 8004c92:	2162      	movs	r1, #98	; 0x62
 8004c94:	f7fd fdd6 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004c98:	f241 3310 	movw	r3, #4880	; 0x1310
    textArea7_1_1_2_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID85));
 8004c9c:	9841      	ldr	r0, [sp, #260]	; 0x104
 8004c9e:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004ca0:	f504 5397 	add.w	r3, r4, #4832	; 0x12e0
 8004ca4:	a962      	add	r1, sp, #392	; 0x188
 8004ca6:	869d      	strh	r5, [r3, #52]	; 0x34
 8004ca8:	2354      	movs	r3, #84	; 0x54
 8004caa:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004cae:	9662      	str	r6, [sp, #392]	; 0x188
 8004cb0:	f009 fe01 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms8.add(textArea7_1_1_2_1_1_1);
 8004cb4:	9941      	ldr	r1, [sp, #260]	; 0x104
 8004cb6:	ee18 0a90 	vmov	r0, s17
 8004cba:	f007 fa69 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms8.setXY(43, 36);
 8004cbe:	9802      	ldr	r0, [sp, #8]
 8004cc0:	2224      	movs	r2, #36	; 0x24
 8004cc2:	212b      	movs	r1, #43	; 0x2b
 8004cc4:	f7fd fdbe 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004cc8:	f241 334c 	movw	r3, #4940	; 0x134c
    Unicode::snprintf(voltage_bms8Buffer, VOLTAGE_BMS8_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID84).getText());
 8004ccc:	f504 5bd6 	add.w	fp, r4, #6848	; 0x1ac0
 8004cd0:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004cd2:	f504 5398 	add.w	r3, r4, #4864	; 0x1300
 8004cd6:	f8a3 5050 	strh.w	r5, [r3, #80]	; 0x50
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004cda:	f8d9 3000 	ldr.w	r3, [r9]
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	f43e af2d 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004ce4:	4b0f      	ldr	r3, [pc, #60]	; (8004d24 <_ZN15Screen3ViewBaseC1Ev+0x196c>)
 8004ce6:	881b      	ldrh	r3, [r3, #0]
 8004ce8:	2b53      	cmp	r3, #83	; 0x53
 8004cea:	f67e af32 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004cee:	4a0e      	ldr	r2, [pc, #56]	; (8004d28 <_ZN15Screen3ViewBaseC1Ev+0x1970>)
 8004cf0:	2153      	movs	r1, #83	; 0x53
 8004cf2:	6810      	ldr	r0, [r2, #0]
 8004cf4:	f000 fd24 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004cf8:	4a0d      	ldr	r2, [pc, #52]	; (8004d30 <_ZN15Screen3ViewBaseC1Ev+0x1978>)
 8004cfa:	4603      	mov	r3, r0
 8004cfc:	210a      	movs	r1, #10
 8004cfe:	4658      	mov	r0, fp
 8004d00:	f00e fcce 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004d04:	f241 3358 	movw	r3, #4952	; 0x1358
    voltage_bms8.resizeToCurrentText();
 8004d08:	9802      	ldr	r0, [sp, #8]
 8004d0a:	f844 b003 	str.w	fp, [r4, r3]
 8004d0e:	f009 fdb5 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d12:	2352      	movs	r3, #82	; 0x52
    voltage_bms8.setTypedText(touchgfx::TypedText(T_SINGLEUSEID83));
 8004d14:	9802      	ldr	r0, [sp, #8]
 8004d16:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004d1a:	a962      	add	r1, sp, #392	; 0x188
 8004d1c:	9662      	str	r6, [sp, #392]	; 0x188
 8004d1e:	f009 fdca 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004d22:	e009      	b.n	8004d38 <_ZN15Screen3ViewBaseC1Ev+0x1980>
 8004d24:	2000eb84 	.word	0x2000eb84
 8004d28:	2000eb8c 	.word	0x2000eb8c
 8004d2c:	08022710 	.word	0x08022710
 8004d30:	08022f1a 	.word	0x08022f1a
 8004d34:	2000eb80 	.word	0x2000eb80
    bms8.add(voltage_bms8);
 8004d38:	9902      	ldr	r1, [sp, #8]
 8004d3a:	ee18 0a90 	vmov	r0, s17
 8004d3e:	f007 fa27 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms8);
 8004d42:	ee18 1a90 	vmov	r1, s17
 8004d46:	ee18 0a10 	vmov	r0, s16
 8004d4a:	f007 fa21 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms9.setPosition(641, 7, 160, 151);
 8004d4e:	2197      	movs	r1, #151	; 0x97
 8004d50:	ee19 0a10 	vmov	r0, s18
 8004d54:	9100      	str	r1, [sp, #0]
 8004d56:	23a0      	movs	r3, #160	; 0xa0
 8004d58:	2207      	movs	r2, #7
 8004d5a:	f240 2181 	movw	r1, #641	; 0x281
 8004d5e:	f7fd fd7e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_5.setPosition(4, 36, 150, 108);
 8004d62:	216c      	movs	r1, #108	; 0x6c
 8004d64:	2224      	movs	r2, #36	; 0x24
 8004d66:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004d68:	9100      	str	r1, [sp, #0]
 8004d6a:	2396      	movs	r3, #150	; 0x96
 8004d6c:	2104      	movs	r1, #4
 8004d6e:	f7fd fd76 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d72:	f241 33b0 	movw	r3, #5040	; 0x13b0
    bms9.add(boxbms2_2_5);
 8004d76:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8004d78:	f844 8003 	str.w	r8, [r4, r3]
 8004d7c:	ee19 0a10 	vmov	r0, s18
 8004d80:	f007 fa06 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_5.setPosition(5, 7, 101, 41);
 8004d84:	2129      	movs	r1, #41	; 0x29
 8004d86:	2207      	movs	r2, #7
 8004d88:	9808      	ldr	r0, [sp, #32]
 8004d8a:	9100      	str	r1, [sp, #0]
 8004d8c:	2365      	movs	r3, #101	; 0x65
 8004d8e:	2105      	movs	r1, #5
 8004d90:	f7fd fd65 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004d94:	f241 33e4 	movw	r3, #5092	; 0x13e4
    textArea5_1_2_5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID39));
 8004d98:	9808      	ldr	r0, [sp, #32]
 8004d9a:	f844 8003 	str.w	r8, [r4, r3]
        linespace = space;
 8004d9e:	f504 539d 	add.w	r3, r4, #5024	; 0x13a0
 8004da2:	a962      	add	r1, sp, #392	; 0x188
 8004da4:	f8a3 5048 	strh.w	r5, [r3, #72]	; 0x48
 8004da8:	2326      	movs	r3, #38	; 0x26
 8004daa:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004dae:	9662      	str	r6, [sp, #392]	; 0x188
 8004db0:	f009 fd81 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms9.add(textArea5_1_2_5);
 8004db4:	9908      	ldr	r1, [sp, #32]
 8004db6:	ee19 0a10 	vmov	r0, s18
 8004dba:	f007 f9e9 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms9.setPosition(78, -23, 80, 80);
 8004dbe:	f06f 0216 	mvn.w	r2, #22
 8004dc2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004dc4:	f8cd a000 	str.w	sl, [sp]
 8004dc8:	4653      	mov	r3, sl
 8004dca:	214e      	movs	r1, #78	; 0x4e
 8004dcc:	f7fd fd47 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004dd0:	f504 53a1 	add.w	r3, r4, #5152	; 0x1420
 8004dd4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004dd8:	6019      	str	r1, [r3, #0]
        this->circleCenterY = CWRUtil::toQ5(y);
 8004dda:	f241 4324 	movw	r3, #5156	; 0x1424
    circle_bms9.setPainter(circle_bms9Painter);
 8004dde:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004de0:	50e1      	str	r1, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 8004de2:	f241 4328 	movw	r3, #5160	; 0x1428
 8004de6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8004dea:	50e1      	str	r1, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004dec:	f241 4334 	movw	r3, #5172	; 0x1434
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004df0:	f44f 5134 	mov.w	r1, #11520	; 0x2d00
        this->circleLineWidth = CWRUtil::toQ5(width);
 8004df4:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8004df6:	f241 432c 	movw	r3, #5164	; 0x142c
 8004dfa:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8004dfc:	f241 4330 	movw	r3, #5168	; 0x1430
 8004e00:	50e1      	str	r1, [r4, r3]
 8004e02:	f241 4350 	movw	r3, #5200	; 0x1450
 8004e06:	995f      	ldr	r1, [sp, #380]	; 0x17c
 8004e08:	f844 8003 	str.w	r8, [r4, r3]
 8004e0c:	f008 ffcc 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms9.add(circle_bms9);
 8004e10:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004e12:	ee19 0a10 	vmov	r0, s18
 8004e16:	f007 f9bb 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2_1_1_1_1.setXY(102, 90);
 8004e1a:	225a      	movs	r2, #90	; 0x5a
 8004e1c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004e1e:	2166      	movs	r1, #102	; 0x66
 8004e20:	f7fd fd10 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004e24:	f241 4384 	movw	r3, #5252	; 0x1484
    textArea7_1_1_2_1_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID92));
 8004e28:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004e2a:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004e2c:	f504 53a2 	add.w	r3, r4, #5184	; 0x1440
 8004e30:	a962      	add	r1, sp, #392	; 0x188
 8004e32:	f8a3 5048 	strh.w	r5, [r3, #72]	; 0x48
 8004e36:	235b      	movs	r3, #91	; 0x5b
 8004e38:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004e3c:	9662      	str	r6, [sp, #392]	; 0x188
 8004e3e:	f009 fd3a 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms9.add(textArea7_1_1_2_1_1_1_1);
 8004e42:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e44:	ee19 0a10 	vmov	r0, s18
 8004e48:	f007 f9a2 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms9.setXY(47, 36);
 8004e4c:	9803      	ldr	r0, [sp, #12]
 8004e4e:	2224      	movs	r2, #36	; 0x24
 8004e50:	212f      	movs	r1, #47	; 0x2f
 8004e52:	f7fd fcf7 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004e56:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
    Unicode::snprintf(voltage_bms9Buffer, VOLTAGE_BMS9_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID94).getText());
 8004e5a:	f10b 0814 	add.w	r8, fp, #20
 8004e5e:	601f      	str	r7, [r3, #0]
        linespace = space;
 8004e60:	f504 53a4 	add.w	r3, r4, #5248	; 0x1480
 8004e64:	f8a3 5044 	strh.w	r5, [r3, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e68:	f8d9 3000 	ldr.w	r3, [r9]
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	f43e ae66 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004e72:	4bcf      	ldr	r3, [pc, #828]	; (80051b0 <_ZN15Screen3ViewBaseC1Ev+0x1df8>)
 8004e74:	881b      	ldrh	r3, [r3, #0]
 8004e76:	2b5d      	cmp	r3, #93	; 0x5d
 8004e78:	f67e ae6b 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004e7c:	4acd      	ldr	r2, [pc, #820]	; (80051b4 <_ZN15Screen3ViewBaseC1Ev+0x1dfc>)
 8004e7e:	215d      	movs	r1, #93	; 0x5d
 8004e80:	6810      	ldr	r0, [r2, #0]
 8004e82:	f000 fc5d 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004e86:	4acc      	ldr	r2, [pc, #816]	; (80051b8 <_ZN15Screen3ViewBaseC1Ev+0x1e00>)
 8004e88:	4603      	mov	r3, r0
 8004e8a:	210a      	movs	r1, #10
 8004e8c:	4640      	mov	r0, r8
 8004e8e:	f00e fc07 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004e92:	f241 43cc 	movw	r3, #5324	; 0x14cc
    voltage_bms9.resizeToCurrentText();
 8004e96:	9803      	ldr	r0, [sp, #12]
 8004e98:	f844 8003 	str.w	r8, [r4, r3]
 8004e9c:	f009 fcee 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004ea0:	235c      	movs	r3, #92	; 0x5c
    voltage_bms9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID93));
 8004ea2:	9803      	ldr	r0, [sp, #12]
 8004ea4:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004ea8:	a962      	add	r1, sp, #392	; 0x188
 8004eaa:	9662      	str	r6, [sp, #392]	; 0x188
 8004eac:	f009 fd03 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms9.add(voltage_bms9);
 8004eb0:	9903      	ldr	r1, [sp, #12]
 8004eb2:	ee19 0a10 	vmov	r0, s18
 8004eb6:	f007 f96b 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2_1_1_1_1.setXY(107, 37);
 8004eba:	2225      	movs	r2, #37	; 0x25
 8004ebc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004ebe:	216b      	movs	r1, #107	; 0x6b
 8004ec0:	f7fd fcc0 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8004ec4:	f504 53a8 	add.w	r3, r4, #5376	; 0x1500
    textArea6_2_2_1_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID91));
 8004ec8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004eca:	601f      	str	r7, [r3, #0]
        linespace = space;
 8004ecc:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 8004ed0:	9662      	str	r6, [sp, #392]	; 0x188
 8004ed2:	f8a3 5044 	strh.w	r5, [r3, #68]	; 0x44
 8004ed6:	265a      	movs	r6, #90	; 0x5a
 8004ed8:	a962      	add	r1, sp, #392	; 0x188
 8004eda:	f8ad 618c 	strh.w	r6, [sp, #396]	; 0x18c
 8004ede:	f009 fcea 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms9.add(textArea6_2_2_1_1_1_1);
 8004ee2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004ee4:	ee19 0a10 	vmov	r0, s18
 8004ee8:	f007 f952 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms9.setPosition(52, 90, 44, 47);
 8004eec:	222f      	movs	r2, #47	; 0x2f
 8004eee:	9200      	str	r2, [sp, #0]
 8004ef0:	232c      	movs	r3, #44	; 0x2c
 8004ef2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004ef4:	4632      	mov	r2, r6
 8004ef6:	2134      	movs	r1, #52	; 0x34
 8004ef8:	f7fd fcb1 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004efc:	f241 533c 	movw	r3, #5436	; 0x153c
 8004f00:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004f02:	f504 53a8 	add.w	r3, r4, #5376	; 0x1500
 8004f06:	f8a3 5040 	strh.w	r5, [r3, #64]	; 0x40
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004f0a:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(temp_bms9Buffer, TEMP_BMS9_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID90).getText());
 8004f0e:	f504 55d7 	add.w	r5, r4, #6880	; 0x1ae0
 8004f12:	3508      	adds	r5, #8
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	f43e ae12 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004f1a:	4ba5      	ldr	r3, [pc, #660]	; (80051b0 <_ZN15Screen3ViewBaseC1Ev+0x1df8>)
 8004f1c:	881b      	ldrh	r3, [r3, #0]
 8004f1e:	2b59      	cmp	r3, #89	; 0x59
 8004f20:	f67e ae17 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8004f24:	f8df 928c 	ldr.w	r9, [pc, #652]	; 80051b4 <_ZN15Screen3ViewBaseC1Ev+0x1dfc>
        : typedTextId(id)
 8004f28:	4ea4      	ldr	r6, [pc, #656]	; (80051bc <_ZN15Screen3ViewBaseC1Ev+0x1e04>)
        return texts->getText(typedTextId);
 8004f2a:	f8d9 0000 	ldr.w	r0, [r9]
 8004f2e:	2159      	movs	r1, #89	; 0x59
 8004f30:	f000 fc06 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8004f34:	4aa0      	ldr	r2, [pc, #640]	; (80051b8 <_ZN15Screen3ViewBaseC1Ev+0x1e00>)
 8004f36:	4603      	mov	r3, r0
 8004f38:	210a      	movs	r1, #10
 8004f3a:	4628      	mov	r0, r5
 8004f3c:	f00e fbb0 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004f40:	f241 5348 	movw	r3, #5448	; 0x1548
    temp_bms9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID89));
 8004f44:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004f46:	50e5      	str	r5, [r4, r3]
 8004f48:	a962      	add	r1, sp, #392	; 0x188
        : typedTextId(id)
 8004f4a:	2358      	movs	r3, #88	; 0x58
 8004f4c:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004f50:	9662      	str	r6, [sp, #392]	; 0x188
 8004f52:	f009 fcb0 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms9.add(temp_bms9);
 8004f56:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004f58:	ee19 0a10 	vmov	r0, s18
 8004f5c:	f007 f918 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BMS.add(bms9);
 8004f60:	ee19 1a10 	vmov	r1, s18
 8004f64:	ee18 0a10 	vmov	r0, s16
 8004f68:	f007 f912 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bms10.setPosition(640, 151, 160, 151);
 8004f6c:	2297      	movs	r2, #151	; 0x97
 8004f6e:	ee19 0a90 	vmov	r0, s19
 8004f72:	9200      	str	r2, [sp, #0]
 8004f74:	23a0      	movs	r3, #160	; 0xa0
 8004f76:	f44f 7120 	mov.w	r1, #640	; 0x280
    boxbms2_2_6.setPosition(5, 36, 150, 108);
 8004f7a:	f04f 0b6c 	mov.w	fp, #108	; 0x6c
    bms10.setPosition(640, 151, 160, 151);
 8004f7e:	f7fd fc6e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
    boxbms2_2_6.setPosition(5, 36, 150, 108);
 8004f82:	2224      	movs	r2, #36	; 0x24
 8004f84:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004f86:	f8cd b000 	str.w	fp, [sp]
 8004f8a:	2396      	movs	r3, #150	; 0x96
 8004f8c:	2105      	movs	r1, #5
 8004f8e:	f7fd fc66 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f92:	f504 53ad 	add.w	r3, r4, #5536	; 0x15a0
 8004f96:	f04f 37ff 	mov.w	r7, #4294967295
 8004f9a:	601f      	str	r7, [r3, #0]
    bms10.add(boxbms2_2_6);
 8004f9c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004f9e:	ee19 0a90 	vmov	r0, s19
 8004fa2:	f007 f8f5 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1_2_6.setPosition(-4, 7, 123, 41);
 8004fa6:	2329      	movs	r3, #41	; 0x29
 8004fa8:	2207      	movs	r2, #7
 8004faa:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004fac:	9300      	str	r3, [sp, #0]
 8004fae:	f06f 0103 	mvn.w	r1, #3
 8004fb2:	237b      	movs	r3, #123	; 0x7b
 8004fb4:	f7fd fc53 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004fb8:	f241 53d4 	movw	r3, #5588	; 0x15d4
        linespace = space;
 8004fbc:	2500      	movs	r5, #0
        this->color = color;
 8004fbe:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8004fc0:	f504 53ad 	add.w	r3, r4, #5536	; 0x15a0
    textArea5_1_2_6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID40));
 8004fc4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004fc6:	871d      	strh	r5, [r3, #56]	; 0x38
 8004fc8:	a962      	add	r1, sp, #392	; 0x188
 8004fca:	2327      	movs	r3, #39	; 0x27
 8004fcc:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8004fd0:	9662      	str	r6, [sp, #392]	; 0x188
 8004fd2:	f009 fc70 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms10.add(textArea5_1_2_6);
 8004fd6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004fd8:	ee19 0a90 	vmov	r0, s19
 8004fdc:	f007 f8d8 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle_bms10.setPosition(82, -21, 80, 80);
 8004fe0:	4653      	mov	r3, sl
 8004fe2:	9842      	ldr	r0, [sp, #264]	; 0x108
 8004fe4:	f8cd a000 	str.w	sl, [sp]
 8004fe8:	f06f 0214 	mvn.w	r2, #20
 8004fec:	2152      	movs	r1, #82	; 0x52
 8004fee:	f7fd fc36 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8004ff2:	f241 6210 	movw	r2, #5648	; 0x1610
 8004ff6:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8004ffa:	50a3      	str	r3, [r4, r2]
        this->circleCenterY = CWRUtil::toQ5(y);
 8004ffc:	f241 6214 	movw	r2, #5652	; 0x1614
    circle_bms10.setPainter(circle_bms10Painter);
 8005000:	995e      	ldr	r1, [sp, #376]	; 0x178
 8005002:	50a3      	str	r3, [r4, r2]
        this->circleRadius = CWRUtil::toQ5(r);
 8005004:	f241 6318 	movw	r3, #5656	; 0x1618
 8005008:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800500c:	50e2      	str	r2, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 800500e:	f241 6324 	movw	r3, #5668	; 0x1624
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005012:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleLineWidth = CWRUtil::toQ5(width);
 8005016:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005018:	f241 631c 	movw	r3, #5660	; 0x161c
 800501c:	9842      	ldr	r0, [sp, #264]	; 0x108
 800501e:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005020:	f504 53b1 	add.w	r3, r4, #5664	; 0x1620
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005024:	f8df a198 	ldr.w	sl, [pc, #408]	; 80051c0 <_ZN15Screen3ViewBaseC1Ev+0x1e08>
 8005028:	601a      	str	r2, [r3, #0]
 800502a:	f504 53b2 	add.w	r3, r4, #5696	; 0x1640
    Unicode::snprintf(temp_bms10Buffer, TEMP_BMS10_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID100).getText());
 800502e:	f504 58d7 	add.w	r8, r4, #6880	; 0x1ae0
 8005032:	601f      	str	r7, [r3, #0]
    circle_bms10.setPainter(circle_bms10Painter);
 8005034:	f008 feb8 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    bms10.add(circle_bms10);
 8005038:	9942      	ldr	r1, [sp, #264]	; 0x108
 800503a:	ee19 0a90 	vmov	r0, s19
 800503e:	f007 f8a7 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_bms10.setPosition(53, 90, 44, 47);
 8005042:	232f      	movs	r3, #47	; 0x2f
 8005044:	9300      	str	r3, [sp, #0]
 8005046:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005048:	232c      	movs	r3, #44	; 0x2c
 800504a:	225a      	movs	r2, #90	; 0x5a
 800504c:	2135      	movs	r1, #53	; 0x35
 800504e:	f7fd fc06 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8005052:	f241 6374 	movw	r3, #5748	; 0x1674
 8005056:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 800505a:	50e7      	str	r7, [r4, r3]
        linespace = space;
 800505c:	f504 53b2 	add.w	r3, r4, #5696	; 0x1640
    Unicode::snprintf(temp_bms10Buffer, TEMP_BMS10_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID100).getText());
 8005060:	f108 081c 	add.w	r8, r8, #28
 8005064:	871d      	strh	r5, [r3, #56]	; 0x38
 8005066:	f8da 3000 	ldr.w	r3, [sl]
 800506a:	2b00      	cmp	r3, #0
 800506c:	f43e ad67 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005070:	4b4f      	ldr	r3, [pc, #316]	; (80051b0 <_ZN15Screen3ViewBaseC1Ev+0x1df8>)
 8005072:	881b      	ldrh	r3, [r3, #0]
 8005074:	2b63      	cmp	r3, #99	; 0x63
 8005076:	f67e ad6c 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 800507a:	2163      	movs	r1, #99	; 0x63
 800507c:	f8d9 0000 	ldr.w	r0, [r9]
 8005080:	f000 fb5e 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 8005084:	4a4c      	ldr	r2, [pc, #304]	; (80051b8 <_ZN15Screen3ViewBaseC1Ev+0x1e00>)
 8005086:	4603      	mov	r3, r0
 8005088:	210a      	movs	r1, #10
 800508a:	4640      	mov	r0, r8
 800508c:	f00e fb08 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005090:	f504 53b4 	add.w	r3, r4, #5760	; 0x1680
    temp_bms10.setTypedText(touchgfx::TypedText(T_SINGLEUSEID99));
 8005094:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005096:	f8c3 8000 	str.w	r8, [r3]
 800509a:	a962      	add	r1, sp, #392	; 0x188
        : typedTextId(id)
 800509c:	2362      	movs	r3, #98	; 0x62
 800509e:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80050a2:	9662      	str	r6, [sp, #392]	; 0x188
 80050a4:	f009 fc07 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms10.add(temp_bms10);
 80050a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80050aa:	ee19 0a90 	vmov	r0, s19
 80050ae:	f007 f86f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea6_2_2_1_1_1_1_1.setXY(108, 36);
 80050b2:	2224      	movs	r2, #36	; 0x24
 80050b4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80050b6:	4659      	mov	r1, fp
 80050b8:	f7fd fbc4 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80050bc:	f241 63b4 	movw	r3, #5812	; 0x16b4
    textArea6_2_2_1_1_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID98));
 80050c0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80050c2:	50e7      	str	r7, [r4, r3]
        linespace = space;
 80050c4:	f504 53b4 	add.w	r3, r4, #5760	; 0x1680
 80050c8:	a962      	add	r1, sp, #392	; 0x188
 80050ca:	871d      	strh	r5, [r3, #56]	; 0x38
 80050cc:	2361      	movs	r3, #97	; 0x61
 80050ce:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 80050d2:	9662      	str	r6, [sp, #392]	; 0x188
 80050d4:	f009 fbef 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms10.add(textArea6_2_2_1_1_1_1_1);
 80050d8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80050da:	ee19 0a90 	vmov	r0, s19
 80050de:	f007 f857 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_bms10.setXY(48, 36);
 80050e2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80050e4:	2224      	movs	r2, #36	; 0x24
 80050e6:	2130      	movs	r1, #48	; 0x30
 80050e8:	f7fd fbac 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80050ec:	f241 63f0 	movw	r3, #5872	; 0x16f0
    Unicode::snprintf(voltage_bms10Buffer, VOLTAGE_BMS10_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID97).getText());
 80050f0:	f504 58d8 	add.w	r8, r4, #6912	; 0x1b00
 80050f4:	50e7      	str	r7, [r4, r3]
        linespace = space;
 80050f6:	f504 53b6 	add.w	r3, r4, #5824	; 0x16c0
 80050fa:	f108 0810 	add.w	r8, r8, #16
 80050fe:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005100:	f8da 3000 	ldr.w	r3, [sl]
 8005104:	2b00      	cmp	r3, #0
 8005106:	f43e ad1a 	beq.w	8003b3e <_ZN15Screen3ViewBaseC1Ev+0x786>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800510a:	4b29      	ldr	r3, [pc, #164]	; (80051b0 <_ZN15Screen3ViewBaseC1Ev+0x1df8>)
 800510c:	881b      	ldrh	r3, [r3, #0]
 800510e:	2b60      	cmp	r3, #96	; 0x60
 8005110:	f67e ad1f 	bls.w	8003b52 <_ZN15Screen3ViewBaseC1Ev+0x79a>
        return texts->getText(typedTextId);
 8005114:	f8d9 0000 	ldr.w	r0, [r9]
 8005118:	2160      	movs	r1, #96	; 0x60
 800511a:	f000 fb11 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800511e:	4a26      	ldr	r2, [pc, #152]	; (80051b8 <_ZN15Screen3ViewBaseC1Ev+0x1e00>)
 8005120:	4603      	mov	r3, r0
 8005122:	210a      	movs	r1, #10
 8005124:	4640      	mov	r0, r8
 8005126:	f00e fabb 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800512a:	f241 63fc 	movw	r3, #5884	; 0x16fc
    voltage_bms10.resizeToCurrentText();
 800512e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005130:	f844 8003 	str.w	r8, [r4, r3]
 8005134:	f009 fba2 	bl	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005138:	235f      	movs	r3, #95	; 0x5f
    voltage_bms10.setTypedText(touchgfx::TypedText(T_SINGLEUSEID96));
 800513a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800513c:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8005140:	a962      	add	r1, sp, #392	; 0x188
 8005142:	9662      	str	r6, [sp, #392]	; 0x188
 8005144:	f009 fbb7 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms10.add(voltage_bms10);
 8005148:	9919      	ldr	r1, [sp, #100]	; 0x64
 800514a:	ee19 0a90 	vmov	r0, s19
 800514e:	f007 f81f 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea7_1_1_2_1_1_1_1_1.setXY(103, 90);
 8005152:	225a      	movs	r2, #90	; 0x5a
 8005154:	9843      	ldr	r0, [sp, #268]	; 0x10c
 8005156:	2167      	movs	r1, #103	; 0x67
 8005158:	f7fd fb74 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 800515c:	f241 7330 	movw	r3, #5936	; 0x1730
    textArea7_1_1_2_1_1_1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID95));
 8005160:	9843      	ldr	r0, [sp, #268]	; 0x10c
 8005162:	50e7      	str	r7, [r4, r3]
        linespace = space;
 8005164:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8005168:	a962      	add	r1, sp, #392	; 0x188
 800516a:	869d      	strh	r5, [r3, #52]	; 0x34
 800516c:	235e      	movs	r3, #94	; 0x5e
 800516e:	f8ad 318c 	strh.w	r3, [sp, #396]	; 0x18c
 8005172:	9662      	str	r6, [sp, #392]	; 0x188
 8005174:	f009 fb9f 	bl	800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    bms10.add(textArea7_1_1_2_1_1_1_1_1);
 8005178:	9943      	ldr	r1, [sp, #268]	; 0x10c
 800517a:	ee19 0a90 	vmov	r0, s19
 800517e:	f007 f807 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(155, 162, 33, 314);
 8005182:	f44f 779d 	mov.w	r7, #314	; 0x13a
    BMS.add(bms10);
 8005186:	ee19 1a90 	vmov	r1, s19
 800518a:	ee18 0a10 	vmov	r0, s16
 800518e:	f006 ffff 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(155, 162, 33, 314);
 8005192:	ee1c 0a10 	vmov	r0, s24
 8005196:	22a2      	movs	r2, #162	; 0xa2
 8005198:	9700      	str	r7, [sp, #0]
 800519a:	2321      	movs	r3, #33	; 0x21
 800519c:	219b      	movs	r1, #155	; 0x9b
 800519e:	f7fd fb5e 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 80051a2:	f241 73c4 	movw	r3, #6084	; 0x17c4
 80051a6:	f04f 26ff 	mov.w	r6, #4278255360	; 0xff00ff00
 80051aa:	50e6      	str	r6, [r4, r3]
    line1.setPainter(line1Painter);
 80051ac:	995d      	ldr	r1, [sp, #372]	; 0x174
 80051ae:	e009      	b.n	80051c4 <_ZN15Screen3ViewBaseC1Ev+0x1e0c>
 80051b0:	2000eb84 	.word	0x2000eb84
 80051b4:	2000eb8c 	.word	0x2000eb8c
 80051b8:	08022f1a 	.word	0x08022f1a
 80051bc:	08022710 	.word	0x08022710
 80051c0:	2000eb80 	.word	0x2000eb80
 80051c4:	ee1c 0a10 	vmov	r0, s24
 80051c8:	f008 fdee 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80051cc:	ee1c 0a10 	vmov	r0, s24
 80051d0:	4629      	mov	r1, r5
 80051d2:	f44f 6208 	mov.w	r2, #2176	; 0x880
 80051d6:	f009 f8cb 	bl	800e370 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80051da:	f44f 5217 	mov.w	r2, #9664	; 0x25c0
 80051de:	ee1c 0a10 	vmov	r0, s24
 80051e2:	4629      	mov	r1, r5
 80051e4:	f009 f8cf 	bl	800e386 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1.setLineWidth(20);
 80051e8:	ee1c 0a10 	vmov	r0, s24
 80051ec:	2114      	movs	r1, #20
 80051ee:	f7fe f8d3 	bl	8003398 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
 80051f2:	ee1c 0a10 	vmov	r0, s24
 80051f6:	2102      	movs	r1, #2
 80051f8:	f009 f8d0 	bl	800e39c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_1.setPosition(315, 162, 33, 314);
 80051fc:	ee1c 0a90 	vmov	r0, s25
 8005200:	22a2      	movs	r2, #162	; 0xa2
 8005202:	9700      	str	r7, [sp, #0]
 8005204:	2321      	movs	r3, #33	; 0x21
 8005206:	f240 113b 	movw	r1, #315	; 0x13b
 800520a:	f7fd fb28 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 800520e:	f641 0350 	movw	r3, #6224	; 0x1850
    line1_1.setPainter(line1_1Painter);
 8005212:	995c      	ldr	r1, [sp, #368]	; 0x170
 8005214:	50e6      	str	r6, [r4, r3]
 8005216:	ee1c 0a90 	vmov	r0, s25
 800521a:	f008 fdc5 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800521e:	ee1c 0a90 	vmov	r0, s25
 8005222:	4629      	mov	r1, r5
 8005224:	f44f 6208 	mov.w	r2, #2176	; 0x880
 8005228:	f009 f8a2 	bl	800e370 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800522c:	f44f 5217 	mov.w	r2, #9664	; 0x25c0
 8005230:	ee1c 0a90 	vmov	r0, s25
 8005234:	4629      	mov	r1, r5
 8005236:	f009 f8a6 	bl	800e386 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_1.setLineWidth(20);
 800523a:	ee1c 0a90 	vmov	r0, s25
 800523e:	2114      	movs	r1, #20
 8005240:	f7fe f8aa 	bl	8003398 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
 8005244:	ee1c 0a90 	vmov	r0, s25
 8005248:	2102      	movs	r1, #2
 800524a:	f009 f8a7 	bl	800e39c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_2.setPosition(475, 162, 33, 314);
 800524e:	ee1d 0a10 	vmov	r0, s26
 8005252:	22a2      	movs	r2, #162	; 0xa2
 8005254:	9700      	str	r7, [sp, #0]
 8005256:	2321      	movs	r3, #33	; 0x21
 8005258:	f240 11db 	movw	r1, #475	; 0x1db
 800525c:	f7fd faff 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 8005260:	f641 03dc 	movw	r3, #6364	; 0x18dc
    line1_2.setPainter(line1_2Painter);
 8005264:	995b      	ldr	r1, [sp, #364]	; 0x16c
 8005266:	50e6      	str	r6, [r4, r3]
 8005268:	ee1d 0a10 	vmov	r0, s26
 800526c:	f008 fd9c 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005270:	ee1d 0a10 	vmov	r0, s26
 8005274:	4629      	mov	r1, r5
 8005276:	f44f 6208 	mov.w	r2, #2176	; 0x880
 800527a:	f009 f879 	bl	800e370 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800527e:	f44f 5217 	mov.w	r2, #9664	; 0x25c0
 8005282:	ee1d 0a10 	vmov	r0, s26
 8005286:	4629      	mov	r1, r5
 8005288:	f009 f87d 	bl	800e386 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_2.setLineWidth(20);
 800528c:	ee1d 0a10 	vmov	r0, s26
 8005290:	2114      	movs	r1, #20
 8005292:	f7fe f881 	bl	8003398 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
 8005296:	ee1d 0a10 	vmov	r0, s26
 800529a:	2102      	movs	r1, #2
 800529c:	f009 f87e 	bl	800e39c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line1_3.setPosition(635, 162, 33, 314);
 80052a0:	ee1e 0a10 	vmov	r0, s28
 80052a4:	22a2      	movs	r2, #162	; 0xa2
 80052a6:	9700      	str	r7, [sp, #0]
 80052a8:	2321      	movs	r3, #33	; 0x21
 80052aa:	f240 217b 	movw	r1, #635	; 0x27b
 80052ae:	f7fd fad6 	bl	800285e <_ZN8touchgfx8Drawable11setPositionEssss>
 80052b2:	f641 1368 	movw	r3, #6504	; 0x1968
    line1_3.setPainter(line1_3Painter);
 80052b6:	995a      	ldr	r1, [sp, #360]	; 0x168
 80052b8:	50e6      	str	r6, [r4, r3]
 80052ba:	ee1e 0a10 	vmov	r0, s28
 80052be:	f008 fd73 	bl	800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80052c2:	ee1e 0a10 	vmov	r0, s28
 80052c6:	4629      	mov	r1, r5
 80052c8:	f44f 6208 	mov.w	r2, #2176	; 0x880
 80052cc:	f009 f850 	bl	800e370 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80052d0:	f44f 5217 	mov.w	r2, #9664	; 0x25c0
 80052d4:	ee1e 0a10 	vmov	r0, s28
 80052d8:	4629      	mov	r1, r5
 80052da:	f009 f854 	bl	800e386 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
    line1_3.setLineWidth(20);
 80052de:	ee1e 0a10 	vmov	r0, s28
 80052e2:	2114      	movs	r1, #20
 80052e4:	1d25      	adds	r5, r4, #4
 80052e6:	f7fe f857 	bl	8003398 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_3.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
 80052ea:	ee1e 0a10 	vmov	r0, s28
 80052ee:	2102      	movs	r1, #2
 80052f0:	f009 f854 	bl	800e39c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80052f4:	9944      	ldr	r1, [sp, #272]	; 0x110
 80052f6:	4628      	mov	r0, r5
 80052f8:	f006 ff4a 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80052fc:	9945      	ldr	r1, [sp, #276]	; 0x114
 80052fe:	4628      	mov	r0, r5
 8005300:	f006 ff46 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005304:	9946      	ldr	r1, [sp, #280]	; 0x118
 8005306:	4628      	mov	r0, r5
 8005308:	f006 ff42 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800530c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800530e:	4628      	mov	r0, r5
 8005310:	f006 ff3e 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005314:	9947      	ldr	r1, [sp, #284]	; 0x11c
 8005316:	4628      	mov	r0, r5
 8005318:	f006 ff3a 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800531c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800531e:	4628      	mov	r0, r5
 8005320:	f006 ff36 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005324:	991c      	ldr	r1, [sp, #112]	; 0x70
 8005326:	4628      	mov	r0, r5
 8005328:	f006 ff32 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800532c:	991d      	ldr	r1, [sp, #116]	; 0x74
 800532e:	4628      	mov	r0, r5
 8005330:	f006 ff2e 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005334:	991e      	ldr	r1, [sp, #120]	; 0x78
 8005336:	4628      	mov	r0, r5
 8005338:	f006 ff2a 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800533c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 800533e:	4628      	mov	r0, r5
 8005340:	f006 ff26 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005344:	9920      	ldr	r1, [sp, #128]	; 0x80
 8005346:	4628      	mov	r0, r5
 8005348:	f006 ff22 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800534c:	ee18 1a10 	vmov	r1, s16
 8005350:	4628      	mov	r0, r5
 8005352:	f006 ff1d 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005356:	ee1c 1a10 	vmov	r1, s24
 800535a:	4628      	mov	r0, r5
 800535c:	f006 ff18 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005360:	ee1c 1a90 	vmov	r1, s25
 8005364:	4628      	mov	r0, r5
 8005366:	f006 ff13 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800536a:	ee1d 1a10 	vmov	r1, s26
 800536e:	4628      	mov	r0, r5
 8005370:	f006 ff0e 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005374:	4628      	mov	r0, r5
 8005376:	ee1e 1a10 	vmov	r1, s28
 800537a:	f006 ff09 	bl	800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800537e:	4620      	mov	r0, r4
 8005380:	b065      	add	sp, #404	; 0x194
 8005382:	ecbd 8b10 	vpop	{d8-d15}
 8005386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800538a:	bf00      	nop

0800538c <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_25_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_25_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_25_4bpp(glyphs_ROCK_TTF_25_4bpp, 14, 25, 0, 4, 1, 0, 0, unicodes_ROCK_TTF_25_4bpp, kerning_ROCK_TTF_25_4bpp, 63, 0, 0, 0);
 800538c:	4770      	bx	lr
	...

08005390 <_Z24getFont_ROCK_TTF_25_4bppv>:
{
 8005390:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_25_4bpp(glyphs_ROCK_TTF_25_4bpp, 14, 25, 0, 4, 1, 0, 0, unicodes_ROCK_TTF_25_4bpp, kerning_ROCK_TTF_25_4bpp, 63, 0, 0, 0);
 8005392:	4d15      	ldr	r5, [pc, #84]	; (80053e8 <_Z24getFont_ROCK_TTF_25_4bppv+0x58>)
 8005394:	782c      	ldrb	r4, [r5, #0]
 8005396:	f3bf 8f5b 	dmb	ish
 800539a:	f014 0401 	ands.w	r4, r4, #1
{
 800539e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_25_4bpp(glyphs_ROCK_TTF_25_4bpp, 14, 25, 0, 4, 1, 0, 0, unicodes_ROCK_TTF_25_4bpp, kerning_ROCK_TTF_25_4bpp, 63, 0, 0, 0);
 80053a0:	d11f      	bne.n	80053e2 <_Z24getFont_ROCK_TTF_25_4bppv+0x52>
 80053a2:	4628      	mov	r0, r5
 80053a4:	f01b fd1f 	bl	8020de6 <__cxa_guard_acquire>
 80053a8:	b1d8      	cbz	r0, 80053e2 <_Z24getFont_ROCK_TTF_25_4bppv+0x52>
 80053aa:	233f      	movs	r3, #63	; 0x3f
 80053ac:	9307      	str	r3, [sp, #28]
 80053ae:	4b0f      	ldr	r3, [pc, #60]	; (80053ec <_Z24getFont_ROCK_TTF_25_4bppv+0x5c>)
 80053b0:	9306      	str	r3, [sp, #24]
 80053b2:	4b0f      	ldr	r3, [pc, #60]	; (80053f0 <_Z24getFont_ROCK_TTF_25_4bppv+0x60>)
 80053b4:	490f      	ldr	r1, [pc, #60]	; (80053f4 <_Z24getFont_ROCK_TTF_25_4bppv+0x64>)
 80053b6:	4810      	ldr	r0, [pc, #64]	; (80053f8 <_Z24getFont_ROCK_TTF_25_4bppv+0x68>)
 80053b8:	9408      	str	r4, [sp, #32]
 80053ba:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80053be:	2201      	movs	r2, #1
 80053c0:	2304      	movs	r3, #4
 80053c2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80053c6:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80053ca:	2319      	movs	r3, #25
 80053cc:	220e      	movs	r2, #14
 80053ce:	9403      	str	r4, [sp, #12]
 80053d0:	9400      	str	r4, [sp, #0]
 80053d2:	f7fd f9b5 	bl	8002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80053d6:	4628      	mov	r0, r5
 80053d8:	f01b fd11 	bl	8020dfe <__cxa_guard_release>
 80053dc:	4807      	ldr	r0, [pc, #28]	; (80053fc <_Z24getFont_ROCK_TTF_25_4bppv+0x6c>)
 80053de:	f01b fd4d 	bl	8020e7c <atexit>
    return ROCK_TTF_25_4bpp;
}
 80053e2:	4805      	ldr	r0, [pc, #20]	; (80053f8 <_Z24getFont_ROCK_TTF_25_4bppv+0x68>)
 80053e4:	b00d      	add	sp, #52	; 0x34
 80053e6:	bd30      	pop	{r4, r5, pc}
 80053e8:	20005a90 	.word	0x20005a90
 80053ec:	0802602c 	.word	0x0802602c
 80053f0:	08022fbc 	.word	0x08022fbc
 80053f4:	9002913c 	.word	0x9002913c
 80053f8:	20005a94 	.word	0x20005a94
 80053fc:	0800538d 	.word	0x0800538d

08005400 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_300_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_300_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 8005400:	4770      	bx	lr
	...

08005404 <_Z25getFont_ROCK_TTF_300_4bppv>:
{
 8005404:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 8005406:	4d16      	ldr	r5, [pc, #88]	; (8005460 <_Z25getFont_ROCK_TTF_300_4bppv+0x5c>)
 8005408:	782c      	ldrb	r4, [r5, #0]
 800540a:	f3bf 8f5b 	dmb	ish
 800540e:	f014 0401 	ands.w	r4, r4, #1
{
 8005412:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_300_4bpp(glyphs_ROCK_TTF_300_4bpp, 11, 300, 3, 4, 1, 0, 0, unicodes_ROCK_TTF_300_4bpp, kerning_ROCK_TTF_300_4bpp, 63, 0, 0, 0);
 8005414:	d121      	bne.n	800545a <_Z25getFont_ROCK_TTF_300_4bppv+0x56>
 8005416:	4628      	mov	r0, r5
 8005418:	f01b fce5 	bl	8020de6 <__cxa_guard_acquire>
 800541c:	b1e8      	cbz	r0, 800545a <_Z25getFont_ROCK_TTF_300_4bppv+0x56>
 800541e:	233f      	movs	r3, #63	; 0x3f
 8005420:	9307      	str	r3, [sp, #28]
 8005422:	4b10      	ldr	r3, [pc, #64]	; (8005464 <_Z25getFont_ROCK_TTF_300_4bppv+0x60>)
 8005424:	9306      	str	r3, [sp, #24]
 8005426:	4b10      	ldr	r3, [pc, #64]	; (8005468 <_Z25getFont_ROCK_TTF_300_4bppv+0x64>)
 8005428:	4910      	ldr	r1, [pc, #64]	; (800546c <_Z25getFont_ROCK_TTF_300_4bppv+0x68>)
 800542a:	4811      	ldr	r0, [pc, #68]	; (8005470 <_Z25getFont_ROCK_TTF_300_4bppv+0x6c>)
 800542c:	9408      	str	r4, [sp, #32]
 800542e:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8005432:	2201      	movs	r2, #1
 8005434:	2304      	movs	r3, #4
 8005436:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800543a:	2303      	movs	r3, #3
 800543c:	9300      	str	r3, [sp, #0]
 800543e:	220b      	movs	r2, #11
 8005440:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8005444:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8005448:	9403      	str	r4, [sp, #12]
 800544a:	f7fd f979 	bl	8002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800544e:	4628      	mov	r0, r5
 8005450:	f01b fcd5 	bl	8020dfe <__cxa_guard_release>
 8005454:	4807      	ldr	r0, [pc, #28]	; (8005474 <_Z25getFont_ROCK_TTF_300_4bppv+0x70>)
 8005456:	f01b fd11 	bl	8020e7c <atexit>
    return ROCK_TTF_300_4bpp;
}
 800545a:	4805      	ldr	r0, [pc, #20]	; (8005470 <_Z25getFont_ROCK_TTF_300_4bppv+0x6c>)
 800545c:	b00d      	add	sp, #52	; 0x34
 800545e:	bd30      	pop	{r4, r5, pc}
 8005460:	20005abc 	.word	0x20005abc
 8005464:	08026030 	.word	0x08026030
 8005468:	08022fc0 	.word	0x08022fc0
 800546c:	90029200 	.word	0x90029200
 8005470:	20005ac0 	.word	0x20005ac0
 8005474:	08005401 	.word	0x08005401

08005478 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_30_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_30_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_30_4bpp(glyphs_ROCK_TTF_30_4bpp, 29, 30, 6, 4, 1, 2, 1, unicodes_ROCK_TTF_30_4bpp, kerning_ROCK_TTF_30_4bpp, 63, 0, 0, 0);
 8005478:	4770      	bx	lr
	...

0800547c <_Z24getFont_ROCK_TTF_30_4bppv>:
{
 800547c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_30_4bpp(glyphs_ROCK_TTF_30_4bpp, 29, 30, 6, 4, 1, 2, 1, unicodes_ROCK_TTF_30_4bpp, kerning_ROCK_TTF_30_4bpp, 63, 0, 0, 0);
 800547e:	4d16      	ldr	r5, [pc, #88]	; (80054d8 <_Z24getFont_ROCK_TTF_30_4bppv+0x5c>)
 8005480:	782c      	ldrb	r4, [r5, #0]
 8005482:	f3bf 8f5b 	dmb	ish
 8005486:	f014 0401 	ands.w	r4, r4, #1
{
 800548a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_30_4bpp(glyphs_ROCK_TTF_30_4bpp, 29, 30, 6, 4, 1, 2, 1, unicodes_ROCK_TTF_30_4bpp, kerning_ROCK_TTF_30_4bpp, 63, 0, 0, 0);
 800548c:	d121      	bne.n	80054d2 <_Z24getFont_ROCK_TTF_30_4bppv+0x56>
 800548e:	4628      	mov	r0, r5
 8005490:	f01b fca9 	bl	8020de6 <__cxa_guard_acquire>
 8005494:	b1e8      	cbz	r0, 80054d2 <_Z24getFont_ROCK_TTF_30_4bppv+0x56>
 8005496:	233f      	movs	r3, #63	; 0x3f
 8005498:	9307      	str	r3, [sp, #28]
 800549a:	4b10      	ldr	r3, [pc, #64]	; (80054dc <_Z24getFont_ROCK_TTF_30_4bppv+0x60>)
 800549c:	9306      	str	r3, [sp, #24]
 800549e:	4b10      	ldr	r3, [pc, #64]	; (80054e0 <_Z24getFont_ROCK_TTF_30_4bppv+0x64>)
 80054a0:	9305      	str	r3, [sp, #20]
 80054a2:	2202      	movs	r2, #2
 80054a4:	2301      	movs	r3, #1
 80054a6:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80054aa:	9302      	str	r3, [sp, #8]
 80054ac:	2204      	movs	r2, #4
 80054ae:	2306      	movs	r3, #6
 80054b0:	e9cd 3200 	strd	r3, r2, [sp]
 80054b4:	490b      	ldr	r1, [pc, #44]	; (80054e4 <_Z24getFont_ROCK_TTF_30_4bppv+0x68>)
 80054b6:	480c      	ldr	r0, [pc, #48]	; (80054e8 <_Z24getFont_ROCK_TTF_30_4bppv+0x6c>)
 80054b8:	9408      	str	r4, [sp, #32]
 80054ba:	231e      	movs	r3, #30
 80054bc:	221d      	movs	r2, #29
 80054be:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80054c2:	f7fd f93d 	bl	8002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80054c6:	4628      	mov	r0, r5
 80054c8:	f01b fc99 	bl	8020dfe <__cxa_guard_release>
 80054cc:	4807      	ldr	r0, [pc, #28]	; (80054ec <_Z24getFont_ROCK_TTF_30_4bppv+0x70>)
 80054ce:	f01b fcd5 	bl	8020e7c <atexit>
    return ROCK_TTF_30_4bpp;
}
 80054d2:	4805      	ldr	r0, [pc, #20]	; (80054e8 <_Z24getFont_ROCK_TTF_30_4bppv+0x6c>)
 80054d4:	b00d      	add	sp, #52	; 0x34
 80054d6:	bd30      	pop	{r4, r5, pc}
 80054d8:	20005ae8 	.word	0x20005ae8
 80054dc:	08026034 	.word	0x08026034
 80054e0:	08022fc4 	.word	0x08022fc4
 80054e4:	9002929c 	.word	0x9002929c
 80054e8:	20005aec 	.word	0x20005aec
 80054ec:	08005479 	.word	0x08005479

080054f0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_40_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_40_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 38, 40, 9, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 80054f0:	4770      	bx	lr
	...

080054f4 <_Z24getFont_ROCK_TTF_40_4bppv>:
{
 80054f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 38, 40, 9, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 80054f6:	4d16      	ldr	r5, [pc, #88]	; (8005550 <_Z24getFont_ROCK_TTF_40_4bppv+0x5c>)
 80054f8:	782c      	ldrb	r4, [r5, #0]
 80054fa:	f3bf 8f5b 	dmb	ish
 80054fe:	f014 0401 	ands.w	r4, r4, #1
{
 8005502:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ROCK_TTF_40_4bpp(glyphs_ROCK_TTF_40_4bpp, 38, 40, 9, 4, 1, 1, 1, unicodes_ROCK_TTF_40_4bpp, kerning_ROCK_TTF_40_4bpp, 63, 0, 0, 0);
 8005504:	d120      	bne.n	8005548 <_Z24getFont_ROCK_TTF_40_4bppv+0x54>
 8005506:	4628      	mov	r0, r5
 8005508:	f01b fc6d 	bl	8020de6 <__cxa_guard_acquire>
 800550c:	b1e0      	cbz	r0, 8005548 <_Z24getFont_ROCK_TTF_40_4bppv+0x54>
 800550e:	233f      	movs	r3, #63	; 0x3f
 8005510:	9307      	str	r3, [sp, #28]
 8005512:	4b10      	ldr	r3, [pc, #64]	; (8005554 <_Z24getFont_ROCK_TTF_40_4bppv+0x60>)
 8005514:	9306      	str	r3, [sp, #24]
 8005516:	4b10      	ldr	r3, [pc, #64]	; (8005558 <_Z24getFont_ROCK_TTF_40_4bppv+0x64>)
 8005518:	9305      	str	r3, [sp, #20]
 800551a:	2301      	movs	r3, #1
 800551c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8005520:	9302      	str	r3, [sp, #8]
 8005522:	2204      	movs	r2, #4
 8005524:	2309      	movs	r3, #9
 8005526:	e9cd 3200 	strd	r3, r2, [sp]
 800552a:	490c      	ldr	r1, [pc, #48]	; (800555c <_Z24getFont_ROCK_TTF_40_4bppv+0x68>)
 800552c:	480c      	ldr	r0, [pc, #48]	; (8005560 <_Z24getFont_ROCK_TTF_40_4bppv+0x6c>)
 800552e:	9408      	str	r4, [sp, #32]
 8005530:	2328      	movs	r3, #40	; 0x28
 8005532:	2226      	movs	r2, #38	; 0x26
 8005534:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8005538:	f7fd f902 	bl	8002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800553c:	4628      	mov	r0, r5
 800553e:	f01b fc5e 	bl	8020dfe <__cxa_guard_release>
 8005542:	4808      	ldr	r0, [pc, #32]	; (8005564 <_Z24getFont_ROCK_TTF_40_4bppv+0x70>)
 8005544:	f01b fc9a 	bl	8020e7c <atexit>
    return ROCK_TTF_40_4bpp;
}
 8005548:	4805      	ldr	r0, [pc, #20]	; (8005560 <_Z24getFont_ROCK_TTF_40_4bppv+0x6c>)
 800554a:	b00d      	add	sp, #52	; 0x34
 800554c:	bd30      	pop	{r4, r5, pc}
 800554e:	bf00      	nop
 8005550:	20005b14 	.word	0x20005b14
 8005554:	080260f0 	.word	0x080260f0
 8005558:	08022fc8 	.word	0x08022fc8
 800555c:	90029434 	.word	0x90029434
 8005560:	20005b18 	.word	0x20005b18
 8005564:	080054f1 	.word	0x080054f1

08005568 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8005568:	4770      	bx	lr
	...

0800556c <_Z23getFont_verdana_10_4bppv>:
{
 800556c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800556e:	4d15      	ldr	r5, [pc, #84]	; (80055c4 <_Z23getFont_verdana_10_4bppv+0x58>)
 8005570:	782c      	ldrb	r4, [r5, #0]
 8005572:	f3bf 8f5b 	dmb	ish
 8005576:	f014 0401 	ands.w	r4, r4, #1
{
 800557a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800557c:	d11e      	bne.n	80055bc <_Z23getFont_verdana_10_4bppv+0x50>
 800557e:	4628      	mov	r0, r5
 8005580:	f01b fc31 	bl	8020de6 <__cxa_guard_acquire>
 8005584:	b1d0      	cbz	r0, 80055bc <_Z23getFont_verdana_10_4bppv+0x50>
 8005586:	233f      	movs	r3, #63	; 0x3f
 8005588:	9307      	str	r3, [sp, #28]
 800558a:	4b0f      	ldr	r3, [pc, #60]	; (80055c8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800558c:	9306      	str	r3, [sp, #24]
 800558e:	4b0f      	ldr	r3, [pc, #60]	; (80055cc <_Z23getFont_verdana_10_4bppv+0x60>)
 8005590:	490f      	ldr	r1, [pc, #60]	; (80055d0 <_Z23getFont_verdana_10_4bppv+0x64>)
 8005592:	4810      	ldr	r0, [pc, #64]	; (80055d4 <_Z23getFont_verdana_10_4bppv+0x68>)
 8005594:	9408      	str	r4, [sp, #32]
 8005596:	2201      	movs	r2, #1
 8005598:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800559c:	2304      	movs	r3, #4
 800559e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80055a2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80055a6:	230a      	movs	r3, #10
 80055a8:	9403      	str	r4, [sp, #12]
 80055aa:	9400      	str	r4, [sp, #0]
 80055ac:	f7fd f8c8 	bl	8002740 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80055b0:	4628      	mov	r0, r5
 80055b2:	f01b fc24 	bl	8020dfe <__cxa_guard_release>
 80055b6:	4808      	ldr	r0, [pc, #32]	; (80055d8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80055b8:	f01b fc60 	bl	8020e7c <atexit>
    return verdana_10_4bpp;
}
 80055bc:	4805      	ldr	r0, [pc, #20]	; (80055d4 <_Z23getFont_verdana_10_4bppv+0x68>)
 80055be:	b00d      	add	sp, #52	; 0x34
 80055c0:	bd30      	pop	{r4, r5, pc}
 80055c2:	bf00      	nop
 80055c4:	20005b40 	.word	0x20005b40
 80055c8:	080261bc 	.word	0x080261bc
 80055cc:	08022fcc 	.word	0x08022fcc
 80055d0:	90029648 	.word	0x90029648
 80055d4:	20005b44 	.word	0x20005b44
 80055d8:	08005569 	.word	0x08005569

080055dc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80055dc:	2000      	movs	r0, #0
 80055de:	4770      	bx	lr

080055e0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80055e0:	2000      	movs	r0, #0
 80055e2:	4770      	bx	lr

080055e4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80055e4:	b40e      	push	{r1, r2, r3}
 80055e6:	b503      	push	{r0, r1, lr}
 80055e8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80055ea:	2100      	movs	r1, #0
{
 80055ec:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80055f0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80055f2:	f00b fea9 	bl	8011348 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80055f6:	b002      	add	sp, #8
 80055f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80055fc:	b003      	add	sp, #12
 80055fe:	4770      	bx	lr

08005600 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8005600:	b40c      	push	{r2, r3}
 8005602:	b507      	push	{r0, r1, r2, lr}
 8005604:	ab04      	add	r3, sp, #16
 8005606:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800560a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800560c:	f00b fe9c 	bl	8011348 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8005610:	b003      	add	sp, #12
 8005612:	f85d eb04 	ldr.w	lr, [sp], #4
 8005616:	b002      	add	sp, #8
 8005618:	4770      	bx	lr
	...

0800561c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800561c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800561e:	b510      	push	{r4, lr}
 8005620:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8005622:	b373      	cbz	r3, 8005682 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8005624:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8005626:	b92b      	cbnz	r3, 8005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8005628:	4b18      	ldr	r3, [pc, #96]	; (800568c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800562a:	4a19      	ldr	r2, [pc, #100]	; (8005690 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800562c:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800562e:	4819      	ldr	r0, [pc, #100]	; (8005694 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8005630:	f01b fc06 	bl	8020e40 <__assert_func>
            return buffer[pos];
 8005634:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8005636:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800563a:	8b5b      	ldrh	r3, [r3, #26]
 800563c:	b30b      	cbz	r3, 8005682 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800563e:	f00d fa75 	bl	8012b2c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8005642:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8005644:	2b01      	cmp	r3, #1
 8005646:	d803      	bhi.n	8005650 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8005648:	4b13      	ldr	r3, [pc, #76]	; (8005698 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800564a:	4a14      	ldr	r2, [pc, #80]	; (800569c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800564c:	21c4      	movs	r1, #196	; 0xc4
 800564e:	e7ee      	b.n	800562e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8005650:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8005652:	1c53      	adds	r3, r2, #1
 8005654:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8005656:	2b09      	cmp	r3, #9
 8005658:	4619      	mov	r1, r3
 800565a:	bf88      	it	hi
 800565c:	f1a3 010a 	subhi.w	r1, r3, #10
 8005660:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8005664:	f640 103f 	movw	r0, #2367	; 0x93f
 8005668:	8b49      	ldrh	r1, [r1, #26]
 800566a:	4281      	cmp	r1, r0
 800566c:	d109      	bne.n	8005682 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800566e:	2b0a      	cmp	r3, #10
 8005670:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8005674:	bf28      	it	cs
 8005676:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8005678:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800567c:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 800567e:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8005680:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8005682:	4620      	mov	r0, r4
}
 8005684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8005688:	f00d b934 	b.w	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800568c:	08022fd0 	.word	0x08022fd0
 8005690:	08022fd9 	.word	0x08022fd9
 8005694:	08023084 	.word	0x08023084
 8005698:	080230ce 	.word	0x080230ce
 800569c:	080230dc 	.word	0x080230dc

080056a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80056a0:	f00d b8e2 	b.w	8012868 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080056a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80056a4:	b510      	push	{r4, lr}
 80056a6:	b086      	sub	sp, #24
 80056a8:	ac02      	add	r4, sp, #8
 80056aa:	e884 0006 	stmia.w	r4, {r1, r2}
 80056ae:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80056b0:	ab0a      	add	r3, sp, #40	; 0x28
 80056b2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80056b4:	9301      	str	r3, [sp, #4]
 80056b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056b8:	9300      	str	r3, [sp, #0]
 80056ba:	4621      	mov	r1, r4
 80056bc:	9b08      	ldr	r3, [sp, #32]
 80056be:	f00a fb92 	bl	800fde6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80056c2:	b006      	add	sp, #24
 80056c4:	bd10      	pop	{r4, pc}
	...

080056c8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80056c8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80056ca:	bb18      	cbnz	r0, 8005714 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80056cc:	4b12      	ldr	r3, [pc, #72]	; (8005718 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80056ce:	4813      	ldr	r0, [pc, #76]	; (800571c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	4913      	ldr	r1, [pc, #76]	; (8005720 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80056d4:	b1b3      	cbz	r3, 8005704 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80056d6:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80056d8:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80056da:	441a      	add	r2, r3
 80056dc:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80056de:	685a      	ldr	r2, [r3, #4]
 80056e0:	441a      	add	r2, r3
 80056e2:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80056e4:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80056e6:	4b0f      	ldr	r3, [pc, #60]	; (8005724 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80056e8:	2200      	movs	r2, #0
 80056ea:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80056ec:	f000 f838 	bl	8005760 <_ZN17TypedTextDatabase8getFontsEv>
 80056f0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80056f2:	f000 f833 	bl	800575c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80056f6:	4b0c      	ldr	r3, [pc, #48]	; (8005728 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80056f8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80056fa:	4b0c      	ldr	r3, [pc, #48]	; (800572c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80056fc:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80056fe:	4b0c      	ldr	r3, [pc, #48]	; (8005730 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8005700:	8018      	strh	r0, [r3, #0]
    }
}
 8005702:	e007      	b.n	8005714 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8005704:	4b0b      	ldr	r3, [pc, #44]	; (8005734 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8005706:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8005708:	4b0b      	ldr	r3, [pc, #44]	; (8005738 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800570a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800570c:	4b0b      	ldr	r3, [pc, #44]	; (800573c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800570e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8005710:	2c00      	cmp	r4, #0
 8005712:	d1e8      	bne.n	80056e6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8005714:	bd38      	pop	{r3, r4, r5, pc}
 8005716:	bf00      	nop
 8005718:	20005b6c 	.word	0x20005b6c
 800571c:	20005b70 	.word	0x20005b70
 8005720:	20005b74 	.word	0x20005b74
 8005724:	20005b78 	.word	0x20005b78
 8005728:	2000eb80 	.word	0x2000eb80
 800572c:	2000eb88 	.word	0x2000eb88
 8005730:	2000eb84 	.word	0x2000eb84
 8005734:	900297e8 	.word	0x900297e8
 8005738:	90029658 	.word	0x90029658
 800573c:	900299d0 	.word	0x900299d0

08005740 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8005740:	4b04      	ldr	r3, [pc, #16]	; (8005754 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8005748:	4b03      	ldr	r3, [pc, #12]	; (8005758 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800574a:	681b      	ldr	r3, [r3, #0]
}
 800574c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8005750:	4770      	bx	lr
 8005752:	bf00      	nop
 8005754:	20005b74 	.word	0x20005b74
 8005758:	20005b70 	.word	0x20005b70

0800575c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800575c:	2064      	movs	r0, #100	; 0x64
 800575e:	4770      	bx	lr

08005760 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8005760:	4800      	ldr	r0, [pc, #0]	; (8005764 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8005762:	4770      	bx	lr
 8005764:	20005b7c 	.word	0x20005b7c

08005768 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_ROCK_TTF_25_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8005768:	b510      	push	{r4, lr}
    &(getFont_ROCK_TTF_40_4bpp()),
 800576a:	f7ff fec3 	bl	80054f4 <_Z24getFont_ROCK_TTF_40_4bppv>
};
 800576e:	4c07      	ldr	r4, [pc, #28]	; (800578c <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 8005770:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_10_4bpp()),
 8005772:	f7ff fefb 	bl	800556c <_Z23getFont_verdana_10_4bppv>
};
 8005776:	6060      	str	r0, [r4, #4]
    &(getFont_ROCK_TTF_300_4bpp()),
 8005778:	f7ff fe44 	bl	8005404 <_Z25getFont_ROCK_TTF_300_4bppv>
};
 800577c:	60a0      	str	r0, [r4, #8]
    &(getFont_ROCK_TTF_30_4bpp()),
 800577e:	f7ff fe7d 	bl	800547c <_Z24getFont_ROCK_TTF_30_4bppv>
};
 8005782:	60e0      	str	r0, [r4, #12]
    &(getFont_ROCK_TTF_25_4bpp())
 8005784:	f7ff fe04 	bl	8005390 <_Z24getFont_ROCK_TTF_25_4bppv>
};
 8005788:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 800578a:	bd10      	pop	{r4, pc}
 800578c:	20005b7c 	.word	0x20005b7c

08005790 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8005790:	4770      	bx	lr

08005792 <_ZN19FrontendApplicationD0Ev>:
 8005792:	b510      	push	{r4, lr}
 8005794:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8005798:	4604      	mov	r4, r0
 800579a:	f01b fb22 	bl	8020de2 <_ZdlPvj>
 800579e:	4620      	mov	r0, r4
 80057a0:	bd10      	pop	{r4, pc}

080057a2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80057a2:	b510      	push	{r4, lr}
 80057a4:	4604      	mov	r4, r0
    {
        model.tick();
 80057a6:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80057aa:	f000 f812 	bl	80057d2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80057ae:	4620      	mov	r0, r4
    }
 80057b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80057b4:	f00a be6c 	b.w	8010490 <_ZN8touchgfx11Application15handleTickEventEv>

080057b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80057b8:	b510      	push	{r4, lr}
 80057ba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80057bc:	f7fc fd10 	bl	80021e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80057c0:	4b01      	ldr	r3, [pc, #4]	; (80057c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80057c2:	6023      	str	r3, [r4, #0]
{

}
 80057c4:	4620      	mov	r0, r4
 80057c6:	bd10      	pop	{r4, pc}
 80057c8:	080231b8 	.word	0x080231b8

080057cc <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80057cc:	2200      	movs	r2, #0
 80057ce:	6002      	str	r2, [r0, #0]
{

}
 80057d0:	4770      	bx	lr

080057d2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80057d2:	4770      	bx	lr

080057d4 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80057d4:	4770      	bx	lr

080057d6 <_ZThn4_N16Screen1PresenterD1Ev>:
 80057d6:	3804      	subs	r0, #4
 80057d8:	4770      	bx	lr

080057da <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80057da:	4770      	bx	lr

080057dc <_ZN16Screen1PresenterD0Ev>:
 80057dc:	b510      	push	{r4, lr}
 80057de:	2110      	movs	r1, #16
 80057e0:	4604      	mov	r4, r0
 80057e2:	f01b fafe 	bl	8020de2 <_ZdlPvj>
 80057e6:	4620      	mov	r0, r4
 80057e8:	bd10      	pop	{r4, pc}

080057ea <_ZThn4_N16Screen1PresenterD0Ev>:
 80057ea:	f1a0 0004 	sub.w	r0, r0, #4
 80057ee:	e7f5      	b.n	80057dc <_ZN16Screen1PresenterD0Ev>

080057f0 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80057f0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80057f2:	2200      	movs	r2, #0
 80057f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80057f6:	4a04      	ldr	r2, [pc, #16]	; (8005808 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80057f8:	60c1      	str	r1, [r0, #12]
 80057fa:	f102 0408 	add.w	r4, r2, #8
 80057fe:	3220      	adds	r2, #32
 8005800:	6004      	str	r4, [r0, #0]
 8005802:	6042      	str	r2, [r0, #4]
}
 8005804:	bd10      	pop	{r4, pc}
 8005806:	bf00      	nop
 8005808:	080231f4 	.word	0x080231f4

0800580c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800580c:	4770      	bx	lr

0800580e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800580e:	4770      	bx	lr

08005810 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005810:	f7fc bff3 	b.w	80027fa <_ZN15Screen1ViewBase11setupScreenEv>

08005814 <_ZN11Screen1ViewD0Ev>:
 8005814:	b510      	push	{r4, lr}
 8005816:	f243 61a4 	movw	r1, #13988	; 0x36a4
 800581a:	4604      	mov	r4, r0
 800581c:	f01b fae1 	bl	8020de2 <_ZdlPvj>
 8005820:	4620      	mov	r0, r4
 8005822:	bd10      	pop	{r4, pc}

08005824 <_ZN11Screen1View15handleTickEventEv>:

int counter=0;
int i=0;
void Screen1View::handleTickEvent(){
 8005824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	counter++;
 8005826:	4d25      	ldr	r5, [pc, #148]	; (80058bc <_ZN11Screen1View15handleTickEventEv+0x98>)
 8005828:	682b      	ldr	r3, [r5, #0]
 800582a:	271e      	movs	r7, #30
 800582c:	3301      	adds	r3, #1
 800582e:	fb93 f2f7 	sdiv	r2, r3, r7
 8005832:	fb07 3212 	mls	r2, r7, r2, r3
void Screen1View::handleTickEvent(){
 8005836:	4604      	mov	r4, r0
	counter++;
 8005838:	602b      	str	r3, [r5, #0]

	if(counter%30==0){
 800583a:	2a00      	cmp	r2, #0
 800583c:	d13d      	bne.n	80058ba <_ZN11Screen1View15handleTickEventEv+0x96>
		i++;
 800583e:	4e20      	ldr	r6, [pc, #128]	; (80058c0 <_ZN11Screen1View15handleTickEventEv+0x9c>)
 8005840:	6832      	ldr	r2, [r6, #0]
 8005842:	3201      	adds	r2, #1
 8005844:	6032      	str	r2, [r6, #0]
		Unicode::snprintf(speedBuffer, SPEED_SIZE, "%d", counter);
 8005846:	210a      	movs	r1, #10
 8005848:	4a1e      	ldr	r2, [pc, #120]	; (80058c4 <_ZN11Screen1View15handleTickEventEv+0xa0>)
 800584a:	f500 60ec 	add.w	r0, r0, #1888	; 0x760
 800584e:	f00d ff27 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
			speed.invalidate();
 8005852:	f104 00f0 	add.w	r0, r4, #240	; 0xf0
 8005856:	f00b fe98 	bl	801158a <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::strncpy(vehicle_stateBuffer, states[i%10], 30);
 800585a:	6831      	ldr	r1, [r6, #0]
 800585c:	220a      	movs	r2, #10
 800585e:	fb91 f3f2 	sdiv	r3, r1, r2
 8005862:	fb02 1313 	mls	r3, r2, r3, r1
 8005866:	4918      	ldr	r1, [pc, #96]	; (80058c8 <_ZN11Screen1View15handleTickEventEv+0xa4>)
 8005868:	463a      	mov	r2, r7
 800586a:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800586e:	f204 7074 	addw	r0, r4, #1908	; 0x774
 8005872:	f00d fbae 	bl	8012fd2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
		vehicle_state.invalidate();
 8005876:	f204 4064 	addw	r0, r4, #1124	; 0x464
 800587a:	f00b fe86 	bl	801158a <_ZNK8touchgfx8Drawable10invalidateEv>
		if(i%2==0){
 800587e:	6833      	ldr	r3, [r6, #0]
 8005880:	07db      	lsls	r3, r3, #31
 8005882:	bf54      	ite	pl
 8005884:	4b11      	ldrpl	r3, [pc, #68]	; (80058cc <_ZN11Screen1View15handleTickEventEv+0xa8>)
 8005886:	f04f 23ff 	movmi.w	r3, #4278255360	; 0xff00ff00
 800588a:	f504 70f8 	add.w	r0, r4, #496	; 0x1f0
 800588e:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
			ecuPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
			ecu.invalidate();
		}else{
			ecuPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
			ecu.invalidate();
 8005892:	f008 fb49 	bl	800df28 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
		}

		Unicode::snprintf(voltageBuffer, VOLTAGE_SIZE, "%d",(counter%101));
 8005896:	682b      	ldr	r3, [r5, #0]
 8005898:	2265      	movs	r2, #101	; 0x65
 800589a:	f504 60f1 	add.w	r0, r4, #1928	; 0x788
 800589e:	fb93 f1f2 	sdiv	r1, r3, r2
 80058a2:	fb02 3311 	mls	r3, r2, r1, r3
 80058a6:	4a07      	ldr	r2, [pc, #28]	; (80058c4 <_ZN11Screen1View15handleTickEventEv+0xa0>)
 80058a8:	210a      	movs	r1, #10
 80058aa:	f00d fef9 	bl	80136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		voltage.invalidate();
 80058ae:	f204 50ec 	addw	r0, r4, #1516	; 0x5ec
	}




}
 80058b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		voltage.invalidate();
 80058b6:	f00b be68 	b.w	801158a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80058ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80058bc:	20005b90 	.word	0x20005b90
 80058c0:	20005b94 	.word	0x20005b94
 80058c4:	0802321c 	.word	0x0802321c
 80058c8:	20000020 	.word	0x20000020
 80058cc:	ffff0000 	.word	0xffff0000

080058d0 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80058d0:	b510      	push	{r4, lr}
 80058d2:	4604      	mov	r4, r0
 80058d4:	f7fd f83a 	bl	800294c <_ZN15Screen1ViewBaseC1Ev>
 80058d8:	4b01      	ldr	r3, [pc, #4]	; (80058e0 <_ZN11Screen1ViewC1Ev+0x10>)
 80058da:	6023      	str	r3, [r4, #0]
}
 80058dc:	4620      	mov	r0, r4
 80058de:	bd10      	pop	{r4, pc}
 80058e0:	08023290 	.word	0x08023290

080058e4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80058e4:	4770      	bx	lr

080058e6 <_ZThn4_N16Screen2PresenterD1Ev>:
 80058e6:	3804      	subs	r0, #4
 80058e8:	4770      	bx	lr

080058ea <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80058ea:	4770      	bx	lr

080058ec <_ZN16Screen2PresenterD0Ev>:
 80058ec:	b510      	push	{r4, lr}
 80058ee:	2110      	movs	r1, #16
 80058f0:	4604      	mov	r4, r0
 80058f2:	f01b fa76 	bl	8020de2 <_ZdlPvj>
 80058f6:	4620      	mov	r0, r4
 80058f8:	bd10      	pop	{r4, pc}

080058fa <_ZThn4_N16Screen2PresenterD0Ev>:
 80058fa:	f1a0 0004 	sub.w	r0, r0, #4
 80058fe:	e7f5      	b.n	80058ec <_ZN16Screen2PresenterD0Ev>

08005900 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8005900:	b510      	push	{r4, lr}
 8005902:	2200      	movs	r2, #0
 8005904:	6082      	str	r2, [r0, #8]
    : view(v)
 8005906:	4a04      	ldr	r2, [pc, #16]	; (8005918 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8005908:	60c1      	str	r1, [r0, #12]
 800590a:	f102 0408 	add.w	r4, r2, #8
 800590e:	3220      	adds	r2, #32
 8005910:	6004      	str	r4, [r0, #0]
 8005912:	6042      	str	r2, [r0, #4]
}
 8005914:	bd10      	pop	{r4, pc}
 8005916:	bf00      	nop
 8005918:	080232bc 	.word	0x080232bc

0800591c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800591c:	4770      	bx	lr

0800591e <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800591e:	4770      	bx	lr

08005920 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8005920:	f7fd bca1 	b.w	8003266 <_ZN15Screen2ViewBase11setupScreenEv>

08005924 <_ZN11Screen2ViewD0Ev>:
 8005924:	b510      	push	{r4, lr}
 8005926:	2198      	movs	r1, #152	; 0x98
 8005928:	4604      	mov	r4, r0
 800592a:	f01b fa5a 	bl	8020de2 <_ZdlPvj>
 800592e:	4620      	mov	r0, r4
 8005930:	bd10      	pop	{r4, pc}
	...

08005934 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8005934:	b510      	push	{r4, lr}
 8005936:	4604      	mov	r4, r0
 8005938:	f7fd fcb4 	bl	80032a4 <_ZN15Screen2ViewBaseC1Ev>
 800593c:	4b01      	ldr	r3, [pc, #4]	; (8005944 <_ZN11Screen2ViewC1Ev+0x10>)
 800593e:	6023      	str	r3, [r4, #0]
}
 8005940:	4620      	mov	r0, r4
 8005942:	bd10      	pop	{r4, pc}
 8005944:	080232ec 	.word	0x080232ec

08005948 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {};
 8005948:	4770      	bx	lr

0800594a <_ZThn4_N16Screen3PresenterD1Ev>:
 800594a:	3804      	subs	r0, #4
 800594c:	4770      	bx	lr

0800594e <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 800594e:	4770      	bx	lr

08005950 <_ZN16Screen3PresenterD0Ev>:
 8005950:	b510      	push	{r4, lr}
 8005952:	2110      	movs	r1, #16
 8005954:	4604      	mov	r4, r0
 8005956:	f01b fa44 	bl	8020de2 <_ZdlPvj>
 800595a:	4620      	mov	r0, r4
 800595c:	bd10      	pop	{r4, pc}

0800595e <_ZThn4_N16Screen3PresenterD0Ev>:
 800595e:	f1a0 0004 	sub.w	r0, r0, #4
 8005962:	e7f5      	b.n	8005950 <_ZN16Screen3PresenterD0Ev>

08005964 <_ZN16Screen3PresenterC1ER11Screen3View>:
Screen3Presenter::Screen3Presenter(Screen3View& v)
 8005964:	b510      	push	{r4, lr}
 8005966:	2200      	movs	r2, #0
 8005968:	6082      	str	r2, [r0, #8]
    : view(v)
 800596a:	4a04      	ldr	r2, [pc, #16]	; (800597c <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 800596c:	60c1      	str	r1, [r0, #12]
 800596e:	f102 0408 	add.w	r4, r2, #8
 8005972:	3220      	adds	r2, #32
 8005974:	6004      	str	r4, [r0, #0]
 8005976:	6042      	str	r2, [r0, #4]
}
 8005978:	bd10      	pop	{r4, pc}
 800597a:	bf00      	nop
 800597c:	08023318 	.word	0x08023318

08005980 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8005980:	4770      	bx	lr

08005982 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 8005982:	4770      	bx	lr

08005984 <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 8005984:	f7fd bccf 	b.w	8003326 <_ZN15Screen3ViewBase11setupScreenEv>

08005988 <_ZN11Screen3ViewD0Ev>:
 8005988:	b510      	push	{r4, lr}
 800598a:	f644 2104 	movw	r1, #18948	; 0x4a04
 800598e:	4604      	mov	r4, r0
 8005990:	f01b fa27 	bl	8020de2 <_ZdlPvj>
 8005994:	4620      	mov	r0, r4
 8005996:	bd10      	pop	{r4, pc}

08005998 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 8005998:	b510      	push	{r4, lr}
 800599a:	4604      	mov	r4, r0
 800599c:	f7fd fd0c 	bl	80033b8 <_ZN15Screen3ViewBaseC1Ev>
 80059a0:	4b01      	ldr	r3, [pc, #4]	; (80059a8 <_ZN11Screen3ViewC1Ev+0x10>)
 80059a2:	6023      	str	r3, [r4, #0]
}
 80059a4:	4620      	mov	r0, r4
 80059a6:	bd10      	pop	{r4, pc}
 80059a8:	08023348 	.word	0x08023348

080059ac <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80059ac:	4770      	bx	lr

080059ae <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80059ae:	2000      	movs	r0, #0
 80059b0:	4770      	bx	lr

080059b2 <ft6x06_ReadID>:
{
 80059b2:	b510      	push	{r4, lr}
 80059b4:	4604      	mov	r4, r0
  TS_IO_Init();
 80059b6:	f000 fb7d 	bl	80060b4 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80059ba:	21a8      	movs	r1, #168	; 0xa8
 80059bc:	b2e0      	uxtb	r0, r4
 80059be:	f000 fb93 	bl	80060e8 <TS_IO_Read>
}
 80059c2:	b280      	uxth	r0, r0
 80059c4:	bd10      	pop	{r4, pc}
	...

080059c8 <ft6x06_TS_DetectTouch>:
{
 80059c8:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80059ca:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80059cc:	2102      	movs	r1, #2
 80059ce:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80059d0:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80059d4:	f000 fb88 	bl	80060e8 <TS_IO_Read>
 80059d8:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80059dc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80059e0:	f003 030f 	and.w	r3, r3, #15
 80059e4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80059e8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80059ec:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80059ee:	bf88      	it	hi
 80059f0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80059f4:	4b04      	ldr	r3, [pc, #16]	; (8005a08 <ft6x06_TS_DetectTouch+0x40>)
 80059f6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80059fa:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80059fe:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8005a00:	2200      	movs	r2, #0
 8005a02:	709a      	strb	r2, [r3, #2]
}
 8005a04:	b002      	add	sp, #8
 8005a06:	bd10      	pop	{r4, pc}
 8005a08:	20005b9a 	.word	0x20005b9a

08005a0c <ft6x06_TS_GetXY>:
{
 8005a0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8005a0e:	4c15      	ldr	r4, [pc, #84]	; (8005a64 <ft6x06_TS_GetXY+0x58>)
{
 8005a10:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8005a12:	78a3      	ldrb	r3, [r4, #2]
 8005a14:	7862      	ldrb	r2, [r4, #1]
 8005a16:	429a      	cmp	r2, r3
{
 8005a18:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8005a1a:	d91f      	bls.n	8005a5c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8005a1c:	b303      	cbz	r3, 8005a60 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8005a1e:	2b01      	cmp	r3, #1
 8005a20:	bf14      	ite	ne
 8005a22:	2100      	movne	r1, #0
 8005a24:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8005a26:	2304      	movs	r3, #4
 8005a28:	eb0d 0203 	add.w	r2, sp, r3
 8005a2c:	b2c0      	uxtb	r0, r0
 8005a2e:	f000 fb77 	bl	8006120 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8005a32:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8005a36:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8005a3a:	021b      	lsls	r3, r3, #8
 8005a3c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8005a40:	4313      	orrs	r3, r2
 8005a42:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8005a44:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8005a48:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8005a4c:	021b      	lsls	r3, r3, #8
 8005a4e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8005a52:	4313      	orrs	r3, r2
 8005a54:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8005a56:	78a3      	ldrb	r3, [r4, #2]
 8005a58:	3301      	adds	r3, #1
 8005a5a:	70a3      	strb	r3, [r4, #2]
}
 8005a5c:	b002      	add	sp, #8
 8005a5e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8005a60:	2103      	movs	r1, #3
 8005a62:	e7e0      	b.n	8005a26 <ft6x06_TS_GetXY+0x1a>
 8005a64:	20005b9a 	.word	0x20005b9a

08005a68 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8005a68:	2201      	movs	r2, #1
 8005a6a:	21a4      	movs	r1, #164	; 0xa4
 8005a6c:	b2c0      	uxtb	r0, r0
 8005a6e:	f000 bb23 	b.w	80060b8 <TS_IO_Write>

08005a72 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8005a72:	2200      	movs	r2, #0
 8005a74:	21a4      	movs	r1, #164	; 0xa4
 8005a76:	b2c0      	uxtb	r0, r0
 8005a78:	f000 bb1e 	b.w	80060b8 <TS_IO_Write>

08005a7c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8005a7c:	f7ff bff9 	b.w	8005a72 <ft6x06_TS_DisableIT>

08005a80 <ft6x06_TS_ClearIT>:
 8005a80:	4770      	bx	lr
	...

08005a84 <ft6x06_Init>:
{  
 8005a84:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8005a86:	4b09      	ldr	r3, [pc, #36]	; (8005aac <ft6x06_Init+0x28>)
 8005a88:	781a      	ldrb	r2, [r3, #0]
 8005a8a:	4290      	cmp	r0, r2
 8005a8c:	d00a      	beq.n	8005aa4 <ft6x06_Init+0x20>
 8005a8e:	7859      	ldrb	r1, [r3, #1]
 8005a90:	4288      	cmp	r0, r1
 8005a92:	d007      	beq.n	8005aa4 <ft6x06_Init+0x20>
 8005a94:	b10a      	cbz	r2, 8005a9a <ft6x06_Init+0x16>
 8005a96:	b929      	cbnz	r1, 8005aa4 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8005a98:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8005a9a:	5498      	strb	r0, [r3, r2]
}
 8005a9c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8005aa0:	f000 bb08 	b.w	80060b4 <TS_IO_Init>
}
 8005aa4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005aa8:	4770      	bx	lr
 8005aaa:	bf00      	nop
 8005aac:	20005b98 	.word	0x20005b98

08005ab0 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8005ab0:	b538      	push	{r3, r4, r5, lr}
 8005ab2:	4604      	mov	r4, r0
 8005ab4:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005ab6:	2000      	movs	r0, #0
 8005ab8:	49cb      	ldr	r1, [pc, #812]	; (8005de8 <OTM8009A_Init+0x338>)
 8005aba:	f7fa ffad 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8005abe:	49cb      	ldr	r1, [pc, #812]	; (8005dec <OTM8009A_Init+0x33c>)
 8005ac0:	2003      	movs	r0, #3
 8005ac2:	f7fa ffa9 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8005ac6:	49ca      	ldr	r1, [pc, #808]	; (8005df0 <OTM8009A_Init+0x340>)
 8005ac8:	2000      	movs	r0, #0
 8005aca:	f7fa ffa5 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8005ace:	49c9      	ldr	r1, [pc, #804]	; (8005df4 <OTM8009A_Init+0x344>)
 8005ad0:	2002      	movs	r0, #2
 8005ad2:	f7fa ffa1 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8005ad6:	49c6      	ldr	r1, [pc, #792]	; (8005df0 <OTM8009A_Init+0x340>)
 8005ad8:	2000      	movs	r0, #0
 8005ada:	f7fa ff9d 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8005ade:	49c6      	ldr	r1, [pc, #792]	; (8005df8 <OTM8009A_Init+0x348>)
 8005ae0:	2000      	movs	r0, #0
 8005ae2:	f7fa ff99 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8005ae6:	200a      	movs	r0, #10
 8005ae8:	f000 fb30 	bl	800614c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8005aec:	49c3      	ldr	r1, [pc, #780]	; (8005dfc <OTM8009A_Init+0x34c>)
 8005aee:	2000      	movs	r0, #0
 8005af0:	f7fa ff92 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8005af4:	49c2      	ldr	r1, [pc, #776]	; (8005e00 <OTM8009A_Init+0x350>)
 8005af6:	2000      	movs	r0, #0
 8005af8:	f7fa ff8e 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8005afc:	200a      	movs	r0, #10
 8005afe:	f000 fb25 	bl	800614c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8005b02:	49c0      	ldr	r1, [pc, #768]	; (8005e04 <OTM8009A_Init+0x354>)
 8005b04:	2000      	movs	r0, #0
 8005b06:	f7fa ff87 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8005b0a:	49bf      	ldr	r1, [pc, #764]	; (8005e08 <OTM8009A_Init+0x358>)
 8005b0c:	2000      	movs	r0, #0
 8005b0e:	f7fa ff83 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8005b12:	49be      	ldr	r1, [pc, #760]	; (8005e0c <OTM8009A_Init+0x35c>)
 8005b14:	2000      	movs	r0, #0
 8005b16:	f7fa ff7f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8005b1a:	49bd      	ldr	r1, [pc, #756]	; (8005e10 <OTM8009A_Init+0x360>)
 8005b1c:	2000      	movs	r0, #0
 8005b1e:	f7fa ff7b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8005b22:	49bc      	ldr	r1, [pc, #752]	; (8005e14 <OTM8009A_Init+0x364>)
 8005b24:	2000      	movs	r0, #0
 8005b26:	f7fa ff77 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8005b2a:	49bb      	ldr	r1, [pc, #748]	; (8005e18 <OTM8009A_Init+0x368>)
 8005b2c:	2000      	movs	r0, #0
 8005b2e:	f7fa ff73 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005b32:	49ad      	ldr	r1, [pc, #692]	; (8005de8 <OTM8009A_Init+0x338>)
 8005b34:	2000      	movs	r0, #0
 8005b36:	f7fa ff6f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8005b3a:	49b8      	ldr	r1, [pc, #736]	; (8005e1c <OTM8009A_Init+0x36c>)
 8005b3c:	2000      	movs	r0, #0
 8005b3e:	f7fa ff6b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8005b42:	49b7      	ldr	r1, [pc, #732]	; (8005e20 <OTM8009A_Init+0x370>)
 8005b44:	2000      	movs	r0, #0
 8005b46:	f7fa ff67 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8005b4a:	49b6      	ldr	r1, [pc, #728]	; (8005e24 <OTM8009A_Init+0x374>)
 8005b4c:	2000      	movs	r0, #0
 8005b4e:	f7fa ff63 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8005b52:	49b5      	ldr	r1, [pc, #724]	; (8005e28 <OTM8009A_Init+0x378>)
 8005b54:	2000      	movs	r0, #0
 8005b56:	f7fa ff5f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8005b5a:	49b4      	ldr	r1, [pc, #720]	; (8005e2c <OTM8009A_Init+0x37c>)
 8005b5c:	2000      	movs	r0, #0
 8005b5e:	f7fa ff5b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8005b62:	49b3      	ldr	r1, [pc, #716]	; (8005e30 <OTM8009A_Init+0x380>)
 8005b64:	2000      	movs	r0, #0
 8005b66:	f7fa ff57 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8005b6a:	49b2      	ldr	r1, [pc, #712]	; (8005e34 <OTM8009A_Init+0x384>)
 8005b6c:	2000      	movs	r0, #0
 8005b6e:	f7fa ff53 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8005b72:	49b1      	ldr	r1, [pc, #708]	; (8005e38 <OTM8009A_Init+0x388>)
 8005b74:	2000      	movs	r0, #0
 8005b76:	f7fa ff4f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8005b7a:	49a5      	ldr	r1, [pc, #660]	; (8005e10 <OTM8009A_Init+0x360>)
 8005b7c:	2000      	movs	r0, #0
 8005b7e:	f7fa ff4b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005b82:	4999      	ldr	r1, [pc, #612]	; (8005de8 <OTM8009A_Init+0x338>)
 8005b84:	2000      	movs	r0, #0
 8005b86:	f7fa ff47 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8005b8a:	49ac      	ldr	r1, [pc, #688]	; (8005e3c <OTM8009A_Init+0x38c>)
 8005b8c:	2002      	movs	r0, #2
 8005b8e:	f7fa ff43 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8005b92:	49ab      	ldr	r1, [pc, #684]	; (8005e40 <OTM8009A_Init+0x390>)
 8005b94:	2000      	movs	r0, #0
 8005b96:	f7fa ff3f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8005b9a:	49aa      	ldr	r1, [pc, #680]	; (8005e44 <OTM8009A_Init+0x394>)
 8005b9c:	2000      	movs	r0, #0
 8005b9e:	f7fa ff3b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8005ba2:	49a9      	ldr	r1, [pc, #676]	; (8005e48 <OTM8009A_Init+0x398>)
 8005ba4:	2000      	movs	r0, #0
 8005ba6:	f7fa ff37 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8005baa:	49a8      	ldr	r1, [pc, #672]	; (8005e4c <OTM8009A_Init+0x39c>)
 8005bac:	2000      	movs	r0, #0
 8005bae:	f7fa ff33 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8005bb2:	49a7      	ldr	r1, [pc, #668]	; (8005e50 <OTM8009A_Init+0x3a0>)
 8005bb4:	2000      	movs	r0, #0
 8005bb6:	f7fa ff2f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8005bba:	49a6      	ldr	r1, [pc, #664]	; (8005e54 <OTM8009A_Init+0x3a4>)
 8005bbc:	2000      	movs	r0, #0
 8005bbe:	f7fa ff2b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8005bc2:	4997      	ldr	r1, [pc, #604]	; (8005e20 <OTM8009A_Init+0x370>)
 8005bc4:	2000      	movs	r0, #0
 8005bc6:	f7fa ff27 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8005bca:	49a3      	ldr	r1, [pc, #652]	; (8005e58 <OTM8009A_Init+0x3a8>)
 8005bcc:	2000      	movs	r0, #0
 8005bce:	f7fa ff23 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8005bd2:	4995      	ldr	r1, [pc, #596]	; (8005e28 <OTM8009A_Init+0x378>)
 8005bd4:	2000      	movs	r0, #0
 8005bd6:	f7fa ff1f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8005bda:	49a0      	ldr	r1, [pc, #640]	; (8005e5c <OTM8009A_Init+0x3ac>)
 8005bdc:	2000      	movs	r0, #0
 8005bde:	f7fa ff1b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8005be2:	499f      	ldr	r1, [pc, #636]	; (8005e60 <OTM8009A_Init+0x3b0>)
 8005be4:	2000      	movs	r0, #0
 8005be6:	f7fa ff17 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8005bea:	499e      	ldr	r1, [pc, #632]	; (8005e64 <OTM8009A_Init+0x3b4>)
 8005bec:	2002      	movs	r0, #2
 8005bee:	f7fa ff13 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8005bf2:	497f      	ldr	r1, [pc, #508]	; (8005df0 <OTM8009A_Init+0x340>)
 8005bf4:	2000      	movs	r0, #0
 8005bf6:	f7fa ff0f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8005bfa:	499b      	ldr	r1, [pc, #620]	; (8005e68 <OTM8009A_Init+0x3b8>)
 8005bfc:	2006      	movs	r0, #6
 8005bfe:	f7fa ff0b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8005c02:	499a      	ldr	r1, [pc, #616]	; (8005e6c <OTM8009A_Init+0x3bc>)
 8005c04:	2000      	movs	r0, #0
 8005c06:	f7fa ff07 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8005c0a:	4999      	ldr	r1, [pc, #612]	; (8005e70 <OTM8009A_Init+0x3c0>)
 8005c0c:	200e      	movs	r0, #14
 8005c0e:	f7fa ff03 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8005c12:	4998      	ldr	r1, [pc, #608]	; (8005e74 <OTM8009A_Init+0x3c4>)
 8005c14:	2000      	movs	r0, #0
 8005c16:	f7fa feff 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8005c1a:	4997      	ldr	r1, [pc, #604]	; (8005e78 <OTM8009A_Init+0x3c8>)
 8005c1c:	200e      	movs	r0, #14
 8005c1e:	f7fa fefb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8005c22:	4996      	ldr	r1, [pc, #600]	; (8005e7c <OTM8009A_Init+0x3cc>)
 8005c24:	2000      	movs	r0, #0
 8005c26:	f7fa fef7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8005c2a:	4995      	ldr	r1, [pc, #596]	; (8005e80 <OTM8009A_Init+0x3d0>)
 8005c2c:	200a      	movs	r0, #10
 8005c2e:	f7fa fef3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8005c32:	4994      	ldr	r1, [pc, #592]	; (8005e84 <OTM8009A_Init+0x3d4>)
 8005c34:	2000      	movs	r0, #0
 8005c36:	f7fa feef 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8005c3a:	4993      	ldr	r1, [pc, #588]	; (8005e88 <OTM8009A_Init+0x3d8>)
 8005c3c:	2000      	movs	r0, #0
 8005c3e:	f7fa feeb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8005c42:	496b      	ldr	r1, [pc, #428]	; (8005df0 <OTM8009A_Init+0x340>)
 8005c44:	2000      	movs	r0, #0
 8005c46:	f7fa fee7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8005c4a:	4990      	ldr	r1, [pc, #576]	; (8005e8c <OTM8009A_Init+0x3dc>)
 8005c4c:	200a      	movs	r0, #10
 8005c4e:	f7fa fee3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8005c52:	498f      	ldr	r1, [pc, #572]	; (8005e90 <OTM8009A_Init+0x3e0>)
 8005c54:	2000      	movs	r0, #0
 8005c56:	f7fa fedf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8005c5a:	498e      	ldr	r1, [pc, #568]	; (8005e94 <OTM8009A_Init+0x3e4>)
 8005c5c:	200f      	movs	r0, #15
 8005c5e:	f7fa fedb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8005c62:	4982      	ldr	r1, [pc, #520]	; (8005e6c <OTM8009A_Init+0x3bc>)
 8005c64:	2000      	movs	r0, #0
 8005c66:	f7fa fed7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8005c6a:	498b      	ldr	r1, [pc, #556]	; (8005e98 <OTM8009A_Init+0x3e8>)
 8005c6c:	200f      	movs	r0, #15
 8005c6e:	f7fa fed3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8005c72:	4980      	ldr	r1, [pc, #512]	; (8005e74 <OTM8009A_Init+0x3c4>)
 8005c74:	2000      	movs	r0, #0
 8005c76:	f7fa fecf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8005c7a:	4988      	ldr	r1, [pc, #544]	; (8005e9c <OTM8009A_Init+0x3ec>)
 8005c7c:	200a      	movs	r0, #10
 8005c7e:	f7fa fecb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8005c82:	497e      	ldr	r1, [pc, #504]	; (8005e7c <OTM8009A_Init+0x3cc>)
 8005c84:	2000      	movs	r0, #0
 8005c86:	f7fa fec7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8005c8a:	4985      	ldr	r1, [pc, #532]	; (8005ea0 <OTM8009A_Init+0x3f0>)
 8005c8c:	200f      	movs	r0, #15
 8005c8e:	f7fa fec3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8005c92:	497c      	ldr	r1, [pc, #496]	; (8005e84 <OTM8009A_Init+0x3d4>)
 8005c94:	2000      	movs	r0, #0
 8005c96:	f7fa febf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8005c9a:	4982      	ldr	r1, [pc, #520]	; (8005ea4 <OTM8009A_Init+0x3f4>)
 8005c9c:	200f      	movs	r0, #15
 8005c9e:	f7fa febb 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8005ca2:	4981      	ldr	r1, [pc, #516]	; (8005ea8 <OTM8009A_Init+0x3f8>)
 8005ca4:	2000      	movs	r0, #0
 8005ca6:	f7fa feb7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8005caa:	4980      	ldr	r1, [pc, #512]	; (8005eac <OTM8009A_Init+0x3fc>)
 8005cac:	200a      	movs	r0, #10
 8005cae:	f7fa feb3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8005cb2:	497f      	ldr	r1, [pc, #508]	; (8005eb0 <OTM8009A_Init+0x400>)
 8005cb4:	2000      	movs	r0, #0
 8005cb6:	f7fa feaf 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8005cba:	497e      	ldr	r1, [pc, #504]	; (8005eb4 <OTM8009A_Init+0x404>)
 8005cbc:	200a      	movs	r0, #10
 8005cbe:	f7fa feab 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8005cc2:	494b      	ldr	r1, [pc, #300]	; (8005df0 <OTM8009A_Init+0x340>)
 8005cc4:	2000      	movs	r0, #0
 8005cc6:	f7fa fea7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8005cca:	497b      	ldr	r1, [pc, #492]	; (8005eb8 <OTM8009A_Init+0x408>)
 8005ccc:	200a      	movs	r0, #10
 8005cce:	f7fa fea3 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8005cd2:	496f      	ldr	r1, [pc, #444]	; (8005e90 <OTM8009A_Init+0x3e0>)
 8005cd4:	2000      	movs	r0, #0
 8005cd6:	f7fa fe9f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8005cda:	4978      	ldr	r1, [pc, #480]	; (8005ebc <OTM8009A_Init+0x40c>)
 8005cdc:	200f      	movs	r0, #15
 8005cde:	f7fa fe9b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8005ce2:	4962      	ldr	r1, [pc, #392]	; (8005e6c <OTM8009A_Init+0x3bc>)
 8005ce4:	2000      	movs	r0, #0
 8005ce6:	f7fa fe97 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8005cea:	4975      	ldr	r1, [pc, #468]	; (8005ec0 <OTM8009A_Init+0x410>)
 8005cec:	200f      	movs	r0, #15
 8005cee:	f7fa fe93 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8005cf2:	4960      	ldr	r1, [pc, #384]	; (8005e74 <OTM8009A_Init+0x3c4>)
 8005cf4:	2000      	movs	r0, #0
 8005cf6:	f7fa fe8f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8005cfa:	4972      	ldr	r1, [pc, #456]	; (8005ec4 <OTM8009A_Init+0x414>)
 8005cfc:	200a      	movs	r0, #10
 8005cfe:	f7fa fe8b 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8005d02:	495e      	ldr	r1, [pc, #376]	; (8005e7c <OTM8009A_Init+0x3cc>)
 8005d04:	2000      	movs	r0, #0
 8005d06:	f7fa fe87 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8005d0a:	496f      	ldr	r1, [pc, #444]	; (8005ec8 <OTM8009A_Init+0x418>)
 8005d0c:	200f      	movs	r0, #15
 8005d0e:	f7fa fe83 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8005d12:	495c      	ldr	r1, [pc, #368]	; (8005e84 <OTM8009A_Init+0x3d4>)
 8005d14:	2000      	movs	r0, #0
 8005d16:	f7fa fe7f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8005d1a:	496c      	ldr	r1, [pc, #432]	; (8005ecc <OTM8009A_Init+0x41c>)
 8005d1c:	200f      	movs	r0, #15
 8005d1e:	f7fa fe7b 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8005d22:	493f      	ldr	r1, [pc, #252]	; (8005e20 <OTM8009A_Init+0x370>)
 8005d24:	2000      	movs	r0, #0
 8005d26:	f7fa fe77 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8005d2a:	4969      	ldr	r1, [pc, #420]	; (8005ed0 <OTM8009A_Init+0x420>)
 8005d2c:	2000      	movs	r0, #0
 8005d2e:	f7fa fe73 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8005d32:	4968      	ldr	r1, [pc, #416]	; (8005ed4 <OTM8009A_Init+0x424>)
 8005d34:	2000      	movs	r0, #0
 8005d36:	f7fa fe6f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8005d3a:	4967      	ldr	r1, [pc, #412]	; (8005ed8 <OTM8009A_Init+0x428>)
 8005d3c:	2000      	movs	r0, #0
 8005d3e:	f7fa fe6b 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8005d42:	4966      	ldr	r1, [pc, #408]	; (8005edc <OTM8009A_Init+0x42c>)
 8005d44:	2000      	movs	r0, #0
 8005d46:	f7fa fe67 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8005d4a:	4965      	ldr	r1, [pc, #404]	; (8005ee0 <OTM8009A_Init+0x430>)
 8005d4c:	2000      	movs	r0, #0
 8005d4e:	f7fa fe63 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005d52:	4925      	ldr	r1, [pc, #148]	; (8005de8 <OTM8009A_Init+0x338>)
 8005d54:	2000      	movs	r0, #0
 8005d56:	f7fa fe5f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8005d5a:	4962      	ldr	r1, [pc, #392]	; (8005ee4 <OTM8009A_Init+0x434>)
 8005d5c:	2003      	movs	r0, #3
 8005d5e:	f7fa fe5b 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005d62:	4921      	ldr	r1, [pc, #132]	; (8005de8 <OTM8009A_Init+0x338>)
 8005d64:	2000      	movs	r0, #0
 8005d66:	f7fa fe57 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005d6a:	491f      	ldr	r1, [pc, #124]	; (8005de8 <OTM8009A_Init+0x338>)
 8005d6c:	2000      	movs	r0, #0
 8005d6e:	f7fa fe53 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8005d72:	495d      	ldr	r1, [pc, #372]	; (8005ee8 <OTM8009A_Init+0x438>)
 8005d74:	2010      	movs	r0, #16
 8005d76:	f7fa fe4f 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005d7a:	491b      	ldr	r1, [pc, #108]	; (8005de8 <OTM8009A_Init+0x338>)
 8005d7c:	2000      	movs	r0, #0
 8005d7e:	f7fa fe4b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8005d82:	495a      	ldr	r1, [pc, #360]	; (8005eec <OTM8009A_Init+0x43c>)
 8005d84:	2010      	movs	r0, #16
 8005d86:	f7fa fe47 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8005d8a:	2000      	movs	r0, #0
 8005d8c:	4958      	ldr	r1, [pc, #352]	; (8005ef0 <OTM8009A_Init+0x440>)
 8005d8e:	f7fa fe43 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8005d92:	2078      	movs	r0, #120	; 0x78
 8005d94:	f000 f9da 	bl	800614c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8005d98:	2c00      	cmp	r4, #0
 8005d9a:	f000 80c9 	beq.w	8005f30 <OTM8009A_Init+0x480>
 8005d9e:	2c02      	cmp	r4, #2
 8005da0:	d103      	bne.n	8005daa <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8005da2:	4954      	ldr	r1, [pc, #336]	; (8005ef4 <OTM8009A_Init+0x444>)
 8005da4:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8005da6:	f7fa fe37 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8005daa:	2d01      	cmp	r5, #1
 8005dac:	d10b      	bne.n	8005dc6 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8005dae:	4952      	ldr	r1, [pc, #328]	; (8005ef8 <OTM8009A_Init+0x448>)
 8005db0:	2000      	movs	r0, #0
 8005db2:	f7fa fe31 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8005db6:	4951      	ldr	r1, [pc, #324]	; (8005efc <OTM8009A_Init+0x44c>)
 8005db8:	2004      	movs	r0, #4
 8005dba:	f7fa fe2d 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8005dbe:	4950      	ldr	r1, [pc, #320]	; (8005f00 <OTM8009A_Init+0x450>)
 8005dc0:	2004      	movs	r0, #4
 8005dc2:	f7fa fe29 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8005dc6:	494f      	ldr	r1, [pc, #316]	; (8005f04 <OTM8009A_Init+0x454>)
 8005dc8:	2000      	movs	r0, #0
 8005dca:	f7fa fe25 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8005dce:	494e      	ldr	r1, [pc, #312]	; (8005f08 <OTM8009A_Init+0x458>)
 8005dd0:	2000      	movs	r0, #0
 8005dd2:	f7fa fe21 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8005dd6:	494d      	ldr	r1, [pc, #308]	; (8005f0c <OTM8009A_Init+0x45c>)
 8005dd8:	2000      	movs	r0, #0
 8005dda:	f7fa fe1d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8005dde:	494c      	ldr	r1, [pc, #304]	; (8005f10 <OTM8009A_Init+0x460>)
 8005de0:	2000      	movs	r0, #0
 8005de2:	f7fa fe19 	bl	8000a18 <DSI_IO_WriteCmd>
 8005de6:	e095      	b.n	8005f14 <OTM8009A_Init+0x464>
 8005de8:	08023374 	.word	0x08023374
 8005dec:	080233da 	.word	0x080233da
 8005df0:	0802338a 	.word	0x0802338a
 8005df4:	08023460 	.word	0x08023460
 8005df8:	080233a0 	.word	0x080233a0
 8005dfc:	080233b6 	.word	0x080233b6
 8005e00:	080233cc 	.word	0x080233cc
 8005e04:	080233d2 	.word	0x080233d2
 8005e08:	080233d4 	.word	0x080233d4
 8005e0c:	080233d6 	.word	0x080233d6
 8005e10:	080233d8 	.word	0x080233d8
 8005e14:	08023376 	.word	0x08023376
 8005e18:	08023378 	.word	0x08023378
 8005e1c:	0802337a 	.word	0x0802337a
 8005e20:	0802337c 	.word	0x0802337c
 8005e24:	0802337e 	.word	0x0802337e
 8005e28:	08023380 	.word	0x08023380
 8005e2c:	08023382 	.word	0x08023382
 8005e30:	08023384 	.word	0x08023384
 8005e34:	08023386 	.word	0x08023386
 8005e38:	08023388 	.word	0x08023388
 8005e3c:	080234de 	.word	0x080234de
 8005e40:	0802338c 	.word	0x0802338c
 8005e44:	0802338e 	.word	0x0802338e
 8005e48:	08023390 	.word	0x08023390
 8005e4c:	08023392 	.word	0x08023392
 8005e50:	08023394 	.word	0x08023394
 8005e54:	08023396 	.word	0x08023396
 8005e58:	08023398 	.word	0x08023398
 8005e5c:	0802339a 	.word	0x0802339a
 8005e60:	0802339c 	.word	0x0802339c
 8005e64:	080234e1 	.word	0x080234e1
 8005e68:	080234e4 	.word	0x080234e4
 8005e6c:	0802339e 	.word	0x0802339e
 8005e70:	080234eb 	.word	0x080234eb
 8005e74:	080233a2 	.word	0x080233a2
 8005e78:	080234fa 	.word	0x080234fa
 8005e7c:	080233a4 	.word	0x080233a4
 8005e80:	080233de 	.word	0x080233de
 8005e84:	080233a6 	.word	0x080233a6
 8005e88:	080233c4 	.word	0x080233c4
 8005e8c:	080233e9 	.word	0x080233e9
 8005e90:	080233a8 	.word	0x080233a8
 8005e94:	080233f4 	.word	0x080233f4
 8005e98:	08023404 	.word	0x08023404
 8005e9c:	08023414 	.word	0x08023414
 8005ea0:	0802341f 	.word	0x0802341f
 8005ea4:	0802342f 	.word	0x0802342f
 8005ea8:	080233aa 	.word	0x080233aa
 8005eac:	0802343f 	.word	0x0802343f
 8005eb0:	080233ac 	.word	0x080233ac
 8005eb4:	0802344a 	.word	0x0802344a
 8005eb8:	08023455 	.word	0x08023455
 8005ebc:	08023463 	.word	0x08023463
 8005ec0:	08023473 	.word	0x08023473
 8005ec4:	08023483 	.word	0x08023483
 8005ec8:	0802348e 	.word	0x0802348e
 8005ecc:	0802349e 	.word	0x0802349e
 8005ed0:	080233c6 	.word	0x080233c6
 8005ed4:	080233c8 	.word	0x080233c8
 8005ed8:	080233ca 	.word	0x080233ca
 8005edc:	080233ce 	.word	0x080233ce
 8005ee0:	080233d0 	.word	0x080233d0
 8005ee4:	080234ae 	.word	0x080234ae
 8005ee8:	080234bc 	.word	0x080234bc
 8005eec:	080234cd 	.word	0x080234cd
 8005ef0:	080233ae 	.word	0x080233ae
 8005ef4:	080233b0 	.word	0x080233b0
 8005ef8:	080233b4 	.word	0x080233b4
 8005efc:	080234b2 	.word	0x080234b2
 8005f00:	080234b7 	.word	0x080234b7
 8005f04:	080233b8 	.word	0x080233b8
 8005f08:	080233ba 	.word	0x080233ba
 8005f0c:	080233bc 	.word	0x080233bc
 8005f10:	080233be 	.word	0x080233be

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8005f14:	4908      	ldr	r1, [pc, #32]	; (8005f38 <OTM8009A_Init+0x488>)
 8005f16:	2000      	movs	r0, #0
 8005f18:	f7fa fd7e 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8005f1c:	4907      	ldr	r1, [pc, #28]	; (8005f3c <OTM8009A_Init+0x48c>)
 8005f1e:	2000      	movs	r0, #0
 8005f20:	f7fa fd7a 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8005f24:	4906      	ldr	r1, [pc, #24]	; (8005f40 <OTM8009A_Init+0x490>)
 8005f26:	2000      	movs	r0, #0
 8005f28:	f7fa fd76 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 8005f2c:	2000      	movs	r0, #0
 8005f2e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8005f30:	4904      	ldr	r1, [pc, #16]	; (8005f44 <OTM8009A_Init+0x494>)
 8005f32:	4620      	mov	r0, r4
 8005f34:	e737      	b.n	8005da6 <OTM8009A_Init+0x2f6>
 8005f36:	bf00      	nop
 8005f38:	080233c0 	.word	0x080233c0
 8005f3c:	08023374 	.word	0x08023374
 8005f40:	080233c2 	.word	0x080233c2
 8005f44:	080233b2 	.word	0x080233b2

08005f48 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8005f48:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8005f4a:	4d2e      	ldr	r5, [pc, #184]	; (8006004 <I2C1_Init+0xbc>)
{
 8005f4c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8005f4e:	4628      	mov	r0, r5
 8005f50:	f002 faf0 	bl	8008534 <HAL_I2C_GetState>
 8005f54:	4604      	mov	r4, r0
 8005f56:	2800      	cmp	r0, #0
 8005f58:	d151      	bne.n	8005ffe <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8005f5a:	4a2b      	ldr	r2, [pc, #172]	; (8006008 <I2C1_Init+0xc0>)
 8005f5c:	4b2b      	ldr	r3, [pc, #172]	; (800600c <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8005f5e:	4e2c      	ldr	r6, [pc, #176]	; (8006010 <I2C1_Init+0xc8>)
 8005f60:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8005f62:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8005f66:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8005f6a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8005f6e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8005f72:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8005f76:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8005f78:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8005f7a:	f043 0302 	orr.w	r3, r3, #2
 8005f7e:	6333      	str	r3, [r6, #48]	; 0x30
 8005f80:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8005f82:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8005f84:	f003 0302 	and.w	r3, r3, #2
 8005f88:	9301      	str	r3, [sp, #4]
 8005f8a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8005f8c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005f90:	2312      	movs	r3, #18
 8005f92:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8005f96:	2002      	movs	r0, #2
 8005f98:	2304      	movs	r3, #4
 8005f9a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8005f9e:	a903      	add	r1, sp, #12
 8005fa0:	481c      	ldr	r0, [pc, #112]	; (8006014 <I2C1_Init+0xcc>)
 8005fa2:	f001 fcf5 	bl	8007990 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8005fa6:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8005faa:	481a      	ldr	r0, [pc, #104]	; (8006014 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8005fac:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8005fae:	a903      	add	r1, sp, #12
 8005fb0:	f001 fcee 	bl	8007990 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8005fb4:	9402      	str	r4, [sp, #8]
 8005fb6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8005fb8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005fbc:	6433      	str	r3, [r6, #64]	; 0x40
 8005fbe:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8005fc0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005fc4:	9302      	str	r3, [sp, #8]
 8005fc6:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8005fc8:	6a33      	ldr	r3, [r6, #32]
 8005fca:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005fce:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8005fd0:	6a33      	ldr	r3, [r6, #32]
 8005fd2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8005fd6:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8005fd8:	4622      	mov	r2, r4
 8005fda:	2105      	movs	r1, #5
 8005fdc:	201f      	movs	r0, #31
 8005fde:	f000 fea3 	bl	8006d28 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8005fe2:	201f      	movs	r0, #31
 8005fe4:	f000 fed2 	bl	8006d8c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8005fe8:	4622      	mov	r2, r4
 8005fea:	2105      	movs	r1, #5
 8005fec:	2020      	movs	r0, #32
 8005fee:	f000 fe9b 	bl	8006d28 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8005ff2:	2020      	movs	r0, #32
 8005ff4:	f000 feca 	bl	8006d8c <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8005ff8:	4628      	mov	r0, r5
 8005ffa:	f002 f841 	bl	8008080 <HAL_I2C_Init>
  }
}
 8005ffe:	b008      	add	sp, #32
 8006000:	bd70      	pop	{r4, r5, r6, pc}
 8006002:	bf00      	nop
 8006004:	20005ba0 	.word	0x20005ba0
 8006008:	40005400 	.word	0x40005400
 800600c:	00061a80 	.word	0x00061a80
 8006010:	40023800 	.word	0x40023800
 8006014:	40020400 	.word	0x40020400

08006018 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8006018:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 800601a:	4803      	ldr	r0, [pc, #12]	; (8006028 <I2C1_Error.isra.0+0x10>)
 800601c:	f002 f8d8 	bl	80081d0 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8006020:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8006024:	f7ff bf90 	b.w	8005f48 <I2C1_Init>
 8006028:	20005ba0 	.word	0x20005ba0

0800602c <BSP_PB_Init>:
{
 800602c:	b510      	push	{r4, lr}
 800602e:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8006030:	4b19      	ldr	r3, [pc, #100]	; (8006098 <BSP_PB_Init+0x6c>)
 8006032:	2400      	movs	r4, #0
 8006034:	9400      	str	r4, [sp, #0]
 8006036:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006038:	f042 0201 	orr.w	r2, r2, #1
 800603c:	631a      	str	r2, [r3, #48]	; 0x30
 800603e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006040:	f003 0301 	and.w	r3, r3, #1
 8006044:	9300      	str	r3, [sp, #0]
 8006046:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8006048:	b969      	cbnz	r1, 8006066 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800604a:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800604c:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8006050:	2302      	movs	r3, #2
 8006052:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8006054:	4b11      	ldr	r3, [pc, #68]	; (800609c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8006056:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8006058:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800605c:	a901      	add	r1, sp, #4
 800605e:	f001 fc97 	bl	8007990 <HAL_GPIO_Init>
}
 8006062:	b006      	add	sp, #24
 8006064:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8006066:	2901      	cmp	r1, #1
 8006068:	d1fb      	bne.n	8006062 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800606a:	2302      	movs	r3, #2
 800606c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800606e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8006072:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8006074:	4b09      	ldr	r3, [pc, #36]	; (800609c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8006076:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8006078:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800607c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800607e:	a901      	add	r1, sp, #4
 8006080:	f001 fc86 	bl	8007990 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8006084:	4622      	mov	r2, r4
 8006086:	210f      	movs	r1, #15
 8006088:	2006      	movs	r0, #6
 800608a:	f000 fe4d 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800608e:	2006      	movs	r0, #6
 8006090:	f000 fe7c 	bl	8006d8c <HAL_NVIC_EnableIRQ>
}
 8006094:	e7e5      	b.n	8006062 <BSP_PB_Init+0x36>
 8006096:	bf00      	nop
 8006098:	40023800 	.word	0x40023800
 800609c:	2000006c 	.word	0x2000006c

080060a0 <BSP_PB_GetState>:
{
 80060a0:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 80060a2:	4b03      	ldr	r3, [pc, #12]	; (80060b0 <BSP_PB_GetState+0x10>)
 80060a4:	2101      	movs	r1, #1
 80060a6:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80060aa:	f001 fdf9 	bl	8007ca0 <HAL_GPIO_ReadPin>
}
 80060ae:	bd08      	pop	{r3, pc}
 80060b0:	2000006c 	.word	0x2000006c

080060b4 <TS_IO_Init>:
 80060b4:	f7ff bf48 	b.w	8005f48 <I2C1_Init>

080060b8 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80060b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 80060ba:	2301      	movs	r3, #1
 80060bc:	f88d 2017 	strb.w	r2, [sp, #23]
 80060c0:	2264      	movs	r2, #100	; 0x64
 80060c2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80060c6:	f10d 0217 	add.w	r2, sp, #23
 80060ca:	9200      	str	r2, [sp, #0]
 80060cc:	460a      	mov	r2, r1
 80060ce:	4601      	mov	r1, r0
 80060d0:	4804      	ldr	r0, [pc, #16]	; (80060e4 <TS_IO_Write+0x2c>)
 80060d2:	f002 f897 	bl	8008204 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80060d6:	b108      	cbz	r0, 80060dc <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 80060d8:	f7ff ff9e 	bl	8006018 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 80060dc:	b007      	add	sp, #28
 80060de:	f85d fb04 	ldr.w	pc, [sp], #4
 80060e2:	bf00      	nop
 80060e4:	20005ba0 	.word	0x20005ba0

080060e8 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80060e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80060ea:	2300      	movs	r3, #0
{
 80060ec:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80060ee:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80060f2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80060f6:	2301      	movs	r3, #1
 80060f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80060fc:	f10d 0117 	add.w	r1, sp, #23
 8006100:	9100      	str	r1, [sp, #0]
 8006102:	4601      	mov	r1, r0
 8006104:	4805      	ldr	r0, [pc, #20]	; (800611c <TS_IO_Read+0x34>)
 8006106:	f002 f90d 	bl	8008324 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800610a:	b108      	cbz	r0, 8006110 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 800610c:	f7ff ff84 	bl	8006018 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 8006110:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8006114:	b007      	add	sp, #28
 8006116:	f85d fb04 	ldr.w	pc, [sp], #4
 800611a:	bf00      	nop
 800611c:	20005ba0 	.word	0x20005ba0

08006120 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8006120:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8006122:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8006126:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800612a:	9200      	str	r2, [sp, #0]
 800612c:	2301      	movs	r3, #1
 800612e:	460a      	mov	r2, r1
 8006130:	4601      	mov	r1, r0
 8006132:	4805      	ldr	r0, [pc, #20]	; (8006148 <TS_IO_ReadMultiple+0x28>)
 8006134:	f002 f8f6 	bl	8008324 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8006138:	4604      	mov	r4, r0
 800613a:	b108      	cbz	r0, 8006140 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 800613c:	f7ff ff6c 	bl	8006018 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8006140:	b2a0      	uxth	r0, r4
 8006142:	b004      	add	sp, #16
 8006144:	bd10      	pop	{r4, pc}
 8006146:	bf00      	nop
 8006148:	20005ba0 	.word	0x20005ba0

0800614c <OTM8009A_IO_Delay>:
 800614c:	f000 bc40 	b.w	80069d0 <HAL_Delay>

08006150 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8006150:	b500      	push	{lr}
 8006152:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8006154:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006158:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800615a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800615e:	2205      	movs	r2, #5
 8006160:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8006162:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8006164:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8006166:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8006168:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800616c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8006170:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8006174:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8006176:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8006178:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800617a:	2210      	movs	r2, #16
 800617c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800617e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8006182:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8006184:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8006186:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8006188:	a906      	add	r1, sp, #24
 800618a:	466a      	mov	r2, sp
 800618c:	4804      	ldr	r0, [pc, #16]	; (80061a0 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800618e:	f002 fd54 	bl	8008c3a <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8006192:	3800      	subs	r0, #0
 8006194:	bf18      	it	ne
 8006196:	2001      	movne	r0, #1
 8006198:	b015      	add	sp, #84	; 0x54
 800619a:	f85d fb04 	ldr.w	pc, [sp], #4
 800619e:	bf00      	nop
 80061a0:	2000f024 	.word	0x2000f024

080061a4 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80061a4:	b500      	push	{lr}
 80061a6:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80061a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80061ac:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80061ae:	2306      	movs	r3, #6
 80061b0:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80061b2:	4817      	ldr	r0, [pc, #92]	; (8006210 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80061b4:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80061b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80061ba:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80061bc:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80061c0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80061c4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80061c6:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80061c8:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80061ca:	f002 fcf2 	bl	8008bb2 <HAL_QSPI_Command>
 80061ce:	b9e0      	cbnz	r0, 800620a <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80061d0:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80061d2:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80061d6:	2201      	movs	r2, #1
 80061d8:	2310      	movs	r3, #16
 80061da:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80061de:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80061e2:	2305      	movs	r3, #5
 80061e4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80061e8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80061ec:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80061ee:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80061f0:	4807      	ldr	r0, [pc, #28]	; (8006210 <QSPI_WriteEnable.constprop.0+0x6c>)
 80061f2:	f241 3388 	movw	r3, #5000	; 0x1388
 80061f6:	466a      	mov	r2, sp
 80061f8:	a906      	add	r1, sp, #24
 80061fa:	f002 fd1e 	bl	8008c3a <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80061fe:	3800      	subs	r0, #0
 8006200:	bf18      	it	ne
 8006202:	2001      	movne	r0, #1
}
 8006204:	b015      	add	sp, #84	; 0x54
 8006206:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800620a:	2001      	movs	r0, #1
 800620c:	e7fa      	b.n	8006204 <QSPI_WriteEnable.constprop.0+0x60>
 800620e:	bf00      	nop
 8006210:	2000f024 	.word	0x2000f024

08006214 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8006214:	b500      	push	{lr}
 8006216:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8006218:	f44f 7380 	mov.w	r3, #256	; 0x100
 800621c:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800621e:	23eb      	movs	r3, #235	; 0xeb
 8006220:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8006222:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8006226:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8006228:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800622c:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800622e:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8006232:	2300      	movs	r3, #0
 8006234:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8006238:	220a      	movs	r2, #10
 800623a:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800623c:	a902      	add	r1, sp, #8
 800623e:	466a      	mov	r2, sp
 8006240:	4806      	ldr	r0, [pc, #24]	; (800625c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8006242:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8006244:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8006248:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800624a:	f002 fd46 	bl	8008cda <HAL_QSPI_MemoryMapped>
}
 800624e:	3800      	subs	r0, #0
 8006250:	bf18      	it	ne
 8006252:	2001      	movne	r0, #1
 8006254:	b011      	add	sp, #68	; 0x44
 8006256:	f85d fb04 	ldr.w	pc, [sp], #4
 800625a:	bf00      	nop
 800625c:	2000f024 	.word	0x2000f024

08006260 <BSP_QSPI_MspInit>:
{
 8006260:	b570      	push	{r4, r5, r6, lr}
 8006262:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8006264:	4b2c      	ldr	r3, [pc, #176]	; (8006318 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8006266:	482d      	ldr	r0, [pc, #180]	; (800631c <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8006268:	2400      	movs	r4, #0
 800626a:	9400      	str	r4, [sp, #0]
 800626c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800626e:	f042 0202 	orr.w	r2, r2, #2
 8006272:	639a      	str	r2, [r3, #56]	; 0x38
 8006274:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006276:	f002 0202 	and.w	r2, r2, #2
 800627a:	9200      	str	r2, [sp, #0]
 800627c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800627e:	699a      	ldr	r2, [r3, #24]
 8006280:	f042 0202 	orr.w	r2, r2, #2
 8006284:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8006286:	699a      	ldr	r2, [r3, #24]
 8006288:	f022 0202 	bic.w	r2, r2, #2
 800628c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800628e:	9401      	str	r4, [sp, #4]
 8006290:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006292:	f042 0202 	orr.w	r2, r2, #2
 8006296:	631a      	str	r2, [r3, #48]	; 0x30
 8006298:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800629a:	f002 0202 	and.w	r2, r2, #2
 800629e:	9201      	str	r2, [sp, #4]
 80062a0:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80062a2:	9402      	str	r4, [sp, #8]
 80062a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80062a6:	f042 0220 	orr.w	r2, r2, #32
 80062aa:	631a      	str	r2, [r3, #48]	; 0x30
 80062ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80062ae:	f003 0320 	and.w	r3, r3, #32
 80062b2:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80062b4:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80062b6:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80062b8:	2302      	movs	r3, #2
 80062ba:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80062be:	2101      	movs	r1, #1
 80062c0:	2303      	movs	r3, #3
 80062c2:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80062c6:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80062c8:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80062ca:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80062cc:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80062ce:	f001 fb5f 	bl	8007990 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80062d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80062d6:	a903      	add	r1, sp, #12
 80062d8:	4811      	ldr	r0, [pc, #68]	; (8006320 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80062da:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80062dc:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80062de:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80062e0:	f001 fb56 	bl	8007990 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80062e4:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80062e8:	a903      	add	r1, sp, #12
 80062ea:	480d      	ldr	r0, [pc, #52]	; (8006320 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80062ec:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80062ee:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80062f0:	f001 fb4e 	bl	8007990 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80062f4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80062f6:	a903      	add	r1, sp, #12
 80062f8:	4809      	ldr	r0, [pc, #36]	; (8006320 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80062fa:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80062fc:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80062fe:	f001 fb47 	bl	8007990 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8006302:	4622      	mov	r2, r4
 8006304:	210f      	movs	r1, #15
 8006306:	205b      	movs	r0, #91	; 0x5b
 8006308:	f000 fd0e 	bl	8006d28 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800630c:	205b      	movs	r0, #91	; 0x5b
 800630e:	f000 fd3d 	bl	8006d8c <HAL_NVIC_EnableIRQ>
}
 8006312:	b008      	add	sp, #32
 8006314:	bd70      	pop	{r4, r5, r6, pc}
 8006316:	bf00      	nop
 8006318:	40023800 	.word	0x40023800
 800631c:	40020400 	.word	0x40020400
 8006320:	40021400 	.word	0x40021400

08006324 <BSP_QSPI_Init>:
{
 8006324:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8006326:	4c48      	ldr	r4, [pc, #288]	; (8006448 <BSP_QSPI_Init+0x124>)
 8006328:	4b48      	ldr	r3, [pc, #288]	; (800644c <BSP_QSPI_Init+0x128>)
 800632a:	6023      	str	r3, [r4, #0]
{
 800632c:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800632e:	4620      	mov	r0, r4
 8006330:	f002 fc2c 	bl	8008b8c <HAL_QSPI_DeInit>
 8006334:	4605      	mov	r5, r0
 8006336:	b110      	cbz	r0, 800633e <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8006338:	2001      	movs	r0, #1
}
 800633a:	b011      	add	sp, #68	; 0x44
 800633c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800633e:	4601      	mov	r1, r0
 8006340:	4620      	mov	r0, r4
 8006342:	f7ff ff8d 	bl	8006260 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8006346:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8006348:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800634a:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800634e:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8006350:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8006354:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8006358:	fab3 f383 	clz	r3, r3
 800635c:	3b01      	subs	r3, #1
 800635e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8006360:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8006362:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8006366:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800636a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800636e:	f002 fbb9 	bl	8008ae4 <HAL_QSPI_Init>
 8006372:	2800      	cmp	r0, #0
 8006374:	d1e0      	bne.n	8006338 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8006376:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800637a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800637e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8006382:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8006384:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8006386:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8006388:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800638a:	f241 3288 	movw	r2, #5000	; 0x1388
 800638e:	a902      	add	r1, sp, #8
 8006390:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8006392:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8006394:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8006396:	f002 fc0c 	bl	8008bb2 <HAL_QSPI_Command>
 800639a:	b108      	cbz	r0, 80063a0 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800639c:	2004      	movs	r0, #4
 800639e:	e7cc      	b.n	800633a <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80063a0:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80063a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80063a6:	a902      	add	r1, sp, #8
 80063a8:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80063aa:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80063ac:	f002 fc01 	bl	8008bb2 <HAL_QSPI_Command>
 80063b0:	2800      	cmp	r0, #0
 80063b2:	d1f3      	bne.n	800639c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80063b4:	f241 3088 	movw	r0, #5000	; 0x1388
 80063b8:	f7ff feca 	bl	8006150 <QSPI_AutoPollingMemReady.constprop.0>
 80063bc:	2800      	cmp	r0, #0
 80063be:	d1ed      	bne.n	800639c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80063c0:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80063c4:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80063c8:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80063cc:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80063ce:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80063d0:	f241 3288 	movw	r2, #5000	; 0x1388
 80063d4:	a902      	add	r1, sp, #8
 80063d6:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80063d8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80063da:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80063dc:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80063de:	f002 fbe8 	bl	8008bb2 <HAL_QSPI_Command>
 80063e2:	2800      	cmp	r0, #0
 80063e4:	d1da      	bne.n	800639c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80063e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80063ea:	f10d 0107 	add.w	r1, sp, #7
 80063ee:	4620      	mov	r0, r4
 80063f0:	f002 fd52 	bl	8008e98 <HAL_QSPI_Receive>
 80063f4:	2800      	cmp	r0, #0
 80063f6:	d1d1      	bne.n	800639c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80063f8:	f7ff fed4 	bl	80061a4 <QSPI_WriteEnable.constprop.0>
 80063fc:	2800      	cmp	r0, #0
 80063fe:	d1cd      	bne.n	800639c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8006400:	2381      	movs	r3, #129	; 0x81
 8006402:	9302      	str	r3, [sp, #8]
 8006404:	22f0      	movs	r2, #240	; 0xf0
 8006406:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800640a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800640e:	210a      	movs	r1, #10
 8006410:	fab2 f282 	clz	r2, r2
 8006414:	fa01 f202 	lsl.w	r2, r1, r2
 8006418:	f003 030f 	and.w	r3, r3, #15
 800641c:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800641e:	a902      	add	r1, sp, #8
 8006420:	f241 3288 	movw	r2, #5000	; 0x1388
 8006424:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8006426:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800642a:	f002 fbc2 	bl	8008bb2 <HAL_QSPI_Command>
 800642e:	2800      	cmp	r0, #0
 8006430:	d1b4      	bne.n	800639c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8006432:	f241 3288 	movw	r2, #5000	; 0x1388
 8006436:	f10d 0107 	add.w	r1, sp, #7
 800643a:	4620      	mov	r0, r4
 800643c:	f002 fcd0 	bl	8008de0 <HAL_QSPI_Transmit>
 8006440:	2800      	cmp	r0, #0
 8006442:	f43f af7a 	beq.w	800633a <BSP_QSPI_Init+0x16>
 8006446:	e7a9      	b.n	800639c <BSP_QSPI_Init+0x78>
 8006448:	2000f024 	.word	0x2000f024
 800644c:	a0001000 	.word	0xa0001000

08006450 <BSP_QSPI_MspDeInit>:
{
 8006450:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8006452:	205b      	movs	r0, #91	; 0x5b
 8006454:	f000 fca8 	bl	8006da8 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8006458:	4814      	ldr	r0, [pc, #80]	; (80064ac <BSP_QSPI_MspDeInit+0x5c>)
 800645a:	2140      	movs	r1, #64	; 0x40
 800645c:	f001 fb7e 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8006460:	4813      	ldr	r0, [pc, #76]	; (80064b0 <BSP_QSPI_MspDeInit+0x60>)
 8006462:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8006466:	f001 fb79 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800646a:	4811      	ldr	r0, [pc, #68]	; (80064b0 <BSP_QSPI_MspDeInit+0x60>)
 800646c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006470:	f001 fb74 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8006474:	480e      	ldr	r0, [pc, #56]	; (80064b0 <BSP_QSPI_MspDeInit+0x60>)
 8006476:	f44f 7100 	mov.w	r1, #512	; 0x200
 800647a:	f001 fb6f 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800647e:	480c      	ldr	r0, [pc, #48]	; (80064b0 <BSP_QSPI_MspDeInit+0x60>)
 8006480:	2180      	movs	r1, #128	; 0x80
 8006482:	f001 fb6b 	bl	8007b5c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8006486:	480a      	ldr	r0, [pc, #40]	; (80064b0 <BSP_QSPI_MspDeInit+0x60>)
 8006488:	2140      	movs	r1, #64	; 0x40
 800648a:	f001 fb67 	bl	8007b5c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800648e:	4b09      	ldr	r3, [pc, #36]	; (80064b4 <BSP_QSPI_MspDeInit+0x64>)
 8006490:	699a      	ldr	r2, [r3, #24]
 8006492:	f042 0202 	orr.w	r2, r2, #2
 8006496:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8006498:	699a      	ldr	r2, [r3, #24]
 800649a:	f022 0202 	bic.w	r2, r2, #2
 800649e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80064a0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80064a2:	f022 0202 	bic.w	r2, r2, #2
 80064a6:	639a      	str	r2, [r3, #56]	; 0x38
}
 80064a8:	bd08      	pop	{r3, pc}
 80064aa:	bf00      	nop
 80064ac:	40020400 	.word	0x40020400
 80064b0:	40021400 	.word	0x40021400
 80064b4:	40023800 	.word	0x40023800

080064b8 <BSP_QSPI_DeInit>:
{
 80064b8:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80064ba:	4d08      	ldr	r5, [pc, #32]	; (80064dc <BSP_QSPI_DeInit+0x24>)
 80064bc:	4b08      	ldr	r3, [pc, #32]	; (80064e0 <BSP_QSPI_DeInit+0x28>)
 80064be:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80064c0:	4628      	mov	r0, r5
 80064c2:	f002 fb63 	bl	8008b8c <HAL_QSPI_DeInit>
 80064c6:	4604      	mov	r4, r0
 80064c8:	b928      	cbnz	r0, 80064d6 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80064ca:	4601      	mov	r1, r0
 80064cc:	4628      	mov	r0, r5
 80064ce:	f7ff ffbf 	bl	8006450 <BSP_QSPI_MspDeInit>
}
 80064d2:	4620      	mov	r0, r4
 80064d4:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80064d6:	2401      	movs	r4, #1
 80064d8:	e7fb      	b.n	80064d2 <BSP_QSPI_DeInit+0x1a>
 80064da:	bf00      	nop
 80064dc:	2000f024 	.word	0x2000f024
 80064e0:	a0001000 	.word	0xa0001000

080064e4 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80064e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80064e8:	4c21      	ldr	r4, [pc, #132]	; (8006570 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80064ea:	4d22      	ldr	r5, [pc, #136]	; (8006574 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80064ec:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80064ee:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80064f2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80064f4:	4621      	mov	r1, r4
{
 80064f6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80064f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80064fc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80064fe:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8006502:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8006506:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800650a:	f003 f965 	bl	80097d8 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800650e:	4630      	mov	r0, r6
 8006510:	f000 fa5e 	bl	80069d0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8006514:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8006516:	4621      	mov	r1, r4
 8006518:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800651c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800651e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8006522:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8006526:	f003 f957 	bl	80097d8 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800652a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800652c:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8006530:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8006532:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8006534:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006538:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800653a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800653e:	f003 f94b 	bl	80097d8 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8006542:	f44f 730c 	mov.w	r3, #560	; 0x230
 8006546:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8006548:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800654a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800654e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8006550:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8006552:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8006554:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006558:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800655a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800655c:	f003 f93c 	bl	80097d8 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8006560:	4649      	mov	r1, r9
 8006562:	4628      	mov	r0, r5
}
 8006564:	b003      	add	sp, #12
 8006566:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800656a:	f003 b94c 	b.w	8009806 <HAL_SDRAM_ProgramRefreshRate>
 800656e:	bf00      	nop
 8006570:	20005bf4 	.word	0x20005bf4
 8006574:	20005ce0 	.word	0x20005ce0

08006578 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8006578:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800657a:	4606      	mov	r6, r0
{
 800657c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800657e:	2800      	cmp	r0, #0
 8006580:	f000 80bd 	beq.w	80066fe <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8006584:	4b5f      	ldr	r3, [pc, #380]	; (8006704 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8006586:	4860      	ldr	r0, [pc, #384]	; (8006708 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8006588:	4c60      	ldr	r4, [pc, #384]	; (800670c <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800658a:	2500      	movs	r5, #0
 800658c:	9500      	str	r5, [sp, #0]
 800658e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006590:	f042 0201 	orr.w	r2, r2, #1
 8006594:	639a      	str	r2, [r3, #56]	; 0x38
 8006596:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006598:	f002 0201 	and.w	r2, r2, #1
 800659c:	9200      	str	r2, [sp, #0]
 800659e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80065a0:	9501      	str	r5, [sp, #4]
 80065a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065a4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80065a8:	631a      	str	r2, [r3, #48]	; 0x30
 80065aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065ac:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80065b0:	9201      	str	r2, [sp, #4]
 80065b2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80065b4:	9502      	str	r5, [sp, #8]
 80065b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065b8:	f042 0204 	orr.w	r2, r2, #4
 80065bc:	631a      	str	r2, [r3, #48]	; 0x30
 80065be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065c0:	f002 0204 	and.w	r2, r2, #4
 80065c4:	9202      	str	r2, [sp, #8]
 80065c6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80065c8:	9503      	str	r5, [sp, #12]
 80065ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065cc:	f042 0208 	orr.w	r2, r2, #8
 80065d0:	631a      	str	r2, [r3, #48]	; 0x30
 80065d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065d4:	f002 0208 	and.w	r2, r2, #8
 80065d8:	9203      	str	r2, [sp, #12]
 80065da:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80065dc:	9504      	str	r5, [sp, #16]
 80065de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065e0:	f042 0210 	orr.w	r2, r2, #16
 80065e4:	631a      	str	r2, [r3, #48]	; 0x30
 80065e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065e8:	f002 0210 	and.w	r2, r2, #16
 80065ec:	9204      	str	r2, [sp, #16]
 80065ee:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80065f0:	9505      	str	r5, [sp, #20]
 80065f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065f4:	f042 0220 	orr.w	r2, r2, #32
 80065f8:	631a      	str	r2, [r3, #48]	; 0x30
 80065fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065fc:	f002 0220 	and.w	r2, r2, #32
 8006600:	9205      	str	r2, [sp, #20]
 8006602:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8006604:	9506      	str	r5, [sp, #24]
 8006606:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006608:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800660c:	631a      	str	r2, [r3, #48]	; 0x30
 800660e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006610:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8006614:	9206      	str	r2, [sp, #24]
 8006616:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8006618:	9507      	str	r5, [sp, #28]
 800661a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800661c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006620:	631a      	str	r2, [r3, #48]	; 0x30
 8006622:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006624:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8006628:	9207      	str	r2, [sp, #28]
 800662a:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800662c:	9508      	str	r5, [sp, #32]
 800662e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006630:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006634:	631a      	str	r2, [r3, #48]	; 0x30
 8006636:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006638:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800663c:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800663e:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8006640:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8006642:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8006644:	2301      	movs	r3, #1
 8006646:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800664a:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800664c:	220c      	movs	r2, #12
 800664e:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8006650:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8006652:	f001 f99d 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8006656:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800665a:	482d      	ldr	r0, [pc, #180]	; (8006710 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800665c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800665e:	a909      	add	r1, sp, #36	; 0x24
 8006660:	f001 f996 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8006664:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8006668:	482a      	ldr	r0, [pc, #168]	; (8006714 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800666a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800666c:	a909      	add	r1, sp, #36	; 0x24
 800666e:	f001 f98f 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8006672:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8006676:	4828      	ldr	r0, [pc, #160]	; (8006718 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8006678:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800667a:	a909      	add	r1, sp, #36	; 0x24
 800667c:	f001 f988 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8006680:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8006684:	4825      	ldr	r0, [pc, #148]	; (800671c <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8006686:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8006688:	a909      	add	r1, sp, #36	; 0x24
 800668a:	f001 f981 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800668e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8006692:	4823      	ldr	r0, [pc, #140]	; (8006720 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8006694:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8006696:	a909      	add	r1, sp, #36	; 0x24
 8006698:	f001 f97a 	bl	8007990 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800669c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80066a0:	4820      	ldr	r0, [pc, #128]	; (8006724 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80066a2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80066a4:	a909      	add	r1, sp, #36	; 0x24
 80066a6:	f001 f973 	bl	8007990 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80066aa:	2280      	movs	r2, #128	; 0x80
 80066ac:	f44f 7300 	mov.w	r3, #512	; 0x200
 80066b0:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80066b4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80066b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80066bc:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80066c0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80066c4:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80066c8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80066cc:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80066d0:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80066d2:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80066d6:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80066d8:	4b13      	ldr	r3, [pc, #76]	; (8006728 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80066da:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80066dc:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80066de:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80066e0:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80066e2:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80066e4:	f000 fc1a 	bl	8006f1c <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80066e8:	4620      	mov	r0, r4
 80066ea:	f000 fb97 	bl	8006e1c <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80066ee:	2038      	movs	r0, #56	; 0x38
 80066f0:	462a      	mov	r2, r5
 80066f2:	2105      	movs	r1, #5
 80066f4:	f000 fb18 	bl	8006d28 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80066f8:	2038      	movs	r0, #56	; 0x38
 80066fa:	f000 fb47 	bl	8006d8c <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80066fe:	b00e      	add	sp, #56	; 0x38
 8006700:	bd70      	pop	{r4, r5, r6, pc}
 8006702:	bf00      	nop
 8006704:	40023800 	.word	0x40023800
 8006708:	40020800 	.word	0x40020800
 800670c:	20005c20 	.word	0x20005c20
 8006710:	40020c00 	.word	0x40020c00
 8006714:	40021000 	.word	0x40021000
 8006718:	40021400 	.word	0x40021400
 800671c:	40021800 	.word	0x40021800
 8006720:	40021c00 	.word	0x40021c00
 8006724:	40022000 	.word	0x40022000
 8006728:	40026410 	.word	0x40026410

0800672c <BSP_SDRAM_Init>:
{
 800672c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800672e:	4c19      	ldr	r4, [pc, #100]	; (8006794 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8006730:	4d19      	ldr	r5, [pc, #100]	; (8006798 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8006732:	4b1a      	ldr	r3, [pc, #104]	; (800679c <BSP_SDRAM_Init+0x70>)
 8006734:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8006736:	2107      	movs	r1, #7
 8006738:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800673a:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800673c:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8006740:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8006744:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8006748:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800674a:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800674c:	2340      	movs	r3, #64	; 0x40
 800674e:	2220      	movs	r2, #32
 8006750:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8006754:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8006756:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800675a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800675e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8006762:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006766:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800676a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800676c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8006770:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8006772:	f7ff ff01 	bl	8006578 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8006776:	4629      	mov	r1, r5
 8006778:	4620      	mov	r0, r4
 800677a:	f002 ffff 	bl	800977c <HAL_SDRAM_Init>
 800677e:	4c08      	ldr	r4, [pc, #32]	; (80067a0 <BSP_SDRAM_Init+0x74>)
 8006780:	3800      	subs	r0, #0
 8006782:	bf18      	it	ne
 8006784:	2001      	movne	r0, #1
 8006786:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8006788:	f240 5069 	movw	r0, #1385	; 0x569
 800678c:	f7ff feaa 	bl	80064e4 <BSP_SDRAM_Initialization_sequence>
}
 8006790:	7820      	ldrb	r0, [r4, #0]
 8006792:	bd38      	pop	{r3, r4, r5, pc}
 8006794:	20005ce0 	.word	0x20005ce0
 8006798:	20005c04 	.word	0x20005c04
 800679c:	a0000140 	.word	0xa0000140
 80067a0:	20000070 	.word	0x20000070

080067a4 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80067a4:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80067a6:	b148      	cbz	r0, 80067bc <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80067a8:	2038      	movs	r0, #56	; 0x38
 80067aa:	f000 fafd 	bl	8006da8 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80067ae:	4804      	ldr	r0, [pc, #16]	; (80067c0 <BSP_SDRAM_MspDeInit+0x1c>)
 80067b0:	4b04      	ldr	r3, [pc, #16]	; (80067c4 <BSP_SDRAM_MspDeInit+0x20>)
 80067b2:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80067b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80067b8:	f000 bbb0 	b.w	8006f1c <HAL_DMA_DeInit>
}
 80067bc:	bd08      	pop	{r3, pc}
 80067be:	bf00      	nop
 80067c0:	20005c80 	.word	0x20005c80
 80067c4:	40026410 	.word	0x40026410

080067c8 <BSP_SDRAM_DeInit>:
{
 80067c8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80067ca:	4c07      	ldr	r4, [pc, #28]	; (80067e8 <BSP_SDRAM_DeInit+0x20>)
 80067cc:	4b07      	ldr	r3, [pc, #28]	; (80067ec <BSP_SDRAM_DeInit+0x24>)
 80067ce:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80067d0:	4620      	mov	r0, r4
 80067d2:	f002 fff3 	bl	80097bc <HAL_SDRAM_DeInit>
 80067d6:	4d06      	ldr	r5, [pc, #24]	; (80067f0 <BSP_SDRAM_DeInit+0x28>)
 80067d8:	4601      	mov	r1, r0
 80067da:	b918      	cbnz	r0, 80067e4 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80067dc:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80067de:	4620      	mov	r0, r4
 80067e0:	f7ff ffe0 	bl	80067a4 <BSP_SDRAM_MspDeInit>
}
 80067e4:	7828      	ldrb	r0, [r5, #0]
 80067e6:	bd38      	pop	{r3, r4, r5, pc}
 80067e8:	20005ce0 	.word	0x20005ce0
 80067ec:	a0000140 	.word	0xa0000140
 80067f0:	20000071 	.word	0x20000071

080067f4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80067f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80067f8:	4d19      	ldr	r5, [pc, #100]	; (8006860 <BSP_TS_Init+0x6c>)
 80067fa:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800686c <BSP_TS_Init+0x78>
 80067fe:	682b      	ldr	r3, [r5, #0]
{
 8006800:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8006802:	f898 0000 	ldrb.w	r0, [r8]
{
 8006806:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8006808:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800680a:	686b      	ldr	r3, [r5, #4]
 800680c:	2054      	movs	r0, #84	; 0x54
 800680e:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8006810:	b2c0      	uxtb	r0, r0
 8006812:	2811      	cmp	r0, #17
 8006814:	4646      	mov	r6, r8
 8006816:	46a9      	mov	r9, r5
 8006818:	d00b      	beq.n	8006832 <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800681a:	686b      	ldr	r3, [r5, #4]
 800681c:	2070      	movs	r0, #112	; 0x70
 800681e:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8006820:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8006822:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8006824:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8006826:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800682a:	d005      	beq.n	8006838 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800682c:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800682e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8006832:	2354      	movs	r3, #84	; 0x54
 8006834:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8006838:	4b0a      	ldr	r3, [pc, #40]	; (8006864 <BSP_TS_Init+0x70>)
 800683a:	4d0b      	ldr	r5, [pc, #44]	; (8006868 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 800683c:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800683e:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8006842:	42bc      	cmp	r4, r7
 8006844:	bf34      	ite	cc
 8006846:	2101      	movcc	r1, #1
 8006848:	210c      	movcs	r1, #12
 800684a:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800684c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8006850:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8006852:	682b      	ldr	r3, [r5, #0]
 8006854:	7830      	ldrb	r0, [r6, #0]
 8006856:	68db      	ldr	r3, [r3, #12]
 8006858:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800685a:	2000      	movs	r0, #0
 800685c:	e7e7      	b.n	800682e <BSP_TS_Init+0x3a>
 800685e:	bf00      	nop
 8006860:	20000044 	.word	0x20000044
 8006864:	20005d2c 	.word	0x20005d2c
 8006868:	20005d28 	.word	0x20005d28
 800686c:	20005d14 	.word	0x20005d14

08006870 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8006870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8006874:	4c34      	ldr	r4, [pc, #208]	; (8006948 <BSP_TS_GetState+0xd8>)
 8006876:	4d35      	ldr	r5, [pc, #212]	; (800694c <BSP_TS_GetState+0xdc>)
 8006878:	6823      	ldr	r3, [r4, #0]
{
 800687a:	b085      	sub	sp, #20
 800687c:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800687e:	691b      	ldr	r3, [r3, #16]
 8006880:	7828      	ldrb	r0, [r5, #0]
 8006882:	4798      	blx	r3
 8006884:	46a1      	mov	r9, r4
 8006886:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8006888:	9501      	str	r5, [sp, #4]
 800688a:	b158      	cbz	r0, 80068a4 <BSP_TS_GetState+0x34>
 800688c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8006958 <BSP_TS_GetState+0xe8>
 8006890:	4f2f      	ldr	r7, [pc, #188]	; (8006950 <BSP_TS_GetState+0xe0>)
 8006892:	f106 0b02 	add.w	fp, r6, #2
 8006896:	ad03      	add	r5, sp, #12
 8006898:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800689a:	f04f 0a00 	mov.w	sl, #0
 800689e:	7833      	ldrb	r3, [r6, #0]
 80068a0:	4553      	cmp	r3, sl
 80068a2:	d803      	bhi.n	80068ac <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 80068a4:	2000      	movs	r0, #0
 80068a6:	b005      	add	sp, #20
 80068a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 80068ac:	f8d9 3000 	ldr.w	r3, [r9]
 80068b0:	9801      	ldr	r0, [sp, #4]
 80068b2:	695b      	ldr	r3, [r3, #20]
 80068b4:	7800      	ldrb	r0, [r0, #0]
 80068b6:	9100      	str	r1, [sp, #0]
 80068b8:	462a      	mov	r2, r5
 80068ba:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80068bc:	4b25      	ldr	r3, [pc, #148]	; (8006954 <BSP_TS_GetState+0xe4>)
 80068be:	9900      	ldr	r1, [sp, #0]
 80068c0:	781b      	ldrb	r3, [r3, #0]
 80068c2:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80068c6:	bf1f      	itttt	ne
 80068c8:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80068ca:	8828      	ldrhne	r0, [r5, #0]
 80068cc:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80068ce:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80068d0:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80068d2:	bf41      	itttt	mi
 80068d4:	880a      	ldrhmi	r2, [r1, #0]
 80068d6:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80068da:	3203      	addmi	r2, #3
 80068dc:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80068de:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80068e0:	bf48      	it	mi
 80068e2:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80068e4:	f8d8 2000 	ldr.w	r2, [r8]
 80068e8:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80068ec:	bf42      	ittt	mi
 80068ee:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80068f2:	3301      	addmi	r3, #1
 80068f4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80068f6:	b293      	uxth	r3, r2
 80068f8:	4290      	cmp	r0, r2
 80068fa:	bf8c      	ite	hi
 80068fc:	1ac3      	subhi	r3, r0, r3
 80068fe:	1a1b      	subls	r3, r3, r0
 8006900:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8006902:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8006906:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8006908:	683b      	ldr	r3, [r7, #0]
 800690a:	b29c      	uxth	r4, r3
 800690c:	429a      	cmp	r2, r3
 800690e:	bf88      	it	hi
 8006910:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8006912:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8006914:	bf98      	it	ls
 8006916:	1aa4      	subls	r4, r4, r2
 8006918:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800691a:	441c      	add	r4, r3
 800691c:	46c4      	mov	ip, r8
 800691e:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8006920:	bfc8      	it	gt
 8006922:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8006926:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800692a:	bfc8      	it	gt
 800692c:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800692e:	46be      	mov	lr, r7
 8006930:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8006934:	f8de 3000 	ldr.w	r3, [lr]
 8006938:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 800693c:	f108 0804 	add.w	r8, r8, #4
 8006940:	3704      	adds	r7, #4
 8006942:	f10a 0a01 	add.w	sl, sl, #1
 8006946:	e7aa      	b.n	800689e <BSP_TS_GetState+0x2e>
 8006948:	20005d28 	.word	0x20005d28
 800694c:	20005d14 	.word	0x20005d14
 8006950:	20005d20 	.word	0x20005d20
 8006954:	20005d2c 	.word	0x20005d2c
 8006958:	20005d18 	.word	0x20005d18

0800695c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800695c:	4b05      	ldr	r3, [pc, #20]	; (8006974 <SystemInit+0x18>)
 800695e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8006962:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006966:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800696a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800696e:	609a      	str	r2, [r3, #8]
#endif
}
 8006970:	4770      	bx	lr
 8006972:	bf00      	nop
 8006974:	e000ed00 	.word	0xe000ed00

08006978 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006978:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800697a:	4b0b      	ldr	r3, [pc, #44]	; (80069a8 <HAL_Init+0x30>)
 800697c:	681a      	ldr	r2, [r3, #0]
 800697e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006982:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006984:	681a      	ldr	r2, [r3, #0]
 8006986:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800698a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800698c:	681a      	ldr	r2, [r3, #0]
 800698e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006992:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006994:	2003      	movs	r0, #3
 8006996:	f000 f9b5 	bl	8006d04 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800699a:	2000      	movs	r0, #0
 800699c:	f7fb fab8 	bl	8001f10 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80069a0:	f7fb f806 	bl	80019b0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80069a4:	2000      	movs	r0, #0
 80069a6:	bd08      	pop	{r3, pc}
 80069a8:	40023c00 	.word	0x40023c00

080069ac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80069ac:	4a03      	ldr	r2, [pc, #12]	; (80069bc <HAL_IncTick+0x10>)
 80069ae:	4b04      	ldr	r3, [pc, #16]	; (80069c0 <HAL_IncTick+0x14>)
 80069b0:	6811      	ldr	r1, [r2, #0]
 80069b2:	781b      	ldrb	r3, [r3, #0]
 80069b4:	440b      	add	r3, r1
 80069b6:	6013      	str	r3, [r2, #0]
}
 80069b8:	4770      	bx	lr
 80069ba:	bf00      	nop
 80069bc:	2000f070 	.word	0x2000f070
 80069c0:	20000078 	.word	0x20000078

080069c4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80069c4:	4b01      	ldr	r3, [pc, #4]	; (80069cc <HAL_GetTick+0x8>)
 80069c6:	6818      	ldr	r0, [r3, #0]
}
 80069c8:	4770      	bx	lr
 80069ca:	bf00      	nop
 80069cc:	2000f070 	.word	0x2000f070

080069d0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80069d0:	b538      	push	{r3, r4, r5, lr}
 80069d2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80069d4:	f7ff fff6 	bl	80069c4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80069d8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80069da:	bf1c      	itt	ne
 80069dc:	4b05      	ldrne	r3, [pc, #20]	; (80069f4 <HAL_Delay+0x24>)
 80069de:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80069e0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80069e2:	bf18      	it	ne
 80069e4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80069e6:	f7ff ffed 	bl	80069c4 <HAL_GetTick>
 80069ea:	1b43      	subs	r3, r0, r5
 80069ec:	42a3      	cmp	r3, r4
 80069ee:	d3fa      	bcc.n	80069e6 <HAL_Delay+0x16>
  {
  }
}
 80069f0:	bd38      	pop	{r3, r4, r5, pc}
 80069f2:	bf00      	nop
 80069f4:	20000078 	.word	0x20000078

080069f8 <HAL_CAN_Init>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
{
 80069f8:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Check CAN handle */
  if (hcan == NULL)
 80069fa:	4604      	mov	r4, r0
 80069fc:	2800      	cmp	r0, #0
 80069fe:	d06e      	beq.n	8006ade <HAL_CAN_Init+0xe6>
    /* Init the low level hardware: CLOCK, NVIC */
    hcan->MspInitCallback(hcan);
  }

#else
  if (hcan->State == HAL_CAN_STATE_RESET)
 8006a00:	f890 3020 	ldrb.w	r3, [r0, #32]
 8006a04:	b90b      	cbnz	r3, 8006a0a <HAL_CAN_Init+0x12>
  {
    /* Init the low level hardware: CLOCK, NVIC */
    HAL_CAN_MspInit(hcan);
 8006a06:	f7fa fff3 	bl	80019f0 <HAL_CAN_MspInit>
  }
#endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */

  /* Request initialisation */
  SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 8006a0a:	6822      	ldr	r2, [r4, #0]
 8006a0c:	6813      	ldr	r3, [r2, #0]
 8006a0e:	f043 0301 	orr.w	r3, r3, #1
 8006a12:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006a14:	f7ff ffd6 	bl	80069c4 <HAL_GetTick>
 8006a18:	4605      	mov	r5, r0

  /* Wait initialisation acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 8006a1a:	6823      	ldr	r3, [r4, #0]
 8006a1c:	685a      	ldr	r2, [r3, #4]
 8006a1e:	07d1      	lsls	r1, r2, #31
 8006a20:	d551      	bpl.n	8006ac6 <HAL_CAN_Init+0xce>
      return HAL_ERROR;
    }
  }

  /* Exit from sleep mode */
  CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 8006a22:	681a      	ldr	r2, [r3, #0]
 8006a24:	f022 0202 	bic.w	r2, r2, #2
 8006a28:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006a2a:	f7ff ffcb 	bl	80069c4 <HAL_GetTick>
 8006a2e:	4605      	mov	r5, r0

  /* Check Sleep mode leave acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 8006a30:	6823      	ldr	r3, [r4, #0]
 8006a32:	685a      	ldr	r2, [r3, #4]
 8006a34:	0792      	lsls	r2, r2, #30
 8006a36:	d454      	bmi.n	8006ae2 <HAL_CAN_Init+0xea>
      return HAL_ERROR;
    }
  }

  /* Set the time triggered communication mode */
  if (hcan->Init.TimeTriggeredMode == ENABLE)
 8006a38:	7e22      	ldrb	r2, [r4, #24]
 8006a3a:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 8006a3c:	681a      	ldr	r2, [r3, #0]
 8006a3e:	bf0c      	ite	eq
 8006a40:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 8006a44:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8006a48:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic bus-off management */
  if (hcan->Init.AutoBusOff == ENABLE)
 8006a4a:	7e62      	ldrb	r2, [r4, #25]
 8006a4c:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 8006a4e:	681a      	ldr	r2, [r3, #0]
 8006a50:	bf0c      	ite	eq
 8006a52:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 8006a56:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8006a5a:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic wake-up mode */
  if (hcan->Init.AutoWakeUp == ENABLE)
 8006a5c:	7ea2      	ldrb	r2, [r4, #26]
 8006a5e:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8006a60:	681a      	ldr	r2, [r3, #0]
 8006a62:	bf0c      	ite	eq
 8006a64:	f042 0220 	orreq.w	r2, r2, #32
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8006a68:	f022 0220 	bicne.w	r2, r2, #32
 8006a6c:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic retransmission */
  if (hcan->Init.AutoRetransmission == ENABLE)
 8006a6e:	7ee2      	ldrb	r2, [r4, #27]
 8006a70:	2a01      	cmp	r2, #1
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 8006a72:	681a      	ldr	r2, [r3, #0]
 8006a74:	bf0c      	ite	eq
 8006a76:	f022 0210 	biceq.w	r2, r2, #16
  }
  else
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 8006a7a:	f042 0210 	orrne.w	r2, r2, #16
 8006a7e:	601a      	str	r2, [r3, #0]
  }

  /* Set the receive FIFO locked mode */
  if (hcan->Init.ReceiveFifoLocked == ENABLE)
 8006a80:	7f22      	ldrb	r2, [r4, #28]
 8006a82:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 8006a84:	681a      	ldr	r2, [r3, #0]
 8006a86:	bf0c      	ite	eq
 8006a88:	f042 0208 	orreq.w	r2, r2, #8
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 8006a8c:	f022 0208 	bicne.w	r2, r2, #8
 8006a90:	601a      	str	r2, [r3, #0]
  }

  /* Set the transmit FIFO priority */
  if (hcan->Init.TransmitFifoPriority == ENABLE)
 8006a92:	7f62      	ldrb	r2, [r4, #29]
 8006a94:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 8006a96:	681a      	ldr	r2, [r3, #0]
 8006a98:	bf0c      	ite	eq
 8006a9a:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 8006a9e:	f022 0204 	bicne.w	r2, r2, #4
 8006aa2:	601a      	str	r2, [r3, #0]
  }

  /* Set the bit timing register */
  WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 8006aa4:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 8006aa8:	430a      	orrs	r2, r1
 8006aaa:	6921      	ldr	r1, [r4, #16]
 8006aac:	430a      	orrs	r2, r1
 8006aae:	6961      	ldr	r1, [r4, #20]
 8006ab0:	430a      	orrs	r2, r1
 8006ab2:	6861      	ldr	r1, [r4, #4]
 8006ab4:	3901      	subs	r1, #1
 8006ab6:	430a      	orrs	r2, r1
 8006ab8:	61da      	str	r2, [r3, #28]
                                            hcan->Init.TimeSeg1       |
                                            hcan->Init.TimeSeg2       |
                                            (hcan->Init.Prescaler - 1U)));

  /* Initialize the error code */
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 8006aba:	2000      	movs	r0, #0

  /* Initialize the CAN state */
  hcan->State = HAL_CAN_STATE_READY;
 8006abc:	2301      	movs	r3, #1
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 8006abe:	6260      	str	r0, [r4, #36]	; 0x24
  hcan->State = HAL_CAN_STATE_READY;
 8006ac0:	f884 3020 	strb.w	r3, [r4, #32]

  /* Return function status */
  return HAL_OK;
}
 8006ac4:	bd38      	pop	{r3, r4, r5, pc}
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 8006ac6:	f7ff ff7d 	bl	80069c4 <HAL_GetTick>
 8006aca:	1b40      	subs	r0, r0, r5
 8006acc:	280a      	cmp	r0, #10
 8006ace:	d9a4      	bls.n	8006a1a <HAL_CAN_Init+0x22>
      hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 8006ad0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006ad2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006ad6:	6263      	str	r3, [r4, #36]	; 0x24
      hcan->State = HAL_CAN_STATE_ERROR;
 8006ad8:	2305      	movs	r3, #5
 8006ada:	f884 3020 	strb.w	r3, [r4, #32]
    return HAL_ERROR;
 8006ade:	2001      	movs	r0, #1
 8006ae0:	e7f0      	b.n	8006ac4 <HAL_CAN_Init+0xcc>
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 8006ae2:	f7ff ff6f 	bl	80069c4 <HAL_GetTick>
 8006ae6:	1b40      	subs	r0, r0, r5
 8006ae8:	280a      	cmp	r0, #10
 8006aea:	d9a1      	bls.n	8006a30 <HAL_CAN_Init+0x38>
 8006aec:	e7f0      	b.n	8006ad0 <HAL_CAN_Init+0xd8>

08006aee <HAL_CAN_TxMailbox0CompleteCallback>:
 8006aee:	4770      	bx	lr

08006af0 <HAL_CAN_TxMailbox1CompleteCallback>:
 8006af0:	4770      	bx	lr

08006af2 <HAL_CAN_TxMailbox2CompleteCallback>:
 8006af2:	4770      	bx	lr

08006af4 <HAL_CAN_TxMailbox0AbortCallback>:
 8006af4:	4770      	bx	lr

08006af6 <HAL_CAN_TxMailbox1AbortCallback>:
 8006af6:	4770      	bx	lr

08006af8 <HAL_CAN_TxMailbox2AbortCallback>:
 8006af8:	4770      	bx	lr

08006afa <HAL_CAN_RxFifo0MsgPendingCallback>:
 8006afa:	4770      	bx	lr

08006afc <HAL_CAN_RxFifo0FullCallback>:
 8006afc:	4770      	bx	lr

08006afe <HAL_CAN_RxFifo1MsgPendingCallback>:
 8006afe:	4770      	bx	lr

08006b00 <HAL_CAN_RxFifo1FullCallback>:
 8006b00:	4770      	bx	lr

08006b02 <HAL_CAN_SleepCallback>:
 8006b02:	4770      	bx	lr

08006b04 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8006b04:	4770      	bx	lr

08006b06 <HAL_CAN_ErrorCallback>:
 8006b06:	4770      	bx	lr

08006b08 <HAL_CAN_IRQHandler>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval None
  */
void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
{
 8006b08:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
  uint32_t interrupts = READ_REG(hcan->Instance->IER);
 8006b0c:	6803      	ldr	r3, [r0, #0]
 8006b0e:	695e      	ldr	r6, [r3, #20]
  uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 8006b10:	f8d3 9004 	ldr.w	r9, [r3, #4]
  uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 8006b14:	689f      	ldr	r7, [r3, #8]
  uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 8006b16:	f8d3 b00c 	ldr.w	fp, [r3, #12]
  uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 8006b1a:	f8d3 a010 	ldr.w	sl, [r3, #16]
  uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 8006b1e:	f8d3 8018 	ldr.w	r8, [r3, #24]

  /* Transmit Mailbox empty interrupt management *****************************/
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8006b22:	f016 0401 	ands.w	r4, r6, #1
{
 8006b26:	4605      	mov	r5, r0
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8006b28:	d022      	beq.n	8006b70 <HAL_CAN_IRQHandler+0x68>
  {
    /* Transmit Mailbox 0 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP0) != 0U)
 8006b2a:	f017 0401 	ands.w	r4, r7, #1
 8006b2e:	d007      	beq.n	8006b40 <HAL_CAN_IRQHandler+0x38>
    {
      /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8006b30:	2201      	movs	r2, #1

      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8006b32:	07b9      	lsls	r1, r7, #30
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8006b34:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8006b36:	f140 80a5 	bpl.w	8006c84 <HAL_CAN_IRQHandler+0x17c>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox0CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox0CompleteCallback(hcan);
 8006b3a:	f7ff ffd8 	bl	8006aee <HAL_CAN_TxMailbox0CompleteCallback>
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
 8006b3e:	2400      	movs	r4, #0
        }
      }
    }

    /* Transmit Mailbox 1 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP1) != 0U)
 8006b40:	05fb      	lsls	r3, r7, #23
 8006b42:	d509      	bpl.n	8006b58 <HAL_CAN_IRQHandler+0x50>
    {
      /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8006b44:	682b      	ldr	r3, [r5, #0]
 8006b46:	f44f 7280 	mov.w	r2, #256	; 0x100

      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8006b4a:	05b8      	lsls	r0, r7, #22
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8006b4c:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8006b4e:	f140 80a7 	bpl.w	8006ca0 <HAL_CAN_IRQHandler+0x198>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox1CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox1CompleteCallback(hcan);
 8006b52:	4628      	mov	r0, r5
 8006b54:	f7ff ffcc 	bl	8006af0 <HAL_CAN_TxMailbox1CompleteCallback>
        }
      }
    }

    /* Transmit Mailbox 2 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP2) != 0U)
 8006b58:	03fb      	lsls	r3, r7, #15
 8006b5a:	d509      	bpl.n	8006b70 <HAL_CAN_IRQHandler+0x68>
    {
      /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8006b5c:	682b      	ldr	r3, [r5, #0]
 8006b5e:	f44f 3280 	mov.w	r2, #65536	; 0x10000

      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8006b62:	03b8      	lsls	r0, r7, #14
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8006b64:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8006b66:	f140 80a9 	bpl.w	8006cbc <HAL_CAN_IRQHandler+0x1b4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox2CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox2CompleteCallback(hcan);
 8006b6a:	4628      	mov	r0, r5
 8006b6c:	f7ff ffc1 	bl	8006af2 <HAL_CAN_TxMailbox2CompleteCallback>
      }
    }
  }

  /* Receive FIFO 0 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
 8006b70:	0733      	lsls	r3, r6, #28
 8006b72:	d507      	bpl.n	8006b84 <HAL_CAN_IRQHandler+0x7c>
  {
    if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
 8006b74:	f01b 0f10 	tst.w	fp, #16
    {
      /* Set CAN error code to Rx Fifo 0 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV0;

      /* Clear FIFO0 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8006b78:	bf1f      	itttt	ne
 8006b7a:	682b      	ldrne	r3, [r5, #0]
 8006b7c:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV0;
 8006b7e:	f444 7400 	orrne.w	r4, r4, #512	; 0x200
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8006b82:	60da      	strne	r2, [r3, #12]
    }
  }

  /* Receive FIFO 0 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
 8006b84:	0777      	lsls	r7, r6, #29
 8006b86:	d508      	bpl.n	8006b9a <HAL_CAN_IRQHandler+0x92>
  {
    if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
 8006b88:	f01b 0f08 	tst.w	fp, #8
 8006b8c:	d005      	beq.n	8006b9a <HAL_CAN_IRQHandler+0x92>
    {
      /* Clear FIFO 0 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
 8006b8e:	682b      	ldr	r3, [r5, #0]
 8006b90:	2208      	movs	r2, #8
 8006b92:	60da      	str	r2, [r3, #12]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0FullCallback(hcan);
 8006b94:	4628      	mov	r0, r5
 8006b96:	f7ff ffb1 	bl	8006afc <HAL_CAN_RxFifo0FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 0 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
 8006b9a:	07b0      	lsls	r0, r6, #30
 8006b9c:	d506      	bpl.n	8006bac <HAL_CAN_IRQHandler+0xa4>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
 8006b9e:	682b      	ldr	r3, [r5, #0]
 8006ba0:	68db      	ldr	r3, [r3, #12]
 8006ba2:	0799      	lsls	r1, r3, #30
 8006ba4:	d002      	beq.n	8006bac <HAL_CAN_IRQHandler+0xa4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0MsgPendingCallback(hcan);
 8006ba6:	4628      	mov	r0, r5
 8006ba8:	f7ff ffa7 	bl	8006afa <HAL_CAN_RxFifo0MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
 8006bac:	0672      	lsls	r2, r6, #25
 8006bae:	d507      	bpl.n	8006bc0 <HAL_CAN_IRQHandler+0xb8>
  {
    if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
 8006bb0:	f01a 0f10 	tst.w	sl, #16
    {
      /* Set CAN error code to Rx Fifo 1 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV1;

      /* Clear FIFO1 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8006bb4:	bf1f      	itttt	ne
 8006bb6:	682b      	ldrne	r3, [r5, #0]
 8006bb8:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV1;
 8006bba:	f444 6480 	orrne.w	r4, r4, #1024	; 0x400
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8006bbe:	611a      	strne	r2, [r3, #16]
    }
  }

  /* Receive FIFO 1 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
 8006bc0:	06b3      	lsls	r3, r6, #26
 8006bc2:	d508      	bpl.n	8006bd6 <HAL_CAN_IRQHandler+0xce>
  {
    if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
 8006bc4:	f01a 0f08 	tst.w	sl, #8
 8006bc8:	d005      	beq.n	8006bd6 <HAL_CAN_IRQHandler+0xce>
    {
      /* Clear FIFO 1 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
 8006bca:	682b      	ldr	r3, [r5, #0]
 8006bcc:	2208      	movs	r2, #8
 8006bce:	611a      	str	r2, [r3, #16]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1FullCallback(hcan);
 8006bd0:	4628      	mov	r0, r5
 8006bd2:	f7ff ff95 	bl	8006b00 <HAL_CAN_RxFifo1FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
 8006bd6:	06f7      	lsls	r7, r6, #27
 8006bd8:	d506      	bpl.n	8006be8 <HAL_CAN_IRQHandler+0xe0>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
 8006bda:	682b      	ldr	r3, [r5, #0]
 8006bdc:	691b      	ldr	r3, [r3, #16]
 8006bde:	0798      	lsls	r0, r3, #30
 8006be0:	d002      	beq.n	8006be8 <HAL_CAN_IRQHandler+0xe0>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1MsgPendingCallback(hcan);
 8006be2:	4628      	mov	r0, r5
 8006be4:	f7ff ff8b 	bl	8006afe <HAL_CAN_RxFifo1MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Sleep interrupt management *********************************************/
  if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
 8006be8:	03b1      	lsls	r1, r6, #14
 8006bea:	d508      	bpl.n	8006bfe <HAL_CAN_IRQHandler+0xf6>
  {
    if ((msrflags & CAN_MSR_SLAKI) != 0U)
 8006bec:	f019 0f10 	tst.w	r9, #16
 8006bf0:	d005      	beq.n	8006bfe <HAL_CAN_IRQHandler+0xf6>
    {
      /* Clear Sleep interrupt Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
 8006bf2:	682b      	ldr	r3, [r5, #0]
 8006bf4:	2210      	movs	r2, #16
 8006bf6:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->SleepCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_SleepCallback(hcan);
 8006bf8:	4628      	mov	r0, r5
 8006bfa:	f7ff ff82 	bl	8006b02 <HAL_CAN_SleepCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* WakeUp interrupt management *********************************************/
  if ((interrupts & CAN_IT_WAKEUP) != 0U)
 8006bfe:	03f2      	lsls	r2, r6, #15
 8006c00:	d508      	bpl.n	8006c14 <HAL_CAN_IRQHandler+0x10c>
  {
    if ((msrflags & CAN_MSR_WKUI) != 0U)
 8006c02:	f019 0f08 	tst.w	r9, #8
 8006c06:	d005      	beq.n	8006c14 <HAL_CAN_IRQHandler+0x10c>
    {
      /* Clear WakeUp Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
 8006c08:	682b      	ldr	r3, [r5, #0]
 8006c0a:	2208      	movs	r2, #8
 8006c0c:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->WakeUpFromRxMsgCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_WakeUpFromRxMsgCallback(hcan);
 8006c0e:	4628      	mov	r0, r5
 8006c10:	f7ff ff78 	bl	8006b04 <HAL_CAN_WakeUpFromRxMsgCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Error interrupts management *********************************************/
  if ((interrupts & CAN_IT_ERROR) != 0U)
 8006c14:	0433      	lsls	r3, r6, #16
 8006c16:	d52c      	bpl.n	8006c72 <HAL_CAN_IRQHandler+0x16a>
  {
    if ((msrflags & CAN_MSR_ERRI) != 0U)
 8006c18:	f019 0f04 	tst.w	r9, #4
 8006c1c:	682a      	ldr	r2, [r5, #0]
 8006c1e:	d026      	beq.n	8006c6e <HAL_CAN_IRQHandler+0x166>
    {
      /* Check Error Warning Flag */
      if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
 8006c20:	05f7      	lsls	r7, r6, #23
 8006c22:	d504      	bpl.n	8006c2e <HAL_CAN_IRQHandler+0x126>
 8006c24:	f018 0f01 	tst.w	r8, #1
          ((esrflags & CAN_ESR_EWGF) != 0U))
      {
        /* Set CAN error code to Error Warning */
        errorcode |= HAL_CAN_ERROR_EWG;
 8006c28:	bf18      	it	ne
 8006c2a:	f044 0401 	orrne.w	r4, r4, #1

        /* No need for clear of Error Warning Flag as read-only */
      }

      /* Check Error Passive Flag */
      if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
 8006c2e:	05b0      	lsls	r0, r6, #22
 8006c30:	d504      	bpl.n	8006c3c <HAL_CAN_IRQHandler+0x134>
 8006c32:	f018 0f02 	tst.w	r8, #2
          ((esrflags & CAN_ESR_EPVF) != 0U))
      {
        /* Set CAN error code to Error Passive */
        errorcode |= HAL_CAN_ERROR_EPV;
 8006c36:	bf18      	it	ne
 8006c38:	f044 0402 	orrne.w	r4, r4, #2

        /* No need for clear of Error Passive Flag as read-only */
      }

      /* Check Bus-off Flag */
      if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
 8006c3c:	0571      	lsls	r1, r6, #21
 8006c3e:	d504      	bpl.n	8006c4a <HAL_CAN_IRQHandler+0x142>
 8006c40:	f018 0f04 	tst.w	r8, #4
          ((esrflags & CAN_ESR_BOFF) != 0U))
      {
        /* Set CAN error code to Bus-Off */
        errorcode |= HAL_CAN_ERROR_BOF;
 8006c44:	bf18      	it	ne
 8006c46:	f044 0404 	orrne.w	r4, r4, #4

        /* No need for clear of Error Bus-Off as read-only */
      }

      /* Check Last Error Code Flag */
      if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
 8006c4a:	0533      	lsls	r3, r6, #20
 8006c4c:	d50f      	bpl.n	8006c6e <HAL_CAN_IRQHandler+0x166>
 8006c4e:	f018 0370 	ands.w	r3, r8, #112	; 0x70
 8006c52:	d00c      	beq.n	8006c6e <HAL_CAN_IRQHandler+0x166>
          ((esrflags & CAN_ESR_LEC) != 0U))
      {
        switch (esrflags & CAN_ESR_LEC)
 8006c54:	2b40      	cmp	r3, #64	; 0x40
 8006c56:	d04f      	beq.n	8006cf8 <HAL_CAN_IRQHandler+0x1f0>
 8006c58:	d83e      	bhi.n	8006cd8 <HAL_CAN_IRQHandler+0x1d0>
 8006c5a:	2b20      	cmp	r3, #32
 8006c5c:	d046      	beq.n	8006cec <HAL_CAN_IRQHandler+0x1e4>
 8006c5e:	2b30      	cmp	r3, #48	; 0x30
 8006c60:	d047      	beq.n	8006cf2 <HAL_CAN_IRQHandler+0x1ea>
 8006c62:	2b10      	cmp	r3, #16
 8006c64:	d03f      	beq.n	8006ce6 <HAL_CAN_IRQHandler+0x1de>
          default:
            break;
        }

        /* Clear Last error code Flag */
        CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
 8006c66:	6993      	ldr	r3, [r2, #24]
 8006c68:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c6c:	6193      	str	r3, [r2, #24]
      }
    }

    /* Clear ERRI Flag */
    __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
 8006c6e:	2304      	movs	r3, #4
 8006c70:	6053      	str	r3, [r2, #4]
  }

  /* Call the Error call Back in case of Errors */
  if (errorcode != HAL_CAN_ERROR_NONE)
 8006c72:	b12c      	cbz	r4, 8006c80 <HAL_CAN_IRQHandler+0x178>
  {
    /* Update error code in handle */
    hcan->ErrorCode |= errorcode;
 8006c74:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006c76:	431c      	orrs	r4, r3
 8006c78:	626c      	str	r4, [r5, #36]	; 0x24
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
    /* Call registered callback*/
    hcan->ErrorCallback(hcan);
#else
    /* Call weak (surcharged) callback */
    HAL_CAN_ErrorCallback(hcan);
 8006c7a:	4628      	mov	r0, r5
 8006c7c:	f7ff ff43 	bl	8006b06 <HAL_CAN_ErrorCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
  }
}
 8006c80:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ((tsrflags & CAN_TSR_ALST0) != 0U)
 8006c84:	077a      	lsls	r2, r7, #29
 8006c86:	d405      	bmi.n	8006c94 <HAL_CAN_IRQHandler+0x18c>
        else if ((tsrflags & CAN_TSR_TERR0) != 0U)
 8006c88:	f017 0408 	ands.w	r4, r7, #8
 8006c8c:	d105      	bne.n	8006c9a <HAL_CAN_IRQHandler+0x192>
          HAL_CAN_TxMailbox0AbortCallback(hcan);
 8006c8e:	f7ff ff31 	bl	8006af4 <HAL_CAN_TxMailbox0AbortCallback>
 8006c92:	e755      	b.n	8006b40 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_ALST0;
 8006c94:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8006c98:	e752      	b.n	8006b40 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_TERR0;
 8006c9a:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 8006c9e:	e74f      	b.n	8006b40 <HAL_CAN_IRQHandler+0x38>
        if ((tsrflags & CAN_TSR_ALST1) != 0U)
 8006ca0:	0579      	lsls	r1, r7, #21
 8006ca2:	d502      	bpl.n	8006caa <HAL_CAN_IRQHandler+0x1a2>
          errorcode |= HAL_CAN_ERROR_TX_ALST1;
 8006ca4:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
 8006ca8:	e756      	b.n	8006b58 <HAL_CAN_IRQHandler+0x50>
        else if ((tsrflags & CAN_TSR_TERR1) != 0U)
 8006caa:	053a      	lsls	r2, r7, #20
 8006cac:	d502      	bpl.n	8006cb4 <HAL_CAN_IRQHandler+0x1ac>
          errorcode |= HAL_CAN_ERROR_TX_TERR1;
 8006cae:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8006cb2:	e751      	b.n	8006b58 <HAL_CAN_IRQHandler+0x50>
          HAL_CAN_TxMailbox1AbortCallback(hcan);
 8006cb4:	4628      	mov	r0, r5
 8006cb6:	f7ff ff1e 	bl	8006af6 <HAL_CAN_TxMailbox1AbortCallback>
 8006cba:	e74d      	b.n	8006b58 <HAL_CAN_IRQHandler+0x50>
        if ((tsrflags & CAN_TSR_ALST2) != 0U)
 8006cbc:	0379      	lsls	r1, r7, #13
 8006cbe:	d502      	bpl.n	8006cc6 <HAL_CAN_IRQHandler+0x1be>
          errorcode |= HAL_CAN_ERROR_TX_ALST2;
 8006cc0:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8006cc4:	e754      	b.n	8006b70 <HAL_CAN_IRQHandler+0x68>
        else if ((tsrflags & CAN_TSR_TERR2) != 0U)
 8006cc6:	033a      	lsls	r2, r7, #12
 8006cc8:	d502      	bpl.n	8006cd0 <HAL_CAN_IRQHandler+0x1c8>
          errorcode |= HAL_CAN_ERROR_TX_TERR2;
 8006cca:	f444 3480 	orr.w	r4, r4, #65536	; 0x10000
 8006cce:	e74f      	b.n	8006b70 <HAL_CAN_IRQHandler+0x68>
          HAL_CAN_TxMailbox2AbortCallback(hcan);
 8006cd0:	4628      	mov	r0, r5
 8006cd2:	f7ff ff11 	bl	8006af8 <HAL_CAN_TxMailbox2AbortCallback>
 8006cd6:	e74b      	b.n	8006b70 <HAL_CAN_IRQHandler+0x68>
        switch (esrflags & CAN_ESR_LEC)
 8006cd8:	2b50      	cmp	r3, #80	; 0x50
 8006cda:	d010      	beq.n	8006cfe <HAL_CAN_IRQHandler+0x1f6>
 8006cdc:	2b60      	cmp	r3, #96	; 0x60
 8006cde:	d1c2      	bne.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_CRC;
 8006ce0:	f444 7480 	orr.w	r4, r4, #256	; 0x100
            break;
 8006ce4:	e7bf      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_STF;
 8006ce6:	f044 0408 	orr.w	r4, r4, #8
            break;
 8006cea:	e7bc      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_FOR;
 8006cec:	f044 0410 	orr.w	r4, r4, #16
            break;
 8006cf0:	e7b9      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_ACK;
 8006cf2:	f044 0420 	orr.w	r4, r4, #32
            break;
 8006cf6:	e7b6      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BR;
 8006cf8:	f044 0440 	orr.w	r4, r4, #64	; 0x40
            break;
 8006cfc:	e7b3      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BD;
 8006cfe:	f044 0480 	orr.w	r4, r4, #128	; 0x80
            break;
 8006d02:	e7b0      	b.n	8006c66 <HAL_CAN_IRQHandler+0x15e>

08006d04 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006d04:	4907      	ldr	r1, [pc, #28]	; (8006d24 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006d06:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006d08:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006d0c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006d0e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006d10:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006d14:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006d16:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006d18:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006d1c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8006d20:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8006d22:	4770      	bx	lr
 8006d24:	e000ed00 	.word	0xe000ed00

08006d28 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006d28:	4b16      	ldr	r3, [pc, #88]	; (8006d84 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8006d2a:	b530      	push	{r4, r5, lr}
 8006d2c:	68dc      	ldr	r4, [r3, #12]
 8006d2e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006d32:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006d36:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006d38:	2d04      	cmp	r5, #4
 8006d3a:	bf28      	it	cs
 8006d3c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006d3e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006d40:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006d44:	bf8c      	ite	hi
 8006d46:	3c03      	subhi	r4, #3
 8006d48:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006d4a:	fa03 f505 	lsl.w	r5, r3, r5
 8006d4e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006d52:	40a3      	lsls	r3, r4
 8006d54:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006d58:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8006d5a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006d5c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d60:	bfac      	ite	ge
 8006d62:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d66:	4a08      	ldrlt	r2, [pc, #32]	; (8006d88 <HAL_NVIC_SetPriority+0x60>)
 8006d68:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8006d6c:	bfb8      	it	lt
 8006d6e:	f000 000f 	andlt.w	r0, r0, #15
 8006d72:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d74:	bfaa      	itet	ge
 8006d76:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d7a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d7c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006d80:	bd30      	pop	{r4, r5, pc}
 8006d82:	bf00      	nop
 8006d84:	e000ed00 	.word	0xe000ed00
 8006d88:	e000ed14 	.word	0xe000ed14

08006d8c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006d8c:	2800      	cmp	r0, #0
 8006d8e:	db08      	blt.n	8006da2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006d90:	0942      	lsrs	r2, r0, #5
 8006d92:	2301      	movs	r3, #1
 8006d94:	f000 001f 	and.w	r0, r0, #31
 8006d98:	fa03 f000 	lsl.w	r0, r3, r0
 8006d9c:	4b01      	ldr	r3, [pc, #4]	; (8006da4 <HAL_NVIC_EnableIRQ+0x18>)
 8006d9e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006da2:	4770      	bx	lr
 8006da4:	e000e100 	.word	0xe000e100

08006da8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006da8:	2800      	cmp	r0, #0
 8006daa:	db0d      	blt.n	8006dc8 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006dac:	0943      	lsrs	r3, r0, #5
 8006dae:	2201      	movs	r2, #1
 8006db0:	f000 001f 	and.w	r0, r0, #31
 8006db4:	fa02 f000 	lsl.w	r0, r2, r0
 8006db8:	3320      	adds	r3, #32
 8006dba:	4a04      	ldr	r2, [pc, #16]	; (8006dcc <HAL_NVIC_DisableIRQ+0x24>)
 8006dbc:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8006dc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8006dc4:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8006dc8:	4770      	bx	lr
 8006dca:	bf00      	nop
 8006dcc:	e000e100 	.word	0xe000e100

08006dd0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006dd0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006dd2:	4604      	mov	r4, r0
 8006dd4:	b150      	cbz	r0, 8006dec <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8006dd6:	7943      	ldrb	r3, [r0, #5]
 8006dd8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ddc:	b913      	cbnz	r3, 8006de4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006dde:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006de0:	f7fa fe58 	bl	8001a94 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006de4:	2301      	movs	r3, #1
 8006de6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006de8:	2000      	movs	r0, #0
}
 8006dea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006dec:	2001      	movs	r0, #1
 8006dee:	e7fc      	b.n	8006dea <HAL_CRC_Init+0x1a>

08006df0 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8006df0:	6803      	ldr	r3, [r0, #0]
{
 8006df2:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8006df4:	4c08      	ldr	r4, [pc, #32]	; (8006e18 <DMA_CalcBaseAndBitshift+0x28>)
{
 8006df6:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8006df8:	b2d9      	uxtb	r1, r3
 8006dfa:	3910      	subs	r1, #16
 8006dfc:	2018      	movs	r0, #24
 8006dfe:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8006e02:	5c20      	ldrb	r0, [r4, r0]
 8006e04:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8006e06:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8006e0a:	f020 0003 	bic.w	r0, r0, #3
 8006e0e:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8006e10:	bf88      	it	hi
 8006e12:	3004      	addhi	r0, #4
 8006e14:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8006e16:	bd10      	pop	{r4, pc}
 8006e18:	08023521 	.word	0x08023521

08006e1c <HAL_DMA_Init>:
{
 8006e1c:	b570      	push	{r4, r5, r6, lr}
 8006e1e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006e20:	f7ff fdd0 	bl	80069c4 <HAL_GetTick>
 8006e24:	4605      	mov	r5, r0
  if(hdma == NULL)
 8006e26:	2c00      	cmp	r4, #0
 8006e28:	d073      	beq.n	8006f12 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8006e2a:	2302      	movs	r3, #2
 8006e2c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8006e30:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8006e32:	2300      	movs	r3, #0
 8006e34:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8006e38:	6813      	ldr	r3, [r2, #0]
 8006e3a:	f023 0301 	bic.w	r3, r3, #1
 8006e3e:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8006e40:	6821      	ldr	r1, [r4, #0]
 8006e42:	680b      	ldr	r3, [r1, #0]
 8006e44:	07d8      	lsls	r0, r3, #31
 8006e46:	d42f      	bmi.n	8006ea8 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8006e48:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8006e4a:	4d33      	ldr	r5, [pc, #204]	; (8006f18 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8006e4c:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8006e4e:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8006e50:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8006e54:	4313      	orrs	r3, r2
 8006e56:	68e2      	ldr	r2, [r4, #12]
 8006e58:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8006e5a:	6922      	ldr	r2, [r4, #16]
 8006e5c:	4313      	orrs	r3, r2
 8006e5e:	6962      	ldr	r2, [r4, #20]
 8006e60:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8006e62:	69e2      	ldr	r2, [r4, #28]
 8006e64:	4303      	orrs	r3, r0
 8006e66:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8006e68:	6a22      	ldr	r2, [r4, #32]
 8006e6a:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006e6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e6e:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8006e70:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8006e74:	bf02      	ittt	eq
 8006e76:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8006e7a:	4335      	orreq	r5, r6
 8006e7c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8006e7e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8006e80:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006e82:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8006e84:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8006e88:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006e8c:	d133      	bne.n	8006ef6 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8006e8e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8006e90:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8006e92:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8006e94:	b37d      	cbz	r5, 8006ef6 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8006e96:	b990      	cbnz	r0, 8006ebe <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8006e98:	2a01      	cmp	r2, #1
 8006e9a:	d021      	beq.n	8006ee0 <HAL_DMA_Init+0xc4>
 8006e9c:	f032 0202 	bics.w	r2, r2, #2
 8006ea0:	d129      	bne.n	8006ef6 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8006ea2:	01ea      	lsls	r2, r5, #7
 8006ea4:	d527      	bpl.n	8006ef6 <HAL_DMA_Init+0xda>
 8006ea6:	e01e      	b.n	8006ee6 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8006ea8:	f7ff fd8c 	bl	80069c4 <HAL_GetTick>
 8006eac:	1b40      	subs	r0, r0, r5
 8006eae:	2805      	cmp	r0, #5
 8006eb0:	d9c6      	bls.n	8006e40 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8006eb2:	2320      	movs	r3, #32
 8006eb4:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006eb6:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8006eb8:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8006ebc:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8006ebe:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8006ec2:	d114      	bne.n	8006eee <HAL_DMA_Init+0xd2>
    switch (tmp)
 8006ec4:	2a03      	cmp	r2, #3
 8006ec6:	d816      	bhi.n	8006ef6 <HAL_DMA_Init+0xda>
 8006ec8:	a001      	add	r0, pc, #4	; (adr r0, 8006ed0 <HAL_DMA_Init+0xb4>)
 8006eca:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8006ece:	bf00      	nop
 8006ed0:	08006ee7 	.word	0x08006ee7
 8006ed4:	08006ea3 	.word	0x08006ea3
 8006ed8:	08006ee7 	.word	0x08006ee7
 8006edc:	08006ee1 	.word	0x08006ee1
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8006ee0:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8006ee4:	d107      	bne.n	8006ef6 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8006ee6:	2340      	movs	r3, #64	; 0x40
 8006ee8:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8006eea:	2001      	movs	r0, #1
 8006eec:	e7e4      	b.n	8006eb8 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8006eee:	2a02      	cmp	r2, #2
 8006ef0:	d9f9      	bls.n	8006ee6 <HAL_DMA_Init+0xca>
 8006ef2:	2a03      	cmp	r2, #3
 8006ef4:	d0d5      	beq.n	8006ea2 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8006ef6:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8006ef8:	4620      	mov	r0, r4
 8006efa:	f7ff ff79 	bl	8006df0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006efe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8006f00:	233f      	movs	r3, #63	; 0x3f
 8006f02:	4093      	lsls	r3, r2
 8006f04:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8006f06:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8006f08:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8006f0a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8006f0c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8006f10:	e7d4      	b.n	8006ebc <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8006f12:	2001      	movs	r0, #1
 8006f14:	e7d2      	b.n	8006ebc <HAL_DMA_Init+0xa0>
 8006f16:	bf00      	nop
 8006f18:	f010803f 	.word	0xf010803f

08006f1c <HAL_DMA_DeInit>:
{
 8006f1c:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8006f1e:	4605      	mov	r5, r0
 8006f20:	b320      	cbz	r0, 8006f6c <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8006f22:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8006f26:	2b02      	cmp	r3, #2
 8006f28:	b2dc      	uxtb	r4, r3
 8006f2a:	d01d      	beq.n	8006f68 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8006f2c:	6803      	ldr	r3, [r0, #0]
 8006f2e:	681a      	ldr	r2, [r3, #0]
 8006f30:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8006f34:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8006f36:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8006f38:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8006f3a:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8006f3c:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8006f3e:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8006f40:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8006f42:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8006f44:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8006f46:	f7ff ff53 	bl	8006df0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006f4a:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8006f4c:	233f      	movs	r3, #63	; 0x3f
 8006f4e:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8006f50:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8006f54:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8006f58:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006f5c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8006f5e:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8006f60:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8006f64:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8006f68:	4620      	mov	r0, r4
 8006f6a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006f6c:	2401      	movs	r4, #1
 8006f6e:	e7fb      	b.n	8006f68 <HAL_DMA_DeInit+0x4c>

08006f70 <HAL_DMA_Abort>:
{
 8006f70:	b570      	push	{r4, r5, r6, lr}
 8006f72:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8006f74:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8006f76:	f7ff fd25 	bl	80069c4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006f7a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8006f7e:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8006f80:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006f82:	d006      	beq.n	8006f92 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8006f84:	2380      	movs	r3, #128	; 0x80
 8006f86:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8006f88:	2300      	movs	r3, #0
 8006f8a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8006f8e:	2001      	movs	r0, #1
}
 8006f90:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8006f92:	6823      	ldr	r3, [r4, #0]
 8006f94:	681a      	ldr	r2, [r3, #0]
 8006f96:	f022 0216 	bic.w	r2, r2, #22
 8006f9a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8006f9c:	695a      	ldr	r2, [r3, #20]
 8006f9e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006fa2:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8006fa4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006fa6:	b90a      	cbnz	r2, 8006fac <HAL_DMA_Abort+0x3c>
 8006fa8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006faa:	b11a      	cbz	r2, 8006fb4 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8006fac:	681a      	ldr	r2, [r3, #0]
 8006fae:	f022 0208 	bic.w	r2, r2, #8
 8006fb2:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8006fb4:	681a      	ldr	r2, [r3, #0]
 8006fb6:	f022 0201 	bic.w	r2, r2, #1
 8006fba:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8006fbc:	6823      	ldr	r3, [r4, #0]
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	f013 0301 	ands.w	r3, r3, #1
 8006fc4:	d10a      	bne.n	8006fdc <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006fc6:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8006fc8:	223f      	movs	r2, #63	; 0x3f
 8006fca:	408a      	lsls	r2, r1
 8006fcc:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8006fce:	2201      	movs	r2, #1
 8006fd0:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8006fd4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8006fd8:	4618      	mov	r0, r3
 8006fda:	e7d9      	b.n	8006f90 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8006fdc:	f7ff fcf2 	bl	80069c4 <HAL_GetTick>
 8006fe0:	1b40      	subs	r0, r0, r5
 8006fe2:	2805      	cmp	r0, #5
 8006fe4:	d9ea      	bls.n	8006fbc <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8006fe6:	2320      	movs	r3, #32
 8006fe8:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006fea:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8006fec:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006fee:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8006ff2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8006ff6:	e7cb      	b.n	8006f90 <HAL_DMA_Abort+0x20>

08006ff8 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006ff8:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8006ffa:	4604      	mov	r4, r0
 8006ffc:	b330      	cbz	r0, 800704c <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006ffe:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007002:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007006:	b91b      	cbnz	r3, 8007010 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8007008:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800700c:	f7fa fd5a 	bl	8001ac4 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007010:	6822      	ldr	r2, [r4, #0]
 8007012:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007014:	2302      	movs	r3, #2
 8007016:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800701a:	6813      	ldr	r3, [r2, #0]
 800701c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007020:	430b      	orrs	r3, r1
 8007022:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007024:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007026:	68a1      	ldr	r1, [r4, #8]
 8007028:	f023 0307 	bic.w	r3, r3, #7
 800702c:	430b      	orrs	r3, r1
 800702e:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007030:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007032:	68e1      	ldr	r1, [r4, #12]
 8007034:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007038:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800703c:	430b      	orrs	r3, r1
 800703e:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007040:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007042:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007044:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007046:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800704a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800704c:	2001      	movs	r0, #1
 800704e:	e7fc      	b.n	800704a <HAL_DMA2D_Init+0x52>

08007050 <HAL_DMA2D_LineEventCallback>:
 8007050:	4770      	bx	lr

08007052 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007052:	4770      	bx	lr

08007054 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007054:	6803      	ldr	r3, [r0, #0]
{
 8007056:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007058:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800705a:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800705c:	07f2      	lsls	r2, r6, #31
{
 800705e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007060:	d514      	bpl.n	800708c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007062:	05e9      	lsls	r1, r5, #23
 8007064:	d512      	bpl.n	800708c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007066:	681a      	ldr	r2, [r3, #0]
 8007068:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800706c:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800706e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007070:	f042 0201 	orr.w	r2, r2, #1
 8007074:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007076:	2201      	movs	r2, #1
 8007078:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800707a:	2304      	movs	r3, #4
 800707c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007080:	2300      	movs	r3, #0
 8007082:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8007086:	6943      	ldr	r3, [r0, #20]
 8007088:	b103      	cbz	r3, 800708c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800708a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800708c:	06b2      	lsls	r2, r6, #26
 800708e:	d516      	bpl.n	80070be <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007090:	04ab      	lsls	r3, r5, #18
 8007092:	d514      	bpl.n	80070be <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007094:	6823      	ldr	r3, [r4, #0]
 8007096:	681a      	ldr	r2, [r3, #0]
 8007098:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800709c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800709e:	2220      	movs	r2, #32
 80070a0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80070a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070a4:	f043 0302 	orr.w	r3, r3, #2
 80070a8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80070aa:	2304      	movs	r3, #4
 80070ac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80070b0:	2300      	movs	r3, #0
 80070b2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80070b6:	6963      	ldr	r3, [r4, #20]
 80070b8:	b10b      	cbz	r3, 80070be <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80070ba:	4620      	mov	r0, r4
 80070bc:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80070be:	0730      	lsls	r0, r6, #28
 80070c0:	d516      	bpl.n	80070f0 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80070c2:	0529      	lsls	r1, r5, #20
 80070c4:	d514      	bpl.n	80070f0 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80070c6:	6823      	ldr	r3, [r4, #0]
 80070c8:	681a      	ldr	r2, [r3, #0]
 80070ca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80070ce:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80070d0:	2208      	movs	r2, #8
 80070d2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80070d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070d6:	f043 0304 	orr.w	r3, r3, #4
 80070da:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80070dc:	2304      	movs	r3, #4
 80070de:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80070e2:	2300      	movs	r3, #0
 80070e4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80070e8:	6963      	ldr	r3, [r4, #20]
 80070ea:	b10b      	cbz	r3, 80070f0 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80070ec:	4620      	mov	r0, r4
 80070ee:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80070f0:	0772      	lsls	r2, r6, #29
 80070f2:	d50b      	bpl.n	800710c <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80070f4:	056b      	lsls	r3, r5, #21
 80070f6:	d509      	bpl.n	800710c <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80070f8:	6823      	ldr	r3, [r4, #0]
 80070fa:	681a      	ldr	r2, [r3, #0]
 80070fc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007100:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007102:	2204      	movs	r2, #4
 8007104:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007106:	4620      	mov	r0, r4
 8007108:	f7ff ffa2 	bl	8007050 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800710c:	07b0      	lsls	r0, r6, #30
 800710e:	d514      	bpl.n	800713a <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007110:	05a9      	lsls	r1, r5, #22
 8007112:	d512      	bpl.n	800713a <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007114:	6823      	ldr	r3, [r4, #0]
 8007116:	681a      	ldr	r2, [r3, #0]
 8007118:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800711c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800711e:	2202      	movs	r2, #2
 8007120:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007122:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007124:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007126:	2301      	movs	r3, #1
 8007128:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800712c:	2300      	movs	r3, #0
 800712e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8007132:	6923      	ldr	r3, [r4, #16]
 8007134:	b10b      	cbz	r3, 800713a <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8007136:	4620      	mov	r0, r4
 8007138:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800713a:	06f2      	lsls	r2, r6, #27
 800713c:	d513      	bpl.n	8007166 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800713e:	04eb      	lsls	r3, r5, #19
 8007140:	d511      	bpl.n	8007166 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007142:	6823      	ldr	r3, [r4, #0]
 8007144:	681a      	ldr	r2, [r3, #0]
 8007146:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800714a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800714c:	2210      	movs	r2, #16
 800714e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007150:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007152:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007154:	2301      	movs	r3, #1
 8007156:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800715a:	2300      	movs	r3, #0
 800715c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007160:	4620      	mov	r0, r4
 8007162:	f7ff ff76 	bl	8007052 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007166:	bd70      	pop	{r4, r5, r6, pc}

08007168 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8007168:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800716a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800716e:	2b01      	cmp	r3, #1
 8007170:	f04f 0302 	mov.w	r3, #2
 8007174:	d02b      	beq.n	80071ce <HAL_DMA2D_ConfigLayer+0x66>
 8007176:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007178:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800717c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007180:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8007184:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8007188:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800718a:	4f18      	ldr	r7, [pc, #96]	; (80071ec <HAL_DMA2D_ConfigLayer+0x84>)
 800718c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007190:	3c09      	subs	r4, #9
 8007192:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007194:	bf9c      	itt	ls
 8007196:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800719a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800719c:	ea4f 1601 	mov.w	r6, r1, lsl #4
 80071a0:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80071a2:	bf88      	it	hi
 80071a4:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80071a8:	b999      	cbnz	r1, 80071d2 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80071aa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80071ac:	4039      	ands	r1, r7
 80071ae:	430a      	orrs	r2, r1
 80071b0:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80071b2:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80071b4:	6982      	ldr	r2, [r0, #24]
 80071b6:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80071b8:	d803      	bhi.n	80071c2 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80071ba:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80071bc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80071c0:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80071c2:	2301      	movs	r3, #1
 80071c4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80071c8:	2300      	movs	r3, #0
 80071ca:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80071ce:	4618      	mov	r0, r3

  return HAL_OK;
}
 80071d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80071d2:	69d9      	ldr	r1, [r3, #28]
 80071d4:	4039      	ands	r1, r7
 80071d6:	430a      	orrs	r2, r1
 80071d8:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80071da:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80071dc:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80071de:	6992      	ldr	r2, [r2, #24]
 80071e0:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80071e2:	bf9c      	itt	ls
 80071e4:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 80071e8:	621d      	strls	r5, [r3, #32]
 80071ea:	e7ea      	b.n	80071c2 <HAL_DMA2D_ConfigLayer+0x5a>
 80071ec:	00fcfff0 	.word	0x00fcfff0

080071f0 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 80071f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071f4:	4607      	mov	r7, r0
 80071f6:	460d      	mov	r5, r1
 80071f8:	4614      	mov	r4, r2
 80071fa:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80071fc:	f7ff fbe2 	bl	80069c4 <HAL_GetTick>
 8007200:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8007202:	683a      	ldr	r2, [r7, #0]
 8007204:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8007206:	07db      	lsls	r3, r3, #31
 8007208:	d50a      	bpl.n	8007220 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800720a:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 800720e:	9c06      	ldr	r4, [sp, #24]
 8007210:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8007214:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8007218:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800721a:	2000      	movs	r0, #0
}
 800721c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8007220:	f7ff fbd0 	bl	80069c4 <HAL_GetTick>
 8007224:	eba0 0008 	sub.w	r0, r0, r8
 8007228:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800722c:	d9e9      	bls.n	8007202 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800722e:	2003      	movs	r0, #3
 8007230:	e7f4      	b.n	800721c <DSI_ShortWrite+0x2c>

08007232 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8007232:	7c03      	ldrb	r3, [r0, #16]
 8007234:	2b01      	cmp	r3, #1
 8007236:	d05d      	beq.n	80072f4 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8007238:	6803      	ldr	r3, [r0, #0]
 800723a:	2200      	movs	r2, #0
 800723c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8007240:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8007244:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8007246:	bf48      	it	mi
 8007248:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800724c:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800724e:	bf42      	ittt	mi
 8007250:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8007254:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8007258:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800725c:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800725e:	bf42      	ittt	mi
 8007260:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8007264:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8007268:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800726c:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800726e:	bf42      	ittt	mi
 8007270:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8007274:	f042 0201 	orrmi.w	r2, r2, #1
 8007278:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800727c:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800727e:	bf42      	ittt	mi
 8007280:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8007284:	f042 0202 	orrmi.w	r2, r2, #2
 8007288:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800728c:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800728e:	bf42      	ittt	mi
 8007290:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8007294:	f042 020c 	orrmi.w	r2, r2, #12
 8007298:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800729c:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800729e:	bf42      	ittt	mi
 80072a0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80072a4:	f042 0210 	orrmi.w	r2, r2, #16
 80072a8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 80072ac:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 80072ae:	bf42      	ittt	mi
 80072b0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80072b4:	f042 0220 	orrmi.w	r2, r2, #32
 80072b8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 80072bc:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 80072be:	bf42      	ittt	mi
 80072c0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80072c4:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80072c8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 80072cc:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 80072ce:	bf42      	ittt	mi
 80072d0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80072d4:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 80072d8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 80072dc:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 80072de:	bf42      	ittt	mi
 80072e0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80072e4:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 80072e8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 80072ec:	2300      	movs	r3, #0
 80072ee:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80072f0:	4618      	mov	r0, r3
 80072f2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80072f4:	2002      	movs	r0, #2
}
 80072f6:	4770      	bx	lr

080072f8 <HAL_DSI_Init>:
{
 80072f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80072fa:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80072fc:	4604      	mov	r4, r0
 80072fe:	2800      	cmp	r0, #0
 8007300:	f000 80a7 	beq.w	8007452 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8007304:	7c43      	ldrb	r3, [r0, #17]
 8007306:	b90b      	cbnz	r3, 800730c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8007308:	f7fa fbfe 	bl	8001b08 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800730c:	2303      	movs	r3, #3
 800730e:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8007310:	2300      	movs	r3, #0
 8007312:	9300      	str	r3, [sp, #0]
 8007314:	6823      	ldr	r3, [r4, #0]
 8007316:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800731a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800731e:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8007322:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8007326:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800732a:	9300      	str	r3, [sp, #0]
 800732c:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800732e:	f7ff fb49 	bl	80069c4 <HAL_GetTick>
 8007332:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8007334:	6822      	ldr	r2, [r4, #0]
 8007336:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800733a:	04d9      	lsls	r1, r3, #19
 800733c:	d578      	bpl.n	8007430 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800733e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8007342:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8007346:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800734a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800734e:	e9d5 0300 	ldrd	r0, r3, [r5]
 8007352:	02db      	lsls	r3, r3, #11
 8007354:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8007358:	68a8      	ldr	r0, [r5, #8]
 800735a:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800735e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007362:	430b      	orrs	r3, r1
 8007364:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8007368:	2300      	movs	r3, #0
 800736a:	9301      	str	r3, [sp, #4]
 800736c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8007370:	f043 0301 	orr.w	r3, r3, #1
 8007374:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8007378:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800737c:	f003 0301 	and.w	r3, r3, #1
 8007380:	9301      	str	r3, [sp, #4]
 8007382:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8007384:	f7ff fb1e 	bl	80069c4 <HAL_GetTick>
 8007388:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800738a:	6823      	ldr	r3, [r4, #0]
 800738c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8007390:	05d2      	lsls	r2, r2, #23
 8007392:	d557      	bpl.n	8007444 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8007394:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8007398:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800739a:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800739c:	f042 0206 	orr.w	r2, r2, #6
 80073a0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 80073a4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80073a8:	f022 0203 	bic.w	r2, r2, #3
 80073ac:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80073b0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80073b4:	430a      	orrs	r2, r1
 80073b6:	f042 0201 	orr.w	r2, r2, #1
 80073ba:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80073be:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80073c2:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80073c4:	f022 0203 	bic.w	r2, r2, #3
 80073c8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80073cc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80073d0:	430a      	orrs	r2, r1
 80073d2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 80073d6:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80073d8:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 80073da:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80073de:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80073e0:	689a      	ldr	r2, [r3, #8]
 80073e2:	430a      	orrs	r2, r1
 80073e4:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80073e6:	686a      	ldr	r2, [r5, #4]
 80073e8:	2a01      	cmp	r2, #1
 80073ea:	bf38      	it	cc
 80073ec:	2201      	movcc	r2, #1
 80073ee:	4611      	mov	r1, r2
 80073f0:	4a19      	ldr	r2, [pc, #100]	; (8007458 <HAL_DSI_Init+0x160>)
 80073f2:	434a      	muls	r2, r1
 80073f4:	68a9      	ldr	r1, [r5, #8]
 80073f6:	f001 0103 	and.w	r1, r1, #3
 80073fa:	408a      	lsls	r2, r1
 80073fc:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 8007400:	4341      	muls	r1, r0
 8007402:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8007406:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800740a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800740e:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8007412:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8007416:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8007418:	430a      	orrs	r2, r1
 800741a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800741e:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8007422:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8007426:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8007428:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800742a:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800742c:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800742e:	e007      	b.n	8007440 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8007430:	f7ff fac8 	bl	80069c4 <HAL_GetTick>
 8007434:	1b80      	subs	r0, r0, r6
 8007436:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800743a:	f67f af7b 	bls.w	8007334 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800743e:	2003      	movs	r0, #3
}
 8007440:	b002      	add	sp, #8
 8007442:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8007444:	f7ff fabe 	bl	80069c4 <HAL_GetTick>
 8007448:	1b80      	subs	r0, r0, r6
 800744a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800744e:	d99c      	bls.n	800738a <HAL_DSI_Init+0x92>
 8007450:	e7f5      	b.n	800743e <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8007452:	2001      	movs	r0, #1
 8007454:	e7f4      	b.n	8007440 <HAL_DSI_Init+0x148>
 8007456:	bf00      	nop
 8007458:	003d0900 	.word	0x003d0900

0800745c <HAL_DSI_ErrorCallback>:
 800745c:	4770      	bx	lr

0800745e <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800745e:	6803      	ldr	r3, [r0, #0]
 8007460:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8007464:	07d1      	lsls	r1, r2, #31
{
 8007466:	b510      	push	{r4, lr}
 8007468:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800746a:	d508      	bpl.n	800747e <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800746c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8007470:	07d2      	lsls	r2, r2, #31
 8007472:	d504      	bpl.n	800747e <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8007474:	2201      	movs	r2, #1
 8007476:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800747a:	f7f9 fb21 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800747e:	6823      	ldr	r3, [r4, #0]
 8007480:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8007484:	0791      	lsls	r1, r2, #30
 8007486:	d509      	bpl.n	800749c <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8007488:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800748c:	0792      	lsls	r2, r2, #30
 800748e:	d505      	bpl.n	800749c <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8007490:	2202      	movs	r2, #2
 8007492:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8007496:	4620      	mov	r0, r4
 8007498:	f7f9 fb46 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800749c:	69a3      	ldr	r3, [r4, #24]
 800749e:	2b00      	cmp	r3, #0
 80074a0:	d04e      	beq.n	8007540 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80074a2:	6821      	ldr	r1, [r4, #0]
 80074a4:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80074a8:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80074ac:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80074b0:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80074b2:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80074b6:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80074b8:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80074ba:	b119      	cbz	r1, 80074c4 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80074bc:	6961      	ldr	r1, [r4, #20]
 80074be:	f041 0101 	orr.w	r1, r1, #1
 80074c2:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80074c4:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80074c8:	bf1e      	ittt	ne
 80074ca:	6962      	ldrne	r2, [r4, #20]
 80074cc:	f042 0202 	orrne.w	r2, r2, #2
 80074d0:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 80074d2:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 80074d4:	bf42      	ittt	mi
 80074d6:	6962      	ldrmi	r2, [r4, #20]
 80074d8:	f042 0204 	orrmi.w	r2, r2, #4
 80074dc:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 80074de:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80074e0:	bf42      	ittt	mi
 80074e2:	6962      	ldrmi	r2, [r4, #20]
 80074e4:	f042 0208 	orrmi.w	r2, r2, #8
 80074e8:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80074ea:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80074ee:	bf1e      	ittt	ne
 80074f0:	6962      	ldrne	r2, [r4, #20]
 80074f2:	f042 0210 	orrne.w	r2, r2, #16
 80074f6:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80074f8:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80074fa:	bf42      	ittt	mi
 80074fc:	6962      	ldrmi	r2, [r4, #20]
 80074fe:	f042 0220 	orrmi.w	r2, r2, #32
 8007502:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8007504:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8007506:	bf42      	ittt	mi
 8007508:	6962      	ldrmi	r2, [r4, #20]
 800750a:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800750e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8007510:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8007512:	bf42      	ittt	mi
 8007514:	6962      	ldrmi	r2, [r4, #20]
 8007516:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800751a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800751c:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800751e:	bf42      	ittt	mi
 8007520:	6962      	ldrmi	r2, [r4, #20]
 8007522:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8007526:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8007528:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800752c:	bf1e      	ittt	ne
 800752e:	6963      	ldrne	r3, [r4, #20]
 8007530:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8007534:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8007536:	6963      	ldr	r3, [r4, #20]
 8007538:	b113      	cbz	r3, 8007540 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800753a:	4620      	mov	r0, r4
 800753c:	f7ff ff8e 	bl	800745c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8007540:	bd10      	pop	{r4, pc}

08007542 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8007542:	7c03      	ldrb	r3, [r0, #16]
 8007544:	2b01      	cmp	r3, #1
 8007546:	d00b      	beq.n	8007560 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8007548:	6803      	ldr	r3, [r0, #0]
 800754a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800754c:	f022 0203 	bic.w	r2, r2, #3
 8007550:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8007552:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007554:	4311      	orrs	r1, r2
 8007556:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8007558:	2300      	movs	r3, #0
 800755a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800755c:	4618      	mov	r0, r3
 800755e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8007560:	2002      	movs	r0, #2
}
 8007562:	4770      	bx	lr

08007564 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8007564:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8007566:	7c03      	ldrb	r3, [r0, #16]
 8007568:	2b01      	cmp	r3, #1
 800756a:	d06a      	beq.n	8007642 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800756c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800756e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8007570:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007572:	f042 0201 	orr.w	r2, r2, #1
 8007576:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8007578:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800757c:	f022 0201 	bic.w	r2, r2, #1
 8007580:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8007584:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8007588:	f042 0201 	orr.w	r2, r2, #1
 800758c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8007590:	68da      	ldr	r2, [r3, #12]
 8007592:	f022 0203 	bic.w	r2, r2, #3
 8007596:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8007598:	68da      	ldr	r2, [r3, #12]
 800759a:	4322      	orrs	r2, r4
 800759c:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800759e:	695a      	ldr	r2, [r3, #20]
 80075a0:	f022 0207 	bic.w	r2, r2, #7
 80075a4:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80075a6:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80075aa:	432a      	orrs	r2, r5
 80075ac:	694d      	ldr	r5, [r1, #20]
 80075ae:	695c      	ldr	r4, [r3, #20]
 80075b0:	432a      	orrs	r2, r5
 80075b2:	4322      	orrs	r2, r4
 80075b4:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80075b6:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80075b8:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80075ba:	f022 020f 	bic.w	r2, r2, #15
 80075be:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80075c0:	691c      	ldr	r4, [r3, #16]
 80075c2:	432c      	orrs	r4, r5
 80075c4:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80075c6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80075ca:	f024 040e 	bic.w	r4, r4, #14
 80075ce:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80075d2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80075d6:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80075d8:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80075dc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80075e0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80075e2:	0c12      	lsrs	r2, r2, #16
 80075e4:	0412      	lsls	r2, r2, #16
 80075e6:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80075e8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80075ea:	4322      	orrs	r2, r4
 80075ec:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80075ee:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80075f2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80075f6:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80075fa:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80075fe:	432a      	orrs	r2, r5
 8007600:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8007602:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8007606:	432a      	orrs	r2, r5
 8007608:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800760a:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800760c:	432a      	orrs	r2, r5
 800760e:	4322      	orrs	r2, r4
 8007610:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8007614:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8007616:	f022 0201 	bic.w	r2, r2, #1
 800761a:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800761c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800761e:	430a      	orrs	r2, r1
 8007620:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8007622:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8007626:	f042 0201 	orr.w	r2, r2, #1
 800762a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800762e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8007632:	f042 0202 	orr.w	r2, r2, #2
 8007636:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800763a:	2300      	movs	r3, #0
 800763c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800763e:	4618      	mov	r0, r3
}
 8007640:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8007642:	2002      	movs	r0, #2
 8007644:	e7fc      	b.n	8007640 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08007648 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8007648:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800764a:	7c03      	ldrb	r3, [r0, #16]
 800764c:	2b01      	cmp	r3, #1
 800764e:	d02a      	beq.n	80076a6 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8007650:	6802      	ldr	r2, [r0, #0]
 8007652:	4b16      	ldr	r3, [pc, #88]	; (80076ac <HAL_DSI_ConfigCommand+0x64>)
 8007654:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8007656:	4023      	ands	r3, r4
 8007658:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800765a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800765e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8007660:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8007662:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8007664:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8007666:	68cd      	ldr	r5, [r1, #12]
 8007668:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800766a:	690d      	ldr	r5, [r1, #16]
 800766c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800766e:	694d      	ldr	r5, [r1, #20]
 8007670:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8007672:	698d      	ldr	r5, [r1, #24]
 8007674:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8007676:	69cd      	ldr	r5, [r1, #28]
 8007678:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800767a:	6a0d      	ldr	r5, [r1, #32]
 800767c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800767e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8007680:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8007682:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8007684:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8007686:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8007688:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800768a:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800768c:	4323      	orrs	r3, r4
 800768e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8007690:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8007692:	f023 0302 	bic.w	r3, r3, #2
 8007696:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8007698:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800769a:	430b      	orrs	r3, r1
 800769c:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800769e:	2300      	movs	r3, #0
 80076a0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80076a2:	4618      	mov	r0, r3
}
 80076a4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80076a6:	2002      	movs	r0, #2
 80076a8:	e7fc      	b.n	80076a4 <HAL_DSI_ConfigCommand+0x5c>
 80076aa:	bf00      	nop
 80076ac:	fef080ff 	.word	0xfef080ff

080076b0 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80076b0:	7c03      	ldrb	r3, [r0, #16]
 80076b2:	2b01      	cmp	r3, #1
 80076b4:	d00b      	beq.n	80076ce <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80076b6:	6803      	ldr	r3, [r0, #0]
 80076b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80076ba:	f022 021f 	bic.w	r2, r2, #31
 80076be:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80076c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80076c2:	4311      	orrs	r1, r2
 80076c4:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80076c6:	2300      	movs	r3, #0
 80076c8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80076ca:	4618      	mov	r0, r3
 80076cc:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80076ce:	2002      	movs	r0, #2
}
 80076d0:	4770      	bx	lr

080076d2 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80076d2:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80076d4:	7c03      	ldrb	r3, [r0, #16]
 80076d6:	2b01      	cmp	r3, #1
 80076d8:	d035      	beq.n	8007746 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80076da:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80076de:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80076e0:	4294      	cmp	r4, r2
 80076e2:	bf38      	it	cc
 80076e4:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80076e6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80076ea:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80076ee:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80076f2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80076f6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80076fa:	4322      	orrs	r2, r4
 80076fc:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8007700:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8007704:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8007708:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800770c:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8007710:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8007712:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8007716:	690d      	ldr	r5, [r1, #16]
 8007718:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800771c:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800771e:	432a      	orrs	r2, r5
 8007720:	4322      	orrs	r2, r4
 8007722:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8007726:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800772a:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800772e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8007732:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8007736:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800773a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800773e:	2300      	movs	r3, #0
 8007740:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8007742:	4618      	mov	r0, r3
}
 8007744:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8007746:	2002      	movs	r0, #2
 8007748:	e7fc      	b.n	8007744 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800774c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800774c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800774e:	7c03      	ldrb	r3, [r0, #16]
 8007750:	2b01      	cmp	r3, #1
 8007752:	d05c      	beq.n	800780e <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8007754:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8007756:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8007758:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800775a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800775c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8007760:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8007762:	689a      	ldr	r2, [r3, #8]
 8007764:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8007768:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800776a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800776c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800776e:	b292      	uxth	r2, r2
 8007770:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8007772:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8007774:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8007778:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800777a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800777c:	4a25      	ldr	r2, [pc, #148]	; (8007814 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800777e:	4014      	ands	r4, r2
 8007780:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8007782:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8007784:	432c      	orrs	r4, r5
 8007786:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8007788:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800778a:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800778c:	4014      	ands	r4, r2
 800778e:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8007790:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8007792:	432c      	orrs	r4, r5
 8007794:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8007796:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800779a:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800779c:	4014      	ands	r4, r2
 800779e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80077a2:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80077a6:	432c      	orrs	r4, r5
 80077a8:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80077ac:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80077b0:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80077b2:	4014      	ands	r4, r2
 80077b4:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80077b8:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80077bc:	432c      	orrs	r4, r5
 80077be:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80077c2:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80077c6:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80077ca:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80077ce:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80077d2:	698d      	ldr	r5, [r1, #24]
 80077d4:	432c      	orrs	r4, r5
 80077d6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80077da:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80077de:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80077e0:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80077e2:	4014      	ands	r4, r2
 80077e4:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80077e8:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80077ec:	432c      	orrs	r4, r5
 80077ee:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80077f2:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80077f6:	4022      	ands	r2, r4
 80077f8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80077fc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8007800:	430a      	orrs	r2, r1
 8007802:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8007806:	2300      	movs	r3, #0
 8007808:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800780a:	4618      	mov	r0, r3
}
 800780c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800780e:	2002      	movs	r0, #2
 8007810:	e7fc      	b.n	800780c <HAL_DSI_ConfigHostTimeouts+0xc0>
 8007812:	bf00      	nop
 8007814:	ffff0000 	.word	0xffff0000

08007818 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8007818:	7c03      	ldrb	r3, [r0, #16]
 800781a:	2b01      	cmp	r3, #1
{
 800781c:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800781e:	d01c      	beq.n	800785a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8007820:	6802      	ldr	r2, [r0, #0]
 8007822:	2300      	movs	r3, #0
 8007824:	9300      	str	r3, [sp, #0]
 8007826:	6851      	ldr	r1, [r2, #4]
 8007828:	f041 0101 	orr.w	r1, r1, #1
 800782c:	6051      	str	r1, [r2, #4]
 800782e:	6851      	ldr	r1, [r2, #4]
 8007830:	f001 0101 	and.w	r1, r1, #1
 8007834:	9100      	str	r1, [sp, #0]
 8007836:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8007838:	9301      	str	r3, [sp, #4]
 800783a:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800783e:	f041 0108 	orr.w	r1, r1, #8
 8007842:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8007846:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800784a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800784c:	f002 0208 	and.w	r2, r2, #8
 8007850:	9201      	str	r2, [sp, #4]
 8007852:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8007854:	4618      	mov	r0, r3
}
 8007856:	b002      	add	sp, #8
 8007858:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800785a:	2002      	movs	r0, #2
 800785c:	e7fb      	b.n	8007856 <HAL_DSI_Start+0x3e>

0800785e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800785e:	7c03      	ldrb	r3, [r0, #16]
 8007860:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8007862:	bf1f      	itttt	ne
 8007864:	6802      	ldrne	r2, [r0, #0]
 8007866:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800786a:	f043 0304 	orrne.w	r3, r3, #4
 800786e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8007872:	bf1d      	ittte	ne
 8007874:	2300      	movne	r3, #0
 8007876:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8007878:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800787a:	2002      	moveq	r0, #2
}
 800787c:	4770      	bx	lr

0800787e <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800787e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8007880:	7c05      	ldrb	r5, [r0, #16]
 8007882:	2d01      	cmp	r5, #1
{
 8007884:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8007886:	d009      	beq.n	800789c <HAL_DSI_ShortWrite+0x1e>
 8007888:	2501      	movs	r5, #1
 800788a:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800788c:	9d06      	ldr	r5, [sp, #24]
 800788e:	9500      	str	r5, [sp, #0]
 8007890:	f7ff fcae 	bl	80071f0 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8007894:	2300      	movs	r3, #0
 8007896:	7423      	strb	r3, [r4, #16]

  return status;
}
 8007898:	b003      	add	sp, #12
 800789a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800789c:	2002      	movs	r0, #2
 800789e:	e7fb      	b.n	8007898 <HAL_DSI_ShortWrite+0x1a>

080078a0 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80078a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078a4:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80078a6:	7c03      	ldrb	r3, [r0, #16]
 80078a8:	2b01      	cmp	r3, #1
{
 80078aa:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80078ae:	4606      	mov	r6, r0
 80078b0:	460f      	mov	r7, r1
 80078b2:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80078b4:	d053      	beq.n	800795e <HAL_DSI_LongWrite+0xbe>
 80078b6:	2301      	movs	r3, #1
 80078b8:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80078ba:	f7ff f883 	bl	80069c4 <HAL_GetTick>
 80078be:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80078c0:	6832      	ldr	r2, [r6, #0]
 80078c2:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80078c4:	f013 0a01 	ands.w	sl, r3, #1
 80078c8:	d01a      	beq.n	8007900 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80078ca:	2c03      	cmp	r4, #3
 80078cc:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 80078ce:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80078d2:	bf28      	it	cs
 80078d4:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 80078d6:	4288      	cmp	r0, r1
 80078d8:	d11e      	bne.n	8007918 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80078da:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 80078dc:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 80078e0:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80078e2:	bb1b      	cbnz	r3, 800792c <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80078e4:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80078e6:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 80078ea:	0225      	lsls	r5, r4, #8
 80078ec:	b2ad      	uxth	r5, r5
 80078ee:	0224      	lsls	r4, r4, #8
 80078f0:	430d      	orrs	r5, r1
 80078f2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80078f6:	432c      	orrs	r4, r5
 80078f8:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80078fa:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80078fc:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80078fe:	e009      	b.n	8007914 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8007900:	f7ff f860 	bl	80069c4 <HAL_GetTick>
 8007904:	eba0 000b 	sub.w	r0, r0, fp
 8007908:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800790c:	d9d8      	bls.n	80078c0 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800790e:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8007912:	2003      	movs	r0, #3
}
 8007914:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8007918:	f818 3000 	ldrb.w	r3, [r8, r0]
 800791c:	3001      	adds	r0, #1
 800791e:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 8007922:	fa03 f30c 	lsl.w	r3, r3, ip
 8007926:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800792a:	e7d4      	b.n	80078d6 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800792c:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800792e:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8007932:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8007934:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8007936:	bf28      	it	cs
 8007938:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800793c:	f810 8001 	ldrb.w	r8, [r0, r1]
 8007940:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8007944:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8007946:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800794a:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800794c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8007950:	d1f4      	bne.n	800793c <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8007952:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8007956:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800795a:	4470      	add	r0, lr
 800795c:	e7c1      	b.n	80078e2 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800795e:	2002      	movs	r0, #2
 8007960:	e7d8      	b.n	8007914 <HAL_DSI_LongWrite+0x74>

08007962 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8007962:	7c03      	ldrb	r3, [r0, #16]
 8007964:	2b01      	cmp	r3, #1
 8007966:	d010      	beq.n	800798a <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8007968:	6803      	ldr	r3, [r0, #0]
 800796a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800796e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8007972:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8007976:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800797a:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800797e:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8007982:	2300      	movs	r3, #0
 8007984:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8007986:	4618      	mov	r0, r3
 8007988:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800798a:	2002      	movs	r0, #2
}
 800798c:	4770      	bx	lr
	...

08007990 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007990:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007994:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8007b58 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007998:	4a6d      	ldr	r2, [pc, #436]	; (8007b50 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800799a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800799c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800799e:	2401      	movs	r4, #1
 80079a0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80079a2:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80079a6:	43ac      	bics	r4, r5
 80079a8:	f040 80b9 	bne.w	8007b1e <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80079ac:	684d      	ldr	r5, [r1, #4]
 80079ae:	f005 0403 	and.w	r4, r5, #3
 80079b2:	ea4f 0843 	mov.w	r8, r3, lsl #1
 80079b6:	2603      	movs	r6, #3
 80079b8:	1e67      	subs	r7, r4, #1
 80079ba:	fa06 f608 	lsl.w	r6, r6, r8
 80079be:	2f01      	cmp	r7, #1
 80079c0:	ea6f 0606 	mvn.w	r6, r6
 80079c4:	d834      	bhi.n	8007a30 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80079c6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80079c8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80079cc:	68cf      	ldr	r7, [r1, #12]
 80079ce:	fa07 f708 	lsl.w	r7, r7, r8
 80079d2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80079d6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80079d8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80079da:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80079de:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80079e2:	409f      	lsls	r7, r3
 80079e4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80079e8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80079ea:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80079ec:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80079f0:	688f      	ldr	r7, [r1, #8]
 80079f2:	fa07 f708 	lsl.w	r7, r7, r8
 80079f6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80079fa:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80079fc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80079fe:	d119      	bne.n	8007a34 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8007a00:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8007a04:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007a08:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8007a0c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007a10:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8007a14:	f04f 0e0f 	mov.w	lr, #15
 8007a18:	fa0e fe0b 	lsl.w	lr, lr, fp
 8007a1c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007a20:	690f      	ldr	r7, [r1, #16]
 8007a22:	fa07 f70b 	lsl.w	r7, r7, fp
 8007a26:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8007a2a:	f8ca 7020 	str.w	r7, [sl, #32]
 8007a2e:	e001      	b.n	8007a34 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007a30:	2c03      	cmp	r4, #3
 8007a32:	d1da      	bne.n	80079ea <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8007a34:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007a36:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007a3a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007a3c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007a3e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8007a42:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007a44:	d06b      	beq.n	8007b1e <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007a46:	f04f 0a00 	mov.w	sl, #0
 8007a4a:	f8cd a004 	str.w	sl, [sp, #4]
 8007a4e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007a52:	4c40      	ldr	r4, [pc, #256]	; (8007b54 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007a54:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8007a58:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8007a5c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8007a60:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8007a64:	9601      	str	r6, [sp, #4]
 8007a66:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007a68:	f023 0603 	bic.w	r6, r3, #3
 8007a6c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8007a70:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007a74:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8007a78:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007a7c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8007a80:	270f      	movs	r7, #15
 8007a82:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007a86:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007a88:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007a8c:	d04e      	beq.n	8007b2c <HAL_GPIO_Init+0x19c>
 8007a8e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007a92:	42a0      	cmp	r0, r4
 8007a94:	d04c      	beq.n	8007b30 <HAL_GPIO_Init+0x1a0>
 8007a96:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007a9a:	42a0      	cmp	r0, r4
 8007a9c:	d04a      	beq.n	8007b34 <HAL_GPIO_Init+0x1a4>
 8007a9e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007aa2:	42a0      	cmp	r0, r4
 8007aa4:	d048      	beq.n	8007b38 <HAL_GPIO_Init+0x1a8>
 8007aa6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007aaa:	42a0      	cmp	r0, r4
 8007aac:	d046      	beq.n	8007b3c <HAL_GPIO_Init+0x1ac>
 8007aae:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007ab2:	42a0      	cmp	r0, r4
 8007ab4:	d044      	beq.n	8007b40 <HAL_GPIO_Init+0x1b0>
 8007ab6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007aba:	42a0      	cmp	r0, r4
 8007abc:	d042      	beq.n	8007b44 <HAL_GPIO_Init+0x1b4>
 8007abe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007ac2:	42a0      	cmp	r0, r4
 8007ac4:	d040      	beq.n	8007b48 <HAL_GPIO_Init+0x1b8>
 8007ac6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007aca:	42a0      	cmp	r0, r4
 8007acc:	d03e      	beq.n	8007b4c <HAL_GPIO_Init+0x1bc>
 8007ace:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007ad2:	42a0      	cmp	r0, r4
 8007ad4:	bf0c      	ite	eq
 8007ad6:	2409      	moveq	r4, #9
 8007ad8:	240a      	movne	r4, #10
 8007ada:	fa04 f40e 	lsl.w	r4, r4, lr
 8007ade:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007ae0:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 8007ae2:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8007ae4:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8007ae8:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8007aea:	bf54      	ite	pl
 8007aec:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007aee:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8007af2:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 8007af4:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8007af6:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8007af8:	bf54      	ite	pl
 8007afa:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007afc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8007b00:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007b02:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007b04:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8007b06:	bf54      	ite	pl
 8007b08:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007b0a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8007b0e:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8007b10:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8007b12:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8007b14:	bf54      	ite	pl
 8007b16:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007b18:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8007b1c:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007b1e:	3301      	adds	r3, #1
 8007b20:	2b10      	cmp	r3, #16
 8007b22:	f47f af3b 	bne.w	800799c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8007b26:	b003      	add	sp, #12
 8007b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007b2c:	4654      	mov	r4, sl
 8007b2e:	e7d4      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b30:	2401      	movs	r4, #1
 8007b32:	e7d2      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b34:	2402      	movs	r4, #2
 8007b36:	e7d0      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b38:	2403      	movs	r4, #3
 8007b3a:	e7ce      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b3c:	2404      	movs	r4, #4
 8007b3e:	e7cc      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b40:	2405      	movs	r4, #5
 8007b42:	e7ca      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b44:	2406      	movs	r4, #6
 8007b46:	e7c8      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b48:	2407      	movs	r4, #7
 8007b4a:	e7c6      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b4c:	2408      	movs	r4, #8
 8007b4e:	e7c4      	b.n	8007ada <HAL_GPIO_Init+0x14a>
 8007b50:	40013c00 	.word	0x40013c00
 8007b54:	40020000 	.word	0x40020000
 8007b58:	40023800 	.word	0x40023800

08007b5c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8007b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8007b60:	4c4a      	ldr	r4, [pc, #296]	; (8007c8c <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007b62:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8007c94 <HAL_GPIO_DeInit+0x138>
 8007b66:	f8df a130 	ldr.w	sl, [pc, #304]	; 8007c98 <HAL_GPIO_DeInit+0x13c>
 8007b6a:	f8df b130 	ldr.w	fp, [pc, #304]	; 8007c9c <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007b6e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8007b70:	2301      	movs	r3, #1
 8007b72:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8007b76:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8007b7a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8007b7e:	d16e      	bne.n	8007c5e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8007b80:	f022 0503 	bic.w	r5, r2, #3
 8007b84:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8007b88:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007b8c:	4b40      	ldr	r3, [pc, #256]	; (8007c90 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8007b8e:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8007b92:	f002 0c03 	and.w	ip, r2, #3
 8007b96:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8007b9a:	260f      	movs	r6, #15
 8007b9c:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007ba0:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8007ba2:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007ba6:	d05f      	beq.n	8007c68 <HAL_GPIO_DeInit+0x10c>
 8007ba8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007bac:	4298      	cmp	r0, r3
 8007bae:	d05d      	beq.n	8007c6c <HAL_GPIO_DeInit+0x110>
 8007bb0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007bb4:	4298      	cmp	r0, r3
 8007bb6:	d05b      	beq.n	8007c70 <HAL_GPIO_DeInit+0x114>
 8007bb8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007bbc:	4298      	cmp	r0, r3
 8007bbe:	d059      	beq.n	8007c74 <HAL_GPIO_DeInit+0x118>
 8007bc0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007bc4:	4298      	cmp	r0, r3
 8007bc6:	d057      	beq.n	8007c78 <HAL_GPIO_DeInit+0x11c>
 8007bc8:	4548      	cmp	r0, r9
 8007bca:	d057      	beq.n	8007c7c <HAL_GPIO_DeInit+0x120>
 8007bcc:	4550      	cmp	r0, sl
 8007bce:	d057      	beq.n	8007c80 <HAL_GPIO_DeInit+0x124>
 8007bd0:	4558      	cmp	r0, fp
 8007bd2:	d057      	beq.n	8007c84 <HAL_GPIO_DeInit+0x128>
 8007bd4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8007bd8:	4298      	cmp	r0, r3
 8007bda:	d055      	beq.n	8007c88 <HAL_GPIO_DeInit+0x12c>
 8007bdc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007be0:	4298      	cmp	r0, r3
 8007be2:	bf0c      	ite	eq
 8007be4:	2309      	moveq	r3, #9
 8007be6:	230a      	movne	r3, #10
 8007be8:	fa03 f30c 	lsl.w	r3, r3, ip
 8007bec:	4543      	cmp	r3, r8
 8007bee:	d113      	bne.n	8007c18 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8007bf0:	6823      	ldr	r3, [r4, #0]
 8007bf2:	ea23 0307 	bic.w	r3, r3, r7
 8007bf6:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8007bf8:	6863      	ldr	r3, [r4, #4]
 8007bfa:	ea23 0307 	bic.w	r3, r3, r7
 8007bfe:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8007c00:	68a3      	ldr	r3, [r4, #8]
 8007c02:	ea23 0307 	bic.w	r3, r3, r7
 8007c06:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8007c08:	68e3      	ldr	r3, [r4, #12]
 8007c0a:	ea23 0707 	bic.w	r7, r3, r7
 8007c0e:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8007c10:	68ab      	ldr	r3, [r5, #8]
 8007c12:	ea23 0606 	bic.w	r6, r3, r6
 8007c16:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007c18:	6805      	ldr	r5, [r0, #0]
 8007c1a:	2603      	movs	r6, #3
 8007c1c:	0053      	lsls	r3, r2, #1
 8007c1e:	fa06 f303 	lsl.w	r3, r6, r3
 8007c22:	ea25 0503 	bic.w	r5, r5, r3
 8007c26:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007c28:	fa22 f506 	lsr.w	r5, r2, r6
 8007c2c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8007c30:	f002 0c07 	and.w	ip, r2, #7
 8007c34:	6a2e      	ldr	r6, [r5, #32]
 8007c36:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8007c3a:	270f      	movs	r7, #15
 8007c3c:	fa07 f70c 	lsl.w	r7, r7, ip
 8007c40:	ea26 0707 	bic.w	r7, r6, r7
 8007c44:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007c46:	68c5      	ldr	r5, [r0, #12]
 8007c48:	ea25 0503 	bic.w	r5, r5, r3
 8007c4c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007c4e:	6845      	ldr	r5, [r0, #4]
 8007c50:	ea25 050e 	bic.w	r5, r5, lr
 8007c54:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007c56:	6885      	ldr	r5, [r0, #8]
 8007c58:	ea25 0303 	bic.w	r3, r5, r3
 8007c5c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007c5e:	3201      	adds	r2, #1
 8007c60:	2a10      	cmp	r2, #16
 8007c62:	d185      	bne.n	8007b70 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8007c64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007c68:	2300      	movs	r3, #0
 8007c6a:	e7bd      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c6c:	2301      	movs	r3, #1
 8007c6e:	e7bb      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c70:	2302      	movs	r3, #2
 8007c72:	e7b9      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c74:	2303      	movs	r3, #3
 8007c76:	e7b7      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c78:	2304      	movs	r3, #4
 8007c7a:	e7b5      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c7c:	2305      	movs	r3, #5
 8007c7e:	e7b3      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c80:	2306      	movs	r3, #6
 8007c82:	e7b1      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c84:	2307      	movs	r3, #7
 8007c86:	e7af      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c88:	2308      	movs	r3, #8
 8007c8a:	e7ad      	b.n	8007be8 <HAL_GPIO_DeInit+0x8c>
 8007c8c:	40013c00 	.word	0x40013c00
 8007c90:	40020000 	.word	0x40020000
 8007c94:	40021400 	.word	0x40021400
 8007c98:	40021800 	.word	0x40021800
 8007c9c:	40021c00 	.word	0x40021c00

08007ca0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007ca0:	6903      	ldr	r3, [r0, #16]
 8007ca2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8007ca4:	bf14      	ite	ne
 8007ca6:	2001      	movne	r0, #1
 8007ca8:	2000      	moveq	r0, #0
 8007caa:	4770      	bx	lr

08007cac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007cac:	b10a      	cbz	r2, 8007cb2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007cae:	6181      	str	r1, [r0, #24]
  }
}
 8007cb0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007cb2:	0409      	lsls	r1, r1, #16
 8007cb4:	e7fb      	b.n	8007cae <HAL_GPIO_WritePin+0x2>

08007cb6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8007cb6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007cb8:	ea01 0203 	and.w	r2, r1, r3
 8007cbc:	ea21 0103 	bic.w	r1, r1, r3
 8007cc0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8007cc4:	6181      	str	r1, [r0, #24]
}
 8007cc6:	4770      	bx	lr

08007cc8 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007cc8:	6801      	ldr	r1, [r0, #0]
 8007cca:	694b      	ldr	r3, [r1, #20]
 8007ccc:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8007cd0:	f04f 0200 	mov.w	r2, #0
 8007cd4:	d010      	beq.n	8007cf8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007cd6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8007cda:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8007cdc:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8007cde:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007ce0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007ce4:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007ce8:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007cea:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007cee:	f043 0304 	orr.w	r3, r3, #4
 8007cf2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8007cf4:	2001      	movs	r0, #1
 8007cf6:	4770      	bx	lr
  }
  return HAL_OK;
 8007cf8:	4618      	mov	r0, r3
}
 8007cfa:	4770      	bx	lr

08007cfc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007cfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d00:	4604      	mov	r4, r0
 8007d02:	460f      	mov	r7, r1
 8007d04:	4616      	mov	r6, r2
 8007d06:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007d08:	6825      	ldr	r5, [r4, #0]
 8007d0a:	6968      	ldr	r0, [r5, #20]
 8007d0c:	ea27 0000 	bic.w	r0, r7, r0
 8007d10:	b280      	uxth	r0, r0
 8007d12:	b1b8      	cbz	r0, 8007d44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007d14:	696b      	ldr	r3, [r5, #20]
 8007d16:	055a      	lsls	r2, r3, #21
 8007d18:	d516      	bpl.n	8007d48 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007d1a:	682b      	ldr	r3, [r5, #0]
 8007d1c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007d20:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007d22:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8007d26:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007d28:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007d2a:	2300      	movs	r3, #0
 8007d2c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007d2e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007d32:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007d36:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007d38:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007d3c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007d3e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8007d42:	2001      	movs	r0, #1
}
 8007d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8007d48:	1c73      	adds	r3, r6, #1
 8007d4a:	d0de      	beq.n	8007d0a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007d4c:	f7fe fe3a 	bl	80069c4 <HAL_GetTick>
 8007d50:	eba0 0008 	sub.w	r0, r0, r8
 8007d54:	42b0      	cmp	r0, r6
 8007d56:	d801      	bhi.n	8007d5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8007d58:	2e00      	cmp	r6, #0
 8007d5a:	d1d5      	bne.n	8007d08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007d5c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007d5e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007d60:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007d62:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007d66:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007d6a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007d6c:	f042 0220 	orr.w	r2, r2, #32
 8007d70:	e7e4      	b.n	8007d3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08007d72 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8007d72:	b570      	push	{r4, r5, r6, lr}
 8007d74:	4604      	mov	r4, r0
 8007d76:	460d      	mov	r5, r1
 8007d78:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8007d7a:	6823      	ldr	r3, [r4, #0]
 8007d7c:	695b      	ldr	r3, [r3, #20]
 8007d7e:	075b      	lsls	r3, r3, #29
 8007d80:	d501      	bpl.n	8007d86 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8007d82:	2000      	movs	r0, #0
}
 8007d84:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007d86:	4620      	mov	r0, r4
 8007d88:	f7ff ff9e 	bl	8007cc8 <I2C_IsAcknowledgeFailed>
 8007d8c:	b9a8      	cbnz	r0, 8007dba <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007d8e:	1c6a      	adds	r2, r5, #1
 8007d90:	d0f3      	beq.n	8007d7a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007d92:	f7fe fe17 	bl	80069c4 <HAL_GetTick>
 8007d96:	1b80      	subs	r0, r0, r6
 8007d98:	42a8      	cmp	r0, r5
 8007d9a:	d801      	bhi.n	8007da0 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8007d9c:	2d00      	cmp	r5, #0
 8007d9e:	d1ec      	bne.n	8007d7a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007da0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007da2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007da4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007da6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007daa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007dae:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007db0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007db4:	f042 0220 	orr.w	r2, r2, #32
 8007db8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007dba:	2001      	movs	r0, #1
 8007dbc:	e7e2      	b.n	8007d84 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08007dbe <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8007dbe:	b570      	push	{r4, r5, r6, lr}
 8007dc0:	4604      	mov	r4, r0
 8007dc2:	460d      	mov	r5, r1
 8007dc4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8007dc6:	6821      	ldr	r1, [r4, #0]
 8007dc8:	694b      	ldr	r3, [r1, #20]
 8007dca:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8007dce:	d001      	beq.n	8007dd4 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8007dd0:	2000      	movs	r0, #0
 8007dd2:	e010      	b.n	8007df6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8007dd4:	694a      	ldr	r2, [r1, #20]
 8007dd6:	06d2      	lsls	r2, r2, #27
 8007dd8:	d50e      	bpl.n	8007df8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007dda:	f06f 0210 	mvn.w	r2, #16
 8007dde:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007de0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007de2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007de4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007de8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8007dec:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007dee:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007df0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8007df4:	2001      	movs	r0, #1
}
 8007df6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007df8:	f7fe fde4 	bl	80069c4 <HAL_GetTick>
 8007dfc:	1b80      	subs	r0, r0, r6
 8007dfe:	42a8      	cmp	r0, r5
 8007e00:	d801      	bhi.n	8007e06 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8007e02:	2d00      	cmp	r5, #0
 8007e04:	d1df      	bne.n	8007dc6 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007e06:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007e08:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007e0a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007e0c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007e10:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007e14:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007e16:	f042 0220 	orr.w	r2, r2, #32
 8007e1a:	e7e8      	b.n	8007dee <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08007e1c <I2C_WaitOnFlagUntilTimeout>:
{
 8007e1c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8007e20:	4606      	mov	r6, r0
 8007e22:	460f      	mov	r7, r1
 8007e24:	4691      	mov	r9, r2
 8007e26:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007e28:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8007e2c:	6833      	ldr	r3, [r6, #0]
 8007e2e:	f1ba 0f01 	cmp.w	sl, #1
 8007e32:	bf0c      	ite	eq
 8007e34:	695c      	ldreq	r4, [r3, #20]
 8007e36:	699c      	ldrne	r4, [r3, #24]
 8007e38:	ea27 0404 	bic.w	r4, r7, r4
 8007e3c:	b2a4      	uxth	r4, r4
 8007e3e:	fab4 f484 	clz	r4, r4
 8007e42:	0964      	lsrs	r4, r4, #5
 8007e44:	45a1      	cmp	r9, r4
 8007e46:	d001      	beq.n	8007e4c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8007e48:	2000      	movs	r0, #0
 8007e4a:	e017      	b.n	8007e7c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8007e4c:	1c6a      	adds	r2, r5, #1
 8007e4e:	d0ee      	beq.n	8007e2e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007e50:	f7fe fdb8 	bl	80069c4 <HAL_GetTick>
 8007e54:	9b08      	ldr	r3, [sp, #32]
 8007e56:	1ac0      	subs	r0, r0, r3
 8007e58:	42a8      	cmp	r0, r5
 8007e5a:	d801      	bhi.n	8007e60 <I2C_WaitOnFlagUntilTimeout+0x44>
 8007e5c:	2d00      	cmp	r5, #0
 8007e5e:	d1e5      	bne.n	8007e2c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007e60:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007e62:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007e64:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007e66:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007e6a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007e6e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007e70:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007e74:	f042 0220 	orr.w	r2, r2, #32
 8007e78:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007e7a:	2001      	movs	r0, #1
}
 8007e7c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007e80 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8007e80:	b570      	push	{r4, r5, r6, lr}
 8007e82:	4604      	mov	r4, r0
 8007e84:	460d      	mov	r5, r1
 8007e86:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007e88:	6823      	ldr	r3, [r4, #0]
 8007e8a:	695b      	ldr	r3, [r3, #20]
 8007e8c:	061b      	lsls	r3, r3, #24
 8007e8e:	d501      	bpl.n	8007e94 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8007e90:	2000      	movs	r0, #0
}
 8007e92:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007e94:	4620      	mov	r0, r4
 8007e96:	f7ff ff17 	bl	8007cc8 <I2C_IsAcknowledgeFailed>
 8007e9a:	b9a8      	cbnz	r0, 8007ec8 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007e9c:	1c6a      	adds	r2, r5, #1
 8007e9e:	d0f3      	beq.n	8007e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007ea0:	f7fe fd90 	bl	80069c4 <HAL_GetTick>
 8007ea4:	1b80      	subs	r0, r0, r6
 8007ea6:	42a8      	cmp	r0, r5
 8007ea8:	d801      	bhi.n	8007eae <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8007eaa:	2d00      	cmp	r5, #0
 8007eac:	d1ec      	bne.n	8007e88 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007eae:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007eb0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007eb2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007eb4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007eb8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007ebc:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007ebe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007ec2:	f042 0220 	orr.w	r2, r2, #32
 8007ec6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007ec8:	2001      	movs	r0, #1
 8007eca:	e7e2      	b.n	8007e92 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08007ecc <I2C_RequestMemoryWrite>:
{
 8007ecc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007ed0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007ed2:	6802      	ldr	r2, [r0, #0]
{
 8007ed4:	b085      	sub	sp, #20
 8007ed6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8007eda:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007edc:	6813      	ldr	r3, [r2, #0]
 8007ede:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007ee2:	6013      	str	r3, [r2, #0]
{
 8007ee4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007ee6:	463b      	mov	r3, r7
 8007ee8:	f8cd 8000 	str.w	r8, [sp]
 8007eec:	2200      	movs	r2, #0
 8007eee:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8007ef2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007ef4:	f7ff ff92 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 8007ef8:	6823      	ldr	r3, [r4, #0]
 8007efa:	b138      	cbz	r0, 8007f0c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	05db      	lsls	r3, r3, #23
 8007f00:	d502      	bpl.n	8007f08 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007f02:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007f06:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8007f08:	2003      	movs	r0, #3
 8007f0a:	e00a      	b.n	8007f22 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007f0c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8007f10:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007f12:	4919      	ldr	r1, [pc, #100]	; (8007f78 <I2C_RequestMemoryWrite+0xac>)
 8007f14:	4643      	mov	r3, r8
 8007f16:	463a      	mov	r2, r7
 8007f18:	4620      	mov	r0, r4
 8007f1a:	f7ff feef 	bl	8007cfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007f1e:	b118      	cbz	r0, 8007f28 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8007f20:	2001      	movs	r0, #1
}
 8007f22:	b005      	add	sp, #20
 8007f24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f28:	6823      	ldr	r3, [r4, #0]
 8007f2a:	9003      	str	r0, [sp, #12]
 8007f2c:	695a      	ldr	r2, [r3, #20]
 8007f2e:	9203      	str	r2, [sp, #12]
 8007f30:	699b      	ldr	r3, [r3, #24]
 8007f32:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007f34:	4642      	mov	r2, r8
 8007f36:	4639      	mov	r1, r7
 8007f38:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f3a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007f3c:	f7ff ffa0 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8007f40:	b140      	cbz	r0, 8007f54 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007f42:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007f44:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007f46:	bf01      	itttt	eq
 8007f48:	6822      	ldreq	r2, [r4, #0]
 8007f4a:	6813      	ldreq	r3, [r2, #0]
 8007f4c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8007f50:	6013      	streq	r3, [r2, #0]
 8007f52:	e7e5      	b.n	8007f20 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007f54:	f1b9 0f01 	cmp.w	r9, #1
 8007f58:	6823      	ldr	r3, [r4, #0]
 8007f5a:	d102      	bne.n	8007f62 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007f5c:	b2ed      	uxtb	r5, r5
 8007f5e:	611d      	str	r5, [r3, #16]
 8007f60:	e7df      	b.n	8007f22 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007f62:	0a2a      	lsrs	r2, r5, #8
 8007f64:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007f66:	4639      	mov	r1, r7
 8007f68:	4642      	mov	r2, r8
 8007f6a:	4620      	mov	r0, r4
 8007f6c:	f7ff ff88 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8007f70:	2800      	cmp	r0, #0
 8007f72:	d1e6      	bne.n	8007f42 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007f74:	6823      	ldr	r3, [r4, #0]
 8007f76:	e7f1      	b.n	8007f5c <I2C_RequestMemoryWrite+0x90>
 8007f78:	00010002 	.word	0x00010002

08007f7c <I2C_RequestMemoryRead>:
{
 8007f7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007f80:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007f82:	6803      	ldr	r3, [r0, #0]
{
 8007f84:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007f86:	681a      	ldr	r2, [r3, #0]
 8007f88:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007f8c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f8e:	681a      	ldr	r2, [r3, #0]
{
 8007f90:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f94:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007f98:	601a      	str	r2, [r3, #0]
{
 8007f9a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007f9c:	463b      	mov	r3, r7
 8007f9e:	f8cd 8000 	str.w	r8, [sp]
 8007fa2:	2200      	movs	r2, #0
 8007fa4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8007fa8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007faa:	f7ff ff37 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 8007fae:	6823      	ldr	r3, [r4, #0]
 8007fb0:	b148      	cbz	r0, 8007fc6 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fb2:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fb4:	05db      	lsls	r3, r3, #23
 8007fb6:	d502      	bpl.n	8007fbe <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007fb8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007fbc:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8007fbe:	2003      	movs	r0, #3
}
 8007fc0:	b004      	add	sp, #16
 8007fc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007fc6:	fa5f f986 	uxtb.w	r9, r6
 8007fca:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8007fce:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007fd0:	492a      	ldr	r1, [pc, #168]	; (800807c <I2C_RequestMemoryRead+0x100>)
 8007fd2:	4643      	mov	r3, r8
 8007fd4:	463a      	mov	r2, r7
 8007fd6:	4620      	mov	r0, r4
 8007fd8:	f7ff fe90 	bl	8007cfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007fdc:	b108      	cbz	r0, 8007fe2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8007fde:	2001      	movs	r0, #1
 8007fe0:	e7ee      	b.n	8007fc0 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007fe2:	6823      	ldr	r3, [r4, #0]
 8007fe4:	9003      	str	r0, [sp, #12]
 8007fe6:	695a      	ldr	r2, [r3, #20]
 8007fe8:	9203      	str	r2, [sp, #12]
 8007fea:	699b      	ldr	r3, [r3, #24]
 8007fec:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007fee:	4642      	mov	r2, r8
 8007ff0:	4639      	mov	r1, r7
 8007ff2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007ff4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007ff6:	f7ff ff43 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8007ffa:	b140      	cbz	r0, 800800e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007ffc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007ffe:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008000:	bf01      	itttt	eq
 8008002:	6822      	ldreq	r2, [r4, #0]
 8008004:	6813      	ldreq	r3, [r2, #0]
 8008006:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800800a:	6013      	streq	r3, [r2, #0]
 800800c:	e7e7      	b.n	8007fde <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800800e:	f1ba 0f01 	cmp.w	sl, #1
 8008012:	6823      	ldr	r3, [r4, #0]
 8008014:	d11a      	bne.n	800804c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008016:	b2ed      	uxtb	r5, r5
 8008018:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800801a:	4642      	mov	r2, r8
 800801c:	4639      	mov	r1, r7
 800801e:	4620      	mov	r0, r4
 8008020:	f7ff ff2e 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 8008024:	2800      	cmp	r0, #0
 8008026:	d1e9      	bne.n	8007ffc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008028:	6822      	ldr	r2, [r4, #0]
 800802a:	6813      	ldr	r3, [r2, #0]
 800802c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008030:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008032:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8008036:	4602      	mov	r2, r0
 8008038:	f8cd 8000 	str.w	r8, [sp]
 800803c:	463b      	mov	r3, r7
 800803e:	4620      	mov	r0, r4
 8008040:	f7ff feec 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 8008044:	6822      	ldr	r2, [r4, #0]
 8008046:	b160      	cbz	r0, 8008062 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008048:	6813      	ldr	r3, [r2, #0]
 800804a:	e7b3      	b.n	8007fb4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800804c:	0a2a      	lsrs	r2, r5, #8
 800804e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008050:	4639      	mov	r1, r7
 8008052:	4642      	mov	r2, r8
 8008054:	4620      	mov	r0, r4
 8008056:	f7ff ff13 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 800805a:	2800      	cmp	r0, #0
 800805c:	d1ce      	bne.n	8007ffc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800805e:	6823      	ldr	r3, [r4, #0]
 8008060:	e7d9      	b.n	8008016 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8008062:	f049 0301 	orr.w	r3, r9, #1
 8008066:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008068:	4904      	ldr	r1, [pc, #16]	; (800807c <I2C_RequestMemoryRead+0x100>)
 800806a:	4643      	mov	r3, r8
 800806c:	463a      	mov	r2, r7
 800806e:	4620      	mov	r0, r4
 8008070:	f7ff fe44 	bl	8007cfc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8008074:	3800      	subs	r0, #0
 8008076:	bf18      	it	ne
 8008078:	2001      	movne	r0, #1
 800807a:	e7a1      	b.n	8007fc0 <I2C_RequestMemoryRead+0x44>
 800807c:	00010002 	.word	0x00010002

08008080 <HAL_I2C_Init>:
{
 8008080:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8008082:	4604      	mov	r4, r0
 8008084:	b908      	cbnz	r0, 800808a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8008086:	2001      	movs	r0, #1
}
 8008088:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800808a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800808e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008092:	b91b      	cbnz	r3, 800809c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8008094:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8008098:	f7f9 fd74 	bl	8001b84 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800809c:	2324      	movs	r3, #36	; 0x24
 800809e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80080a2:	6823      	ldr	r3, [r4, #0]
 80080a4:	681a      	ldr	r2, [r3, #0]
 80080a6:	f022 0201 	bic.w	r2, r2, #1
 80080aa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80080ac:	681a      	ldr	r2, [r3, #0]
 80080ae:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80080b2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80080b4:	681a      	ldr	r2, [r3, #0]
 80080b6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80080ba:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80080bc:	f001 f818 	bl	80090f0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80080c0:	4a3f      	ldr	r2, [pc, #252]	; (80081c0 <HAL_I2C_Init+0x140>)
 80080c2:	6863      	ldr	r3, [r4, #4]
 80080c4:	4293      	cmp	r3, r2
 80080c6:	bf94      	ite	ls
 80080c8:	4a3e      	ldrls	r2, [pc, #248]	; (80081c4 <HAL_I2C_Init+0x144>)
 80080ca:	4a3f      	ldrhi	r2, [pc, #252]	; (80081c8 <HAL_I2C_Init+0x148>)
 80080cc:	4290      	cmp	r0, r2
 80080ce:	bf8c      	ite	hi
 80080d0:	2200      	movhi	r2, #0
 80080d2:	2201      	movls	r2, #1
 80080d4:	2a00      	cmp	r2, #0
 80080d6:	d1d6      	bne.n	8008086 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80080d8:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80080da:	4e3c      	ldr	r6, [pc, #240]	; (80081cc <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80080dc:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80080de:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80080e2:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80080e6:	4332      	orrs	r2, r6
 80080e8:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80080ea:	4a35      	ldr	r2, [pc, #212]	; (80081c0 <HAL_I2C_Init+0x140>)
 80080ec:	6a0d      	ldr	r5, [r1, #32]
 80080ee:	4293      	cmp	r3, r2
 80080f0:	bf84      	itt	hi
 80080f2:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 80080f6:	4372      	mulhi	r2, r6
 80080f8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80080fc:	bf91      	iteee	ls
 80080fe:	1c72      	addls	r2, r6, #1
 8008100:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8008104:	fbb2 f2f6 	udivhi	r2, r2, r6
 8008108:	3201      	addhi	r2, #1
 800810a:	432a      	orrs	r2, r5
 800810c:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800810e:	69cd      	ldr	r5, [r1, #28]
 8008110:	1e42      	subs	r2, r0, #1
 8008112:	482b      	ldr	r0, [pc, #172]	; (80081c0 <HAL_I2C_Init+0x140>)
 8008114:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8008118:	4283      	cmp	r3, r0
 800811a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800811e:	d832      	bhi.n	8008186 <HAL_I2C_Init+0x106>
 8008120:	005b      	lsls	r3, r3, #1
 8008122:	fbb2 f3f3 	udiv	r3, r2, r3
 8008126:	f640 72fc 	movw	r2, #4092	; 0xffc
 800812a:	3301      	adds	r3, #1
 800812c:	4213      	tst	r3, r2
 800812e:	d042      	beq.n	80081b6 <HAL_I2C_Init+0x136>
 8008130:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008134:	432b      	orrs	r3, r5
 8008136:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008138:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800813c:	680a      	ldr	r2, [r1, #0]
 800813e:	4303      	orrs	r3, r0
 8008140:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8008144:	4313      	orrs	r3, r2
 8008146:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008148:	688a      	ldr	r2, [r1, #8]
 800814a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800814e:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8008152:	4303      	orrs	r3, r0
 8008154:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8008158:	4313      	orrs	r3, r2
 800815a:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800815c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008160:	68ca      	ldr	r2, [r1, #12]
 8008162:	4303      	orrs	r3, r0
 8008164:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8008168:	4313      	orrs	r3, r2
 800816a:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800816c:	680b      	ldr	r3, [r1, #0]
 800816e:	f043 0301 	orr.w	r3, r3, #1
 8008172:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008174:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8008176:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008178:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800817a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800817e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8008180:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8008184:	e780      	b.n	8008088 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8008186:	68a0      	ldr	r0, [r4, #8]
 8008188:	b950      	cbnz	r0, 80081a0 <HAL_I2C_Init+0x120>
 800818a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800818e:	fbb2 f3f3 	udiv	r3, r2, r3
 8008192:	3301      	adds	r3, #1
 8008194:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008198:	b17b      	cbz	r3, 80081ba <HAL_I2C_Init+0x13a>
 800819a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800819e:	e7c9      	b.n	8008134 <HAL_I2C_Init+0xb4>
 80081a0:	2019      	movs	r0, #25
 80081a2:	4343      	muls	r3, r0
 80081a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80081a8:	3301      	adds	r3, #1
 80081aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80081ae:	b123      	cbz	r3, 80081ba <HAL_I2C_Init+0x13a>
 80081b0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80081b4:	e7be      	b.n	8008134 <HAL_I2C_Init+0xb4>
 80081b6:	2304      	movs	r3, #4
 80081b8:	e7bc      	b.n	8008134 <HAL_I2C_Init+0xb4>
 80081ba:	2301      	movs	r3, #1
 80081bc:	e7ba      	b.n	8008134 <HAL_I2C_Init+0xb4>
 80081be:	bf00      	nop
 80081c0:	000186a0 	.word	0x000186a0
 80081c4:	001e847f 	.word	0x001e847f
 80081c8:	003d08ff 	.word	0x003d08ff
 80081cc:	000f4240 	.word	0x000f4240

080081d0 <HAL_I2C_DeInit>:
{
 80081d0:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80081d2:	4604      	mov	r4, r0
 80081d4:	b198      	cbz	r0, 80081fe <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 80081d6:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80081d8:	2324      	movs	r3, #36	; 0x24
 80081da:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80081de:	6813      	ldr	r3, [r2, #0]
 80081e0:	f023 0301 	bic.w	r3, r3, #1
 80081e4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 80081e6:	f7f9 fd11 	bl	8001c0c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 80081ea:	2000      	movs	r0, #0
 80081ec:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 80081ee:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 80081f2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80081f6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 80081f8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 80081fc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80081fe:	2001      	movs	r0, #1
 8008200:	e7fc      	b.n	80081fc <HAL_I2C_DeInit+0x2c>
	...

08008204 <HAL_I2C_Mem_Write>:
{
 8008204:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008208:	4604      	mov	r4, r0
 800820a:	4699      	mov	r9, r3
 800820c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800820e:	460f      	mov	r7, r1
 8008210:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008212:	f7fe fbd7 	bl	80069c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008216:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800821a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800821c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800821e:	d003      	beq.n	8008228 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8008220:	2002      	movs	r0, #2
}
 8008222:	b003      	add	sp, #12
 8008224:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008228:	9000      	str	r0, [sp, #0]
 800822a:	493c      	ldr	r1, [pc, #240]	; (800831c <HAL_I2C_Mem_Write+0x118>)
 800822c:	2319      	movs	r3, #25
 800822e:	2201      	movs	r2, #1
 8008230:	4620      	mov	r0, r4
 8008232:	f7ff fdf3 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 8008236:	2800      	cmp	r0, #0
 8008238:	d1f2      	bne.n	8008220 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800823a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800823e:	2b01      	cmp	r3, #1
 8008240:	d0ee      	beq.n	8008220 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008242:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008244:	2301      	movs	r3, #1
 8008246:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800824a:	6803      	ldr	r3, [r0, #0]
 800824c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800824e:	bf5e      	ittt	pl
 8008250:	6803      	ldrpl	r3, [r0, #0]
 8008252:	f043 0301 	orrpl.w	r3, r3, #1
 8008256:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008258:	6803      	ldr	r3, [r0, #0]
 800825a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800825e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8008260:	2321      	movs	r3, #33	; 0x21
 8008262:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008266:	2340      	movs	r3, #64	; 0x40
 8008268:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800826c:	2300      	movs	r3, #0
 800826e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8008270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008272:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008274:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8008278:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800827a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800827c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800827e:	4b28      	ldr	r3, [pc, #160]	; (8008320 <HAL_I2C_Mem_Write+0x11c>)
 8008280:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8008282:	e9cd 6500 	strd	r6, r5, [sp]
 8008286:	464b      	mov	r3, r9
 8008288:	4642      	mov	r2, r8
 800828a:	4639      	mov	r1, r7
 800828c:	4620      	mov	r0, r4
 800828e:	f7ff fe1d 	bl	8007ecc <I2C_RequestMemoryWrite>
 8008292:	2800      	cmp	r0, #0
 8008294:	d02a      	beq.n	80082ec <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8008296:	2001      	movs	r0, #1
 8008298:	e7c3      	b.n	8008222 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800829a:	f7ff fdf1 	bl	8007e80 <I2C_WaitOnTXEFlagUntilTimeout>
 800829e:	b140      	cbz	r0, 80082b2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80082a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80082a2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80082a4:	bf01      	itttt	eq
 80082a6:	6822      	ldreq	r2, [r4, #0]
 80082a8:	6813      	ldreq	r3, [r2, #0]
 80082aa:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80082ae:	6013      	streq	r3, [r2, #0]
 80082b0:	e7f1      	b.n	8008296 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80082b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80082b4:	6827      	ldr	r7, [r4, #0]
 80082b6:	461a      	mov	r2, r3
 80082b8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80082bc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80082be:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80082c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80082c2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80082c4:	3a01      	subs	r2, #1
 80082c6:	b292      	uxth	r2, r2
 80082c8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082ca:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80082cc:	1e48      	subs	r0, r1, #1
 80082ce:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082d0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80082d2:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082d4:	d50a      	bpl.n	80082ec <HAL_I2C_Mem_Write+0xe8>
 80082d6:	b148      	cbz	r0, 80082ec <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80082d8:	785a      	ldrb	r2, [r3, #1]
 80082da:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80082dc:	3302      	adds	r3, #2
 80082de:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80082e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80082e2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80082e4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80082e6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80082e8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80082ea:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80082ec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80082ee:	462a      	mov	r2, r5
 80082f0:	4631      	mov	r1, r6
 80082f2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80082f4:	2b00      	cmp	r3, #0
 80082f6:	d1d0      	bne.n	800829a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80082f8:	f7ff fd3b 	bl	8007d72 <I2C_WaitOnBTFFlagUntilTimeout>
 80082fc:	2800      	cmp	r0, #0
 80082fe:	d1cf      	bne.n	80082a0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008300:	6822      	ldr	r2, [r4, #0]
 8008302:	6813      	ldr	r3, [r2, #0]
 8008304:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008308:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800830a:	2320      	movs	r3, #32
 800830c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008310:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008314:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8008318:	e783      	b.n	8008222 <HAL_I2C_Mem_Write+0x1e>
 800831a:	bf00      	nop
 800831c:	00100002 	.word	0x00100002
 8008320:	ffff0000 	.word	0xffff0000

08008324 <HAL_I2C_Mem_Read>:
{
 8008324:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008328:	4604      	mov	r4, r0
 800832a:	b087      	sub	sp, #28
 800832c:	4699      	mov	r9, r3
 800832e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8008330:	460d      	mov	r5, r1
 8008332:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008334:	f7fe fb46 	bl	80069c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008338:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800833c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800833e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008340:	d004      	beq.n	800834c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8008342:	2502      	movs	r5, #2
}
 8008344:	4628      	mov	r0, r5
 8008346:	b007      	add	sp, #28
 8008348:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800834c:	9000      	str	r0, [sp, #0]
 800834e:	4976      	ldr	r1, [pc, #472]	; (8008528 <HAL_I2C_Mem_Read+0x204>)
 8008350:	2319      	movs	r3, #25
 8008352:	2201      	movs	r2, #1
 8008354:	4620      	mov	r0, r4
 8008356:	f7ff fd61 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 800835a:	2800      	cmp	r0, #0
 800835c:	d1f1      	bne.n	8008342 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800835e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8008362:	2b01      	cmp	r3, #1
 8008364:	d0ed      	beq.n	8008342 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008366:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008368:	2301      	movs	r3, #1
 800836a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800836e:	6803      	ldr	r3, [r0, #0]
 8008370:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8008372:	bf5e      	ittt	pl
 8008374:	6803      	ldrpl	r3, [r0, #0]
 8008376:	f043 0301 	orrpl.w	r3, r3, #1
 800837a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800837c:	6803      	ldr	r3, [r0, #0]
 800837e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008382:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008384:	2322      	movs	r3, #34	; 0x22
 8008386:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800838a:	2340      	movs	r3, #64	; 0x40
 800838c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008390:	2300      	movs	r3, #0
 8008392:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8008394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008396:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008398:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800839c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800839e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80083a0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80083a2:	4b62      	ldr	r3, [pc, #392]	; (800852c <HAL_I2C_Mem_Read+0x208>)
 80083a4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80083a6:	4629      	mov	r1, r5
 80083a8:	e9cd 7600 	strd	r7, r6, [sp]
 80083ac:	464b      	mov	r3, r9
 80083ae:	4642      	mov	r2, r8
 80083b0:	4620      	mov	r0, r4
 80083b2:	f7ff fde3 	bl	8007f7c <I2C_RequestMemoryRead>
 80083b6:	4605      	mov	r5, r0
 80083b8:	b108      	cbz	r0, 80083be <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80083ba:	2501      	movs	r5, #1
 80083bc:	e7c2      	b.n	8008344 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80083be:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80083c0:	6823      	ldr	r3, [r4, #0]
 80083c2:	b9b2      	cbnz	r2, 80083f2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80083c4:	9002      	str	r0, [sp, #8]
 80083c6:	695a      	ldr	r2, [r3, #20]
 80083c8:	9202      	str	r2, [sp, #8]
 80083ca:	699a      	ldr	r2, [r3, #24]
 80083cc:	9202      	str	r2, [sp, #8]
 80083ce:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80083d0:	681a      	ldr	r2, [r3, #0]
 80083d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80083d6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80083d8:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8008530 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80083dc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80083de:	2b00      	cmp	r3, #0
 80083e0:	d12c      	bne.n	800843c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80083e2:	2220      	movs	r2, #32
 80083e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80083e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80083ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80083f0:	e7a8      	b.n	8008344 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80083f2:	2a01      	cmp	r2, #1
 80083f4:	d10a      	bne.n	800840c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80083f6:	681a      	ldr	r2, [r3, #0]
 80083f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80083fc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80083fe:	9003      	str	r0, [sp, #12]
 8008400:	695a      	ldr	r2, [r3, #20]
 8008402:	9203      	str	r2, [sp, #12]
 8008404:	699a      	ldr	r2, [r3, #24]
 8008406:	9203      	str	r2, [sp, #12]
 8008408:	9a03      	ldr	r2, [sp, #12]
 800840a:	e7e1      	b.n	80083d0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800840c:	2a02      	cmp	r2, #2
 800840e:	d10e      	bne.n	800842e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008410:	681a      	ldr	r2, [r3, #0]
 8008412:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008416:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008418:	681a      	ldr	r2, [r3, #0]
 800841a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800841e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008420:	9004      	str	r0, [sp, #16]
 8008422:	695a      	ldr	r2, [r3, #20]
 8008424:	9204      	str	r2, [sp, #16]
 8008426:	699b      	ldr	r3, [r3, #24]
 8008428:	9304      	str	r3, [sp, #16]
 800842a:	9b04      	ldr	r3, [sp, #16]
 800842c:	e7d4      	b.n	80083d8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800842e:	9005      	str	r0, [sp, #20]
 8008430:	695a      	ldr	r2, [r3, #20]
 8008432:	9205      	str	r2, [sp, #20]
 8008434:	699b      	ldr	r3, [r3, #24]
 8008436:	9305      	str	r3, [sp, #20]
 8008438:	9b05      	ldr	r3, [sp, #20]
 800843a:	e7cd      	b.n	80083d8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800843c:	2b03      	cmp	r3, #3
 800843e:	d856      	bhi.n	80084ee <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8008440:	2b01      	cmp	r3, #1
 8008442:	d115      	bne.n	8008470 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008444:	4632      	mov	r2, r6
 8008446:	4639      	mov	r1, r7
 8008448:	4620      	mov	r0, r4
 800844a:	f7ff fcb8 	bl	8007dbe <I2C_WaitOnRXNEFlagUntilTimeout>
 800844e:	2800      	cmp	r0, #0
 8008450:	d1b3      	bne.n	80083ba <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008452:	6823      	ldr	r3, [r4, #0]
 8008454:	691a      	ldr	r2, [r3, #16]
 8008456:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008458:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800845a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800845c:	3301      	adds	r3, #1
 800845e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8008460:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008462:	3b01      	subs	r3, #1
 8008464:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008466:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008468:	3b01      	subs	r3, #1
 800846a:	b29b      	uxth	r3, r3
 800846c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800846e:	e7b5      	b.n	80083dc <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8008470:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008472:	9600      	str	r6, [sp, #0]
 8008474:	463b      	mov	r3, r7
 8008476:	f04f 0200 	mov.w	r2, #0
 800847a:	4641      	mov	r1, r8
 800847c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800847e:	d119      	bne.n	80084b4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008480:	f7ff fccc 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 8008484:	2800      	cmp	r0, #0
 8008486:	d198      	bne.n	80083ba <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008488:	6823      	ldr	r3, [r4, #0]
 800848a:	681a      	ldr	r2, [r3, #0]
 800848c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008490:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8008492:	691a      	ldr	r2, [r3, #16]
 8008494:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008496:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008498:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800849a:	1c53      	adds	r3, r2, #1
 800849c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800849e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80084a0:	3b01      	subs	r3, #1
 80084a2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80084a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80084a6:	3b01      	subs	r3, #1
 80084a8:	b29b      	uxth	r3, r3
 80084aa:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084ac:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084ae:	691b      	ldr	r3, [r3, #16]
 80084b0:	7053      	strb	r3, [r2, #1]
 80084b2:	e7d2      	b.n	800845a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80084b4:	f7ff fcb2 	bl	8007e1c <I2C_WaitOnFlagUntilTimeout>
 80084b8:	2800      	cmp	r0, #0
 80084ba:	f47f af7e 	bne.w	80083ba <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084be:	6823      	ldr	r3, [r4, #0]
 80084c0:	681a      	ldr	r2, [r3, #0]
 80084c2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80084c6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084c8:	691a      	ldr	r2, [r3, #16]
 80084ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084cc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80084ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80084d0:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80084d2:	3301      	adds	r3, #1
 80084d4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80084d6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80084d8:	3b01      	subs	r3, #1
 80084da:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80084dc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80084de:	3b01      	subs	r3, #1
 80084e0:	b29b      	uxth	r3, r3
 80084e2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80084e4:	4602      	mov	r2, r0
 80084e6:	463b      	mov	r3, r7
 80084e8:	4641      	mov	r1, r8
 80084ea:	4620      	mov	r0, r4
 80084ec:	e7c8      	b.n	8008480 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80084ee:	4632      	mov	r2, r6
 80084f0:	4639      	mov	r1, r7
 80084f2:	4620      	mov	r0, r4
 80084f4:	f7ff fc63 	bl	8007dbe <I2C_WaitOnRXNEFlagUntilTimeout>
 80084f8:	2800      	cmp	r0, #0
 80084fa:	f47f af5e 	bne.w	80083ba <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084fe:	6823      	ldr	r3, [r4, #0]
 8008500:	691a      	ldr	r2, [r3, #16]
 8008502:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008504:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8008506:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008508:	1c53      	adds	r3, r2, #1
 800850a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800850c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800850e:	3b01      	subs	r3, #1
 8008510:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008512:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008514:	3b01      	subs	r3, #1
 8008516:	b29b      	uxth	r3, r3
 8008518:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800851a:	6823      	ldr	r3, [r4, #0]
 800851c:	6959      	ldr	r1, [r3, #20]
 800851e:	0749      	lsls	r1, r1, #29
 8008520:	f57f af5c 	bpl.w	80083dc <HAL_I2C_Mem_Read+0xb8>
 8008524:	e7c3      	b.n	80084ae <HAL_I2C_Mem_Read+0x18a>
 8008526:	bf00      	nop
 8008528:	00100002 	.word	0x00100002
 800852c:	ffff0000 	.word	0xffff0000
 8008530:	00010004 	.word	0x00010004

08008534 <HAL_I2C_GetState>:
  return hi2c->State;
 8008534:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8008538:	4770      	bx	lr

0800853a <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800853a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800853e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008540:	6804      	ldr	r4, [r0, #0]
 8008542:	684f      	ldr	r7, [r1, #4]
 8008544:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008546:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800854a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800854e:	3284      	adds	r2, #132	; 0x84
 8008550:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008552:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008556:	6858      	ldr	r0, [r3, #4]
 8008558:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800855c:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800855e:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008560:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008564:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8008568:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800856a:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800856c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8008570:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008572:	68e0      	ldr	r0, [r4, #12]
 8008574:	68cd      	ldr	r5, [r1, #12]
 8008576:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800857a:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800857c:	6898      	ldr	r0, [r3, #8]
 800857e:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8008582:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8008584:	68e6      	ldr	r6, [r4, #12]
 8008586:	6888      	ldr	r0, [r1, #8]
 8008588:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800858c:	3001      	adds	r0, #1
 800858e:	4430      	add	r0, r6
 8008590:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8008594:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008596:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008598:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800859a:	f020 0007 	bic.w	r0, r0, #7
 800859e:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80085a0:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80085a4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80085a6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80085a8:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80085ac:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80085b0:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80085b4:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80085b8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80085bc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80085c0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80085c4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80085c6:	6958      	ldr	r0, [r3, #20]
 80085c8:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 80085cc:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80085ce:	6948      	ldr	r0, [r1, #20]
 80085d0:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80085d2:	69d8      	ldr	r0, [r3, #28]
 80085d4:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 80085d8:	f020 0007 	bic.w	r0, r0, #7
 80085dc:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80085de:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80085e2:	4305      	orrs	r5, r0
 80085e4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80085e6:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80085e8:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80085ea:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80085ee:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80085f0:	b31e      	cbz	r6, 800863a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80085f2:	2e01      	cmp	r6, #1
 80085f4:	d023      	beq.n	800863e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80085f6:	1eb0      	subs	r0, r6, #2
 80085f8:	2802      	cmp	r0, #2
 80085fa:	d922      	bls.n	8008642 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80085fc:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80085fe:	bf0c      	ite	eq
 8008600:	2002      	moveq	r0, #2
 8008602:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8008604:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8008606:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800860a:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800860c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800860e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008610:	eba7 070c 	sub.w	r7, r7, ip
 8008614:	4345      	muls	r5, r0
 8008616:	4378      	muls	r0, r7
 8008618:	3003      	adds	r0, #3
 800861a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800861e:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8008620:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8008622:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8008626:	f020 0007 	bic.w	r0, r0, #7
 800862a:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800862c:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800862e:	58a3      	ldr	r3, [r4, r2]
 8008630:	f043 0301 	orr.w	r3, r3, #1
 8008634:	50a3      	str	r3, [r4, r2]
}
 8008636:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800863a:	2004      	movs	r0, #4
 800863c:	e7e2      	b.n	8008604 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800863e:	2003      	movs	r0, #3
 8008640:	e7e0      	b.n	8008604 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8008642:	2002      	movs	r0, #2
 8008644:	e7de      	b.n	8008604 <LTDC_SetConfig+0xca>
	...

08008648 <HAL_LTDC_Init>:
{
 8008648:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800864a:	4604      	mov	r4, r0
 800864c:	2800      	cmp	r0, #0
 800864e:	d063      	beq.n	8008718 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8008650:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8008654:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008658:	b91b      	cbnz	r3, 8008662 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800865a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800865e:	f7f9 faf3 	bl	8001c48 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008662:	2302      	movs	r3, #2
 8008664:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8008668:	6823      	ldr	r3, [r4, #0]
 800866a:	699a      	ldr	r2, [r3, #24]
 800866c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8008670:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008672:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8008676:	4302      	orrs	r2, r0
 8008678:	68e0      	ldr	r0, [r4, #12]
 800867a:	6999      	ldr	r1, [r3, #24]
 800867c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800867e:	6920      	ldr	r0, [r4, #16]
 8008680:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008682:	430a      	orrs	r2, r1
 8008684:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008686:	689a      	ldr	r2, [r3, #8]
 8008688:	4924      	ldr	r1, [pc, #144]	; (800871c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800868a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800868c:	400a      	ands	r2, r1
 800868e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8008690:	689a      	ldr	r2, [r3, #8]
 8008692:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008696:	69a0      	ldr	r0, [r4, #24]
 8008698:	4302      	orrs	r2, r0
 800869a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800869c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800869e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80086a0:	400a      	ands	r2, r1
 80086a2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80086a4:	68da      	ldr	r2, [r3, #12]
 80086a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80086aa:	6a20      	ldr	r0, [r4, #32]
 80086ac:	4302      	orrs	r2, r0
 80086ae:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80086b0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80086b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80086b4:	400a      	ands	r2, r1
 80086b6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80086b8:	691a      	ldr	r2, [r3, #16]
 80086ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80086be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80086c0:	4302      	orrs	r2, r0
 80086c2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80086c4:	695a      	ldr	r2, [r3, #20]
 80086c6:	4011      	ands	r1, r2
 80086c8:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80086ca:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80086cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80086ce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80086d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80086d4:	430a      	orrs	r2, r1
 80086d6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80086d8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80086da:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80086de:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80086e2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80086e6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80086e8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80086ea:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80086ee:	430a      	orrs	r2, r1
 80086f0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80086f4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80086f8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80086fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80086fc:	f042 0206 	orr.w	r2, r2, #6
 8008700:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8008702:	699a      	ldr	r2, [r3, #24]
 8008704:	f042 0201 	orr.w	r2, r2, #1
 8008708:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800870a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800870c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800870e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8008712:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8008716:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008718:	2001      	movs	r0, #1
 800871a:	e7fc      	b.n	8008716 <HAL_LTDC_Init+0xce>
 800871c:	f000f800 	.word	0xf000f800

08008720 <HAL_LTDC_ErrorCallback>:
 8008720:	4770      	bx	lr

08008722 <HAL_LTDC_LineEventCallback>:
 8008722:	4770      	bx	lr

08008724 <HAL_LTDC_ReloadEventCallback>:
 8008724:	4770      	bx	lr

08008726 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008726:	6803      	ldr	r3, [r0, #0]
{
 8008728:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800872a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800872c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800872e:	0772      	lsls	r2, r6, #29
{
 8008730:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008732:	d514      	bpl.n	800875e <HAL_LTDC_IRQHandler+0x38>
 8008734:	0769      	lsls	r1, r5, #29
 8008736:	d512      	bpl.n	800875e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8008738:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800873a:	f022 0204 	bic.w	r2, r2, #4
 800873e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8008740:	2204      	movs	r2, #4
 8008742:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8008744:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8008748:	f043 0301 	orr.w	r3, r3, #1
 800874c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8008750:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008752:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008756:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800875a:	f7ff ffe1 	bl	8008720 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800875e:	07b2      	lsls	r2, r6, #30
 8008760:	d516      	bpl.n	8008790 <HAL_LTDC_IRQHandler+0x6a>
 8008762:	07ab      	lsls	r3, r5, #30
 8008764:	d514      	bpl.n	8008790 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8008766:	6823      	ldr	r3, [r4, #0]
 8008768:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800876a:	f022 0202 	bic.w	r2, r2, #2
 800876e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8008770:	2202      	movs	r2, #2
 8008772:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8008774:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008778:	4313      	orrs	r3, r2
 800877a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800877e:	2304      	movs	r3, #4
 8008780:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008784:	2300      	movs	r3, #0
 8008786:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800878a:	4620      	mov	r0, r4
 800878c:	f7ff ffc8 	bl	8008720 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8008790:	07f0      	lsls	r0, r6, #31
 8008792:	d510      	bpl.n	80087b6 <HAL_LTDC_IRQHandler+0x90>
 8008794:	07e9      	lsls	r1, r5, #31
 8008796:	d50e      	bpl.n	80087b6 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008798:	6823      	ldr	r3, [r4, #0]
 800879a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800879c:	f022 0201 	bic.w	r2, r2, #1
 80087a0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80087a2:	2201      	movs	r2, #1
 80087a4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80087a6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80087a8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80087ac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80087b0:	4620      	mov	r0, r4
 80087b2:	f7ff ffb6 	bl	8008722 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80087b6:	0732      	lsls	r2, r6, #28
 80087b8:	d511      	bpl.n	80087de <HAL_LTDC_IRQHandler+0xb8>
 80087ba:	072b      	lsls	r3, r5, #28
 80087bc:	d50f      	bpl.n	80087de <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80087be:	6823      	ldr	r3, [r4, #0]
 80087c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80087c2:	f022 0208 	bic.w	r2, r2, #8
 80087c6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80087c8:	2208      	movs	r2, #8
 80087ca:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80087cc:	2301      	movs	r3, #1
 80087ce:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80087d2:	2300      	movs	r3, #0
 80087d4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80087d8:	4620      	mov	r0, r4
 80087da:	f7ff ffa3 	bl	8008724 <HAL_LTDC_ReloadEventCallback>
}
 80087de:	bd70      	pop	{r4, r5, r6, pc}

080087e0 <HAL_LTDC_ConfigLayer>:
{
 80087e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80087e4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80087e8:	2b01      	cmp	r3, #1
{
 80087ea:	4606      	mov	r6, r0
 80087ec:	460f      	mov	r7, r1
 80087ee:	4694      	mov	ip, r2
 80087f0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80087f4:	d01f      	beq.n	8008836 <HAL_LTDC_ConfigLayer+0x56>
 80087f6:	f04f 0801 	mov.w	r8, #1
 80087fa:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80087fe:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8008802:	2434      	movs	r4, #52	; 0x34
 8008804:	460d      	mov	r5, r1
 8008806:	fb04 6402 	mla	r4, r4, r2, r6
 800880a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800880c:	3438      	adds	r4, #56	; 0x38
 800880e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008810:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008812:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008814:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008816:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008818:	682b      	ldr	r3, [r5, #0]
 800881a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800881c:	4630      	mov	r0, r6
 800881e:	4662      	mov	r2, ip
 8008820:	4639      	mov	r1, r7
 8008822:	f7ff fe8a 	bl	800853a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008826:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8008828:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800882a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800882e:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8008832:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8008836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800883c <HAL_LTDC_SetPitch>:
{
 800883c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800883e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8008842:	2b01      	cmp	r3, #1
 8008844:	f04f 0302 	mov.w	r3, #2
 8008848:	d02c      	beq.n	80088a4 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800884a:	2434      	movs	r4, #52	; 0x34
 800884c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008850:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8008854:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008856:	b33c      	cbz	r4, 80088a8 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8008858:	2c01      	cmp	r4, #1
 800885a:	d027      	beq.n	80088ac <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800885c:	1ea5      	subs	r5, r4, #2
 800885e:	429d      	cmp	r5, r3
 8008860:	d902      	bls.n	8008868 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8008862:	2c07      	cmp	r4, #7
 8008864:	bf18      	it	ne
 8008866:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8008868:	6804      	ldr	r4, [r0, #0]
 800886a:	01d2      	lsls	r2, r2, #7
 800886c:	3284      	adds	r2, #132	; 0x84
 800886e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8008870:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8008872:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8008874:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8008878:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800887c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800887e:	4c0c      	ldr	r4, [pc, #48]	; (80088b0 <HAL_LTDC_SetPitch+0x74>)
 8008880:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8008882:	f045 0501 	orr.w	r5, r5, #1
 8008886:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8008888:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800888a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800888e:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8008890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008892:	f043 0301 	orr.w	r3, r3, #1
 8008896:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8008898:	2301      	movs	r3, #1
 800889a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800889e:	2300      	movs	r3, #0
 80088a0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80088a4:	4618      	mov	r0, r3
 80088a6:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80088a8:	2304      	movs	r3, #4
 80088aa:	e7dd      	b.n	8008868 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80088ac:	2303      	movs	r3, #3
 80088ae:	e7db      	b.n	8008868 <HAL_LTDC_SetPitch+0x2c>
 80088b0:	40016800 	.word	0x40016800

080088b4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80088b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80088b6:	2300      	movs	r3, #0
 80088b8:	9301      	str	r3, [sp, #4]
 80088ba:	4b18      	ldr	r3, [pc, #96]	; (800891c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80088bc:	4d18      	ldr	r5, [pc, #96]	; (8008920 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80088be:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80088c0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80088c4:	641a      	str	r2, [r3, #64]	; 0x40
 80088c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80088c8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80088cc:	9301      	str	r3, [sp, #4]
 80088ce:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80088d0:	4b14      	ldr	r3, [pc, #80]	; (8008924 <HAL_PWREx_EnableOverDrive+0x70>)
 80088d2:	2201      	movs	r2, #1
 80088d4:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80088d6:	f7fe f875 	bl	80069c4 <HAL_GetTick>
 80088da:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80088dc:	686b      	ldr	r3, [r5, #4]
 80088de:	03da      	lsls	r2, r3, #15
 80088e0:	d50b      	bpl.n	80088fa <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80088e2:	4b11      	ldr	r3, [pc, #68]	; (8008928 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80088e4:	4d0e      	ldr	r5, [pc, #56]	; (8008920 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80088e6:	2201      	movs	r2, #1
 80088e8:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80088ea:	f7fe f86b 	bl	80069c4 <HAL_GetTick>
 80088ee:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80088f0:	686b      	ldr	r3, [r5, #4]
 80088f2:	039b      	lsls	r3, r3, #14
 80088f4:	d50a      	bpl.n	800890c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80088f6:	2000      	movs	r0, #0
 80088f8:	e006      	b.n	8008908 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80088fa:	f7fe f863 	bl	80069c4 <HAL_GetTick>
 80088fe:	1b00      	subs	r0, r0, r4
 8008900:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8008904:	d9ea      	bls.n	80088dc <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8008906:	2003      	movs	r0, #3
}
 8008908:	b003      	add	sp, #12
 800890a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800890c:	f7fe f85a 	bl	80069c4 <HAL_GetTick>
 8008910:	1b00      	subs	r0, r0, r4
 8008912:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8008916:	d9eb      	bls.n	80088f0 <HAL_PWREx_EnableOverDrive+0x3c>
 8008918:	e7f5      	b.n	8008906 <HAL_PWREx_EnableOverDrive+0x52>
 800891a:	bf00      	nop
 800891c:	40023800 	.word	0x40023800
 8008920:	40007000 	.word	0x40007000
 8008924:	420e0040 	.word	0x420e0040
 8008928:	420e0044 	.word	0x420e0044

0800892c <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800892c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8008930:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8008932:	b13e      	cbz	r6, 8008944 <QSPI_Config+0x18>
 8008934:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8008938:	bf1f      	itttt	ne
 800893a:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800893c:	6804      	ldrne	r4, [r0, #0]
 800893e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8008942:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8008944:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8008948:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800894c:	f1ba 0f00 	cmp.w	sl, #0
 8008950:	d04e      	beq.n	80089f0 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8008952:	694b      	ldr	r3, [r1, #20]
 8008954:	6805      	ldr	r5, [r0, #0]
 8008956:	f8d1 8000 	ldr.w	r8, [r1]
 800895a:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800895c:	ea46 0a0a 	orr.w	sl, r6, sl
 8008960:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 8008964:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8008968:	ea4a 0a02 	orr.w	sl, sl, r2
 800896c:	f1bc 0f00 	cmp.w	ip, #0
 8008970:	d026      	beq.n	80089c0 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8008972:	688b      	ldr	r3, [r1, #8]
 8008974:	690e      	ldr	r6, [r1, #16]
 8008976:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8008978:	ea4c 0c0a 	orr.w	ip, ip, sl
 800897c:	b1a7      	cbz	r7, 80089a8 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800897e:	ea48 0307 	orr.w	r3, r8, r7
 8008982:	4323      	orrs	r3, r4
 8008984:	ea43 0309 	orr.w	r3, r3, r9
 8008988:	4303      	orrs	r3, r0
 800898a:	68c8      	ldr	r0, [r1, #12]
 800898c:	4333      	orrs	r3, r6
 800898e:	4303      	orrs	r3, r0
 8008990:	ea43 030e 	orr.w	r3, r3, lr
 8008994:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008998:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800899c:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800899e:	d001      	beq.n	80089a4 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80089a0:	684b      	ldr	r3, [r1, #4]
 80089a2:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80089a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80089a8:	ea48 0304 	orr.w	r3, r8, r4
 80089ac:	ea43 0309 	orr.w	r3, r3, r9
 80089b0:	4303      	orrs	r3, r0
 80089b2:	4333      	orrs	r3, r6
 80089b4:	ea43 030e 	orr.w	r3, r3, lr
 80089b8:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80089bc:	616b      	str	r3, [r5, #20]
 80089be:	e7f1      	b.n	80089a4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80089c0:	b167      	cbz	r7, 80089dc <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80089c2:	ea48 0307 	orr.w	r3, r8, r7
 80089c6:	4323      	orrs	r3, r4
 80089c8:	ea43 0309 	orr.w	r3, r3, r9
 80089cc:	4303      	orrs	r3, r0
 80089ce:	68c8      	ldr	r0, [r1, #12]
 80089d0:	4303      	orrs	r3, r0
 80089d2:	ea43 030e 	orr.w	r3, r3, lr
 80089d6:	ea43 030a 	orr.w	r3, r3, sl
 80089da:	e7dd      	b.n	8008998 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80089dc:	ea48 0304 	orr.w	r3, r8, r4
 80089e0:	ea43 0309 	orr.w	r3, r3, r9
 80089e4:	4303      	orrs	r3, r0
 80089e6:	ea43 030e 	orr.w	r3, r3, lr
 80089ea:	ea43 030a 	orr.w	r3, r3, sl
 80089ee:	e7e5      	b.n	80089bc <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80089f0:	f1bc 0f00 	cmp.w	ip, #0
 80089f4:	d028      	beq.n	8008a48 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80089f6:	6804      	ldr	r4, [r0, #0]
 80089f8:	688b      	ldr	r3, [r1, #8]
 80089fa:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80089fc:	ea46 030c 	orr.w	r3, r6, ip
 8008a00:	694e      	ldr	r6, [r1, #20]
 8008a02:	6908      	ldr	r0, [r1, #16]
 8008a04:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8008a08:	ea43 0502 	orr.w	r5, r3, r2
 8008a0c:	04b6      	lsls	r6, r6, #18
 8008a0e:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 8008a12:	b187      	cbz	r7, 8008a36 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a14:	4338      	orrs	r0, r7
 8008a16:	ea40 0008 	orr.w	r0, r0, r8
 8008a1a:	4303      	orrs	r3, r0
 8008a1c:	68c8      	ldr	r0, [r1, #12]
 8008a1e:	ea43 030c 	orr.w	r3, r3, ip
 8008a22:	4303      	orrs	r3, r0
 8008a24:	4333      	orrs	r3, r6
 8008a26:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008a28:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a2c:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008a2e:	d0b9      	beq.n	80089a4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8008a30:	684b      	ldr	r3, [r1, #4]
 8008a32:	61a3      	str	r3, [r4, #24]
 8008a34:	e7b6      	b.n	80089a4 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a36:	ea40 0008 	orr.w	r0, r0, r8
 8008a3a:	4303      	orrs	r3, r0
 8008a3c:	ea43 030c 	orr.w	r3, r3, ip
 8008a40:	4333      	orrs	r3, r6
 8008a42:	432b      	orrs	r3, r5
 8008a44:	6163      	str	r3, [r4, #20]
 8008a46:	e7ad      	b.n	80089a4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8008a48:	b1af      	cbz	r7, 8008a76 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a4a:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8008a4c:	6800      	ldr	r0, [r0, #0]
 8008a4e:	ea46 0307 	orr.w	r3, r6, r7
 8008a52:	4313      	orrs	r3, r2
 8008a54:	4323      	orrs	r3, r4
 8008a56:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8008a58:	4323      	orrs	r3, r4
 8008a5a:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8008a5c:	4323      	orrs	r3, r4
 8008a5e:	68cc      	ldr	r4, [r1, #12]
 8008a60:	4323      	orrs	r3, r4
 8008a62:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008a64:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a68:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8008a6c:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008a6e:	d099      	beq.n	80089a4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8008a70:	684b      	ldr	r3, [r1, #4]
 8008a72:	6183      	str	r3, [r0, #24]
 8008a74:	e796      	b.n	80089a4 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8008a76:	2e00      	cmp	r6, #0
 8008a78:	d094      	beq.n	80089a4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008a7a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8008a7c:	6800      	ldr	r0, [r0, #0]
 8008a7e:	4333      	orrs	r3, r6
 8008a80:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8008a82:	431a      	orrs	r2, r3
 8008a84:	4332      	orrs	r2, r6
 8008a86:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8008a88:	694b      	ldr	r3, [r1, #20]
 8008a8a:	4332      	orrs	r2, r6
 8008a8c:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8008a90:	6142      	str	r2, [r0, #20]
}
 8008a92:	e787      	b.n	80089a4 <QSPI_Config+0x78>

08008a94 <QSPI_WaitFlagStateUntilTimeout>:
{
 8008a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a98:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8008a9c:	4604      	mov	r4, r0
 8008a9e:	460e      	mov	r6, r1
 8008aa0:	4615      	mov	r5, r2
 8008aa2:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8008aa4:	6822      	ldr	r2, [r4, #0]
 8008aa6:	6893      	ldr	r3, [r2, #8]
 8008aa8:	4233      	tst	r3, r6
 8008aaa:	bf14      	ite	ne
 8008aac:	2301      	movne	r3, #1
 8008aae:	2300      	moveq	r3, #0
 8008ab0:	42ab      	cmp	r3, r5
 8008ab2:	d101      	bne.n	8008ab8 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008ab4:	2000      	movs	r0, #0
 8008ab6:	e012      	b.n	8008ade <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8008ab8:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008abc:	d0f3      	beq.n	8008aa6 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008abe:	f7fd ff81 	bl	80069c4 <HAL_GetTick>
 8008ac2:	1bc0      	subs	r0, r0, r7
 8008ac4:	4540      	cmp	r0, r8
 8008ac6:	d802      	bhi.n	8008ace <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8008ac8:	f1b8 0f00 	cmp.w	r8, #0
 8008acc:	d1ea      	bne.n	8008aa4 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8008ace:	2304      	movs	r3, #4
 8008ad0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8008ad4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008ad6:	f043 0301 	orr.w	r3, r3, #1
 8008ada:	6463      	str	r3, [r4, #68]	; 0x44
 8008adc:	2001      	movs	r0, #1
}
 8008ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08008ae4 <HAL_QSPI_Init>:
{
 8008ae4:	b530      	push	{r4, r5, lr}
 8008ae6:	b085      	sub	sp, #20
 8008ae8:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008aea:	f7fd ff6b 	bl	80069c4 <HAL_GetTick>
 8008aee:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8008af0:	2c00      	cmp	r4, #0
 8008af2:	d047      	beq.n	8008b84 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8008af4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008af8:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8008afc:	b94a      	cbnz	r2, 8008b12 <HAL_QSPI_Init+0x2e>
 8008afe:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8008b00:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8008b04:	4620      	mov	r0, r4
 8008b06:	f7f9 f8d3 	bl	8001cb0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8008b0a:	f241 3288 	movw	r2, #5000	; 0x1388
 8008b0e:	9b03      	ldr	r3, [sp, #12]
 8008b10:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8008b12:	6820      	ldr	r0, [r4, #0]
 8008b14:	68a1      	ldr	r1, [r4, #8]
 8008b16:	6802      	ldr	r2, [r0, #0]
 8008b18:	3901      	subs	r1, #1
 8008b1a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8008b1e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8008b22:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8008b24:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008b26:	9200      	str	r2, [sp, #0]
 8008b28:	2120      	movs	r1, #32
 8008b2a:	2200      	movs	r2, #0
 8008b2c:	4620      	mov	r0, r4
 8008b2e:	f7ff ffb1 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8008b32:	bb10      	cbnz	r0, 8008b7a <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8008b34:	69e5      	ldr	r5, [r4, #28]
 8008b36:	68e3      	ldr	r3, [r4, #12]
 8008b38:	6822      	ldr	r2, [r4, #0]
 8008b3a:	432b      	orrs	r3, r5
 8008b3c:	6a25      	ldr	r5, [r4, #32]
 8008b3e:	6811      	ldr	r1, [r2, #0]
 8008b40:	432b      	orrs	r3, r5
 8008b42:	6865      	ldr	r5, [r4, #4]
 8008b44:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8008b48:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8008b4c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8008b50:	430b      	orrs	r3, r1
 8008b52:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8008b54:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8008b58:	430b      	orrs	r3, r1
 8008b5a:	6921      	ldr	r1, [r4, #16]
 8008b5c:	6855      	ldr	r5, [r2, #4]
 8008b5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8008b62:	4909      	ldr	r1, [pc, #36]	; (8008b88 <HAL_QSPI_Init+0xa4>)
 8008b64:	4029      	ands	r1, r5
 8008b66:	430b      	orrs	r3, r1
 8008b68:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8008b6a:	6813      	ldr	r3, [r2, #0]
 8008b6c:	f043 0301 	orr.w	r3, r3, #1
 8008b70:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8008b72:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008b74:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8008b76:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008b7a:	2300      	movs	r3, #0
 8008b7c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008b80:	b005      	add	sp, #20
 8008b82:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8008b84:	2001      	movs	r0, #1
 8008b86:	e7fb      	b.n	8008b80 <HAL_QSPI_Init+0x9c>
 8008b88:	ffe0f8fe 	.word	0xffe0f8fe

08008b8c <HAL_QSPI_DeInit>:
{
 8008b8c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8008b8e:	4604      	mov	r4, r0
 8008b90:	b168      	cbz	r0, 8008bae <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8008b92:	6802      	ldr	r2, [r0, #0]
 8008b94:	6813      	ldr	r3, [r2, #0]
 8008b96:	f023 0301 	bic.w	r3, r3, #1
 8008b9a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8008b9c:	f7f9 f8e2 	bl	8001d64 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008ba0:	2000      	movs	r0, #0
 8008ba2:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8008ba4:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008ba8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8008bac:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008bae:	2001      	movs	r0, #1
 8008bb0:	e7fc      	b.n	8008bac <HAL_QSPI_DeInit+0x20>

08008bb2 <HAL_QSPI_Command>:
{
 8008bb2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008bb6:	4604      	mov	r4, r0
 8008bb8:	b085      	sub	sp, #20
 8008bba:	4617      	mov	r7, r2
 8008bbc:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8008bbe:	f7fd ff01 	bl	80069c4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8008bc2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008bc6:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008bc8:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008bca:	d034      	beq.n	8008c36 <HAL_QSPI_Command+0x84>
 8008bcc:	2201      	movs	r2, #1
 8008bce:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008bd2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008bd6:	2a01      	cmp	r2, #1
 8008bd8:	fa5f f882 	uxtb.w	r8, r2
 8008bdc:	f04f 0602 	mov.w	r6, #2
 8008be0:	d127      	bne.n	8008c32 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008be2:	2200      	movs	r2, #0
 8008be4:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008be6:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8008be8:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008bec:	9700      	str	r7, [sp, #0]
 8008bee:	2120      	movs	r1, #32
 8008bf0:	4620      	mov	r0, r4
 8008bf2:	f7ff ff4f 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008bf6:	4605      	mov	r5, r0
 8008bf8:	b9a0      	cbnz	r0, 8008c24 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008bfa:	4602      	mov	r2, r0
 8008bfc:	4649      	mov	r1, r9
 8008bfe:	4620      	mov	r0, r4
 8008c00:	f7ff fe94 	bl	800892c <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8008c04:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8008c08:	9b03      	ldr	r3, [sp, #12]
 8008c0a:	b94a      	cbnz	r2, 8008c20 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8008c0c:	9700      	str	r7, [sp, #0]
 8008c0e:	4642      	mov	r2, r8
 8008c10:	4631      	mov	r1, r6
 8008c12:	4620      	mov	r0, r4
 8008c14:	f7ff ff3e 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8008c18:	4605      	mov	r5, r0
 8008c1a:	b918      	cbnz	r0, 8008c24 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8008c1c:	6823      	ldr	r3, [r4, #0]
 8008c1e:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8008c20:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008c24:	2300      	movs	r3, #0
 8008c26:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008c2a:	4628      	mov	r0, r5
 8008c2c:	b005      	add	sp, #20
 8008c2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8008c32:	4635      	mov	r5, r6
 8008c34:	e7f6      	b.n	8008c24 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8008c36:	2502      	movs	r5, #2
 8008c38:	e7f7      	b.n	8008c2a <HAL_QSPI_Command+0x78>

08008c3a <HAL_QSPI_AutoPolling>:
{
 8008c3a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008c3e:	4604      	mov	r4, r0
 8008c40:	4615      	mov	r5, r2
 8008c42:	461e      	mov	r6, r3
 8008c44:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8008c46:	f7fd febd 	bl	80069c4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8008c4a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008c4e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008c50:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008c52:	d040      	beq.n	8008cd6 <HAL_QSPI_AutoPolling+0x9c>
 8008c54:	2201      	movs	r2, #1
 8008c56:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008c5a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008c5e:	2a01      	cmp	r2, #1
 8008c60:	b2d7      	uxtb	r7, r2
 8008c62:	d136      	bne.n	8008cd2 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8008c64:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008c66:	2200      	movs	r2, #0
 8008c68:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008c6a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8008c6c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008c70:	9600      	str	r6, [sp, #0]
 8008c72:	2120      	movs	r1, #32
 8008c74:	4620      	mov	r0, r4
 8008c76:	f7ff ff0d 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008c7a:	bb20      	cbnz	r0, 8008cc6 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8008c7c:	6821      	ldr	r1, [r4, #0]
 8008c7e:	682a      	ldr	r2, [r5, #0]
 8008c80:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8008c82:	686a      	ldr	r2, [r5, #4]
 8008c84:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8008c86:	68aa      	ldr	r2, [r5, #8]
 8008c88:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8008c8a:	680a      	ldr	r2, [r1, #0]
 8008c8c:	6928      	ldr	r0, [r5, #16]
 8008c8e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8008c92:	4302      	orrs	r2, r0
 8008c94:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8008c98:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8008c9a:	68ea      	ldr	r2, [r5, #12]
 8008c9c:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8008ca0:	4641      	mov	r1, r8
 8008ca2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8008ca6:	4620      	mov	r0, r4
 8008ca8:	f7ff fe40 	bl	800892c <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8008cac:	9b03      	ldr	r3, [sp, #12]
 8008cae:	9600      	str	r6, [sp, #0]
 8008cb0:	463a      	mov	r2, r7
 8008cb2:	2108      	movs	r1, #8
 8008cb4:	4620      	mov	r0, r4
 8008cb6:	f7ff feed 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008cba:	b920      	cbnz	r0, 8008cc6 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8008cbc:	6823      	ldr	r3, [r4, #0]
 8008cbe:	2208      	movs	r2, #8
 8008cc0:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8008cc2:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008cc6:	2300      	movs	r3, #0
 8008cc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008ccc:	b004      	add	sp, #16
 8008cce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8008cd2:	2002      	movs	r0, #2
 8008cd4:	e7f7      	b.n	8008cc6 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8008cd6:	2002      	movs	r0, #2
 8008cd8:	e7f8      	b.n	8008ccc <HAL_QSPI_AutoPolling+0x92>

08008cda <HAL_QSPI_MemoryMapped>:
{
 8008cda:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008cdc:	4604      	mov	r4, r0
 8008cde:	4616      	mov	r6, r2
 8008ce0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8008ce2:	f7fd fe6f 	bl	80069c4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8008ce6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008cea:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008cec:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008cee:	d032      	beq.n	8008d56 <HAL_QSPI_MemoryMapped+0x7c>
 8008cf0:	2201      	movs	r2, #1
 8008cf2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008cf6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008cfa:	2a01      	cmp	r2, #1
 8008cfc:	d129      	bne.n	8008d52 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008cfe:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8008d00:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008d02:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8008d04:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8008d08:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8008d0a:	9100      	str	r1, [sp, #0]
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	2120      	movs	r1, #32
 8008d10:	f7ff fec0 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008d14:	4605      	mov	r5, r0
 8008d16:	b9b0      	cbnz	r0, 8008d46 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8008d18:	6823      	ldr	r3, [r4, #0]
 8008d1a:	6872      	ldr	r2, [r6, #4]
 8008d1c:	6818      	ldr	r0, [r3, #0]
 8008d1e:	f020 0008 	bic.w	r0, r0, #8
 8008d22:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8008d24:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8008d26:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8008d28:	d107      	bne.n	8008d3a <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8008d2a:	6832      	ldr	r2, [r6, #0]
 8008d2c:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8008d2e:	2210      	movs	r2, #16
 8008d30:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8008d32:	681a      	ldr	r2, [r3, #0]
 8008d34:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8008d38:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8008d3a:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8008d3e:	4639      	mov	r1, r7
 8008d40:	4620      	mov	r0, r4
 8008d42:	f7ff fdf3 	bl	800892c <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8008d46:	2300      	movs	r3, #0
 8008d48:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008d4c:	4628      	mov	r0, r5
 8008d4e:	b003      	add	sp, #12
 8008d50:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8008d52:	2502      	movs	r5, #2
 8008d54:	e7f7      	b.n	8008d46 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8008d56:	2502      	movs	r5, #2
 8008d58:	e7f8      	b.n	8008d4c <HAL_QSPI_MemoryMapped+0x72>

08008d5a <HAL_QSPI_Abort>:
{
 8008d5a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008d5c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008d5e:	f7fd fe31 	bl	80069c4 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8008d62:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8008d66:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8008d68:	f012 0002 	ands.w	r0, r2, #2
 8008d6c:	d036      	beq.n	8008ddc <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8008d6e:	2200      	movs	r2, #0
 8008d70:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8008d74:	6822      	ldr	r2, [r4, #0]
 8008d76:	6811      	ldr	r1, [r2, #0]
 8008d78:	0749      	lsls	r1, r1, #29
 8008d7a:	d50d      	bpl.n	8008d98 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8008d7c:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8008d7e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8008d80:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8008d82:	f021 0104 	bic.w	r1, r1, #4
 8008d86:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8008d88:	f7fe f8f2 	bl	8006f70 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8008d8c:	9b03      	ldr	r3, [sp, #12]
 8008d8e:	b118      	cbz	r0, 8008d98 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8008d90:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008d92:	f042 0204 	orr.w	r2, r2, #4
 8008d96:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8008d98:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8008d9a:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8008d9c:	680a      	ldr	r2, [r1, #0]
 8008d9e:	f042 0202 	orr.w	r2, r2, #2
 8008da2:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8008da4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008da6:	9200      	str	r2, [sp, #0]
 8008da8:	2102      	movs	r1, #2
 8008daa:	2201      	movs	r2, #1
 8008dac:	4620      	mov	r0, r4
 8008dae:	f7ff fe71 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008db2:	9b03      	ldr	r3, [sp, #12]
 8008db4:	b990      	cbnz	r0, 8008ddc <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8008db6:	6822      	ldr	r2, [r4, #0]
 8008db8:	2102      	movs	r1, #2
 8008dba:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8008dbc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008dbe:	9200      	str	r2, [sp, #0]
 8008dc0:	2120      	movs	r1, #32
 8008dc2:	4602      	mov	r2, r0
 8008dc4:	4620      	mov	r0, r4
 8008dc6:	f7ff fe65 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008dca:	b938      	cbnz	r0, 8008ddc <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8008dcc:	6822      	ldr	r2, [r4, #0]
 8008dce:	6953      	ldr	r3, [r2, #20]
 8008dd0:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8008dd4:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8008dd6:	2301      	movs	r3, #1
 8008dd8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8008ddc:	b004      	add	sp, #16
 8008dde:	bd10      	pop	{r4, pc}

08008de0 <HAL_QSPI_Transmit>:
{
 8008de0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008de2:	4604      	mov	r4, r0
 8008de4:	b085      	sub	sp, #20
 8008de6:	4616      	mov	r6, r2
 8008de8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8008dea:	f7fd fdeb 	bl	80069c4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8008dee:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8008df2:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8008df4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008df6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008df8:	d04c      	beq.n	8008e94 <HAL_QSPI_Transmit+0xb4>
 8008dfa:	2201      	movs	r2, #1
 8008dfc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008e00:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008e04:	2a01      	cmp	r2, #1
 8008e06:	b2d0      	uxtb	r0, r2
 8008e08:	d142      	bne.n	8008e90 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008e0a:	2200      	movs	r2, #0
 8008e0c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8008e0e:	2f00      	cmp	r7, #0
 8008e10:	d039      	beq.n	8008e86 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8008e12:	2212      	movs	r2, #18
 8008e14:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8008e18:	692a      	ldr	r2, [r5, #16]
 8008e1a:	3201      	adds	r2, #1
 8008e1c:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008e1e:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8008e20:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008e22:	3201      	adds	r2, #1
 8008e24:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8008e26:	696a      	ldr	r2, [r5, #20]
 8008e28:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8008e2c:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8008e2e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e30:	b9a2      	cbnz	r2, 8008e5c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8008e32:	9600      	str	r6, [sp, #0]
 8008e34:	2201      	movs	r2, #1
 8008e36:	2102      	movs	r1, #2
 8008e38:	4620      	mov	r0, r4
 8008e3a:	f7ff fe2b 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8008e3e:	b928      	cbnz	r0, 8008e4c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8008e40:	6823      	ldr	r3, [r4, #0]
 8008e42:	2202      	movs	r2, #2
 8008e44:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8008e46:	4620      	mov	r0, r4
 8008e48:	f7ff ff87 	bl	8008d5a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8008e4c:	2301      	movs	r3, #1
 8008e4e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008e52:	2300      	movs	r3, #0
 8008e54:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008e58:	b005      	add	sp, #20
 8008e5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8008e5c:	9600      	str	r6, [sp, #0]
 8008e5e:	2201      	movs	r2, #1
 8008e60:	2104      	movs	r1, #4
 8008e62:	4620      	mov	r0, r4
 8008e64:	9303      	str	r3, [sp, #12]
 8008e66:	f7ff fe15 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8008e6a:	2800      	cmp	r0, #0
 8008e6c:	d1ee      	bne.n	8008e4c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8008e6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8008e70:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8008e72:	7812      	ldrb	r2, [r2, #0]
 8008e74:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8008e78:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008e7a:	3201      	adds	r2, #1
 8008e7c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8008e7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008e80:	3a01      	subs	r2, #1
 8008e82:	62e2      	str	r2, [r4, #44]	; 0x2c
 8008e84:	e7d3      	b.n	8008e2e <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8008e86:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008e88:	f043 0308 	orr.w	r3, r3, #8
 8008e8c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8008e8e:	e7e0      	b.n	8008e52 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8008e90:	2002      	movs	r0, #2
 8008e92:	e7de      	b.n	8008e52 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8008e94:	2002      	movs	r0, #2
 8008e96:	e7df      	b.n	8008e58 <HAL_QSPI_Transmit+0x78>

08008e98 <HAL_QSPI_Receive>:
{
 8008e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e9a:	4604      	mov	r4, r0
 8008e9c:	b085      	sub	sp, #20
 8008e9e:	4616      	mov	r6, r2
 8008ea0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8008ea2:	f7fd fd8f 	bl	80069c4 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8008ea6:	6825      	ldr	r5, [r4, #0]
 8008ea8:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8008eac:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008eb0:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008eb2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008eb4:	d050      	beq.n	8008f58 <HAL_QSPI_Receive+0xc0>
 8008eb6:	2201      	movs	r2, #1
 8008eb8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008ebc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008ec0:	2a01      	cmp	r2, #1
 8008ec2:	b2d0      	uxtb	r0, r2
 8008ec4:	d146      	bne.n	8008f54 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008ec6:	2200      	movs	r2, #0
 8008ec8:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8008eca:	2f00      	cmp	r7, #0
 8008ecc:	d03d      	beq.n	8008f4a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8008ece:	2222      	movs	r2, #34	; 0x22
 8008ed0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8008ed4:	692a      	ldr	r2, [r5, #16]
 8008ed6:	3201      	adds	r2, #1
 8008ed8:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008eda:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8008edc:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008ede:	3201      	adds	r2, #1
 8008ee0:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8008ee2:	6969      	ldr	r1, [r5, #20]
 8008ee4:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8008ee8:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8008eec:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8008eee:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8008ef2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008ef4:	b9a2      	cbnz	r2, 8008f20 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8008ef6:	9600      	str	r6, [sp, #0]
 8008ef8:	2201      	movs	r2, #1
 8008efa:	2102      	movs	r1, #2
 8008efc:	4620      	mov	r0, r4
 8008efe:	f7ff fdc9 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8008f02:	b928      	cbnz	r0, 8008f10 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8008f04:	6823      	ldr	r3, [r4, #0]
 8008f06:	2202      	movs	r2, #2
 8008f08:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8008f0a:	4620      	mov	r0, r4
 8008f0c:	f7ff ff25 	bl	8008d5a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8008f10:	2301      	movs	r3, #1
 8008f12:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008f16:	2300      	movs	r3, #0
 8008f18:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008f1c:	b005      	add	sp, #20
 8008f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8008f20:	9600      	str	r6, [sp, #0]
 8008f22:	2201      	movs	r2, #1
 8008f24:	2106      	movs	r1, #6
 8008f26:	4620      	mov	r0, r4
 8008f28:	9303      	str	r3, [sp, #12]
 8008f2a:	f7ff fdb3 	bl	8008a94 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8008f2e:	2800      	cmp	r0, #0
 8008f30:	d1ee      	bne.n	8008f10 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8008f32:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008f34:	f895 1020 	ldrb.w	r1, [r5, #32]
 8008f38:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8008f3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8008f3c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8008f3e:	3201      	adds	r2, #1
 8008f40:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8008f42:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008f44:	3a01      	subs	r2, #1
 8008f46:	63a2      	str	r2, [r4, #56]	; 0x38
 8008f48:	e7d3      	b.n	8008ef2 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8008f4a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008f4c:	f043 0308 	orr.w	r3, r3, #8
 8008f50:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8008f52:	e7e0      	b.n	8008f16 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8008f54:	2002      	movs	r0, #2
 8008f56:	e7de      	b.n	8008f16 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8008f58:	2002      	movs	r0, #2
 8008f5a:	e7df      	b.n	8008f1c <HAL_QSPI_Receive+0x84>

08008f5c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008f5c:	4913      	ldr	r1, [pc, #76]	; (8008fac <HAL_RCC_GetSysClockFreq+0x50>)
{
 8008f5e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008f60:	688b      	ldr	r3, [r1, #8]
 8008f62:	f003 030c 	and.w	r3, r3, #12
 8008f66:	2b04      	cmp	r3, #4
 8008f68:	d01c      	beq.n	8008fa4 <HAL_RCC_GetSysClockFreq+0x48>
 8008f6a:	2b08      	cmp	r3, #8
 8008f6c:	d11c      	bne.n	8008fa8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008f6e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008f70:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f72:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008f74:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f78:	bf14      	ite	ne
 8008f7a:	480d      	ldrne	r0, [pc, #52]	; (8008fb0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f7c:	480d      	ldreq	r0, [pc, #52]	; (8008fb4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f7e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8008f82:	bf18      	it	ne
 8008f84:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008f86:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008f8a:	fba1 0100 	umull	r0, r1, r1, r0
 8008f8e:	f7f7 f987 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8008f92:	4b06      	ldr	r3, [pc, #24]	; (8008fac <HAL_RCC_GetSysClockFreq+0x50>)
 8008f94:	685b      	ldr	r3, [r3, #4]
 8008f96:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008f9a:	3301      	adds	r3, #1
 8008f9c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8008f9e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8008fa2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008fa4:	4802      	ldr	r0, [pc, #8]	; (8008fb0 <HAL_RCC_GetSysClockFreq+0x54>)
 8008fa6:	e7fc      	b.n	8008fa2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008fa8:	4802      	ldr	r0, [pc, #8]	; (8008fb4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008faa:	e7fa      	b.n	8008fa2 <HAL_RCC_GetSysClockFreq+0x46>
 8008fac:	40023800 	.word	0x40023800
 8008fb0:	007a1200 	.word	0x007a1200
 8008fb4:	00f42400 	.word	0x00f42400

08008fb8 <HAL_RCC_ClockConfig>:
{
 8008fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fbc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8008fbe:	4604      	mov	r4, r0
 8008fc0:	b910      	cbnz	r0, 8008fc8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8008fc2:	2001      	movs	r0, #1
}
 8008fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8008fc8:	4b44      	ldr	r3, [pc, #272]	; (80090dc <HAL_RCC_ClockConfig+0x124>)
 8008fca:	681a      	ldr	r2, [r3, #0]
 8008fcc:	f002 020f 	and.w	r2, r2, #15
 8008fd0:	428a      	cmp	r2, r1
 8008fd2:	d328      	bcc.n	8009026 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008fd4:	6822      	ldr	r2, [r4, #0]
 8008fd6:	0797      	lsls	r7, r2, #30
 8008fd8:	d42d      	bmi.n	8009036 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008fda:	07d0      	lsls	r0, r2, #31
 8008fdc:	d441      	bmi.n	8009062 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008fde:	4b3f      	ldr	r3, [pc, #252]	; (80090dc <HAL_RCC_ClockConfig+0x124>)
 8008fe0:	681a      	ldr	r2, [r3, #0]
 8008fe2:	f002 020f 	and.w	r2, r2, #15
 8008fe6:	42aa      	cmp	r2, r5
 8008fe8:	d866      	bhi.n	80090b8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008fea:	6822      	ldr	r2, [r4, #0]
 8008fec:	0751      	lsls	r1, r2, #29
 8008fee:	d46c      	bmi.n	80090ca <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008ff0:	0713      	lsls	r3, r2, #28
 8008ff2:	d507      	bpl.n	8009004 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008ff4:	4a3a      	ldr	r2, [pc, #232]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 8008ff6:	6921      	ldr	r1, [r4, #16]
 8008ff8:	6893      	ldr	r3, [r2, #8]
 8008ffa:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8008ffe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8009002:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8009004:	f7ff ffaa 	bl	8008f5c <HAL_RCC_GetSysClockFreq>
 8009008:	4b35      	ldr	r3, [pc, #212]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 800900a:	4a36      	ldr	r2, [pc, #216]	; (80090e4 <HAL_RCC_ClockConfig+0x12c>)
 800900c:	689b      	ldr	r3, [r3, #8]
 800900e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8009012:	5cd3      	ldrb	r3, [r2, r3]
 8009014:	40d8      	lsrs	r0, r3
 8009016:	4b34      	ldr	r3, [pc, #208]	; (80090e8 <HAL_RCC_ClockConfig+0x130>)
 8009018:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800901a:	4b34      	ldr	r3, [pc, #208]	; (80090ec <HAL_RCC_ClockConfig+0x134>)
 800901c:	6818      	ldr	r0, [r3, #0]
 800901e:	f7f8 ff77 	bl	8001f10 <HAL_InitTick>
  return HAL_OK;
 8009022:	2000      	movs	r0, #0
 8009024:	e7ce      	b.n	8008fc4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009026:	b2ca      	uxtb	r2, r1
 8009028:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800902a:	681b      	ldr	r3, [r3, #0]
 800902c:	f003 030f 	and.w	r3, r3, #15
 8009030:	428b      	cmp	r3, r1
 8009032:	d1c6      	bne.n	8008fc2 <HAL_RCC_ClockConfig+0xa>
 8009034:	e7ce      	b.n	8008fd4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8009036:	4b2a      	ldr	r3, [pc, #168]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 8009038:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800903c:	bf1e      	ittt	ne
 800903e:	6899      	ldrne	r1, [r3, #8]
 8009040:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8009044:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009046:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8009048:	bf42      	ittt	mi
 800904a:	6899      	ldrmi	r1, [r3, #8]
 800904c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8009050:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8009052:	4923      	ldr	r1, [pc, #140]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 8009054:	68a0      	ldr	r0, [r4, #8]
 8009056:	688b      	ldr	r3, [r1, #8]
 8009058:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800905c:	4303      	orrs	r3, r0
 800905e:	608b      	str	r3, [r1, #8]
 8009060:	e7bb      	b.n	8008fda <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8009062:	6862      	ldr	r2, [r4, #4]
 8009064:	4b1e      	ldr	r3, [pc, #120]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 8009066:	2a01      	cmp	r2, #1
 8009068:	d11c      	bne.n	80090a4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009070:	d0a7      	beq.n	8008fc2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8009072:	4e1b      	ldr	r6, [pc, #108]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 8009074:	68b3      	ldr	r3, [r6, #8]
 8009076:	f023 0303 	bic.w	r3, r3, #3
 800907a:	4313      	orrs	r3, r2
 800907c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800907e:	f7fd fca1 	bl	80069c4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009082:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8009086:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009088:	68b3      	ldr	r3, [r6, #8]
 800908a:	6862      	ldr	r2, [r4, #4]
 800908c:	f003 030c 	and.w	r3, r3, #12
 8009090:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8009094:	d0a3      	beq.n	8008fde <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009096:	f7fd fc95 	bl	80069c4 <HAL_GetTick>
 800909a:	1bc0      	subs	r0, r0, r7
 800909c:	4540      	cmp	r0, r8
 800909e:	d9f3      	bls.n	8009088 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80090a0:	2003      	movs	r0, #3
 80090a2:	e78f      	b.n	8008fc4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80090a4:	1e91      	subs	r1, r2, #2
 80090a6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80090a8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80090aa:	d802      	bhi.n	80090b2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80090ac:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80090b0:	e7de      	b.n	8009070 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80090b2:	f013 0f02 	tst.w	r3, #2
 80090b6:	e7db      	b.n	8009070 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80090b8:	b2ea      	uxtb	r2, r5
 80090ba:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80090bc:	681b      	ldr	r3, [r3, #0]
 80090be:	f003 030f 	and.w	r3, r3, #15
 80090c2:	42ab      	cmp	r3, r5
 80090c4:	f47f af7d 	bne.w	8008fc2 <HAL_RCC_ClockConfig+0xa>
 80090c8:	e78f      	b.n	8008fea <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80090ca:	4905      	ldr	r1, [pc, #20]	; (80090e0 <HAL_RCC_ClockConfig+0x128>)
 80090cc:	68e0      	ldr	r0, [r4, #12]
 80090ce:	688b      	ldr	r3, [r1, #8]
 80090d0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80090d4:	4303      	orrs	r3, r0
 80090d6:	608b      	str	r3, [r1, #8]
 80090d8:	e78a      	b.n	8008ff0 <HAL_RCC_ClockConfig+0x38>
 80090da:	bf00      	nop
 80090dc:	40023c00 	.word	0x40023c00
 80090e0:	40023800 	.word	0x40023800
 80090e4:	08023509 	.word	0x08023509
 80090e8:	20000074 	.word	0x20000074
 80090ec:	2000007c 	.word	0x2000007c

080090f0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80090f0:	4b04      	ldr	r3, [pc, #16]	; (8009104 <HAL_RCC_GetPCLK1Freq+0x14>)
 80090f2:	4a05      	ldr	r2, [pc, #20]	; (8009108 <HAL_RCC_GetPCLK1Freq+0x18>)
 80090f4:	689b      	ldr	r3, [r3, #8]
 80090f6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80090fa:	5cd3      	ldrb	r3, [r2, r3]
 80090fc:	4a03      	ldr	r2, [pc, #12]	; (800910c <HAL_RCC_GetPCLK1Freq+0x1c>)
 80090fe:	6810      	ldr	r0, [r2, #0]
}
 8009100:	40d8      	lsrs	r0, r3
 8009102:	4770      	bx	lr
 8009104:	40023800 	.word	0x40023800
 8009108:	08023519 	.word	0x08023519
 800910c:	20000074 	.word	0x20000074

08009110 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8009110:	230f      	movs	r3, #15
 8009112:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8009114:	4b0b      	ldr	r3, [pc, #44]	; (8009144 <HAL_RCC_GetClockConfig+0x34>)
 8009116:	689a      	ldr	r2, [r3, #8]
 8009118:	f002 0203 	and.w	r2, r2, #3
 800911c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800911e:	689a      	ldr	r2, [r3, #8]
 8009120:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8009124:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8009126:	689a      	ldr	r2, [r3, #8]
 8009128:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800912c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800912e:	689b      	ldr	r3, [r3, #8]
 8009130:	08db      	lsrs	r3, r3, #3
 8009132:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8009136:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8009138:	4b03      	ldr	r3, [pc, #12]	; (8009148 <HAL_RCC_GetClockConfig+0x38>)
 800913a:	681b      	ldr	r3, [r3, #0]
 800913c:	f003 030f 	and.w	r3, r3, #15
 8009140:	600b      	str	r3, [r1, #0]
}
 8009142:	4770      	bx	lr
 8009144:	40023800 	.word	0x40023800
 8009148:	40023c00 	.word	0x40023c00

0800914c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800914c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800914e:	6802      	ldr	r2, [r0, #0]
{
 8009150:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8009152:	0610      	lsls	r0, r2, #24
 8009154:	d508      	bpl.n	8009168 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8009156:	49a8      	ldr	r1, [pc, #672]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8009158:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800915a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800915e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8009162:	4303      	orrs	r3, r0
 8009164:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8009168:	05d1      	lsls	r1, r2, #23
 800916a:	d508      	bpl.n	800917e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800916c:	49a2      	ldr	r1, [pc, #648]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800916e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009170:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8009174:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009178:	4303      	orrs	r3, r0
 800917a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800917e:	f012 0f43 	tst.w	r2, #67	; 0x43
 8009182:	d172      	bne.n	800926a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8009184:	6823      	ldr	r3, [r4, #0]
 8009186:	f013 0f0c 	tst.w	r3, #12
 800918a:	f000 80bf 	beq.w	800930c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800918e:	4d9b      	ldr	r5, [pc, #620]	; (80093fc <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8009190:	4e99      	ldr	r6, [pc, #612]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8009192:	2300      	movs	r3, #0
 8009194:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8009196:	f7fd fc15 	bl	80069c4 <HAL_GetTick>
 800919a:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800919c:	6833      	ldr	r3, [r6, #0]
 800919e:	009a      	lsls	r2, r3, #2
 80091a0:	f100 80f9 	bmi.w	8009396 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80091a4:	6822      	ldr	r2, [r4, #0]
 80091a6:	0753      	lsls	r3, r2, #29
 80091a8:	d51a      	bpl.n	80091e0 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80091aa:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80091ae:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 80091b2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80091b6:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80091ba:	430b      	orrs	r3, r1
 80091bc:	6921      	ldr	r1, [r4, #16]
 80091be:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 80091c2:	69a1      	ldr	r1, [r4, #24]
 80091c4:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80091c8:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80091cc:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 80091d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80091d2:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80091d6:	3901      	subs	r1, #1
 80091d8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80091dc:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80091e0:	0717      	lsls	r7, r2, #28
 80091e2:	d519      	bpl.n	8009218 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80091e4:	4984      	ldr	r1, [pc, #528]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80091e6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80091ea:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 80091ee:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80091f2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80091f6:	4303      	orrs	r3, r0
 80091f8:	6920      	ldr	r0, [r4, #16]
 80091fa:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80091fe:	69e0      	ldr	r0, [r4, #28]
 8009200:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8009204:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8009208:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800920c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800920e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009212:	4303      	orrs	r3, r0
 8009214:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8009218:	0616      	lsls	r6, r2, #24
 800921a:	d517      	bpl.n	800924c <HAL_RCCEx_PeriphCLKConfig+0x100>
 800921c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800921e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009222:	d113      	bne.n	800924c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8009224:	4974      	ldr	r1, [pc, #464]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8009226:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800922a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800922e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8009232:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8009236:	4313      	orrs	r3, r2
 8009238:	6922      	ldr	r2, [r4, #16]
 800923a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800923e:	6962      	ldr	r2, [r4, #20]
 8009240:	0852      	lsrs	r2, r2, #1
 8009242:	3a01      	subs	r2, #1
 8009244:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8009248:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800924c:	2301      	movs	r3, #1
 800924e:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8009250:	f7fd fbb8 	bl	80069c4 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8009254:	4e68      	ldr	r6, [pc, #416]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8009256:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8009258:	6833      	ldr	r3, [r6, #0]
 800925a:	0098      	lsls	r0, r3, #2
 800925c:	d458      	bmi.n	8009310 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800925e:	f7fd fbb1 	bl	80069c4 <HAL_GetTick>
 8009262:	1b40      	subs	r0, r0, r5
 8009264:	2802      	cmp	r0, #2
 8009266:	d9f7      	bls.n	8009258 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8009268:	e04d      	b.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800926a:	4d65      	ldr	r5, [pc, #404]	; (8009400 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800926c:	4f62      	ldr	r7, [pc, #392]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800926e:	2300      	movs	r3, #0
 8009270:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8009272:	f7fd fba7 	bl	80069c4 <HAL_GetTick>
 8009276:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8009278:	683b      	ldr	r3, [r7, #0]
 800927a:	011b      	lsls	r3, r3, #4
 800927c:	d43e      	bmi.n	80092fc <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800927e:	6821      	ldr	r1, [r4, #0]
 8009280:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8009282:	bf41      	itttt	mi
 8009284:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8009288:	071b      	lslmi	r3, r3, #28
 800928a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800928e:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8009292:	078a      	lsls	r2, r1, #30
 8009294:	d515      	bpl.n	80092c2 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8009296:	4a58      	ldr	r2, [pc, #352]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8009298:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800929a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800929e:	6866      	ldr	r6, [r4, #4]
 80092a0:	061b      	lsls	r3, r3, #24
 80092a2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80092a6:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80092aa:	4303      	orrs	r3, r0
 80092ac:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80092b0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80092b4:	6a23      	ldr	r3, [r4, #32]
 80092b6:	f020 001f 	bic.w	r0, r0, #31
 80092ba:	3b01      	subs	r3, #1
 80092bc:	4303      	orrs	r3, r0
 80092be:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80092c2:	064b      	lsls	r3, r1, #25
 80092c4:	d50a      	bpl.n	80092dc <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80092c6:	68e3      	ldr	r3, [r4, #12]
 80092c8:	6862      	ldr	r2, [r4, #4]
 80092ca:	061b      	lsls	r3, r3, #24
 80092cc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80092d0:	68a2      	ldr	r2, [r4, #8]
 80092d2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80092d6:	4a48      	ldr	r2, [pc, #288]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80092d8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80092dc:	2301      	movs	r3, #1
 80092de:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80092e0:	f7fd fb70 	bl	80069c4 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80092e4:	4e44      	ldr	r6, [pc, #272]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 80092e6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80092e8:	6833      	ldr	r3, [r6, #0]
 80092ea:	011f      	lsls	r7, r3, #4
 80092ec:	f53f af4a 	bmi.w	8009184 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80092f0:	f7fd fb68 	bl	80069c4 <HAL_GetTick>
 80092f4:	1b40      	subs	r0, r0, r5
 80092f6:	2802      	cmp	r0, #2
 80092f8:	d9f6      	bls.n	80092e8 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 80092fa:	e004      	b.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80092fc:	f7fd fb62 	bl	80069c4 <HAL_GetTick>
 8009300:	1b80      	subs	r0, r0, r6
 8009302:	2802      	cmp	r0, #2
 8009304:	d9b8      	bls.n	8009278 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8009306:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8009308:	b003      	add	sp, #12
 800930a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800930c:	0618      	lsls	r0, r3, #24
 800930e:	d43d      	bmi.n	800938c <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8009310:	6823      	ldr	r3, [r4, #0]
 8009312:	0699      	lsls	r1, r3, #26
 8009314:	d530      	bpl.n	8009378 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 8009316:	2300      	movs	r3, #0
 8009318:	9301      	str	r3, [sp, #4]
 800931a:	4b37      	ldr	r3, [pc, #220]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800931c:	4d39      	ldr	r5, [pc, #228]	; (8009404 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800931e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009320:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8009324:	641a      	str	r2, [r3, #64]	; 0x40
 8009326:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009328:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800932c:	9301      	str	r3, [sp, #4]
 800932e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8009330:	682b      	ldr	r3, [r5, #0]
 8009332:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009336:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8009338:	f7fd fb44 	bl	80069c4 <HAL_GetTick>
 800933c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800933e:	682b      	ldr	r3, [r5, #0]
 8009340:	05d9      	lsls	r1, r3, #23
 8009342:	d52f      	bpl.n	80093a4 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8009344:	4d2c      	ldr	r5, [pc, #176]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8009346:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8009348:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800934c:	d130      	bne.n	80093b0 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800934e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009350:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8009354:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8009358:	4a27      	ldr	r2, [pc, #156]	; (80093f8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800935a:	d148      	bne.n	80093ee <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800935c:	6891      	ldr	r1, [r2, #8]
 800935e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8009362:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8009366:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800936a:	4301      	orrs	r1, r0
 800936c:	6091      	str	r1, [r2, #8]
 800936e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8009370:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009374:	430b      	orrs	r3, r1
 8009376:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8009378:	6820      	ldr	r0, [r4, #0]
 800937a:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800937e:	bf1f      	itttt	ne
 8009380:	4b21      	ldrne	r3, [pc, #132]	; (8009408 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8009382:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8009386:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8009388:	2000      	movne	r0, #0
 800938a:	e7bd      	b.n	8009308 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800938c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800938e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009392:	d1bd      	bne.n	8009310 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8009394:	e6fb      	b.n	800918e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8009396:	f7fd fb15 	bl	80069c4 <HAL_GetTick>
 800939a:	1bc0      	subs	r0, r0, r7
 800939c:	2802      	cmp	r0, #2
 800939e:	f67f aefd 	bls.w	800919c <HAL_RCCEx_PeriphCLKConfig+0x50>
 80093a2:	e7b0      	b.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80093a4:	f7fd fb0e 	bl	80069c4 <HAL_GetTick>
 80093a8:	1b80      	subs	r0, r0, r6
 80093aa:	2802      	cmp	r0, #2
 80093ac:	d9c7      	bls.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 80093ae:	e7aa      	b.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80093b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80093b2:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80093b6:	4293      	cmp	r3, r2
 80093b8:	d0c9      	beq.n	800934e <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80093ba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80093bc:	4a13      	ldr	r2, [pc, #76]	; (800940c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80093be:	2101      	movs	r1, #1
 80093c0:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80093c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80093c6:	2100      	movs	r1, #0
 80093c8:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 80093ca:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80093cc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80093ce:	07da      	lsls	r2, r3, #31
 80093d0:	d5bd      	bpl.n	800934e <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 80093d2:	f7fd faf7 	bl	80069c4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80093d6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80093da:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80093dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80093de:	079b      	lsls	r3, r3, #30
 80093e0:	d4b5      	bmi.n	800934e <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80093e2:	f7fd faef 	bl	80069c4 <HAL_GetTick>
 80093e6:	1b80      	subs	r0, r0, r6
 80093e8:	42b8      	cmp	r0, r7
 80093ea:	d9f7      	bls.n	80093dc <HAL_RCCEx_PeriphCLKConfig+0x290>
 80093ec:	e78b      	b.n	8009306 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80093ee:	6891      	ldr	r1, [r2, #8]
 80093f0:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80093f4:	e7ba      	b.n	800936c <HAL_RCCEx_PeriphCLKConfig+0x220>
 80093f6:	bf00      	nop
 80093f8:	40023800 	.word	0x40023800
 80093fc:	42470070 	.word	0x42470070
 8009400:	42470068 	.word	0x42470068
 8009404:	40007000 	.word	0x40007000
 8009408:	424711e0 	.word	0x424711e0
 800940c:	42470e40 	.word	0x42470e40

08009410 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8009410:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8009414:	4604      	mov	r4, r0
 8009416:	b340      	cbz	r0, 800946a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8009418:	6803      	ldr	r3, [r0, #0]
 800941a:	07dd      	lsls	r5, r3, #31
 800941c:	d410      	bmi.n	8009440 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800941e:	6823      	ldr	r3, [r4, #0]
 8009420:	0798      	lsls	r0, r3, #30
 8009422:	d45e      	bmi.n	80094e2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8009424:	6823      	ldr	r3, [r4, #0]
 8009426:	071a      	lsls	r2, r3, #28
 8009428:	f100 80a0 	bmi.w	800956c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800942c:	6823      	ldr	r3, [r4, #0]
 800942e:	075b      	lsls	r3, r3, #29
 8009430:	f100 80be 	bmi.w	80095b0 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8009434:	69a0      	ldr	r0, [r4, #24]
 8009436:	2800      	cmp	r0, #0
 8009438:	f040 811f 	bne.w	800967a <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800943c:	2000      	movs	r0, #0
 800943e:	e02b      	b.n	8009498 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8009440:	4ba7      	ldr	r3, [pc, #668]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 8009442:	689a      	ldr	r2, [r3, #8]
 8009444:	f002 020c 	and.w	r2, r2, #12
 8009448:	2a04      	cmp	r2, #4
 800944a:	d007      	beq.n	800945c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800944c:	689a      	ldr	r2, [r3, #8]
 800944e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8009452:	2a08      	cmp	r2, #8
 8009454:	d10b      	bne.n	800946e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8009456:	685a      	ldr	r2, [r3, #4]
 8009458:	0251      	lsls	r1, r2, #9
 800945a:	d508      	bpl.n	800946e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800945c:	4ba0      	ldr	r3, [pc, #640]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 800945e:	681b      	ldr	r3, [r3, #0]
 8009460:	039a      	lsls	r2, r3, #14
 8009462:	d5dc      	bpl.n	800941e <HAL_RCC_OscConfig+0xe>
 8009464:	6863      	ldr	r3, [r4, #4]
 8009466:	2b00      	cmp	r3, #0
 8009468:	d1d9      	bne.n	800941e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800946a:	2001      	movs	r0, #1
 800946c:	e014      	b.n	8009498 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800946e:	6862      	ldr	r2, [r4, #4]
 8009470:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8009474:	d113      	bne.n	800949e <HAL_RCC_OscConfig+0x8e>
 8009476:	681a      	ldr	r2, [r3, #0]
 8009478:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800947c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800947e:	f7fd faa1 	bl	80069c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009482:	4e97      	ldr	r6, [pc, #604]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8009484:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009486:	6833      	ldr	r3, [r6, #0]
 8009488:	039b      	lsls	r3, r3, #14
 800948a:	d4c8      	bmi.n	800941e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800948c:	f7fd fa9a 	bl	80069c4 <HAL_GetTick>
 8009490:	1b40      	subs	r0, r0, r5
 8009492:	2864      	cmp	r0, #100	; 0x64
 8009494:	d9f7      	bls.n	8009486 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8009496:	2003      	movs	r0, #3
}
 8009498:	b002      	add	sp, #8
 800949a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800949e:	4d90      	ldr	r5, [pc, #576]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 80094a0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80094a4:	682b      	ldr	r3, [r5, #0]
 80094a6:	d107      	bne.n	80094b8 <HAL_RCC_OscConfig+0xa8>
 80094a8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80094ac:	602b      	str	r3, [r5, #0]
 80094ae:	682b      	ldr	r3, [r5, #0]
 80094b0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80094b4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80094b6:	e7e2      	b.n	800947e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80094b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80094bc:	602b      	str	r3, [r5, #0]
 80094be:	682b      	ldr	r3, [r5, #0]
 80094c0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80094c4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80094c6:	2a00      	cmp	r2, #0
 80094c8:	d1d9      	bne.n	800947e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80094ca:	f7fd fa7b 	bl	80069c4 <HAL_GetTick>
 80094ce:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80094d0:	682b      	ldr	r3, [r5, #0]
 80094d2:	039f      	lsls	r7, r3, #14
 80094d4:	d5a3      	bpl.n	800941e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80094d6:	f7fd fa75 	bl	80069c4 <HAL_GetTick>
 80094da:	1b80      	subs	r0, r0, r6
 80094dc:	2864      	cmp	r0, #100	; 0x64
 80094de:	d9f7      	bls.n	80094d0 <HAL_RCC_OscConfig+0xc0>
 80094e0:	e7d9      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80094e2:	4b7f      	ldr	r3, [pc, #508]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 80094e4:	689a      	ldr	r2, [r3, #8]
 80094e6:	f012 0f0c 	tst.w	r2, #12
 80094ea:	d007      	beq.n	80094fc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80094ec:	689a      	ldr	r2, [r3, #8]
 80094ee:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80094f2:	2a08      	cmp	r2, #8
 80094f4:	d111      	bne.n	800951a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80094f6:	685b      	ldr	r3, [r3, #4]
 80094f8:	025e      	lsls	r6, r3, #9
 80094fa:	d40e      	bmi.n	800951a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80094fc:	4b78      	ldr	r3, [pc, #480]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 80094fe:	681a      	ldr	r2, [r3, #0]
 8009500:	0795      	lsls	r5, r2, #30
 8009502:	d502      	bpl.n	800950a <HAL_RCC_OscConfig+0xfa>
 8009504:	68e2      	ldr	r2, [r4, #12]
 8009506:	2a01      	cmp	r2, #1
 8009508:	d1af      	bne.n	800946a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800950a:	681a      	ldr	r2, [r3, #0]
 800950c:	6921      	ldr	r1, [r4, #16]
 800950e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8009512:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8009516:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8009518:	e784      	b.n	8009424 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800951a:	68e2      	ldr	r2, [r4, #12]
 800951c:	4b71      	ldr	r3, [pc, #452]	; (80096e4 <HAL_RCC_OscConfig+0x2d4>)
 800951e:	b1b2      	cbz	r2, 800954e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8009520:	2201      	movs	r2, #1
 8009522:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009524:	f7fd fa4e 	bl	80069c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8009528:	4d6d      	ldr	r5, [pc, #436]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800952a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800952c:	682b      	ldr	r3, [r5, #0]
 800952e:	0798      	lsls	r0, r3, #30
 8009530:	d507      	bpl.n	8009542 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8009532:	682b      	ldr	r3, [r5, #0]
 8009534:	6922      	ldr	r2, [r4, #16]
 8009536:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800953a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800953e:	602b      	str	r3, [r5, #0]
 8009540:	e770      	b.n	8009424 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009542:	f7fd fa3f 	bl	80069c4 <HAL_GetTick>
 8009546:	1b80      	subs	r0, r0, r6
 8009548:	2802      	cmp	r0, #2
 800954a:	d9ef      	bls.n	800952c <HAL_RCC_OscConfig+0x11c>
 800954c:	e7a3      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800954e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8009550:	f7fd fa38 	bl	80069c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009554:	4e62      	ldr	r6, [pc, #392]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8009556:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8009558:	6833      	ldr	r3, [r6, #0]
 800955a:	0799      	lsls	r1, r3, #30
 800955c:	f57f af62 	bpl.w	8009424 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8009560:	f7fd fa30 	bl	80069c4 <HAL_GetTick>
 8009564:	1b40      	subs	r0, r0, r5
 8009566:	2802      	cmp	r0, #2
 8009568:	d9f6      	bls.n	8009558 <HAL_RCC_OscConfig+0x148>
 800956a:	e794      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800956c:	6962      	ldr	r2, [r4, #20]
 800956e:	4b5e      	ldr	r3, [pc, #376]	; (80096e8 <HAL_RCC_OscConfig+0x2d8>)
 8009570:	b17a      	cbz	r2, 8009592 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8009572:	2201      	movs	r2, #1
 8009574:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8009576:	f7fd fa25 	bl	80069c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800957a:	4e59      	ldr	r6, [pc, #356]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800957c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800957e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8009580:	079f      	lsls	r7, r3, #30
 8009582:	f53f af53 	bmi.w	800942c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8009586:	f7fd fa1d 	bl	80069c4 <HAL_GetTick>
 800958a:	1b40      	subs	r0, r0, r5
 800958c:	2802      	cmp	r0, #2
 800958e:	d9f6      	bls.n	800957e <HAL_RCC_OscConfig+0x16e>
 8009590:	e781      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8009592:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8009594:	f7fd fa16 	bl	80069c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8009598:	4e51      	ldr	r6, [pc, #324]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800959a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800959c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800959e:	0798      	lsls	r0, r3, #30
 80095a0:	f57f af44 	bpl.w	800942c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80095a4:	f7fd fa0e 	bl	80069c4 <HAL_GetTick>
 80095a8:	1b40      	subs	r0, r0, r5
 80095aa:	2802      	cmp	r0, #2
 80095ac:	d9f6      	bls.n	800959c <HAL_RCC_OscConfig+0x18c>
 80095ae:	e772      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80095b0:	4b4b      	ldr	r3, [pc, #300]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 80095b2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80095b4:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80095b8:	d128      	bne.n	800960c <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 80095ba:	9201      	str	r2, [sp, #4]
 80095bc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80095be:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80095c2:	641a      	str	r2, [r3, #64]	; 0x40
 80095c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80095c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80095ca:	9301      	str	r3, [sp, #4]
 80095cc:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80095ce:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80095d0:	4d46      	ldr	r5, [pc, #280]	; (80096ec <HAL_RCC_OscConfig+0x2dc>)
 80095d2:	682b      	ldr	r3, [r5, #0]
 80095d4:	05d9      	lsls	r1, r3, #23
 80095d6:	d51b      	bpl.n	8009610 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80095d8:	68a3      	ldr	r3, [r4, #8]
 80095da:	4d41      	ldr	r5, [pc, #260]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 80095dc:	2b01      	cmp	r3, #1
 80095de:	d127      	bne.n	8009630 <HAL_RCC_OscConfig+0x220>
 80095e0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80095e2:	f043 0301 	orr.w	r3, r3, #1
 80095e6:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80095e8:	f7fd f9ec 	bl	80069c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80095ec:	4e3c      	ldr	r6, [pc, #240]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80095ee:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80095f0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80095f4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80095f6:	079b      	lsls	r3, r3, #30
 80095f8:	d539      	bpl.n	800966e <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 80095fa:	2f00      	cmp	r7, #0
 80095fc:	f43f af1a 	beq.w	8009434 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8009600:	4a37      	ldr	r2, [pc, #220]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 8009602:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009604:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009608:	6413      	str	r3, [r2, #64]	; 0x40
 800960a:	e713      	b.n	8009434 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800960c:	2700      	movs	r7, #0
 800960e:	e7df      	b.n	80095d0 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8009610:	682b      	ldr	r3, [r5, #0]
 8009612:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009616:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8009618:	f7fd f9d4 	bl	80069c4 <HAL_GetTick>
 800961c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800961e:	682b      	ldr	r3, [r5, #0]
 8009620:	05da      	lsls	r2, r3, #23
 8009622:	d4d9      	bmi.n	80095d8 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009624:	f7fd f9ce 	bl	80069c4 <HAL_GetTick>
 8009628:	1b80      	subs	r0, r0, r6
 800962a:	2802      	cmp	r0, #2
 800962c:	d9f7      	bls.n	800961e <HAL_RCC_OscConfig+0x20e>
 800962e:	e732      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009630:	2b05      	cmp	r3, #5
 8009632:	d104      	bne.n	800963e <HAL_RCC_OscConfig+0x22e>
 8009634:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8009636:	f043 0304 	orr.w	r3, r3, #4
 800963a:	672b      	str	r3, [r5, #112]	; 0x70
 800963c:	e7d0      	b.n	80095e0 <HAL_RCC_OscConfig+0x1d0>
 800963e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8009640:	f022 0201 	bic.w	r2, r2, #1
 8009644:	672a      	str	r2, [r5, #112]	; 0x70
 8009646:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8009648:	f022 0204 	bic.w	r2, r2, #4
 800964c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800964e:	2b00      	cmp	r3, #0
 8009650:	d1ca      	bne.n	80095e8 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8009652:	f7fd f9b7 	bl	80069c4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009656:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800965a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800965c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800965e:	0798      	lsls	r0, r3, #30
 8009660:	d5cb      	bpl.n	80095fa <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009662:	f7fd f9af 	bl	80069c4 <HAL_GetTick>
 8009666:	1b80      	subs	r0, r0, r6
 8009668:	4540      	cmp	r0, r8
 800966a:	d9f7      	bls.n	800965c <HAL_RCC_OscConfig+0x24c>
 800966c:	e713      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800966e:	f7fd f9a9 	bl	80069c4 <HAL_GetTick>
 8009672:	1b40      	subs	r0, r0, r5
 8009674:	4540      	cmp	r0, r8
 8009676:	d9bd      	bls.n	80095f4 <HAL_RCC_OscConfig+0x1e4>
 8009678:	e70d      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800967a:	4d19      	ldr	r5, [pc, #100]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
 800967c:	68ab      	ldr	r3, [r5, #8]
 800967e:	f003 030c 	and.w	r3, r3, #12
 8009682:	2b08      	cmp	r3, #8
 8009684:	d049      	beq.n	800971a <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009686:	4e1a      	ldr	r6, [pc, #104]	; (80096f0 <HAL_RCC_OscConfig+0x2e0>)
 8009688:	2300      	movs	r3, #0
 800968a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800968c:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800968e:	d137      	bne.n	8009700 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8009690:	f7fd f998 	bl	80069c4 <HAL_GetTick>
 8009694:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009696:	682b      	ldr	r3, [r5, #0]
 8009698:	0199      	lsls	r1, r3, #6
 800969a:	d42b      	bmi.n	80096f4 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800969c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80096a0:	4313      	orrs	r3, r2
 80096a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80096a4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80096a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80096aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80096ae:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80096b0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80096b4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80096b6:	0852      	lsrs	r2, r2, #1
 80096b8:	3a01      	subs	r2, #1
 80096ba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80096be:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80096c0:	2301      	movs	r3, #1
 80096c2:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 80096c4:	f7fd f97e 	bl	80069c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80096c8:	4d05      	ldr	r5, [pc, #20]	; (80096e0 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80096ca:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80096cc:	682b      	ldr	r3, [r5, #0]
 80096ce:	019a      	lsls	r2, r3, #6
 80096d0:	f53f aeb4 	bmi.w	800943c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80096d4:	f7fd f976 	bl	80069c4 <HAL_GetTick>
 80096d8:	1b00      	subs	r0, r0, r4
 80096da:	2802      	cmp	r0, #2
 80096dc:	d9f6      	bls.n	80096cc <HAL_RCC_OscConfig+0x2bc>
 80096de:	e6da      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
 80096e0:	40023800 	.word	0x40023800
 80096e4:	42470000 	.word	0x42470000
 80096e8:	42470e80 	.word	0x42470e80
 80096ec:	40007000 	.word	0x40007000
 80096f0:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80096f4:	f7fd f966 	bl	80069c4 <HAL_GetTick>
 80096f8:	1bc0      	subs	r0, r0, r7
 80096fa:	2802      	cmp	r0, #2
 80096fc:	d9cb      	bls.n	8009696 <HAL_RCC_OscConfig+0x286>
 80096fe:	e6ca      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8009700:	f7fd f960 	bl	80069c4 <HAL_GetTick>
 8009704:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8009706:	682b      	ldr	r3, [r5, #0]
 8009708:	019b      	lsls	r3, r3, #6
 800970a:	f57f ae97 	bpl.w	800943c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800970e:	f7fd f959 	bl	80069c4 <HAL_GetTick>
 8009712:	1b00      	subs	r0, r0, r4
 8009714:	2802      	cmp	r0, #2
 8009716:	d9f6      	bls.n	8009706 <HAL_RCC_OscConfig+0x2f6>
 8009718:	e6bd      	b.n	8009496 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800971a:	2801      	cmp	r0, #1
 800971c:	f43f aebc 	beq.w	8009498 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8009720:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009722:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009724:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8009728:	4291      	cmp	r1, r2
 800972a:	f47f ae9e 	bne.w	800946a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800972e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8009730:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009734:	428a      	cmp	r2, r1
 8009736:	f47f ae98 	bne.w	800946a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800973a:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800973c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8009740:	401a      	ands	r2, r3
 8009742:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8009746:	f47f ae90 	bne.w	800946a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800974a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800974c:	0852      	lsrs	r2, r2, #1
 800974e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8009752:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8009754:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8009758:	f47f ae87 	bne.w	800946a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800975c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800975e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8009762:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8009766:	f47f ae80 	bne.w	800946a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800976a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800976c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8009770:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8009774:	f43f ae62 	beq.w	800943c <HAL_RCC_OscConfig+0x2c>
 8009778:	e677      	b.n	800946a <HAL_RCC_OscConfig+0x5a>
 800977a:	bf00      	nop

0800977c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800977c:	b538      	push	{r3, r4, r5, lr}
 800977e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8009780:	4604      	mov	r4, r0
 8009782:	b1c8      	cbz	r0, 80097b8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8009784:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8009788:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800978c:	b91b      	cbnz	r3, 8009796 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800978e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8009792:	f7f8 fb05 	bl	8001da0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009796:	2302      	movs	r3, #2
 8009798:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800979c:	1d21      	adds	r1, r4, #4
 800979e:	6820      	ldr	r0, [r4, #0]
 80097a0:	f000 f9b8 	bl	8009b14 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80097a4:	6862      	ldr	r2, [r4, #4]
 80097a6:	6820      	ldr	r0, [r4, #0]
 80097a8:	4629      	mov	r1, r5
 80097aa:	f000 f9e9 	bl	8009b80 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80097ae:	2301      	movs	r3, #1
 80097b0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80097b4:	2000      	movs	r0, #0
}
 80097b6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80097b8:	2001      	movs	r0, #1
 80097ba:	e7fc      	b.n	80097b6 <HAL_SDRAM_Init+0x3a>

080097bc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80097bc:	b510      	push	{r4, lr}
 80097be:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80097c0:	f7f8 fb64 	bl	8001e8c <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80097c4:	e9d4 0100 	ldrd	r0, r1, [r4]
 80097c8:	f000 fa16 	bl	8009bf8 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80097cc:	2000      	movs	r0, #0
 80097ce:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80097d2:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80097d6:	bd10      	pop	{r4, pc}

080097d8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80097d8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80097da:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80097de:	2b02      	cmp	r3, #2
{
 80097e0:	4604      	mov	r4, r0
 80097e2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80097e4:	b2d8      	uxtb	r0, r3
 80097e6:	d00d      	beq.n	8009804 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80097e8:	2302      	movs	r3, #2
 80097ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80097ee:	6820      	ldr	r0, [r4, #0]
 80097f0:	f000 fa11 	bl	8009c16 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80097f4:	682b      	ldr	r3, [r5, #0]
 80097f6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80097f8:	bf0c      	ite	eq
 80097fa:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80097fc:	2301      	movne	r3, #1
 80097fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8009802:	2000      	movs	r0, #0
}
 8009804:	bd38      	pop	{r3, r4, r5, pc}

08009806 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8009806:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009808:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800980c:	2b02      	cmp	r3, #2
{
 800980e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009810:	b2d8      	uxtb	r0, r3
 8009812:	d009      	beq.n	8009828 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009814:	2302      	movs	r3, #2
 8009816:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800981a:	6820      	ldr	r0, [r4, #0]
 800981c:	f000 fa22 	bl	8009c64 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8009820:	2301      	movs	r3, #1
 8009822:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8009826:	2000      	movs	r0, #0
}
 8009828:	bd10      	pop	{r4, pc}

0800982a <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800982a:	4770      	bx	lr

0800982c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800982c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009830:	2b01      	cmp	r3, #1
 8009832:	d130      	bne.n	8009896 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009834:	2302      	movs	r3, #2
 8009836:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800983a:	6803      	ldr	r3, [r0, #0]
 800983c:	68da      	ldr	r2, [r3, #12]
 800983e:	f042 0201 	orr.w	r2, r2, #1
 8009842:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009844:	4a15      	ldr	r2, [pc, #84]	; (800989c <HAL_TIM_Base_Start_IT+0x70>)
 8009846:	4293      	cmp	r3, r2
 8009848:	d01a      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 800984a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800984e:	d017      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009850:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009854:	4293      	cmp	r3, r2
 8009856:	d013      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009858:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800985c:	4293      	cmp	r3, r2
 800985e:	d00f      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009860:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009864:	4293      	cmp	r3, r2
 8009866:	d00b      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009868:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800986c:	4293      	cmp	r3, r2
 800986e:	d007      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009870:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8009874:	4293      	cmp	r3, r2
 8009876:	d003      	beq.n	8009880 <HAL_TIM_Base_Start_IT+0x54>
 8009878:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800987c:	4293      	cmp	r3, r2
 800987e:	d104      	bne.n	800988a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009880:	689a      	ldr	r2, [r3, #8]
 8009882:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009886:	2a06      	cmp	r2, #6
 8009888:	d003      	beq.n	8009892 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800988a:	681a      	ldr	r2, [r3, #0]
 800988c:	f042 0201 	orr.w	r2, r2, #1
 8009890:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8009892:	2000      	movs	r0, #0
}
 8009894:	4770      	bx	lr
    return HAL_ERROR;
 8009896:	2001      	movs	r0, #1
 8009898:	4770      	bx	lr
 800989a:	bf00      	nop
 800989c:	40010000 	.word	0x40010000

080098a0 <HAL_TIM_OC_DelayElapsedCallback>:
 80098a0:	4770      	bx	lr

080098a2 <HAL_TIM_IC_CaptureCallback>:
 80098a2:	4770      	bx	lr

080098a4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80098a4:	4770      	bx	lr

080098a6 <HAL_TIM_TriggerCallback>:
 80098a6:	4770      	bx	lr

080098a8 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80098a8:	6803      	ldr	r3, [r0, #0]
 80098aa:	691a      	ldr	r2, [r3, #16]
 80098ac:	0791      	lsls	r1, r2, #30
{
 80098ae:	b510      	push	{r4, lr}
 80098b0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80098b2:	d50e      	bpl.n	80098d2 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80098b4:	68da      	ldr	r2, [r3, #12]
 80098b6:	0792      	lsls	r2, r2, #30
 80098b8:	d50b      	bpl.n	80098d2 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80098ba:	f06f 0202 	mvn.w	r2, #2
 80098be:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80098c0:	2201      	movs	r2, #1
 80098c2:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80098c4:	699b      	ldr	r3, [r3, #24]
 80098c6:	079b      	lsls	r3, r3, #30
 80098c8:	d077      	beq.n	80099ba <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80098ca:	f7ff ffea 	bl	80098a2 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80098ce:	2300      	movs	r3, #0
 80098d0:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80098d2:	6823      	ldr	r3, [r4, #0]
 80098d4:	691a      	ldr	r2, [r3, #16]
 80098d6:	0750      	lsls	r0, r2, #29
 80098d8:	d510      	bpl.n	80098fc <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80098da:	68da      	ldr	r2, [r3, #12]
 80098dc:	0751      	lsls	r1, r2, #29
 80098de:	d50d      	bpl.n	80098fc <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80098e0:	f06f 0204 	mvn.w	r2, #4
 80098e4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80098e6:	2202      	movs	r2, #2
 80098e8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80098ea:	699b      	ldr	r3, [r3, #24]
 80098ec:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80098f0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80098f2:	d068      	beq.n	80099c6 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80098f4:	f7ff ffd5 	bl	80098a2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80098f8:	2300      	movs	r3, #0
 80098fa:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80098fc:	6823      	ldr	r3, [r4, #0]
 80098fe:	691a      	ldr	r2, [r3, #16]
 8009900:	0712      	lsls	r2, r2, #28
 8009902:	d50f      	bpl.n	8009924 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8009904:	68da      	ldr	r2, [r3, #12]
 8009906:	0710      	lsls	r0, r2, #28
 8009908:	d50c      	bpl.n	8009924 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800990a:	f06f 0208 	mvn.w	r2, #8
 800990e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009910:	2204      	movs	r2, #4
 8009912:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009914:	69db      	ldr	r3, [r3, #28]
 8009916:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009918:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800991a:	d05a      	beq.n	80099d2 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800991c:	f7ff ffc1 	bl	80098a2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009920:	2300      	movs	r3, #0
 8009922:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8009924:	6823      	ldr	r3, [r4, #0]
 8009926:	691a      	ldr	r2, [r3, #16]
 8009928:	06d2      	lsls	r2, r2, #27
 800992a:	d510      	bpl.n	800994e <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800992c:	68da      	ldr	r2, [r3, #12]
 800992e:	06d0      	lsls	r0, r2, #27
 8009930:	d50d      	bpl.n	800994e <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8009932:	f06f 0210 	mvn.w	r2, #16
 8009936:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009938:	2208      	movs	r2, #8
 800993a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800993c:	69db      	ldr	r3, [r3, #28]
 800993e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009942:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009944:	d04b      	beq.n	80099de <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8009946:	f7ff ffac 	bl	80098a2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800994a:	2300      	movs	r3, #0
 800994c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800994e:	6823      	ldr	r3, [r4, #0]
 8009950:	691a      	ldr	r2, [r3, #16]
 8009952:	07d1      	lsls	r1, r2, #31
 8009954:	d508      	bpl.n	8009968 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8009956:	68da      	ldr	r2, [r3, #12]
 8009958:	07d2      	lsls	r2, r2, #31
 800995a:	d505      	bpl.n	8009968 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800995c:	f06f 0201 	mvn.w	r2, #1
 8009960:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8009962:	4620      	mov	r0, r4
 8009964:	f7f8 f818 	bl	8001998 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8009968:	6823      	ldr	r3, [r4, #0]
 800996a:	691a      	ldr	r2, [r3, #16]
 800996c:	0610      	lsls	r0, r2, #24
 800996e:	d508      	bpl.n	8009982 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009970:	68da      	ldr	r2, [r3, #12]
 8009972:	0611      	lsls	r1, r2, #24
 8009974:	d505      	bpl.n	8009982 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009976:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800997a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800997c:	4620      	mov	r0, r4
 800997e:	f000 f8c8 	bl	8009b12 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009982:	6823      	ldr	r3, [r4, #0]
 8009984:	691a      	ldr	r2, [r3, #16]
 8009986:	0652      	lsls	r2, r2, #25
 8009988:	d508      	bpl.n	800999c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800998a:	68da      	ldr	r2, [r3, #12]
 800998c:	0650      	lsls	r0, r2, #25
 800998e:	d505      	bpl.n	800999c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009990:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009994:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009996:	4620      	mov	r0, r4
 8009998:	f7ff ff85 	bl	80098a6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800999c:	6823      	ldr	r3, [r4, #0]
 800999e:	691a      	ldr	r2, [r3, #16]
 80099a0:	0691      	lsls	r1, r2, #26
 80099a2:	d522      	bpl.n	80099ea <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80099a4:	68da      	ldr	r2, [r3, #12]
 80099a6:	0692      	lsls	r2, r2, #26
 80099a8:	d51f      	bpl.n	80099ea <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80099aa:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80099ae:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80099b0:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80099b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80099b6:	f000 b8ab 	b.w	8009b10 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80099ba:	f7ff ff71 	bl	80098a0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099be:	4620      	mov	r0, r4
 80099c0:	f7ff ff70 	bl	80098a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80099c4:	e783      	b.n	80098ce <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099c6:	f7ff ff6b 	bl	80098a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099ca:	4620      	mov	r0, r4
 80099cc:	f7ff ff6a 	bl	80098a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80099d0:	e792      	b.n	80098f8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099d2:	f7ff ff65 	bl	80098a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099d6:	4620      	mov	r0, r4
 80099d8:	f7ff ff64 	bl	80098a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80099dc:	e7a0      	b.n	8009920 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099de:	f7ff ff5f 	bl	80098a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099e2:	4620      	mov	r0, r4
 80099e4:	f7ff ff5e 	bl	80098a4 <HAL_TIM_PWM_PulseFinishedCallback>
 80099e8:	e7af      	b.n	800994a <HAL_TIM_IRQHandler+0xa2>
}
 80099ea:	bd10      	pop	{r4, pc}

080099ec <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80099ec:	4a30      	ldr	r2, [pc, #192]	; (8009ab0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80099ee:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80099f0:	4290      	cmp	r0, r2
 80099f2:	d012      	beq.n	8009a1a <TIM_Base_SetConfig+0x2e>
 80099f4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80099f8:	d00f      	beq.n	8009a1a <TIM_Base_SetConfig+0x2e>
 80099fa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80099fe:	4290      	cmp	r0, r2
 8009a00:	d00b      	beq.n	8009a1a <TIM_Base_SetConfig+0x2e>
 8009a02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a06:	4290      	cmp	r0, r2
 8009a08:	d007      	beq.n	8009a1a <TIM_Base_SetConfig+0x2e>
 8009a0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a0e:	4290      	cmp	r0, r2
 8009a10:	d003      	beq.n	8009a1a <TIM_Base_SetConfig+0x2e>
 8009a12:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009a16:	4290      	cmp	r0, r2
 8009a18:	d119      	bne.n	8009a4e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8009a1a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009a1c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8009a20:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009a22:	4a23      	ldr	r2, [pc, #140]	; (8009ab0 <TIM_Base_SetConfig+0xc4>)
 8009a24:	4290      	cmp	r0, r2
 8009a26:	d029      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a28:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009a2c:	d026      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a2e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009a32:	4290      	cmp	r0, r2
 8009a34:	d022      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a36:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a3a:	4290      	cmp	r0, r2
 8009a3c:	d01e      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a3e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a42:	4290      	cmp	r0, r2
 8009a44:	d01a      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a46:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009a4a:	4290      	cmp	r0, r2
 8009a4c:	d016      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a4e:	4a19      	ldr	r2, [pc, #100]	; (8009ab4 <TIM_Base_SetConfig+0xc8>)
 8009a50:	4290      	cmp	r0, r2
 8009a52:	d013      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a54:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a58:	4290      	cmp	r0, r2
 8009a5a:	d00f      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a5c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a60:	4290      	cmp	r0, r2
 8009a62:	d00b      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a64:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8009a68:	4290      	cmp	r0, r2
 8009a6a:	d007      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a6c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a70:	4290      	cmp	r0, r2
 8009a72:	d003      	beq.n	8009a7c <TIM_Base_SetConfig+0x90>
 8009a74:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a78:	4290      	cmp	r0, r2
 8009a7a:	d103      	bne.n	8009a84 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009a7c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009a7e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009a82:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009a84:	694a      	ldr	r2, [r1, #20]
 8009a86:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009a8a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009a8c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009a8e:	688b      	ldr	r3, [r1, #8]
 8009a90:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009a92:	680b      	ldr	r3, [r1, #0]
 8009a94:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009a96:	4b06      	ldr	r3, [pc, #24]	; (8009ab0 <TIM_Base_SetConfig+0xc4>)
 8009a98:	4298      	cmp	r0, r3
 8009a9a:	d003      	beq.n	8009aa4 <TIM_Base_SetConfig+0xb8>
 8009a9c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009aa0:	4298      	cmp	r0, r3
 8009aa2:	d101      	bne.n	8009aa8 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009aa4:	690b      	ldr	r3, [r1, #16]
 8009aa6:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009aa8:	2301      	movs	r3, #1
 8009aaa:	6143      	str	r3, [r0, #20]
}
 8009aac:	4770      	bx	lr
 8009aae:	bf00      	nop
 8009ab0:	40010000 	.word	0x40010000
 8009ab4:	40014000 	.word	0x40014000

08009ab8 <HAL_TIM_Base_Init>:
{
 8009ab8:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009aba:	4604      	mov	r4, r0
 8009abc:	b330      	cbz	r0, 8009b0c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009abe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009ac2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009ac6:	b91b      	cbnz	r3, 8009ad0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009ac8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009acc:	f7ff fead 	bl	800982a <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009ad0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009ad2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009ad4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009ad8:	1d21      	adds	r1, r4, #4
 8009ada:	f7ff ff87 	bl	80099ec <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009ade:	2301      	movs	r3, #1
 8009ae0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8009ae4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009ae6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8009aea:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8009aee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8009af2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009af6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009afa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009afe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8009b02:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8009b06:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8009b0a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009b0c:	2001      	movs	r0, #1
 8009b0e:	e7fc      	b.n	8009b0a <HAL_TIM_Base_Init+0x52>

08009b10 <HAL_TIMEx_CommutCallback>:
 8009b10:	4770      	bx	lr

08009b12 <HAL_TIMEx_BreakCallback>:
 8009b12:	4770      	bx	lr

08009b14 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8009b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b18:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8009b1a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8009b1e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8009b22:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8009b26:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8009b2a:	6809      	ldr	r1, [r1, #0]
 8009b2c:	2901      	cmp	r1, #1
 8009b2e:	ea43 0304 	orr.w	r3, r3, r4
 8009b32:	4912      	ldr	r1, [pc, #72]	; (8009b7c <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8009b34:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8009b36:	d00f      	beq.n	8009b58 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009b38:	431a      	orrs	r2, r3
 8009b3a:	432a      	orrs	r2, r5
 8009b3c:	ea42 0308 	orr.w	r3, r2, r8
 8009b40:	ea43 030e 	orr.w	r3, r3, lr
 8009b44:	ea43 030c 	orr.w	r3, r3, ip
 8009b48:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8009b4a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009b4c:	4333      	orrs	r3, r6
 8009b4e:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8009b50:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8009b52:	2000      	movs	r0, #0
 8009b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8009b58:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8009b5a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8009b5c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009b5e:	ea45 0208 	orr.w	r2, r5, r8
 8009b62:	ea42 020e 	orr.w	r2, r2, lr
 8009b66:	ea42 020c 	orr.w	r2, r2, ip
 8009b6a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8009b6c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009b70:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8009b72:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009b74:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8009b76:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8009b78:	6042      	str	r2, [r0, #4]
 8009b7a:	e7ea      	b.n	8009b52 <FMC_SDRAM_Init+0x3e>
 8009b7c:	ffff8000 	.word	0xffff8000

08009b80 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8009b80:	68cb      	ldr	r3, [r1, #12]
{
 8009b82:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b84:	680c      	ldr	r4, [r1, #0]
 8009b86:	688e      	ldr	r6, [r1, #8]
 8009b88:	690d      	ldr	r5, [r1, #16]
 8009b8a:	1e5f      	subs	r7, r3, #1
 8009b8c:	694b      	ldr	r3, [r1, #20]
 8009b8e:	f104 3cff 	add.w	ip, r4, #4294967295
 8009b92:	684c      	ldr	r4, [r1, #4]
 8009b94:	6989      	ldr	r1, [r1, #24]
 8009b96:	3b01      	subs	r3, #1
 8009b98:	051b      	lsls	r3, r3, #20
 8009b9a:	3c01      	subs	r4, #1
 8009b9c:	3e01      	subs	r6, #1
 8009b9e:	3d01      	subs	r5, #1
 8009ba0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8009ba2:	2a01      	cmp	r2, #1
 8009ba4:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8009ba8:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8009bac:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8009bb0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8009bb4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8009bb8:	d00c      	beq.n	8009bd4 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009bba:	ea43 030c 	orr.w	r3, r3, ip
 8009bbe:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8009bc0:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009bc2:	4333      	orrs	r3, r6
 8009bc4:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8009bc6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009bca:	430b      	orrs	r3, r1
 8009bcc:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8009bce:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8009bd0:	2000      	movs	r0, #0
 8009bd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8009bd4:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8009bd6:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8009bda:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8009bde:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8009be0:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8009be2:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8009be6:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8009be8:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8009bea:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8009bec:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8009bf0:	430a      	orrs	r2, r1
 8009bf2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8009bf4:	60c2      	str	r2, [r0, #12]
 8009bf6:	e7eb      	b.n	8009bd0 <FMC_SDRAM_Timing_Init+0x50>

08009bf8 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8009bf8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8009bfc:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8009c00:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8009c04:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8009c08:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8009c0a:	2300      	movs	r3, #0
 8009c0c:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8009c0e:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8009c10:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8009c12:	4618      	mov	r0, r3
 8009c14:	4770      	bx	lr

08009c16 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8009c16:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8009c18:	2300      	movs	r3, #0
 8009c1a:	9301      	str	r3, [sp, #4]
{
 8009c1c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8009c1e:	e9d1 3200 	ldrd	r3, r2, [r1]
 8009c22:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8009c24:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8009c26:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8009c2a:	688a      	ldr	r2, [r1, #8]
 8009c2c:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8009c2e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8009c32:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8009c34:	9b01      	ldr	r3, [sp, #4]
 8009c36:	6103      	str	r3, [r0, #16]
{
 8009c38:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8009c3a:	f7fc fec3 	bl	80069c4 <HAL_GetTick>
 8009c3e:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8009c40:	69a3      	ldr	r3, [r4, #24]
 8009c42:	f013 0320 	ands.w	r3, r3, #32
 8009c46:	d101      	bne.n	8009c4c <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8009c48:	4618      	mov	r0, r3
 8009c4a:	e003      	b.n	8009c54 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8009c4c:	1c6b      	adds	r3, r5, #1
 8009c4e:	d0f7      	beq.n	8009c40 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009c50:	b915      	cbnz	r5, 8009c58 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8009c52:	2003      	movs	r0, #3
}
 8009c54:	b002      	add	sp, #8
 8009c56:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009c58:	f7fc feb4 	bl	80069c4 <HAL_GetTick>
 8009c5c:	1b80      	subs	r0, r0, r6
 8009c5e:	42a8      	cmp	r0, r5
 8009c60:	d9ee      	bls.n	8009c40 <FMC_SDRAM_SendCommand+0x2a>
 8009c62:	e7f6      	b.n	8009c52 <FMC_SDRAM_SendCommand+0x3c>

08009c64 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8009c64:	6943      	ldr	r3, [r0, #20]
 8009c66:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009c6a:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8009c6c:	2000      	movs	r0, #0
 8009c6e:	4770      	bx	lr

08009c70 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009c70:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8009c72:	4b05      	ldr	r3, [pc, #20]	; (8009c88 <SysTick_Handler+0x18>)
 8009c74:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009c76:	f001 fe7d 	bl	800b974 <xTaskGetSchedulerState>
 8009c7a:	2801      	cmp	r0, #1
 8009c7c:	d003      	beq.n	8009c86 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8009c7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8009c82:	f000 bbef 	b.w	800a464 <xPortSysTickHandler>
}
 8009c86:	bd08      	pop	{r3, pc}
 8009c88:	e000e010 	.word	0xe000e010

08009c8c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009c8c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009c90:	b92b      	cbnz	r3, 8009c9e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8009c92:	4b06      	ldr	r3, [pc, #24]	; (8009cac <osKernelInitialize+0x20>)
 8009c94:	6818      	ldr	r0, [r3, #0]
 8009c96:	b928      	cbnz	r0, 8009ca4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009c98:	2201      	movs	r2, #1
 8009c9a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009c9c:	4770      	bx	lr
    stat = osErrorISR;
 8009c9e:	f06f 0005 	mvn.w	r0, #5
 8009ca2:	4770      	bx	lr
    } else {
      stat = osError;
 8009ca4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009ca8:	4770      	bx	lr
 8009caa:	bf00      	nop
 8009cac:	20005ff0 	.word	0x20005ff0

08009cb0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009cb0:	b510      	push	{r4, lr}
 8009cb2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009cb6:	b95c      	cbnz	r4, 8009cd0 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009cb8:	4b08      	ldr	r3, [pc, #32]	; (8009cdc <osKernelStart+0x2c>)
 8009cba:	681a      	ldr	r2, [r3, #0]
 8009cbc:	2a01      	cmp	r2, #1
 8009cbe:	d10a      	bne.n	8009cd6 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009cc0:	4a07      	ldr	r2, [pc, #28]	; (8009ce0 <osKernelStart+0x30>)
 8009cc2:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009cc4:	2202      	movs	r2, #2
 8009cc6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009cc8:	f001 fcf0 	bl	800b6ac <vTaskStartScheduler>
      stat = osOK;
 8009ccc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8009cce:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009cd0:	f06f 0005 	mvn.w	r0, #5
 8009cd4:	e7fb      	b.n	8009cce <osKernelStart+0x1e>
      stat = osError;
 8009cd6:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009cda:	e7f8      	b.n	8009cce <osKernelStart+0x1e>
 8009cdc:	20005ff0 	.word	0x20005ff0
 8009ce0:	e000ed00 	.word	0xe000ed00

08009ce4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ce6:	b087      	sub	sp, #28
 8009ce8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009cea:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009cec:	460b      	mov	r3, r1
  hTask = NULL;
 8009cee:	9205      	str	r2, [sp, #20]
 8009cf0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8009cf4:	b9d2      	cbnz	r2, 8009d2c <osThreadNew+0x48>
 8009cf6:	b1c8      	cbz	r0, 8009d2c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8009cf8:	2c00      	cmp	r4, #0
 8009cfa:	d02f      	beq.n	8009d5c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8009cfc:	69a5      	ldr	r5, [r4, #24]
 8009cfe:	2d00      	cmp	r5, #0
 8009d00:	bf08      	it	eq
 8009d02:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009d04:	1e69      	subs	r1, r5, #1
 8009d06:	2937      	cmp	r1, #55	; 0x37
 8009d08:	46ac      	mov	ip, r5
 8009d0a:	d82b      	bhi.n	8009d64 <osThreadNew+0x80>
 8009d0c:	6861      	ldr	r1, [r4, #4]
 8009d0e:	07c9      	lsls	r1, r1, #31
 8009d10:	d428      	bmi.n	8009d64 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8009d12:	6966      	ldr	r6, [r4, #20]
 8009d14:	b16e      	cbz	r6, 8009d32 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009d16:	08b2      	lsrs	r2, r6, #2
 8009d18:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8009d1c:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009d1e:	b157      	cbz	r7, 8009d36 <osThreadNew+0x52>
 8009d20:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8009d24:	d902      	bls.n	8009d2c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009d26:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009d28:	b104      	cbz	r4, 8009d2c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009d2a:	b9ee      	cbnz	r6, 8009d68 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009d2c:	9805      	ldr	r0, [sp, #20]
}
 8009d2e:	b007      	add	sp, #28
 8009d30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8009d32:	2280      	movs	r2, #128	; 0x80
 8009d34:	e7f0      	b.n	8009d18 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009d36:	f1be 0f00 	cmp.w	lr, #0
 8009d3a:	d1f7      	bne.n	8009d2c <osThreadNew+0x48>
      if (mem == 0) {
 8009d3c:	6924      	ldr	r4, [r4, #16]
 8009d3e:	2c00      	cmp	r4, #0
 8009d40:	d1f4      	bne.n	8009d2c <osThreadNew+0x48>
 8009d42:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009d44:	a905      	add	r1, sp, #20
 8009d46:	e9cd c100 	strd	ip, r1, [sp]
 8009d4a:	b292      	uxth	r2, r2
 8009d4c:	4621      	mov	r1, r4
 8009d4e:	f001 fb27 	bl	800b3a0 <xTaskCreate>
 8009d52:	2801      	cmp	r0, #1
            hTask = NULL;
 8009d54:	bf1c      	itt	ne
 8009d56:	2300      	movne	r3, #0
 8009d58:	9305      	strne	r3, [sp, #20]
 8009d5a:	e7e7      	b.n	8009d2c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8009d5c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8009d60:	2280      	movs	r2, #128	; 0x80
 8009d62:	e7ef      	b.n	8009d44 <osThreadNew+0x60>
        return (NULL);
 8009d64:	4610      	mov	r0, r2
 8009d66:	e7e2      	b.n	8009d2e <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009d68:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009d6c:	9500      	str	r5, [sp, #0]
 8009d6e:	f001 fadf 	bl	800b330 <xTaskCreateStatic>
 8009d72:	9005      	str	r0, [sp, #20]
 8009d74:	e7da      	b.n	8009d2c <osThreadNew+0x48>
	...

08009d78 <osThreadYield>:
 8009d78:	f3ef 8005 	mrs	r0, IPSR
}

osStatus_t osThreadYield (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009d7c:	b940      	cbnz	r0, 8009d90 <osThreadYield+0x18>
    stat = osErrorISR;
  } else {
    stat = osOK;
    taskYIELD();
 8009d7e:	4b06      	ldr	r3, [pc, #24]	; (8009d98 <osThreadYield+0x20>)
 8009d80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009d84:	601a      	str	r2, [r3, #0]
 8009d86:	f3bf 8f4f 	dsb	sy
 8009d8a:	f3bf 8f6f 	isb	sy
 8009d8e:	4770      	bx	lr
    stat = osErrorISR;
 8009d90:	f06f 0005 	mvn.w	r0, #5
  }

  return (stat);
}
 8009d94:	4770      	bx	lr
 8009d96:	bf00      	nop
 8009d98:	e000ed04 	.word	0xe000ed04

08009d9c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8009d9c:	b510      	push	{r4, lr}
 8009d9e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009da2:	b924      	cbnz	r4, 8009dae <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8009da4:	b110      	cbz	r0, 8009dac <osDelay+0x10>
      vTaskDelay(ticks);
 8009da6:	f001 fc41 	bl	800b62c <vTaskDelay>
    stat = osOK;
 8009daa:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8009dac:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009dae:	f06f 0005 	mvn.w	r0, #5
 8009db2:	e7fb      	b.n	8009dac <osDelay+0x10>

08009db4 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8009db4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009db6:	4604      	mov	r4, r0
 8009db8:	460e      	mov	r6, r1
 8009dba:	4615      	mov	r5, r2
 8009dbc:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009dc0:	b11a      	cbz	r2, 8009dca <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8009dc2:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8009dc4:	4620      	mov	r0, r4
 8009dc6:	b003      	add	sp, #12
 8009dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009dca:	2800      	cmp	r0, #0
 8009dcc:	d0f9      	beq.n	8009dc2 <osSemaphoreNew+0xe>
 8009dce:	4288      	cmp	r0, r1
 8009dd0:	d3f7      	bcc.n	8009dc2 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8009dd2:	b1e5      	cbz	r5, 8009e0e <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8009dd4:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8009dd8:	b1bb      	cbz	r3, 8009e0a <osSemaphoreNew+0x56>
 8009dda:	2f4f      	cmp	r7, #79	; 0x4f
 8009ddc:	d9f1      	bls.n	8009dc2 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009dde:	2801      	cmp	r0, #1
 8009de0:	d12a      	bne.n	8009e38 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8009de2:	2103      	movs	r1, #3
 8009de4:	9100      	str	r1, [sp, #0]
 8009de6:	4611      	mov	r1, r2
 8009de8:	f000 fcec 	bl	800a7c4 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009dec:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009dee:	2800      	cmp	r0, #0
 8009df0:	d0e7      	beq.n	8009dc2 <osSemaphoreNew+0xe>
 8009df2:	b1de      	cbz	r6, 8009e2c <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009df4:	2300      	movs	r3, #0
 8009df6:	461a      	mov	r2, r3
 8009df8:	4619      	mov	r1, r3
 8009dfa:	f000 fd99 	bl	800a930 <xQueueGenericSend>
 8009dfe:	2801      	cmp	r0, #1
 8009e00:	d014      	beq.n	8009e2c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8009e02:	4620      	mov	r0, r4
 8009e04:	f001 f8da 	bl	800afbc <vQueueDelete>
 8009e08:	e7db      	b.n	8009dc2 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8009e0a:	2f00      	cmp	r7, #0
 8009e0c:	d1d9      	bne.n	8009dc2 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009e0e:	2c01      	cmp	r4, #1
 8009e10:	d105      	bne.n	8009e1e <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8009e12:	2203      	movs	r2, #3
 8009e14:	2100      	movs	r1, #0
 8009e16:	4620      	mov	r0, r4
 8009e18:	f000 fd22 	bl	800a860 <xQueueGenericCreate>
 8009e1c:	e7e6      	b.n	8009dec <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8009e1e:	4620      	mov	r0, r4
 8009e20:	4631      	mov	r1, r6
 8009e22:	f000 fd66 	bl	800a8f2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8009e26:	4604      	mov	r4, r0
 8009e28:	2800      	cmp	r0, #0
 8009e2a:	d0ca      	beq.n	8009dc2 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8009e2c:	b955      	cbnz	r5, 8009e44 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8009e2e:	4629      	mov	r1, r5
 8009e30:	4620      	mov	r0, r4
 8009e32:	f001 f899 	bl	800af68 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8009e36:	e7c5      	b.n	8009dc4 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8009e38:	461a      	mov	r2, r3
 8009e3a:	f000 fd38 	bl	800a8ae <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8009e3e:	4604      	mov	r4, r0
 8009e40:	2800      	cmp	r0, #0
 8009e42:	d0be      	beq.n	8009dc2 <osSemaphoreNew+0xe>
          name = attr->name;
 8009e44:	682d      	ldr	r5, [r5, #0]
 8009e46:	e7f2      	b.n	8009e2e <osSemaphoreNew+0x7a>

08009e48 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8009e48:	b513      	push	{r0, r1, r4, lr}
 8009e4a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009e4c:	b1f8      	cbz	r0, 8009e8e <osSemaphoreAcquire+0x46>
 8009e4e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009e52:	b1a3      	cbz	r3, 8009e7e <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 8009e54:	b9d9      	cbnz	r1, 8009e8e <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009e56:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009e58:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009e5a:	f001 f835 	bl	800aec8 <xQueueReceiveFromISR>
 8009e5e:	2801      	cmp	r0, #1
 8009e60:	d112      	bne.n	8009e88 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009e62:	9b01      	ldr	r3, [sp, #4]
 8009e64:	b913      	cbnz	r3, 8009e6c <osSemaphoreAcquire+0x24>
  stat = osOK;
 8009e66:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009e68:	b002      	add	sp, #8
 8009e6a:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8009e6c:	4b0b      	ldr	r3, [pc, #44]	; (8009e9c <osSemaphoreAcquire+0x54>)
 8009e6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e72:	601a      	str	r2, [r3, #0]
 8009e74:	f3bf 8f4f 	dsb	sy
 8009e78:	f3bf 8f6f 	isb	sy
 8009e7c:	e7f3      	b.n	8009e66 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8009e7e:	f000 ff5f 	bl	800ad40 <xQueueSemaphoreTake>
 8009e82:	2801      	cmp	r0, #1
 8009e84:	d0ef      	beq.n	8009e66 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8009e86:	b92c      	cbnz	r4, 8009e94 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8009e88:	f06f 0002 	mvn.w	r0, #2
 8009e8c:	e7ec      	b.n	8009e68 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8009e8e:	f06f 0003 	mvn.w	r0, #3
 8009e92:	e7e9      	b.n	8009e68 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8009e94:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009e98:	e7e6      	b.n	8009e68 <osSemaphoreAcquire+0x20>
 8009e9a:	bf00      	nop
 8009e9c:	e000ed04 	.word	0xe000ed04

08009ea0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009ea0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009ea2:	b300      	cbz	r0, 8009ee6 <osSemaphoreRelease+0x46>
 8009ea4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009ea8:	b1a3      	cbz	r3, 8009ed4 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 8009eaa:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009eac:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009eae:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009eb0:	f000 fe52 	bl	800ab58 <xQueueGiveFromISR>
 8009eb4:	2801      	cmp	r0, #1
 8009eb6:	d113      	bne.n	8009ee0 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009eb8:	9b01      	ldr	r3, [sp, #4]
 8009eba:	b913      	cbnz	r3, 8009ec2 <osSemaphoreRelease+0x22>
  stat = osOK;
 8009ebc:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8009ebe:	b002      	add	sp, #8
 8009ec0:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8009ec2:	4b0a      	ldr	r3, [pc, #40]	; (8009eec <osSemaphoreRelease+0x4c>)
 8009ec4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ec8:	601a      	str	r2, [r3, #0]
 8009eca:	f3bf 8f4f 	dsb	sy
 8009ece:	f3bf 8f6f 	isb	sy
 8009ed2:	e7f3      	b.n	8009ebc <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009ed4:	461a      	mov	r2, r3
 8009ed6:	4619      	mov	r1, r3
 8009ed8:	f000 fd2a 	bl	800a930 <xQueueGenericSend>
 8009edc:	2801      	cmp	r0, #1
 8009ede:	d0ed      	beq.n	8009ebc <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8009ee0:	f06f 0002 	mvn.w	r0, #2
 8009ee4:	e7eb      	b.n	8009ebe <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8009ee6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009eea:	e7e8      	b.n	8009ebe <osSemaphoreRelease+0x1e>
 8009eec:	e000ed04 	.word	0xe000ed04

08009ef0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009ef0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ef2:	4606      	mov	r6, r0
 8009ef4:	460d      	mov	r5, r1
 8009ef6:	4614      	mov	r4, r2
 8009ef8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009efc:	b11f      	cbz	r7, 8009f06 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009efe:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009f00:	4628      	mov	r0, r5
 8009f02:	b003      	add	sp, #12
 8009f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009f06:	2800      	cmp	r0, #0
 8009f08:	d0f9      	beq.n	8009efe <osMessageQueueNew+0xe>
 8009f0a:	2900      	cmp	r1, #0
 8009f0c:	d0f7      	beq.n	8009efe <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009f0e:	b1da      	cbz	r2, 8009f48 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009f10:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8009f14:	b183      	cbz	r3, 8009f38 <osMessageQueueNew+0x48>
 8009f16:	2a4f      	cmp	r2, #79	; 0x4f
 8009f18:	d9f1      	bls.n	8009efe <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009f1a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009f1c:	2a00      	cmp	r2, #0
 8009f1e:	d0ee      	beq.n	8009efe <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009f20:	6966      	ldr	r6, [r4, #20]
 8009f22:	4345      	muls	r5, r0
 8009f24:	42ae      	cmp	r6, r5
 8009f26:	d3ea      	bcc.n	8009efe <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8009f28:	9700      	str	r7, [sp, #0]
 8009f2a:	f000 fc4b 	bl	800a7c4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009f2e:	4605      	mov	r5, r0
 8009f30:	2800      	cmp	r0, #0
 8009f32:	d0e4      	beq.n	8009efe <osMessageQueueNew+0xe>
        name = attr->name;
 8009f34:	6824      	ldr	r4, [r4, #0]
 8009f36:	e011      	b.n	8009f5c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009f38:	2a00      	cmp	r2, #0
 8009f3a:	d1e0      	bne.n	8009efe <osMessageQueueNew+0xe>
 8009f3c:	6923      	ldr	r3, [r4, #16]
 8009f3e:	2b00      	cmp	r3, #0
 8009f40:	d1dd      	bne.n	8009efe <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8009f42:	6963      	ldr	r3, [r4, #20]
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d1da      	bne.n	8009efe <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8009f48:	4629      	mov	r1, r5
 8009f4a:	2200      	movs	r2, #0
 8009f4c:	4630      	mov	r0, r6
 8009f4e:	f000 fc87 	bl	800a860 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009f52:	4605      	mov	r5, r0
 8009f54:	2800      	cmp	r0, #0
 8009f56:	d0d2      	beq.n	8009efe <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8009f58:	2c00      	cmp	r4, #0
 8009f5a:	d1eb      	bne.n	8009f34 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8009f5c:	4621      	mov	r1, r4
 8009f5e:	4628      	mov	r0, r5
 8009f60:	f001 f802 	bl	800af68 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009f64:	e7cc      	b.n	8009f00 <osMessageQueueNew+0x10>
	...

08009f68 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8009f68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f6a:	461c      	mov	r4, r3
 8009f6c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009f70:	b1b6      	cbz	r6, 8009fa0 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009f72:	b308      	cbz	r0, 8009fb8 <osMessageQueuePut+0x50>
 8009f74:	b301      	cbz	r1, 8009fb8 <osMessageQueuePut+0x50>
 8009f76:	b9fb      	cbnz	r3, 8009fb8 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009f78:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009f7a:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009f7c:	f000 fd8a 	bl	800aa94 <xQueueGenericSendFromISR>
 8009f80:	2801      	cmp	r0, #1
 8009f82:	d116      	bne.n	8009fb2 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009f84:	9b01      	ldr	r3, [sp, #4]
 8009f86:	b913      	cbnz	r3, 8009f8e <osMessageQueuePut+0x26>
  stat = osOK;
 8009f88:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009f8a:	b002      	add	sp, #8
 8009f8c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009f8e:	4b0d      	ldr	r3, [pc, #52]	; (8009fc4 <osMessageQueuePut+0x5c>)
 8009f90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f94:	601a      	str	r2, [r3, #0]
 8009f96:	f3bf 8f4f 	dsb	sy
 8009f9a:	f3bf 8f6f 	isb	sy
 8009f9e:	e7f3      	b.n	8009f88 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009fa0:	b150      	cbz	r0, 8009fb8 <osMessageQueuePut+0x50>
 8009fa2:	b149      	cbz	r1, 8009fb8 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009fa4:	4633      	mov	r3, r6
 8009fa6:	4622      	mov	r2, r4
 8009fa8:	f000 fcc2 	bl	800a930 <xQueueGenericSend>
 8009fac:	2801      	cmp	r0, #1
 8009fae:	d0eb      	beq.n	8009f88 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8009fb0:	b92c      	cbnz	r4, 8009fbe <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8009fb2:	f06f 0002 	mvn.w	r0, #2
 8009fb6:	e7e8      	b.n	8009f8a <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009fb8:	f06f 0003 	mvn.w	r0, #3
 8009fbc:	e7e5      	b.n	8009f8a <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009fbe:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009fc2:	e7e2      	b.n	8009f8a <osMessageQueuePut+0x22>
 8009fc4:	e000ed04 	.word	0xe000ed04

08009fc8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009fc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009fca:	461c      	mov	r4, r3
 8009fcc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009fd0:	b1b3      	cbz	r3, 800a000 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009fd2:	b300      	cbz	r0, 800a016 <osMessageQueueGet+0x4e>
 8009fd4:	b1f9      	cbz	r1, 800a016 <osMessageQueueGet+0x4e>
 8009fd6:	b9f4      	cbnz	r4, 800a016 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009fd8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009fda:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009fdc:	f000 ff74 	bl	800aec8 <xQueueReceiveFromISR>
 8009fe0:	2801      	cmp	r0, #1
 8009fe2:	d115      	bne.n	800a010 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009fe4:	9b01      	ldr	r3, [sp, #4]
 8009fe6:	b913      	cbnz	r3, 8009fee <osMessageQueueGet+0x26>
  stat = osOK;
 8009fe8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009fea:	b003      	add	sp, #12
 8009fec:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009fee:	4b0d      	ldr	r3, [pc, #52]	; (800a024 <osMessageQueueGet+0x5c>)
 8009ff0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ff4:	601a      	str	r2, [r3, #0]
 8009ff6:	f3bf 8f4f 	dsb	sy
 8009ffa:	f3bf 8f6f 	isb	sy
 8009ffe:	e7f3      	b.n	8009fe8 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a000:	b148      	cbz	r0, 800a016 <osMessageQueueGet+0x4e>
 800a002:	b141      	cbz	r1, 800a016 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a004:	4622      	mov	r2, r4
 800a006:	f000 fdfb 	bl	800ac00 <xQueueReceive>
 800a00a:	2801      	cmp	r0, #1
 800a00c:	d0ec      	beq.n	8009fe8 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800a00e:	b92c      	cbnz	r4, 800a01c <osMessageQueueGet+0x54>
          stat = osErrorResource;
 800a010:	f06f 0002 	mvn.w	r0, #2
 800a014:	e7e9      	b.n	8009fea <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800a016:	f06f 0003 	mvn.w	r0, #3
 800a01a:	e7e6      	b.n	8009fea <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800a01c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a020:	e7e3      	b.n	8009fea <osMessageQueueGet+0x22>
 800a022:	bf00      	nop
 800a024:	e000ed04 	.word	0xe000ed04

0800a028 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800a028:	4b03      	ldr	r3, [pc, #12]	; (800a038 <vApplicationGetIdleTaskMemory+0x10>)
 800a02a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800a02c:	4b03      	ldr	r3, [pc, #12]	; (800a03c <vApplicationGetIdleTaskMemory+0x14>)
 800a02e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800a030:	2380      	movs	r3, #128	; 0x80
 800a032:	6013      	str	r3, [r2, #0]
}
 800a034:	4770      	bx	lr
 800a036:	bf00      	nop
 800a038:	20005f30 	.word	0x20005f30
 800a03c:	20005d30 	.word	0x20005d30

0800a040 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800a040:	4b03      	ldr	r3, [pc, #12]	; (800a050 <vApplicationGetTimerTaskMemory+0x10>)
 800a042:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800a044:	4b03      	ldr	r3, [pc, #12]	; (800a054 <vApplicationGetTimerTaskMemory+0x14>)
 800a046:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800a048:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a04c:	6013      	str	r3, [r2, #0]
}
 800a04e:	4770      	bx	lr
 800a050:	200063f4 	.word	0x200063f4
 800a054:	20005ff4 	.word	0x20005ff4

0800a058 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800a058:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a05a:	4b0f      	ldr	r3, [pc, #60]	; (800a098 <prvInsertBlockIntoFreeList+0x40>)
 800a05c:	461a      	mov	r2, r3
 800a05e:	681b      	ldr	r3, [r3, #0]
 800a060:	4283      	cmp	r3, r0
 800a062:	d3fb      	bcc.n	800a05c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a064:	6854      	ldr	r4, [r2, #4]
 800a066:	1911      	adds	r1, r2, r4
 800a068:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a06a:	bf01      	itttt	eq
 800a06c:	6841      	ldreq	r1, [r0, #4]
 800a06e:	4610      	moveq	r0, r2
 800a070:	1909      	addeq	r1, r1, r4
 800a072:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a074:	6844      	ldr	r4, [r0, #4]
 800a076:	1901      	adds	r1, r0, r4
 800a078:	428b      	cmp	r3, r1
 800a07a:	d107      	bne.n	800a08c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800a07c:	4907      	ldr	r1, [pc, #28]	; (800a09c <prvInsertBlockIntoFreeList+0x44>)
 800a07e:	6809      	ldr	r1, [r1, #0]
 800a080:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a082:	bf1f      	itttt	ne
 800a084:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a086:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a088:	1909      	addne	r1, r1, r4
 800a08a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800a08c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800a08e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a090:	bf18      	it	ne
 800a092:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a094:	bd10      	pop	{r4, pc}
 800a096:	bf00      	nop
 800a098:	2000e4cc 	.word	0x2000e4cc
 800a09c:	200064b4 	.word	0x200064b4

0800a0a0 <pvPortMalloc>:
{
 800a0a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0a4:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800a0a6:	f001 f9a9 	bl	800b3fc <vTaskSuspendAll>
		if( pxEnd == NULL )
 800a0aa:	4b3e      	ldr	r3, [pc, #248]	; (800a1a4 <pvPortMalloc+0x104>)
 800a0ac:	483e      	ldr	r0, [pc, #248]	; (800a1a8 <pvPortMalloc+0x108>)
 800a0ae:	681a      	ldr	r2, [r3, #0]
 800a0b0:	469c      	mov	ip, r3
 800a0b2:	b9d2      	cbnz	r2, 800a0ea <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 800a0b4:	4a3d      	ldr	r2, [pc, #244]	; (800a1ac <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a0b6:	4b3e      	ldr	r3, [pc, #248]	; (800a1b0 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a0b8:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a0ba:	bf1c      	itt	ne
 800a0bc:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a0be:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800a0c2:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a0c4:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800a0c6:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800a0c8:	4b3a      	ldr	r3, [pc, #232]	; (800a1b4 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a0ca:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800a0ce:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a0d2:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a0d4:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800a0d8:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a0dc:	4b36      	ldr	r3, [pc, #216]	; (800a1b8 <pvPortMalloc+0x118>)
 800a0de:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a0e0:	4b36      	ldr	r3, [pc, #216]	; (800a1bc <pvPortMalloc+0x11c>)
 800a0e2:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a0e4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800a0e8:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a0ea:	6807      	ldr	r7, [r0, #0]
 800a0ec:	4227      	tst	r7, r4
 800a0ee:	d153      	bne.n	800a198 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 800a0f0:	2c00      	cmp	r4, #0
 800a0f2:	d044      	beq.n	800a17e <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 800a0f4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a0f8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800a0fa:	bf1c      	itt	ne
 800a0fc:	f023 0307 	bicne.w	r3, r3, #7
 800a100:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a102:	2b00      	cmp	r3, #0
 800a104:	d048      	beq.n	800a198 <pvPortMalloc+0xf8>
 800a106:	4a2d      	ldr	r2, [pc, #180]	; (800a1bc <pvPortMalloc+0x11c>)
 800a108:	6816      	ldr	r6, [r2, #0]
 800a10a:	429e      	cmp	r6, r3
 800a10c:	4690      	mov	r8, r2
 800a10e:	d343      	bcc.n	800a198 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 800a110:	4a27      	ldr	r2, [pc, #156]	; (800a1b0 <pvPortMalloc+0x110>)
 800a112:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a114:	6869      	ldr	r1, [r5, #4]
 800a116:	4299      	cmp	r1, r3
 800a118:	d201      	bcs.n	800a11e <pvPortMalloc+0x7e>
 800a11a:	6828      	ldr	r0, [r5, #0]
 800a11c:	b9a8      	cbnz	r0, 800a14a <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 800a11e:	f8dc 0000 	ldr.w	r0, [ip]
 800a122:	42a8      	cmp	r0, r5
 800a124:	d038      	beq.n	800a198 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a126:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a128:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a12a:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a12c:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a12e:	2910      	cmp	r1, #16
 800a130:	d912      	bls.n	800a158 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a132:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a134:	0742      	lsls	r2, r0, #29
 800a136:	d00b      	beq.n	800a150 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800a138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a13c:	f383 8811 	msr	BASEPRI, r3
 800a140:	f3bf 8f6f 	isb	sy
 800a144:	f3bf 8f4f 	dsb	sy
 800a148:	e7fe      	b.n	800a148 <pvPortMalloc+0xa8>
 800a14a:	462a      	mov	r2, r5
 800a14c:	4605      	mov	r5, r0
 800a14e:	e7e1      	b.n	800a114 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a150:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800a152:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a154:	f7ff ff80 	bl	800a058 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a158:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a15a:	4917      	ldr	r1, [pc, #92]	; (800a1b8 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 800a15c:	4a18      	ldr	r2, [pc, #96]	; (800a1c0 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a15e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a160:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a162:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800a164:	2300      	movs	r3, #0
 800a166:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800a168:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a16a:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a16e:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800a170:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a174:	bf38      	it	cc
 800a176:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a178:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a17a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800a17c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800a17e:	f001 f9e1 	bl	800b544 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a182:	0763      	lsls	r3, r4, #29
 800a184:	d00a      	beq.n	800a19c <pvPortMalloc+0xfc>
 800a186:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a18a:	f383 8811 	msr	BASEPRI, r3
 800a18e:	f3bf 8f6f 	isb	sy
 800a192:	f3bf 8f4f 	dsb	sy
 800a196:	e7fe      	b.n	800a196 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 800a198:	2400      	movs	r4, #0
 800a19a:	e7f0      	b.n	800a17e <pvPortMalloc+0xde>
}
 800a19c:	4620      	mov	r0, r4
 800a19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1a2:	bf00      	nop
 800a1a4:	200064b4 	.word	0x200064b4
 800a1a8:	2000e4b8 	.word	0x2000e4b8
 800a1ac:	200064b8 	.word	0x200064b8
 800a1b0:	2000e4cc 	.word	0x2000e4cc
 800a1b4:	2000e4b0 	.word	0x2000e4b0
 800a1b8:	2000e4c0 	.word	0x2000e4c0
 800a1bc:	2000e4bc 	.word	0x2000e4bc
 800a1c0:	2000e4c4 	.word	0x2000e4c4

0800a1c4 <vPortFree>:
{
 800a1c4:	b510      	push	{r4, lr}
	if( pv != NULL )
 800a1c6:	4604      	mov	r4, r0
 800a1c8:	b390      	cbz	r0, 800a230 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a1ca:	4a1a      	ldr	r2, [pc, #104]	; (800a234 <vPortFree+0x70>)
 800a1cc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a1d0:	6812      	ldr	r2, [r2, #0]
 800a1d2:	4213      	tst	r3, r2
 800a1d4:	d108      	bne.n	800a1e8 <vPortFree+0x24>
 800a1d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1da:	f383 8811 	msr	BASEPRI, r3
 800a1de:	f3bf 8f6f 	isb	sy
 800a1e2:	f3bf 8f4f 	dsb	sy
 800a1e6:	e7fe      	b.n	800a1e6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a1e8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a1ec:	b141      	cbz	r1, 800a200 <vPortFree+0x3c>
 800a1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1f2:	f383 8811 	msr	BASEPRI, r3
 800a1f6:	f3bf 8f6f 	isb	sy
 800a1fa:	f3bf 8f4f 	dsb	sy
 800a1fe:	e7fe      	b.n	800a1fe <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a200:	ea23 0302 	bic.w	r3, r3, r2
 800a204:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800a208:	f001 f8f8 	bl	800b3fc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a20c:	4a0a      	ldr	r2, [pc, #40]	; (800a238 <vPortFree+0x74>)
 800a20e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a212:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a214:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a218:	440b      	add	r3, r1
 800a21a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a21c:	f7ff ff1c 	bl	800a058 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800a220:	4a06      	ldr	r2, [pc, #24]	; (800a23c <vPortFree+0x78>)
 800a222:	6813      	ldr	r3, [r2, #0]
}
 800a224:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800a228:	3301      	adds	r3, #1
 800a22a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800a22c:	f001 b98a 	b.w	800b544 <xTaskResumeAll>
}
 800a230:	bd10      	pop	{r4, pc}
 800a232:	bf00      	nop
 800a234:	2000e4b8 	.word	0x2000e4b8
 800a238:	2000e4bc 	.word	0x2000e4bc
 800a23c:	2000e4c8 	.word	0x2000e4c8

0800a240 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a240:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a244:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a248:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a24c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a24e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a250:	2300      	movs	r3, #0
 800a252:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a254:	4770      	bx	lr

0800a256 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a256:	2300      	movs	r3, #0
 800a258:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a25a:	4770      	bx	lr

0800a25c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a25c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800a25e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a260:	689a      	ldr	r2, [r3, #8]
 800a262:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a264:	689a      	ldr	r2, [r3, #8]
 800a266:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a268:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a26a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a26c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a26e:	3301      	adds	r3, #1
 800a270:	6003      	str	r3, [r0, #0]
}
 800a272:	4770      	bx	lr

0800a274 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a274:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a276:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a278:	1c63      	adds	r3, r4, #1
 800a27a:	d10a      	bne.n	800a292 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a27c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a27e:	685a      	ldr	r2, [r3, #4]
 800a280:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a282:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a284:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a286:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a288:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a28a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a28c:	3301      	adds	r3, #1
 800a28e:	6003      	str	r3, [r0, #0]
}
 800a290:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a292:	f100 0208 	add.w	r2, r0, #8
 800a296:	4613      	mov	r3, r2
 800a298:	6852      	ldr	r2, [r2, #4]
 800a29a:	6815      	ldr	r5, [r2, #0]
 800a29c:	42a5      	cmp	r5, r4
 800a29e:	d9fa      	bls.n	800a296 <vListInsert+0x22>
 800a2a0:	e7ed      	b.n	800a27e <vListInsert+0xa>

0800a2a2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a2a2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800a2a6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a2a8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a2aa:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a2ac:	6859      	ldr	r1, [r3, #4]
 800a2ae:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a2b0:	bf08      	it	eq
 800a2b2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a2b4:	2200      	movs	r2, #0
 800a2b6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a2b8:	681a      	ldr	r2, [r3, #0]
 800a2ba:	3a01      	subs	r2, #1
 800a2bc:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a2be:	6818      	ldr	r0, [r3, #0]
}
 800a2c0:	4770      	bx	lr
	...

0800a2c4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a2c4:	4808      	ldr	r0, [pc, #32]	; (800a2e8 <prvPortStartFirstTask+0x24>)
 800a2c6:	6800      	ldr	r0, [r0, #0]
 800a2c8:	6800      	ldr	r0, [r0, #0]
 800a2ca:	f380 8808 	msr	MSP, r0
 800a2ce:	f04f 0000 	mov.w	r0, #0
 800a2d2:	f380 8814 	msr	CONTROL, r0
 800a2d6:	b662      	cpsie	i
 800a2d8:	b661      	cpsie	f
 800a2da:	f3bf 8f4f 	dsb	sy
 800a2de:	f3bf 8f6f 	isb	sy
 800a2e2:	df00      	svc	0
 800a2e4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a2e6:	0000      	.short	0x0000
 800a2e8:	e000ed08 	.word	0xe000ed08

0800a2ec <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a2ec:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800a2fc <vPortEnableVFP+0x10>
 800a2f0:	6801      	ldr	r1, [r0, #0]
 800a2f2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800a2f6:	6001      	str	r1, [r0, #0]
 800a2f8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a2fa:	0000      	.short	0x0000
 800a2fc:	e000ed88 	.word	0xe000ed88

0800a300 <prvTaskExitError>:
{
 800a300:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a302:	2300      	movs	r3, #0
 800a304:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a306:	4b0d      	ldr	r3, [pc, #52]	; (800a33c <prvTaskExitError+0x3c>)
 800a308:	681b      	ldr	r3, [r3, #0]
 800a30a:	3301      	adds	r3, #1
 800a30c:	d008      	beq.n	800a320 <prvTaskExitError+0x20>
 800a30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a312:	f383 8811 	msr	BASEPRI, r3
 800a316:	f3bf 8f6f 	isb	sy
 800a31a:	f3bf 8f4f 	dsb	sy
 800a31e:	e7fe      	b.n	800a31e <prvTaskExitError+0x1e>
 800a320:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a324:	f383 8811 	msr	BASEPRI, r3
 800a328:	f3bf 8f6f 	isb	sy
 800a32c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a330:	9b01      	ldr	r3, [sp, #4]
 800a332:	2b00      	cmp	r3, #0
 800a334:	d0fc      	beq.n	800a330 <prvTaskExitError+0x30>
}
 800a336:	b002      	add	sp, #8
 800a338:	4770      	bx	lr
 800a33a:	bf00      	nop
 800a33c:	20000080 	.word	0x20000080

0800a340 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a340:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800a344:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a348:	4b07      	ldr	r3, [pc, #28]	; (800a368 <pxPortInitialiseStack+0x28>)
 800a34a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a34e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a352:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a356:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a35a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a35e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800a362:	3844      	subs	r0, #68	; 0x44
 800a364:	4770      	bx	lr
 800a366:	bf00      	nop
 800a368:	0800a301 	.word	0x0800a301
 800a36c:	00000000 	.word	0x00000000

0800a370 <SVC_Handler>:
	__asm volatile (
 800a370:	4b07      	ldr	r3, [pc, #28]	; (800a390 <pxCurrentTCBConst2>)
 800a372:	6819      	ldr	r1, [r3, #0]
 800a374:	6808      	ldr	r0, [r1, #0]
 800a376:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a37a:	f380 8809 	msr	PSP, r0
 800a37e:	f3bf 8f6f 	isb	sy
 800a382:	f04f 0000 	mov.w	r0, #0
 800a386:	f380 8811 	msr	BASEPRI, r0
 800a38a:	4770      	bx	lr
 800a38c:	f3af 8000 	nop.w

0800a390 <pxCurrentTCBConst2>:
 800a390:	2000e4dc 	.word	0x2000e4dc

0800a394 <vPortEnterCritical>:
 800a394:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a398:	f383 8811 	msr	BASEPRI, r3
 800a39c:	f3bf 8f6f 	isb	sy
 800a3a0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800a3a4:	4a0a      	ldr	r2, [pc, #40]	; (800a3d0 <vPortEnterCritical+0x3c>)
 800a3a6:	6813      	ldr	r3, [r2, #0]
 800a3a8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800a3aa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800a3ac:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800a3ae:	d10d      	bne.n	800a3cc <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800a3b0:	4b08      	ldr	r3, [pc, #32]	; (800a3d4 <vPortEnterCritical+0x40>)
 800a3b2:	681b      	ldr	r3, [r3, #0]
 800a3b4:	f013 0fff 	tst.w	r3, #255	; 0xff
 800a3b8:	d008      	beq.n	800a3cc <vPortEnterCritical+0x38>
 800a3ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3be:	f383 8811 	msr	BASEPRI, r3
 800a3c2:	f3bf 8f6f 	isb	sy
 800a3c6:	f3bf 8f4f 	dsb	sy
 800a3ca:	e7fe      	b.n	800a3ca <vPortEnterCritical+0x36>
}
 800a3cc:	4770      	bx	lr
 800a3ce:	bf00      	nop
 800a3d0:	20000080 	.word	0x20000080
 800a3d4:	e000ed04 	.word	0xe000ed04

0800a3d8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800a3d8:	4a08      	ldr	r2, [pc, #32]	; (800a3fc <vPortExitCritical+0x24>)
 800a3da:	6813      	ldr	r3, [r2, #0]
 800a3dc:	b943      	cbnz	r3, 800a3f0 <vPortExitCritical+0x18>
 800a3de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3e2:	f383 8811 	msr	BASEPRI, r3
 800a3e6:	f3bf 8f6f 	isb	sy
 800a3ea:	f3bf 8f4f 	dsb	sy
 800a3ee:	e7fe      	b.n	800a3ee <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800a3f0:	3b01      	subs	r3, #1
 800a3f2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800a3f4:	b90b      	cbnz	r3, 800a3fa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800a3f6:	f383 8811 	msr	BASEPRI, r3
}
 800a3fa:	4770      	bx	lr
 800a3fc:	20000080 	.word	0x20000080

0800a400 <PendSV_Handler>:
	__asm volatile
 800a400:	f3ef 8009 	mrs	r0, PSP
 800a404:	f3bf 8f6f 	isb	sy
 800a408:	4b15      	ldr	r3, [pc, #84]	; (800a460 <pxCurrentTCBConst>)
 800a40a:	681a      	ldr	r2, [r3, #0]
 800a40c:	f01e 0f10 	tst.w	lr, #16
 800a410:	bf08      	it	eq
 800a412:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a416:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a41a:	6010      	str	r0, [r2, #0]
 800a41c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a420:	f04f 0050 	mov.w	r0, #80	; 0x50
 800a424:	f380 8811 	msr	BASEPRI, r0
 800a428:	f3bf 8f4f 	dsb	sy
 800a42c:	f3bf 8f6f 	isb	sy
 800a430:	f001 f98c 	bl	800b74c <vTaskSwitchContext>
 800a434:	f04f 0000 	mov.w	r0, #0
 800a438:	f380 8811 	msr	BASEPRI, r0
 800a43c:	bc09      	pop	{r0, r3}
 800a43e:	6819      	ldr	r1, [r3, #0]
 800a440:	6808      	ldr	r0, [r1, #0]
 800a442:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a446:	f01e 0f10 	tst.w	lr, #16
 800a44a:	bf08      	it	eq
 800a44c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a450:	f380 8809 	msr	PSP, r0
 800a454:	f3bf 8f6f 	isb	sy
 800a458:	4770      	bx	lr
 800a45a:	bf00      	nop
 800a45c:	f3af 8000 	nop.w

0800a460 <pxCurrentTCBConst>:
 800a460:	2000e4dc 	.word	0x2000e4dc

0800a464 <xPortSysTickHandler>:
{
 800a464:	b508      	push	{r3, lr}
	__asm volatile
 800a466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a46a:	f383 8811 	msr	BASEPRI, r3
 800a46e:	f3bf 8f6f 	isb	sy
 800a472:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a476:	f000 ffcf 	bl	800b418 <xTaskIncrementTick>
 800a47a:	b118      	cbz	r0, 800a484 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a47c:	4b03      	ldr	r3, [pc, #12]	; (800a48c <xPortSysTickHandler+0x28>)
 800a47e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a482:	601a      	str	r2, [r3, #0]
	__asm volatile
 800a484:	2300      	movs	r3, #0
 800a486:	f383 8811 	msr	BASEPRI, r3
}
 800a48a:	bd08      	pop	{r3, pc}
 800a48c:	e000ed04 	.word	0xe000ed04

0800a490 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a490:	4a08      	ldr	r2, [pc, #32]	; (800a4b4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a492:	4909      	ldr	r1, [pc, #36]	; (800a4b8 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a494:	2300      	movs	r3, #0
 800a496:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a498:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a49a:	4b08      	ldr	r3, [pc, #32]	; (800a4bc <vPortSetupTimerInterrupt+0x2c>)
 800a49c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800a4a0:	681b      	ldr	r3, [r3, #0]
 800a4a2:	fbb3 f3f1 	udiv	r3, r3, r1
 800a4a6:	4906      	ldr	r1, [pc, #24]	; (800a4c0 <vPortSetupTimerInterrupt+0x30>)
 800a4a8:	3b01      	subs	r3, #1
 800a4aa:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a4ac:	2307      	movs	r3, #7
 800a4ae:	6013      	str	r3, [r2, #0]
}
 800a4b0:	4770      	bx	lr
 800a4b2:	bf00      	nop
 800a4b4:	e000e010 	.word	0xe000e010
 800a4b8:	e000e018 	.word	0xe000e018
 800a4bc:	20000074 	.word	0x20000074
 800a4c0:	e000e014 	.word	0xe000e014

0800a4c4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a4c4:	4b38      	ldr	r3, [pc, #224]	; (800a5a8 <xPortStartScheduler+0xe4>)
 800a4c6:	4a39      	ldr	r2, [pc, #228]	; (800a5ac <xPortStartScheduler+0xe8>)
{
 800a4c8:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a4ca:	6819      	ldr	r1, [r3, #0]
 800a4cc:	4291      	cmp	r1, r2
 800a4ce:	d108      	bne.n	800a4e2 <xPortStartScheduler+0x1e>
	__asm volatile
 800a4d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4d4:	f383 8811 	msr	BASEPRI, r3
 800a4d8:	f3bf 8f6f 	isb	sy
 800a4dc:	f3bf 8f4f 	dsb	sy
 800a4e0:	e7fe      	b.n	800a4e0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a4e2:	681a      	ldr	r2, [r3, #0]
 800a4e4:	4b32      	ldr	r3, [pc, #200]	; (800a5b0 <xPortStartScheduler+0xec>)
 800a4e6:	429a      	cmp	r2, r3
 800a4e8:	d108      	bne.n	800a4fc <xPortStartScheduler+0x38>
 800a4ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4ee:	f383 8811 	msr	BASEPRI, r3
 800a4f2:	f3bf 8f6f 	isb	sy
 800a4f6:	f3bf 8f4f 	dsb	sy
 800a4fa:	e7fe      	b.n	800a4fa <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a4fc:	4b2d      	ldr	r3, [pc, #180]	; (800a5b4 <xPortStartScheduler+0xf0>)
 800a4fe:	781a      	ldrb	r2, [r3, #0]
 800a500:	b2d2      	uxtb	r2, r2
 800a502:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a504:	22ff      	movs	r2, #255	; 0xff
 800a506:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a508:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a50a:	4a2b      	ldr	r2, [pc, #172]	; (800a5b8 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a50c:	b2db      	uxtb	r3, r3
 800a50e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a512:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a516:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800a51a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a51c:	4a27      	ldr	r2, [pc, #156]	; (800a5bc <xPortStartScheduler+0xf8>)
 800a51e:	2307      	movs	r3, #7
 800a520:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a522:	2100      	movs	r1, #0
 800a524:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800a528:	0600      	lsls	r0, r0, #24
 800a52a:	f103 34ff 	add.w	r4, r3, #4294967295
 800a52e:	d40c      	bmi.n	800a54a <xPortStartScheduler+0x86>
 800a530:	b111      	cbz	r1, 800a538 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a532:	2b03      	cmp	r3, #3
 800a534:	6013      	str	r3, [r2, #0]
 800a536:	d011      	beq.n	800a55c <xPortStartScheduler+0x98>
 800a538:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a53c:	f383 8811 	msr	BASEPRI, r3
 800a540:	f3bf 8f6f 	isb	sy
 800a544:	f3bf 8f4f 	dsb	sy
 800a548:	e7fe      	b.n	800a548 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a54a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a54e:	005b      	lsls	r3, r3, #1
 800a550:	b2db      	uxtb	r3, r3
 800a552:	f88d 3003 	strb.w	r3, [sp, #3]
 800a556:	2101      	movs	r1, #1
 800a558:	4623      	mov	r3, r4
 800a55a:	e7e3      	b.n	800a524 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a55c:	f44f 7340 	mov.w	r3, #768	; 0x300
 800a560:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a562:	9b01      	ldr	r3, [sp, #4]
 800a564:	4a13      	ldr	r2, [pc, #76]	; (800a5b4 <xPortStartScheduler+0xf0>)
 800a566:	b2db      	uxtb	r3, r3
 800a568:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a56a:	4b15      	ldr	r3, [pc, #84]	; (800a5c0 <xPortStartScheduler+0xfc>)
 800a56c:	681a      	ldr	r2, [r3, #0]
 800a56e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a572:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a574:	681a      	ldr	r2, [r3, #0]
 800a576:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800a57a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800a57c:	f7ff ff88 	bl	800a490 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a580:	4b10      	ldr	r3, [pc, #64]	; (800a5c4 <xPortStartScheduler+0x100>)
 800a582:	2400      	movs	r4, #0
 800a584:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800a586:	f7ff feb1 	bl	800a2ec <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a58a:	4a0f      	ldr	r2, [pc, #60]	; (800a5c8 <xPortStartScheduler+0x104>)
 800a58c:	6813      	ldr	r3, [r2, #0]
 800a58e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800a592:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 800a594:	f7ff fe96 	bl	800a2c4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a598:	f001 f8d8 	bl	800b74c <vTaskSwitchContext>
	prvTaskExitError();
 800a59c:	f7ff feb0 	bl	800a300 <prvTaskExitError>
}
 800a5a0:	4620      	mov	r0, r4
 800a5a2:	b002      	add	sp, #8
 800a5a4:	bd10      	pop	{r4, pc}
 800a5a6:	bf00      	nop
 800a5a8:	e000ed00 	.word	0xe000ed00
 800a5ac:	410fc271 	.word	0x410fc271
 800a5b0:	410fc270 	.word	0x410fc270
 800a5b4:	e000e400 	.word	0xe000e400
 800a5b8:	2000e4d4 	.word	0x2000e4d4
 800a5bc:	2000e4d8 	.word	0x2000e4d8
 800a5c0:	e000ed20 	.word	0xe000ed20
 800a5c4:	20000080 	.word	0x20000080
 800a5c8:	e000ef34 	.word	0xe000ef34

0800a5cc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a5cc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a5d0:	2b0f      	cmp	r3, #15
 800a5d2:	d90e      	bls.n	800a5f2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a5d4:	4a10      	ldr	r2, [pc, #64]	; (800a618 <vPortValidateInterruptPriority+0x4c>)
 800a5d6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a5d8:	4a10      	ldr	r2, [pc, #64]	; (800a61c <vPortValidateInterruptPriority+0x50>)
 800a5da:	7812      	ldrb	r2, [r2, #0]
 800a5dc:	429a      	cmp	r2, r3
 800a5de:	d908      	bls.n	800a5f2 <vPortValidateInterruptPriority+0x26>
 800a5e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5e4:	f383 8811 	msr	BASEPRI, r3
 800a5e8:	f3bf 8f6f 	isb	sy
 800a5ec:	f3bf 8f4f 	dsb	sy
 800a5f0:	e7fe      	b.n	800a5f0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a5f2:	4b0b      	ldr	r3, [pc, #44]	; (800a620 <vPortValidateInterruptPriority+0x54>)
 800a5f4:	4a0b      	ldr	r2, [pc, #44]	; (800a624 <vPortValidateInterruptPriority+0x58>)
 800a5f6:	681b      	ldr	r3, [r3, #0]
 800a5f8:	6812      	ldr	r2, [r2, #0]
 800a5fa:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a5fe:	4293      	cmp	r3, r2
 800a600:	d908      	bls.n	800a614 <vPortValidateInterruptPriority+0x48>
 800a602:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a606:	f383 8811 	msr	BASEPRI, r3
 800a60a:	f3bf 8f6f 	isb	sy
 800a60e:	f3bf 8f4f 	dsb	sy
 800a612:	e7fe      	b.n	800a612 <vPortValidateInterruptPriority+0x46>
	}
 800a614:	4770      	bx	lr
 800a616:	bf00      	nop
 800a618:	e000e3f0 	.word	0xe000e3f0
 800a61c:	2000e4d4 	.word	0x2000e4d4
 800a620:	e000ed0c 	.word	0xe000ed0c
 800a624:	2000e4d8 	.word	0x2000e4d8

0800a628 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a628:	b510      	push	{r4, lr}
 800a62a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a62c:	f7ff feb2 	bl	800a394 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a630:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a632:	f7ff fed1 	bl	800a3d8 <vPortExitCritical>

	return xReturn;
}
 800a636:	fab4 f084 	clz	r0, r4
 800a63a:	0940      	lsrs	r0, r0, #5
 800a63c:	bd10      	pop	{r4, pc}

0800a63e <prvCopyDataToQueue>:
{
 800a63e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a640:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a642:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a644:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800a646:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a648:	b952      	cbnz	r2, 800a660 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a64a:	6807      	ldr	r7, [r0, #0]
 800a64c:	bb47      	cbnz	r7, 800a6a0 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a64e:	6880      	ldr	r0, [r0, #8]
 800a650:	f001 f9e2 	bl	800ba18 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a654:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a656:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a658:	3601      	adds	r6, #1
 800a65a:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800a65c:	4628      	mov	r0, r5
 800a65e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a660:	b965      	cbnz	r5, 800a67c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a662:	6840      	ldr	r0, [r0, #4]
 800a664:	f016 fd64 	bl	8021130 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a668:	6863      	ldr	r3, [r4, #4]
 800a66a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a66c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a66e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a670:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a672:	4293      	cmp	r3, r2
 800a674:	d3f0      	bcc.n	800a658 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a676:	6823      	ldr	r3, [r4, #0]
 800a678:	6063      	str	r3, [r4, #4]
 800a67a:	e7ed      	b.n	800a658 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a67c:	68c0      	ldr	r0, [r0, #12]
 800a67e:	f016 fd57 	bl	8021130 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a682:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a684:	68e3      	ldr	r3, [r4, #12]
 800a686:	4251      	negs	r1, r2
 800a688:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a68a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a68c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a68e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a690:	bf3e      	ittt	cc
 800a692:	68a3      	ldrcc	r3, [r4, #8]
 800a694:	185b      	addcc	r3, r3, r1
 800a696:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a698:	2d02      	cmp	r5, #2
 800a69a:	d101      	bne.n	800a6a0 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a69c:	b116      	cbz	r6, 800a6a4 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800a69e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800a6a0:	2500      	movs	r5, #0
 800a6a2:	e7d9      	b.n	800a658 <prvCopyDataToQueue+0x1a>
 800a6a4:	4635      	mov	r5, r6
 800a6a6:	e7d7      	b.n	800a658 <prvCopyDataToQueue+0x1a>

0800a6a8 <prvCopyDataFromQueue>:
{
 800a6a8:	4603      	mov	r3, r0
 800a6aa:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a6ac:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800a6ae:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a6b0:	b16a      	cbz	r2, 800a6ce <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a6b2:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a6b4:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a6b6:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a6b8:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a6ba:	bf28      	it	cs
 800a6bc:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a6be:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a6c0:	bf28      	it	cs
 800a6c2:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a6c4:	68d9      	ldr	r1, [r3, #12]
}
 800a6c6:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a6ca:	f016 bd31 	b.w	8021130 <memcpy>
}
 800a6ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a6d2:	4770      	bx	lr

0800a6d4 <prvUnlockQueue>:
{
 800a6d4:	b570      	push	{r4, r5, r6, lr}
 800a6d6:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a6d8:	f7ff fe5c 	bl	800a394 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a6dc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a6e0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a6e4:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a6e6:	2d00      	cmp	r5, #0
 800a6e8:	dc14      	bgt.n	800a714 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800a6ea:	23ff      	movs	r3, #255	; 0xff
 800a6ec:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800a6f0:	f7ff fe72 	bl	800a3d8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a6f4:	f7ff fe4e 	bl	800a394 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a6f8:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a6fc:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800a700:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a702:	2d00      	cmp	r5, #0
 800a704:	dc12      	bgt.n	800a72c <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800a706:	23ff      	movs	r3, #255	; 0xff
 800a708:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800a70c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a710:	f7ff be62 	b.w	800a3d8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a714:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a716:	2b00      	cmp	r3, #0
 800a718:	d0e7      	beq.n	800a6ea <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a71a:	4630      	mov	r0, r6
 800a71c:	f001 f898 	bl	800b850 <xTaskRemoveFromEventList>
 800a720:	b108      	cbz	r0, 800a726 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800a722:	f001 f921 	bl	800b968 <vTaskMissedYield>
			--cTxLock;
 800a726:	3d01      	subs	r5, #1
 800a728:	b26d      	sxtb	r5, r5
 800a72a:	e7dc      	b.n	800a6e6 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a72c:	6923      	ldr	r3, [r4, #16]
 800a72e:	2b00      	cmp	r3, #0
 800a730:	d0e9      	beq.n	800a706 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a732:	4630      	mov	r0, r6
 800a734:	f001 f88c 	bl	800b850 <xTaskRemoveFromEventList>
 800a738:	b108      	cbz	r0, 800a73e <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800a73a:	f001 f915 	bl	800b968 <vTaskMissedYield>
				--cRxLock;
 800a73e:	3d01      	subs	r5, #1
 800a740:	b26d      	sxtb	r5, r5
 800a742:	e7de      	b.n	800a702 <prvUnlockQueue+0x2e>

0800a744 <xQueueGenericReset>:
{
 800a744:	b538      	push	{r3, r4, r5, lr}
 800a746:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a748:	4604      	mov	r4, r0
 800a74a:	b940      	cbnz	r0, 800a75e <xQueueGenericReset+0x1a>
 800a74c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a750:	f383 8811 	msr	BASEPRI, r3
 800a754:	f3bf 8f6f 	isb	sy
 800a758:	f3bf 8f4f 	dsb	sy
 800a75c:	e7fe      	b.n	800a75c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a75e:	f7ff fe19 	bl	800a394 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a762:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800a766:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a768:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a76a:	434b      	muls	r3, r1
 800a76c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a76e:	1a5b      	subs	r3, r3, r1
 800a770:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a772:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a774:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a776:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800a778:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a77a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800a77c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a780:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800a784:	b995      	cbnz	r5, 800a7ac <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a786:	6923      	ldr	r3, [r4, #16]
 800a788:	b163      	cbz	r3, 800a7a4 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a78a:	f104 0010 	add.w	r0, r4, #16
 800a78e:	f001 f85f 	bl	800b850 <xTaskRemoveFromEventList>
 800a792:	b138      	cbz	r0, 800a7a4 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 800a794:	4b0a      	ldr	r3, [pc, #40]	; (800a7c0 <xQueueGenericReset+0x7c>)
 800a796:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a79a:	601a      	str	r2, [r3, #0]
 800a79c:	f3bf 8f4f 	dsb	sy
 800a7a0:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a7a4:	f7ff fe18 	bl	800a3d8 <vPortExitCritical>
}
 800a7a8:	2001      	movs	r0, #1
 800a7aa:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a7ac:	f104 0010 	add.w	r0, r4, #16
 800a7b0:	f7ff fd46 	bl	800a240 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a7b4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a7b8:	f7ff fd42 	bl	800a240 <vListInitialise>
 800a7bc:	e7f2      	b.n	800a7a4 <xQueueGenericReset+0x60>
 800a7be:	bf00      	nop
 800a7c0:	e000ed04 	.word	0xe000ed04

0800a7c4 <xQueueGenericCreateStatic>:
	{
 800a7c4:	b513      	push	{r0, r1, r4, lr}
 800a7c6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a7c8:	b940      	cbnz	r0, 800a7dc <xQueueGenericCreateStatic+0x18>
 800a7ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7ce:	f383 8811 	msr	BASEPRI, r3
 800a7d2:	f3bf 8f6f 	isb	sy
 800a7d6:	f3bf 8f4f 	dsb	sy
 800a7da:	e7fe      	b.n	800a7da <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800a7dc:	b943      	cbnz	r3, 800a7f0 <xQueueGenericCreateStatic+0x2c>
 800a7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7e2:	f383 8811 	msr	BASEPRI, r3
 800a7e6:	f3bf 8f6f 	isb	sy
 800a7ea:	f3bf 8f4f 	dsb	sy
 800a7ee:	e7fe      	b.n	800a7ee <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a7f0:	b14a      	cbz	r2, 800a806 <xQueueGenericCreateStatic+0x42>
 800a7f2:	b991      	cbnz	r1, 800a81a <xQueueGenericCreateStatic+0x56>
 800a7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7f8:	f383 8811 	msr	BASEPRI, r3
 800a7fc:	f3bf 8f6f 	isb	sy
 800a800:	f3bf 8f4f 	dsb	sy
 800a804:	e7fe      	b.n	800a804 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a806:	b141      	cbz	r1, 800a81a <xQueueGenericCreateStatic+0x56>
 800a808:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a80c:	f383 8811 	msr	BASEPRI, r3
 800a810:	f3bf 8f6f 	isb	sy
 800a814:	f3bf 8f4f 	dsb	sy
 800a818:	e7fe      	b.n	800a818 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a81a:	2350      	movs	r3, #80	; 0x50
 800a81c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a81e:	9b01      	ldr	r3, [sp, #4]
 800a820:	2b50      	cmp	r3, #80	; 0x50
 800a822:	d008      	beq.n	800a836 <xQueueGenericCreateStatic+0x72>
 800a824:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a828:	f383 8811 	msr	BASEPRI, r3
 800a82c:	f3bf 8f6f 	isb	sy
 800a830:	f3bf 8f4f 	dsb	sy
 800a834:	e7fe      	b.n	800a834 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a836:	2900      	cmp	r1, #0
 800a838:	bf08      	it	eq
 800a83a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a83c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a83e:	6022      	str	r2, [r4, #0]
 800a840:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800a842:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a846:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a84a:	4619      	mov	r1, r3
 800a84c:	4620      	mov	r0, r4
 800a84e:	f7ff ff79 	bl	800a744 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a852:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800a856:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800a85a:	4620      	mov	r0, r4
 800a85c:	b002      	add	sp, #8
 800a85e:	bd10      	pop	{r4, pc}

0800a860 <xQueueGenericCreate>:
	{
 800a860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a862:	460d      	mov	r5, r1
 800a864:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a866:	4606      	mov	r6, r0
 800a868:	b940      	cbnz	r0, 800a87c <xQueueGenericCreate+0x1c>
 800a86a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a86e:	f383 8811 	msr	BASEPRI, r3
 800a872:	f3bf 8f6f 	isb	sy
 800a876:	f3bf 8f4f 	dsb	sy
 800a87a:	e7fe      	b.n	800a87a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a87c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a87e:	3050      	adds	r0, #80	; 0x50
 800a880:	f7ff fc0e 	bl	800a0a0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a884:	4604      	mov	r4, r0
 800a886:	b170      	cbz	r0, 800a8a6 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a888:	2300      	movs	r3, #0
 800a88a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a88e:	b165      	cbz	r5, 800a8aa <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a890:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800a894:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800a898:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a89a:	2101      	movs	r1, #1
 800a89c:	4620      	mov	r0, r4
 800a89e:	f7ff ff51 	bl	800a744 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a8a2:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800a8a6:	4620      	mov	r0, r4
 800a8a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a8aa:	4603      	mov	r3, r0
 800a8ac:	e7f2      	b.n	800a894 <xQueueGenericCreate+0x34>

0800a8ae <xQueueCreateCountingSemaphoreStatic>:
	{
 800a8ae:	b513      	push	{r0, r1, r4, lr}
 800a8b0:	4613      	mov	r3, r2
 800a8b2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a8b4:	b940      	cbnz	r0, 800a8c8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a8b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8ba:	f383 8811 	msr	BASEPRI, r3
 800a8be:	f3bf 8f6f 	isb	sy
 800a8c2:	f3bf 8f4f 	dsb	sy
 800a8c6:	e7fe      	b.n	800a8c6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a8c8:	4288      	cmp	r0, r1
 800a8ca:	d208      	bcs.n	800a8de <xQueueCreateCountingSemaphoreStatic+0x30>
 800a8cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8d0:	f383 8811 	msr	BASEPRI, r3
 800a8d4:	f3bf 8f6f 	isb	sy
 800a8d8:	f3bf 8f4f 	dsb	sy
 800a8dc:	e7fe      	b.n	800a8dc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a8de:	2202      	movs	r2, #2
 800a8e0:	9200      	str	r2, [sp, #0]
 800a8e2:	2200      	movs	r2, #0
 800a8e4:	4611      	mov	r1, r2
 800a8e6:	f7ff ff6d 	bl	800a7c4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a8ea:	b100      	cbz	r0, 800a8ee <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a8ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a8ee:	b002      	add	sp, #8
 800a8f0:	bd10      	pop	{r4, pc}

0800a8f2 <xQueueCreateCountingSemaphore>:
	{
 800a8f2:	b510      	push	{r4, lr}
 800a8f4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a8f6:	b940      	cbnz	r0, 800a90a <xQueueCreateCountingSemaphore+0x18>
 800a8f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8fc:	f383 8811 	msr	BASEPRI, r3
 800a900:	f3bf 8f6f 	isb	sy
 800a904:	f3bf 8f4f 	dsb	sy
 800a908:	e7fe      	b.n	800a908 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a90a:	4288      	cmp	r0, r1
 800a90c:	d208      	bcs.n	800a920 <xQueueCreateCountingSemaphore+0x2e>
 800a90e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a912:	f383 8811 	msr	BASEPRI, r3
 800a916:	f3bf 8f6f 	isb	sy
 800a91a:	f3bf 8f4f 	dsb	sy
 800a91e:	e7fe      	b.n	800a91e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a920:	2202      	movs	r2, #2
 800a922:	2100      	movs	r1, #0
 800a924:	f7ff ff9c 	bl	800a860 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a928:	b100      	cbz	r0, 800a92c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a92a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a92c:	bd10      	pop	{r4, pc}
	...

0800a930 <xQueueGenericSend>:
{
 800a930:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a934:	4688      	mov	r8, r1
 800a936:	9201      	str	r2, [sp, #4]
 800a938:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a93a:	4604      	mov	r4, r0
 800a93c:	b940      	cbnz	r0, 800a950 <xQueueGenericSend+0x20>
 800a93e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a942:	f383 8811 	msr	BASEPRI, r3
 800a946:	f3bf 8f6f 	isb	sy
 800a94a:	f3bf 8f4f 	dsb	sy
 800a94e:	e7fe      	b.n	800a94e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a950:	b951      	cbnz	r1, 800a968 <xQueueGenericSend+0x38>
 800a952:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a954:	b143      	cbz	r3, 800a968 <xQueueGenericSend+0x38>
 800a956:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a95a:	f383 8811 	msr	BASEPRI, r3
 800a95e:	f3bf 8f6f 	isb	sy
 800a962:	f3bf 8f4f 	dsb	sy
 800a966:	e7fe      	b.n	800a966 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a968:	2f02      	cmp	r7, #2
 800a96a:	d10b      	bne.n	800a984 <xQueueGenericSend+0x54>
 800a96c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a96e:	2b01      	cmp	r3, #1
 800a970:	d008      	beq.n	800a984 <xQueueGenericSend+0x54>
 800a972:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a976:	f383 8811 	msr	BASEPRI, r3
 800a97a:	f3bf 8f6f 	isb	sy
 800a97e:	f3bf 8f4f 	dsb	sy
 800a982:	e7fe      	b.n	800a982 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a984:	f000 fff6 	bl	800b974 <xTaskGetSchedulerState>
 800a988:	4606      	mov	r6, r0
 800a98a:	b950      	cbnz	r0, 800a9a2 <xQueueGenericSend+0x72>
 800a98c:	9b01      	ldr	r3, [sp, #4]
 800a98e:	b14b      	cbz	r3, 800a9a4 <xQueueGenericSend+0x74>
 800a990:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a994:	f383 8811 	msr	BASEPRI, r3
 800a998:	f3bf 8f6f 	isb	sy
 800a99c:	f3bf 8f4f 	dsb	sy
 800a9a0:	e7fe      	b.n	800a9a0 <xQueueGenericSend+0x70>
 800a9a2:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800a9a4:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800aa90 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 800a9a8:	f04f 0900 	mov.w	r9, #0
 800a9ac:	e037      	b.n	800aa1e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a9ae:	9d01      	ldr	r5, [sp, #4]
 800a9b0:	b91d      	cbnz	r5, 800a9ba <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 800a9b2:	f7ff fd11 	bl	800a3d8 <vPortExitCritical>
			return errQUEUE_FULL;
 800a9b6:	2000      	movs	r0, #0
 800a9b8:	e050      	b.n	800aa5c <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800a9ba:	b916      	cbnz	r6, 800a9c2 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a9bc:	a802      	add	r0, sp, #8
 800a9be:	f000 ff8b 	bl	800b8d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a9c2:	f7ff fd09 	bl	800a3d8 <vPortExitCritical>
		vTaskSuspendAll();
 800a9c6:	f000 fd19 	bl	800b3fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a9ca:	f7ff fce3 	bl	800a394 <vPortEnterCritical>
 800a9ce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a9d2:	2bff      	cmp	r3, #255	; 0xff
 800a9d4:	bf08      	it	eq
 800a9d6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800a9da:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a9de:	2bff      	cmp	r3, #255	; 0xff
 800a9e0:	bf08      	it	eq
 800a9e2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800a9e6:	f7ff fcf7 	bl	800a3d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a9ea:	a901      	add	r1, sp, #4
 800a9ec:	a802      	add	r0, sp, #8
 800a9ee:	f000 ff7f 	bl	800b8f0 <xTaskCheckForTimeOut>
 800a9f2:	2800      	cmp	r0, #0
 800a9f4:	d146      	bne.n	800aa84 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a9f6:	f7ff fccd 	bl	800a394 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a9fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a9fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a9fe:	429a      	cmp	r2, r3
 800aa00:	d12f      	bne.n	800aa62 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800aa02:	f7ff fce9 	bl	800a3d8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800aa06:	9901      	ldr	r1, [sp, #4]
 800aa08:	f104 0010 	add.w	r0, r4, #16
 800aa0c:	f000 fee8 	bl	800b7e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800aa10:	4620      	mov	r0, r4
 800aa12:	f7ff fe5f 	bl	800a6d4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800aa16:	f000 fd95 	bl	800b544 <xTaskResumeAll>
 800aa1a:	b350      	cbz	r0, 800aa72 <xQueueGenericSend+0x142>
 800aa1c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800aa1e:	f7ff fcb9 	bl	800a394 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800aa22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800aa24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aa26:	429a      	cmp	r2, r3
 800aa28:	d301      	bcc.n	800aa2e <xQueueGenericSend+0xfe>
 800aa2a:	2f02      	cmp	r7, #2
 800aa2c:	d1bf      	bne.n	800a9ae <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800aa2e:	463a      	mov	r2, r7
 800aa30:	4641      	mov	r1, r8
 800aa32:	4620      	mov	r0, r4
 800aa34:	f7ff fe03 	bl	800a63e <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800aa38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aa3a:	b11b      	cbz	r3, 800aa44 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800aa3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aa40:	f000 ff06 	bl	800b850 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800aa44:	b138      	cbz	r0, 800aa56 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 800aa46:	4b12      	ldr	r3, [pc, #72]	; (800aa90 <xQueueGenericSend+0x160>)
 800aa48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800aa4c:	601a      	str	r2, [r3, #0]
 800aa4e:	f3bf 8f4f 	dsb	sy
 800aa52:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800aa56:	f7ff fcbf 	bl	800a3d8 <vPortExitCritical>
				return pdPASS;
 800aa5a:	2001      	movs	r0, #1
}
 800aa5c:	b004      	add	sp, #16
 800aa5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 800aa62:	f7ff fcb9 	bl	800a3d8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800aa66:	4620      	mov	r0, r4
 800aa68:	f7ff fe34 	bl	800a6d4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800aa6c:	f000 fd6a 	bl	800b544 <xTaskResumeAll>
 800aa70:	e7d4      	b.n	800aa1c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 800aa72:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800aa76:	f8ca 3000 	str.w	r3, [sl]
 800aa7a:	f3bf 8f4f 	dsb	sy
 800aa7e:	f3bf 8f6f 	isb	sy
 800aa82:	e7cb      	b.n	800aa1c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 800aa84:	4620      	mov	r0, r4
 800aa86:	f7ff fe25 	bl	800a6d4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800aa8a:	f000 fd5b 	bl	800b544 <xTaskResumeAll>
 800aa8e:	e792      	b.n	800a9b6 <xQueueGenericSend+0x86>
 800aa90:	e000ed04 	.word	0xe000ed04

0800aa94 <xQueueGenericSendFromISR>:
{
 800aa94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aa98:	4689      	mov	r9, r1
 800aa9a:	4690      	mov	r8, r2
 800aa9c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800aa9e:	4604      	mov	r4, r0
 800aaa0:	b940      	cbnz	r0, 800aab4 <xQueueGenericSendFromISR+0x20>
 800aaa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaa6:	f383 8811 	msr	BASEPRI, r3
 800aaaa:	f3bf 8f6f 	isb	sy
 800aaae:	f3bf 8f4f 	dsb	sy
 800aab2:	e7fe      	b.n	800aab2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800aab4:	b951      	cbnz	r1, 800aacc <xQueueGenericSendFromISR+0x38>
 800aab6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aab8:	b143      	cbz	r3, 800aacc <xQueueGenericSendFromISR+0x38>
 800aaba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aabe:	f383 8811 	msr	BASEPRI, r3
 800aac2:	f3bf 8f6f 	isb	sy
 800aac6:	f3bf 8f4f 	dsb	sy
 800aaca:	e7fe      	b.n	800aaca <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800aacc:	2f02      	cmp	r7, #2
 800aace:	d10b      	bne.n	800aae8 <xQueueGenericSendFromISR+0x54>
 800aad0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aad2:	2b01      	cmp	r3, #1
 800aad4:	d008      	beq.n	800aae8 <xQueueGenericSendFromISR+0x54>
 800aad6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aada:	f383 8811 	msr	BASEPRI, r3
 800aade:	f3bf 8f6f 	isb	sy
 800aae2:	f3bf 8f4f 	dsb	sy
 800aae6:	e7fe      	b.n	800aae6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800aae8:	f7ff fd70 	bl	800a5cc <vPortValidateInterruptPriority>
	__asm volatile
 800aaec:	f3ef 8611 	mrs	r6, BASEPRI
 800aaf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaf4:	f383 8811 	msr	BASEPRI, r3
 800aaf8:	f3bf 8f6f 	isb	sy
 800aafc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ab00:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ab02:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ab04:	429a      	cmp	r2, r3
 800ab06:	d301      	bcc.n	800ab0c <xQueueGenericSendFromISR+0x78>
 800ab08:	2f02      	cmp	r7, #2
 800ab0a:	d123      	bne.n	800ab54 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ab0c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ab10:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ab12:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ab14:	463a      	mov	r2, r7
 800ab16:	4649      	mov	r1, r9
 800ab18:	4620      	mov	r0, r4
 800ab1a:	f7ff fd90 	bl	800a63e <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ab1e:	1c6b      	adds	r3, r5, #1
 800ab20:	d113      	bne.n	800ab4a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ab22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ab24:	b90b      	cbnz	r3, 800ab2a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800ab26:	2001      	movs	r0, #1
 800ab28:	e00b      	b.n	800ab42 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ab2a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ab2e:	f000 fe8f 	bl	800b850 <xTaskRemoveFromEventList>
 800ab32:	2800      	cmp	r0, #0
 800ab34:	d0f7      	beq.n	800ab26 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ab36:	f1b8 0f00 	cmp.w	r8, #0
 800ab3a:	d0f4      	beq.n	800ab26 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ab3c:	2001      	movs	r0, #1
 800ab3e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ab42:	f386 8811 	msr	BASEPRI, r6
}
 800ab46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ab4a:	3501      	adds	r5, #1
 800ab4c:	b26d      	sxtb	r5, r5
 800ab4e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800ab52:	e7e8      	b.n	800ab26 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800ab54:	2000      	movs	r0, #0
 800ab56:	e7f4      	b.n	800ab42 <xQueueGenericSendFromISR+0xae>

0800ab58 <xQueueGiveFromISR>:
{
 800ab58:	b570      	push	{r4, r5, r6, lr}
 800ab5a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ab5c:	4604      	mov	r4, r0
 800ab5e:	b940      	cbnz	r0, 800ab72 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ab60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab64:	f383 8811 	msr	BASEPRI, r3
 800ab68:	f3bf 8f6f 	isb	sy
 800ab6c:	f3bf 8f4f 	dsb	sy
 800ab70:	e7fe      	b.n	800ab70 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ab72:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ab74:	b143      	cbz	r3, 800ab88 <xQueueGiveFromISR+0x30>
 800ab76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab7a:	f383 8811 	msr	BASEPRI, r3
 800ab7e:	f3bf 8f6f 	isb	sy
 800ab82:	f3bf 8f4f 	dsb	sy
 800ab86:	e7fe      	b.n	800ab86 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ab88:	6803      	ldr	r3, [r0, #0]
 800ab8a:	b953      	cbnz	r3, 800aba2 <xQueueGiveFromISR+0x4a>
 800ab8c:	6883      	ldr	r3, [r0, #8]
 800ab8e:	b143      	cbz	r3, 800aba2 <xQueueGiveFromISR+0x4a>
 800ab90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab94:	f383 8811 	msr	BASEPRI, r3
 800ab98:	f3bf 8f6f 	isb	sy
 800ab9c:	f3bf 8f4f 	dsb	sy
 800aba0:	e7fe      	b.n	800aba0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800aba2:	f7ff fd13 	bl	800a5cc <vPortValidateInterruptPriority>
	__asm volatile
 800aba6:	f3ef 8611 	mrs	r6, BASEPRI
 800abaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abae:	f383 8811 	msr	BASEPRI, r3
 800abb2:	f3bf 8f6f 	isb	sy
 800abb6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800abba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800abbc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800abbe:	4293      	cmp	r3, r2
 800abc0:	d91c      	bls.n	800abfc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800abc2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800abc6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800abc8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800abca:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800abcc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800abce:	d110      	bne.n	800abf2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800abd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800abd2:	b90b      	cbnz	r3, 800abd8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800abd4:	2001      	movs	r0, #1
 800abd6:	e009      	b.n	800abec <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800abd8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800abdc:	f000 fe38 	bl	800b850 <xTaskRemoveFromEventList>
 800abe0:	2800      	cmp	r0, #0
 800abe2:	d0f7      	beq.n	800abd4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800abe4:	2d00      	cmp	r5, #0
 800abe6:	d0f5      	beq.n	800abd4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800abe8:	2001      	movs	r0, #1
 800abea:	6028      	str	r0, [r5, #0]
	__asm volatile
 800abec:	f386 8811 	msr	BASEPRI, r6
}
 800abf0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800abf2:	3301      	adds	r3, #1
 800abf4:	b25b      	sxtb	r3, r3
 800abf6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800abfa:	e7eb      	b.n	800abd4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800abfc:	2000      	movs	r0, #0
 800abfe:	e7f5      	b.n	800abec <xQueueGiveFromISR+0x94>

0800ac00 <xQueueReceive>:
{
 800ac00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ac04:	b085      	sub	sp, #20
 800ac06:	460f      	mov	r7, r1
 800ac08:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ac0a:	4604      	mov	r4, r0
 800ac0c:	b940      	cbnz	r0, 800ac20 <xQueueReceive+0x20>
	__asm volatile
 800ac0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac12:	f383 8811 	msr	BASEPRI, r3
 800ac16:	f3bf 8f6f 	isb	sy
 800ac1a:	f3bf 8f4f 	dsb	sy
 800ac1e:	e7fe      	b.n	800ac1e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ac20:	b951      	cbnz	r1, 800ac38 <xQueueReceive+0x38>
 800ac22:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ac24:	b143      	cbz	r3, 800ac38 <xQueueReceive+0x38>
 800ac26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac2a:	f383 8811 	msr	BASEPRI, r3
 800ac2e:	f3bf 8f6f 	isb	sy
 800ac32:	f3bf 8f4f 	dsb	sy
 800ac36:	e7fe      	b.n	800ac36 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ac38:	f000 fe9c 	bl	800b974 <xTaskGetSchedulerState>
 800ac3c:	4606      	mov	r6, r0
 800ac3e:	b950      	cbnz	r0, 800ac56 <xQueueReceive+0x56>
 800ac40:	9b01      	ldr	r3, [sp, #4]
 800ac42:	b14b      	cbz	r3, 800ac58 <xQueueReceive+0x58>
 800ac44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac48:	f383 8811 	msr	BASEPRI, r3
 800ac4c:	f3bf 8f6f 	isb	sy
 800ac50:	f3bf 8f4f 	dsb	sy
 800ac54:	e7fe      	b.n	800ac54 <xQueueReceive+0x54>
 800ac56:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800ac58:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800ad3c <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800ac5c:	f04f 0800 	mov.w	r8, #0
 800ac60:	e03b      	b.n	800acda <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ac62:	9d01      	ldr	r5, [sp, #4]
 800ac64:	b91d      	cbnz	r5, 800ac6e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 800ac66:	f7ff fbb7 	bl	800a3d8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800ac6a:	2000      	movs	r0, #0
 800ac6c:	e052      	b.n	800ad14 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800ac6e:	b916      	cbnz	r6, 800ac76 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ac70:	a802      	add	r0, sp, #8
 800ac72:	f000 fe31 	bl	800b8d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ac76:	f7ff fbaf 	bl	800a3d8 <vPortExitCritical>
		vTaskSuspendAll();
 800ac7a:	f000 fbbf 	bl	800b3fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ac7e:	f7ff fb89 	bl	800a394 <vPortEnterCritical>
 800ac82:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ac86:	2bff      	cmp	r3, #255	; 0xff
 800ac88:	bf08      	it	eq
 800ac8a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800ac8e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ac92:	2bff      	cmp	r3, #255	; 0xff
 800ac94:	bf08      	it	eq
 800ac96:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800ac9a:	f7ff fb9d 	bl	800a3d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ac9e:	a901      	add	r1, sp, #4
 800aca0:	a802      	add	r0, sp, #8
 800aca2:	f000 fe25 	bl	800b8f0 <xTaskCheckForTimeOut>
 800aca6:	2800      	cmp	r0, #0
 800aca8:	d13d      	bne.n	800ad26 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800acaa:	4620      	mov	r0, r4
 800acac:	f7ff fcbc 	bl	800a628 <prvIsQueueEmpty>
 800acb0:	b398      	cbz	r0, 800ad1a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800acb2:	9901      	ldr	r1, [sp, #4]
 800acb4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800acb8:	f000 fd92 	bl	800b7e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800acbc:	4620      	mov	r0, r4
 800acbe:	f7ff fd09 	bl	800a6d4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800acc2:	f000 fc3f 	bl	800b544 <xTaskResumeAll>
 800acc6:	b938      	cbnz	r0, 800acd8 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 800acc8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800accc:	f8c9 3000 	str.w	r3, [r9]
 800acd0:	f3bf 8f4f 	dsb	sy
 800acd4:	f3bf 8f6f 	isb	sy
 800acd8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800acda:	f7ff fb5b 	bl	800a394 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800acde:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ace0:	2d00      	cmp	r5, #0
 800ace2:	d0be      	beq.n	800ac62 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ace4:	4639      	mov	r1, r7
 800ace6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ace8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800acea:	f7ff fcdd 	bl	800a6a8 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800acee:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800acf0:	6923      	ldr	r3, [r4, #16]
 800acf2:	b163      	cbz	r3, 800ad0e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800acf4:	f104 0010 	add.w	r0, r4, #16
 800acf8:	f000 fdaa 	bl	800b850 <xTaskRemoveFromEventList>
 800acfc:	b138      	cbz	r0, 800ad0e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800acfe:	4b0f      	ldr	r3, [pc, #60]	; (800ad3c <xQueueReceive+0x13c>)
 800ad00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ad04:	601a      	str	r2, [r3, #0]
 800ad06:	f3bf 8f4f 	dsb	sy
 800ad0a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ad0e:	f7ff fb63 	bl	800a3d8 <vPortExitCritical>
				return pdPASS;
 800ad12:	2001      	movs	r0, #1
}
 800ad14:	b005      	add	sp, #20
 800ad16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800ad1a:	4620      	mov	r0, r4
 800ad1c:	f7ff fcda 	bl	800a6d4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ad20:	f000 fc10 	bl	800b544 <xTaskResumeAll>
 800ad24:	e7d8      	b.n	800acd8 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 800ad26:	4620      	mov	r0, r4
 800ad28:	f7ff fcd4 	bl	800a6d4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ad2c:	f000 fc0a 	bl	800b544 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ad30:	4620      	mov	r0, r4
 800ad32:	f7ff fc79 	bl	800a628 <prvIsQueueEmpty>
 800ad36:	2800      	cmp	r0, #0
 800ad38:	d0ce      	beq.n	800acd8 <xQueueReceive+0xd8>
 800ad3a:	e796      	b.n	800ac6a <xQueueReceive+0x6a>
 800ad3c:	e000ed04 	.word	0xe000ed04

0800ad40 <xQueueSemaphoreTake>:
{
 800ad40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 800ad44:	4604      	mov	r4, r0
{
 800ad46:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ad48:	b940      	cbnz	r0, 800ad5c <xQueueSemaphoreTake+0x1c>
 800ad4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad4e:	f383 8811 	msr	BASEPRI, r3
 800ad52:	f3bf 8f6f 	isb	sy
 800ad56:	f3bf 8f4f 	dsb	sy
 800ad5a:	e7fe      	b.n	800ad5a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ad5c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800ad5e:	b145      	cbz	r5, 800ad72 <xQueueSemaphoreTake+0x32>
 800ad60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad64:	f383 8811 	msr	BASEPRI, r3
 800ad68:	f3bf 8f6f 	isb	sy
 800ad6c:	f3bf 8f4f 	dsb	sy
 800ad70:	e7fe      	b.n	800ad70 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ad72:	f000 fdff 	bl	800b974 <xTaskGetSchedulerState>
 800ad76:	4606      	mov	r6, r0
 800ad78:	b950      	cbnz	r0, 800ad90 <xQueueSemaphoreTake+0x50>
 800ad7a:	9b01      	ldr	r3, [sp, #4]
 800ad7c:	b16b      	cbz	r3, 800ad9a <xQueueSemaphoreTake+0x5a>
 800ad7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad82:	f383 8811 	msr	BASEPRI, r3
 800ad86:	f3bf 8f6f 	isb	sy
 800ad8a:	f3bf 8f4f 	dsb	sy
 800ad8e:	e7fe      	b.n	800ad8e <xQueueSemaphoreTake+0x4e>
 800ad90:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 800ad92:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800aec4 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 800ad96:	2700      	movs	r7, #0
 800ad98:	e051      	b.n	800ae3e <xQueueSemaphoreTake+0xfe>
 800ad9a:	4605      	mov	r5, r0
 800ad9c:	e7f9      	b.n	800ad92 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ad9e:	9b01      	ldr	r3, [sp, #4]
 800ada0:	b963      	cbnz	r3, 800adbc <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ada2:	b145      	cbz	r5, 800adb6 <xQueueSemaphoreTake+0x76>
 800ada4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ada8:	f383 8811 	msr	BASEPRI, r3
 800adac:	f3bf 8f6f 	isb	sy
 800adb0:	f3bf 8f4f 	dsb	sy
 800adb4:	e7fe      	b.n	800adb4 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 800adb6:	f7ff fb0f 	bl	800a3d8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800adba:	e05e      	b.n	800ae7a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800adbc:	b916      	cbnz	r6, 800adc4 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800adbe:	a802      	add	r0, sp, #8
 800adc0:	f000 fd8a 	bl	800b8d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800adc4:	f7ff fb08 	bl	800a3d8 <vPortExitCritical>
		vTaskSuspendAll();
 800adc8:	f000 fb18 	bl	800b3fc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800adcc:	f7ff fae2 	bl	800a394 <vPortEnterCritical>
 800add0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800add4:	2bff      	cmp	r3, #255	; 0xff
 800add6:	bf08      	it	eq
 800add8:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800addc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ade0:	2bff      	cmp	r3, #255	; 0xff
 800ade2:	bf08      	it	eq
 800ade4:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800ade8:	f7ff faf6 	bl	800a3d8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800adec:	a901      	add	r1, sp, #4
 800adee:	a802      	add	r0, sp, #8
 800adf0:	f000 fd7e 	bl	800b8f0 <xTaskCheckForTimeOut>
 800adf4:	2800      	cmp	r0, #0
 800adf6:	d14a      	bne.n	800ae8e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800adf8:	4620      	mov	r0, r4
 800adfa:	f7ff fc15 	bl	800a628 <prvIsQueueEmpty>
 800adfe:	2800      	cmp	r0, #0
 800ae00:	d03f      	beq.n	800ae82 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ae02:	6823      	ldr	r3, [r4, #0]
 800ae04:	b93b      	cbnz	r3, 800ae16 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 800ae06:	f7ff fac5 	bl	800a394 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ae0a:	68a0      	ldr	r0, [r4, #8]
 800ae0c:	f000 fdc2 	bl	800b994 <xTaskPriorityInherit>
 800ae10:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800ae12:	f7ff fae1 	bl	800a3d8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ae16:	9901      	ldr	r1, [sp, #4]
 800ae18:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ae1c:	f000 fce0 	bl	800b7e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ae20:	4620      	mov	r0, r4
 800ae22:	f7ff fc57 	bl	800a6d4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ae26:	f000 fb8d 	bl	800b544 <xTaskResumeAll>
 800ae2a:	b938      	cbnz	r0, 800ae3c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800ae2c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800ae30:	f8c8 3000 	str.w	r3, [r8]
 800ae34:	f3bf 8f4f 	dsb	sy
 800ae38:	f3bf 8f6f 	isb	sy
 800ae3c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800ae3e:	f7ff faa9 	bl	800a394 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ae42:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ae44:	2b00      	cmp	r3, #0
 800ae46:	d0aa      	beq.n	800ad9e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ae48:	3b01      	subs	r3, #1
 800ae4a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ae4c:	6823      	ldr	r3, [r4, #0]
 800ae4e:	b913      	cbnz	r3, 800ae56 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ae50:	f000 fe78 	bl	800bb44 <pvTaskIncrementMutexHeldCount>
 800ae54:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ae56:	6923      	ldr	r3, [r4, #16]
 800ae58:	b163      	cbz	r3, 800ae74 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ae5a:	f104 0010 	add.w	r0, r4, #16
 800ae5e:	f000 fcf7 	bl	800b850 <xTaskRemoveFromEventList>
 800ae62:	b138      	cbz	r0, 800ae74 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 800ae64:	4b17      	ldr	r3, [pc, #92]	; (800aec4 <xQueueSemaphoreTake+0x184>)
 800ae66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ae6a:	601a      	str	r2, [r3, #0]
 800ae6c:	f3bf 8f4f 	dsb	sy
 800ae70:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ae74:	f7ff fab0 	bl	800a3d8 <vPortExitCritical>
				return pdPASS;
 800ae78:	2501      	movs	r5, #1
}
 800ae7a:	4628      	mov	r0, r5
 800ae7c:	b004      	add	sp, #16
 800ae7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800ae82:	4620      	mov	r0, r4
 800ae84:	f7ff fc26 	bl	800a6d4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ae88:	f000 fb5c 	bl	800b544 <xTaskResumeAll>
 800ae8c:	e7d6      	b.n	800ae3c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800ae8e:	4620      	mov	r0, r4
 800ae90:	f7ff fc20 	bl	800a6d4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ae94:	f000 fb56 	bl	800b544 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ae98:	4620      	mov	r0, r4
 800ae9a:	f7ff fbc5 	bl	800a628 <prvIsQueueEmpty>
 800ae9e:	2800      	cmp	r0, #0
 800aea0:	d0cc      	beq.n	800ae3c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800aea2:	2d00      	cmp	r5, #0
 800aea4:	d0e9      	beq.n	800ae7a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 800aea6:	f7ff fa75 	bl	800a394 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800aeaa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800aeac:	b119      	cbz	r1, 800aeb6 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800aeae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aeb0:	6819      	ldr	r1, [r3, #0]
 800aeb2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800aeb6:	68a0      	ldr	r0, [r4, #8]
 800aeb8:	f000 fdf2 	bl	800baa0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800aebc:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800aebe:	f7ff fa8b 	bl	800a3d8 <vPortExitCritical>
 800aec2:	e7da      	b.n	800ae7a <xQueueSemaphoreTake+0x13a>
 800aec4:	e000ed04 	.word	0xe000ed04

0800aec8 <xQueueReceiveFromISR>:
{
 800aec8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aecc:	4689      	mov	r9, r1
 800aece:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800aed0:	4605      	mov	r5, r0
 800aed2:	b940      	cbnz	r0, 800aee6 <xQueueReceiveFromISR+0x1e>
 800aed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aed8:	f383 8811 	msr	BASEPRI, r3
 800aedc:	f3bf 8f6f 	isb	sy
 800aee0:	f3bf 8f4f 	dsb	sy
 800aee4:	e7fe      	b.n	800aee4 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800aee6:	b951      	cbnz	r1, 800aefe <xQueueReceiveFromISR+0x36>
 800aee8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aeea:	b143      	cbz	r3, 800aefe <xQueueReceiveFromISR+0x36>
 800aeec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aef0:	f383 8811 	msr	BASEPRI, r3
 800aef4:	f3bf 8f6f 	isb	sy
 800aef8:	f3bf 8f4f 	dsb	sy
 800aefc:	e7fe      	b.n	800aefc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800aefe:	f7ff fb65 	bl	800a5cc <vPortValidateInterruptPriority>
	__asm volatile
 800af02:	f3ef 8711 	mrs	r7, BASEPRI
 800af06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af0a:	f383 8811 	msr	BASEPRI, r3
 800af0e:	f3bf 8f6f 	isb	sy
 800af12:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800af16:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800af18:	b31c      	cbz	r4, 800af62 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800af1a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800af1e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800af20:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800af22:	4628      	mov	r0, r5
 800af24:	f7ff fbc0 	bl	800a6a8 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800af28:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800af2a:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800af2c:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800af2e:	d113      	bne.n	800af58 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800af30:	692b      	ldr	r3, [r5, #16]
 800af32:	b90b      	cbnz	r3, 800af38 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800af34:	2001      	movs	r0, #1
 800af36:	e00b      	b.n	800af50 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800af38:	f105 0010 	add.w	r0, r5, #16
 800af3c:	f000 fc88 	bl	800b850 <xTaskRemoveFromEventList>
 800af40:	2800      	cmp	r0, #0
 800af42:	d0f7      	beq.n	800af34 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800af44:	f1b8 0f00 	cmp.w	r8, #0
 800af48:	d0f4      	beq.n	800af34 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800af4a:	2001      	movs	r0, #1
 800af4c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800af50:	f387 8811 	msr	BASEPRI, r7
}
 800af54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800af58:	3601      	adds	r6, #1
 800af5a:	b276      	sxtb	r6, r6
 800af5c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800af60:	e7e8      	b.n	800af34 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800af62:	4620      	mov	r0, r4
 800af64:	e7f4      	b.n	800af50 <xQueueReceiveFromISR+0x88>
	...

0800af68 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800af68:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800af6a:	4a07      	ldr	r2, [pc, #28]	; (800af88 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800af6c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800af6e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800af72:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800af76:	b91d      	cbnz	r5, 800af80 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800af78:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800af7c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800af7e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800af80:	3301      	adds	r3, #1
 800af82:	2b08      	cmp	r3, #8
 800af84:	d1f3      	bne.n	800af6e <vQueueAddToRegistry+0x6>
 800af86:	e7fa      	b.n	800af7e <vQueueAddToRegistry+0x16>
 800af88:	2000f074 	.word	0x2000f074

0800af8c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800af8c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800af8e:	4909      	ldr	r1, [pc, #36]	; (800afb4 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800af90:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800af92:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 800af96:	4282      	cmp	r2, r0
 800af98:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800af9c:	d106      	bne.n	800afac <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800af9e:	4a06      	ldr	r2, [pc, #24]	; (800afb8 <vQueueUnregisterQueue+0x2c>)
 800afa0:	2100      	movs	r1, #0
 800afa2:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800afa6:	4422      	add	r2, r4
 800afa8:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800afaa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800afac:	3301      	adds	r3, #1
 800afae:	2b08      	cmp	r3, #8
 800afb0:	d1ef      	bne.n	800af92 <vQueueUnregisterQueue+0x6>
 800afb2:	e7fa      	b.n	800afaa <vQueueUnregisterQueue+0x1e>
 800afb4:	2000f078 	.word	0x2000f078
 800afb8:	2000f074 	.word	0x2000f074

0800afbc <vQueueDelete>:
{
 800afbc:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800afbe:	b940      	cbnz	r0, 800afd2 <vQueueDelete+0x16>
	__asm volatile
 800afc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afc4:	f383 8811 	msr	BASEPRI, r3
 800afc8:	f3bf 8f6f 	isb	sy
 800afcc:	f3bf 8f4f 	dsb	sy
 800afd0:	e7fe      	b.n	800afd0 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800afd2:	f7ff ffdb 	bl	800af8c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800afd6:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800afda:	b91b      	cbnz	r3, 800afe4 <vQueueDelete+0x28>
}
 800afdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800afe0:	f7ff b8f0 	b.w	800a1c4 <vPortFree>
}
 800afe4:	bd10      	pop	{r4, pc}

0800afe6 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800afe6:	b570      	push	{r4, r5, r6, lr}
 800afe8:	4604      	mov	r4, r0
 800afea:	460d      	mov	r5, r1
 800afec:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800afee:	f7ff f9d1 	bl	800a394 <vPortEnterCritical>
 800aff2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800aff6:	2bff      	cmp	r3, #255	; 0xff
 800aff8:	bf04      	itt	eq
 800affa:	2300      	moveq	r3, #0
 800affc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800b000:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b004:	2bff      	cmp	r3, #255	; 0xff
 800b006:	bf04      	itt	eq
 800b008:	2300      	moveq	r3, #0
 800b00a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800b00e:	f7ff f9e3 	bl	800a3d8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800b012:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b014:	b92b      	cbnz	r3, 800b022 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800b016:	4632      	mov	r2, r6
 800b018:	4629      	mov	r1, r5
 800b01a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b01e:	f000 fbf9 	bl	800b814 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800b022:	4620      	mov	r0, r4
	}
 800b024:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800b028:	f7ff bb54 	b.w	800a6d4 <prvUnlockQueue>

0800b02c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800b02c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b030:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800b032:	f7ff f9af 	bl	800a394 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800b036:	4b2f      	ldr	r3, [pc, #188]	; (800b0f4 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800b038:	4d2f      	ldr	r5, [pc, #188]	; (800b0f8 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800b03a:	681a      	ldr	r2, [r3, #0]
 800b03c:	4f2f      	ldr	r7, [pc, #188]	; (800b0fc <prvAddNewTaskToReadyList+0xd0>)
 800b03e:	3201      	adds	r2, #1
 800b040:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800b042:	682e      	ldr	r6, [r5, #0]
 800b044:	2e00      	cmp	r6, #0
 800b046:	d149      	bne.n	800b0dc <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800b048:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	2b01      	cmp	r3, #1
 800b04e:	d11f      	bne.n	800b090 <prvAddNewTaskToReadyList+0x64>
 800b050:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b052:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b054:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b056:	f7ff f8f3 	bl	800a240 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b05a:	2e38      	cmp	r6, #56	; 0x38
 800b05c:	f108 0814 	add.w	r8, r8, #20
 800b060:	d1f7      	bne.n	800b052 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800b062:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800b128 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800b066:	4e26      	ldr	r6, [pc, #152]	; (800b100 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800b068:	4640      	mov	r0, r8
 800b06a:	f7ff f8e9 	bl	800a240 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800b06e:	4630      	mov	r0, r6
 800b070:	f7ff f8e6 	bl	800a240 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800b074:	4823      	ldr	r0, [pc, #140]	; (800b104 <prvAddNewTaskToReadyList+0xd8>)
 800b076:	f7ff f8e3 	bl	800a240 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800b07a:	4823      	ldr	r0, [pc, #140]	; (800b108 <prvAddNewTaskToReadyList+0xdc>)
 800b07c:	f7ff f8e0 	bl	800a240 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800b080:	4822      	ldr	r0, [pc, #136]	; (800b10c <prvAddNewTaskToReadyList+0xe0>)
 800b082:	f7ff f8dd 	bl	800a240 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800b086:	4b22      	ldr	r3, [pc, #136]	; (800b110 <prvAddNewTaskToReadyList+0xe4>)
 800b088:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800b08c:	4b21      	ldr	r3, [pc, #132]	; (800b114 <prvAddNewTaskToReadyList+0xe8>)
 800b08e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 800b090:	4a21      	ldr	r2, [pc, #132]	; (800b118 <prvAddNewTaskToReadyList+0xec>)
 800b092:	6813      	ldr	r3, [r2, #0]
 800b094:	3301      	adds	r3, #1
 800b096:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800b098:	4a20      	ldr	r2, [pc, #128]	; (800b11c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800b09a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800b09c:	6811      	ldr	r1, [r2, #0]
 800b09e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b0a0:	2014      	movs	r0, #20
 800b0a2:	428b      	cmp	r3, r1
 800b0a4:	fb00 7003 	mla	r0, r0, r3, r7
 800b0a8:	f104 0104 	add.w	r1, r4, #4
 800b0ac:	bf88      	it	hi
 800b0ae:	6013      	strhi	r3, [r2, #0]
 800b0b0:	f7ff f8d4 	bl	800a25c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800b0b4:	f7ff f990 	bl	800a3d8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800b0b8:	4b19      	ldr	r3, [pc, #100]	; (800b120 <prvAddNewTaskToReadyList+0xf4>)
 800b0ba:	681b      	ldr	r3, [r3, #0]
 800b0bc:	b163      	cbz	r3, 800b0d8 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800b0be:	682b      	ldr	r3, [r5, #0]
 800b0c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b0c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b0c4:	429a      	cmp	r2, r3
 800b0c6:	d207      	bcs.n	800b0d8 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 800b0c8:	4b16      	ldr	r3, [pc, #88]	; (800b124 <prvAddNewTaskToReadyList+0xf8>)
 800b0ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b0ce:	601a      	str	r2, [r3, #0]
 800b0d0:	f3bf 8f4f 	dsb	sy
 800b0d4:	f3bf 8f6f 	isb	sy
}
 800b0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800b0dc:	4b10      	ldr	r3, [pc, #64]	; (800b120 <prvAddNewTaskToReadyList+0xf4>)
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	2b00      	cmp	r3, #0
 800b0e2:	d1d5      	bne.n	800b090 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800b0e4:	682b      	ldr	r3, [r5, #0]
 800b0e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b0e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b0ea:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800b0ec:	bf98      	it	ls
 800b0ee:	602c      	strls	r4, [r5, #0]
 800b0f0:	e7ce      	b.n	800b090 <prvAddNewTaskToReadyList+0x64>
 800b0f2:	bf00      	nop
 800b0f4:	2000e948 	.word	0x2000e948
 800b0f8:	2000e4dc 	.word	0x2000e4dc
 800b0fc:	2000e4e8 	.word	0x2000e4e8
 800b100:	2000e970 	.word	0x2000e970
 800b104:	2000e990 	.word	0x2000e990
 800b108:	2000e9bc 	.word	0x2000e9bc
 800b10c:	2000e9a8 	.word	0x2000e9a8
 800b110:	2000e4e0 	.word	0x2000e4e0
 800b114:	2000e4e4 	.word	0x2000e4e4
 800b118:	2000e954 	.word	0x2000e954
 800b11c:	2000e958 	.word	0x2000e958
 800b120:	2000e9a4 	.word	0x2000e9a4
 800b124:	e000ed04 	.word	0xe000ed04
 800b128:	2000e95c 	.word	0x2000e95c

0800b12c <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b12c:	4a06      	ldr	r2, [pc, #24]	; (800b148 <prvResetNextTaskUnblockTime+0x1c>)
 800b12e:	6813      	ldr	r3, [r2, #0]
 800b130:	6819      	ldr	r1, [r3, #0]
 800b132:	4b06      	ldr	r3, [pc, #24]	; (800b14c <prvResetNextTaskUnblockTime+0x20>)
 800b134:	b919      	cbnz	r1, 800b13e <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800b136:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b13a:	601a      	str	r2, [r3, #0]
	}
}
 800b13c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b13e:	6812      	ldr	r2, [r2, #0]
 800b140:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b142:	68d2      	ldr	r2, [r2, #12]
 800b144:	6852      	ldr	r2, [r2, #4]
 800b146:	e7f8      	b.n	800b13a <prvResetNextTaskUnblockTime+0xe>
 800b148:	2000e4e0 	.word	0x2000e4e0
 800b14c:	2000e984 	.word	0x2000e984

0800b150 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b150:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b154:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b158:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800b15c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b15e:	4606      	mov	r6, r0
 800b160:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b162:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b164:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b166:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b168:	f015 fff0 	bl	802114c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b16c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b16e:	f1a9 0904 	sub.w	r9, r9, #4
 800b172:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b174:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800b178:	2d00      	cmp	r5, #0
 800b17a:	d043      	beq.n	800b204 <prvInitialiseNewTask.isra.0+0xb4>
 800b17c:	1e6b      	subs	r3, r5, #1
 800b17e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800b182:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b184:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b188:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800b18c:	7819      	ldrb	r1, [r3, #0]
 800b18e:	b109      	cbz	r1, 800b194 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b190:	42ab      	cmp	r3, r5
 800b192:	d1f7      	bne.n	800b184 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b194:	2300      	movs	r3, #0
 800b196:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b19a:	9d08      	ldr	r5, [sp, #32]
 800b19c:	2d37      	cmp	r5, #55	; 0x37
 800b19e:	bf28      	it	cs
 800b1a0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b1a2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800b1a6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b1a8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b1aa:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800b1ac:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b1b0:	f7ff f851 	bl	800a256 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b1b4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b1b8:	f104 0018 	add.w	r0, r4, #24
 800b1bc:	f7ff f84b 	bl	800a256 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b1c0:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800b1c4:	2260      	movs	r2, #96	; 0x60
 800b1c6:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b1c8:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b1ca:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b1cc:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b1ce:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b1d2:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800b1d6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b1da:	f015 ffb7 	bl	802114c <memset>
 800b1de:	4b0b      	ldr	r3, [pc, #44]	; (800b20c <prvInitialiseNewTask.isra.0+0xbc>)
 800b1e0:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b1e2:	4b0b      	ldr	r3, [pc, #44]	; (800b210 <prvInitialiseNewTask.isra.0+0xc0>)
 800b1e4:	6623      	str	r3, [r4, #96]	; 0x60
 800b1e6:	4b0b      	ldr	r3, [pc, #44]	; (800b214 <prvInitialiseNewTask.isra.0+0xc4>)
 800b1e8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b1ea:	463a      	mov	r2, r7
 800b1ec:	4631      	mov	r1, r6
 800b1ee:	4648      	mov	r0, r9
 800b1f0:	f7ff f8a6 	bl	800a340 <pxPortInitialiseStack>
 800b1f4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b1f6:	f1b8 0f00 	cmp.w	r8, #0
 800b1fa:	d001      	beq.n	800b200 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b1fc:	f8c8 4000 	str.w	r4, [r8]
}
 800b200:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b204:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800b208:	e7c7      	b.n	800b19a <prvInitialiseNewTask.isra.0+0x4a>
 800b20a:	bf00      	nop
 800b20c:	08025fb0 	.word	0x08025fb0
 800b210:	08025fd0 	.word	0x08025fd0
 800b214:	08025f90 	.word	0x08025f90

0800b218 <prvDeleteTCB>:
	{
 800b218:	b510      	push	{r4, lr}
 800b21a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800b21c:	3058      	adds	r0, #88	; 0x58
 800b21e:	f016 fb43 	bl	80218a8 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b222:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800b226:	b93b      	cbnz	r3, 800b238 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800b228:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b22a:	f7fe ffcb 	bl	800a1c4 <vPortFree>
				vPortFree( pxTCB );
 800b22e:	4620      	mov	r0, r4
	}
 800b230:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800b234:	f7fe bfc6 	b.w	800a1c4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800b238:	2b01      	cmp	r3, #1
 800b23a:	d0f8      	beq.n	800b22e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800b23c:	2b02      	cmp	r3, #2
 800b23e:	d008      	beq.n	800b252 <prvDeleteTCB+0x3a>
 800b240:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b244:	f383 8811 	msr	BASEPRI, r3
 800b248:	f3bf 8f6f 	isb	sy
 800b24c:	f3bf 8f4f 	dsb	sy
 800b250:	e7fe      	b.n	800b250 <prvDeleteTCB+0x38>
	}
 800b252:	bd10      	pop	{r4, pc}

0800b254 <prvIdleTask>:
{
 800b254:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b256:	4e14      	ldr	r6, [pc, #80]	; (800b2a8 <prvIdleTask+0x54>)
				taskYIELD();
 800b258:	4f14      	ldr	r7, [pc, #80]	; (800b2ac <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b25a:	4c15      	ldr	r4, [pc, #84]	; (800b2b0 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800b25c:	4d15      	ldr	r5, [pc, #84]	; (800b2b4 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b25e:	6823      	ldr	r3, [r4, #0]
 800b260:	b96b      	cbnz	r3, 800b27e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b262:	4b15      	ldr	r3, [pc, #84]	; (800b2b8 <prvIdleTask+0x64>)
 800b264:	681b      	ldr	r3, [r3, #0]
 800b266:	2b01      	cmp	r3, #1
 800b268:	d906      	bls.n	800b278 <prvIdleTask+0x24>
				taskYIELD();
 800b26a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800b26e:	603b      	str	r3, [r7, #0]
 800b270:	f3bf 8f4f 	dsb	sy
 800b274:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800b278:	f7f6 f8c2 	bl	8001400 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800b27c:	e7ed      	b.n	800b25a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b27e:	f7ff f889 	bl	800a394 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b282:	68f3      	ldr	r3, [r6, #12]
 800b284:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b288:	f108 0004 	add.w	r0, r8, #4
 800b28c:	f7ff f809 	bl	800a2a2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b290:	682b      	ldr	r3, [r5, #0]
 800b292:	3b01      	subs	r3, #1
 800b294:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b296:	6823      	ldr	r3, [r4, #0]
 800b298:	3b01      	subs	r3, #1
 800b29a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b29c:	f7ff f89c 	bl	800a3d8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b2a0:	4640      	mov	r0, r8
 800b2a2:	f7ff ffb9 	bl	800b218 <prvDeleteTCB>
 800b2a6:	e7da      	b.n	800b25e <prvIdleTask+0xa>
 800b2a8:	2000e9bc 	.word	0x2000e9bc
 800b2ac:	e000ed04 	.word	0xe000ed04
 800b2b0:	2000e94c 	.word	0x2000e94c
 800b2b4:	2000e948 	.word	0x2000e948
 800b2b8:	2000e4e8 	.word	0x2000e4e8

0800b2bc <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800b2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800b2be:	4b16      	ldr	r3, [pc, #88]	; (800b318 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b2c0:	4e16      	ldr	r6, [pc, #88]	; (800b31c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800b2c2:	681d      	ldr	r5, [r3, #0]
{
 800b2c4:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b2c6:	6830      	ldr	r0, [r6, #0]
 800b2c8:	3004      	adds	r0, #4
{
 800b2ca:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b2cc:	f7fe ffe9 	bl	800a2a2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800b2d0:	1c63      	adds	r3, r4, #1
 800b2d2:	4633      	mov	r3, r6
 800b2d4:	d107      	bne.n	800b2e6 <prvAddCurrentTaskToDelayedList+0x2a>
 800b2d6:	b137      	cbz	r7, 800b2e6 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b2d8:	6831      	ldr	r1, [r6, #0]
 800b2da:	4811      	ldr	r0, [pc, #68]	; (800b320 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800b2dc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b2e0:	3104      	adds	r1, #4
 800b2e2:	f7fe bfbb 	b.w	800a25c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800b2e6:	681a      	ldr	r2, [r3, #0]
 800b2e8:	192c      	adds	r4, r5, r4
 800b2ea:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800b2ec:	d307      	bcc.n	800b2fe <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b2ee:	4a0d      	ldr	r2, [pc, #52]	; (800b324 <prvAddCurrentTaskToDelayedList+0x68>)
 800b2f0:	6810      	ldr	r0, [r2, #0]
 800b2f2:	6819      	ldr	r1, [r3, #0]
}
 800b2f4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b2f8:	3104      	adds	r1, #4
 800b2fa:	f7fe bfbb 	b.w	800a274 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b2fe:	4a0a      	ldr	r2, [pc, #40]	; (800b328 <prvAddCurrentTaskToDelayedList+0x6c>)
 800b300:	6810      	ldr	r0, [r2, #0]
 800b302:	6819      	ldr	r1, [r3, #0]
 800b304:	3104      	adds	r1, #4
 800b306:	f7fe ffb5 	bl	800a274 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b30a:	4b08      	ldr	r3, [pc, #32]	; (800b32c <prvAddCurrentTaskToDelayedList+0x70>)
 800b30c:	681a      	ldr	r2, [r3, #0]
 800b30e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800b310:	bf88      	it	hi
 800b312:	601c      	strhi	r4, [r3, #0]
}
 800b314:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b316:	bf00      	nop
 800b318:	2000e9d0 	.word	0x2000e9d0
 800b31c:	2000e4dc 	.word	0x2000e4dc
 800b320:	2000e9a8 	.word	0x2000e9a8
 800b324:	2000e4e4 	.word	0x2000e4e4
 800b328:	2000e4e0 	.word	0x2000e4e0
 800b32c:	2000e984 	.word	0x2000e984

0800b330 <xTaskCreateStatic>:
	{
 800b330:	b570      	push	{r4, r5, r6, lr}
 800b332:	b086      	sub	sp, #24
 800b334:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b338:	b945      	cbnz	r5, 800b34c <xTaskCreateStatic+0x1c>
 800b33a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b33e:	f383 8811 	msr	BASEPRI, r3
 800b342:	f3bf 8f6f 	isb	sy
 800b346:	f3bf 8f4f 	dsb	sy
 800b34a:	e7fe      	b.n	800b34a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b34c:	b944      	cbnz	r4, 800b360 <xTaskCreateStatic+0x30>
 800b34e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b352:	f383 8811 	msr	BASEPRI, r3
 800b356:	f3bf 8f6f 	isb	sy
 800b35a:	f3bf 8f4f 	dsb	sy
 800b35e:	e7fe      	b.n	800b35e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b360:	26c0      	movs	r6, #192	; 0xc0
 800b362:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b364:	9e05      	ldr	r6, [sp, #20]
 800b366:	2ec0      	cmp	r6, #192	; 0xc0
 800b368:	d008      	beq.n	800b37c <xTaskCreateStatic+0x4c>
 800b36a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b36e:	f383 8811 	msr	BASEPRI, r3
 800b372:	f3bf 8f6f 	isb	sy
 800b376:	f3bf 8f4f 	dsb	sy
 800b37a:	e7fe      	b.n	800b37a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b37c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b37e:	2502      	movs	r5, #2
 800b380:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b384:	ad04      	add	r5, sp, #16
 800b386:	9501      	str	r5, [sp, #4]
 800b388:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b38a:	9402      	str	r4, [sp, #8]
 800b38c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800b38e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b390:	f7ff fede 	bl	800b150 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b394:	4620      	mov	r0, r4
 800b396:	f7ff fe49 	bl	800b02c <prvAddNewTaskToReadyList>
	}
 800b39a:	9804      	ldr	r0, [sp, #16]
 800b39c:	b006      	add	sp, #24
 800b39e:	bd70      	pop	{r4, r5, r6, pc}

0800b3a0 <xTaskCreate>:
	{
 800b3a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3a4:	4607      	mov	r7, r0
 800b3a6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b3a8:	0090      	lsls	r0, r2, #2
	{
 800b3aa:	4688      	mov	r8, r1
 800b3ac:	4616      	mov	r6, r2
 800b3ae:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b3b0:	f7fe fe76 	bl	800a0a0 <pvPortMalloc>
			if( pxStack != NULL )
 800b3b4:	4605      	mov	r5, r0
 800b3b6:	b1e8      	cbz	r0, 800b3f4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800b3b8:	20c0      	movs	r0, #192	; 0xc0
 800b3ba:	f7fe fe71 	bl	800a0a0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800b3be:	4604      	mov	r4, r0
 800b3c0:	b1a8      	cbz	r0, 800b3ee <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b3c2:	2300      	movs	r3, #0
 800b3c4:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b3c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800b3ca:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b3cc:	9301      	str	r3, [sp, #4]
 800b3ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b3d0:	9002      	str	r0, [sp, #8]
 800b3d2:	9300      	str	r3, [sp, #0]
 800b3d4:	4632      	mov	r2, r6
 800b3d6:	464b      	mov	r3, r9
 800b3d8:	4641      	mov	r1, r8
 800b3da:	4638      	mov	r0, r7
 800b3dc:	f7ff feb8 	bl	800b150 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	f7ff fe23 	bl	800b02c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800b3e6:	2001      	movs	r0, #1
	}
 800b3e8:	b005      	add	sp, #20
 800b3ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800b3ee:	4628      	mov	r0, r5
 800b3f0:	f7fe fee8 	bl	800a1c4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800b3f4:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800b3f8:	e7f6      	b.n	800b3e8 <xTaskCreate+0x48>
	...

0800b3fc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b3fc:	4a02      	ldr	r2, [pc, #8]	; (800b408 <vTaskSuspendAll+0xc>)
 800b3fe:	6813      	ldr	r3, [r2, #0]
 800b400:	3301      	adds	r3, #1
 800b402:	6013      	str	r3, [r2, #0]
}
 800b404:	4770      	bx	lr
 800b406:	bf00      	nop
 800b408:	2000e950 	.word	0x2000e950

0800b40c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b40c:	4b01      	ldr	r3, [pc, #4]	; (800b414 <xTaskGetTickCount+0x8>)
 800b40e:	6818      	ldr	r0, [r3, #0]
}
 800b410:	4770      	bx	lr
 800b412:	bf00      	nop
 800b414:	2000e9d0 	.word	0x2000e9d0

0800b418 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b418:	4b3f      	ldr	r3, [pc, #252]	; (800b518 <xTaskIncrementTick+0x100>)
 800b41a:	681b      	ldr	r3, [r3, #0]
{
 800b41c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b420:	2b00      	cmp	r3, #0
 800b422:	d173      	bne.n	800b50c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b424:	4b3d      	ldr	r3, [pc, #244]	; (800b51c <xTaskIncrementTick+0x104>)
 800b426:	681d      	ldr	r5, [r3, #0]
 800b428:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800b42a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b42c:	b9bd      	cbnz	r5, 800b45e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b42e:	4b3c      	ldr	r3, [pc, #240]	; (800b520 <xTaskIncrementTick+0x108>)
 800b430:	681a      	ldr	r2, [r3, #0]
 800b432:	6812      	ldr	r2, [r2, #0]
 800b434:	b142      	cbz	r2, 800b448 <xTaskIncrementTick+0x30>
 800b436:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b43a:	f383 8811 	msr	BASEPRI, r3
 800b43e:	f3bf 8f6f 	isb	sy
 800b442:	f3bf 8f4f 	dsb	sy
 800b446:	e7fe      	b.n	800b446 <xTaskIncrementTick+0x2e>
 800b448:	4a36      	ldr	r2, [pc, #216]	; (800b524 <xTaskIncrementTick+0x10c>)
 800b44a:	6819      	ldr	r1, [r3, #0]
 800b44c:	6810      	ldr	r0, [r2, #0]
 800b44e:	6018      	str	r0, [r3, #0]
 800b450:	6011      	str	r1, [r2, #0]
 800b452:	4a35      	ldr	r2, [pc, #212]	; (800b528 <xTaskIncrementTick+0x110>)
 800b454:	6813      	ldr	r3, [r2, #0]
 800b456:	3301      	adds	r3, #1
 800b458:	6013      	str	r3, [r2, #0]
 800b45a:	f7ff fe67 	bl	800b12c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b45e:	4e33      	ldr	r6, [pc, #204]	; (800b52c <xTaskIncrementTick+0x114>)
 800b460:	4f33      	ldr	r7, [pc, #204]	; (800b530 <xTaskIncrementTick+0x118>)
 800b462:	6833      	ldr	r3, [r6, #0]
 800b464:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800b53c <xTaskIncrementTick+0x124>
 800b468:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800b46a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b46e:	d211      	bcs.n	800b494 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b470:	f8d8 3000 	ldr.w	r3, [r8]
 800b474:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b476:	2314      	movs	r3, #20
 800b478:	4353      	muls	r3, r2
 800b47a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800b47c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800b47e:	4b2d      	ldr	r3, [pc, #180]	; (800b534 <xTaskIncrementTick+0x11c>)
 800b480:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800b482:	bf28      	it	cs
 800b484:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800b486:	2b00      	cmp	r3, #0
 800b488:	bf18      	it	ne
 800b48a:	2401      	movne	r4, #1
}
 800b48c:	4620      	mov	r0, r4
 800b48e:	b003      	add	sp, #12
 800b490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b494:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800b520 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b498:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800b540 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b49c:	f8d9 3000 	ldr.w	r3, [r9]
 800b4a0:	681b      	ldr	r3, [r3, #0]
 800b4a2:	b91b      	cbnz	r3, 800b4ac <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b4a4:	f04f 33ff 	mov.w	r3, #4294967295
 800b4a8:	6033      	str	r3, [r6, #0]
					break;
 800b4aa:	e7e1      	b.n	800b470 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b4ac:	f8d9 3000 	ldr.w	r3, [r9]
 800b4b0:	68db      	ldr	r3, [r3, #12]
 800b4b2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b4b6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800b4ba:	4295      	cmp	r5, r2
 800b4bc:	d201      	bcs.n	800b4c2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800b4be:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b4c0:	e7d6      	b.n	800b470 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b4c2:	f10b 0104 	add.w	r1, fp, #4
 800b4c6:	4608      	mov	r0, r1
 800b4c8:	9101      	str	r1, [sp, #4]
 800b4ca:	f7fe feea 	bl	800a2a2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b4ce:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800b4d2:	9901      	ldr	r1, [sp, #4]
 800b4d4:	b122      	cbz	r2, 800b4e0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b4d6:	f10b 0018 	add.w	r0, fp, #24
 800b4da:	f7fe fee2 	bl	800a2a2 <uxListRemove>
 800b4de:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800b4e0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800b4e4:	f8da 2000 	ldr.w	r2, [sl]
 800b4e8:	2314      	movs	r3, #20
 800b4ea:	4290      	cmp	r0, r2
 800b4ec:	bf88      	it	hi
 800b4ee:	f8ca 0000 	strhi.w	r0, [sl]
 800b4f2:	fb03 7000 	mla	r0, r3, r0, r7
 800b4f6:	f7fe feb1 	bl	800a25c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b4fa:	f8d8 1000 	ldr.w	r1, [r8]
 800b4fe:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800b502:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800b504:	429a      	cmp	r2, r3
 800b506:	bf28      	it	cs
 800b508:	2401      	movcs	r4, #1
 800b50a:	e7c7      	b.n	800b49c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800b50c:	4a0a      	ldr	r2, [pc, #40]	; (800b538 <xTaskIncrementTick+0x120>)
 800b50e:	6813      	ldr	r3, [r2, #0]
 800b510:	3301      	adds	r3, #1
 800b512:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800b514:	2400      	movs	r4, #0
	return xSwitchRequired;
 800b516:	e7b9      	b.n	800b48c <xTaskIncrementTick+0x74>
 800b518:	2000e950 	.word	0x2000e950
 800b51c:	2000e9d0 	.word	0x2000e9d0
 800b520:	2000e4e0 	.word	0x2000e4e0
 800b524:	2000e4e4 	.word	0x2000e4e4
 800b528:	2000e988 	.word	0x2000e988
 800b52c:	2000e984 	.word	0x2000e984
 800b530:	2000e4e8 	.word	0x2000e4e8
 800b534:	2000e9d4 	.word	0x2000e9d4
 800b538:	2000e98c 	.word	0x2000e98c
 800b53c:	2000e4dc 	.word	0x2000e4dc
 800b540:	2000e958 	.word	0x2000e958

0800b544 <xTaskResumeAll>:
{
 800b544:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800b546:	4c30      	ldr	r4, [pc, #192]	; (800b608 <xTaskResumeAll+0xc4>)
 800b548:	6823      	ldr	r3, [r4, #0]
 800b54a:	b943      	cbnz	r3, 800b55e <xTaskResumeAll+0x1a>
 800b54c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b550:	f383 8811 	msr	BASEPRI, r3
 800b554:	f3bf 8f6f 	isb	sy
 800b558:	f3bf 8f4f 	dsb	sy
 800b55c:	e7fe      	b.n	800b55c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800b55e:	f7fe ff19 	bl	800a394 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800b562:	6823      	ldr	r3, [r4, #0]
 800b564:	3b01      	subs	r3, #1
 800b566:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b568:	6824      	ldr	r4, [r4, #0]
 800b56a:	b12c      	cbz	r4, 800b578 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800b56c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b56e:	f7fe ff33 	bl	800a3d8 <vPortExitCritical>
}
 800b572:	4620      	mov	r0, r4
 800b574:	b003      	add	sp, #12
 800b576:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800b578:	4b24      	ldr	r3, [pc, #144]	; (800b60c <xTaskResumeAll+0xc8>)
 800b57a:	681b      	ldr	r3, [r3, #0]
 800b57c:	2b00      	cmp	r3, #0
 800b57e:	d0f5      	beq.n	800b56c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b580:	4d23      	ldr	r5, [pc, #140]	; (800b610 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 800b582:	4e24      	ldr	r6, [pc, #144]	; (800b614 <xTaskResumeAll+0xd0>)
 800b584:	4f24      	ldr	r7, [pc, #144]	; (800b618 <xTaskResumeAll+0xd4>)
 800b586:	e01e      	b.n	800b5c6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b588:	68eb      	ldr	r3, [r5, #12]
 800b58a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b58c:	f104 0018 	add.w	r0, r4, #24
 800b590:	f7fe fe87 	bl	800a2a2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b594:	1d21      	adds	r1, r4, #4
 800b596:	4608      	mov	r0, r1
 800b598:	9101      	str	r1, [sp, #4]
 800b59a:	f7fe fe82 	bl	800a2a2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b59e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b5a0:	6832      	ldr	r2, [r6, #0]
 800b5a2:	9901      	ldr	r1, [sp, #4]
 800b5a4:	2014      	movs	r0, #20
 800b5a6:	4293      	cmp	r3, r2
 800b5a8:	fb00 7003 	mla	r0, r0, r3, r7
 800b5ac:	bf88      	it	hi
 800b5ae:	6033      	strhi	r3, [r6, #0]
 800b5b0:	f7fe fe54 	bl	800a25c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b5b4:	4b19      	ldr	r3, [pc, #100]	; (800b61c <xTaskResumeAll+0xd8>)
 800b5b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b5b8:	681b      	ldr	r3, [r3, #0]
 800b5ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5bc:	429a      	cmp	r2, r3
 800b5be:	d302      	bcc.n	800b5c6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800b5c0:	4b17      	ldr	r3, [pc, #92]	; (800b620 <xTaskResumeAll+0xdc>)
 800b5c2:	2201      	movs	r2, #1
 800b5c4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b5c6:	682b      	ldr	r3, [r5, #0]
 800b5c8:	2b00      	cmp	r3, #0
 800b5ca:	d1dd      	bne.n	800b588 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800b5cc:	b10c      	cbz	r4, 800b5d2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800b5ce:	f7ff fdad 	bl	800b12c <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800b5d2:	4d14      	ldr	r5, [pc, #80]	; (800b624 <xTaskResumeAll+0xe0>)
 800b5d4:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b5d6:	b144      	cbz	r4, 800b5ea <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800b5d8:	4e11      	ldr	r6, [pc, #68]	; (800b620 <xTaskResumeAll+0xdc>)
 800b5da:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b5dc:	f7ff ff1c 	bl	800b418 <xTaskIncrementTick>
 800b5e0:	b100      	cbz	r0, 800b5e4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800b5e2:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b5e4:	3c01      	subs	r4, #1
 800b5e6:	d1f9      	bne.n	800b5dc <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800b5e8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b5ea:	4b0d      	ldr	r3, [pc, #52]	; (800b620 <xTaskResumeAll+0xdc>)
 800b5ec:	681b      	ldr	r3, [r3, #0]
 800b5ee:	2b00      	cmp	r3, #0
 800b5f0:	d0bc      	beq.n	800b56c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800b5f2:	4b0d      	ldr	r3, [pc, #52]	; (800b628 <xTaskResumeAll+0xe4>)
 800b5f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b5f8:	601a      	str	r2, [r3, #0]
 800b5fa:	f3bf 8f4f 	dsb	sy
 800b5fe:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b602:	2401      	movs	r4, #1
 800b604:	e7b3      	b.n	800b56e <xTaskResumeAll+0x2a>
 800b606:	bf00      	nop
 800b608:	2000e950 	.word	0x2000e950
 800b60c:	2000e948 	.word	0x2000e948
 800b610:	2000e990 	.word	0x2000e990
 800b614:	2000e958 	.word	0x2000e958
 800b618:	2000e4e8 	.word	0x2000e4e8
 800b61c:	2000e4dc 	.word	0x2000e4dc
 800b620:	2000e9d4 	.word	0x2000e9d4
 800b624:	2000e98c 	.word	0x2000e98c
 800b628:	e000ed04 	.word	0xe000ed04

0800b62c <vTaskDelay>:
	{
 800b62c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800b62e:	b940      	cbnz	r0, 800b642 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 800b630:	4b0e      	ldr	r3, [pc, #56]	; (800b66c <vTaskDelay+0x40>)
 800b632:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b636:	601a      	str	r2, [r3, #0]
 800b638:	f3bf 8f4f 	dsb	sy
 800b63c:	f3bf 8f6f 	isb	sy
	}
 800b640:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800b642:	4b0b      	ldr	r3, [pc, #44]	; (800b670 <vTaskDelay+0x44>)
 800b644:	6819      	ldr	r1, [r3, #0]
 800b646:	b141      	cbz	r1, 800b65a <vTaskDelay+0x2e>
 800b648:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b64c:	f383 8811 	msr	BASEPRI, r3
 800b650:	f3bf 8f6f 	isb	sy
 800b654:	f3bf 8f4f 	dsb	sy
 800b658:	e7fe      	b.n	800b658 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800b65a:	f7ff fecf 	bl	800b3fc <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800b65e:	f7ff fe2d 	bl	800b2bc <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800b662:	f7ff ff6f 	bl	800b544 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800b666:	2800      	cmp	r0, #0
 800b668:	d0e2      	beq.n	800b630 <vTaskDelay+0x4>
 800b66a:	e7e9      	b.n	800b640 <vTaskDelay+0x14>
 800b66c:	e000ed04 	.word	0xe000ed04
 800b670:	2000e950 	.word	0x2000e950

0800b674 <vTaskSetApplicationTaskTag>:
	{
 800b674:	b538      	push	{r3, r4, r5, lr}
 800b676:	460d      	mov	r5, r1
		if( xTask == NULL )
 800b678:	4604      	mov	r4, r0
 800b67a:	b908      	cbnz	r0, 800b680 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800b67c:	4b04      	ldr	r3, [pc, #16]	; (800b690 <vTaskSetApplicationTaskTag+0x1c>)
 800b67e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800b680:	f7fe fe88 	bl	800a394 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800b684:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800b686:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800b68a:	f7fe bea5 	b.w	800a3d8 <vPortExitCritical>
 800b68e:	bf00      	nop
 800b690:	2000e4dc 	.word	0x2000e4dc

0800b694 <xTaskCallApplicationTaskHook>:
	{
 800b694:	4603      	mov	r3, r0
 800b696:	4608      	mov	r0, r1
		if( xTask == NULL )
 800b698:	b90b      	cbnz	r3, 800b69e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800b69a:	4b03      	ldr	r3, [pc, #12]	; (800b6a8 <xTaskCallApplicationTaskHook+0x14>)
 800b69c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800b69e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b6a0:	b103      	cbz	r3, 800b6a4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800b6a2:	4718      	bx	r3
	}
 800b6a4:	4618      	mov	r0, r3
 800b6a6:	4770      	bx	lr
 800b6a8:	2000e4dc 	.word	0x2000e4dc

0800b6ac <vTaskStartScheduler>:
{
 800b6ac:	b510      	push	{r4, lr}
 800b6ae:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b6b0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b6b2:	aa07      	add	r2, sp, #28
 800b6b4:	a906      	add	r1, sp, #24
 800b6b6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b6b8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b6bc:	f7fe fcb4 	bl	800a028 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b6c0:	9b05      	ldr	r3, [sp, #20]
 800b6c2:	9302      	str	r3, [sp, #8]
 800b6c4:	9b06      	ldr	r3, [sp, #24]
 800b6c6:	9a07      	ldr	r2, [sp, #28]
 800b6c8:	4919      	ldr	r1, [pc, #100]	; (800b730 <vTaskStartScheduler+0x84>)
 800b6ca:	481a      	ldr	r0, [pc, #104]	; (800b734 <vTaskStartScheduler+0x88>)
 800b6cc:	e9cd 4300 	strd	r4, r3, [sp]
 800b6d0:	4623      	mov	r3, r4
 800b6d2:	f7ff fe2d 	bl	800b330 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b6d6:	b1f0      	cbz	r0, 800b716 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 800b6d8:	f000 fa92 	bl	800bc00 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b6dc:	2801      	cmp	r0, #1
 800b6de:	d11c      	bne.n	800b71a <vTaskStartScheduler+0x6e>
 800b6e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b6e4:	f383 8811 	msr	BASEPRI, r3
 800b6e8:	f3bf 8f6f 	isb	sy
 800b6ec:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800b6f0:	4a11      	ldr	r2, [pc, #68]	; (800b738 <vTaskStartScheduler+0x8c>)
 800b6f2:	4912      	ldr	r1, [pc, #72]	; (800b73c <vTaskStartScheduler+0x90>)
 800b6f4:	6813      	ldr	r3, [r2, #0]
 800b6f6:	3358      	adds	r3, #88	; 0x58
 800b6f8:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800b6fa:	4b11      	ldr	r3, [pc, #68]	; (800b740 <vTaskStartScheduler+0x94>)
 800b6fc:	f04f 31ff 	mov.w	r1, #4294967295
 800b700:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b702:	4b10      	ldr	r3, [pc, #64]	; (800b744 <vTaskStartScheduler+0x98>)
 800b704:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b706:	4b10      	ldr	r3, [pc, #64]	; (800b748 <vTaskStartScheduler+0x9c>)
 800b708:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800b70a:	6810      	ldr	r0, [r2, #0]
 800b70c:	4621      	mov	r1, r4
 800b70e:	f7ff ffc1 	bl	800b694 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800b712:	f7fe fed7 	bl	800a4c4 <xPortStartScheduler>
}
 800b716:	b008      	add	sp, #32
 800b718:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b71a:	3001      	adds	r0, #1
 800b71c:	d1fb      	bne.n	800b716 <vTaskStartScheduler+0x6a>
 800b71e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b722:	f383 8811 	msr	BASEPRI, r3
 800b726:	f3bf 8f6f 	isb	sy
 800b72a:	f3bf 8f4f 	dsb	sy
 800b72e:	e7fe      	b.n	800b72e <vTaskStartScheduler+0x82>
 800b730:	08023232 	.word	0x08023232
 800b734:	0800b255 	.word	0x0800b255
 800b738:	2000e4dc 	.word	0x2000e4dc
 800b73c:	200000fc 	.word	0x200000fc
 800b740:	2000e984 	.word	0x2000e984
 800b744:	2000e9a4 	.word	0x2000e9a4
 800b748:	2000e9d0 	.word	0x2000e9d0

0800b74c <vTaskSwitchContext>:
{
 800b74c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b74e:	4b1e      	ldr	r3, [pc, #120]	; (800b7c8 <vTaskSwitchContext+0x7c>)
 800b750:	681a      	ldr	r2, [r3, #0]
 800b752:	4b1e      	ldr	r3, [pc, #120]	; (800b7cc <vTaskSwitchContext+0x80>)
 800b754:	b112      	cbz	r2, 800b75c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b756:	2201      	movs	r2, #1
 800b758:	601a      	str	r2, [r3, #0]
}
 800b75a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800b75c:	4c1c      	ldr	r4, [pc, #112]	; (800b7d0 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 800b75e:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800b760:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b762:	4e1c      	ldr	r6, [pc, #112]	; (800b7d4 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 800b764:	2101      	movs	r1, #1
 800b766:	f7ff ff95 	bl	800b694 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b76a:	4a1b      	ldr	r2, [pc, #108]	; (800b7d8 <vTaskSwitchContext+0x8c>)
 800b76c:	6833      	ldr	r3, [r6, #0]
 800b76e:	f04f 0c14 	mov.w	ip, #20
 800b772:	4617      	mov	r7, r2
 800b774:	fb0c f103 	mul.w	r1, ip, r3
 800b778:	1850      	adds	r0, r2, r1
 800b77a:	5855      	ldr	r5, [r2, r1]
 800b77c:	b1c5      	cbz	r5, 800b7b0 <vTaskSwitchContext+0x64>
 800b77e:	6845      	ldr	r5, [r0, #4]
 800b780:	3108      	adds	r1, #8
 800b782:	686d      	ldr	r5, [r5, #4]
 800b784:	6045      	str	r5, [r0, #4]
 800b786:	440a      	add	r2, r1
 800b788:	4295      	cmp	r5, r2
 800b78a:	bf04      	itt	eq
 800b78c:	686a      	ldreq	r2, [r5, #4]
 800b78e:	6042      	streq	r2, [r0, #4]
 800b790:	2214      	movs	r2, #20
 800b792:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 800b796:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b798:	6852      	ldr	r2, [r2, #4]
 800b79a:	68d2      	ldr	r2, [r2, #12]
 800b79c:	6022      	str	r2, [r4, #0]
 800b79e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 800b7a0:	6820      	ldr	r0, [r4, #0]
 800b7a2:	f7ff ff77 	bl	800b694 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800b7a6:	6823      	ldr	r3, [r4, #0]
 800b7a8:	4a0c      	ldr	r2, [pc, #48]	; (800b7dc <vTaskSwitchContext+0x90>)
 800b7aa:	3358      	adds	r3, #88	; 0x58
 800b7ac:	6013      	str	r3, [r2, #0]
}
 800b7ae:	e7d4      	b.n	800b75a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b7b0:	b943      	cbnz	r3, 800b7c4 <vTaskSwitchContext+0x78>
 800b7b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7b6:	f383 8811 	msr	BASEPRI, r3
 800b7ba:	f3bf 8f6f 	isb	sy
 800b7be:	f3bf 8f4f 	dsb	sy
 800b7c2:	e7fe      	b.n	800b7c2 <vTaskSwitchContext+0x76>
 800b7c4:	3b01      	subs	r3, #1
 800b7c6:	e7d5      	b.n	800b774 <vTaskSwitchContext+0x28>
 800b7c8:	2000e950 	.word	0x2000e950
 800b7cc:	2000e9d4 	.word	0x2000e9d4
 800b7d0:	2000e4dc 	.word	0x2000e4dc
 800b7d4:	2000e958 	.word	0x2000e958
 800b7d8:	2000e4e8 	.word	0x2000e4e8
 800b7dc:	200000fc 	.word	0x200000fc

0800b7e0 <vTaskPlaceOnEventList>:
{
 800b7e0:	b510      	push	{r4, lr}
 800b7e2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b7e4:	b940      	cbnz	r0, 800b7f8 <vTaskPlaceOnEventList+0x18>
 800b7e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7ea:	f383 8811 	msr	BASEPRI, r3
 800b7ee:	f3bf 8f6f 	isb	sy
 800b7f2:	f3bf 8f4f 	dsb	sy
 800b7f6:	e7fe      	b.n	800b7f6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b7f8:	4b05      	ldr	r3, [pc, #20]	; (800b810 <vTaskPlaceOnEventList+0x30>)
 800b7fa:	6819      	ldr	r1, [r3, #0]
 800b7fc:	3118      	adds	r1, #24
 800b7fe:	f7fe fd39 	bl	800a274 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b802:	4620      	mov	r0, r4
 800b804:	2101      	movs	r1, #1
}
 800b806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b80a:	f7ff bd57 	b.w	800b2bc <prvAddCurrentTaskToDelayedList>
 800b80e:	bf00      	nop
 800b810:	2000e4dc 	.word	0x2000e4dc

0800b814 <vTaskPlaceOnEventListRestricted>:
	{
 800b814:	b538      	push	{r3, r4, r5, lr}
 800b816:	460d      	mov	r5, r1
 800b818:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b81a:	b940      	cbnz	r0, 800b82e <vTaskPlaceOnEventListRestricted+0x1a>
 800b81c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b820:	f383 8811 	msr	BASEPRI, r3
 800b824:	f3bf 8f6f 	isb	sy
 800b828:	f3bf 8f4f 	dsb	sy
 800b82c:	e7fe      	b.n	800b82c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b82e:	4b07      	ldr	r3, [pc, #28]	; (800b84c <vTaskPlaceOnEventListRestricted+0x38>)
 800b830:	6819      	ldr	r1, [r3, #0]
 800b832:	3118      	adds	r1, #24
 800b834:	f7fe fd12 	bl	800a25c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b838:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b83a:	4621      	mov	r1, r4
 800b83c:	bf0c      	ite	eq
 800b83e:	4628      	moveq	r0, r5
 800b840:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b848:	f7ff bd38 	b.w	800b2bc <prvAddCurrentTaskToDelayedList>
 800b84c:	2000e4dc 	.word	0x2000e4dc

0800b850 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b850:	68c3      	ldr	r3, [r0, #12]
{
 800b852:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b854:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b856:	b944      	cbnz	r4, 800b86a <xTaskRemoveFromEventList+0x1a>
 800b858:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b85c:	f383 8811 	msr	BASEPRI, r3
 800b860:	f3bf 8f6f 	isb	sy
 800b864:	f3bf 8f4f 	dsb	sy
 800b868:	e7fe      	b.n	800b868 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b86a:	f104 0118 	add.w	r1, r4, #24
 800b86e:	4608      	mov	r0, r1
 800b870:	9101      	str	r1, [sp, #4]
 800b872:	f7fe fd16 	bl	800a2a2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b876:	4b12      	ldr	r3, [pc, #72]	; (800b8c0 <xTaskRemoveFromEventList+0x70>)
 800b878:	9901      	ldr	r1, [sp, #4]
 800b87a:	681b      	ldr	r3, [r3, #0]
 800b87c:	b9eb      	cbnz	r3, 800b8ba <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b87e:	1d21      	adds	r1, r4, #4
 800b880:	4608      	mov	r0, r1
 800b882:	9101      	str	r1, [sp, #4]
 800b884:	f7fe fd0d 	bl	800a2a2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b888:	4a0e      	ldr	r2, [pc, #56]	; (800b8c4 <xTaskRemoveFromEventList+0x74>)
 800b88a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b88c:	6810      	ldr	r0, [r2, #0]
 800b88e:	9901      	ldr	r1, [sp, #4]
 800b890:	4283      	cmp	r3, r0
 800b892:	bf88      	it	hi
 800b894:	6013      	strhi	r3, [r2, #0]
 800b896:	4a0c      	ldr	r2, [pc, #48]	; (800b8c8 <xTaskRemoveFromEventList+0x78>)
 800b898:	2014      	movs	r0, #20
 800b89a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b89e:	f7fe fcdd 	bl	800a25c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b8a2:	4b0a      	ldr	r3, [pc, #40]	; (800b8cc <xTaskRemoveFromEventList+0x7c>)
 800b8a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b8a6:	681b      	ldr	r3, [r3, #0]
 800b8a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8aa:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800b8ac:	bf85      	ittet	hi
 800b8ae:	4b08      	ldrhi	r3, [pc, #32]	; (800b8d0 <xTaskRemoveFromEventList+0x80>)
 800b8b0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800b8b2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800b8b4:	6018      	strhi	r0, [r3, #0]
}
 800b8b6:	b002      	add	sp, #8
 800b8b8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b8ba:	4806      	ldr	r0, [pc, #24]	; (800b8d4 <xTaskRemoveFromEventList+0x84>)
 800b8bc:	e7ef      	b.n	800b89e <xTaskRemoveFromEventList+0x4e>
 800b8be:	bf00      	nop
 800b8c0:	2000e950 	.word	0x2000e950
 800b8c4:	2000e958 	.word	0x2000e958
 800b8c8:	2000e4e8 	.word	0x2000e4e8
 800b8cc:	2000e4dc 	.word	0x2000e4dc
 800b8d0:	2000e9d4 	.word	0x2000e9d4
 800b8d4:	2000e990 	.word	0x2000e990

0800b8d8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b8d8:	4b03      	ldr	r3, [pc, #12]	; (800b8e8 <vTaskInternalSetTimeOutState+0x10>)
 800b8da:	681b      	ldr	r3, [r3, #0]
 800b8dc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b8de:	4b03      	ldr	r3, [pc, #12]	; (800b8ec <vTaskInternalSetTimeOutState+0x14>)
 800b8e0:	681b      	ldr	r3, [r3, #0]
 800b8e2:	6043      	str	r3, [r0, #4]
}
 800b8e4:	4770      	bx	lr
 800b8e6:	bf00      	nop
 800b8e8:	2000e988 	.word	0x2000e988
 800b8ec:	2000e9d0 	.word	0x2000e9d0

0800b8f0 <xTaskCheckForTimeOut>:
{
 800b8f0:	b570      	push	{r4, r5, r6, lr}
 800b8f2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b8f4:	4605      	mov	r5, r0
 800b8f6:	b940      	cbnz	r0, 800b90a <xTaskCheckForTimeOut+0x1a>
 800b8f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b8fc:	f383 8811 	msr	BASEPRI, r3
 800b900:	f3bf 8f6f 	isb	sy
 800b904:	f3bf 8f4f 	dsb	sy
 800b908:	e7fe      	b.n	800b908 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b90a:	b941      	cbnz	r1, 800b91e <xTaskCheckForTimeOut+0x2e>
 800b90c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b910:	f383 8811 	msr	BASEPRI, r3
 800b914:	f3bf 8f6f 	isb	sy
 800b918:	f3bf 8f4f 	dsb	sy
 800b91c:	e7fe      	b.n	800b91c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b91e:	f7fe fd39 	bl	800a394 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b922:	4b0f      	ldr	r3, [pc, #60]	; (800b960 <xTaskCheckForTimeOut+0x70>)
 800b924:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b926:	6823      	ldr	r3, [r4, #0]
 800b928:	1c5a      	adds	r2, r3, #1
 800b92a:	d010      	beq.n	800b94e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b92c:	480d      	ldr	r0, [pc, #52]	; (800b964 <xTaskCheckForTimeOut+0x74>)
 800b92e:	682e      	ldr	r6, [r5, #0]
 800b930:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b932:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b934:	4286      	cmp	r6, r0
 800b936:	d001      	beq.n	800b93c <xTaskCheckForTimeOut+0x4c>
 800b938:	428a      	cmp	r2, r1
 800b93a:	d90f      	bls.n	800b95c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b93c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b93e:	4283      	cmp	r3, r0
 800b940:	d90a      	bls.n	800b958 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b942:	1a5b      	subs	r3, r3, r1
 800b944:	4413      	add	r3, r2
 800b946:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b948:	4628      	mov	r0, r5
 800b94a:	f7ff ffc5 	bl	800b8d8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b94e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b950:	f7fe fd42 	bl	800a3d8 <vPortExitCritical>
}
 800b954:	4620      	mov	r0, r4
 800b956:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b958:	2300      	movs	r3, #0
 800b95a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b95c:	2401      	movs	r4, #1
 800b95e:	e7f7      	b.n	800b950 <xTaskCheckForTimeOut+0x60>
 800b960:	2000e9d0 	.word	0x2000e9d0
 800b964:	2000e988 	.word	0x2000e988

0800b968 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b968:	4b01      	ldr	r3, [pc, #4]	; (800b970 <vTaskMissedYield+0x8>)
 800b96a:	2201      	movs	r2, #1
 800b96c:	601a      	str	r2, [r3, #0]
}
 800b96e:	4770      	bx	lr
 800b970:	2000e9d4 	.word	0x2000e9d4

0800b974 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b974:	4b05      	ldr	r3, [pc, #20]	; (800b98c <xTaskGetSchedulerState+0x18>)
 800b976:	681b      	ldr	r3, [r3, #0]
 800b978:	b133      	cbz	r3, 800b988 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b97a:	4b05      	ldr	r3, [pc, #20]	; (800b990 <xTaskGetSchedulerState+0x1c>)
 800b97c:	681b      	ldr	r3, [r3, #0]
 800b97e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800b980:	bf0c      	ite	eq
 800b982:	2002      	moveq	r0, #2
 800b984:	2000      	movne	r0, #0
 800b986:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b988:	2001      	movs	r0, #1
	}
 800b98a:	4770      	bx	lr
 800b98c:	2000e9a4 	.word	0x2000e9a4
 800b990:	2000e950 	.word	0x2000e950

0800b994 <xTaskPriorityInherit>:
	{
 800b994:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b996:	4604      	mov	r4, r0
 800b998:	b350      	cbz	r0, 800b9f0 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b99a:	4a1c      	ldr	r2, [pc, #112]	; (800ba0c <xTaskPriorityInherit+0x78>)
 800b99c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b99e:	6811      	ldr	r1, [r2, #0]
 800b9a0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800b9a2:	428b      	cmp	r3, r1
 800b9a4:	4616      	mov	r6, r2
 800b9a6:	d229      	bcs.n	800b9fc <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b9a8:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b9aa:	4d19      	ldr	r5, [pc, #100]	; (800ba10 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b9ac:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b9ae:	bfa1      	itttt	ge
 800b9b0:	6832      	ldrge	r2, [r6, #0]
 800b9b2:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800b9b4:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800b9b8:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b9ba:	2214      	movs	r2, #20
 800b9bc:	fb02 5303 	mla	r3, r2, r3, r5
 800b9c0:	6942      	ldr	r2, [r0, #20]
 800b9c2:	429a      	cmp	r2, r3
 800b9c4:	d116      	bne.n	800b9f4 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b9c6:	1d01      	adds	r1, r0, #4
 800b9c8:	4608      	mov	r0, r1
 800b9ca:	9101      	str	r1, [sp, #4]
 800b9cc:	f7fe fc69 	bl	800a2a2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b9d0:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b9d2:	4a10      	ldr	r2, [pc, #64]	; (800ba14 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b9d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b9d6:	6810      	ldr	r0, [r2, #0]
 800b9d8:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b9da:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b9dc:	4283      	cmp	r3, r0
 800b9de:	f04f 0014 	mov.w	r0, #20
 800b9e2:	fb00 5003 	mla	r0, r0, r3, r5
 800b9e6:	bf88      	it	hi
 800b9e8:	6013      	strhi	r3, [r2, #0]
 800b9ea:	f7fe fc37 	bl	800a25c <vListInsertEnd>
				xReturn = pdTRUE;
 800b9ee:	2001      	movs	r0, #1
	}
 800b9f0:	b002      	add	sp, #8
 800b9f2:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b9f4:	6833      	ldr	r3, [r6, #0]
 800b9f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9f8:	62c3      	str	r3, [r0, #44]	; 0x2c
 800b9fa:	e7f8      	b.n	800b9ee <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b9fc:	6813      	ldr	r3, [r2, #0]
 800b9fe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ba00:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800ba02:	42a0      	cmp	r0, r4
 800ba04:	bf2c      	ite	cs
 800ba06:	2000      	movcs	r0, #0
 800ba08:	2001      	movcc	r0, #1
 800ba0a:	e7f1      	b.n	800b9f0 <xTaskPriorityInherit+0x5c>
 800ba0c:	2000e4dc 	.word	0x2000e4dc
 800ba10:	2000e4e8 	.word	0x2000e4e8
 800ba14:	2000e958 	.word	0x2000e958

0800ba18 <xTaskPriorityDisinherit>:
	{
 800ba18:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800ba1a:	b910      	cbnz	r0, 800ba22 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800ba1c:	2000      	movs	r0, #0
	}
 800ba1e:	b002      	add	sp, #8
 800ba20:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800ba22:	4b1c      	ldr	r3, [pc, #112]	; (800ba94 <xTaskPriorityDisinherit+0x7c>)
 800ba24:	681c      	ldr	r4, [r3, #0]
 800ba26:	4284      	cmp	r4, r0
 800ba28:	d008      	beq.n	800ba3c <xTaskPriorityDisinherit+0x24>
 800ba2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba2e:	f383 8811 	msr	BASEPRI, r3
 800ba32:	f3bf 8f6f 	isb	sy
 800ba36:	f3bf 8f4f 	dsb	sy
 800ba3a:	e7fe      	b.n	800ba3a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800ba3c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ba3e:	b943      	cbnz	r3, 800ba52 <xTaskPriorityDisinherit+0x3a>
 800ba40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba44:	f383 8811 	msr	BASEPRI, r3
 800ba48:	f3bf 8f6f 	isb	sy
 800ba4c:	f3bf 8f4f 	dsb	sy
 800ba50:	e7fe      	b.n	800ba50 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ba52:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ba54:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ba56:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ba58:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ba5a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ba5c:	d0de      	beq.n	800ba1c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ba5e:	2b00      	cmp	r3, #0
 800ba60:	d1dc      	bne.n	800ba1c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ba62:	1d21      	adds	r1, r4, #4
 800ba64:	4608      	mov	r0, r1
 800ba66:	9101      	str	r1, [sp, #4]
 800ba68:	f7fe fc1b 	bl	800a2a2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ba6c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ba6e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ba70:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ba72:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800ba76:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ba78:	4a07      	ldr	r2, [pc, #28]	; (800ba98 <xTaskPriorityDisinherit+0x80>)
 800ba7a:	6810      	ldr	r0, [r2, #0]
 800ba7c:	4283      	cmp	r3, r0
 800ba7e:	bf88      	it	hi
 800ba80:	6013      	strhi	r3, [r2, #0]
 800ba82:	4a06      	ldr	r2, [pc, #24]	; (800ba9c <xTaskPriorityDisinherit+0x84>)
 800ba84:	2014      	movs	r0, #20
 800ba86:	fb00 2003 	mla	r0, r0, r3, r2
 800ba8a:	f7fe fbe7 	bl	800a25c <vListInsertEnd>
					xReturn = pdTRUE;
 800ba8e:	2001      	movs	r0, #1
		return xReturn;
 800ba90:	e7c5      	b.n	800ba1e <xTaskPriorityDisinherit+0x6>
 800ba92:	bf00      	nop
 800ba94:	2000e4dc 	.word	0x2000e4dc
 800ba98:	2000e958 	.word	0x2000e958
 800ba9c:	2000e4e8 	.word	0x2000e4e8

0800baa0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800baa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800baa2:	4604      	mov	r4, r0
 800baa4:	2800      	cmp	r0, #0
 800baa6:	d044      	beq.n	800bb32 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800baa8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800baaa:	b942      	cbnz	r2, 800babe <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800baac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bab0:	f383 8811 	msr	BASEPRI, r3
 800bab4:	f3bf 8f6f 	isb	sy
 800bab8:	f3bf 8f4f 	dsb	sy
 800babc:	e7fe      	b.n	800babc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800babe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800bac0:	4299      	cmp	r1, r3
 800bac2:	bf38      	it	cc
 800bac4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800bac6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bac8:	428b      	cmp	r3, r1
 800baca:	d032      	beq.n	800bb32 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800bacc:	2a01      	cmp	r2, #1
 800bace:	d130      	bne.n	800bb32 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800bad0:	4a19      	ldr	r2, [pc, #100]	; (800bb38 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800bad2:	6812      	ldr	r2, [r2, #0]
 800bad4:	4282      	cmp	r2, r0
 800bad6:	d108      	bne.n	800baea <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800bad8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800badc:	f383 8811 	msr	BASEPRI, r3
 800bae0:	f3bf 8f6f 	isb	sy
 800bae4:	f3bf 8f4f 	dsb	sy
 800bae8:	e7fe      	b.n	800bae8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800baea:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800baec:	4d13      	ldr	r5, [pc, #76]	; (800bb3c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800baee:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800baf0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800baf2:	f04f 0214 	mov.w	r2, #20
 800baf6:	fb02 5303 	mla	r3, r2, r3, r5
 800bafa:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bafc:	bfa4      	itt	ge
 800bafe:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800bb02:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bb04:	429a      	cmp	r2, r3
 800bb06:	d114      	bne.n	800bb32 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bb08:	1d01      	adds	r1, r0, #4
 800bb0a:	4608      	mov	r0, r1
 800bb0c:	9101      	str	r1, [sp, #4]
 800bb0e:	f7fe fbc8 	bl	800a2a2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800bb12:	4a0b      	ldr	r2, [pc, #44]	; (800bb40 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800bb14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bb16:	6810      	ldr	r0, [r2, #0]
 800bb18:	9901      	ldr	r1, [sp, #4]
 800bb1a:	4283      	cmp	r3, r0
 800bb1c:	f04f 0014 	mov.w	r0, #20
 800bb20:	fb00 5003 	mla	r0, r0, r3, r5
 800bb24:	bf88      	it	hi
 800bb26:	6013      	strhi	r3, [r2, #0]
	}
 800bb28:	b003      	add	sp, #12
 800bb2a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800bb2e:	f7fe bb95 	b.w	800a25c <vListInsertEnd>
	}
 800bb32:	b003      	add	sp, #12
 800bb34:	bd30      	pop	{r4, r5, pc}
 800bb36:	bf00      	nop
 800bb38:	2000e4dc 	.word	0x2000e4dc
 800bb3c:	2000e4e8 	.word	0x2000e4e8
 800bb40:	2000e958 	.word	0x2000e958

0800bb44 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800bb44:	4b04      	ldr	r3, [pc, #16]	; (800bb58 <pvTaskIncrementMutexHeldCount+0x14>)
 800bb46:	681a      	ldr	r2, [r3, #0]
 800bb48:	b11a      	cbz	r2, 800bb52 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800bb4a:	6819      	ldr	r1, [r3, #0]
 800bb4c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800bb4e:	3201      	adds	r2, #1
 800bb50:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800bb52:	6818      	ldr	r0, [r3, #0]
	}
 800bb54:	4770      	bx	lr
 800bb56:	bf00      	nop
 800bb58:	2000e4dc 	.word	0x2000e4dc

0800bb5c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800bb5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800bb5e:	4c11      	ldr	r4, [pc, #68]	; (800bba4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800bb60:	f7fe fc18 	bl	800a394 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800bb64:	6825      	ldr	r5, [r4, #0]
 800bb66:	b9bd      	cbnz	r5, 800bb98 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800bb68:	4f0f      	ldr	r7, [pc, #60]	; (800bba8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800bb6a:	4e10      	ldr	r6, [pc, #64]	; (800bbac <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800bb6c:	4638      	mov	r0, r7
 800bb6e:	f7fe fb67 	bl	800a240 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800bb72:	4630      	mov	r0, r6
 800bb74:	f7fe fb64 	bl	800a240 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800bb78:	4b0d      	ldr	r3, [pc, #52]	; (800bbb0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bb7a:	4a0e      	ldr	r2, [pc, #56]	; (800bbb4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800bb7c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800bb7e:	4b0e      	ldr	r3, [pc, #56]	; (800bbb8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bb80:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800bb82:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bb84:	200a      	movs	r0, #10
 800bb86:	4b0d      	ldr	r3, [pc, #52]	; (800bbbc <prvCheckForValidListAndQueue+0x60>)
 800bb88:	9500      	str	r5, [sp, #0]
 800bb8a:	f7fe fe1b 	bl	800a7c4 <xQueueGenericCreateStatic>
 800bb8e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800bb90:	b110      	cbz	r0, 800bb98 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800bb92:	490b      	ldr	r1, [pc, #44]	; (800bbc0 <prvCheckForValidListAndQueue+0x64>)
 800bb94:	f7ff f9e8 	bl	800af68 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800bb98:	b003      	add	sp, #12
 800bb9a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800bb9e:	f7fe bc1b 	b.w	800a3d8 <vPortExitCritical>
 800bba2:	bf00      	nop
 800bba4:	2000eafc 	.word	0x2000eafc
 800bba8:	2000ea80 	.word	0x2000ea80
 800bbac:	2000ea94 	.word	0x2000ea94
 800bbb0:	2000e9d8 	.word	0x2000e9d8
 800bbb4:	2000e9e0 	.word	0x2000e9e0
 800bbb8:	2000e9dc 	.word	0x2000e9dc
 800bbbc:	2000eaac 	.word	0x2000eaac
 800bbc0:	08023529 	.word	0x08023529

0800bbc4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800bbc4:	4291      	cmp	r1, r2
{
 800bbc6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800bbc8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800bbca:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800bbcc:	d80a      	bhi.n	800bbe4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bbce:	1ad2      	subs	r2, r2, r3
 800bbd0:	6983      	ldr	r3, [r0, #24]
 800bbd2:	429a      	cmp	r2, r3
 800bbd4:	d20d      	bcs.n	800bbf2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800bbd6:	4b08      	ldr	r3, [pc, #32]	; (800bbf8 <prvInsertTimerInActiveList+0x34>)
 800bbd8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bbda:	6818      	ldr	r0, [r3, #0]
 800bbdc:	f7fe fb4a 	bl	800a274 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800bbe0:	2000      	movs	r0, #0
}
 800bbe2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800bbe4:	429a      	cmp	r2, r3
 800bbe6:	d201      	bcs.n	800bbec <prvInsertTimerInActiveList+0x28>
 800bbe8:	4299      	cmp	r1, r3
 800bbea:	d202      	bcs.n	800bbf2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bbec:	4b03      	ldr	r3, [pc, #12]	; (800bbfc <prvInsertTimerInActiveList+0x38>)
 800bbee:	1d01      	adds	r1, r0, #4
 800bbf0:	e7f3      	b.n	800bbda <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800bbf2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800bbf4:	e7f5      	b.n	800bbe2 <prvInsertTimerInActiveList+0x1e>
 800bbf6:	bf00      	nop
 800bbf8:	2000e9dc 	.word	0x2000e9dc
 800bbfc:	2000e9d8 	.word	0x2000e9d8

0800bc00 <xTimerCreateTimerTask>:
{
 800bc00:	b510      	push	{r4, lr}
 800bc02:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800bc04:	f7ff ffaa 	bl	800bb5c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800bc08:	4b12      	ldr	r3, [pc, #72]	; (800bc54 <xTimerCreateTimerTask+0x54>)
 800bc0a:	681b      	ldr	r3, [r3, #0]
 800bc0c:	b1b3      	cbz	r3, 800bc3c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800bc0e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800bc10:	aa07      	add	r2, sp, #28
 800bc12:	a906      	add	r1, sp, #24
 800bc14:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800bc16:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800bc1a:	f7fe fa11 	bl	800a040 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800bc1e:	9b05      	ldr	r3, [sp, #20]
 800bc20:	9302      	str	r3, [sp, #8]
 800bc22:	9b06      	ldr	r3, [sp, #24]
 800bc24:	9301      	str	r3, [sp, #4]
 800bc26:	2302      	movs	r3, #2
 800bc28:	9300      	str	r3, [sp, #0]
 800bc2a:	9a07      	ldr	r2, [sp, #28]
 800bc2c:	490a      	ldr	r1, [pc, #40]	; (800bc58 <xTimerCreateTimerTask+0x58>)
 800bc2e:	480b      	ldr	r0, [pc, #44]	; (800bc5c <xTimerCreateTimerTask+0x5c>)
 800bc30:	4623      	mov	r3, r4
 800bc32:	f7ff fb7d 	bl	800b330 <xTaskCreateStatic>
 800bc36:	4b0a      	ldr	r3, [pc, #40]	; (800bc60 <xTimerCreateTimerTask+0x60>)
 800bc38:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800bc3a:	b940      	cbnz	r0, 800bc4e <xTimerCreateTimerTask+0x4e>
 800bc3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc40:	f383 8811 	msr	BASEPRI, r3
 800bc44:	f3bf 8f6f 	isb	sy
 800bc48:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800bc4c:	e7fe      	b.n	800bc4c <xTimerCreateTimerTask+0x4c>
}
 800bc4e:	2001      	movs	r0, #1
 800bc50:	b008      	add	sp, #32
 800bc52:	bd10      	pop	{r4, pc}
 800bc54:	2000eafc 	.word	0x2000eafc
 800bc58:	0802352e 	.word	0x0802352e
 800bc5c:	0800bd39 	.word	0x0800bd39
 800bc60:	2000eb00 	.word	0x2000eb00

0800bc64 <xTimerGenericCommand>:
{
 800bc64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc66:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800bc68:	4604      	mov	r4, r0
{
 800bc6a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800bc6c:	b940      	cbnz	r0, 800bc80 <xTimerGenericCommand+0x1c>
 800bc6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc72:	f383 8811 	msr	BASEPRI, r3
 800bc76:	f3bf 8f6f 	isb	sy
 800bc7a:	f3bf 8f4f 	dsb	sy
 800bc7e:	e7fe      	b.n	800bc7e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800bc80:	4d0d      	ldr	r5, [pc, #52]	; (800bcb8 <xTimerGenericCommand+0x54>)
 800bc82:	6828      	ldr	r0, [r5, #0]
 800bc84:	b180      	cbz	r0, 800bca8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800bc86:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800bc88:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800bc8c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800bc8e:	dc0d      	bgt.n	800bcac <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800bc90:	f7ff fe70 	bl	800b974 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800bc94:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800bc96:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800bc98:	bf08      	it	eq
 800bc9a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800bc9c:	6828      	ldr	r0, [r5, #0]
 800bc9e:	bf18      	it	ne
 800bca0:	461a      	movne	r2, r3
 800bca2:	4669      	mov	r1, sp
 800bca4:	f7fe fe44 	bl	800a930 <xQueueGenericSend>
}
 800bca8:	b004      	add	sp, #16
 800bcaa:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800bcac:	2300      	movs	r3, #0
 800bcae:	4669      	mov	r1, sp
 800bcb0:	f7fe fef0 	bl	800aa94 <xQueueGenericSendFromISR>
 800bcb4:	e7f8      	b.n	800bca8 <xTimerGenericCommand+0x44>
 800bcb6:	bf00      	nop
 800bcb8:	2000eafc 	.word	0x2000eafc

0800bcbc <prvSwitchTimerLists>:
{
 800bcbc:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800bcbe:	4d1c      	ldr	r5, [pc, #112]	; (800bd30 <prvSwitchTimerLists+0x74>)
{
 800bcc0:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bcc2:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800bcc4:	682b      	ldr	r3, [r5, #0]
 800bcc6:	681a      	ldr	r2, [r3, #0]
 800bcc8:	b92a      	cbnz	r2, 800bcd6 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800bcca:	4a1a      	ldr	r2, [pc, #104]	; (800bd34 <prvSwitchTimerLists+0x78>)
 800bccc:	6811      	ldr	r1, [r2, #0]
 800bcce:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800bcd0:	6013      	str	r3, [r2, #0]
}
 800bcd2:	b005      	add	sp, #20
 800bcd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bcd6:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bcd8:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bcda:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bcdc:	1d21      	adds	r1, r4, #4
 800bcde:	4608      	mov	r0, r1
 800bce0:	9103      	str	r1, [sp, #12]
 800bce2:	f7fe fade 	bl	800a2a2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bce6:	6a23      	ldr	r3, [r4, #32]
 800bce8:	4620      	mov	r0, r4
 800bcea:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bcec:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bcf0:	9903      	ldr	r1, [sp, #12]
 800bcf2:	f013 0f04 	tst.w	r3, #4
 800bcf6:	d0e5      	beq.n	800bcc4 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800bcf8:	69a3      	ldr	r3, [r4, #24]
 800bcfa:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800bcfc:	429e      	cmp	r6, r3
 800bcfe:	d205      	bcs.n	800bd0c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bd00:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800bd02:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800bd04:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bd06:	f7fe fab5 	bl	800a274 <vListInsert>
 800bd0a:	e7db      	b.n	800bcc4 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bd0c:	2300      	movs	r3, #0
 800bd0e:	9700      	str	r7, [sp, #0]
 800bd10:	4632      	mov	r2, r6
 800bd12:	4619      	mov	r1, r3
 800bd14:	4620      	mov	r0, r4
 800bd16:	f7ff ffa5 	bl	800bc64 <xTimerGenericCommand>
				configASSERT( xResult );
 800bd1a:	2800      	cmp	r0, #0
 800bd1c:	d1d2      	bne.n	800bcc4 <prvSwitchTimerLists+0x8>
 800bd1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd22:	f383 8811 	msr	BASEPRI, r3
 800bd26:	f3bf 8f6f 	isb	sy
 800bd2a:	f3bf 8f4f 	dsb	sy
 800bd2e:	e7fe      	b.n	800bd2e <prvSwitchTimerLists+0x72>
 800bd30:	2000e9d8 	.word	0x2000e9d8
 800bd34:	2000e9dc 	.word	0x2000e9dc

0800bd38 <prvTimerTask>:
{
 800bd38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bd3c:	4f77      	ldr	r7, [pc, #476]	; (800bf1c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800bd3e:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800bf2c <prvTimerTask+0x1f4>
{
 800bd42:	b087      	sub	sp, #28
 800bd44:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bd46:	683b      	ldr	r3, [r7, #0]
 800bd48:	f8d3 b000 	ldr.w	fp, [r3]
 800bd4c:	f1bb 0f00 	cmp.w	fp, #0
 800bd50:	d028      	beq.n	800bda4 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bd52:	68db      	ldr	r3, [r3, #12]
 800bd54:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bd58:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800bd5a:	4e71      	ldr	r6, [pc, #452]	; (800bf20 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800bd5c:	f7ff fb4e 	bl	800b3fc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800bd60:	f7ff fb54 	bl	800b40c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800bd64:	6833      	ldr	r3, [r6, #0]
 800bd66:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800bd68:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800bd6a:	46b0      	mov	r8, r6
 800bd6c:	d31c      	bcc.n	800bda8 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800bd6e:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800bd70:	b31c      	cbz	r4, 800bdba <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800bd72:	4b6c      	ldr	r3, [pc, #432]	; (800bf24 <prvTimerTask+0x1ec>)
 800bd74:	681b      	ldr	r3, [r3, #0]
 800bd76:	681c      	ldr	r4, [r3, #0]
 800bd78:	fab4 f484 	clz	r4, r4
 800bd7c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800bd7e:	4b6a      	ldr	r3, [pc, #424]	; (800bf28 <prvTimerTask+0x1f0>)
 800bd80:	4622      	mov	r2, r4
 800bd82:	6818      	ldr	r0, [r3, #0]
 800bd84:	ebab 0105 	sub.w	r1, fp, r5
 800bd88:	f7ff f92d 	bl	800afe6 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800bd8c:	f7ff fbda 	bl	800b544 <xTaskResumeAll>
 800bd90:	b978      	cbnz	r0, 800bdb2 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 800bd92:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800bd96:	f8ca 3000 	str.w	r3, [sl]
 800bd9a:	f3bf 8f4f 	dsb	sy
 800bd9e:	f3bf 8f6f 	isb	sy
 800bda2:	e006      	b.n	800bdb2 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bda4:	2401      	movs	r4, #1
 800bda6:	e7d8      	b.n	800bd5a <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800bda8:	f7ff ff88 	bl	800bcbc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800bdac:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800bdae:	f7ff fbc9 	bl	800b544 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800bdb2:	4e5d      	ldr	r6, [pc, #372]	; (800bf28 <prvTimerTask+0x1f0>)
 800bdb4:	f04f 0b00 	mov.w	fp, #0
 800bdb8:	e035      	b.n	800be26 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800bdba:	4583      	cmp	fp, r0
 800bdbc:	d8df      	bhi.n	800bd7e <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800bdbe:	f7ff fbc1 	bl	800b544 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bdc2:	f8d9 3000 	ldr.w	r3, [r9]
 800bdc6:	68db      	ldr	r3, [r3, #12]
 800bdc8:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bdca:	1d30      	adds	r0, r6, #4
 800bdcc:	f7fe fa69 	bl	800a2a2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bdd0:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 800bdd4:	0758      	lsls	r0, r3, #29
 800bdd6:	d518      	bpl.n	800be0a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800bdd8:	69b1      	ldr	r1, [r6, #24]
 800bdda:	465b      	mov	r3, fp
 800bddc:	462a      	mov	r2, r5
 800bdde:	4459      	add	r1, fp
 800bde0:	4630      	mov	r0, r6
 800bde2:	f7ff feef 	bl	800bbc4 <prvInsertTimerInActiveList>
 800bde6:	b1a0      	cbz	r0, 800be12 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bde8:	9400      	str	r4, [sp, #0]
 800bdea:	4623      	mov	r3, r4
 800bdec:	465a      	mov	r2, fp
 800bdee:	4621      	mov	r1, r4
 800bdf0:	4630      	mov	r0, r6
 800bdf2:	f7ff ff37 	bl	800bc64 <xTimerGenericCommand>
			configASSERT( xResult );
 800bdf6:	b960      	cbnz	r0, 800be12 <prvTimerTask+0xda>
 800bdf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bdfc:	f383 8811 	msr	BASEPRI, r3
 800be00:	f3bf 8f6f 	isb	sy
 800be04:	f3bf 8f4f 	dsb	sy
 800be08:	e7fe      	b.n	800be08 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800be0a:	f023 0301 	bic.w	r3, r3, #1
 800be0e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800be12:	6a33      	ldr	r3, [r6, #32]
 800be14:	4630      	mov	r0, r6
 800be16:	4798      	blx	r3
}
 800be18:	e7cb      	b.n	800bdb2 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800be1a:	9b03      	ldr	r3, [sp, #12]
 800be1c:	9905      	ldr	r1, [sp, #20]
 800be1e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800be20:	9b02      	ldr	r3, [sp, #8]
 800be22:	2b00      	cmp	r3, #0
 800be24:	da0a      	bge.n	800be3c <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800be26:	6830      	ldr	r0, [r6, #0]
 800be28:	2200      	movs	r2, #0
 800be2a:	a902      	add	r1, sp, #8
 800be2c:	f7fe fee8 	bl	800ac00 <xQueueReceive>
 800be30:	2800      	cmp	r0, #0
 800be32:	d088      	beq.n	800bd46 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800be34:	9b02      	ldr	r3, [sp, #8]
 800be36:	9804      	ldr	r0, [sp, #16]
 800be38:	2b00      	cmp	r3, #0
 800be3a:	dbee      	blt.n	800be1a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800be3c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800be3e:	6963      	ldr	r3, [r4, #20]
 800be40:	b9a3      	cbnz	r3, 800be6c <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 800be42:	f7ff fae3 	bl	800b40c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800be46:	f8d8 3000 	ldr.w	r3, [r8]
 800be4a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800be4c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800be4e:	d201      	bcs.n	800be54 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 800be50:	f7ff ff34 	bl	800bcbc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800be54:	9b02      	ldr	r3, [sp, #8]
 800be56:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800be5a:	2b09      	cmp	r3, #9
 800be5c:	d8e3      	bhi.n	800be26 <prvTimerTask+0xee>
 800be5e:	e8df f003 	tbb	[pc, r3]
 800be62:	0909      	.short	0x0909
 800be64:	543b3409 	.word	0x543b3409
 800be68:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800be6c:	1d20      	adds	r0, r4, #4
 800be6e:	f7fe fa18 	bl	800a2a2 <uxListRemove>
 800be72:	e7e6      	b.n	800be42 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800be74:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800be78:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800be7a:	f043 0301 	orr.w	r3, r3, #1
 800be7e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800be82:	9b03      	ldr	r3, [sp, #12]
 800be84:	462a      	mov	r2, r5
 800be86:	4419      	add	r1, r3
 800be88:	4620      	mov	r0, r4
 800be8a:	f7ff fe9b 	bl	800bbc4 <prvInsertTimerInActiveList>
 800be8e:	2800      	cmp	r0, #0
 800be90:	d0c9      	beq.n	800be26 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800be92:	6a23      	ldr	r3, [r4, #32]
 800be94:	4620      	mov	r0, r4
 800be96:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800be98:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800be9c:	0759      	lsls	r1, r3, #29
 800be9e:	d5c2      	bpl.n	800be26 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800bea0:	69a2      	ldr	r2, [r4, #24]
 800bea2:	9903      	ldr	r1, [sp, #12]
 800bea4:	f8cd b000 	str.w	fp, [sp]
 800bea8:	2300      	movs	r3, #0
 800beaa:	440a      	add	r2, r1
 800beac:	4620      	mov	r0, r4
 800beae:	4619      	mov	r1, r3
 800beb0:	f7ff fed8 	bl	800bc64 <xTimerGenericCommand>
							configASSERT( xResult );
 800beb4:	2800      	cmp	r0, #0
 800beb6:	d1b6      	bne.n	800be26 <prvTimerTask+0xee>
 800beb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bebc:	f383 8811 	msr	BASEPRI, r3
 800bec0:	f3bf 8f6f 	isb	sy
 800bec4:	f3bf 8f4f 	dsb	sy
 800bec8:	e7fe      	b.n	800bec8 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800beca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bece:	f023 0301 	bic.w	r3, r3, #1
 800bed2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800bed6:	e7a6      	b.n	800be26 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bed8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800bedc:	9903      	ldr	r1, [sp, #12]
 800bede:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bee0:	f043 0301 	orr.w	r3, r3, #1
 800bee4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800bee8:	b941      	cbnz	r1, 800befc <prvTimerTask+0x1c4>
 800beea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800beee:	f383 8811 	msr	BASEPRI, r3
 800bef2:	f3bf 8f6f 	isb	sy
 800bef6:	f3bf 8f4f 	dsb	sy
 800befa:	e7fe      	b.n	800befa <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800befc:	462b      	mov	r3, r5
 800befe:	462a      	mov	r2, r5
 800bf00:	4429      	add	r1, r5
 800bf02:	4620      	mov	r0, r4
 800bf04:	f7ff fe5e 	bl	800bbc4 <prvInsertTimerInActiveList>
					break;
 800bf08:	e78d      	b.n	800be26 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800bf0a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bf0e:	079a      	lsls	r2, r3, #30
 800bf10:	d4dd      	bmi.n	800bece <prvTimerTask+0x196>
							vPortFree( pxTimer );
 800bf12:	4620      	mov	r0, r4
 800bf14:	f7fe f956 	bl	800a1c4 <vPortFree>
 800bf18:	e785      	b.n	800be26 <prvTimerTask+0xee>
 800bf1a:	bf00      	nop
 800bf1c:	2000e9d8 	.word	0x2000e9d8
 800bf20:	2000eaa8 	.word	0x2000eaa8
 800bf24:	2000e9dc 	.word	0x2000e9dc
 800bf28:	2000eafc 	.word	0x2000eafc
 800bf2c:	e000ed04 	.word	0xe000ed04

0800bf30 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800bf30:	8880      	ldrh	r0, [r0, #4]
 800bf32:	4770      	bx	lr

0800bf34 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800bf34:	2300      	movs	r3, #0
 800bf36:	8083      	strh	r3, [r0, #4]
 800bf38:	4770      	bx	lr
	...

0800bf3c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800bf3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf3e:	6803      	ldr	r3, [r0, #0]
 800bf40:	4605      	mov	r5, r0
 800bf42:	460e      	mov	r6, r1
 800bf44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bf46:	2100      	movs	r1, #0
 800bf48:	4798      	blx	r3
 800bf4a:	682b      	ldr	r3, [r5, #0]
 800bf4c:	4604      	mov	r4, r0
 800bf4e:	6a1b      	ldr	r3, [r3, #32]
 800bf50:	4628      	mov	r0, r5
 800bf52:	4798      	blx	r3
 800bf54:	88ab      	ldrh	r3, [r5, #4]
 800bf56:	1b34      	subs	r4, r6, r4
 800bf58:	b2a4      	uxth	r4, r4
 800bf5a:	fbb4 f4f0 	udiv	r4, r4, r0
 800bf5e:	42a3      	cmp	r3, r4
 800bf60:	d805      	bhi.n	800bf6e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800bf62:	4b0e      	ldr	r3, [pc, #56]	; (800bf9c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800bf64:	4a0e      	ldr	r2, [pc, #56]	; (800bfa0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bf66:	211e      	movs	r1, #30
 800bf68:	480e      	ldr	r0, [pc, #56]	; (800bfa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800bf6a:	f014 ff69 	bl	8020e40 <__assert_func>
 800bf6e:	682b      	ldr	r3, [r5, #0]
 800bf70:	2100      	movs	r1, #0
 800bf72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bf74:	4628      	mov	r0, r5
 800bf76:	4798      	blx	r3
 800bf78:	682b      	ldr	r3, [r5, #0]
 800bf7a:	4607      	mov	r7, r0
 800bf7c:	6a1b      	ldr	r3, [r3, #32]
 800bf7e:	4628      	mov	r0, r5
 800bf80:	4798      	blx	r3
 800bf82:	1bf3      	subs	r3, r6, r7
 800bf84:	b29b      	uxth	r3, r3
 800bf86:	fbb3 f2f0 	udiv	r2, r3, r0
 800bf8a:	fb02 3010 	mls	r0, r2, r0, r3
 800bf8e:	b118      	cbz	r0, 800bf98 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800bf90:	4b05      	ldr	r3, [pc, #20]	; (800bfa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800bf92:	4a03      	ldr	r2, [pc, #12]	; (800bfa0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bf94:	211f      	movs	r1, #31
 800bf96:	e7e7      	b.n	800bf68 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800bf98:	4620      	mov	r0, r4
 800bf9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bf9c:	08023536 	.word	0x08023536
 800bfa0:	080236a2 	.word	0x080236a2
 800bfa4:	0802354b 	.word	0x0802354b
 800bfa8:	08023579 	.word	0x08023579

0800bfac <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800bfac:	b538      	push	{r3, r4, r5, lr}
 800bfae:	6803      	ldr	r3, [r0, #0]
 800bfb0:	6a1b      	ldr	r3, [r3, #32]
 800bfb2:	460d      	mov	r5, r1
 800bfb4:	4604      	mov	r4, r0
 800bfb6:	4798      	blx	r3
 800bfb8:	4285      	cmp	r5, r0
 800bfba:	d905      	bls.n	800bfc8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800bfbc:	4b0c      	ldr	r3, [pc, #48]	; (800bff0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800bfbe:	4a0d      	ldr	r2, [pc, #52]	; (800bff4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bfc0:	2130      	movs	r1, #48	; 0x30
 800bfc2:	480d      	ldr	r0, [pc, #52]	; (800bff8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800bfc4:	f014 ff3c 	bl	8020e40 <__assert_func>
 800bfc8:	6823      	ldr	r3, [r4, #0]
 800bfca:	88a5      	ldrh	r5, [r4, #4]
 800bfcc:	69db      	ldr	r3, [r3, #28]
 800bfce:	4620      	mov	r0, r4
 800bfd0:	4798      	blx	r3
 800bfd2:	4285      	cmp	r5, r0
 800bfd4:	d303      	bcc.n	800bfde <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800bfd6:	4b09      	ldr	r3, [pc, #36]	; (800bffc <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800bfd8:	4a06      	ldr	r2, [pc, #24]	; (800bff4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bfda:	2131      	movs	r1, #49	; 0x31
 800bfdc:	e7f1      	b.n	800bfc2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800bfde:	6823      	ldr	r3, [r4, #0]
 800bfe0:	88a1      	ldrh	r1, [r4, #4]
 800bfe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bfe4:	4620      	mov	r0, r4
 800bfe6:	4798      	blx	r3
 800bfe8:	88a3      	ldrh	r3, [r4, #4]
 800bfea:	3301      	adds	r3, #1
 800bfec:	80a3      	strh	r3, [r4, #4]
 800bfee:	bd38      	pop	{r3, r4, r5, pc}
 800bff0:	080235f3 	.word	0x080235f3
 800bff4:	080236e5 	.word	0x080236e5
 800bff8:	0802354b 	.word	0x0802354b
 800bffc:	0802360a 	.word	0x0802360a

0800c000 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c000:	b570      	push	{r4, r5, r6, lr}
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	6a1b      	ldr	r3, [r3, #32]
 800c006:	4616      	mov	r6, r2
 800c008:	4604      	mov	r4, r0
 800c00a:	460d      	mov	r5, r1
 800c00c:	4798      	blx	r3
 800c00e:	4286      	cmp	r6, r0
 800c010:	d905      	bls.n	800c01e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800c012:	4b06      	ldr	r3, [pc, #24]	; (800c02c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800c014:	4a06      	ldr	r2, [pc, #24]	; (800c030 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800c016:	4807      	ldr	r0, [pc, #28]	; (800c034 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800c018:	213a      	movs	r1, #58	; 0x3a
 800c01a:	f014 ff11 	bl	8020e40 <__assert_func>
 800c01e:	6823      	ldr	r3, [r4, #0]
 800c020:	4629      	mov	r1, r5
 800c022:	4620      	mov	r0, r4
 800c024:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c02a:	4718      	bx	r3
 800c02c:	080235f3 	.word	0x080235f3
 800c030:	08023658 	.word	0x08023658
 800c034:	0802354b 	.word	0x0802354b

0800c038 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c038:	4770      	bx	lr
	...

0800c03c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c03c:	4a02      	ldr	r2, [pc, #8]	; (800c048 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c03e:	6002      	str	r2, [r0, #0]
 800c040:	2200      	movs	r2, #0
 800c042:	8082      	strh	r2, [r0, #4]
 800c044:	4770      	bx	lr
 800c046:	bf00      	nop
 800c048:	0802362c 	.word	0x0802362c

0800c04c <_ZN8touchgfx9Container13getFirstChildEv>:
 800c04c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c04e:	4770      	bx	lr

0800c050 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c050:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c052:	2000      	movs	r0, #0
 800c054:	b12b      	cbz	r3, 800c062 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c056:	b920      	cbnz	r0, 800c062 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c058:	1a5a      	subs	r2, r3, r1
 800c05a:	4250      	negs	r0, r2
 800c05c:	4150      	adcs	r0, r2
 800c05e:	699b      	ldr	r3, [r3, #24]
 800c060:	e7f8      	b.n	800c054 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c062:	4770      	bx	lr

0800c064 <_ZN8touchgfx9Container9removeAllEv>:
 800c064:	2200      	movs	r2, #0
 800c066:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c068:	b123      	cbz	r3, 800c074 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c06a:	6999      	ldr	r1, [r3, #24]
 800c06c:	6281      	str	r1, [r0, #40]	; 0x28
 800c06e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c072:	e7f8      	b.n	800c066 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c074:	4770      	bx	lr

0800c076 <_ZN8touchgfx9Container6unlinkEv>:
 800c076:	2300      	movs	r3, #0
 800c078:	6283      	str	r3, [r0, #40]	; 0x28
 800c07a:	4770      	bx	lr

0800c07c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c07c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c080:	461f      	mov	r7, r3
 800c082:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c086:	460d      	mov	r5, r1
 800c088:	4616      	mov	r6, r2
 800c08a:	b103      	cbz	r3, 800c08e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c08c:	6038      	str	r0, [r7, #0]
 800c08e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c090:	b314      	cbz	r4, 800c0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c092:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c096:	b1eb      	cbz	r3, 800c0d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c098:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c09c:	428d      	cmp	r5, r1
 800c09e:	db19      	blt.n	800c0d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c0a0:	8923      	ldrh	r3, [r4, #8]
 800c0a2:	b289      	uxth	r1, r1
 800c0a4:	440b      	add	r3, r1
 800c0a6:	b21b      	sxth	r3, r3
 800c0a8:	429d      	cmp	r5, r3
 800c0aa:	da13      	bge.n	800c0d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c0ac:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c0b0:	4296      	cmp	r6, r2
 800c0b2:	db0f      	blt.n	800c0d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c0b4:	8963      	ldrh	r3, [r4, #10]
 800c0b6:	b292      	uxth	r2, r2
 800c0b8:	4413      	add	r3, r2
 800c0ba:	b21b      	sxth	r3, r3
 800c0bc:	429e      	cmp	r6, r3
 800c0be:	da09      	bge.n	800c0d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c0c0:	6823      	ldr	r3, [r4, #0]
 800c0c2:	1ab2      	subs	r2, r6, r2
 800c0c4:	1a69      	subs	r1, r5, r1
 800c0c6:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800c0ca:	b212      	sxth	r2, r2
 800c0cc:	463b      	mov	r3, r7
 800c0ce:	b209      	sxth	r1, r1
 800c0d0:	4620      	mov	r0, r4
 800c0d2:	47c0      	blx	r8
 800c0d4:	69a4      	ldr	r4, [r4, #24]
 800c0d6:	e7db      	b.n	800c090 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c0d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0dc <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c0dc:	2200      	movs	r2, #0
 800c0de:	8002      	strh	r2, [r0, #0]
 800c0e0:	8042      	strh	r2, [r0, #2]
 800c0e2:	8082      	strh	r2, [r0, #4]
 800c0e4:	80c2      	strh	r2, [r0, #6]
 800c0e6:	4770      	bx	lr

0800c0e8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c0e8:	b570      	push	{r4, r5, r6, lr}
 800c0ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c0ec:	460d      	mov	r5, r1
 800c0ee:	4616      	mov	r6, r2
 800c0f0:	b13c      	cbz	r4, 800c102 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c0f2:	6823      	ldr	r3, [r4, #0]
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c0f8:	4632      	mov	r2, r6
 800c0fa:	4629      	mov	r1, r5
 800c0fc:	4798      	blx	r3
 800c0fe:	69a4      	ldr	r4, [r4, #24]
 800c100:	e7f6      	b.n	800c0f0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c102:	bd70      	pop	{r4, r5, r6, pc}

0800c104 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c104:	b538      	push	{r3, r4, r5, lr}
 800c106:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c108:	460d      	mov	r5, r1
 800c10a:	b134      	cbz	r4, 800c11a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c10c:	682b      	ldr	r3, [r5, #0]
 800c10e:	4621      	mov	r1, r4
 800c110:	689b      	ldr	r3, [r3, #8]
 800c112:	4628      	mov	r0, r5
 800c114:	4798      	blx	r3
 800c116:	69a4      	ldr	r4, [r4, #24]
 800c118:	e7f7      	b.n	800c10a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c11a:	bd38      	pop	{r3, r4, r5, pc}

0800c11c <_ZN8touchgfx9ContainerD1Ev>:
 800c11c:	4770      	bx	lr

0800c11e <_ZN8touchgfx9ContainerD0Ev>:
 800c11e:	b510      	push	{r4, lr}
 800c120:	212c      	movs	r1, #44	; 0x2c
 800c122:	4604      	mov	r4, r0
 800c124:	f014 fe5d 	bl	8020de2 <_ZdlPvj>
 800c128:	4620      	mov	r0, r4
 800c12a:	bd10      	pop	{r4, pc}

0800c12c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c12c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c12e:	b19b      	cbz	r3, 800c158 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c130:	428b      	cmp	r3, r1
 800c132:	d109      	bne.n	800c148 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c134:	699a      	ldr	r2, [r3, #24]
 800c136:	2100      	movs	r1, #0
 800c138:	6159      	str	r1, [r3, #20]
 800c13a:	6282      	str	r2, [r0, #40]	; 0x28
 800c13c:	b902      	cbnz	r2, 800c140 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c13e:	4770      	bx	lr
 800c140:	6199      	str	r1, [r3, #24]
 800c142:	4770      	bx	lr
 800c144:	4613      	mov	r3, r2
 800c146:	b13a      	cbz	r2, 800c158 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c148:	699a      	ldr	r2, [r3, #24]
 800c14a:	428a      	cmp	r2, r1
 800c14c:	d1fa      	bne.n	800c144 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c14e:	698a      	ldr	r2, [r1, #24]
 800c150:	619a      	str	r2, [r3, #24]
 800c152:	2300      	movs	r3, #0
 800c154:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c158:	4770      	bx	lr

0800c15a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c15a:	b410      	push	{r4}
 800c15c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c15e:	4604      	mov	r4, r0
 800c160:	b92b      	cbnz	r3, 800c16e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c162:	6803      	ldr	r3, [r0, #0]
 800c164:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c168:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c16a:	4611      	mov	r1, r2
 800c16c:	4718      	bx	r3
 800c16e:	b941      	cbnz	r1, 800c182 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c170:	6193      	str	r3, [r2, #24]
 800c172:	6282      	str	r2, [r0, #40]	; 0x28
 800c174:	6154      	str	r4, [r2, #20]
 800c176:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c17a:	4770      	bx	lr
 800c17c:	4603      	mov	r3, r0
 800c17e:	2800      	cmp	r0, #0
 800c180:	d0f9      	beq.n	800c176 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c182:	4299      	cmp	r1, r3
 800c184:	6998      	ldr	r0, [r3, #24]
 800c186:	d1f9      	bne.n	800c17c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c188:	6190      	str	r0, [r2, #24]
 800c18a:	618a      	str	r2, [r1, #24]
 800c18c:	e7f2      	b.n	800c174 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800c190 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c190:	4288      	cmp	r0, r1
 800c192:	b508      	push	{r3, lr}
 800c194:	d105      	bne.n	800c1a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800c196:	4b11      	ldr	r3, [pc, #68]	; (800c1dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800c198:	4a11      	ldr	r2, [pc, #68]	; (800c1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c19a:	2121      	movs	r1, #33	; 0x21
 800c19c:	4811      	ldr	r0, [pc, #68]	; (800c1e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800c19e:	f014 fe4f 	bl	8020e40 <__assert_func>
 800c1a2:	694b      	ldr	r3, [r1, #20]
 800c1a4:	b11b      	cbz	r3, 800c1ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800c1a6:	4b10      	ldr	r3, [pc, #64]	; (800c1e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800c1a8:	4a0d      	ldr	r2, [pc, #52]	; (800c1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c1aa:	2122      	movs	r1, #34	; 0x22
 800c1ac:	e7f6      	b.n	800c19c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c1ae:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800c1b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c1b4:	b913      	cbnz	r3, 800c1bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800c1b6:	6281      	str	r1, [r0, #40]	; 0x28
 800c1b8:	bd08      	pop	{r3, pc}
 800c1ba:	4613      	mov	r3, r2
 800c1bc:	699a      	ldr	r2, [r3, #24]
 800c1be:	b12a      	cbz	r2, 800c1cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800c1c0:	428b      	cmp	r3, r1
 800c1c2:	d1fa      	bne.n	800c1ba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800c1c4:	4b09      	ldr	r3, [pc, #36]	; (800c1ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c1c6:	4a06      	ldr	r2, [pc, #24]	; (800c1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c1c8:	2133      	movs	r1, #51	; 0x33
 800c1ca:	e7e7      	b.n	800c19c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c1cc:	428b      	cmp	r3, r1
 800c1ce:	d103      	bne.n	800c1d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800c1d0:	4b06      	ldr	r3, [pc, #24]	; (800c1ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c1d2:	4a03      	ldr	r2, [pc, #12]	; (800c1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c1d4:	2136      	movs	r1, #54	; 0x36
 800c1d6:	e7e1      	b.n	800c19c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c1d8:	6199      	str	r1, [r3, #24]
 800c1da:	e7ed      	b.n	800c1b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800c1dc:	08023723 	.word	0x08023723
 800c1e0:	08023874 	.word	0x08023874
 800c1e4:	0802374f 	.word	0x0802374f
 800c1e8:	08023782 	.word	0x08023782
 800c1ec:	080237b8 	.word	0x080237b8

0800c1f0 <_ZN8touchgfx4RectaNERKS0_>:
 800c1f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c1f4:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c1f8:	888c      	ldrh	r4, [r1, #4]
 800c1fa:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c1fe:	443c      	add	r4, r7
 800c200:	b2a4      	uxth	r4, r4
 800c202:	fa0f f884 	sxth.w	r8, r4
 800c206:	45c1      	cmp	r9, r8
 800c208:	da2f      	bge.n	800c26a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c20a:	8882      	ldrh	r2, [r0, #4]
 800c20c:	444a      	add	r2, r9
 800c20e:	b292      	uxth	r2, r2
 800c210:	fa0f fe82 	sxth.w	lr, r2
 800c214:	4577      	cmp	r7, lr
 800c216:	da28      	bge.n	800c26a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c218:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c21c:	88cb      	ldrh	r3, [r1, #6]
 800c21e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c222:	442b      	add	r3, r5
 800c224:	b21b      	sxth	r3, r3
 800c226:	429e      	cmp	r6, r3
 800c228:	da1f      	bge.n	800c26a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c22a:	88c3      	ldrh	r3, [r0, #6]
 800c22c:	4433      	add	r3, r6
 800c22e:	b29b      	uxth	r3, r3
 800c230:	fa0f fc83 	sxth.w	ip, r3
 800c234:	4565      	cmp	r5, ip
 800c236:	da18      	bge.n	800c26a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c238:	454f      	cmp	r7, r9
 800c23a:	bfb8      	it	lt
 800c23c:	464f      	movlt	r7, r9
 800c23e:	42b5      	cmp	r5, r6
 800c240:	bfb8      	it	lt
 800c242:	4635      	movlt	r5, r6
 800c244:	45f0      	cmp	r8, lr
 800c246:	bfd8      	it	le
 800c248:	4622      	movle	r2, r4
 800c24a:	1bd2      	subs	r2, r2, r7
 800c24c:	8082      	strh	r2, [r0, #4]
 800c24e:	884a      	ldrh	r2, [r1, #2]
 800c250:	88c9      	ldrh	r1, [r1, #6]
 800c252:	8007      	strh	r7, [r0, #0]
 800c254:	440a      	add	r2, r1
 800c256:	b292      	uxth	r2, r2
 800c258:	b211      	sxth	r1, r2
 800c25a:	458c      	cmp	ip, r1
 800c25c:	bfa8      	it	ge
 800c25e:	4613      	movge	r3, r2
 800c260:	1b5b      	subs	r3, r3, r5
 800c262:	80c3      	strh	r3, [r0, #6]
 800c264:	8045      	strh	r5, [r0, #2]
 800c266:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c26a:	2300      	movs	r3, #0
 800c26c:	8003      	strh	r3, [r0, #0]
 800c26e:	8043      	strh	r3, [r0, #2]
 800c270:	8083      	strh	r3, [r0, #4]
 800c272:	80c3      	strh	r3, [r0, #6]
 800c274:	e7f7      	b.n	800c266 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c276 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c276:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	dd06      	ble.n	800c28c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c27e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c282:	2800      	cmp	r0, #0
 800c284:	bfcc      	ite	gt
 800c286:	2000      	movgt	r0, #0
 800c288:	2001      	movle	r0, #1
 800c28a:	4770      	bx	lr
 800c28c:	2001      	movs	r0, #1
 800c28e:	4770      	bx	lr

0800c290 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c294:	2300      	movs	r3, #0
 800c296:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c298:	8003      	strh	r3, [r0, #0]
 800c29a:	4604      	mov	r4, r0
 800c29c:	8043      	strh	r3, [r0, #2]
 800c29e:	8083      	strh	r3, [r0, #4]
 800c2a0:	80c3      	strh	r3, [r0, #6]
 800c2a2:	2d00      	cmp	r5, #0
 800c2a4:	d040      	beq.n	800c328 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c2a6:	1d28      	adds	r0, r5, #4
 800c2a8:	f7ff ffe5 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c2ac:	b988      	cbnz	r0, 800c2d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c2ae:	4620      	mov	r0, r4
 800c2b0:	f7ff ffe1 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c2b4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c2b8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c2bc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c2c0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c2c4:	b138      	cbz	r0, 800c2d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c2c6:	8022      	strh	r2, [r4, #0]
 800c2c8:	8063      	strh	r3, [r4, #2]
 800c2ca:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c2ce:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c2d2:	69ad      	ldr	r5, [r5, #24]
 800c2d4:	e7e5      	b.n	800c2a2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c2d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c2da:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c2de:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c2e2:	4290      	cmp	r0, r2
 800c2e4:	4607      	mov	r7, r0
 800c2e6:	bfa8      	it	ge
 800c2e8:	4617      	movge	r7, r2
 800c2ea:	4472      	add	r2, lr
 800c2ec:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c2f0:	8027      	strh	r7, [r4, #0]
 800c2f2:	4299      	cmp	r1, r3
 800c2f4:	460e      	mov	r6, r1
 800c2f6:	4440      	add	r0, r8
 800c2f8:	bfa8      	it	ge
 800c2fa:	461e      	movge	r6, r3
 800c2fc:	4471      	add	r1, lr
 800c2fe:	4463      	add	r3, ip
 800c300:	b200      	sxth	r0, r0
 800c302:	b212      	sxth	r2, r2
 800c304:	b209      	sxth	r1, r1
 800c306:	b21b      	sxth	r3, r3
 800c308:	4290      	cmp	r0, r2
 800c30a:	bfac      	ite	ge
 800c30c:	ebc7 0200 	rsbge	r2, r7, r0
 800c310:	ebc7 0202 	rsblt	r2, r7, r2
 800c314:	4299      	cmp	r1, r3
 800c316:	bfac      	ite	ge
 800c318:	ebc6 0301 	rsbge	r3, r6, r1
 800c31c:	ebc6 0303 	rsblt	r3, r6, r3
 800c320:	8066      	strh	r6, [r4, #2]
 800c322:	80a2      	strh	r2, [r4, #4]
 800c324:	80e3      	strh	r3, [r4, #6]
 800c326:	e7d4      	b.n	800c2d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c328:	4620      	mov	r0, r4
 800c32a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c32e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c32e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c332:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c336:	b383      	cbz	r3, 800c39a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c338:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c33a:	b374      	cbz	r4, 800c39a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c33c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c340:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c344:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c348:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c34c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c350:	b303      	cbz	r3, 800c394 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c352:	4668      	mov	r0, sp
 800c354:	1d21      	adds	r1, r4, #4
 800c356:	f8ad 5000 	strh.w	r5, [sp]
 800c35a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c35e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c362:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c366:	f7ff ff43 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800c36a:	4668      	mov	r0, sp
 800c36c:	f7ff ff83 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c370:	b980      	cbnz	r0, 800c394 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c372:	f8bd 3000 	ldrh.w	r3, [sp]
 800c376:	88a2      	ldrh	r2, [r4, #4]
 800c378:	1a9b      	subs	r3, r3, r2
 800c37a:	f8ad 3000 	strh.w	r3, [sp]
 800c37e:	88e2      	ldrh	r2, [r4, #6]
 800c380:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c384:	1a9b      	subs	r3, r3, r2
 800c386:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c38a:	6823      	ldr	r3, [r4, #0]
 800c38c:	4669      	mov	r1, sp
 800c38e:	689b      	ldr	r3, [r3, #8]
 800c390:	4620      	mov	r0, r4
 800c392:	4798      	blx	r3
 800c394:	69a4      	ldr	r4, [r4, #24]
 800c396:	2c00      	cmp	r4, #0
 800c398:	d1d8      	bne.n	800c34c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c39a:	b002      	add	sp, #8
 800c39c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c3a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c3a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c3a2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c3a6:	460d      	mov	r5, r1
 800c3a8:	4616      	mov	r6, r2
 800c3aa:	b323      	cbz	r3, 800c3f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c3ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c3ae:	b314      	cbz	r4, 800c3f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c3b0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c3b4:	b1eb      	cbz	r3, 800c3f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c3b6:	6828      	ldr	r0, [r5, #0]
 800c3b8:	6869      	ldr	r1, [r5, #4]
 800c3ba:	466b      	mov	r3, sp
 800c3bc:	c303      	stmia	r3!, {r0, r1}
 800c3be:	4668      	mov	r0, sp
 800c3c0:	1d21      	adds	r1, r4, #4
 800c3c2:	f7ff ff15 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800c3c6:	4668      	mov	r0, sp
 800c3c8:	f7ff ff55 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c3cc:	b988      	cbnz	r0, 800c3f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c3ce:	f8bd 3000 	ldrh.w	r3, [sp]
 800c3d2:	88a2      	ldrh	r2, [r4, #4]
 800c3d4:	1a9b      	subs	r3, r3, r2
 800c3d6:	f8ad 3000 	strh.w	r3, [sp]
 800c3da:	88e2      	ldrh	r2, [r4, #6]
 800c3dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c3e0:	1a9b      	subs	r3, r3, r2
 800c3e2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c3e6:	6823      	ldr	r3, [r4, #0]
 800c3e8:	4632      	mov	r2, r6
 800c3ea:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800c3ec:	4669      	mov	r1, sp
 800c3ee:	4620      	mov	r0, r4
 800c3f0:	4798      	blx	r3
 800c3f2:	69a4      	ldr	r4, [r4, #24]
 800c3f4:	e7db      	b.n	800c3ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c3f6:	b002      	add	sp, #8
 800c3f8:	bd70      	pop	{r4, r5, r6, pc}

0800c3fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c3fa:	b513      	push	{r0, r1, r4, lr}
 800c3fc:	6803      	ldr	r3, [r0, #0]
 800c3fe:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 800c402:	2300      	movs	r3, #0
 800c404:	e9cd 3300 	strd	r3, r3, [sp]
 800c408:	466b      	mov	r3, sp
 800c40a:	47a0      	blx	r4
 800c40c:	b002      	add	sp, #8
 800c40e:	bd10      	pop	{r4, pc}

0800c410 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c410:	2301      	movs	r3, #1
 800c412:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c416:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c41a:	4770      	bx	lr

0800c41c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c41c:	2301      	movs	r3, #1
 800c41e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c422:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c426:	4770      	bx	lr

0800c428 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c428:	6843      	ldr	r3, [r0, #4]
 800c42a:	2201      	movs	r2, #1
 800c42c:	725a      	strb	r2, [r3, #9]
 800c42e:	6840      	ldr	r0, [r0, #4]
 800c430:	6803      	ldr	r3, [r0, #0]
 800c432:	691b      	ldr	r3, [r3, #16]
 800c434:	4718      	bx	r3

0800c436 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c436:	6840      	ldr	r0, [r0, #4]
 800c438:	6803      	ldr	r3, [r0, #0]
 800c43a:	689b      	ldr	r3, [r3, #8]
 800c43c:	4718      	bx	r3

0800c43e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c43e:	b530      	push	{r4, r5, lr}
 800c440:	b08b      	sub	sp, #44	; 0x2c
 800c442:	6804      	ldr	r4, [r0, #0]
 800c444:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c448:	9508      	str	r5, [sp, #32]
 800c44a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c44e:	9507      	str	r5, [sp, #28]
 800c450:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c454:	9506      	str	r5, [sp, #24]
 800c456:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c45a:	9505      	str	r5, [sp, #20]
 800c45c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c460:	9504      	str	r5, [sp, #16]
 800c462:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c466:	9503      	str	r5, [sp, #12]
 800c468:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c46c:	9502      	str	r5, [sp, #8]
 800c46e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c472:	e9cd 3500 	strd	r3, r5, [sp]
 800c476:	4613      	mov	r3, r2
 800c478:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800c47a:	2200      	movs	r2, #0
 800c47c:	47a0      	blx	r4
 800c47e:	b00b      	add	sp, #44	; 0x2c
 800c480:	bd30      	pop	{r4, r5, pc}
	...

0800c484 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c484:	4b04      	ldr	r3, [pc, #16]	; (800c498 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c486:	781b      	ldrb	r3, [r3, #0]
 800c488:	b123      	cbz	r3, 800c494 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c48a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c48e:	f080 0001 	eor.w	r0, r0, #1
 800c492:	4770      	bx	lr
 800c494:	2001      	movs	r0, #1
 800c496:	4770      	bx	lr
 800c498:	2000eb0e 	.word	0x2000eb0e

0800c49c <_ZN8touchgfx3HAL8endFrameEv>:
 800c49c:	b510      	push	{r4, lr}
 800c49e:	4604      	mov	r4, r0
 800c4a0:	6840      	ldr	r0, [r0, #4]
 800c4a2:	6803      	ldr	r3, [r0, #0]
 800c4a4:	689b      	ldr	r3, [r3, #8]
 800c4a6:	4798      	blx	r3
 800c4a8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c4ac:	b113      	cbz	r3, 800c4b4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c4ae:	2301      	movs	r3, #1
 800c4b0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c4b4:	bd10      	pop	{r4, pc}

0800c4b6 <_ZN8touchgfx3HAL10initializeEv>:
 800c4b6:	b510      	push	{r4, lr}
 800c4b8:	4604      	mov	r4, r0
 800c4ba:	f7f4 fbcd 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c4be:	6860      	ldr	r0, [r4, #4]
 800c4c0:	6803      	ldr	r3, [r0, #0]
 800c4c2:	68db      	ldr	r3, [r3, #12]
 800c4c4:	4798      	blx	r3
 800c4c6:	68e0      	ldr	r0, [r4, #12]
 800c4c8:	6803      	ldr	r3, [r0, #0]
 800c4ca:	689b      	ldr	r3, [r3, #8]
 800c4cc:	4798      	blx	r3
 800c4ce:	6823      	ldr	r3, [r4, #0]
 800c4d0:	4620      	mov	r0, r4
 800c4d2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c4d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4d8:	4718      	bx	r3
	...

0800c4dc <_ZN8touchgfx3HAL4tickEv>:
 800c4dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c4de:	6803      	ldr	r3, [r0, #0]
 800c4e0:	4d5c      	ldr	r5, [pc, #368]	; (800c654 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c4e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	4798      	blx	r3
 800c4ea:	2800      	cmp	r0, #0
 800c4ec:	f000 8097 	beq.w	800c61e <_ZN8touchgfx3HAL4tickEv+0x142>
 800c4f0:	2001      	movs	r0, #1
 800c4f2:	f7f4 f92f 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c4f6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c4fa:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c4fe:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c502:	2600      	movs	r6, #0
 800c504:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c508:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c50c:	b133      	cbz	r3, 800c51c <_ZN8touchgfx3HAL4tickEv+0x40>
 800c50e:	6823      	ldr	r3, [r4, #0]
 800c510:	4620      	mov	r0, r4
 800c512:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c516:	4798      	blx	r3
 800c518:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c51c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c520:	6862      	ldr	r2, [r4, #4]
 800c522:	f083 0301 	eor.w	r3, r3, #1
 800c526:	7253      	strb	r3, [r2, #9]
 800c528:	2601      	movs	r6, #1
 800c52a:	702e      	strb	r6, [r5, #0]
 800c52c:	f004 f8b6 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 800c530:	6803      	ldr	r3, [r0, #0]
 800c532:	4631      	mov	r1, r6
 800c534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c536:	4798      	blx	r3
 800c538:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c53c:	b90b      	cbnz	r3, 800c542 <_ZN8touchgfx3HAL4tickEv+0x66>
 800c53e:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c542:	f004 f8ab 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 800c546:	6803      	ldr	r3, [r0, #0]
 800c548:	695b      	ldr	r3, [r3, #20]
 800c54a:	4798      	blx	r3
 800c54c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c54e:	6803      	ldr	r3, [r0, #0]
 800c550:	691b      	ldr	r3, [r3, #16]
 800c552:	4798      	blx	r3
 800c554:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c558:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c55c:	3b01      	subs	r3, #1
 800c55e:	b2db      	uxtb	r3, r3
 800c560:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c564:	b10a      	cbz	r2, 800c56a <_ZN8touchgfx3HAL4tickEv+0x8e>
 800c566:	2b00      	cmp	r3, #0
 800c568:	d1eb      	bne.n	800c542 <_ZN8touchgfx3HAL4tickEv+0x66>
 800c56a:	4a3b      	ldr	r2, [pc, #236]	; (800c658 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c56c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c570:	7813      	ldrb	r3, [r2, #0]
 800c572:	3301      	adds	r3, #1
 800c574:	b25b      	sxtb	r3, r3
 800c576:	4299      	cmp	r1, r3
 800c578:	7013      	strb	r3, [r2, #0]
 800c57a:	dc10      	bgt.n	800c59e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c57c:	68e0      	ldr	r0, [r4, #12]
 800c57e:	2300      	movs	r3, #0
 800c580:	7013      	strb	r3, [r2, #0]
 800c582:	6803      	ldr	r3, [r0, #0]
 800c584:	aa03      	add	r2, sp, #12
 800c586:	68db      	ldr	r3, [r3, #12]
 800c588:	a902      	add	r1, sp, #8
 800c58a:	4798      	blx	r3
 800c58c:	6823      	ldr	r3, [r4, #0]
 800c58e:	2800      	cmp	r0, #0
 800c590:	d051      	beq.n	800c636 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800c592:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c596:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c59a:	4620      	mov	r0, r4
 800c59c:	4798      	blx	r3
 800c59e:	6960      	ldr	r0, [r4, #20]
 800c5a0:	2300      	movs	r3, #0
 800c5a2:	f88d 3007 	strb.w	r3, [sp, #7]
 800c5a6:	b158      	cbz	r0, 800c5c0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c5a8:	6803      	ldr	r3, [r0, #0]
 800c5aa:	f10d 0107 	add.w	r1, sp, #7
 800c5ae:	68db      	ldr	r3, [r3, #12]
 800c5b0:	4798      	blx	r3
 800c5b2:	b128      	cbz	r0, 800c5c0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c5b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c5b6:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c5ba:	6803      	ldr	r3, [r0, #0]
 800c5bc:	68db      	ldr	r3, [r3, #12]
 800c5be:	4798      	blx	r3
 800c5c0:	f104 001c 	add.w	r0, r4, #28
 800c5c4:	f012 ff32 	bl	801f42c <_ZN8touchgfx8Gestures4tickEv>
 800c5c8:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c5cc:	b30b      	cbz	r3, 800c612 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c5ce:	6920      	ldr	r0, [r4, #16]
 800c5d0:	6803      	ldr	r3, [r0, #0]
 800c5d2:	691b      	ldr	r3, [r3, #16]
 800c5d4:	4798      	blx	r3
 800c5d6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c5d8:	4606      	mov	r6, r0
 800c5da:	b903      	cbnz	r3, 800c5de <_ZN8touchgfx3HAL4tickEv+0x102>
 800c5dc:	6720      	str	r0, [r4, #112]	; 0x70
 800c5de:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c5e0:	4a1e      	ldr	r2, [pc, #120]	; (800c65c <_ZN8touchgfx3HAL4tickEv+0x180>)
 800c5e2:	1af3      	subs	r3, r6, r3
 800c5e4:	4293      	cmp	r3, r2
 800c5e6:	d914      	bls.n	800c612 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c5e8:	6920      	ldr	r0, [r4, #16]
 800c5ea:	6803      	ldr	r3, [r0, #0]
 800c5ec:	699b      	ldr	r3, [r3, #24]
 800c5ee:	4798      	blx	r3
 800c5f0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c5f2:	2264      	movs	r2, #100	; 0x64
 800c5f4:	1af3      	subs	r3, r6, r3
 800c5f6:	fbb3 f3f2 	udiv	r3, r3, r2
 800c5fa:	fbb0 f0f3 	udiv	r0, r0, r3
 800c5fe:	2800      	cmp	r0, #0
 800c600:	dc1e      	bgt.n	800c640 <_ZN8touchgfx3HAL4tickEv+0x164>
 800c602:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c606:	6920      	ldr	r0, [r4, #16]
 800c608:	6803      	ldr	r3, [r0, #0]
 800c60a:	2100      	movs	r1, #0
 800c60c:	69db      	ldr	r3, [r3, #28]
 800c60e:	4798      	blx	r3
 800c610:	6726      	str	r6, [r4, #112]	; 0x70
 800c612:	f004 f843 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 800c616:	6803      	ldr	r3, [r0, #0]
 800c618:	2100      	movs	r1, #0
 800c61a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c61c:	4798      	blx	r3
 800c61e:	6823      	ldr	r3, [r4, #0]
 800c620:	4620      	mov	r0, r4
 800c622:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c626:	4798      	blx	r3
 800c628:	2001      	movs	r0, #1
 800c62a:	f7f4 f8af 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c62e:	2300      	movs	r3, #0
 800c630:	702b      	strb	r3, [r5, #0]
 800c632:	b004      	add	sp, #16
 800c634:	bd70      	pop	{r4, r5, r6, pc}
 800c636:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c63a:	4620      	mov	r0, r4
 800c63c:	4798      	blx	r3
 800c63e:	e7ae      	b.n	800c59e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c640:	2863      	cmp	r0, #99	; 0x63
 800c642:	bfcb      	itete	gt
 800c644:	2300      	movgt	r3, #0
 800c646:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c64a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c64e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c652:	e7d8      	b.n	800c606 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800c654:	2000eb14 	.word	0x2000eb14
 800c658:	2000eb15 	.word	0x2000eb15
 800c65c:	05f5e100 	.word	0x05f5e100

0800c660 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c660:	f7f4 bb2a 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c664 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c664:	6581      	str	r1, [r0, #88]	; 0x58
 800c666:	301c      	adds	r0, #28
 800c668:	f012 bede 	b.w	801f428 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c66c <_ZN8touchgfx3HAL5touchEll>:
 800c66c:	b530      	push	{r4, r5, lr}
 800c66e:	b087      	sub	sp, #28
 800c670:	4604      	mov	r4, r0
 800c672:	a804      	add	r0, sp, #16
 800c674:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c678:	f003 fdf2 	bl	8010260 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c67c:	9b04      	ldr	r3, [sp, #16]
 800c67e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c682:	a906      	add	r1, sp, #24
 800c684:	9b05      	ldr	r3, [sp, #20]
 800c686:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c68a:	a803      	add	r0, sp, #12
 800c68c:	f003 fe26 	bl	80102dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c690:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c694:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c698:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c69c:	f104 001c 	add.w	r0, r4, #28
 800c6a0:	b189      	cbz	r1, 800c6c6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c6a2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c6a6:	9300      	str	r3, [sp, #0]
 800c6a8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c6ac:	4613      	mov	r3, r2
 800c6ae:	462a      	mov	r2, r5
 800c6b0:	f012 feca 	bl	801f448 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c6b4:	b128      	cbz	r0, 800c6c2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c6b6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c6ba:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c6bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c6c0:	6623      	str	r3, [r4, #96]	; 0x60
 800c6c2:	b007      	add	sp, #28
 800c6c4:	bd30      	pop	{r4, r5, pc}
 800c6c6:	f012 ff03 	bl	801f4d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c6ca:	2301      	movs	r3, #1
 800c6cc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c6d0:	e7f1      	b.n	800c6b6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c6d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c6d2:	b570      	push	{r4, r5, r6, lr}
 800c6d4:	2b00      	cmp	r3, #0
 800c6d6:	d050      	beq.n	800c77a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c6d8:	ea81 0002 	eor.w	r0, r1, r2
 800c6dc:	07c6      	lsls	r6, r0, #31
 800c6de:	d508      	bpl.n	800c6f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c6e0:	3a01      	subs	r2, #1
 800c6e2:	18cc      	adds	r4, r1, r3
 800c6e4:	42a1      	cmp	r1, r4
 800c6e6:	d048      	beq.n	800c77a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c6e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c6ec:	f801 0b01 	strb.w	r0, [r1], #1
 800c6f0:	e7f8      	b.n	800c6e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c6f2:	07d5      	lsls	r5, r2, #31
 800c6f4:	bf42      	ittt	mi
 800c6f6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c6fa:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c6fe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c702:	2b01      	cmp	r3, #1
 800c704:	d915      	bls.n	800c732 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c706:	ea82 0001 	eor.w	r0, r2, r1
 800c70a:	0784      	lsls	r4, r0, #30
 800c70c:	d02d      	beq.n	800c76a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800c70e:	1e94      	subs	r4, r2, #2
 800c710:	4608      	mov	r0, r1
 800c712:	18ce      	adds	r6, r1, r3
 800c714:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800c718:	f820 5b02 	strh.w	r5, [r0], #2
 800c71c:	1a35      	subs	r5, r6, r0
 800c71e:	2d01      	cmp	r5, #1
 800c720:	d8f8      	bhi.n	800c714 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800c722:	1e98      	subs	r0, r3, #2
 800c724:	f020 0001 	bic.w	r0, r0, #1
 800c728:	3002      	adds	r0, #2
 800c72a:	4401      	add	r1, r0
 800c72c:	4402      	add	r2, r0
 800c72e:	f003 0301 	and.w	r3, r3, #1
 800c732:	1f14      	subs	r4, r2, #4
 800c734:	4608      	mov	r0, r1
 800c736:	18ce      	adds	r6, r1, r3
 800c738:	1a35      	subs	r5, r6, r0
 800c73a:	2d03      	cmp	r5, #3
 800c73c:	d810      	bhi.n	800c760 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800c73e:	089c      	lsrs	r4, r3, #2
 800c740:	00a0      	lsls	r0, r4, #2
 800c742:	4401      	add	r1, r0
 800c744:	3801      	subs	r0, #1
 800c746:	4402      	add	r2, r0
 800c748:	f06f 0003 	mvn.w	r0, #3
 800c74c:	fb00 3404 	mla	r4, r0, r4, r3
 800c750:	440c      	add	r4, r1
 800c752:	42a1      	cmp	r1, r4
 800c754:	d011      	beq.n	800c77a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c756:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c75a:	f801 3b01 	strb.w	r3, [r1], #1
 800c75e:	e7f8      	b.n	800c752 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800c760:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800c764:	f840 5b04 	str.w	r5, [r0], #4
 800c768:	e7e6      	b.n	800c738 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800c76a:	0790      	lsls	r0, r2, #30
 800c76c:	d0e1      	beq.n	800c732 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c76e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c772:	f821 0b02 	strh.w	r0, [r1], #2
 800c776:	3b02      	subs	r3, #2
 800c778:	e7db      	b.n	800c732 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c77a:	2001      	movs	r0, #1
 800c77c:	bd70      	pop	{r4, r5, r6, pc}

0800c77e <_ZN8touchgfx3HAL7noTouchEv>:
 800c77e:	b510      	push	{r4, lr}
 800c780:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c784:	4604      	mov	r4, r0
 800c786:	b153      	cbz	r3, 800c79e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c788:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c78c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c790:	2101      	movs	r1, #1
 800c792:	301c      	adds	r0, #28
 800c794:	f012 fe9c 	bl	801f4d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c798:	2300      	movs	r3, #0
 800c79a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c79e:	bd10      	pop	{r4, pc}

0800c7a0 <_ZN8touchgfx3HAL3lcdEv>:
 800c7a0:	4b04      	ldr	r3, [pc, #16]	; (800c7b4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800c7a2:	681b      	ldr	r3, [r3, #0]
 800c7a4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c7a8:	b10a      	cbz	r2, 800c7ae <_ZN8touchgfx3HAL3lcdEv+0xe>
 800c7aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c7ac:	b900      	cbnz	r0, 800c7b0 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800c7ae:	6898      	ldr	r0, [r3, #8]
 800c7b0:	4770      	bx	lr
 800c7b2:	bf00      	nop
 800c7b4:	2000eb10 	.word	0x2000eb10

0800c7b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c7b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c7bc:	4604      	mov	r4, r0
 800c7be:	6980      	ldr	r0, [r0, #24]
 800c7c0:	b085      	sub	sp, #20
 800c7c2:	460f      	mov	r7, r1
 800c7c4:	4690      	mov	r8, r2
 800c7c6:	4699      	mov	r9, r3
 800c7c8:	b930      	cbnz	r0, 800c7d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800c7ca:	4b1c      	ldr	r3, [pc, #112]	; (800c83c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800c7cc:	4a1c      	ldr	r2, [pc, #112]	; (800c840 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800c7ce:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 800c7d2:	481c      	ldr	r0, [pc, #112]	; (800c844 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800c7d4:	f014 fb34 	bl	8020e40 <__assert_func>
 800c7d8:	ad04      	add	r5, sp, #16
 800c7da:	2600      	movs	r6, #0
 800c7dc:	f845 6d04 	str.w	r6, [r5, #-4]!
 800c7e0:	6806      	ldr	r6, [r0, #0]
 800c7e2:	9501      	str	r5, [sp, #4]
 800c7e4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800c7e8:	9500      	str	r5, [sp, #0]
 800c7ea:	6835      	ldr	r5, [r6, #0]
 800c7ec:	47a8      	blx	r5
 800c7ee:	4d16      	ldr	r5, [pc, #88]	; (800c848 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800c7f0:	4606      	mov	r6, r0
 800c7f2:	f8a5 9000 	strh.w	r9, [r5]
 800c7f6:	f7ff ffd3 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800c7fa:	6803      	ldr	r3, [r0, #0]
 800c7fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c7fe:	4798      	blx	r3
 800c800:	2801      	cmp	r0, #1
 800c802:	d012      	beq.n	800c82a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800c804:	d306      	bcc.n	800c814 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800c806:	280d      	cmp	r0, #13
 800c808:	d80b      	bhi.n	800c822 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800c80a:	4b10      	ldr	r3, [pc, #64]	; (800c84c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c80c:	4a0c      	ldr	r2, [pc, #48]	; (800c840 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800c80e:	f44f 71b4 	mov.w	r1, #360	; 0x168
 800c812:	e7de      	b.n	800c7d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800c814:	882b      	ldrh	r3, [r5, #0]
 800c816:	fb08 7203 	mla	r2, r8, r3, r7
 800c81a:	9b03      	ldr	r3, [sp, #12]
 800c81c:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c820:	63e3      	str	r3, [r4, #60]	; 0x3c
 800c822:	4630      	mov	r0, r6
 800c824:	b005      	add	sp, #20
 800c826:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c82a:	882a      	ldrh	r2, [r5, #0]
 800c82c:	9b03      	ldr	r3, [sp, #12]
 800c82e:	fb08 7202 	mla	r2, r8, r2, r7
 800c832:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c836:	1a9a      	subs	r2, r3, r2
 800c838:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c83a:	e7f2      	b.n	800c822 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800c83c:	08023a1c 	.word	0x08023a1c
 800c840:	08023cd4 	.word	0x08023cd4
 800c844:	08023a61 	.word	0x08023a61
 800c848:	2000eb0a 	.word	0x2000eb0a
 800c84c:	08023a87 	.word	0x08023a87

0800c850 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c850:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c852:	b08b      	sub	sp, #44	; 0x2c
 800c854:	4617      	mov	r7, r2
 800c856:	4604      	mov	r4, r0
 800c858:	460e      	mov	r6, r1
 800c85a:	461d      	mov	r5, r3
 800c85c:	f7ff ffa0 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800c860:	6803      	ldr	r3, [r0, #0]
 800c862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c864:	4798      	blx	r3
 800c866:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c86a:	4b0e      	ldr	r3, [pc, #56]	; (800c8a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 800c86c:	6822      	ldr	r2, [r4, #0]
 800c86e:	881b      	ldrh	r3, [r3, #0]
 800c870:	9306      	str	r3, [sp, #24]
 800c872:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c876:	9305      	str	r3, [sp, #20]
 800c878:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c87c:	9304      	str	r3, [sp, #16]
 800c87e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c882:	9303      	str	r3, [sp, #12]
 800c884:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c888:	9302      	str	r3, [sp, #8]
 800c88a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c88e:	e9cd 5300 	strd	r5, r3, [sp]
 800c892:	4631      	mov	r1, r6
 800c894:	6b95      	ldr	r5, [r2, #56]	; 0x38
 800c896:	463b      	mov	r3, r7
 800c898:	2200      	movs	r2, #0
 800c89a:	4620      	mov	r0, r4
 800c89c:	47a8      	blx	r5
 800c89e:	b00b      	add	sp, #44	; 0x2c
 800c8a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8a2:	bf00      	nop
 800c8a4:	2000eb0a 	.word	0x2000eb0a

0800c8a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800c8a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c8ac:	4698      	mov	r8, r3
 800c8ae:	6803      	ldr	r3, [r0, #0]
 800c8b0:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 800c8b2:	4b13      	ldr	r3, [pc, #76]	; (800c900 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800c8b4:	b08b      	sub	sp, #44	; 0x2c
 800c8b6:	4617      	mov	r7, r2
 800c8b8:	f8b3 9000 	ldrh.w	r9, [r3]
 800c8bc:	460e      	mov	r6, r1
 800c8be:	4604      	mov	r4, r0
 800c8c0:	f7ff ff6e 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800c8c4:	6803      	ldr	r3, [r0, #0]
 800c8c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8c8:	4798      	blx	r3
 800c8ca:	2302      	movs	r3, #2
 800c8cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c8d0:	2301      	movs	r3, #1
 800c8d2:	9305      	str	r3, [sp, #20]
 800c8d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c8d8:	9304      	str	r3, [sp, #16]
 800c8da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c8de:	9303      	str	r3, [sp, #12]
 800c8e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c8e4:	9302      	str	r3, [sp, #8]
 800c8e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c8ea:	9008      	str	r0, [sp, #32]
 800c8ec:	e9cd 8300 	strd	r8, r3, [sp]
 800c8f0:	2200      	movs	r2, #0
 800c8f2:	463b      	mov	r3, r7
 800c8f4:	4631      	mov	r1, r6
 800c8f6:	4620      	mov	r0, r4
 800c8f8:	47a8      	blx	r5
 800c8fa:	b00b      	add	sp, #44	; 0x2c
 800c8fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c900:	2000eb0a 	.word	0x2000eb0a

0800c904 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800c904:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c908:	4698      	mov	r8, r3
 800c90a:	6803      	ldr	r3, [r0, #0]
 800c90c:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800c90e:	4b0f      	ldr	r3, [pc, #60]	; (800c94c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800c910:	b087      	sub	sp, #28
 800c912:	f8b3 9000 	ldrh.w	r9, [r3]
 800c916:	460e      	mov	r6, r1
 800c918:	4617      	mov	r7, r2
 800c91a:	4604      	mov	r4, r0
 800c91c:	f7ff ff40 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800c920:	6803      	ldr	r3, [r0, #0]
 800c922:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c924:	4798      	blx	r3
 800c926:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c92a:	9302      	str	r3, [sp, #8]
 800c92c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c930:	9301      	str	r3, [sp, #4]
 800c932:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c936:	9300      	str	r3, [sp, #0]
 800c938:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800c93c:	4643      	mov	r3, r8
 800c93e:	463a      	mov	r2, r7
 800c940:	4631      	mov	r1, r6
 800c942:	4620      	mov	r0, r4
 800c944:	47a8      	blx	r5
 800c946:	b007      	add	sp, #28
 800c948:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c94c:	2000eb0a 	.word	0x2000eb0a

0800c950 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c954:	4604      	mov	r4, r0
 800c956:	b08f      	sub	sp, #60	; 0x3c
 800c958:	4610      	mov	r0, r2
 800c95a:	460d      	mov	r5, r1
 800c95c:	4691      	mov	r9, r2
 800c95e:	461e      	mov	r6, r3
 800c960:	f006 fec4 	bl	80136ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c964:	2800      	cmp	r0, #0
 800c966:	f000 80b3 	beq.w	800cad0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 800c96a:	6823      	ldr	r3, [r4, #0]
 800c96c:	f8df b190 	ldr.w	fp, [pc, #400]	; 800cb00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 800c970:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c972:	f8df a190 	ldr.w	sl, [pc, #400]	; 800cb04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800c976:	4f5f      	ldr	r7, [pc, #380]	; (800caf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800c978:	4620      	mov	r0, r4
 800c97a:	4798      	blx	r3
 800c97c:	6823      	ldr	r3, [r4, #0]
 800c97e:	4620      	mov	r0, r4
 800c980:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c982:	4798      	blx	r3
 800c984:	f8bb 3000 	ldrh.w	r3, [fp]
 800c988:	9300      	str	r3, [sp, #0]
 800c98a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c98e:	f8ba 3000 	ldrh.w	r3, [sl]
 800c992:	9301      	str	r3, [sp, #4]
 800c994:	883b      	ldrh	r3, [r7, #0]
 800c996:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c99a:	9302      	str	r3, [sp, #8]
 800c99c:	4b56      	ldr	r3, [pc, #344]	; (800caf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800c99e:	9304      	str	r3, [sp, #16]
 800c9a0:	881a      	ldrh	r2, [r3, #0]
 800c9a2:	9203      	str	r2, [sp, #12]
 800c9a4:	4640      	mov	r0, r8
 800c9a6:	f006 ff5b 	bl	8013860 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c9aa:	8038      	strh	r0, [r7, #0]
 800c9ac:	4640      	mov	r0, r8
 800c9ae:	f006 ff91 	bl	80138d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c9b2:	9b04      	ldr	r3, [sp, #16]
 800c9b4:	8018      	strh	r0, [r3, #0]
 800c9b6:	4b51      	ldr	r3, [pc, #324]	; (800cafc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c9b8:	781b      	ldrb	r3, [r3, #0]
 800c9ba:	2b00      	cmp	r3, #0
 800c9bc:	f040 808b 	bne.w	800cad6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 800c9c0:	883b      	ldrh	r3, [r7, #0]
 800c9c2:	f8ab 3000 	strh.w	r3, [fp]
 800c9c6:	f8aa 0000 	strh.w	r0, [sl]
 800c9ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c9cc:	9304      	str	r3, [sp, #16]
 800c9ce:	4648      	mov	r0, r9
 800c9d0:	6c27      	ldr	r7, [r4, #64]	; 0x40
 800c9d2:	f006 fe8b 	bl	80136ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c9d6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800c9da:	2200      	movs	r2, #0
 800c9dc:	4611      	mov	r1, r2
 800c9de:	4628      	mov	r0, r5
 800c9e0:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c9e4:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c9e8:	f7f5 ff2c 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 800c9ec:	2301      	movs	r3, #1
 800c9ee:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800c9f2:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800c9f6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c9fa:	2b00      	cmp	r3, #0
 800c9fc:	dd71      	ble.n	800cae2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 800c9fe:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ca02:	2b00      	cmp	r3, #0
 800ca04:	dd6d      	ble.n	800cae2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 800ca06:	462a      	mov	r2, r5
 800ca08:	ab0a      	add	r3, sp, #40	; 0x28
 800ca0a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ca0e:	6851      	ldr	r1, [r2, #4]
 800ca10:	c303      	stmia	r3!, {r0, r1}
 800ca12:	4631      	mov	r1, r6
 800ca14:	a80a      	add	r0, sp, #40	; 0x28
 800ca16:	f7ff fbeb 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800ca1a:	4b36      	ldr	r3, [pc, #216]	; (800caf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800ca1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca20:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ca24:	4b34      	ldr	r3, [pc, #208]	; (800caf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ca26:	aa0a      	add	r2, sp, #40	; 0x28
 800ca28:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ca2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca30:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ca34:	ab08      	add	r3, sp, #32
 800ca36:	e883 0003 	stmia.w	r3, {r0, r1}
 800ca3a:	2600      	movs	r6, #0
 800ca3c:	4618      	mov	r0, r3
 800ca3e:	a90c      	add	r1, sp, #48	; 0x30
 800ca40:	960c      	str	r6, [sp, #48]	; 0x30
 800ca42:	f7ff fbd5 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800ca46:	a807      	add	r0, sp, #28
 800ca48:	f007 f89c 	bl	8013b84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ca4c:	4680      	mov	r8, r0
 800ca4e:	f7ff fea7 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800ca52:	6802      	ldr	r2, [r0, #0]
 800ca54:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800ca56:	4790      	blx	r2
 800ca58:	4580      	cmp	r8, r0
 800ca5a:	d049      	beq.n	800caf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 800ca5c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ca5e:	b150      	cbz	r0, 800ca76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 800ca60:	a807      	add	r0, sp, #28
 800ca62:	f007 f88f 	bl	8013b84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ca66:	4606      	mov	r6, r0
 800ca68:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ca6a:	6803      	ldr	r3, [r0, #0]
 800ca6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca6e:	4798      	blx	r3
 800ca70:	1a33      	subs	r3, r6, r0
 800ca72:	4258      	negs	r0, r3
 800ca74:	4158      	adcs	r0, r3
 800ca76:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ca7a:	2600      	movs	r6, #0
 800ca7c:	682a      	ldr	r2, [r5, #0]
 800ca7e:	696b      	ldr	r3, [r5, #20]
 800ca80:	616e      	str	r6, [r5, #20]
 800ca82:	9305      	str	r3, [sp, #20]
 800ca84:	6892      	ldr	r2, [r2, #8]
 800ca86:	a908      	add	r1, sp, #32
 800ca88:	4628      	mov	r0, r5
 800ca8a:	4790      	blx	r2
 800ca8c:	9b05      	ldr	r3, [sp, #20]
 800ca8e:	616b      	str	r3, [r5, #20]
 800ca90:	4652      	mov	r2, sl
 800ca92:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ca96:	4649      	mov	r1, r9
 800ca98:	4628      	mov	r0, r5
 800ca9a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ca9e:	f7f5 fed1 	bl	8002844 <_ZN8touchgfx8Drawable5setXYEss>
 800caa2:	9b04      	ldr	r3, [sp, #16]
 800caa4:	9a00      	ldr	r2, [sp, #0]
 800caa6:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 800caaa:	4b15      	ldr	r3, [pc, #84]	; (800cb00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800caac:	801a      	strh	r2, [r3, #0]
 800caae:	4b15      	ldr	r3, [pc, #84]	; (800cb04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800cab0:	9a01      	ldr	r2, [sp, #4]
 800cab2:	801a      	strh	r2, [r3, #0]
 800cab4:	4b0f      	ldr	r3, [pc, #60]	; (800caf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800cab6:	9a02      	ldr	r2, [sp, #8]
 800cab8:	801a      	strh	r2, [r3, #0]
 800caba:	4b0f      	ldr	r3, [pc, #60]	; (800caf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800cabc:	9a03      	ldr	r2, [sp, #12]
 800cabe:	801a      	strh	r2, [r3, #0]
 800cac0:	6823      	ldr	r3, [r4, #0]
 800cac2:	4620      	mov	r0, r4
 800cac4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cac6:	4798      	blx	r3
 800cac8:	6823      	ldr	r3, [r4, #0]
 800caca:	4620      	mov	r0, r4
 800cacc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cace:	4798      	blx	r3
 800cad0:	b00f      	add	sp, #60	; 0x3c
 800cad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cad6:	883b      	ldrh	r3, [r7, #0]
 800cad8:	f8ab 0000 	strh.w	r0, [fp]
 800cadc:	f8aa 3000 	strh.w	r3, [sl]
 800cae0:	e773      	b.n	800c9ca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800cae2:	462a      	mov	r2, r5
 800cae4:	ab0a      	add	r3, sp, #40	; 0x28
 800cae6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800caea:	6851      	ldr	r1, [r2, #4]
 800caec:	c303      	stmia	r3!, {r0, r1}
 800caee:	e794      	b.n	800ca1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 800caf0:	4630      	mov	r0, r6
 800caf2:	e7c0      	b.n	800ca76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 800caf4:	2000eb04 	.word	0x2000eb04
 800caf8:	2000eb06 	.word	0x2000eb06
 800cafc:	2000eb08 	.word	0x2000eb08
 800cb00:	2000eb0a 	.word	0x2000eb0a
 800cb04:	2000eb0c 	.word	0x2000eb0c

0800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cb08:	b510      	push	{r4, lr}
 800cb0a:	4b07      	ldr	r3, [pc, #28]	; (800cb28 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cb0c:	781b      	ldrb	r3, [r3, #0]
 800cb0e:	4604      	mov	r4, r0
 800cb10:	b13b      	cbz	r3, 800cb22 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cb12:	6803      	ldr	r3, [r0, #0]
 800cb14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cb16:	4798      	blx	r3
 800cb18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cb1a:	4283      	cmp	r3, r0
 800cb1c:	d101      	bne.n	800cb22 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cb1e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800cb20:	bd10      	pop	{r4, pc}
 800cb22:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cb24:	e7fc      	b.n	800cb20 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cb26:	bf00      	nop
 800cb28:	2000eb0e 	.word	0x2000eb0e

0800cb2c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cb2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb30:	b088      	sub	sp, #32
 800cb32:	461c      	mov	r4, r3
 800cb34:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cb38:	2500      	movs	r5, #0
 800cb3a:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 800cb3e:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 800cb42:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 800cb46:	9503      	str	r5, [sp, #12]
 800cb48:	e9cd 3100 	strd	r3, r1, [sp]
 800cb4c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cb50:	f8ad 8014 	strh.w	r8, [sp, #20]
 800cb54:	4692      	mov	sl, r2
 800cb56:	4606      	mov	r6, r0
 800cb58:	f8ad 7016 	strh.w	r7, [sp, #22]
 800cb5c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cb60:	f88d 501c 	strb.w	r5, [sp, #28]
 800cb64:	f7ff ffd0 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb68:	fb09 a404 	mla	r4, r9, r4, sl
 800cb6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800cb70:	9404      	str	r4, [sp, #16]
 800cb72:	f8ad 901a 	strh.w	r9, [sp, #26]
 800cb76:	f88d 501e 	strb.w	r5, [sp, #30]
 800cb7a:	f88d 501d 	strb.w	r5, [sp, #29]
 800cb7e:	f1b8 0f00 	cmp.w	r8, #0
 800cb82:	d000      	beq.n	800cb86 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 800cb84:	b937      	cbnz	r7, 800cb94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 800cb86:	4b0d      	ldr	r3, [pc, #52]	; (800cbbc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 800cb88:	4a0d      	ldr	r2, [pc, #52]	; (800cbc0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800cb8a:	f44f 7101 	mov.w	r1, #516	; 0x204
 800cb8e:	480d      	ldr	r0, [pc, #52]	; (800cbc4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800cb90:	f014 f956 	bl	8020e40 <__assert_func>
 800cb94:	6833      	ldr	r3, [r6, #0]
 800cb96:	9c00      	ldr	r4, [sp, #0]
 800cb98:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cb9a:	4630      	mov	r0, r6
 800cb9c:	4798      	blx	r3
 800cb9e:	4220      	tst	r0, r4
 800cba0:	d104      	bne.n	800cbac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 800cba2:	4b09      	ldr	r3, [pc, #36]	; (800cbc8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800cba4:	4a06      	ldr	r2, [pc, #24]	; (800cbc0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800cba6:	f240 2105 	movw	r1, #517	; 0x205
 800cbaa:	e7f0      	b.n	800cb8e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800cbac:	6870      	ldr	r0, [r6, #4]
 800cbae:	6803      	ldr	r3, [r0, #0]
 800cbb0:	4669      	mov	r1, sp
 800cbb2:	685b      	ldr	r3, [r3, #4]
 800cbb4:	4798      	blx	r3
 800cbb6:	b008      	add	sp, #32
 800cbb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cbbc:	080238af 	.word	0x080238af
 800cbc0:	08023b0f 	.word	0x08023b0f
 800cbc4:	08023a61 	.word	0x08023a61
 800cbc8:	080238e7 	.word	0x080238e7

0800cbcc <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800cbcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbd0:	b089      	sub	sp, #36	; 0x24
 800cbd2:	2400      	movs	r4, #0
 800cbd4:	461d      	mov	r5, r3
 800cbd6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800cbda:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 800cbde:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800cbe2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800cbe6:	9403      	str	r4, [sp, #12]
 800cbe8:	468a      	mov	sl, r1
 800cbea:	4693      	mov	fp, r2
 800cbec:	4606      	mov	r6, r0
 800cbee:	e9cd 3400 	strd	r3, r4, [sp]
 800cbf2:	f7ff ff89 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cbf6:	fb09 b505 	mla	r5, r9, r5, fp
 800cbfa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cbfe:	9504      	str	r5, [sp, #16]
 800cc00:	f8ad 8014 	strh.w	r8, [sp, #20]
 800cc04:	f8ad 7016 	strh.w	r7, [sp, #22]
 800cc08:	f8ad 4018 	strh.w	r4, [sp, #24]
 800cc0c:	f8ad 901a 	strh.w	r9, [sp, #26]
 800cc10:	f8cd a00c 	str.w	sl, [sp, #12]
 800cc14:	f8ad 401c 	strh.w	r4, [sp, #28]
 800cc18:	f88d 401e 	strb.w	r4, [sp, #30]
 800cc1c:	f1b8 0f00 	cmp.w	r8, #0
 800cc20:	d000      	beq.n	800cc24 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 800cc22:	b937      	cbnz	r7, 800cc32 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 800cc24:	4b0d      	ldr	r3, [pc, #52]	; (800cc5c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 800cc26:	4a0e      	ldr	r2, [pc, #56]	; (800cc60 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800cc28:	f240 2119 	movw	r1, #537	; 0x219
 800cc2c:	480d      	ldr	r0, [pc, #52]	; (800cc64 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800cc2e:	f014 f907 	bl	8020e40 <__assert_func>
 800cc32:	6833      	ldr	r3, [r6, #0]
 800cc34:	9c00      	ldr	r4, [sp, #0]
 800cc36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cc38:	4630      	mov	r0, r6
 800cc3a:	4798      	blx	r3
 800cc3c:	4220      	tst	r0, r4
 800cc3e:	d104      	bne.n	800cc4a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 800cc40:	4b09      	ldr	r3, [pc, #36]	; (800cc68 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800cc42:	4a07      	ldr	r2, [pc, #28]	; (800cc60 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800cc44:	f240 211a 	movw	r1, #538	; 0x21a
 800cc48:	e7f0      	b.n	800cc2c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800cc4a:	6870      	ldr	r0, [r6, #4]
 800cc4c:	6803      	ldr	r3, [r0, #0]
 800cc4e:	4669      	mov	r1, sp
 800cc50:	685b      	ldr	r3, [r3, #4]
 800cc52:	4798      	blx	r3
 800cc54:	b009      	add	sp, #36	; 0x24
 800cc56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc5a:	bf00      	nop
 800cc5c:	0802392c 	.word	0x0802392c
 800cc60:	08023b85 	.word	0x08023b85
 800cc64:	08023a61 	.word	0x08023a61
 800cc68:	08023964 	.word	0x08023964

0800cc6c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cc6c:	b510      	push	{r4, lr}
 800cc6e:	4b0b      	ldr	r3, [pc, #44]	; (800cc9c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800cc70:	781b      	ldrb	r3, [r3, #0]
 800cc72:	4604      	mov	r4, r0
 800cc74:	b95b      	cbnz	r3, 800cc8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cc76:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800cc7a:	2b02      	cmp	r3, #2
 800cc7c:	d007      	beq.n	800cc8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cc7e:	6840      	ldr	r0, [r0, #4]
 800cc80:	f000 fb6c 	bl	800d35c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cc84:	b118      	cbz	r0, 800cc8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cc86:	6862      	ldr	r2, [r4, #4]
 800cc88:	7a53      	ldrb	r3, [r2, #9]
 800cc8a:	2b00      	cmp	r3, #0
 800cc8c:	d0fc      	beq.n	800cc88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cc8e:	f7f4 f80b 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cc92:	4620      	mov	r0, r4
 800cc94:	f7ff ff38 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cc98:	bd10      	pop	{r4, pc}
 800cc9a:	bf00      	nop
 800cc9c:	2000eb0e 	.word	0x2000eb0e

0800cca0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800cca0:	b508      	push	{r3, lr}
 800cca2:	290d      	cmp	r1, #13
 800cca4:	d817      	bhi.n	800ccd6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800cca6:	e8df f001 	tbb	[pc, r1]
 800ccaa:	090b      	.short	0x090b
 800ccac:	0d0d0d07 	.word	0x0d0d0d07
 800ccb0:	1414140d 	.word	0x1414140d
 800ccb4:	0d0d1414 	.word	0x0d0d1414
 800ccb8:	2020      	movs	r0, #32
 800ccba:	bd08      	pop	{r3, pc}
 800ccbc:	2018      	movs	r0, #24
 800ccbe:	e7fc      	b.n	800ccba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ccc0:	2010      	movs	r0, #16
 800ccc2:	e7fa      	b.n	800ccba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ccc4:	4b05      	ldr	r3, [pc, #20]	; (800ccdc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ccc6:	4a06      	ldr	r2, [pc, #24]	; (800cce0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ccc8:	4806      	ldr	r0, [pc, #24]	; (800cce4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ccca:	f240 2177 	movw	r1, #631	; 0x277
 800ccce:	f014 f8b7 	bl	8020e40 <__assert_func>
 800ccd2:	2008      	movs	r0, #8
 800ccd4:	e7f1      	b.n	800ccba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ccd6:	2000      	movs	r0, #0
 800ccd8:	e7ef      	b.n	800ccba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ccda:	bf00      	nop
 800ccdc:	08023add 	.word	0x08023add
 800cce0:	08023e9e 	.word	0x08023e9e
 800cce4:	08023a61 	.word	0x08023a61

0800cce8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800cce8:	b570      	push	{r4, r5, r6, lr}
 800ccea:	460d      	mov	r5, r1
 800ccec:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ccf0:	4616      	mov	r6, r2
 800ccf2:	461c      	mov	r4, r3
 800ccf4:	f7ff ffd4 	bl	800cca0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800ccf8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800ccfc:	10c0      	asrs	r0, r0, #3
 800ccfe:	fb06 5101 	mla	r1, r6, r1, r5
 800cd02:	fb00 4001 	mla	r0, r0, r1, r4
 800cd06:	bd70      	pop	{r4, r5, r6, pc}

0800cd08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800cd08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cd0c:	b08a      	sub	sp, #40	; 0x28
 800cd0e:	f04f 0c00 	mov.w	ip, #0
 800cd12:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800cd16:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800cd1a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800cd1e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800cd22:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800cd26:	f8cd c014 	str.w	ip, [sp, #20]
 800cd2a:	2d0b      	cmp	r5, #11
 800cd2c:	4604      	mov	r4, r0
 800cd2e:	469a      	mov	sl, r3
 800cd30:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800cd34:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800cd38:	d129      	bne.n	800cd8e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 800cd3a:	2080      	movs	r0, #128	; 0x80
 800cd3c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800cd40:	9204      	str	r2, [sp, #16]
 800cd42:	4620      	mov	r0, r4
 800cd44:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800cd48:	f8ad 2020 	strh.w	r2, [sp, #32]
 800cd4c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cd50:	f8ad 701c 	strh.w	r7, [sp, #28]
 800cd54:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cd58:	f7ff fed6 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd5c:	e9cd 9800 	strd	r9, r8, [sp]
 800cd60:	4603      	mov	r3, r0
 800cd62:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800cd66:	4651      	mov	r1, sl
 800cd68:	4620      	mov	r0, r4
 800cd6a:	f7ff ffbd 	bl	800cce8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800cd6e:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800cd72:	9006      	str	r0, [sp, #24]
 800cd74:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800cd78:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800cd7c:	b107      	cbz	r7, 800cd80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 800cd7e:	b9d6      	cbnz	r6, 800cdb6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 800cd80:	4b17      	ldr	r3, [pc, #92]	; (800cde0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800cd82:	4a18      	ldr	r2, [pc, #96]	; (800cde4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800cd84:	f240 11cf 	movw	r1, #463	; 0x1cf
 800cd88:	4817      	ldr	r0, [pc, #92]	; (800cde8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 800cd8a:	f014 f859 	bl	8020e40 <__assert_func>
 800cd8e:	2d02      	cmp	r5, #2
 800cd90:	d108      	bne.n	800cda4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 800cd92:	2bff      	cmp	r3, #255	; 0xff
 800cd94:	d104      	bne.n	800cda0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 800cd96:	2800      	cmp	r0, #0
 800cd98:	bf14      	ite	ne
 800cd9a:	2040      	movne	r0, #64	; 0x40
 800cd9c:	2020      	moveq	r0, #32
 800cd9e:	e7cd      	b.n	800cd3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800cda0:	2040      	movs	r0, #64	; 0x40
 800cda2:	e7cb      	b.n	800cd3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800cda4:	2bff      	cmp	r3, #255	; 0xff
 800cda6:	d104      	bne.n	800cdb2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 800cda8:	2800      	cmp	r0, #0
 800cdaa:	bf14      	ite	ne
 800cdac:	2004      	movne	r0, #4
 800cdae:	2001      	moveq	r0, #1
 800cdb0:	e7c4      	b.n	800cd3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800cdb2:	2004      	movs	r0, #4
 800cdb4:	e7c2      	b.n	800cd3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800cdb6:	6823      	ldr	r3, [r4, #0]
 800cdb8:	9d02      	ldr	r5, [sp, #8]
 800cdba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cdbc:	4620      	mov	r0, r4
 800cdbe:	4798      	blx	r3
 800cdc0:	4228      	tst	r0, r5
 800cdc2:	d104      	bne.n	800cdce <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 800cdc4:	4b09      	ldr	r3, [pc, #36]	; (800cdec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 800cdc6:	4a07      	ldr	r2, [pc, #28]	; (800cde4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800cdc8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800cdcc:	e7dc      	b.n	800cd88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 800cdce:	6860      	ldr	r0, [r4, #4]
 800cdd0:	6803      	ldr	r3, [r0, #0]
 800cdd2:	a902      	add	r1, sp, #8
 800cdd4:	685b      	ldr	r3, [r3, #4]
 800cdd6:	4798      	blx	r3
 800cdd8:	b00a      	add	sp, #40	; 0x28
 800cdda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cdde:	bf00      	nop
 800cde0:	080238af 	.word	0x080238af
 800cde4:	08023d38 	.word	0x08023d38
 800cde8:	08023a61 	.word	0x08023a61
 800cdec:	080238e7 	.word	0x080238e7

0800cdf0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800cdf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdf4:	b08b      	sub	sp, #44	; 0x2c
 800cdf6:	469b      	mov	fp, r3
 800cdf8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800cdfc:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800ce00:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800ce04:	2fff      	cmp	r7, #255	; 0xff
 800ce06:	bf14      	ite	ne
 800ce08:	2308      	movne	r3, #8
 800ce0a:	2302      	moveq	r3, #2
 800ce0c:	2600      	movs	r6, #0
 800ce0e:	4604      	mov	r4, r0
 800ce10:	4689      	mov	r9, r1
 800ce12:	4692      	mov	sl, r2
 800ce14:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800ce18:	9605      	str	r6, [sp, #20]
 800ce1a:	f7ff fe75 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ce1e:	e9cd 8500 	strd	r8, r5, [sp]
 800ce22:	4603      	mov	r3, r0
 800ce24:	465a      	mov	r2, fp
 800ce26:	4651      	mov	r1, sl
 800ce28:	4620      	mov	r0, r4
 800ce2a:	f7ff ff5d 	bl	800cce8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ce2e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ce32:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ce36:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ce3a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ce3e:	6823      	ldr	r3, [r4, #0]
 800ce40:	9006      	str	r0, [sp, #24]
 800ce42:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800ce46:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800ce4a:	f8ad 6020 	strh.w	r6, [sp, #32]
 800ce4e:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800ce52:	f8cd 9014 	str.w	r9, [sp, #20]
 800ce56:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800ce5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ce5c:	9d02      	ldr	r5, [sp, #8]
 800ce5e:	4620      	mov	r0, r4
 800ce60:	4798      	blx	r3
 800ce62:	4228      	tst	r0, r5
 800ce64:	d106      	bne.n	800ce74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800ce66:	4b07      	ldr	r3, [pc, #28]	; (800ce84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800ce68:	4a07      	ldr	r2, [pc, #28]	; (800ce88 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800ce6a:	4808      	ldr	r0, [pc, #32]	; (800ce8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800ce6c:	f240 212e 	movw	r1, #558	; 0x22e
 800ce70:	f013 ffe6 	bl	8020e40 <__assert_func>
 800ce74:	6860      	ldr	r0, [r4, #4]
 800ce76:	6803      	ldr	r3, [r0, #0]
 800ce78:	a902      	add	r1, sp, #8
 800ce7a:	685b      	ldr	r3, [r3, #4]
 800ce7c:	4798      	blx	r3
 800ce7e:	b00b      	add	sp, #44	; 0x2c
 800ce80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce84:	080238e7 	.word	0x080238e7
 800ce88:	08023e09 	.word	0x08023e09
 800ce8c:	08023a61 	.word	0x08023a61

0800ce90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ce90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ce94:	461f      	mov	r7, r3
 800ce96:	4b0b      	ldr	r3, [pc, #44]	; (800cec4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ce98:	460d      	mov	r5, r1
 800ce9a:	f8b3 8000 	ldrh.w	r8, [r3]
 800ce9e:	4616      	mov	r6, r2
 800cea0:	4604      	mov	r4, r0
 800cea2:	f7ff fc7d 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800cea6:	6803      	ldr	r3, [r0, #0]
 800cea8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ceaa:	4798      	blx	r3
 800ceac:	463b      	mov	r3, r7
 800ceae:	e9cd 8000 	strd	r8, r0, [sp]
 800ceb2:	4632      	mov	r2, r6
 800ceb4:	4629      	mov	r1, r5
 800ceb6:	4620      	mov	r0, r4
 800ceb8:	f7ff ff16 	bl	800cce8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800cebc:	b002      	add	sp, #8
 800cebe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cec2:	bf00      	nop
 800cec4:	2000eb0a 	.word	0x2000eb0a

0800cec8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800cec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cecc:	b088      	sub	sp, #32
 800cece:	4698      	mov	r8, r3
 800ced0:	2300      	movs	r3, #0
 800ced2:	9303      	str	r3, [sp, #12]
 800ced4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ced8:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800cedc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800cee0:	f8ad 6014 	strh.w	r6, [sp, #20]
 800cee4:	e9cd 3100 	strd	r3, r1, [sp]
 800cee8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ceec:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cef0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800cef4:	f88d 301c 	strb.w	r3, [sp, #28]
 800cef8:	4617      	mov	r7, r2
 800cefa:	4604      	mov	r4, r0
 800cefc:	f8ad 5016 	strh.w	r5, [sp, #22]
 800cf00:	f7ff fe02 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cf04:	4642      	mov	r2, r8
 800cf06:	4603      	mov	r3, r0
 800cf08:	4639      	mov	r1, r7
 800cf0a:	4620      	mov	r0, r4
 800cf0c:	f7ff ffc0 	bl	800ce90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cf10:	4b16      	ldr	r3, [pc, #88]	; (800cf6c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800cf12:	9004      	str	r0, [sp, #16]
 800cf14:	881b      	ldrh	r3, [r3, #0]
 800cf16:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cf1a:	f7ff fc41 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800cf1e:	6803      	ldr	r3, [r0, #0]
 800cf20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf22:	4798      	blx	r3
 800cf24:	f88d 001e 	strb.w	r0, [sp, #30]
 800cf28:	f88d 001d 	strb.w	r0, [sp, #29]
 800cf2c:	b106      	cbz	r6, 800cf30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800cf2e:	b935      	cbnz	r5, 800cf3e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800cf30:	4b0f      	ldr	r3, [pc, #60]	; (800cf70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800cf32:	4a10      	ldr	r2, [pc, #64]	; (800cf74 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cf34:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 800cf38:	480f      	ldr	r0, [pc, #60]	; (800cf78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800cf3a:	f013 ff81 	bl	8020e40 <__assert_func>
 800cf3e:	6823      	ldr	r3, [r4, #0]
 800cf40:	9d00      	ldr	r5, [sp, #0]
 800cf42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cf44:	4620      	mov	r0, r4
 800cf46:	4798      	blx	r3
 800cf48:	4228      	tst	r0, r5
 800cf4a:	d104      	bne.n	800cf56 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800cf4c:	4b0b      	ldr	r3, [pc, #44]	; (800cf7c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800cf4e:	4a09      	ldr	r2, [pc, #36]	; (800cf74 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cf50:	f240 11ed 	movw	r1, #493	; 0x1ed
 800cf54:	e7f0      	b.n	800cf38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800cf56:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cf58:	6860      	ldr	r0, [r4, #4]
 800cf5a:	9303      	str	r3, [sp, #12]
 800cf5c:	6803      	ldr	r3, [r0, #0]
 800cf5e:	4669      	mov	r1, sp
 800cf60:	685b      	ldr	r3, [r3, #4]
 800cf62:	4798      	blx	r3
 800cf64:	b008      	add	sp, #32
 800cf66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf6a:	bf00      	nop
 800cf6c:	2000eb0a 	.word	0x2000eb0a
 800cf70:	080238af 	.word	0x080238af
 800cf74:	08023bea 	.word	0x08023bea
 800cf78:	08023a61 	.word	0x08023a61
 800cf7c:	080238e7 	.word	0x080238e7

0800cf80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800cf80:	b570      	push	{r4, r5, r6, lr}
 800cf82:	b08a      	sub	sp, #40	; 0x28
 800cf84:	466b      	mov	r3, sp
 800cf86:	e883 0006 	stmia.w	r3, {r1, r2}
 800cf8a:	4b20      	ldr	r3, [pc, #128]	; (800d00c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800cf8c:	781b      	ldrb	r3, [r3, #0]
 800cf8e:	4604      	mov	r4, r0
 800cf90:	b933      	cbnz	r3, 800cfa0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800cf92:	4b1f      	ldr	r3, [pc, #124]	; (800d010 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800cf94:	4a1f      	ldr	r2, [pc, #124]	; (800d014 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800cf96:	4820      	ldr	r0, [pc, #128]	; (800d018 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800cf98:	f240 213f 	movw	r1, #575	; 0x23f
 800cf9c:	f013 ff50 	bl	8020e40 <__assert_func>
 800cfa0:	2300      	movs	r3, #0
 800cfa2:	9305      	str	r3, [sp, #20]
 800cfa4:	2301      	movs	r3, #1
 800cfa6:	9302      	str	r3, [sp, #8]
 800cfa8:	6803      	ldr	r3, [r0, #0]
 800cfaa:	f8bd 5000 	ldrh.w	r5, [sp]
 800cfae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cfb0:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800cfb4:	4798      	blx	r3
 800cfb6:	4632      	mov	r2, r6
 800cfb8:	4629      	mov	r1, r5
 800cfba:	4603      	mov	r3, r0
 800cfbc:	4620      	mov	r0, r4
 800cfbe:	f7ff ff67 	bl	800ce90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cfc2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cfc4:	9306      	str	r3, [sp, #24]
 800cfc6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cfca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cfce:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cfd2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cfd6:	4b11      	ldr	r3, [pc, #68]	; (800d01c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800cfd8:	9003      	str	r0, [sp, #12]
 800cfda:	881b      	ldrh	r3, [r3, #0]
 800cfdc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cfe0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cfe4:	f7ff fbdc 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800cfe8:	6803      	ldr	r3, [r0, #0]
 800cfea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfec:	4798      	blx	r3
 800cfee:	23ff      	movs	r3, #255	; 0xff
 800cff0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cff4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800cff8:	6860      	ldr	r0, [r4, #4]
 800cffa:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cffe:	6803      	ldr	r3, [r0, #0]
 800d000:	a902      	add	r1, sp, #8
 800d002:	685b      	ldr	r3, [r3, #4]
 800d004:	4798      	blx	r3
 800d006:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800d008:	b00a      	add	sp, #40	; 0x28
 800d00a:	bd70      	pop	{r4, r5, r6, pc}
 800d00c:	2000eb0f 	.word	0x2000eb0f
 800d010:	080239ae 	.word	0x080239ae
 800d014:	08023c8e 	.word	0x08023c8e
 800d018:	08023a61 	.word	0x08023a61
 800d01c:	2000eb0a 	.word	0x2000eb0a

0800d020 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d020:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d022:	b08b      	sub	sp, #44	; 0x2c
 800d024:	466d      	mov	r5, sp
 800d026:	e885 0006 	stmia.w	r5, {r1, r2}
 800d02a:	461d      	mov	r5, r3
 800d02c:	2300      	movs	r3, #0
 800d02e:	9305      	str	r3, [sp, #20]
 800d030:	2301      	movs	r3, #1
 800d032:	9302      	str	r3, [sp, #8]
 800d034:	6803      	ldr	r3, [r0, #0]
 800d036:	f8bd 6000 	ldrh.w	r6, [sp]
 800d03a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d03c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d040:	4604      	mov	r4, r0
 800d042:	4798      	blx	r3
 800d044:	463a      	mov	r2, r7
 800d046:	4631      	mov	r1, r6
 800d048:	4603      	mov	r3, r0
 800d04a:	4620      	mov	r0, r4
 800d04c:	f7ff ff20 	bl	800ce90 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d050:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d054:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d058:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d05c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d060:	4b0e      	ldr	r3, [pc, #56]	; (800d09c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800d062:	9003      	str	r0, [sp, #12]
 800d064:	881b      	ldrh	r3, [r3, #0]
 800d066:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d06a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d06c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d070:	9506      	str	r5, [sp, #24]
 800d072:	f7ff fb95 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800d076:	6803      	ldr	r3, [r0, #0]
 800d078:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d07a:	4798      	blx	r3
 800d07c:	23ff      	movs	r3, #255	; 0xff
 800d07e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800d082:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800d086:	6860      	ldr	r0, [r4, #4]
 800d088:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d08c:	6803      	ldr	r3, [r0, #0]
 800d08e:	a902      	add	r1, sp, #8
 800d090:	685b      	ldr	r3, [r3, #4]
 800d092:	4798      	blx	r3
 800d094:	4628      	mov	r0, r5
 800d096:	b00b      	add	sp, #44	; 0x2c
 800d098:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d09a:	bf00      	nop
 800d09c:	2000eb0a 	.word	0x2000eb0a

0800d0a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d0a0:	b570      	push	{r4, r5, r6, lr}
 800d0a2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d0a6:	4604      	mov	r4, r0
 800d0a8:	b19b      	cbz	r3, 800d0d2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d0aa:	2002      	movs	r0, #2
 800d0ac:	f7f3 fb8a 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d0b0:	2300      	movs	r3, #0
 800d0b2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d0b6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d0ba:	6823      	ldr	r3, [r4, #0]
 800d0bc:	4620      	mov	r0, r4
 800d0be:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 800d0c2:	f7ff fd21 	bl	800cb08 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d0c6:	462b      	mov	r3, r5
 800d0c8:	4601      	mov	r1, r0
 800d0ca:	4620      	mov	r0, r4
 800d0cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0d0:	4718      	bx	r3
 800d0d2:	bd70      	pop	{r4, r5, r6, pc}

0800d0d4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800d0d4:	b570      	push	{r4, r5, r6, lr}
 800d0d6:	4605      	mov	r5, r0
 800d0d8:	460c      	mov	r4, r1
 800d0da:	2003      	movs	r0, #3
 800d0dc:	b149      	cbz	r1, 800d0f2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800d0de:	f7f3 fb39 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d0e2:	6928      	ldr	r0, [r5, #16]
 800d0e4:	b168      	cbz	r0, 800d102 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d0e6:	6803      	ldr	r3, [r0, #0]
 800d0e8:	695b      	ldr	r3, [r3, #20]
 800d0ea:	2101      	movs	r1, #1
 800d0ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0f0:	4718      	bx	r3
 800d0f2:	f7f3 fb4b 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d0f6:	6928      	ldr	r0, [r5, #16]
 800d0f8:	b118      	cbz	r0, 800d102 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d0fa:	6803      	ldr	r3, [r0, #0]
 800d0fc:	4621      	mov	r1, r4
 800d0fe:	695b      	ldr	r3, [r3, #20]
 800d100:	e7f4      	b.n	800d0ec <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800d102:	bd70      	pop	{r4, r5, r6, pc}

0800d104 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d104:	4770      	bx	lr

0800d106 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d106:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d10a:	1a13      	subs	r3, r2, r0
 800d10c:	4258      	negs	r0, r3
 800d10e:	4158      	adcs	r0, r3
 800d110:	4770      	bx	lr

0800d112 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d112:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d116:	1a9b      	subs	r3, r3, r2
 800d118:	2b00      	cmp	r3, #0
 800d11a:	bfdc      	itt	le
 800d11c:	6882      	ldrle	r2, [r0, #8]
 800d11e:	189b      	addle	r3, r3, r2
 800d120:	2b01      	cmp	r3, #1
 800d122:	bfcc      	ite	gt
 800d124:	2000      	movgt	r0, #0
 800d126:	2001      	movle	r0, #1
 800d128:	4770      	bx	lr

0800d12a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d12a:	6902      	ldr	r2, [r0, #16]
 800d12c:	6840      	ldr	r0, [r0, #4]
 800d12e:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800d132:	4770      	bx	lr

0800d134 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d134:	6803      	ldr	r3, [r0, #0]
 800d136:	691b      	ldr	r3, [r3, #16]
 800d138:	4718      	bx	r3

0800d13a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d13a:	4770      	bx	lr

0800d13c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d13c:	4770      	bx	lr

0800d13e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d13e:	4770      	bx	lr

0800d140 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d140:	b570      	push	{r4, r5, r6, lr}
 800d142:	2301      	movs	r3, #1
 800d144:	7203      	strb	r3, [r0, #8]
 800d146:	4604      	mov	r4, r0
 800d148:	6840      	ldr	r0, [r0, #4]
 800d14a:	6803      	ldr	r3, [r0, #0]
 800d14c:	699b      	ldr	r3, [r3, #24]
 800d14e:	4798      	blx	r3
 800d150:	6803      	ldr	r3, [r0, #0]
 800d152:	2b40      	cmp	r3, #64	; 0x40
 800d154:	4605      	mov	r5, r0
 800d156:	d039      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d158:	d815      	bhi.n	800d186 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800d15a:	2b04      	cmp	r3, #4
 800d15c:	d022      	beq.n	800d1a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d15e:	d808      	bhi.n	800d172 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d160:	2b01      	cmp	r3, #1
 800d162:	d033      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d164:	2b02      	cmp	r3, #2
 800d166:	d108      	bne.n	800d17a <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800d168:	6823      	ldr	r3, [r4, #0]
 800d16a:	4620      	mov	r0, r4
 800d16c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d16e:	4798      	blx	r3
 800d170:	e025      	b.n	800d1be <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800d172:	2b08      	cmp	r3, #8
 800d174:	d01e      	beq.n	800d1b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800d176:	2b20      	cmp	r3, #32
 800d178:	d028      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d17a:	4b17      	ldr	r3, [pc, #92]	; (800d1d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800d17c:	4a17      	ldr	r2, [pc, #92]	; (800d1dc <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800d17e:	4818      	ldr	r0, [pc, #96]	; (800d1e0 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800d180:	218b      	movs	r1, #139	; 0x8b
 800d182:	f013 fe5d 	bl	8020e40 <__assert_func>
 800d186:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d18a:	d01f      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d18c:	d804      	bhi.n	800d198 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800d18e:	2b80      	cmp	r3, #128	; 0x80
 800d190:	d01c      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d192:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d196:	e7ef      	b.n	800d178 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800d198:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800d19c:	d016      	beq.n	800d1cc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d19e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d1a2:	e7e0      	b.n	800d166 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d1a4:	6823      	ldr	r3, [r4, #0]
 800d1a6:	7f01      	ldrb	r1, [r0, #28]
 800d1a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d1aa:	4620      	mov	r0, r4
 800d1ac:	4798      	blx	r3
 800d1ae:	6823      	ldr	r3, [r4, #0]
 800d1b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d1b2:	e006      	b.n	800d1c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d1b4:	6823      	ldr	r3, [r4, #0]
 800d1b6:	7f01      	ldrb	r1, [r0, #28]
 800d1b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d1ba:	4620      	mov	r0, r4
 800d1bc:	4798      	blx	r3
 800d1be:	6823      	ldr	r3, [r4, #0]
 800d1c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d1c2:	4629      	mov	r1, r5
 800d1c4:	4620      	mov	r0, r4
 800d1c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1ca:	4718      	bx	r3
 800d1cc:	6823      	ldr	r3, [r4, #0]
 800d1ce:	4620      	mov	r0, r4
 800d1d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1d2:	4798      	blx	r3
 800d1d4:	e7eb      	b.n	800d1ae <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800d1d6:	bf00      	nop
 800d1d8:	08023ee7 	.word	0x08023ee7
 800d1dc:	08023fa8 	.word	0x08023fa8
 800d1e0:	08023f0c 	.word	0x08023f0c

0800d1e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d1e4:	b570      	push	{r4, r5, r6, lr}
 800d1e6:	4604      	mov	r4, r0
 800d1e8:	460e      	mov	r6, r1
 800d1ea:	6860      	ldr	r0, [r4, #4]
 800d1ec:	6803      	ldr	r3, [r0, #0]
 800d1ee:	685b      	ldr	r3, [r3, #4]
 800d1f0:	4798      	blx	r3
 800d1f2:	2800      	cmp	r0, #0
 800d1f4:	d1f9      	bne.n	800d1ea <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d1f6:	4d0d      	ldr	r5, [pc, #52]	; (800d22c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d1f8:	6828      	ldr	r0, [r5, #0]
 800d1fa:	6803      	ldr	r3, [r0, #0]
 800d1fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d1fe:	4798      	blx	r3
 800d200:	f7f3 fd60 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d204:	6828      	ldr	r0, [r5, #0]
 800d206:	2101      	movs	r1, #1
 800d208:	f7ff ff7c 	bl	800d104 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d20c:	6860      	ldr	r0, [r4, #4]
 800d20e:	6803      	ldr	r3, [r0, #0]
 800d210:	4631      	mov	r1, r6
 800d212:	689b      	ldr	r3, [r3, #8]
 800d214:	4798      	blx	r3
 800d216:	6823      	ldr	r3, [r4, #0]
 800d218:	4620      	mov	r0, r4
 800d21a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d21c:	4798      	blx	r3
 800d21e:	6828      	ldr	r0, [r5, #0]
 800d220:	6803      	ldr	r3, [r0, #0]
 800d222:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d226:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d228:	4718      	bx	r3
 800d22a:	bf00      	nop
 800d22c:	2000eb10 	.word	0x2000eb10

0800d230 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d230:	b508      	push	{r3, lr}
 800d232:	f7f3 fd39 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d236:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d23a:	f7f3 bd3d 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d23e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d23e:	b510      	push	{r4, lr}
 800d240:	2114      	movs	r1, #20
 800d242:	4604      	mov	r4, r0
 800d244:	f013 fdcd 	bl	8020de2 <_ZdlPvj>
 800d248:	4620      	mov	r0, r4
 800d24a:	bd10      	pop	{r4, pc}

0800d24c <_ZN8touchgfx13DMA_Interface5startEv>:
 800d24c:	b510      	push	{r4, lr}
 800d24e:	4604      	mov	r4, r0
 800d250:	6840      	ldr	r0, [r0, #4]
 800d252:	6803      	ldr	r3, [r0, #0]
 800d254:	681b      	ldr	r3, [r3, #0]
 800d256:	4798      	blx	r3
 800d258:	b948      	cbnz	r0, 800d26e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d25a:	7a63      	ldrb	r3, [r4, #9]
 800d25c:	b13b      	cbz	r3, 800d26e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d25e:	7a23      	ldrb	r3, [r4, #8]
 800d260:	b92b      	cbnz	r3, 800d26e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d262:	6823      	ldr	r3, [r4, #0]
 800d264:	4620      	mov	r0, r4
 800d266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d268:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d26c:	4718      	bx	r3
 800d26e:	bd10      	pop	{r4, pc}

0800d270 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d270:	b510      	push	{r4, lr}
 800d272:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800d276:	1b12      	subs	r2, r2, r4
 800d278:	2a00      	cmp	r2, #0
 800d27a:	bfdc      	itt	le
 800d27c:	6883      	ldrle	r3, [r0, #8]
 800d27e:	18d2      	addle	r2, r2, r3
 800d280:	2a01      	cmp	r2, #1
 800d282:	dd18      	ble.n	800d2b6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800d284:	6843      	ldr	r3, [r0, #4]
 800d286:	f101 021c 	add.w	r2, r1, #28
 800d28a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800d28e:	f851 4b04 	ldr.w	r4, [r1], #4
 800d292:	f843 4b04 	str.w	r4, [r3], #4
 800d296:	4291      	cmp	r1, r2
 800d298:	d1f9      	bne.n	800d28e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800d29a:	880a      	ldrh	r2, [r1, #0]
 800d29c:	801a      	strh	r2, [r3, #0]
 800d29e:	788a      	ldrb	r2, [r1, #2]
 800d2a0:	709a      	strb	r2, [r3, #2]
 800d2a2:	68c3      	ldr	r3, [r0, #12]
 800d2a4:	6882      	ldr	r2, [r0, #8]
 800d2a6:	f3bf 8f5b 	dmb	ish
 800d2aa:	3301      	adds	r3, #1
 800d2ac:	429a      	cmp	r2, r3
 800d2ae:	bfd8      	it	le
 800d2b0:	1a9b      	suble	r3, r3, r2
 800d2b2:	60c3      	str	r3, [r0, #12]
 800d2b4:	bd10      	pop	{r4, pc}
 800d2b6:	4b03      	ldr	r3, [pc, #12]	; (800d2c4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800d2b8:	4a03      	ldr	r2, [pc, #12]	; (800d2c8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800d2ba:	4804      	ldr	r0, [pc, #16]	; (800d2cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800d2bc:	2139      	movs	r1, #57	; 0x39
 800d2be:	f013 fdbf 	bl	8020e40 <__assert_func>
 800d2c2:	bf00      	nop
 800d2c4:	08023f32 	.word	0x08023f32
 800d2c8:	08023fd8 	.word	0x08023fd8
 800d2cc:	08023f0c 	.word	0x08023f0c

0800d2d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d2d0:	b510      	push	{r4, lr}
 800d2d2:	6803      	ldr	r3, [r0, #0]
 800d2d4:	681b      	ldr	r3, [r3, #0]
 800d2d6:	4604      	mov	r4, r0
 800d2d8:	4798      	blx	r3
 800d2da:	b128      	cbz	r0, 800d2e8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800d2dc:	4b07      	ldr	r3, [pc, #28]	; (800d2fc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800d2de:	4a08      	ldr	r2, [pc, #32]	; (800d300 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800d2e0:	4808      	ldr	r0, [pc, #32]	; (800d304 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800d2e2:	213f      	movs	r1, #63	; 0x3f
 800d2e4:	f013 fdac 	bl	8020e40 <__assert_func>
 800d2e8:	6923      	ldr	r3, [r4, #16]
 800d2ea:	68a2      	ldr	r2, [r4, #8]
 800d2ec:	f3bf 8f5b 	dmb	ish
 800d2f0:	3301      	adds	r3, #1
 800d2f2:	429a      	cmp	r2, r3
 800d2f4:	bfd8      	it	le
 800d2f6:	1a9b      	suble	r3, r3, r2
 800d2f8:	6123      	str	r3, [r4, #16]
 800d2fa:	bd10      	pop	{r4, pc}
 800d2fc:	08023f55 	.word	0x08023f55
 800d300:	08024026 	.word	0x08024026
 800d304:	08023f0c 	.word	0x08023f0c

0800d308 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d308:	b570      	push	{r4, r5, r6, lr}
 800d30a:	4604      	mov	r4, r0
 800d30c:	6840      	ldr	r0, [r0, #4]
 800d30e:	6803      	ldr	r3, [r0, #0]
 800d310:	681b      	ldr	r3, [r3, #0]
 800d312:	4798      	blx	r3
 800d314:	4605      	mov	r5, r0
 800d316:	b930      	cbnz	r0, 800d326 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d318:	7a23      	ldrb	r3, [r4, #8]
 800d31a:	b123      	cbz	r3, 800d326 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d31c:	6860      	ldr	r0, [r4, #4]
 800d31e:	6803      	ldr	r3, [r0, #0]
 800d320:	695b      	ldr	r3, [r3, #20]
 800d322:	4798      	blx	r3
 800d324:	7225      	strb	r5, [r4, #8]
 800d326:	6860      	ldr	r0, [r4, #4]
 800d328:	6803      	ldr	r3, [r0, #0]
 800d32a:	681b      	ldr	r3, [r3, #0]
 800d32c:	4798      	blx	r3
 800d32e:	b928      	cbnz	r0, 800d33c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d330:	6823      	ldr	r3, [r4, #0]
 800d332:	4620      	mov	r0, r4
 800d334:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d33a:	4718      	bx	r3
 800d33c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d340:	f7f3 bcc8 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d344 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d344:	b510      	push	{r4, lr}
 800d346:	4c04      	ldr	r4, [pc, #16]	; (800d358 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d348:	6082      	str	r2, [r0, #8]
 800d34a:	2200      	movs	r2, #0
 800d34c:	e9c0 4100 	strd	r4, r1, [r0]
 800d350:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d354:	bd10      	pop	{r4, pc}
 800d356:	bf00      	nop
 800d358:	08023f8c 	.word	0x08023f8c

0800d35c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d35c:	6840      	ldr	r0, [r0, #4]
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	681b      	ldr	r3, [r3, #0]
 800d362:	4718      	bx	r3

0800d364 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 800d364:	2001      	movs	r0, #1
 800d366:	4770      	bx	lr

0800d368 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 800d368:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d36c:	4413      	add	r3, r2
 800d36e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800d372:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d374:	4d43      	ldr	r5, [pc, #268]	; (800d484 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x11c>)
 800d376:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 800d37a:	eb01 0e43 	add.w	lr, r1, r3, lsl #1
 800d37e:	6943      	ldr	r3, [r0, #20]
 800d380:	ea05 2413 	and.w	r4, r5, r3, lsr #8
 800d384:	f3c3 02c4 	ubfx	r2, r3, #3, #5
 800d388:	4322      	orrs	r2, r4
 800d38a:	095b      	lsrs	r3, r3, #5
 800d38c:	7a04      	ldrb	r4, [r0, #8]
 800d38e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800d392:	4313      	orrs	r3, r2
 800d394:	2cff      	cmp	r4, #255	; 0xff
 800d396:	b29a      	uxth	r2, r3
 800d398:	d017      	beq.n	800d3ca <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x62>
 800d39a:	ea02 0305 	and.w	r3, r2, r5
 800d39e:	9301      	str	r3, [sp, #4]
 800d3a0:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800d3a4:	f402 6afc 	and.w	sl, r2, #2016	; 0x7e0
 800d3a8:	f002 0b1f 	and.w	fp, r2, #31
 800d3ac:	7a04      	ldrb	r4, [r0, #8]
 800d3ae:	f818 3b01 	ldrb.w	r3, [r8], #1
 800d3b2:	4363      	muls	r3, r4
 800d3b4:	1c5c      	adds	r4, r3, #1
 800d3b6:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 800d3ba:	121b      	asrs	r3, r3, #8
 800d3bc:	2bff      	cmp	r3, #255	; 0xff
 800d3be:	d13e      	bne.n	800d43e <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0xd6>
 800d3c0:	800a      	strh	r2, [r1, #0]
 800d3c2:	3102      	adds	r1, #2
 800d3c4:	458e      	cmp	lr, r1
 800d3c6:	d8f1      	bhi.n	800d3ac <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x44>
 800d3c8:	e00d      	b.n	800d3e6 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x7e>
 800d3ca:	ea02 0605 	and.w	r6, r2, r5
 800d3ce:	f402 67fc 	and.w	r7, r2, #2016	; 0x7e0
 800d3d2:	f002 0c1f 	and.w	ip, r2, #31
 800d3d6:	f818 0b01 	ldrb.w	r0, [r8], #1
 800d3da:	28ff      	cmp	r0, #255	; 0xff
 800d3dc:	d106      	bne.n	800d3ec <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x84>
 800d3de:	800a      	strh	r2, [r1, #0]
 800d3e0:	3102      	adds	r1, #2
 800d3e2:	458e      	cmp	lr, r1
 800d3e4:	d8f7      	bhi.n	800d3d6 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x6e>
 800d3e6:	b003      	add	sp, #12
 800d3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3ec:	f8b1 a000 	ldrh.w	sl, [r1]
 800d3f0:	ea6f 0900 	mvn.w	r9, r0
 800d3f4:	fa5f f989 	uxtb.w	r9, r9
 800d3f8:	ea0a 0305 	and.w	r3, sl, r5
 800d3fc:	fb09 f303 	mul.w	r3, r9, r3
 800d400:	fb00 3306 	mla	r3, r0, r6, r3
 800d404:	fb93 f3f4 	sdiv	r3, r3, r4
 800d408:	ea03 0b05 	and.w	fp, r3, r5
 800d40c:	f40a 63fc 	and.w	r3, sl, #2016	; 0x7e0
 800d410:	fb09 f303 	mul.w	r3, r9, r3
 800d414:	f00a 0a1f 	and.w	sl, sl, #31
 800d418:	fb00 3307 	mla	r3, r0, r7, r3
 800d41c:	fb09 f90a 	mul.w	r9, r9, sl
 800d420:	fb93 f3f4 	sdiv	r3, r3, r4
 800d424:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800d428:	ea4b 0303 	orr.w	r3, fp, r3
 800d42c:	fb00 900c 	mla	r0, r0, ip, r9
 800d430:	fb90 f0f4 	sdiv	r0, r0, r4
 800d434:	f000 001f 	and.w	r0, r0, #31
 800d438:	4303      	orrs	r3, r0
 800d43a:	800b      	strh	r3, [r1, #0]
 800d43c:	e7d0      	b.n	800d3e0 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x78>
 800d43e:	f8b1 c000 	ldrh.w	ip, [r1]
 800d442:	9c01      	ldr	r4, [sp, #4]
 800d444:	43df      	mvns	r7, r3
 800d446:	b2ff      	uxtb	r7, r7
 800d448:	ea0c 0605 	and.w	r6, ip, r5
 800d44c:	437e      	muls	r6, r7
 800d44e:	fb03 6604 	mla	r6, r3, r4, r6
 800d452:	f40c 64fc 	and.w	r4, ip, #2016	; 0x7e0
 800d456:	437c      	muls	r4, r7
 800d458:	fb96 f6f9 	sdiv	r6, r6, r9
 800d45c:	fb03 440a 	mla	r4, r3, sl, r4
 800d460:	402e      	ands	r6, r5
 800d462:	fb94 f4f9 	sdiv	r4, r4, r9
 800d466:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 800d46a:	4334      	orrs	r4, r6
 800d46c:	f00c 061f 	and.w	r6, ip, #31
 800d470:	437e      	muls	r6, r7
 800d472:	fb03 660b 	mla	r6, r3, fp, r6
 800d476:	fb96 f6f9 	sdiv	r6, r6, r9
 800d47a:	f006 061f 	and.w	r6, r6, #31
 800d47e:	4334      	orrs	r4, r6
 800d480:	800c      	strh	r4, [r1, #0]
 800d482:	e79e      	b.n	800d3c2 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x5a>
 800d484:	fffff800 	.word	0xfffff800

0800d488 <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 800d488:	b510      	push	{r4, lr}
 800d48a:	8ac4      	ldrh	r4, [r0, #22]
 800d48c:	700c      	strb	r4, [r1, #0]
 800d48e:	6941      	ldr	r1, [r0, #20]
 800d490:	0a09      	lsrs	r1, r1, #8
 800d492:	7011      	strb	r1, [r2, #0]
 800d494:	6942      	ldr	r2, [r0, #20]
 800d496:	701a      	strb	r2, [r3, #0]
 800d498:	9b02      	ldr	r3, [sp, #8]
 800d49a:	22ff      	movs	r2, #255	; 0xff
 800d49c:	701a      	strb	r2, [r3, #0]
 800d49e:	2001      	movs	r0, #1
 800d4a0:	bd10      	pop	{r4, pc}

0800d4a2 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800d4a2:	4770      	bx	lr

0800d4a4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800d4a4:	b510      	push	{r4, lr}
 800d4a6:	2118      	movs	r1, #24
 800d4a8:	4604      	mov	r4, r0
 800d4aa:	f013 fc9a 	bl	8020de2 <_ZdlPvj>
 800d4ae:	4620      	mov	r0, r4
 800d4b0:	bd10      	pop	{r4, pc}

0800d4b2 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 800d4b2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4b6:	4616      	mov	r6, r2
 800d4b8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d4bc:	b085      	sub	sp, #20
 800d4be:	4432      	add	r2, r6
 800d4c0:	60c2      	str	r2, [r0, #12]
 800d4c2:	4698      	mov	r8, r3
 800d4c4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d4c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d4ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d4cc:	441a      	add	r2, r3
 800d4ce:	6803      	ldr	r3, [r0, #0]
 800d4d0:	6102      	str	r2, [r0, #16]
 800d4d2:	68db      	ldr	r3, [r3, #12]
 800d4d4:	4604      	mov	r4, r0
 800d4d6:	460d      	mov	r5, r1
 800d4d8:	4798      	blx	r3
 800d4da:	2800      	cmp	r0, #0
 800d4dc:	d03b      	beq.n	800d556 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa4>
 800d4de:	4446      	add	r6, r8
 800d4e0:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 800d4e4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800d4e6:	eb05 0646 	add.w	r6, r5, r6, lsl #1
 800d4ea:	6823      	ldr	r3, [r4, #0]
 800d4ec:	f10d 020f 	add.w	r2, sp, #15
 800d4f0:	9200      	str	r2, [sp, #0]
 800d4f2:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d4f6:	f10d 020d 	add.w	r2, sp, #13
 800d4fa:	f10d 030e 	add.w	r3, sp, #14
 800d4fe:	a903      	add	r1, sp, #12
 800d500:	4620      	mov	r0, r4
 800d502:	47c0      	blx	r8
 800d504:	b1f8      	cbz	r0, 800d546 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x94>
 800d506:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800d50a:	7a20      	ldrb	r0, [r4, #8]
 800d50c:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800d510:	f89d c00e 	ldrb.w	ip, [sp, #14]
 800d514:	4358      	muls	r0, r3
 800d516:	1c43      	adds	r3, r0, #1
 800d518:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800d51c:	7838      	ldrb	r0, [r7, #0]
 800d51e:	121b      	asrs	r3, r3, #8
 800d520:	fb10 f003 	smulbb	r0, r0, r3
 800d524:	b283      	uxth	r3, r0
 800d526:	1c58      	adds	r0, r3, #1
 800d528:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800d52c:	1200      	asrs	r0, r0, #8
 800d52e:	6823      	ldr	r3, [r4, #0]
 800d530:	28ff      	cmp	r0, #255	; 0xff
 800d532:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800d536:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800d53a:	d10f      	bne.n	800d55c <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xaa>
 800d53c:	f8cd c000 	str.w	ip, [sp]
 800d540:	4629      	mov	r1, r5
 800d542:	4620      	mov	r0, r4
 800d544:	47c0      	blx	r8
 800d546:	68e3      	ldr	r3, [r4, #12]
 800d548:	3502      	adds	r5, #2
 800d54a:	3301      	adds	r3, #1
 800d54c:	42ae      	cmp	r6, r5
 800d54e:	f107 0701 	add.w	r7, r7, #1
 800d552:	60e3      	str	r3, [r4, #12]
 800d554:	d8c9      	bhi.n	800d4ea <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x38>
 800d556:	b005      	add	sp, #20
 800d558:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d55c:	8829      	ldrh	r1, [r5, #0]
 800d55e:	fa1f fe80 	uxth.w	lr, r0
 800d562:	ea4f 2921 	mov.w	r9, r1, asr #8
 800d566:	43c0      	mvns	r0, r0
 800d568:	b2c0      	uxtb	r0, r0
 800d56a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800d56e:	fb12 f20e 	smulbb	r2, r2, lr
 800d572:	fb09 2200 	mla	r2, r9, r0, r2
 800d576:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800d57a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800d57e:	fb13 f30e 	smulbb	r3, r3, lr
 800d582:	fb09 3300 	mla	r3, r9, r0, r3
 800d586:	00c9      	lsls	r1, r1, #3
 800d588:	b29b      	uxth	r3, r3
 800d58a:	b2c9      	uxtb	r1, r1
 800d58c:	fb1c fc0e 	smulbb	ip, ip, lr
 800d590:	b292      	uxth	r2, r2
 800d592:	fb01 c000 	mla	r0, r1, r0, ip
 800d596:	1c59      	adds	r1, r3, #1
 800d598:	b280      	uxth	r0, r0
 800d59a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800d59e:	1c51      	adds	r1, r2, #1
 800d5a0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800d5a4:	1c41      	adds	r1, r0, #1
 800d5a6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800d5aa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800d5ae:	9000      	str	r0, [sp, #0]
 800d5b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d5b4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800d5b8:	e7c2      	b.n	800d540 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8e>
	...

0800d5bc <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 800d5bc:	f89d 0000 	ldrb.w	r0, [sp]
 800d5c0:	00db      	lsls	r3, r3, #3
 800d5c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800d5c6:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 800d5ca:	4803      	ldr	r0, [pc, #12]	; (800d5d8 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 800d5cc:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 800d5d0:	4313      	orrs	r3, r2
 800d5d2:	800b      	strh	r3, [r1, #0]
 800d5d4:	4770      	bx	lr
 800d5d6:	bf00      	nop
 800d5d8:	fffff800 	.word	0xfffff800

0800d5dc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 800d5dc:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 800d5e0:	4770      	bx	lr

0800d5e2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 800d5e2:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800d5e6:	4770      	bx	lr

0800d5e8 <_ZN8touchgfx6CircleD1Ev>:
 800d5e8:	4770      	bx	lr

0800d5ea <_ZN8touchgfx6CircleD0Ev>:
 800d5ea:	b510      	push	{r4, lr}
 800d5ec:	214c      	movs	r1, #76	; 0x4c
 800d5ee:	4604      	mov	r4, r0
 800d5f0:	f013 fbf7 	bl	8020de2 <_ZdlPvj>
 800d5f4:	4620      	mov	r0, r4
 800d5f6:	bd10      	pop	{r4, pc}

0800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800d5f8:	b507      	push	{r0, r1, r2, lr}
 800d5fa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800d5fe:	ab01      	add	r3, sp, #4
 800d600:	6809      	ldr	r1, [r1, #0]
 800d602:	6800      	ldr	r0, [r0, #0]
 800d604:	f004 f97e 	bl	8011904 <_ZN8touchgfx6muldivElllRl>
 800d608:	b003      	add	sp, #12
 800d60a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d610 <_ZN8touchgfx7CWRUtil4sineEi>:
 800d610:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800d614:	fb90 f3f2 	sdiv	r3, r0, r2
 800d618:	fb03 0312 	mls	r3, r3, r2, r0
 800d61c:	4413      	add	r3, r2
 800d61e:	fb93 f0f2 	sdiv	r0, r3, r2
 800d622:	fb02 3010 	mls	r0, r2, r0, r3
 800d626:	285a      	cmp	r0, #90	; 0x5a
 800d628:	4b09      	ldr	r3, [pc, #36]	; (800d650 <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800d62a:	dc02      	bgt.n	800d632 <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800d62c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d630:	4770      	bx	lr
 800d632:	28b4      	cmp	r0, #180	; 0xb4
 800d634:	dc02      	bgt.n	800d63c <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800d636:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800d63a:	e7f7      	b.n	800d62c <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800d63c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800d640:	bfd4      	ite	le
 800d642:	38b4      	suble	r0, #180	; 0xb4
 800d644:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800d648:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d64c:	4240      	negs	r0, r0
 800d64e:	4770      	bx	lr
 800d650:	08024098 	.word	0x08024098

0800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800d654:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800d658:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d65a:	fb90 f3f2 	sdiv	r3, r0, r2
 800d65e:	fb03 0012 	mls	r0, r3, r2, r0
 800d662:	4410      	add	r0, r2
 800d664:	fb90 f4f2 	sdiv	r4, r0, r2
 800d668:	fb02 0414 	mls	r4, r2, r4, r0
 800d66c:	f004 061f 	and.w	r6, r4, #31
 800d670:	1164      	asrs	r4, r4, #5
 800d672:	4620      	mov	r0, r4
 800d674:	f7ff ffcc 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800d678:	4605      	mov	r5, r0
 800d67a:	b90e      	cbnz	r6, 800d680 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800d67c:	b002      	add	sp, #8
 800d67e:	bd70      	pop	{r4, r5, r6, pc}
 800d680:	1c60      	adds	r0, r4, #1
 800d682:	f7ff ffc5 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800d686:	ab01      	add	r3, sp, #4
 800d688:	2220      	movs	r2, #32
 800d68a:	4631      	mov	r1, r6
 800d68c:	1b40      	subs	r0, r0, r5
 800d68e:	f004 f939 	bl	8011904 <_ZN8touchgfx6muldivElllRl>
 800d692:	4428      	add	r0, r5
 800d694:	e7f2      	b.n	800d67c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800d696:	b508      	push	{r3, lr}
 800d698:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800d69c:	f7ff ffda 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d6a0:	bd08      	pop	{r3, pc}
	...

0800d6a4 <_ZN8touchgfx6CircleC1Ev>:
 800d6a4:	b510      	push	{r4, lr}
 800d6a6:	4604      	mov	r4, r0
 800d6a8:	f000 fc82 	bl	800dfb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d6ac:	4b08      	ldr	r3, [pc, #32]	; (800d6d0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800d6ae:	6023      	str	r3, [r4, #0]
 800d6b0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800d6b4:	2300      	movs	r3, #0
 800d6b6:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800d6ba:	f24b 4205 	movw	r2, #46085	; 0xb405
 800d6be:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800d6c2:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800d6c6:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800d6ca:	60a3      	str	r3, [r4, #8]
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	bd10      	pop	{r4, pc}
 800d6d0:	08024158 	.word	0x08024158

0800d6d4 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800d6d4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d6d8:	4606      	mov	r6, r0
 800d6da:	6810      	ldr	r0, [r2, #0]
 800d6dc:	4698      	mov	r8, r3
 800d6de:	4691      	mov	r9, r2
 800d6e0:	460f      	mov	r7, r1
 800d6e2:	f7ff ffb7 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d6e6:	a902      	add	r1, sp, #8
 800d6e8:	2402      	movs	r4, #2
 800d6ea:	f841 0d08 	str.w	r0, [r1, #-8]!
 800d6ee:	4640      	mov	r0, r8
 800d6f0:	f7ff ff82 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d6f4:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800d6f6:	fb90 f0f4 	sdiv	r0, r0, r4
 800d6fa:	4405      	add	r5, r0
 800d6fc:	f8d9 0000 	ldr.w	r0, [r9]
 800d700:	f7ff ffc9 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d704:	a902      	add	r1, sp, #8
 800d706:	f841 0d04 	str.w	r0, [r1, #-4]!
 800d70a:	4640      	mov	r0, r8
 800d70c:	f7ff ff74 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d710:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800d712:	fb90 f0f4 	sdiv	r0, r0, r4
 800d716:	4629      	mov	r1, r5
 800d718:	1a12      	subs	r2, r2, r0
 800d71a:	4638      	mov	r0, r7
 800d71c:	f012 f955 	bl	801f9ca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d720:	b003      	add	sp, #12
 800d722:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d726 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800d726:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d72a:	9e08      	ldr	r6, [sp, #32]
 800d72c:	6830      	ldr	r0, [r6, #0]
 800d72e:	4698      	mov	r8, r3
 800d730:	4615      	mov	r5, r2
 800d732:	460f      	mov	r7, r1
 800d734:	f7ff ff8e 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d738:	a902      	add	r1, sp, #8
 800d73a:	2402      	movs	r4, #2
 800d73c:	f841 0d08 	str.w	r0, [r1, #-8]!
 800d740:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d742:	f7ff ff59 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d746:	682d      	ldr	r5, [r5, #0]
 800d748:	fb90 f0f4 	sdiv	r0, r0, r4
 800d74c:	4405      	add	r5, r0
 800d74e:	6830      	ldr	r0, [r6, #0]
 800d750:	f7ff ffa1 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d754:	a902      	add	r1, sp, #8
 800d756:	f841 0d04 	str.w	r0, [r1, #-4]!
 800d75a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d75c:	f7ff ff4c 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d760:	f8d8 2000 	ldr.w	r2, [r8]
 800d764:	fb90 f0f4 	sdiv	r0, r0, r4
 800d768:	4629      	mov	r1, r5
 800d76a:	1a12      	subs	r2, r2, r0
 800d76c:	4638      	mov	r0, r7
 800d76e:	f012 f8bb 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d772:	b002      	add	sp, #8
 800d774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800d778:	b513      	push	{r0, r1, r4, lr}
 800d77a:	e9cd 2300 	strd	r2, r3, [sp]
 800d77e:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800d782:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800d786:	f7ff ffce 	bl	800d726 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800d78a:	b002      	add	sp, #8
 800d78c:	bd10      	pop	{r4, pc}

0800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800d78e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d790:	680e      	ldr	r6, [r1, #0]
 800d792:	681f      	ldr	r7, [r3, #0]
 800d794:	9807      	ldr	r0, [sp, #28]
 800d796:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800d79a:	42be      	cmp	r6, r7
 800d79c:	bfb8      	it	lt
 800d79e:	601e      	strlt	r6, [r3, #0]
 800d7a0:	680b      	ldr	r3, [r1, #0]
 800d7a2:	6829      	ldr	r1, [r5, #0]
 800d7a4:	428b      	cmp	r3, r1
 800d7a6:	bfc8      	it	gt
 800d7a8:	602b      	strgt	r3, [r5, #0]
 800d7aa:	6813      	ldr	r3, [r2, #0]
 800d7ac:	6821      	ldr	r1, [r4, #0]
 800d7ae:	428b      	cmp	r3, r1
 800d7b0:	bfb8      	it	lt
 800d7b2:	6023      	strlt	r3, [r4, #0]
 800d7b4:	6813      	ldr	r3, [r2, #0]
 800d7b6:	6802      	ldr	r2, [r0, #0]
 800d7b8:	4293      	cmp	r3, r2
 800d7ba:	bfc8      	it	gt
 800d7bc:	6003      	strgt	r3, [r0, #0]
 800d7be:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800d7c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7c4:	4606      	mov	r6, r0
 800d7c6:	b089      	sub	sp, #36	; 0x24
 800d7c8:	6808      	ldr	r0, [r1, #0]
 800d7ca:	4690      	mov	r8, r2
 800d7cc:	461f      	mov	r7, r3
 800d7ce:	4689      	mov	r9, r1
 800d7d0:	f7ff ff40 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d7d4:	ad08      	add	r5, sp, #32
 800d7d6:	2402      	movs	r4, #2
 800d7d8:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d7dc:	4640      	mov	r0, r8
 800d7de:	4629      	mov	r1, r5
 800d7e0:	f7ff ff0a 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7e4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800d7e6:	fb90 f0f4 	sdiv	r0, r0, r4
 800d7ea:	4418      	add	r0, r3
 800d7ec:	9005      	str	r0, [sp, #20]
 800d7ee:	f8d9 0000 	ldr.w	r0, [r9]
 800d7f2:	f7ff ff50 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d7f6:	4629      	mov	r1, r5
 800d7f8:	9007      	str	r0, [sp, #28]
 800d7fa:	4640      	mov	r0, r8
 800d7fc:	f7ff fefc 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d800:	fb90 f0f4 	sdiv	r0, r0, r4
 800d804:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800d806:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d808:	aa08      	add	r2, sp, #32
 800d80a:	1a24      	subs	r4, r4, r0
 800d80c:	f842 4d08 	str.w	r4, [r2, #-8]!
 800d810:	9302      	str	r3, [sp, #8]
 800d812:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d814:	9301      	str	r3, [sp, #4]
 800d816:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d818:	9300      	str	r3, [sp, #0]
 800d81a:	a905      	add	r1, sp, #20
 800d81c:	463b      	mov	r3, r7
 800d81e:	4630      	mov	r0, r6
 800d820:	f7ff ffb5 	bl	800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d824:	b009      	add	sp, #36	; 0x24
 800d826:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d82a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800d82a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d82e:	4291      	cmp	r1, r2
 800d830:	b08d      	sub	sp, #52	; 0x34
 800d832:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800d836:	bfc8      	it	gt
 800d838:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800d83c:	461e      	mov	r6, r3
 800d83e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d842:	1a9b      	subs	r3, r3, r2
 800d844:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d848:	bfa2      	ittt	ge
 800d84a:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800d84e:	2200      	movge	r2, #0
 800d850:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800d854:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800d856:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800d858:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800d85c:	ad0c      	add	r5, sp, #48	; 0x30
 800d85e:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d862:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d866:	f845 3d04 	str.w	r3, [r5, #-4]!
 800d86a:	a907      	add	r1, sp, #28
 800d86c:	4633      	mov	r3, r6
 800d86e:	462a      	mov	r2, r5
 800d870:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d874:	9700      	str	r7, [sp, #0]
 800d876:	4604      	mov	r4, r0
 800d878:	f7ff ffa2 	bl	800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d87c:	9b07      	ldr	r3, [sp, #28]
 800d87e:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800d882:	f103 0120 	add.w	r1, r3, #32
 800d886:	fb91 f3f0 	sdiv	r3, r1, r0
 800d88a:	fb00 1313 	mls	r3, r0, r3, r1
 800d88e:	1ac3      	subs	r3, r0, r3
 800d890:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800d894:	fb93 f2f0 	sdiv	r2, r3, r0
 800d898:	fb00 3312 	mls	r3, r0, r2, r3
 800d89c:	440b      	add	r3, r1
 800d89e:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800d8a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d8a4:	9906      	ldr	r1, [sp, #24]
 800d8a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d8a8:	4291      	cmp	r1, r2
 800d8aa:	db11      	blt.n	800d8d0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800d8ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d8ae:	9700      	str	r7, [sp, #0]
 800d8b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d8b4:	930b      	str	r3, [sp, #44]	; 0x2c
 800d8b6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d8ba:	4633      	mov	r3, r6
 800d8bc:	462a      	mov	r2, r5
 800d8be:	4651      	mov	r1, sl
 800d8c0:	4620      	mov	r0, r4
 800d8c2:	f7ff ff7d 	bl	800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d8c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d8c8:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800d8cc:	9309      	str	r3, [sp, #36]	; 0x24
 800d8ce:	e7e8      	b.n	800d8a2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800d8d0:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800d8d4:	4291      	cmp	r1, r2
 800d8d6:	dd0c      	ble.n	800d8f2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800d8d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d8da:	9700      	str	r7, [sp, #0]
 800d8dc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d8e0:	930b      	str	r3, [sp, #44]	; 0x2c
 800d8e2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d8e6:	4633      	mov	r3, r6
 800d8e8:	462a      	mov	r2, r5
 800d8ea:	a906      	add	r1, sp, #24
 800d8ec:	4620      	mov	r0, r4
 800d8ee:	f7ff ff67 	bl	800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d8f2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d8f4:	2b00      	cmp	r3, #0
 800d8f6:	f040 8097 	bne.w	800da28 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800d8fa:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800d8fe:	1a52      	subs	r2, r2, r1
 800d900:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800d904:	da0a      	bge.n	800d91c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800d906:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d90a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800d90e:	9700      	str	r7, [sp, #0]
 800d910:	4633      	mov	r3, r6
 800d912:	462a      	mov	r2, r5
 800d914:	a90a      	add	r1, sp, #40	; 0x28
 800d916:	4620      	mov	r0, r4
 800d918:	f7ff ff52 	bl	800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d91c:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800d920:	2bb3      	cmp	r3, #179	; 0xb3
 800d922:	d87e      	bhi.n	800da22 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800d924:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800d928:	1a1b      	subs	r3, r3, r0
 800d92a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d92e:	da78      	bge.n	800da22 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800d930:	f7ff fe90 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d934:	ad0c      	add	r5, sp, #48	; 0x30
 800d936:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800d93a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d93e:	4658      	mov	r0, fp
 800d940:	4629      	mov	r1, r5
 800d942:	f7ff fe59 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d946:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d948:	18c3      	adds	r3, r0, r3
 800d94a:	9807      	ldr	r0, [sp, #28]
 800d94c:	9305      	str	r3, [sp, #20]
 800d94e:	f7ff fea2 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d952:	4629      	mov	r1, r5
 800d954:	900b      	str	r0, [sp, #44]	; 0x2c
 800d956:	4658      	mov	r0, fp
 800d958:	f7ff fe4e 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d95c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d95e:	9a05      	ldr	r2, [sp, #20]
 800d960:	9700      	str	r7, [sp, #0]
 800d962:	1a1b      	subs	r3, r3, r0
 800d964:	f04f 0a02 	mov.w	sl, #2
 800d968:	9304      	str	r3, [sp, #16]
 800d96a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d96c:	fb93 f3fa 	sdiv	r3, r3, sl
 800d970:	1ad2      	subs	r2, r2, r3
 800d972:	920a      	str	r2, [sp, #40]	; 0x28
 800d974:	9a04      	ldr	r2, [sp, #16]
 800d976:	1ad3      	subs	r3, r2, r3
 800d978:	930b      	str	r3, [sp, #44]	; 0x2c
 800d97a:	462a      	mov	r2, r5
 800d97c:	4633      	mov	r3, r6
 800d97e:	a90a      	add	r1, sp, #40	; 0x28
 800d980:	4620      	mov	r0, r4
 800d982:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d986:	f7ff ff02 	bl	800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d98a:	9a05      	ldr	r2, [sp, #20]
 800d98c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d98e:	fb93 f3fa 	sdiv	r3, r3, sl
 800d992:	189a      	adds	r2, r3, r2
 800d994:	920a      	str	r2, [sp, #40]	; 0x28
 800d996:	9a04      	ldr	r2, [sp, #16]
 800d998:	9700      	str	r7, [sp, #0]
 800d99a:	4413      	add	r3, r2
 800d99c:	a90a      	add	r1, sp, #40	; 0x28
 800d99e:	462a      	mov	r2, r5
 800d9a0:	930b      	str	r3, [sp, #44]	; 0x2c
 800d9a2:	4620      	mov	r0, r4
 800d9a4:	4633      	mov	r3, r6
 800d9a6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d9aa:	f7ff fef0 	bl	800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d9ae:	9806      	ldr	r0, [sp, #24]
 800d9b0:	f7ff fe50 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d9b4:	4629      	mov	r1, r5
 800d9b6:	900b      	str	r0, [sp, #44]	; 0x2c
 800d9b8:	4658      	mov	r0, fp
 800d9ba:	f7ff fe1d 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d9c0:	18c3      	adds	r3, r0, r3
 800d9c2:	9806      	ldr	r0, [sp, #24]
 800d9c4:	9304      	str	r3, [sp, #16]
 800d9c6:	f7ff fe66 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d9ca:	4629      	mov	r1, r5
 800d9cc:	900b      	str	r0, [sp, #44]	; 0x2c
 800d9ce:	4658      	mov	r0, fp
 800d9d0:	f7ff fe12 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d9d6:	9a04      	ldr	r2, [sp, #16]
 800d9d8:	9700      	str	r7, [sp, #0]
 800d9da:	eba3 0b00 	sub.w	fp, r3, r0
 800d9de:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d9e0:	fb93 f3fa 	sdiv	r3, r3, sl
 800d9e4:	1ad2      	subs	r2, r2, r3
 800d9e6:	ebab 0303 	sub.w	r3, fp, r3
 800d9ea:	920a      	str	r2, [sp, #40]	; 0x28
 800d9ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800d9ee:	462a      	mov	r2, r5
 800d9f0:	4633      	mov	r3, r6
 800d9f2:	a90a      	add	r1, sp, #40	; 0x28
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d9fa:	f7ff fec8 	bl	800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d9fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800da00:	fb93 fafa 	sdiv	sl, r3, sl
 800da04:	9b04      	ldr	r3, [sp, #16]
 800da06:	9700      	str	r7, [sp, #0]
 800da08:	4453      	add	r3, sl
 800da0a:	930a      	str	r3, [sp, #40]	; 0x28
 800da0c:	eb0a 030b 	add.w	r3, sl, fp
 800da10:	930b      	str	r3, [sp, #44]	; 0x2c
 800da12:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800da16:	4633      	mov	r3, r6
 800da18:	462a      	mov	r2, r5
 800da1a:	a90a      	add	r1, sp, #40	; 0x28
 800da1c:	4620      	mov	r0, r4
 800da1e:	f7ff feb6 	bl	800d78e <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800da22:	b00d      	add	sp, #52	; 0x34
 800da24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da28:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da2a:	9700      	str	r7, [sp, #0]
 800da2c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800da30:	930b      	str	r3, [sp, #44]	; 0x2c
 800da32:	462a      	mov	r2, r5
 800da34:	4633      	mov	r3, r6
 800da36:	a907      	add	r1, sp, #28
 800da38:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800da3c:	4620      	mov	r0, r4
 800da3e:	f7ff febf 	bl	800d7c0 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800da42:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da44:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800da46:	9700      	str	r7, [sp, #0]
 800da48:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800da4c:	930b      	str	r3, [sp, #44]	; 0x2c
 800da4e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800da52:	4633      	mov	r3, r6
 800da54:	462a      	mov	r2, r5
 800da56:	a906      	add	r1, sp, #24
 800da58:	e75d      	b.n	800d916 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800da5a <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800da5a:	b530      	push	{r4, r5, lr}
 800da5c:	4604      	mov	r4, r0
 800da5e:	4608      	mov	r0, r1
 800da60:	4611      	mov	r1, r2
 800da62:	461a      	mov	r2, r3
 800da64:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800da68:	b089      	sub	sp, #36	; 0x24
 800da6a:	015b      	lsls	r3, r3, #5
 800da6c:	9304      	str	r3, [sp, #16]
 800da6e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da72:	2500      	movs	r5, #0
 800da74:	015b      	lsls	r3, r3, #5
 800da76:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800da7a:	ab07      	add	r3, sp, #28
 800da7c:	9302      	str	r3, [sp, #8]
 800da7e:	ab06      	add	r3, sp, #24
 800da80:	9301      	str	r3, [sp, #4]
 800da82:	ab05      	add	r3, sp, #20
 800da84:	9300      	str	r3, [sp, #0]
 800da86:	ab04      	add	r3, sp, #16
 800da88:	9505      	str	r5, [sp, #20]
 800da8a:	f7ff fece 	bl	800d82a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800da8e:	2520      	movs	r5, #32
 800da90:	9a04      	ldr	r2, [sp, #16]
 800da92:	9805      	ldr	r0, [sp, #20]
 800da94:	fb92 f2f5 	sdiv	r2, r2, r5
 800da98:	fb90 f0f5 	sdiv	r0, r0, r5
 800da9c:	b292      	uxth	r2, r2
 800da9e:	3002      	adds	r0, #2
 800daa0:	1a80      	subs	r0, r0, r2
 800daa2:	9b06      	ldr	r3, [sp, #24]
 800daa4:	9907      	ldr	r1, [sp, #28]
 800daa6:	fb93 f3f5 	sdiv	r3, r3, r5
 800daaa:	fb91 f1f5 	sdiv	r1, r1, r5
 800daae:	b29b      	uxth	r3, r3
 800dab0:	3102      	adds	r1, #2
 800dab2:	1ac9      	subs	r1, r1, r3
 800dab4:	3a01      	subs	r2, #1
 800dab6:	3b01      	subs	r3, #1
 800dab8:	80a0      	strh	r0, [r4, #4]
 800daba:	4620      	mov	r0, r4
 800dabc:	8022      	strh	r2, [r4, #0]
 800dabe:	8063      	strh	r3, [r4, #2]
 800dac0:	80e1      	strh	r1, [r4, #6]
 800dac2:	b009      	add	sp, #36	; 0x24
 800dac4:	bd30      	pop	{r4, r5, pc}

0800dac6 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800dac6:	b510      	push	{r4, lr}
 800dac8:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800dacc:	4604      	mov	r4, r0
 800dace:	f7ff ffc4 	bl	800da5a <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800dad2:	4620      	mov	r0, r4
 800dad4:	bd10      	pop	{r4, pc}

0800dad6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800dad6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dada:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800dadc:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800dade:	b0ba      	sub	sp, #232	; 0xe8
 800dae0:	429a      	cmp	r2, r3
 800dae2:	9303      	str	r3, [sp, #12]
 800dae4:	9204      	str	r2, [sp, #16]
 800dae6:	bfb8      	it	lt
 800dae8:	e9cd 2303 	strdlt	r2, r3, [sp, #12]
 800daec:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800daf0:	1a9b      	subs	r3, r3, r2
 800daf2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800daf6:	bfa2      	ittt	ge
 800daf8:	2200      	movge	r2, #0
 800dafa:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800dafe:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800db02:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800db04:	4604      	mov	r4, r0
 800db06:	460f      	mov	r7, r1
 800db08:	ae0a      	add	r6, sp, #40	; 0x28
 800db0a:	2a00      	cmp	r2, #0
 800db0c:	d131      	bne.n	800db72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x9c>
 800db0e:	463a      	mov	r2, r7
 800db10:	4621      	mov	r1, r4
 800db12:	a80b      	add	r0, sp, #44	; 0x2c
 800db14:	f011 fd8e 	bl	801f634 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800db18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800db1a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800db1c:	9205      	str	r2, [sp, #20]
 800db1e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800db22:	9306      	str	r3, [sp, #24]
 800db24:	dc6d      	bgt.n	800dc02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x12c>
 800db26:	9b03      	ldr	r3, [sp, #12]
 800db28:	9307      	str	r3, [sp, #28]
 800db2a:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800db2e:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 800db32:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800db36:	930a      	str	r3, [sp, #40]	; 0x28
 800db38:	aa07      	add	r2, sp, #28
 800db3a:	4633      	mov	r3, r6
 800db3c:	a90b      	add	r1, sp, #44	; 0x2c
 800db3e:	4620      	mov	r0, r4
 800db40:	016d      	lsls	r5, r5, #5
 800db42:	f7ff fdc7 	bl	800d6d4 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800db46:	9f07      	ldr	r7, [sp, #28]
 800db48:	2d00      	cmp	r5, #0
 800db4a:	d163      	bne.n	800dc14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x13e>
 800db4c:	3720      	adds	r7, #32
 800db4e:	9a04      	ldr	r2, [sp, #16]
 800db50:	9b06      	ldr	r3, [sp, #24]
 800db52:	4639      	mov	r1, r7
 800db54:	4291      	cmp	r1, r2
 800db56:	442f      	add	r7, r5
 800db58:	dc69      	bgt.n	800dc2e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x158>
 800db5a:	9a05      	ldr	r2, [sp, #20]
 800db5c:	9107      	str	r1, [sp, #28]
 800db5e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800db62:	930a      	str	r3, [sp, #40]	; 0x28
 800db64:	aa07      	add	r2, sp, #28
 800db66:	4633      	mov	r3, r6
 800db68:	a90b      	add	r1, sp, #44	; 0x2c
 800db6a:	4620      	mov	r0, r4
 800db6c:	f7ff fe04 	bl	800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800db70:	e7ed      	b.n	800db4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800db72:	f9b1 c000 	ldrsh.w	ip, [r1]
 800db76:	88bd      	ldrh	r5, [r7, #4]
 800db78:	f9b1 0002 	ldrsh.w	r0, [r1, #2]
 800db7c:	e9d4 310c 	ldrd	r3, r1, [r4, #48]	; 0x30
 800db80:	4465      	add	r5, ip
 800db82:	b22d      	sxth	r5, r5
 800db84:	eba3 1545 	sub.w	r5, r3, r5, lsl #5
 800db88:	2d00      	cmp	r5, #0
 800db8a:	eba3 134c 	sub.w	r3, r3, ip, lsl #5
 800db8e:	bfb8      	it	lt
 800db90:	426d      	neglt	r5, r5
 800db92:	2b00      	cmp	r3, #0
 800db94:	bfb8      	it	lt
 800db96:	425b      	neglt	r3, r3
 800db98:	429d      	cmp	r5, r3
 800db9a:	bfb8      	it	lt
 800db9c:	461d      	movlt	r5, r3
 800db9e:	88fb      	ldrh	r3, [r7, #6]
 800dba0:	4403      	add	r3, r0
 800dba2:	b21b      	sxth	r3, r3
 800dba4:	eba1 1343 	sub.w	r3, r1, r3, lsl #5
 800dba8:	2b00      	cmp	r3, #0
 800dbaa:	eba1 1140 	sub.w	r1, r1, r0, lsl #5
 800dbae:	bfb8      	it	lt
 800dbb0:	425b      	neglt	r3, r3
 800dbb2:	2900      	cmp	r1, #0
 800dbb4:	bfb8      	it	lt
 800dbb6:	4249      	neglt	r1, r1
 800dbb8:	428b      	cmp	r3, r1
 800dbba:	bfb8      	it	lt
 800dbbc:	460b      	movlt	r3, r1
 800dbbe:	115b      	asrs	r3, r3, #5
 800dbc0:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800dbc4:	116d      	asrs	r5, r5, #5
 800dbc6:	3301      	adds	r3, #1
 800dbc8:	435b      	muls	r3, r3
 800dbca:	3501      	adds	r5, #1
 800dbcc:	fb05 3505 	mla	r5, r5, r5, r3
 800dbd0:	3001      	adds	r0, #1
 800dbd2:	2302      	movs	r3, #2
 800dbd4:	fb92 f2f3 	sdiv	r2, r2, r3
 800dbd8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dbda:	1040      	asrs	r0, r0, #1
 800dbdc:	1a9a      	subs	r2, r3, r2
 800dbde:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800dbe2:	920a      	str	r2, [sp, #40]	; 0x28
 800dbe4:	f7ff fd14 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800dbe8:	a90b      	add	r1, sp, #44	; 0x2c
 800dbea:	900b      	str	r0, [sp, #44]	; 0x2c
 800dbec:	4630      	mov	r0, r6
 800dbee:	f7ff fd03 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dbf2:	2320      	movs	r3, #32
 800dbf4:	fb90 f0f3 	sdiv	r0, r0, r3
 800dbf8:	4340      	muls	r0, r0
 800dbfa:	42a8      	cmp	r0, r5
 800dbfc:	dd87      	ble.n	800db0e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x38>
 800dbfe:	2401      	movs	r4, #1
 800dc00:	e037      	b.n	800dc72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x19c>
 800dc02:	2102      	movs	r1, #2
 800dc04:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc08:	4413      	add	r3, r2
 800dc0a:	9306      	str	r3, [sp, #24]
 800dc0c:	fb93 f3f1 	sdiv	r3, r3, r1
 800dc10:	9305      	str	r3, [sp, #20]
 800dc12:	e788      	b.n	800db26 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x50>
 800dc14:	f107 0320 	add.w	r3, r7, #32
 800dc18:	fb93 f7f5 	sdiv	r7, r3, r5
 800dc1c:	fb05 3717 	mls	r7, r5, r7, r3
 800dc20:	1bea      	subs	r2, r5, r7
 800dc22:	fb92 f7f5 	sdiv	r7, r2, r5
 800dc26:	fb05 2717 	mls	r7, r5, r7, r2
 800dc2a:	441f      	add	r7, r3
 800dc2c:	e78f      	b.n	800db4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800dc2e:	9907      	ldr	r1, [sp, #28]
 800dc30:	428a      	cmp	r2, r1
 800dc32:	dd09      	ble.n	800dc48 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800dc34:	9a05      	ldr	r2, [sp, #20]
 800dc36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dc3a:	930a      	str	r3, [sp, #40]	; 0x28
 800dc3c:	aa04      	add	r2, sp, #16
 800dc3e:	4633      	mov	r3, r6
 800dc40:	a90b      	add	r1, sp, #44	; 0x2c
 800dc42:	4620      	mov	r0, r4
 800dc44:	f7ff fd98 	bl	800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800dc48:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800dc4c:	9a06      	ldr	r2, [sp, #24]
 800dc4e:	1ac3      	subs	r3, r0, r3
 800dc50:	b99a      	cbnz	r2, 800dc7a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1a4>
 800dc52:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800dc56:	da04      	bge.n	800dc62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800dc58:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800dc5c:	a80b      	add	r0, sp, #44	; 0x2c
 800dc5e:	f011 fe43 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dc62:	21ff      	movs	r1, #255	; 0xff
 800dc64:	a80b      	add	r0, sp, #44	; 0x2c
 800dc66:	f011 ffb4 	bl	801fbd2 <_ZN8touchgfx6Canvas6renderEh>
 800dc6a:	4604      	mov	r4, r0
 800dc6c:	a80b      	add	r0, sp, #44	; 0x2c
 800dc6e:	f011 ffef 	bl	801fc50 <_ZN8touchgfx6CanvasD1Ev>
 800dc72:	4620      	mov	r0, r4
 800dc74:	b03a      	add	sp, #232	; 0xe8
 800dc76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc7a:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800dc7e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800dc82:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800dc86:	da2b      	bge.n	800dce0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800dc88:	f7ff fce4 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dc8c:	4631      	mov	r1, r6
 800dc8e:	900a      	str	r0, [sp, #40]	; 0x28
 800dc90:	a805      	add	r0, sp, #20
 800dc92:	f7ff fcb1 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dc96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dc98:	4418      	add	r0, r3
 800dc9a:	9008      	str	r0, [sp, #32]
 800dc9c:	9804      	ldr	r0, [sp, #16]
 800dc9e:	f7ff fcfa 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dca2:	4631      	mov	r1, r6
 800dca4:	900a      	str	r0, [sp, #40]	; 0x28
 800dca6:	a805      	add	r0, sp, #20
 800dca8:	f7ff fca6 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dcac:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dcae:	1a18      	subs	r0, r3, r0
 800dcb0:	9b04      	ldr	r3, [sp, #16]
 800dcb2:	9009      	str	r0, [sp, #36]	; 0x24
 800dcb4:	443b      	add	r3, r7
 800dcb6:	930a      	str	r3, [sp, #40]	; 0x28
 800dcb8:	f10d 0818 	add.w	r8, sp, #24
 800dcbc:	9b04      	ldr	r3, [sp, #16]
 800dcbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dcc0:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800dcc4:	4293      	cmp	r3, r2
 800dcc6:	dd0b      	ble.n	800dce0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800dcc8:	ab09      	add	r3, sp, #36	; 0x24
 800dcca:	e9cd 6800 	strd	r6, r8, [sp]
 800dcce:	aa08      	add	r2, sp, #32
 800dcd0:	a90b      	add	r1, sp, #44	; 0x2c
 800dcd2:	4620      	mov	r0, r4
 800dcd4:	f7ff fd27 	bl	800d726 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800dcd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dcda:	443b      	add	r3, r7
 800dcdc:	930a      	str	r3, [sp, #40]	; 0x28
 800dcde:	e7ed      	b.n	800dcbc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e6>
 800dce0:	9a04      	ldr	r2, [sp, #16]
 800dce2:	9b07      	ldr	r3, [sp, #28]
 800dce4:	429a      	cmp	r2, r3
 800dce6:	dd0a      	ble.n	800dcfe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x228>
 800dce8:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800dcec:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800dcf0:	930a      	str	r3, [sp, #40]	; 0x28
 800dcf2:	aa04      	add	r2, sp, #16
 800dcf4:	4633      	mov	r3, r6
 800dcf6:	a90b      	add	r1, sp, #44	; 0x2c
 800dcf8:	4620      	mov	r0, r4
 800dcfa:	f7ff fd3d 	bl	800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800dcfe:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800dd02:	9b03      	ldr	r3, [sp, #12]
 800dd04:	4642      	mov	r2, r8
 800dd06:	429a      	cmp	r2, r3
 800dd08:	eba8 0805 	sub.w	r8, r8, r5
 800dd0c:	db0c      	blt.n	800dd28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x252>
 800dd0e:	9207      	str	r2, [sp, #28]
 800dd10:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800dd14:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800dd18:	930a      	str	r3, [sp, #40]	; 0x28
 800dd1a:	aa07      	add	r2, sp, #28
 800dd1c:	4633      	mov	r3, r6
 800dd1e:	a90b      	add	r1, sp, #44	; 0x2c
 800dd20:	4620      	mov	r0, r4
 800dd22:	f7ff fd29 	bl	800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800dd26:	e7ec      	b.n	800dd02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800dd28:	9a07      	ldr	r2, [sp, #28]
 800dd2a:	4293      	cmp	r3, r2
 800dd2c:	da0a      	bge.n	800dd44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x26e>
 800dd2e:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800dd32:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800dd36:	930a      	str	r3, [sp, #40]	; 0x28
 800dd38:	aa03      	add	r2, sp, #12
 800dd3a:	4633      	mov	r3, r6
 800dd3c:	a90b      	add	r1, sp, #44	; 0x2c
 800dd3e:	4620      	mov	r0, r4
 800dd40:	f7ff fd1a 	bl	800d778 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800dd44:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800dd48:	1a1b      	subs	r3, r3, r0
 800dd4a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800dd4e:	da88      	bge.n	800dc62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800dd50:	f7ff fc80 	bl	800d654 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dd54:	4631      	mov	r1, r6
 800dd56:	900a      	str	r0, [sp, #40]	; 0x28
 800dd58:	a805      	add	r0, sp, #20
 800dd5a:	f7ff fc4d 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd60:	4418      	add	r0, r3
 800dd62:	9008      	str	r0, [sp, #32]
 800dd64:	9803      	ldr	r0, [sp, #12]
 800dd66:	f7ff fc96 	bl	800d696 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dd6a:	4631      	mov	r1, r6
 800dd6c:	900a      	str	r0, [sp, #40]	; 0x28
 800dd6e:	a805      	add	r0, sp, #20
 800dd70:	f7ff fc42 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dd74:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dd76:	1a18      	subs	r0, r3, r0
 800dd78:	9b03      	ldr	r3, [sp, #12]
 800dd7a:	9009      	str	r0, [sp, #36]	; 0x24
 800dd7c:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800dd80:	443b      	add	r3, r7
 800dd82:	930a      	str	r3, [sp, #40]	; 0x28
 800dd84:	ad06      	add	r5, sp, #24
 800dd86:	9a03      	ldr	r2, [sp, #12]
 800dd88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dd8a:	429a      	cmp	r2, r3
 800dd8c:	f77f af69 	ble.w	800dc62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800dd90:	ab09      	add	r3, sp, #36	; 0x24
 800dd92:	e9cd 6500 	strd	r6, r5, [sp]
 800dd96:	aa08      	add	r2, sp, #32
 800dd98:	a90b      	add	r1, sp, #44	; 0x2c
 800dd9a:	4620      	mov	r0, r4
 800dd9c:	f7ff fcc3 	bl	800d726 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800dda0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dda2:	443b      	add	r3, r7
 800dda4:	930a      	str	r3, [sp, #40]	; 0x28
 800dda6:	e7ee      	b.n	800dd86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b0>

0800dda8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800dda8:	6281      	str	r1, [r0, #40]	; 0x28
 800ddaa:	4770      	bx	lr

0800ddac <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800ddac:	b510      	push	{r4, lr}
 800ddae:	2200      	movs	r2, #0
 800ddb0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800ddb4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800ddb8:	8002      	strh	r2, [r0, #0]
 800ddba:	8042      	strh	r2, [r0, #2]
 800ddbc:	8084      	strh	r4, [r0, #4]
 800ddbe:	80c1      	strh	r1, [r0, #6]
 800ddc0:	bd10      	pop	{r4, pc}

0800ddc2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800ddc2:	2200      	movs	r2, #0
 800ddc4:	8002      	strh	r2, [r0, #0]
 800ddc6:	8042      	strh	r2, [r0, #2]
 800ddc8:	8082      	strh	r2, [r0, #4]
 800ddca:	80c2      	strh	r2, [r0, #6]
 800ddcc:	4770      	bx	lr
	...

0800ddd0 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800ddd0:	b508      	push	{r3, lr}
 800ddd2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ddd4:	b928      	cbnz	r0, 800dde2 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800ddd6:	4b03      	ldr	r3, [pc, #12]	; (800dde4 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800ddd8:	4a03      	ldr	r2, [pc, #12]	; (800dde8 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800ddda:	4804      	ldr	r0, [pc, #16]	; (800ddec <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800dddc:	2126      	movs	r1, #38	; 0x26
 800ddde:	f013 f82f 	bl	8020e40 <__assert_func>
 800dde2:	bd08      	pop	{r3, pc}
 800dde4:	080241cc 	.word	0x080241cc
 800dde8:	080242ac 	.word	0x080242ac
 800ddec:	080241f3 	.word	0x080241f3

0800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ddf0:	b510      	push	{r4, lr}
 800ddf2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ddf6:	888a      	ldrh	r2, [r1, #4]
 800ddf8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ddfc:	4422      	add	r2, r4
 800ddfe:	b212      	sxth	r2, r2
 800de00:	4293      	cmp	r3, r2
 800de02:	da15      	bge.n	800de30 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de04:	8882      	ldrh	r2, [r0, #4]
 800de06:	4413      	add	r3, r2
 800de08:	b21b      	sxth	r3, r3
 800de0a:	429c      	cmp	r4, r3
 800de0c:	da10      	bge.n	800de30 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de0e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800de12:	88c9      	ldrh	r1, [r1, #6]
 800de14:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800de18:	4419      	add	r1, r3
 800de1a:	b209      	sxth	r1, r1
 800de1c:	428a      	cmp	r2, r1
 800de1e:	da07      	bge.n	800de30 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de20:	88c0      	ldrh	r0, [r0, #6]
 800de22:	4410      	add	r0, r2
 800de24:	b200      	sxth	r0, r0
 800de26:	4283      	cmp	r3, r0
 800de28:	bfac      	ite	ge
 800de2a:	2000      	movge	r0, #0
 800de2c:	2001      	movlt	r0, #1
 800de2e:	bd10      	pop	{r4, pc}
 800de30:	2000      	movs	r0, #0
 800de32:	e7fc      	b.n	800de2e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800de34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800de34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de38:	4604      	mov	r4, r0
 800de3a:	b08b      	sub	sp, #44	; 0x2c
 800de3c:	6808      	ldr	r0, [r1, #0]
 800de3e:	6849      	ldr	r1, [r1, #4]
 800de40:	ab04      	add	r3, sp, #16
 800de42:	c303      	stmia	r3!, {r0, r1}
 800de44:	4b37      	ldr	r3, [pc, #220]	; (800df24 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 800de46:	781b      	ldrb	r3, [r3, #0]
 800de48:	2b01      	cmp	r3, #1
 800de4a:	6823      	ldr	r3, [r4, #0]
 800de4c:	4621      	mov	r1, r4
 800de4e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800de50:	a806      	add	r0, sp, #24
 800de52:	bf1f      	itttt	ne
 800de54:	f10d 090e 	addne.w	r9, sp, #14
 800de58:	ae05      	addne	r6, sp, #20
 800de5a:	f10d 0516 	addne.w	r5, sp, #22
 800de5e:	f10d 0812 	addne.w	r8, sp, #18
 800de62:	bf01      	itttt	eq
 800de64:	f10d 0916 	addeq.w	r9, sp, #22
 800de68:	f10d 060e 	addeq.w	r6, sp, #14
 800de6c:	ad05      	addeq	r5, sp, #20
 800de6e:	f10d 0810 	addeq.w	r8, sp, #16
 800de72:	4798      	blx	r3
 800de74:	f04f 0a00 	mov.w	sl, #0
 800de78:	f647 7bff 	movw	fp, #32767	; 0x7fff
 800de7c:	f9b5 3000 	ldrsh.w	r3, [r5]
 800de80:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800de84:	2b00      	cmp	r3, #0
 800de86:	d042      	beq.n	800df0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 800de88:	4293      	cmp	r3, r2
 800de8a:	bfa8      	it	ge
 800de8c:	4613      	movge	r3, r2
 800de8e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800de92:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800de96:	2f00      	cmp	r7, #0
 800de98:	dd21      	ble.n	800dede <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 800de9a:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800de9e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 800dea2:	f9b6 2000 	ldrsh.w	r2, [r6]
 800dea6:	f9b9 3000 	ldrsh.w	r3, [r9]
 800deaa:	f8ad 0020 	strh.w	r0, [sp, #32]
 800deae:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800deb2:	a808      	add	r0, sp, #32
 800deb4:	a906      	add	r1, sp, #24
 800deb6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800deba:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800debe:	f7ff ff97 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dec2:	9001      	str	r0, [sp, #4]
 800dec4:	b1d0      	cbz	r0, 800defc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800dec6:	6822      	ldr	r2, [r4, #0]
 800dec8:	a908      	add	r1, sp, #32
 800deca:	6f12      	ldr	r2, [r2, #112]	; 0x70
 800decc:	4620      	mov	r0, r4
 800dece:	4790      	blx	r2
 800ded0:	b9a0      	cbnz	r0, 800defc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800ded2:	9b01      	ldr	r3, [sp, #4]
 800ded4:	107f      	asrs	r7, r7, #1
 800ded6:	f8ad 700e 	strh.w	r7, [sp, #14]
 800deda:	469a      	mov	sl, r3
 800dedc:	e7d9      	b.n	800de92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800dede:	d10d      	bne.n	800defc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800dee0:	2301      	movs	r3, #1
 800dee2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800dee6:	f8b8 2000 	ldrh.w	r2, [r8]
 800deea:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 800deee:	440a      	add	r2, r1
 800def0:	f8a8 2000 	strh.w	r2, [r8]
 800def4:	882b      	ldrh	r3, [r5, #0]
 800def6:	1a5b      	subs	r3, r3, r1
 800def8:	802b      	strh	r3, [r5, #0]
 800defa:	e7bf      	b.n	800de7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800defc:	f1ba 0f00 	cmp.w	sl, #0
 800df00:	d0f1      	beq.n	800dee6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800df02:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 800df06:	455b      	cmp	r3, fp
 800df08:	bf08      	it	eq
 800df0a:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800df0c:	e7eb      	b.n	800dee6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800df0e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800df12:	429a      	cmp	r2, r3
 800df14:	bf04      	itt	eq
 800df16:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800df1a:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800df1c:	b00b      	add	sp, #44	; 0x2c
 800df1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df22:	bf00      	nop
 800df24:	2000eb08 	.word	0x2000eb08

0800df28 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800df28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df2a:	6803      	ldr	r3, [r0, #0]
 800df2c:	b085      	sub	sp, #20
 800df2e:	4604      	mov	r4, r0
 800df30:	4601      	mov	r1, r0
 800df32:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800df34:	4668      	mov	r0, sp
 800df36:	4798      	blx	r3
 800df38:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 800df3c:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 800df40:	f8ad 600c 	strh.w	r6, [sp, #12]
 800df44:	2300      	movs	r3, #0
 800df46:	a902      	add	r1, sp, #8
 800df48:	4668      	mov	r0, sp
 800df4a:	9302      	str	r3, [sp, #8]
 800df4c:	f8ad 500e 	strh.w	r5, [sp, #14]
 800df50:	f7ff ff4e 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800df54:	b340      	cbz	r0, 800dfa8 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 800df56:	f9bd 2000 	ldrsh.w	r2, [sp]
 800df5a:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 800df5e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800df62:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 800df66:	443a      	add	r2, r7
 800df68:	b292      	uxth	r2, r2
 800df6a:	b217      	sxth	r7, r2
 800df6c:	42be      	cmp	r6, r7
 800df6e:	bfd8      	it	le
 800df70:	b2b2      	uxthle	r2, r6
 800df72:	1a12      	subs	r2, r2, r0
 800df74:	f8ad 2004 	strh.w	r2, [sp, #4]
 800df78:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800df7c:	f8ad 0000 	strh.w	r0, [sp]
 800df80:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 800df84:	4413      	add	r3, r2
 800df86:	b29b      	uxth	r3, r3
 800df88:	b21a      	sxth	r2, r3
 800df8a:	4295      	cmp	r5, r2
 800df8c:	bfd8      	it	le
 800df8e:	b2ab      	uxthle	r3, r5
 800df90:	1a5b      	subs	r3, r3, r1
 800df92:	f8ad 3006 	strh.w	r3, [sp, #6]
 800df96:	f8ad 1002 	strh.w	r1, [sp, #2]
 800df9a:	6823      	ldr	r3, [r4, #0]
 800df9c:	4669      	mov	r1, sp
 800df9e:	691b      	ldr	r3, [r3, #16]
 800dfa0:	4620      	mov	r0, r4
 800dfa2:	4798      	blx	r3
 800dfa4:	b005      	add	sp, #20
 800dfa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfa8:	e9cd 0000 	strd	r0, r0, [sp]
 800dfac:	e7f5      	b.n	800df9a <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

0800dfb0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800dfb0:	2200      	movs	r2, #0
 800dfb2:	8082      	strh	r2, [r0, #4]
 800dfb4:	80c2      	strh	r2, [r0, #6]
 800dfb6:	8102      	strh	r2, [r0, #8]
 800dfb8:	8142      	strh	r2, [r0, #10]
 800dfba:	8182      	strh	r2, [r0, #12]
 800dfbc:	81c2      	strh	r2, [r0, #14]
 800dfbe:	8202      	strh	r2, [r0, #16]
 800dfc0:	8242      	strh	r2, [r0, #18]
 800dfc2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800dfc6:	61c2      	str	r2, [r0, #28]
 800dfc8:	8402      	strh	r2, [r0, #32]
 800dfca:	8442      	strh	r2, [r0, #34]	; 0x22
 800dfcc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800dfd0:	2101      	movs	r1, #1
 800dfd2:	6282      	str	r2, [r0, #40]	; 0x28
 800dfd4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dfd8:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800dfdc:	8582      	strh	r2, [r0, #44]	; 0x2c
 800dfde:	4903      	ldr	r1, [pc, #12]	; (800dfec <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 800dfe0:	6001      	str	r1, [r0, #0]
 800dfe2:	22ff      	movs	r2, #255	; 0xff
 800dfe4:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800dfe8:	4770      	bx	lr
 800dfea:	bf00      	nop
 800dfec:	08024238 	.word	0x08024238

0800dff0 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800dff0:	f101 0368 	add.w	r3, r1, #104	; 0x68
 800dff4:	4602      	mov	r2, r0
 800dff6:	cb03      	ldmia	r3!, {r0, r1}
 800dff8:	6010      	str	r0, [r2, #0]
 800dffa:	6051      	str	r1, [r2, #4]
 800dffc:	4610      	mov	r0, r2
 800dffe:	4770      	bx	lr

0800e000 <_ZN8touchgfx4LineD1Ev>:
 800e000:	4770      	bx	lr

0800e002 <_ZN8touchgfx4LineD0Ev>:
 800e002:	b510      	push	{r4, lr}
 800e004:	2174      	movs	r1, #116	; 0x74
 800e006:	4604      	mov	r4, r0
 800e008:	f012 feeb 	bl	8020de2 <_ZdlPvj>
 800e00c:	4620      	mov	r0, r4
 800e00e:	bd10      	pop	{r4, pc}

0800e010 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 800e010:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800e014:	bf2c      	ite	cs
 800e016:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 800e01a:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 800e01e:	2300      	movs	r3, #0
 800e020:	1899      	adds	r1, r3, r2
 800e022:	4288      	cmp	r0, r1
 800e024:	bf24      	itt	cs
 800e026:	1853      	addcs	r3, r2, r1
 800e028:	1a40      	subcs	r0, r0, r1
 800e02a:	0892      	lsrs	r2, r2, #2
 800e02c:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800e030:	d1f6      	bne.n	800e020 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 800e032:	4618      	mov	r0, r3
 800e034:	4770      	bx	lr

0800e036 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800e036:	b510      	push	{r4, lr}
 800e038:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800e03c:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800e040:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800e044:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800e048:	13a4      	asrs	r4, r4, #14
 800e04a:	139b      	asrs	r3, r3, #14
 800e04c:	429c      	cmp	r4, r3
 800e04e:	bfb8      	it	lt
 800e050:	461c      	movlt	r4, r3
 800e052:	2c01      	cmp	r4, #1
 800e054:	dd07      	ble.n	800e066 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800e056:	fb91 f1f4 	sdiv	r1, r1, r4
 800e05a:	fb90 f0f4 	sdiv	r0, r0, r4
 800e05e:	f7ff ffea 	bl	800e036 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800e062:	4360      	muls	r0, r4
 800e064:	bd10      	pop	{r4, pc}
 800e066:	4340      	muls	r0, r0
 800e068:	fb01 0001 	mla	r0, r1, r1, r0
 800e06c:	f7ff ffd0 	bl	800e010 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800e070:	e7f8      	b.n	800e064 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

0800e074 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 800e074:	2800      	cmp	r0, #0
 800e076:	b508      	push	{r3, lr}
 800e078:	da05      	bge.n	800e086 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 800e07a:	4240      	negs	r0, r0
 800e07c:	f7ff fffa 	bl	800e074 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800e080:	4240      	negs	r0, r0
 800e082:	b240      	sxtb	r0, r0
 800e084:	bd08      	pop	{r3, pc}
 800e086:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800e08a:	dc11      	bgt.n	800e0b0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 800e08c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 800e090:	dd09      	ble.n	800e0a6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 800e092:	4340      	muls	r0, r0
 800e094:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 800e098:	f7ff ffba 	bl	800e010 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800e09c:	f7ff ffea 	bl	800e074 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800e0a0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800e0a4:	e7ed      	b.n	800e082 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 800e0a6:	3003      	adds	r0, #3
 800e0a8:	10c0      	asrs	r0, r0, #3
 800e0aa:	4b02      	ldr	r3, [pc, #8]	; (800e0b4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 800e0ac:	5618      	ldrsb	r0, [r3, r0]
 800e0ae:	e7e9      	b.n	800e084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800e0b0:	2000      	movs	r0, #0
 800e0b2:	e7e7      	b.n	800e084 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800e0b4:	080242fa 	.word	0x080242fa

0800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 800e0b8:	1e03      	subs	r3, r0, #0
 800e0ba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0bc:	460c      	mov	r4, r1
 800e0be:	4615      	mov	r5, r2
 800e0c0:	db01      	blt.n	800e0c6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0xe>
 800e0c2:	2900      	cmp	r1, #0
 800e0c4:	da06      	bge.n	800e0d4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1c>
 800e0c6:	4b10      	ldr	r3, [pc, #64]	; (800e108 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x50>)
 800e0c8:	4a10      	ldr	r2, [pc, #64]	; (800e10c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x54>)
 800e0ca:	4811      	ldr	r0, [pc, #68]	; (800e110 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x58>)
 800e0cc:	f44f 714b 	mov.w	r1, #812	; 0x32c
 800e0d0:	f012 feb6 	bl	8020e40 <__assert_func>
 800e0d4:	4299      	cmp	r1, r3
 800e0d6:	dd07      	ble.n	800e0e8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x30>
 800e0d8:	4619      	mov	r1, r3
 800e0da:	4620      	mov	r0, r4
 800e0dc:	f7ff ffec 	bl	800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800e0e0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800e0e4:	b003      	add	sp, #12
 800e0e6:	bd30      	pop	{r4, r5, pc}
 800e0e8:	f7ff ffa5 	bl	800e036 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800e0ec:	6028      	str	r0, [r5, #0]
 800e0ee:	2800      	cmp	r0, #0
 800e0f0:	d0f8      	beq.n	800e0e4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2c>
 800e0f2:	4602      	mov	r2, r0
 800e0f4:	ab01      	add	r3, sp, #4
 800e0f6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800e0fa:	4620      	mov	r0, r4
 800e0fc:	f003 fc02 	bl	8011904 <_ZN8touchgfx6muldivElllRl>
 800e100:	f7ff ffb8 	bl	800e074 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800e104:	e7ee      	b.n	800e0e4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2c>
 800e106:	bf00      	nop
 800e108:	08024355 	.word	0x08024355
 800e10c:	08024418 	.word	0x08024418
 800e110:	08024366 	.word	0x08024366

0800e114 <_ZN8touchgfx4LineC1Ev>:
 800e114:	b510      	push	{r4, lr}
 800e116:	4604      	mov	r4, r0
 800e118:	f7ff ff4a 	bl	800dfb0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800e11c:	4b0c      	ldr	r3, [pc, #48]	; (800e150 <_ZN8touchgfx4LineC1Ev+0x3c>)
 800e11e:	6023      	str	r3, [r4, #0]
 800e120:	2220      	movs	r2, #32
 800e122:	2300      	movs	r3, #0
 800e124:	6422      	str	r2, [r4, #64]	; 0x40
 800e126:	2212      	movs	r2, #18
 800e128:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800e12c:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800e130:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800e134:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800e138:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 800e13c:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
 800e140:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
 800e144:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 800e148:	6722      	str	r2, [r4, #112]	; 0x70
 800e14a:	60a3      	str	r3, [r4, #8]
 800e14c:	4620      	mov	r0, r4
 800e14e:	bd10      	pop	{r4, pc}
 800e150:	080243a4 	.word	0x080243a4

0800e154 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 800e154:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e158:	6b86      	ldr	r6, [r0, #56]	; 0x38
 800e15a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800e15c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800e15e:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800e160:	1af6      	subs	r6, r6, r3
 800e162:	4604      	mov	r4, r0
 800e164:	eba5 0502 	sub.w	r5, r5, r2
 800e168:	f040 808c 	bne.w	800e284 <_ZN8touchgfx4Line17updateCachedShapeEv+0x130>
 800e16c:	b955      	cbnz	r5, 800e184 <_ZN8touchgfx4Line17updateCachedShapeEv+0x30>
 800e16e:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 800e172:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800e176:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 800e17a:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 800e17e:	b003      	add	sp, #12
 800e180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e184:	ea85 77e5 	eor.w	r7, r5, r5, asr #31
 800e188:	eba7 77e5 	sub.w	r7, r7, r5, asr #31
 800e18c:	463a      	mov	r2, r7
 800e18e:	4629      	mov	r1, r5
 800e190:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800e192:	f003 fbd6 	bl	8011942 <_ZN8touchgfx6muldivElll>
 800e196:	f04f 0802 	mov.w	r8, #2
 800e19a:	4631      	mov	r1, r6
 800e19c:	fb90 f5f8 	sdiv	r5, r0, r8
 800e1a0:	463a      	mov	r2, r7
 800e1a2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800e1a4:	f003 fbcd 	bl	8011942 <_ZN8touchgfx6muldivElll>
 800e1a8:	f894 a044 	ldrb.w	sl, [r4, #68]	; 0x44
 800e1ac:	fb90 f0f8 	sdiv	r0, r0, r8
 800e1b0:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 800e1b4:	6ba7      	ldr	r7, [r4, #56]	; 0x38
 800e1b6:	6be6      	ldr	r6, [r4, #60]	; 0x3c
 800e1b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e1ba:	eba8 0305 	sub.w	r3, r8, r5
 800e1be:	f1ba 0f00 	cmp.w	sl, #0
 800e1c2:	f040 80b6 	bne.w	800e332 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1de>
 800e1c6:	64a3      	str	r3, [r4, #72]	; 0x48
 800e1c8:	1843      	adds	r3, r0, r1
 800e1ca:	65a3      	str	r3, [r4, #88]	; 0x58
 800e1cc:	1b7b      	subs	r3, r7, r5
 800e1ce:	64e3      	str	r3, [r4, #76]	; 0x4c
 800e1d0:	1983      	adds	r3, r0, r6
 800e1d2:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e1d4:	19eb      	adds	r3, r5, r7
 800e1d6:	6523      	str	r3, [r4, #80]	; 0x50
 800e1d8:	1a33      	subs	r3, r6, r0
 800e1da:	6623      	str	r3, [r4, #96]	; 0x60
 800e1dc:	eb05 0308 	add.w	r3, r5, r8
 800e1e0:	6563      	str	r3, [r4, #84]	; 0x54
 800e1e2:	1a0b      	subs	r3, r1, r0
 800e1e4:	f8d4 e048 	ldr.w	lr, [r4, #72]	; 0x48
 800e1e8:	6663      	str	r3, [r4, #100]	; 0x64
 800e1ea:	f8d4 c058 	ldr.w	ip, [r4, #88]	; 0x58
 800e1ee:	f8cd c000 	str.w	ip, [sp]
 800e1f2:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800e1f6:	f104 094c 	add.w	r9, r4, #76	; 0x4c
 800e1fa:	9301      	str	r3, [sp, #4]
 800e1fc:	4672      	mov	r2, lr
 800e1fe:	f859 bb04 	ldr.w	fp, [r9], #4
 800e202:	9b00      	ldr	r3, [sp, #0]
 800e204:	45de      	cmp	lr, fp
 800e206:	bfa8      	it	ge
 800e208:	46de      	movge	lr, fp
 800e20a:	455a      	cmp	r2, fp
 800e20c:	bfb8      	it	lt
 800e20e:	465a      	movlt	r2, fp
 800e210:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 800e214:	45dc      	cmp	ip, fp
 800e216:	bfa8      	it	ge
 800e218:	46dc      	movge	ip, fp
 800e21a:	455b      	cmp	r3, fp
 800e21c:	bfb8      	it	lt
 800e21e:	465b      	movlt	r3, fp
 800e220:	9300      	str	r3, [sp, #0]
 800e222:	9b01      	ldr	r3, [sp, #4]
 800e224:	454b      	cmp	r3, r9
 800e226:	d1ea      	bne.n	800e1fe <_ZN8touchgfx4Line17updateCachedShapeEv+0xaa>
 800e228:	f04f 0920 	mov.w	r9, #32
 800e22c:	9b00      	ldr	r3, [sp, #0]
 800e22e:	fb92 f2f9 	sdiv	r2, r2, r9
 800e232:	fb93 f3f9 	sdiv	r3, r3, r9
 800e236:	3201      	adds	r2, #1
 800e238:	3301      	adds	r3, #1
 800e23a:	fb9e fef9 	sdiv	lr, lr, r9
 800e23e:	fb9c fcf9 	sdiv	ip, ip, r9
 800e242:	f8a4 e068 	strh.w	lr, [r4, #104]	; 0x68
 800e246:	f8a4 c06a 	strh.w	ip, [r4, #106]	; 0x6a
 800e24a:	eba2 0e0e 	sub.w	lr, r2, lr
 800e24e:	eba3 0c0c 	sub.w	ip, r3, ip
 800e252:	f1ba 0f01 	cmp.w	sl, #1
 800e256:	f8a4 e06c 	strh.w	lr, [r4, #108]	; 0x6c
 800e25a:	f8a4 c06e 	strh.w	ip, [r4, #110]	; 0x6e
 800e25e:	d18e      	bne.n	800e17e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2a>
 800e260:	eba8 0305 	sub.w	r3, r8, r5
 800e264:	64a3      	str	r3, [r4, #72]	; 0x48
 800e266:	1843      	adds	r3, r0, r1
 800e268:	65a3      	str	r3, [r4, #88]	; 0x58
 800e26a:	1b7b      	subs	r3, r7, r5
 800e26c:	64e3      	str	r3, [r4, #76]	; 0x4c
 800e26e:	442f      	add	r7, r5
 800e270:	1983      	adds	r3, r0, r6
 800e272:	4445      	add	r5, r8
 800e274:	1a36      	subs	r6, r6, r0
 800e276:	1a08      	subs	r0, r1, r0
 800e278:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e27a:	6527      	str	r7, [r4, #80]	; 0x50
 800e27c:	6626      	str	r6, [r4, #96]	; 0x60
 800e27e:	6565      	str	r5, [r4, #84]	; 0x54
 800e280:	6660      	str	r0, [r4, #100]	; 0x64
 800e282:	e77c      	b.n	800e17e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2a>
 800e284:	ea86 77e6 	eor.w	r7, r6, r6, asr #31
 800e288:	eba7 77e6 	sub.w	r7, r7, r6, asr #31
 800e28c:	2d00      	cmp	r5, #0
 800e28e:	f43f af7d 	beq.w	800e18c <_ZN8touchgfx4Line17updateCachedShapeEv+0x38>
 800e292:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 800e296:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 800e29a:	fb93 f2f7 	sdiv	r2, r3, r7
 800e29e:	fb07 3312 	mls	r3, r7, r2, r3
 800e2a2:	b34b      	cbz	r3, 800e2f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1a4>
 800e2a4:	fb97 f2f3 	sdiv	r2, r7, r3
 800e2a8:	fb03 7712 	mls	r7, r3, r2, r7
 800e2ac:	2f00      	cmp	r7, #0
 800e2ae:	d1f4      	bne.n	800e29a <_ZN8touchgfx4Line17updateCachedShapeEv+0x146>
 800e2b0:	2b01      	cmp	r3, #1
 800e2b2:	bf18      	it	ne
 800e2b4:	fb96 f6f3 	sdivne	r6, r6, r3
 800e2b8:	ea86 71e6 	eor.w	r1, r6, r6, asr #31
 800e2bc:	eba1 71e6 	sub.w	r1, r1, r6, asr #31
 800e2c0:	f24b 5204 	movw	r2, #46340	; 0xb504
 800e2c4:	bf18      	it	ne
 800e2c6:	fb95 f5f3 	sdivne	r5, r5, r3
 800e2ca:	4291      	cmp	r1, r2
 800e2cc:	dd16      	ble.n	800e2fc <_ZN8touchgfx4Line17updateCachedShapeEv+0x1a8>
 800e2ce:	2d00      	cmp	r5, #0
 800e2d0:	da47      	bge.n	800e362 <_ZN8touchgfx4Line17updateCachedShapeEv+0x20e>
 800e2d2:	4b26      	ldr	r3, [pc, #152]	; (800e36c <_ZN8touchgfx4Line17updateCachedShapeEv+0x218>)
 800e2d4:	429d      	cmp	r5, r3
 800e2d6:	da25      	bge.n	800e324 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d0>
 800e2d8:	426a      	negs	r2, r5
 800e2da:	f24b 5304 	movw	r3, #46340	; 0xb504
 800e2de:	fb91 f1f3 	sdiv	r1, r1, r3
 800e2e2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e2e6:	4299      	cmp	r1, r3
 800e2e8:	bfcc      	ite	gt
 800e2ea:	1c4b      	addgt	r3, r1, #1
 800e2ec:	3301      	addle	r3, #1
 800e2ee:	fb96 f6f3 	sdiv	r6, r6, r3
 800e2f2:	fb95 f5f3 	sdiv	r5, r5, r3
 800e2f6:	e00f      	b.n	800e318 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1c4>
 800e2f8:	463b      	mov	r3, r7
 800e2fa:	e7d9      	b.n	800e2b0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x15c>
 800e2fc:	2d00      	cmp	r5, #0
 800e2fe:	fb92 f2f1 	sdiv	r2, r2, r1
 800e302:	da11      	bge.n	800e328 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d4>
 800e304:	4269      	negs	r1, r5
 800e306:	f24b 5304 	movw	r3, #46340	; 0xb504
 800e30a:	fb93 f3f1 	sdiv	r3, r3, r1
 800e30e:	429a      	cmp	r2, r3
 800e310:	bfa8      	it	ge
 800e312:	461a      	movge	r2, r3
 800e314:	4356      	muls	r6, r2
 800e316:	4355      	muls	r5, r2
 800e318:	4629      	mov	r1, r5
 800e31a:	4630      	mov	r0, r6
 800e31c:	f7ff fe8b 	bl	800e036 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800e320:	4607      	mov	r7, r0
 800e322:	e733      	b.n	800e18c <_ZN8touchgfx4Line17updateCachedShapeEv+0x38>
 800e324:	2200      	movs	r2, #0
 800e326:	e7ed      	b.n	800e304 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b0>
 800e328:	4629      	mov	r1, r5
 800e32a:	e7ec      	b.n	800e306 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b2>
 800e32c:	4629      	mov	r1, r5
 800e32e:	2200      	movs	r2, #0
 800e330:	e7e9      	b.n	800e306 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b2>
 800e332:	1a1b      	subs	r3, r3, r0
 800e334:	64a3      	str	r3, [r4, #72]	; 0x48
 800e336:	1843      	adds	r3, r0, r1
 800e338:	1b5b      	subs	r3, r3, r5
 800e33a:	65a3      	str	r3, [r4, #88]	; 0x58
 800e33c:	1b7b      	subs	r3, r7, r5
 800e33e:	4403      	add	r3, r0
 800e340:	64e3      	str	r3, [r4, #76]	; 0x4c
 800e342:	1983      	adds	r3, r0, r6
 800e344:	442b      	add	r3, r5
 800e346:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e348:	19eb      	adds	r3, r5, r7
 800e34a:	4403      	add	r3, r0
 800e34c:	6523      	str	r3, [r4, #80]	; 0x50
 800e34e:	1a33      	subs	r3, r6, r0
 800e350:	442b      	add	r3, r5
 800e352:	6623      	str	r3, [r4, #96]	; 0x60
 800e354:	eb05 0308 	add.w	r3, r5, r8
 800e358:	1a1b      	subs	r3, r3, r0
 800e35a:	6563      	str	r3, [r4, #84]	; 0x54
 800e35c:	1a0b      	subs	r3, r1, r0
 800e35e:	1b5b      	subs	r3, r3, r5
 800e360:	e740      	b.n	800e1e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x90>
 800e362:	4295      	cmp	r5, r2
 800e364:	dde2      	ble.n	800e32c <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d8>
 800e366:	462a      	mov	r2, r5
 800e368:	e7b7      	b.n	800e2da <_ZN8touchgfx4Line17updateCachedShapeEv+0x186>
 800e36a:	bf00      	nop
 800e36c:	ffff4afc 	.word	0xffff4afc

0800e370 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 800e370:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800e372:	428b      	cmp	r3, r1
 800e374:	d102      	bne.n	800e37c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 800e376:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800e378:	4293      	cmp	r3, r2
 800e37a:	d003      	beq.n	800e384 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 800e37c:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
 800e380:	f7ff bee8 	b.w	800e154 <_ZN8touchgfx4Line17updateCachedShapeEv>
 800e384:	4770      	bx	lr

0800e386 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 800e386:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800e388:	428b      	cmp	r3, r1
 800e38a:	d102      	bne.n	800e392 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 800e38c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800e38e:	4293      	cmp	r3, r2
 800e390:	d003      	beq.n	800e39a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 800e392:	e9c0 120e 	strd	r1, r2, [r0, #56]	; 0x38
 800e396:	f7ff bedd 	b.w	800e154 <_ZN8touchgfx4Line17updateCachedShapeEv>
 800e39a:	4770      	bx	lr

0800e39c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 800e39c:	f880 1044 	strb.w	r1, [r0, #68]	; 0x44
 800e3a0:	f7ff bed8 	b.w	800e154 <_ZN8touchgfx4Line17updateCachedShapeEv>

0800e3a4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 800e3a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e3a8:	b0b3      	sub	sp, #204	; 0xcc
 800e3aa:	4604      	mov	r4, r0
 800e3ac:	460a      	mov	r2, r1
 800e3ae:	ad32      	add	r5, sp, #200	; 0xc8
 800e3b0:	4601      	mov	r1, r0
 800e3b2:	a803      	add	r0, sp, #12
 800e3b4:	f011 f93e 	bl	801f634 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800e3b8:	2300      	movs	r3, #0
 800e3ba:	f845 3dc8 	str.w	r3, [r5, #-200]!
 800e3be:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800e3c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e3c2:	6da1      	ldr	r1, [r4, #88]	; 0x58
 800e3c4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e3c6:	1ac0      	subs	r0, r0, r3
 800e3c8:	eba1 0102 	sub.w	r1, r1, r2
 800e3cc:	d43c      	bmi.n	800e448 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xa4>
 800e3ce:	2900      	cmp	r1, #0
 800e3d0:	462a      	mov	r2, r5
 800e3d2:	db33      	blt.n	800e43c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x98>
 800e3d4:	f7ff fe70 	bl	800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800e3d8:	f100 075a 	add.w	r7, r0, #90	; 0x5a
 800e3dc:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800e3de:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800e3e0:	a803      	add	r0, sp, #12
 800e3e2:	f011 faf2 	bl	801f9ca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800e3e6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800e3e8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800e3ea:	a803      	add	r0, sp, #12
 800e3ec:	f011 fa7c 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e3f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3f4:	2b01      	cmp	r3, #1
 800e3f6:	d137      	bne.n	800e468 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xc4>
 800e3f8:	6f26      	ldr	r6, [r4, #112]	; 0x70
 800e3fa:	2eb3      	cmp	r6, #179	; 0xb3
 800e3fc:	dc34      	bgt.n	800e468 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xc4>
 800e3fe:	eba7 0906 	sub.w	r9, r7, r6
 800e402:	4648      	mov	r0, r9
 800e404:	f7ff f904 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800e408:	a901      	add	r1, sp, #4
 800e40a:	9001      	str	r0, [sp, #4]
 800e40c:	4628      	mov	r0, r5
 800e40e:	f7ff f8f3 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e412:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e414:	eb00 0801 	add.w	r8, r0, r1
 800e418:	f1c9 005a 	rsb	r0, r9, #90	; 0x5a
 800e41c:	f7ff f8f8 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800e420:	a902      	add	r1, sp, #8
 800e422:	9002      	str	r0, [sp, #8]
 800e424:	4628      	mov	r0, r5
 800e426:	f7ff f8e7 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e42a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e42c:	4641      	mov	r1, r8
 800e42e:	1a12      	subs	r2, r2, r0
 800e430:	a803      	add	r0, sp, #12
 800e432:	f011 fa59 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e436:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800e438:	441e      	add	r6, r3
 800e43a:	e7de      	b.n	800e3fa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x56>
 800e43c:	4249      	negs	r1, r1
 800e43e:	f7ff fe3b 	bl	800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800e442:	f1c0 075a 	rsb	r7, r0, #90	; 0x5a
 800e446:	e7c9      	b.n	800e3dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800e448:	2900      	cmp	r1, #0
 800e44a:	f1c0 0000 	rsb	r0, r0, #0
 800e44e:	462a      	mov	r2, r5
 800e450:	db04      	blt.n	800e45c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb8>
 800e452:	f7ff fe31 	bl	800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800e456:	f5c0 7787 	rsb	r7, r0, #270	; 0x10e
 800e45a:	e7bf      	b.n	800e3dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800e45c:	4249      	negs	r1, r1
 800e45e:	f7ff fe2b 	bl	800e0b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800e462:	f500 7787 	add.w	r7, r0, #270	; 0x10e
 800e466:	e7b9      	b.n	800e3dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800e468:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800e46a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800e46c:	a803      	add	r0, sp, #12
 800e46e:	f011 fa3b 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e472:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800e474:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800e476:	a803      	add	r0, sp, #12
 800e478:	f011 fa36 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e47c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e480:	2b01      	cmp	r3, #1
 800e482:	d123      	bne.n	800e4cc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x128>
 800e484:	6f26      	ldr	r6, [r4, #112]	; 0x70
 800e486:	f1c6 06b4 	rsb	r6, r6, #180	; 0xb4
 800e48a:	2e00      	cmp	r6, #0
 800e48c:	dd1e      	ble.n	800e4cc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x128>
 800e48e:	eb06 0907 	add.w	r9, r6, r7
 800e492:	4648      	mov	r0, r9
 800e494:	f7ff f8bc 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800e498:	a901      	add	r1, sp, #4
 800e49a:	9001      	str	r0, [sp, #4]
 800e49c:	4628      	mov	r0, r5
 800e49e:	f7ff f8ab 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e4a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e4a4:	eb00 0801 	add.w	r8, r0, r1
 800e4a8:	f1c9 005a 	rsb	r0, r9, #90	; 0x5a
 800e4ac:	f7ff f8b0 	bl	800d610 <_ZN8touchgfx7CWRUtil4sineEi>
 800e4b0:	a902      	add	r1, sp, #8
 800e4b2:	9002      	str	r0, [sp, #8]
 800e4b4:	4628      	mov	r0, r5
 800e4b6:	f7ff f89f 	bl	800d5f8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e4ba:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e4bc:	4641      	mov	r1, r8
 800e4be:	1a12      	subs	r2, r2, r0
 800e4c0:	a803      	add	r0, sp, #12
 800e4c2:	f011 fa11 	bl	801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e4c6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800e4c8:	1af6      	subs	r6, r6, r3
 800e4ca:	e7de      	b.n	800e48a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xe6>
 800e4cc:	21ff      	movs	r1, #255	; 0xff
 800e4ce:	a803      	add	r0, sp, #12
 800e4d0:	f011 fb7f 	bl	801fbd2 <_ZN8touchgfx6Canvas6renderEh>
 800e4d4:	4604      	mov	r4, r0
 800e4d6:	a803      	add	r0, sp, #12
 800e4d8:	f011 fbba 	bl	801fc50 <_ZN8touchgfx6CanvasD1Ev>
 800e4dc:	4620      	mov	r0, r4
 800e4de:	b033      	add	sp, #204	; 0xcc
 800e4e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800e4e4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800e4e4:	2200      	movs	r2, #0
 800e4e6:	8002      	strh	r2, [r0, #0]
 800e4e8:	8042      	strh	r2, [r0, #2]
 800e4ea:	8082      	strh	r2, [r0, #4]
 800e4ec:	80c2      	strh	r2, [r0, #6]
 800e4ee:	4770      	bx	lr

0800e4f0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800e4f0:	b570      	push	{r4, r5, r6, lr}
 800e4f2:	6803      	ldr	r3, [r0, #0]
 800e4f4:	4604      	mov	r4, r0
 800e4f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4f8:	4615      	mov	r5, r2
 800e4fa:	4798      	blx	r3
 800e4fc:	6823      	ldr	r3, [r4, #0]
 800e4fe:	4629      	mov	r1, r5
 800e500:	4620      	mov	r0, r4
 800e502:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800e504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e508:	4718      	bx	r3

0800e50a <_ZN8touchgfx8TextAreaD1Ev>:
 800e50a:	4770      	bx	lr

0800e50c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e50c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e50e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e510:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e514:	4299      	cmp	r1, r3
 800e516:	d029      	beq.n	800e56c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800e518:	4b15      	ldr	r3, [pc, #84]	; (800e570 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e51a:	681b      	ldr	r3, [r3, #0]
 800e51c:	b92b      	cbnz	r3, 800e52a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800e51e:	4b15      	ldr	r3, [pc, #84]	; (800e574 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e520:	4a15      	ldr	r2, [pc, #84]	; (800e578 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e522:	21ae      	movs	r1, #174	; 0xae
 800e524:	4815      	ldr	r0, [pc, #84]	; (800e57c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e526:	f012 fc8b 	bl	8020e40 <__assert_func>
 800e52a:	4a15      	ldr	r2, [pc, #84]	; (800e580 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800e52c:	8812      	ldrh	r2, [r2, #0]
 800e52e:	428a      	cmp	r2, r1
 800e530:	d803      	bhi.n	800e53a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800e532:	4b14      	ldr	r3, [pc, #80]	; (800e584 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800e534:	4a10      	ldr	r2, [pc, #64]	; (800e578 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e536:	21af      	movs	r1, #175	; 0xaf
 800e538:	e7f4      	b.n	800e524 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800e53a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e53e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e542:	4b11      	ldr	r3, [pc, #68]	; (800e588 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800e544:	7854      	ldrb	r4, [r2, #1]
 800e546:	681b      	ldr	r3, [r3, #0]
 800e548:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800e54c:	682b      	ldr	r3, [r5, #0]
 800e54e:	69de      	ldr	r6, [r3, #28]
 800e550:	4b0e      	ldr	r3, [pc, #56]	; (800e58c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800e552:	6818      	ldr	r0, [r3, #0]
 800e554:	f7f7 f8f4 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800e558:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800e55c:	2300      	movs	r3, #0
 800e55e:	4602      	mov	r2, r0
 800e560:	9300      	str	r3, [sp, #0]
 800e562:	4621      	mov	r1, r4
 800e564:	4628      	mov	r0, r5
 800e566:	47b0      	blx	r6
 800e568:	b002      	add	sp, #8
 800e56a:	bd70      	pop	{r4, r5, r6, pc}
 800e56c:	2000      	movs	r0, #0
 800e56e:	e7fb      	b.n	800e568 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800e570:	2000eb80 	.word	0x2000eb80
 800e574:	08022e11 	.word	0x08022e11
 800e578:	080244fc 	.word	0x080244fc
 800e57c:	08022e9f 	.word	0x08022e9f
 800e580:	2000eb84 	.word	0x2000eb84
 800e584:	08022ec8 	.word	0x08022ec8
 800e588:	2000eb88 	.word	0x2000eb88
 800e58c:	2000eb8c 	.word	0x2000eb8c

0800e590 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800e590:	b570      	push	{r4, r5, r6, lr}
 800e592:	6803      	ldr	r3, [r0, #0]
 800e594:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e596:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800e598:	4b11      	ldr	r3, [pc, #68]	; (800e5e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800e59a:	681b      	ldr	r3, [r3, #0]
 800e59c:	4604      	mov	r4, r0
 800e59e:	b28d      	uxth	r5, r1
 800e5a0:	b92b      	cbnz	r3, 800e5ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800e5a2:	4b10      	ldr	r3, [pc, #64]	; (800e5e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800e5a4:	4a10      	ldr	r2, [pc, #64]	; (800e5e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800e5a6:	21ae      	movs	r1, #174	; 0xae
 800e5a8:	4810      	ldr	r0, [pc, #64]	; (800e5ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800e5aa:	f012 fc49 	bl	8020e40 <__assert_func>
 800e5ae:	4910      	ldr	r1, [pc, #64]	; (800e5f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800e5b0:	8809      	ldrh	r1, [r1, #0]
 800e5b2:	4291      	cmp	r1, r2
 800e5b4:	d803      	bhi.n	800e5be <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800e5b6:	4b0f      	ldr	r3, [pc, #60]	; (800e5f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800e5b8:	4a0b      	ldr	r2, [pc, #44]	; (800e5e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800e5ba:	21af      	movs	r1, #175	; 0xaf
 800e5bc:	e7f4      	b.n	800e5a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800e5be:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e5c2:	4b0d      	ldr	r3, [pc, #52]	; (800e5f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800e5c4:	681b      	ldr	r3, [r3, #0]
 800e5c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800e5ca:	6803      	ldr	r3, [r0, #0]
 800e5cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e5ce:	4798      	blx	r3
 800e5d0:	1a29      	subs	r1, r5, r0
 800e5d2:	4633      	mov	r3, r6
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	b209      	sxth	r1, r1
 800e5d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5dc:	4718      	bx	r3
 800e5de:	bf00      	nop
 800e5e0:	2000eb80 	.word	0x2000eb80
 800e5e4:	08022e11 	.word	0x08022e11
 800e5e8:	080244fc 	.word	0x080244fc
 800e5ec:	08022e9f 	.word	0x08022e9f
 800e5f0:	2000eb84 	.word	0x2000eb84
 800e5f4:	08022ec8 	.word	0x08022ec8
 800e5f8:	2000eb88 	.word	0x2000eb88

0800e5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e5fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e600:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e602:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e606:	4293      	cmp	r3, r2
 800e608:	b08c      	sub	sp, #48	; 0x30
 800e60a:	4604      	mov	r4, r0
 800e60c:	4688      	mov	r8, r1
 800e60e:	d05f      	beq.n	800e6d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800e610:	4e31      	ldr	r6, [pc, #196]	; (800e6d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800e612:	6832      	ldr	r2, [r6, #0]
 800e614:	b92a      	cbnz	r2, 800e622 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800e616:	4b31      	ldr	r3, [pc, #196]	; (800e6dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800e618:	4a31      	ldr	r2, [pc, #196]	; (800e6e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800e61a:	21ae      	movs	r1, #174	; 0xae
 800e61c:	4831      	ldr	r0, [pc, #196]	; (800e6e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800e61e:	f012 fc0f 	bl	8020e40 <__assert_func>
 800e622:	4d31      	ldr	r5, [pc, #196]	; (800e6e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800e624:	8829      	ldrh	r1, [r5, #0]
 800e626:	4299      	cmp	r1, r3
 800e628:	d803      	bhi.n	800e632 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800e62a:	4b30      	ldr	r3, [pc, #192]	; (800e6ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800e62c:	4a2c      	ldr	r2, [pc, #176]	; (800e6e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800e62e:	21af      	movs	r1, #175	; 0xaf
 800e630:	e7f4      	b.n	800e61c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800e632:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800e636:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e63a:	4b2d      	ldr	r3, [pc, #180]	; (800e6f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800e63c:	681b      	ldr	r3, [r3, #0]
 800e63e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800e642:	2a00      	cmp	r2, #0
 800e644:	d044      	beq.n	800e6d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800e646:	784b      	ldrb	r3, [r1, #1]
 800e648:	9207      	str	r2, [sp, #28]
 800e64a:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800e64e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e652:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e656:	4b27      	ldr	r3, [pc, #156]	; (800e6f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800e658:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800e65c:	681b      	ldr	r3, [r3, #0]
 800e65e:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800e662:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e666:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800e66a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800e66e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800e672:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e674:	f88d a020 	strb.w	sl, [sp, #32]
 800e678:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800e67c:	9009      	str	r0, [sp, #36]	; 0x24
 800e67e:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800e682:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800e686:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800e68a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800e68e:	b10a      	cbz	r2, 800e694 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800e690:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800e692:	b907      	cbnz	r7, 800e696 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800e694:	689f      	ldr	r7, [r3, #8]
 800e696:	f10d 0914 	add.w	r9, sp, #20
 800e69a:	4621      	mov	r1, r4
 800e69c:	4648      	mov	r0, r9
 800e69e:	f003 f822 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e6a2:	6833      	ldr	r3, [r6, #0]
 800e6a4:	2b00      	cmp	r3, #0
 800e6a6:	d0b6      	beq.n	800e616 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800e6a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e6aa:	882b      	ldrh	r3, [r5, #0]
 800e6ac:	428b      	cmp	r3, r1
 800e6ae:	d9bc      	bls.n	800e62a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800e6b0:	4b11      	ldr	r3, [pc, #68]	; (800e6f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800e6b2:	6818      	ldr	r0, [r3, #0]
 800e6b4:	f7f7 f844 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800e6b8:	2300      	movs	r3, #0
 800e6ba:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e6be:	ab07      	add	r3, sp, #28
 800e6c0:	9001      	str	r0, [sp, #4]
 800e6c2:	9300      	str	r3, [sp, #0]
 800e6c4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800e6c8:	4643      	mov	r3, r8
 800e6ca:	4638      	mov	r0, r7
 800e6cc:	f7f6 ffea 	bl	80056a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e6d0:	b00c      	add	sp, #48	; 0x30
 800e6d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e6d6:	bf00      	nop
 800e6d8:	2000eb80 	.word	0x2000eb80
 800e6dc:	08022e11 	.word	0x08022e11
 800e6e0:	080244fc 	.word	0x080244fc
 800e6e4:	08022e9f 	.word	0x08022e9f
 800e6e8:	2000eb84 	.word	0x2000eb84
 800e6ec:	08022ec8 	.word	0x08022ec8
 800e6f0:	2000eb88 	.word	0x2000eb88
 800e6f4:	2000eb10 	.word	0x2000eb10
 800e6f8:	2000eb8c 	.word	0x2000eb8c

0800e6fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e6fc:	b40e      	push	{r1, r2, r3}
 800e6fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e702:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e704:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e708:	4293      	cmp	r3, r2
 800e70a:	b09a      	sub	sp, #104	; 0x68
 800e70c:	4605      	mov	r5, r0
 800e70e:	d067      	beq.n	800e7e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800e710:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800e7f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800e714:	aa24      	add	r2, sp, #144	; 0x90
 800e716:	9202      	str	r2, [sp, #8]
 800e718:	f8da 2000 	ldr.w	r2, [sl]
 800e71c:	b92a      	cbnz	r2, 800e72a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800e71e:	4b31      	ldr	r3, [pc, #196]	; (800e7e4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800e720:	4a31      	ldr	r2, [pc, #196]	; (800e7e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800e722:	21ae      	movs	r1, #174	; 0xae
 800e724:	4831      	ldr	r0, [pc, #196]	; (800e7ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800e726:	f012 fb8b 	bl	8020e40 <__assert_func>
 800e72a:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800e7f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800e72e:	f8b8 1000 	ldrh.w	r1, [r8]
 800e732:	4299      	cmp	r1, r3
 800e734:	d803      	bhi.n	800e73e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800e736:	4b2e      	ldr	r3, [pc, #184]	; (800e7f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800e738:	4a2b      	ldr	r2, [pc, #172]	; (800e7e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800e73a:	21af      	movs	r1, #175	; 0xaf
 800e73c:	e7f2      	b.n	800e724 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800e73e:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800e7fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800e742:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e746:	f8d9 3000 	ldr.w	r3, [r9]
 800e74a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800e74e:	6823      	ldr	r3, [r4, #0]
 800e750:	4620      	mov	r0, r4
 800e752:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e754:	4798      	blx	r3
 800e756:	4607      	mov	r7, r0
 800e758:	b206      	sxth	r6, r0
 800e75a:	a803      	add	r0, sp, #12
 800e75c:	f003 fc89 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 800e760:	6823      	ldr	r3, [r4, #0]
 800e762:	4620      	mov	r0, r4
 800e764:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e766:	4798      	blx	r3
 800e768:	6823      	ldr	r3, [r4, #0]
 800e76a:	4683      	mov	fp, r0
 800e76c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e76e:	4620      	mov	r0, r4
 800e770:	4798      	blx	r3
 800e772:	465b      	mov	r3, fp
 800e774:	9000      	str	r0, [sp, #0]
 800e776:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800e778:	9a02      	ldr	r2, [sp, #8]
 800e77a:	a803      	add	r0, sp, #12
 800e77c:	f003 fcc6 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e780:	f8da 3000 	ldr.w	r3, [sl]
 800e784:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 800e788:	2b00      	cmp	r3, #0
 800e78a:	d0c8      	beq.n	800e71e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800e78c:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 800e78e:	f8b8 0000 	ldrh.w	r0, [r8]
 800e792:	4290      	cmp	r0, r2
 800e794:	d9cf      	bls.n	800e736 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800e796:	eb03 0442 	add.w	r4, r3, r2, lsl #1
 800e79a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e79e:	7862      	ldrb	r2, [r4, #1]
 800e7a0:	f8d9 3000 	ldr.w	r3, [r9]
 800e7a4:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800e7a8:	9400      	str	r4, [sp, #0]
 800e7aa:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e7ae:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e7b2:	a803      	add	r0, sp, #12
 800e7b4:	f001 faf2 	bl	800fd9c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e7b8:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800e7bc:	18b1      	adds	r1, r6, r2
 800e7be:	2900      	cmp	r1, #0
 800e7c0:	b203      	sxth	r3, r0
 800e7c2:	dd0b      	ble.n	800e7dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800e7c4:	3b01      	subs	r3, #1
 800e7c6:	fb13 f302 	smulbb	r3, r3, r2
 800e7ca:	fb17 3300 	smlabb	r3, r7, r0, r3
 800e7ce:	b21e      	sxth	r6, r3
 800e7d0:	4630      	mov	r0, r6
 800e7d2:	b01a      	add	sp, #104	; 0x68
 800e7d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7d8:	b003      	add	sp, #12
 800e7da:	4770      	bx	lr
 800e7dc:	2b00      	cmp	r3, #0
 800e7de:	dcf7      	bgt.n	800e7d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800e7e0:	2600      	movs	r6, #0
 800e7e2:	e7f5      	b.n	800e7d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800e7e4:	08022e11 	.word	0x08022e11
 800e7e8:	080244fc 	.word	0x080244fc
 800e7ec:	08022e9f 	.word	0x08022e9f
 800e7f0:	08022ec8 	.word	0x08022ec8
 800e7f4:	2000eb80 	.word	0x2000eb80
 800e7f8:	2000eb84 	.word	0x2000eb84
 800e7fc:	2000eb88 	.word	0x2000eb88

0800e800 <_ZN8touchgfx8TextAreaD0Ev>:
 800e800:	b510      	push	{r4, lr}
 800e802:	213c      	movs	r1, #60	; 0x3c
 800e804:	4604      	mov	r4, r0
 800e806:	f012 faec 	bl	8020de2 <_ZdlPvj>
 800e80a:	4620      	mov	r0, r4
 800e80c:	bd10      	pop	{r4, pc}
	...

0800e810 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800e810:	b570      	push	{r4, r5, r6, lr}
 800e812:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e814:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e818:	4299      	cmp	r1, r3
 800e81a:	4604      	mov	r4, r0
 800e81c:	d01e      	beq.n	800e85c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800e81e:	6803      	ldr	r3, [r0, #0]
 800e820:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800e822:	4b0f      	ldr	r3, [pc, #60]	; (800e860 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800e824:	681b      	ldr	r3, [r3, #0]
 800e826:	b92b      	cbnz	r3, 800e834 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800e828:	4b0e      	ldr	r3, [pc, #56]	; (800e864 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800e82a:	4a0f      	ldr	r2, [pc, #60]	; (800e868 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800e82c:	21ae      	movs	r1, #174	; 0xae
 800e82e:	480f      	ldr	r0, [pc, #60]	; (800e86c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800e830:	f012 fb06 	bl	8020e40 <__assert_func>
 800e834:	4b0e      	ldr	r3, [pc, #56]	; (800e870 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800e836:	881b      	ldrh	r3, [r3, #0]
 800e838:	428b      	cmp	r3, r1
 800e83a:	d803      	bhi.n	800e844 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800e83c:	4b0d      	ldr	r3, [pc, #52]	; (800e874 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800e83e:	4a0a      	ldr	r2, [pc, #40]	; (800e868 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800e840:	21af      	movs	r1, #175	; 0xaf
 800e842:	e7f4      	b.n	800e82e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800e844:	4b0c      	ldr	r3, [pc, #48]	; (800e878 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800e846:	6818      	ldr	r0, [r3, #0]
 800e848:	f7f6 ff7a 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800e84c:	2300      	movs	r3, #0
 800e84e:	4601      	mov	r1, r0
 800e850:	46ac      	mov	ip, r5
 800e852:	4620      	mov	r0, r4
 800e854:	461a      	mov	r2, r3
 800e856:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e85a:	4760      	bx	ip
 800e85c:	2000      	movs	r0, #0
 800e85e:	bd70      	pop	{r4, r5, r6, pc}
 800e860:	2000eb80 	.word	0x2000eb80
 800e864:	08022e11 	.word	0x08022e11
 800e868:	080244fc 	.word	0x080244fc
 800e86c:	08022e9f 	.word	0x08022e9f
 800e870:	2000eb84 	.word	0x2000eb84
 800e874:	08022ec8 	.word	0x08022ec8
 800e878:	2000eb8c 	.word	0x2000eb8c

0800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e87c:	b538      	push	{r3, r4, r5, lr}
 800e87e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e880:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e884:	429a      	cmp	r2, r3
 800e886:	4604      	mov	r4, r0
 800e888:	d014      	beq.n	800e8b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e88a:	6803      	ldr	r3, [r0, #0]
 800e88c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800e88e:	4798      	blx	r3
 800e890:	6823      	ldr	r3, [r4, #0]
 800e892:	4605      	mov	r5, r0
 800e894:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e896:	4620      	mov	r0, r4
 800e898:	4798      	blx	r3
 800e89a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e89e:	b22d      	sxth	r5, r5
 800e8a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e8a4:	4601      	mov	r1, r0
 800e8a6:	bf06      	itte	eq
 800e8a8:	4602      	moveq	r2, r0
 800e8aa:	4629      	moveq	r1, r5
 800e8ac:	462a      	movne	r2, r5
 800e8ae:	4620      	mov	r0, r4
 800e8b0:	f7f4 fceb 	bl	800328a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e8b4:	bd38      	pop	{r3, r4, r5, pc}

0800e8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e8b6:	888a      	ldrh	r2, [r1, #4]
 800e8b8:	8582      	strh	r2, [r0, #44]	; 0x2c
 800e8ba:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800e8be:	b922      	cbnz	r2, 800e8ca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800e8c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e8c4:	b90b      	cbnz	r3, 800e8ca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800e8c6:	f7ff bfd9 	b.w	800e87c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e8ca:	4770      	bx	lr

0800e8cc <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e8cc:	2300      	movs	r3, #0
 800e8ce:	8083      	strh	r3, [r0, #4]
 800e8d0:	80c3      	strh	r3, [r0, #6]
 800e8d2:	8003      	strh	r3, [r0, #0]
 800e8d4:	8043      	strh	r3, [r0, #2]
 800e8d6:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e8da:	2bff      	cmp	r3, #255	; 0xff
 800e8dc:	bf01      	itttt	eq
 800e8de:	890b      	ldrheq	r3, [r1, #8]
 800e8e0:	8083      	strheq	r3, [r0, #4]
 800e8e2:	894b      	ldrheq	r3, [r1, #10]
 800e8e4:	80c3      	strheq	r3, [r0, #6]
 800e8e6:	4770      	bx	lr

0800e8e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e8e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e8ea:	4604      	mov	r4, r0
 800e8ec:	6808      	ldr	r0, [r1, #0]
 800e8ee:	6849      	ldr	r1, [r1, #4]
 800e8f0:	466b      	mov	r3, sp
 800e8f2:	c303      	stmia	r3!, {r0, r1}
 800e8f4:	6823      	ldr	r3, [r4, #0]
 800e8f6:	4669      	mov	r1, sp
 800e8f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e8fa:	4620      	mov	r0, r4
 800e8fc:	4798      	blx	r3
 800e8fe:	4b08      	ldr	r3, [pc, #32]	; (800e920 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e900:	681b      	ldr	r3, [r3, #0]
 800e902:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e906:	b10a      	cbz	r2, 800e90c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e908:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e90a:	b900      	cbnz	r0, 800e90e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e90c:	6898      	ldr	r0, [r3, #8]
 800e90e:	6803      	ldr	r3, [r0, #0]
 800e910:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e912:	699d      	ldr	r5, [r3, #24]
 800e914:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e918:	4669      	mov	r1, sp
 800e91a:	47a8      	blx	r5
 800e91c:	b003      	add	sp, #12
 800e91e:	bd30      	pop	{r4, r5, pc}
 800e920:	2000eb10 	.word	0x2000eb10

0800e924 <_ZN8touchgfx3BoxD1Ev>:
 800e924:	4770      	bx	lr

0800e926 <_ZN8touchgfx3BoxD0Ev>:
 800e926:	b510      	push	{r4, lr}
 800e928:	212c      	movs	r1, #44	; 0x2c
 800e92a:	4604      	mov	r4, r0
 800e92c:	f012 fa59 	bl	8020de2 <_ZdlPvj>
 800e930:	4620      	mov	r0, r4
 800e932:	bd10      	pop	{r4, pc}

0800e934 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800e934:	4770      	bx	lr
	...

0800e938 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800e938:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e93a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e93c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e940:	4299      	cmp	r1, r3
 800e942:	4606      	mov	r6, r0
 800e944:	d02a      	beq.n	800e99c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800e946:	4b16      	ldr	r3, [pc, #88]	; (800e9a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800e948:	681b      	ldr	r3, [r3, #0]
 800e94a:	b92b      	cbnz	r3, 800e958 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800e94c:	4b15      	ldr	r3, [pc, #84]	; (800e9a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800e94e:	4a16      	ldr	r2, [pc, #88]	; (800e9a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800e950:	21ae      	movs	r1, #174	; 0xae
 800e952:	4816      	ldr	r0, [pc, #88]	; (800e9ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800e954:	f012 fa74 	bl	8020e40 <__assert_func>
 800e958:	4a15      	ldr	r2, [pc, #84]	; (800e9b0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800e95a:	8812      	ldrh	r2, [r2, #0]
 800e95c:	428a      	cmp	r2, r1
 800e95e:	d803      	bhi.n	800e968 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800e960:	4b14      	ldr	r3, [pc, #80]	; (800e9b4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800e962:	4a11      	ldr	r2, [pc, #68]	; (800e9a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800e964:	21af      	movs	r1, #175	; 0xaf
 800e966:	e7f4      	b.n	800e952 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800e968:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e96c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e970:	4b11      	ldr	r3, [pc, #68]	; (800e9b8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800e972:	7854      	ldrb	r4, [r2, #1]
 800e974:	681b      	ldr	r3, [r3, #0]
 800e976:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800e97a:	682b      	ldr	r3, [r5, #0]
 800e97c:	69df      	ldr	r7, [r3, #28]
 800e97e:	4b0f      	ldr	r3, [pc, #60]	; (800e9bc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800e980:	6818      	ldr	r0, [r3, #0]
 800e982:	f7f6 fedd 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800e986:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800e98a:	2300      	movs	r3, #0
 800e98c:	9300      	str	r3, [sp, #0]
 800e98e:	4602      	mov	r2, r0
 800e990:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800e992:	4621      	mov	r1, r4
 800e994:	4628      	mov	r0, r5
 800e996:	47b8      	blx	r7
 800e998:	b003      	add	sp, #12
 800e99a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e99c:	2000      	movs	r0, #0
 800e99e:	e7fb      	b.n	800e998 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800e9a0:	2000eb80 	.word	0x2000eb80
 800e9a4:	08022e11 	.word	0x08022e11
 800e9a8:	08024608 	.word	0x08024608
 800e9ac:	08022e9f 	.word	0x08022e9f
 800e9b0:	2000eb84 	.word	0x2000eb84
 800e9b4:	08022ec8 	.word	0x08022ec8
 800e9b8:	2000eb88 	.word	0x2000eb88
 800e9bc:	2000eb8c 	.word	0x2000eb8c

0800e9c0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800e9c0:	b570      	push	{r4, r5, r6, lr}
 800e9c2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e9c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e9c8:	4299      	cmp	r1, r3
 800e9ca:	4604      	mov	r4, r0
 800e9cc:	d01e      	beq.n	800ea0c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800e9ce:	6803      	ldr	r3, [r0, #0]
 800e9d0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800e9d2:	4b0f      	ldr	r3, [pc, #60]	; (800ea10 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800e9d4:	681b      	ldr	r3, [r3, #0]
 800e9d6:	b92b      	cbnz	r3, 800e9e4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800e9d8:	4b0e      	ldr	r3, [pc, #56]	; (800ea14 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800e9da:	4a0f      	ldr	r2, [pc, #60]	; (800ea18 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800e9dc:	21ae      	movs	r1, #174	; 0xae
 800e9de:	480f      	ldr	r0, [pc, #60]	; (800ea1c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800e9e0:	f012 fa2e 	bl	8020e40 <__assert_func>
 800e9e4:	4b0e      	ldr	r3, [pc, #56]	; (800ea20 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800e9e6:	881b      	ldrh	r3, [r3, #0]
 800e9e8:	428b      	cmp	r3, r1
 800e9ea:	d803      	bhi.n	800e9f4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800e9ec:	4b0d      	ldr	r3, [pc, #52]	; (800ea24 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800e9ee:	4a0a      	ldr	r2, [pc, #40]	; (800ea18 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800e9f0:	21af      	movs	r1, #175	; 0xaf
 800e9f2:	e7f4      	b.n	800e9de <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800e9f4:	4b0c      	ldr	r3, [pc, #48]	; (800ea28 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800e9f6:	6818      	ldr	r0, [r3, #0]
 800e9f8:	f7f6 fea2 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800e9fc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e9fe:	4601      	mov	r1, r0
 800ea00:	46ac      	mov	ip, r5
 800ea02:	4620      	mov	r0, r4
 800ea04:	2300      	movs	r3, #0
 800ea06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ea0a:	4760      	bx	ip
 800ea0c:	2000      	movs	r0, #0
 800ea0e:	bd70      	pop	{r4, r5, r6, pc}
 800ea10:	2000eb80 	.word	0x2000eb80
 800ea14:	08022e11 	.word	0x08022e11
 800ea18:	08024608 	.word	0x08024608
 800ea1c:	08022e9f 	.word	0x08022e9f
 800ea20:	2000eb84 	.word	0x2000eb84
 800ea24:	08022ec8 	.word	0x08022ec8
 800ea28:	2000eb8c 	.word	0x2000eb8c

0800ea2c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ea2c:	b510      	push	{r4, lr}
 800ea2e:	2140      	movs	r1, #64	; 0x40
 800ea30:	4604      	mov	r4, r0
 800ea32:	f012 f9d6 	bl	8020de2 <_ZdlPvj>
 800ea36:	4620      	mov	r0, r4
 800ea38:	bd10      	pop	{r4, pc}
	...

0800ea3c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800ea3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ea40:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ea42:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ea46:	4293      	cmp	r3, r2
 800ea48:	b08c      	sub	sp, #48	; 0x30
 800ea4a:	4604      	mov	r4, r0
 800ea4c:	460e      	mov	r6, r1
 800ea4e:	d05d      	beq.n	800eb0c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ea50:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800eb30 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800ea54:	f8d8 2000 	ldr.w	r2, [r8]
 800ea58:	b92a      	cbnz	r2, 800ea66 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800ea5a:	4b2e      	ldr	r3, [pc, #184]	; (800eb14 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800ea5c:	4a2e      	ldr	r2, [pc, #184]	; (800eb18 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ea5e:	21ae      	movs	r1, #174	; 0xae
 800ea60:	482e      	ldr	r0, [pc, #184]	; (800eb1c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800ea62:	f012 f9ed 	bl	8020e40 <__assert_func>
 800ea66:	4f2e      	ldr	r7, [pc, #184]	; (800eb20 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800ea68:	8839      	ldrh	r1, [r7, #0]
 800ea6a:	4299      	cmp	r1, r3
 800ea6c:	d803      	bhi.n	800ea76 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800ea6e:	4b2d      	ldr	r3, [pc, #180]	; (800eb24 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800ea70:	4a29      	ldr	r2, [pc, #164]	; (800eb18 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ea72:	21af      	movs	r1, #175	; 0xaf
 800ea74:	e7f4      	b.n	800ea60 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800ea76:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ea7a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ea7e:	4b2a      	ldr	r3, [pc, #168]	; (800eb28 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800ea80:	681b      	ldr	r3, [r3, #0]
 800ea82:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ea86:	2a00      	cmp	r2, #0
 800ea88:	d040      	beq.n	800eb0c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ea8a:	784b      	ldrb	r3, [r1, #1]
 800ea8c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800ea90:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ea94:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800ea98:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800ea9c:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800eaa0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800eaa2:	9207      	str	r2, [sp, #28]
 800eaa4:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800eaa8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800eaac:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800eab0:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800eab4:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800eab8:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800eabc:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800eac0:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800eac4:	f88d a020 	strb.w	sl, [sp, #32]
 800eac8:	9009      	str	r0, [sp, #36]	; 0x24
 800eaca:	f7fd fe69 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800eace:	ad05      	add	r5, sp, #20
 800ead0:	4681      	mov	r9, r0
 800ead2:	4621      	mov	r1, r4
 800ead4:	4628      	mov	r0, r5
 800ead6:	f002 fe06 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eada:	f8d8 3000 	ldr.w	r3, [r8]
 800eade:	2b00      	cmp	r3, #0
 800eae0:	d0bb      	beq.n	800ea5a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800eae2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800eae4:	883b      	ldrh	r3, [r7, #0]
 800eae6:	428b      	cmp	r3, r1
 800eae8:	d9c1      	bls.n	800ea6e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800eaea:	4b10      	ldr	r3, [pc, #64]	; (800eb2c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800eaec:	6818      	ldr	r0, [r3, #0]
 800eaee:	f7f6 fe27 	bl	8005740 <_ZNK8touchgfx5Texts7getTextEt>
 800eaf2:	2300      	movs	r3, #0
 800eaf4:	9303      	str	r3, [sp, #12]
 800eaf6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800eaf8:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800eafc:	ab07      	add	r3, sp, #28
 800eafe:	9300      	str	r3, [sp, #0]
 800eb00:	e895 0006 	ldmia.w	r5, {r1, r2}
 800eb04:	4633      	mov	r3, r6
 800eb06:	4648      	mov	r0, r9
 800eb08:	f7f6 fdcc 	bl	80056a4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800eb0c:	b00c      	add	sp, #48	; 0x30
 800eb0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eb12:	bf00      	nop
 800eb14:	08022e11 	.word	0x08022e11
 800eb18:	08024608 	.word	0x08024608
 800eb1c:	08022e9f 	.word	0x08022e9f
 800eb20:	2000eb84 	.word	0x2000eb84
 800eb24:	08022ec8 	.word	0x08022ec8
 800eb28:	2000eb88 	.word	0x2000eb88
 800eb2c:	2000eb8c 	.word	0x2000eb8c
 800eb30:	2000eb80 	.word	0x2000eb80

0800eb34 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800eb34:	4770      	bx	lr

0800eb36 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800eb36:	b510      	push	{r4, lr}
 800eb38:	2134      	movs	r1, #52	; 0x34
 800eb3a:	4604      	mov	r4, r0
 800eb3c:	f012 f951 	bl	8020de2 <_ZdlPvj>
 800eb40:	4620      	mov	r0, r4
 800eb42:	bd10      	pop	{r4, pc}

0800eb44 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800eb44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb48:	4604      	mov	r4, r0
 800eb4a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800eb4c:	8962      	ldrh	r2, [r4, #10]
 800eb4e:	b218      	sxth	r0, r3
 800eb50:	460e      	mov	r6, r1
 800eb52:	005b      	lsls	r3, r3, #1
 800eb54:	8921      	ldrh	r1, [r4, #8]
 800eb56:	b29b      	uxth	r3, r3
 800eb58:	1ac9      	subs	r1, r1, r3
 800eb5a:	b08e      	sub	sp, #56	; 0x38
 800eb5c:	b209      	sxth	r1, r1
 800eb5e:	1ad3      	subs	r3, r2, r3
 800eb60:	b21b      	sxth	r3, r3
 800eb62:	2900      	cmp	r1, #0
 800eb64:	f8ad 0000 	strh.w	r0, [sp]
 800eb68:	f8ad 0002 	strh.w	r0, [sp, #2]
 800eb6c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800eb70:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eb74:	dd5e      	ble.n	800ec34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800eb76:	2b00      	cmp	r3, #0
 800eb78:	dd5c      	ble.n	800ec34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800eb7a:	6830      	ldr	r0, [r6, #0]
 800eb7c:	6871      	ldr	r1, [r6, #4]
 800eb7e:	ab02      	add	r3, sp, #8
 800eb80:	c303      	stmia	r3!, {r0, r1}
 800eb82:	4669      	mov	r1, sp
 800eb84:	a802      	add	r0, sp, #8
 800eb86:	f7fd fb33 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800eb8a:	4620      	mov	r0, r4
 800eb8c:	a902      	add	r1, sp, #8
 800eb8e:	f7ff feab 	bl	800e8e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800eb92:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800eb94:	2800      	cmp	r0, #0
 800eb96:	d05f      	beq.n	800ec58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800eb98:	8963      	ldrh	r3, [r4, #10]
 800eb9a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800eb9e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eba2:	1a1f      	subs	r7, r3, r0
 800eba4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800eba8:	b202      	sxth	r2, r0
 800ebaa:	2500      	movs	r5, #0
 800ebac:	b21b      	sxth	r3, r3
 800ebae:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800ebb2:	1a09      	subs	r1, r1, r0
 800ebb4:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800ebb8:	9506      	str	r5, [sp, #24]
 800ebba:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ebbe:	f8ad 5020 	strh.w	r5, [sp, #32]
 800ebc2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800ebc6:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800ebca:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800ebce:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ebd2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ebd6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800ebda:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800ebde:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ebe2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ebe6:	af04      	add	r7, sp, #16
 800ebe8:	ab06      	add	r3, sp, #24
 800ebea:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ebee:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ebf2:	e887 0003 	stmia.w	r7, {r0, r1}
 800ebf6:	4631      	mov	r1, r6
 800ebf8:	4638      	mov	r0, r7
 800ebfa:	f7fd faf9 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 800ebfe:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ec02:	2b00      	cmp	r3, #0
 800ec04:	dd12      	ble.n	800ec2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ec06:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ec0a:	2b00      	cmp	r3, #0
 800ec0c:	dd0e      	ble.n	800ec2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ec0e:	6823      	ldr	r3, [r4, #0]
 800ec10:	4639      	mov	r1, r7
 800ec12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ec14:	4620      	mov	r0, r4
 800ec16:	4798      	blx	r3
 800ec18:	f7fd fdc2 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800ec1c:	6803      	ldr	r3, [r0, #0]
 800ec1e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ec20:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800ec24:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ec28:	4639      	mov	r1, r7
 800ec2a:	47c0      	blx	r8
 800ec2c:	3501      	adds	r5, #1
 800ec2e:	2d04      	cmp	r5, #4
 800ec30:	d1da      	bne.n	800ebe8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800ec32:	e011      	b.n	800ec58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800ec34:	6830      	ldr	r0, [r6, #0]
 800ec36:	6871      	ldr	r1, [r6, #4]
 800ec38:	ab06      	add	r3, sp, #24
 800ec3a:	c303      	stmia	r3!, {r0, r1}
 800ec3c:	6823      	ldr	r3, [r4, #0]
 800ec3e:	a906      	add	r1, sp, #24
 800ec40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ec42:	4620      	mov	r0, r4
 800ec44:	4798      	blx	r3
 800ec46:	f7fd fdab 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 800ec4a:	6803      	ldr	r3, [r0, #0]
 800ec4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ec4e:	699d      	ldr	r5, [r3, #24]
 800ec50:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ec54:	a906      	add	r1, sp, #24
 800ec56:	47a8      	blx	r5
 800ec58:	b00e      	add	sp, #56	; 0x38
 800ec5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800ec60 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800ec60:	4b02      	ldr	r3, [pc, #8]	; (800ec6c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800ec62:	6018      	str	r0, [r3, #0]
 800ec64:	4b02      	ldr	r3, [pc, #8]	; (800ec70 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800ec66:	6019      	str	r1, [r3, #0]
 800ec68:	4770      	bx	lr
 800ec6a:	bf00      	nop
 800ec6c:	2000eb18 	.word	0x2000eb18
 800ec70:	2000eb2c 	.word	0x2000eb2c

0800ec74 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800ec74:	b538      	push	{r3, r4, r5, lr}
 800ec76:	4c2b      	ldr	r4, [pc, #172]	; (800ed24 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800ec78:	4b2b      	ldr	r3, [pc, #172]	; (800ed28 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800ec7a:	6821      	ldr	r1, [r4, #0]
 800ec7c:	681a      	ldr	r2, [r3, #0]
 800ec7e:	4d2b      	ldr	r5, [pc, #172]	; (800ed2c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800ec80:	4281      	cmp	r1, r0
 800ec82:	492b      	ldr	r1, [pc, #172]	; (800ed30 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800ec84:	d108      	bne.n	800ec98 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800ec86:	682b      	ldr	r3, [r5, #0]
 800ec88:	4293      	cmp	r3, r2
 800ec8a:	d105      	bne.n	800ec98 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800ec8c:	6808      	ldr	r0, [r1, #0]
 800ec8e:	280f      	cmp	r0, #15
 800ec90:	bf94      	ite	ls
 800ec92:	2000      	movls	r0, #0
 800ec94:	2001      	movhi	r0, #1
 800ec96:	bd38      	pop	{r3, r4, r5, pc}
 800ec98:	4b26      	ldr	r3, [pc, #152]	; (800ed34 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800ec9a:	6020      	str	r0, [r4, #0]
 800ec9c:	681b      	ldr	r3, [r3, #0]
 800ec9e:	602a      	str	r2, [r5, #0]
 800eca0:	4298      	cmp	r0, r3
 800eca2:	d905      	bls.n	800ecb0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800eca4:	4b24      	ldr	r3, [pc, #144]	; (800ed38 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800eca6:	4a25      	ldr	r2, [pc, #148]	; (800ed3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800eca8:	2137      	movs	r1, #55	; 0x37
 800ecaa:	4825      	ldr	r0, [pc, #148]	; (800ed40 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800ecac:	f012 f8c8 	bl	8020e40 <__assert_func>
 800ecb0:	f010 0403 	ands.w	r4, r0, #3
 800ecb4:	bf1f      	itttt	ne
 800ecb6:	f1c4 0504 	rsbne	r5, r4, #4
 800ecba:	3b04      	subne	r3, #4
 800ecbc:	1952      	addne	r2, r2, r5
 800ecbe:	191b      	addne	r3, r3, r4
 800ecc0:	4402      	add	r2, r0
 800ecc2:	1a1b      	subs	r3, r3, r0
 800ecc4:	3001      	adds	r0, #1
 800ecc6:	f020 0401 	bic.w	r4, r0, #1
 800ecca:	4d1e      	ldr	r5, [pc, #120]	; (800ed44 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800eccc:	42a3      	cmp	r3, r4
 800ecce:	602a      	str	r2, [r5, #0]
 800ecd0:	d203      	bcs.n	800ecda <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800ecd2:	4b19      	ldr	r3, [pc, #100]	; (800ed38 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800ecd4:	4a19      	ldr	r2, [pc, #100]	; (800ed3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ecd6:	214a      	movs	r1, #74	; 0x4a
 800ecd8:	e7e7      	b.n	800ecaa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ecda:	f010 0002 	ands.w	r0, r0, #2
 800ecde:	bf1f      	itttt	ne
 800ece0:	f1c0 0504 	rsbne	r5, r0, #4
 800ece4:	1952      	addne	r2, r2, r5
 800ece6:	1f05      	subne	r5, r0, #4
 800ece8:	195b      	addne	r3, r3, r5
 800ecea:	1b1b      	subs	r3, r3, r4
 800ecec:	4d16      	ldr	r5, [pc, #88]	; (800ed48 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800ecee:	4422      	add	r2, r4
 800ecf0:	429c      	cmp	r4, r3
 800ecf2:	602a      	str	r2, [r5, #0]
 800ecf4:	d903      	bls.n	800ecfe <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800ecf6:	4b10      	ldr	r3, [pc, #64]	; (800ed38 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800ecf8:	4a10      	ldr	r2, [pc, #64]	; (800ed3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ecfa:	215d      	movs	r1, #93	; 0x5d
 800ecfc:	e7d5      	b.n	800ecaa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ecfe:	b120      	cbz	r0, 800ed0a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800ed00:	f1c0 0504 	rsb	r5, r0, #4
 800ed04:	3804      	subs	r0, #4
 800ed06:	442a      	add	r2, r5
 800ed08:	4403      	add	r3, r0
 800ed0a:	1b1b      	subs	r3, r3, r4
 800ed0c:	480f      	ldr	r0, [pc, #60]	; (800ed4c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800ed0e:	600b      	str	r3, [r1, #0]
 800ed10:	4422      	add	r2, r4
 800ed12:	2b0f      	cmp	r3, #15
 800ed14:	6002      	str	r2, [r0, #0]
 800ed16:	d803      	bhi.n	800ed20 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800ed18:	4b0d      	ldr	r3, [pc, #52]	; (800ed50 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800ed1a:	4a08      	ldr	r2, [pc, #32]	; (800ed3c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ed1c:	2170      	movs	r1, #112	; 0x70
 800ed1e:	e7c4      	b.n	800ecaa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ed20:	2001      	movs	r0, #1
 800ed22:	e7b8      	b.n	800ec96 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800ed24:	2000eb20 	.word	0x2000eb20
 800ed28:	2000eb18 	.word	0x2000eb18
 800ed2c:	2000eb28 	.word	0x2000eb28
 800ed30:	2000eb30 	.word	0x2000eb30
 800ed34:	2000eb2c 	.word	0x2000eb2c
 800ed38:	0802469c 	.word	0x0802469c
 800ed3c:	08024764 	.word	0x08024764
 800ed40:	080246d5 	.word	0x080246d5
 800ed44:	2000eb34 	.word	0x2000eb34
 800ed48:	2000eb24 	.word	0x2000eb24
 800ed4c:	2000eb1c 	.word	0x2000eb1c
 800ed50:	0802471f 	.word	0x0802471f

0800ed54 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800ed54:	4b04      	ldr	r3, [pc, #16]	; (800ed68 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800ed56:	6818      	ldr	r0, [r3, #0]
 800ed58:	b120      	cbz	r0, 800ed64 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800ed5a:	4b04      	ldr	r3, [pc, #16]	; (800ed6c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800ed5c:	6818      	ldr	r0, [r3, #0]
 800ed5e:	3000      	adds	r0, #0
 800ed60:	bf18      	it	ne
 800ed62:	2001      	movne	r0, #1
 800ed64:	4770      	bx	lr
 800ed66:	bf00      	nop
 800ed68:	2000eb18 	.word	0x2000eb18
 800ed6c:	2000eb2c 	.word	0x2000eb2c

0800ed70 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 800ed70:	4b01      	ldr	r3, [pc, #4]	; (800ed78 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 800ed72:	6818      	ldr	r0, [r3, #0]
 800ed74:	4770      	bx	lr
 800ed76:	bf00      	nop
 800ed78:	2000eb20 	.word	0x2000eb20

0800ed7c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 800ed7c:	4b01      	ldr	r3, [pc, #4]	; (800ed84 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 800ed7e:	6818      	ldr	r0, [r3, #0]
 800ed80:	4770      	bx	lr
 800ed82:	bf00      	nop
 800ed84:	2000eb28 	.word	0x2000eb28

0800ed88 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 800ed88:	4b01      	ldr	r3, [pc, #4]	; (800ed90 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 800ed8a:	6818      	ldr	r0, [r3, #0]
 800ed8c:	4770      	bx	lr
 800ed8e:	bf00      	nop
 800ed90:	2000eb34 	.word	0x2000eb34

0800ed94 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 800ed94:	4b01      	ldr	r3, [pc, #4]	; (800ed9c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 800ed96:	6818      	ldr	r0, [r3, #0]
 800ed98:	4770      	bx	lr
 800ed9a:	bf00      	nop
 800ed9c:	2000eb24 	.word	0x2000eb24

0800eda0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800eda0:	4b01      	ldr	r3, [pc, #4]	; (800eda8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800eda2:	6818      	ldr	r0, [r3, #0]
 800eda4:	4770      	bx	lr
 800eda6:	bf00      	nop
 800eda8:	2000eb1c 	.word	0x2000eb1c

0800edac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800edac:	4b01      	ldr	r3, [pc, #4]	; (800edb4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800edae:	6818      	ldr	r0, [r3, #0]
 800edb0:	4770      	bx	lr
 800edb2:	bf00      	nop
 800edb4:	2000eb30 	.word	0x2000eb30

0800edb8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800edb8:	4b01      	ldr	r3, [pc, #4]	; (800edc0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800edba:	6019      	str	r1, [r3, #0]
 800edbc:	4770      	bx	lr
 800edbe:	bf00      	nop
 800edc0:	2000eb38 	.word	0x2000eb38

0800edc4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800edc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edc8:	4696      	mov	lr, r2
 800edca:	4605      	mov	r5, r0
 800edcc:	4614      	mov	r4, r2
 800edce:	460e      	mov	r6, r1
 800edd0:	461f      	mov	r7, r3
 800edd2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edd6:	b097      	sub	sp, #92	; 0x5c
 800edd8:	f10d 0c1c 	add.w	ip, sp, #28
 800eddc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ede0:	f8de 3000 	ldr.w	r3, [lr]
 800ede4:	f8cc 3000 	str.w	r3, [ip]
 800ede8:	f104 0e14 	add.w	lr, r4, #20
 800edec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edf0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800edf4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800edf8:	f8de 3000 	ldr.w	r3, [lr]
 800edfc:	f8cc 3000 	str.w	r3, [ip]
 800ee00:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ee04:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ee08:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ee0c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee10:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800ee14:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800ee18:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800ee1c:	f8de 3000 	ldr.w	r3, [lr]
 800ee20:	f8cc 3000 	str.w	r3, [ip]
 800ee24:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ee26:	682b      	ldr	r3, [r5, #0]
 800ee28:	9201      	str	r2, [sp, #4]
 800ee2a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ee2e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ee30:	9200      	str	r2, [sp, #0]
 800ee32:	f8cd 8008 	str.w	r8, [sp, #8]
 800ee36:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800ee3a:	aa07      	add	r2, sp, #28
 800ee3c:	463b      	mov	r3, r7
 800ee3e:	4631      	mov	r1, r6
 800ee40:	4628      	mov	r0, r5
 800ee42:	47d8      	blx	fp
 800ee44:	46a6      	mov	lr, r4
 800ee46:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ee4a:	f10d 0c1c 	add.w	ip, sp, #28
 800ee4e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee52:	f8de 3000 	ldr.w	r3, [lr]
 800ee56:	f8cc 3000 	str.w	r3, [ip]
 800ee5a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ee5e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ee62:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ee66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee6a:	343c      	adds	r4, #60	; 0x3c
 800ee6c:	f8de 3000 	ldr.w	r3, [lr]
 800ee70:	f8cc 3000 	str.w	r3, [ip]
 800ee74:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee76:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ee7a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee7e:	6823      	ldr	r3, [r4, #0]
 800ee80:	f8cc 3000 	str.w	r3, [ip]
 800ee84:	682b      	ldr	r3, [r5, #0]
 800ee86:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ee8a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ee8c:	9201      	str	r2, [sp, #4]
 800ee8e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ee90:	9200      	str	r2, [sp, #0]
 800ee92:	f8cd 8008 	str.w	r8, [sp, #8]
 800ee96:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800ee98:	aa07      	add	r2, sp, #28
 800ee9a:	463b      	mov	r3, r7
 800ee9c:	4631      	mov	r1, r6
 800ee9e:	4628      	mov	r0, r5
 800eea0:	47a0      	blx	r4
 800eea2:	b017      	add	sp, #92	; 0x5c
 800eea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eea8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800eea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeac:	b08d      	sub	sp, #52	; 0x34
 800eeae:	4688      	mov	r8, r1
 800eeb0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800eeb2:	f8d3 c000 	ldr.w	ip, [r3]
 800eeb6:	680f      	ldr	r7, [r1, #0]
 800eeb8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800eebc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800eec0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800eec4:	edd3 6a07 	vldr	s13, [r3, #28]
 800eec8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800eeca:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800eece:	f9b1 9000 	ldrsh.w	r9, [r1]
 800eed2:	f9ba 1000 	ldrsh.w	r1, [sl]
 800eed6:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800eeda:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800eede:	eba7 070c 	sub.w	r7, r7, ip
 800eee2:	42bc      	cmp	r4, r7
 800eee4:	bfa8      	it	ge
 800eee6:	463c      	movge	r4, r7
 800eee8:	ee07 4a90 	vmov	s15, r4
 800eeec:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800eef0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800eef4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800eef8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800eefc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ef00:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ef04:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ef08:	eb09 0e0c 	add.w	lr, r9, ip
 800ef0c:	4571      	cmp	r1, lr
 800ef0e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ef12:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ef16:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ef1a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ef1e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ef22:	f340 808d 	ble.w	800f040 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800ef26:	eba1 060e 	sub.w	r6, r1, lr
 800ef2a:	fb96 f5f4 	sdiv	r5, r6, r4
 800ef2e:	ee07 5a10 	vmov	s14, r5
 800ef32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ef36:	2d00      	cmp	r5, #0
 800ef38:	fb04 6615 	mls	r6, r4, r5, r6
 800ef3c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ef40:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ef44:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ef48:	dd13      	ble.n	800ef72 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800ef4a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ef4e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ef52:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ef56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef5a:	bf18      	it	ne
 800ef5c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ef60:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ef64:	bf08      	it	eq
 800ef66:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ef6a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ef6e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ef72:	fb05 f204 	mul.w	r2, r5, r4
 800ef76:	1abf      	subs	r7, r7, r2
 800ef78:	4494      	add	ip, r2
 800ef7a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ef7e:	4411      	add	r1, r2
 800ef80:	eb09 020c 	add.w	r2, r9, ip
 800ef84:	443a      	add	r2, r7
 800ef86:	b209      	sxth	r1, r1
 800ef88:	428a      	cmp	r2, r1
 800ef8a:	bfc4      	itt	gt
 800ef8c:	eba1 0209 	subgt.w	r2, r1, r9
 800ef90:	eba2 070c 	subgt.w	r7, r2, ip
 800ef94:	2f00      	cmp	r7, #0
 800ef96:	dd50      	ble.n	800f03a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800ef98:	fb97 f1f4 	sdiv	r1, r7, r4
 800ef9c:	fb04 7211 	mls	r2, r4, r1, r7
 800efa0:	b90a      	cbnz	r2, 800efa6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800efa2:	3901      	subs	r1, #1
 800efa4:	4622      	mov	r2, r4
 800efa6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800efaa:	6840      	ldr	r0, [r0, #4]
 800efac:	900b      	str	r0, [sp, #44]	; 0x2c
 800efae:	f8d0 a000 	ldr.w	sl, [r0]
 800efb2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800efb4:	9008      	str	r0, [sp, #32]
 800efb6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800efba:	9818      	ldr	r0, [sp, #96]	; 0x60
 800efbc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800efc0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800efc4:	695b      	ldr	r3, [r3, #20]
 800efc6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800efc8:	445b      	add	r3, fp
 800efca:	eef0 6a42 	vmov.f32	s13, s4
 800efce:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800efd2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800efd6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800efda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800efde:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800efe2:	9307      	str	r3, [sp, #28]
 800efe4:	ee17 7a90 	vmov	r7, s15
 800efe8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800efec:	eeb0 7a61 	vmov.f32	s14, s3
 800eff0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800eff4:	ee16 3a90 	vmov	r3, s13
 800eff8:	fb97 f7f4 	sdiv	r7, r7, r4
 800effc:	ee17 ca90 	vmov	ip, s15
 800f000:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f004:	fb9c fcf4 	sdiv	ip, ip, r4
 800f008:	fb0c 3306 	mla	r3, ip, r6, r3
 800f00c:	9302      	str	r3, [sp, #8]
 800f00e:	ee17 3a10 	vmov	r3, s14
 800f012:	44b6      	add	lr, r6
 800f014:	fb04 e505 	mla	r5, r4, r5, lr
 800f018:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f01c:	fb07 3706 	mla	r7, r7, r6, r3
 800f020:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f024:	e9cd 4700 	strd	r4, r7, [sp]
 800f028:	2900      	cmp	r1, #0
 800f02a:	bfcc      	ite	gt
 800f02c:	46a1      	movgt	r9, r4
 800f02e:	4691      	movle	r9, r2
 800f030:	eba9 0306 	sub.w	r3, r9, r6
 800f034:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f038:	47a0      	blx	r4
 800f03a:	b00d      	add	sp, #52	; 0x34
 800f03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f040:	2500      	movs	r5, #0
 800f042:	462e      	mov	r6, r5
 800f044:	e799      	b.n	800ef7a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f04c:	b0db      	sub	sp, #364	; 0x16c
 800f04e:	461d      	mov	r5, r3
 800f050:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f054:	930a      	str	r3, [sp, #40]	; 0x28
 800f056:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f05a:	930b      	str	r3, [sp, #44]	; 0x2c
 800f05c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f060:	9310      	str	r3, [sp, #64]	; 0x40
 800f062:	6803      	ldr	r3, [r0, #0]
 800f064:	910f      	str	r1, [sp, #60]	; 0x3c
 800f066:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800f068:	9009      	str	r0, [sp, #36]	; 0x24
 800f06a:	4614      	mov	r4, r2
 800f06c:	4629      	mov	r1, r5
 800f06e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f072:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f076:	47b8      	blx	r7
 800f078:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f07a:	6058      	str	r0, [r3, #4]
 800f07c:	2800      	cmp	r0, #0
 800f07e:	f000 83a1 	beq.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f082:	682b      	ldr	r3, [r5, #0]
 800f084:	9314      	str	r3, [sp, #80]	; 0x50
 800f086:	686b      	ldr	r3, [r5, #4]
 800f088:	9315      	str	r3, [sp, #84]	; 0x54
 800f08a:	4bc4      	ldr	r3, [pc, #784]	; (800f39c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f08c:	ed94 7a02 	vldr	s14, [r4, #8]
 800f090:	7819      	ldrb	r1, [r3, #0]
 800f092:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f096:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f09a:	2900      	cmp	r1, #0
 800f09c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f0a0:	bf16      	itet	ne
 800f0a2:	4619      	movne	r1, r3
 800f0a4:	4611      	moveq	r1, r2
 800f0a6:	4613      	movne	r3, r2
 800f0a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0ac:	9116      	str	r1, [sp, #88]	; 0x58
 800f0ae:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f0b2:	f240 8387 	bls.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0b6:	ed94 7a07 	vldr	s14, [r4, #28]
 800f0ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0c2:	f240 837f 	bls.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0c6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f0ca:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f0ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0d2:	f240 8377 	bls.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0d6:	6822      	ldr	r2, [r4, #0]
 800f0d8:	4bb1      	ldr	r3, [pc, #708]	; (800f3a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f0da:	429a      	cmp	r2, r3
 800f0dc:	f2c0 8372 	blt.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0e0:	49b0      	ldr	r1, [pc, #704]	; (800f3a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f0e2:	6963      	ldr	r3, [r4, #20]
 800f0e4:	428a      	cmp	r2, r1
 800f0e6:	f300 836d 	bgt.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0ea:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f0ee:	48ae      	ldr	r0, [pc, #696]	; (800f3a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f0f0:	33ff      	adds	r3, #255	; 0xff
 800f0f2:	4283      	cmp	r3, r0
 800f0f4:	f200 8366 	bhi.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0f8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f0fa:	4dac      	ldr	r5, [pc, #688]	; (800f3ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f0fc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f100:	33ff      	adds	r3, #255	; 0xff
 800f102:	42ab      	cmp	r3, r5
 800f104:	f200 835e 	bhi.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f108:	6862      	ldr	r2, [r4, #4]
 800f10a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f10e:	33ff      	adds	r3, #255	; 0xff
 800f110:	4283      	cmp	r3, r0
 800f112:	f200 8357 	bhi.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f116:	69a1      	ldr	r1, [r4, #24]
 800f118:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f11c:	33ff      	adds	r3, #255	; 0xff
 800f11e:	4283      	cmp	r3, r0
 800f120:	f200 8350 	bhi.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f124:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f126:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f12a:	30ff      	adds	r0, #255	; 0xff
 800f12c:	42a8      	cmp	r0, r5
 800f12e:	f200 8349 	bhi.w	800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f132:	428a      	cmp	r2, r1
 800f134:	f280 8110 	bge.w	800f358 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f138:	429a      	cmp	r2, r3
 800f13a:	f300 8119 	bgt.w	800f370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f13e:	4299      	cmp	r1, r3
 800f140:	f280 811d 	bge.w	800f37e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f144:	2502      	movs	r5, #2
 800f146:	2701      	movs	r7, #1
 800f148:	46a9      	mov	r9, r5
 800f14a:	46b8      	mov	r8, r7
 800f14c:	f04f 0a00 	mov.w	sl, #0
 800f150:	4621      	mov	r1, r4
 800f152:	a849      	add	r0, sp, #292	; 0x124
 800f154:	f003 fd50 	bl	8012bf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f158:	4622      	mov	r2, r4
 800f15a:	4653      	mov	r3, sl
 800f15c:	a949      	add	r1, sp, #292	; 0x124
 800f15e:	f8cd 9000 	str.w	r9, [sp]
 800f162:	a819      	add	r0, sp, #100	; 0x64
 800f164:	f003 fe78 	bl	8012e58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f168:	4622      	mov	r2, r4
 800f16a:	4653      	mov	r3, sl
 800f16c:	a949      	add	r1, sp, #292	; 0x124
 800f16e:	f8cd 8000 	str.w	r8, [sp]
 800f172:	a829      	add	r0, sp, #164	; 0xa4
 800f174:	f003 fe70 	bl	8012e58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f178:	4643      	mov	r3, r8
 800f17a:	4622      	mov	r2, r4
 800f17c:	a949      	add	r1, sp, #292	; 0x124
 800f17e:	f8cd 9000 	str.w	r9, [sp]
 800f182:	a839      	add	r0, sp, #228	; 0xe4
 800f184:	f003 fe68 	bl	8012e58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f188:	42af      	cmp	r7, r5
 800f18a:	bfb5      	itete	lt
 800f18c:	2300      	movlt	r3, #0
 800f18e:	2301      	movge	r3, #1
 800f190:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f192:	930e      	strge	r3, [sp, #56]	; 0x38
 800f194:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f196:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f19a:	af12      	add	r7, sp, #72	; 0x48
 800f19c:	bfb9      	ittee	lt
 800f19e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f1a0:	ac19      	addlt	r4, sp, #100	; 0x64
 800f1a2:	ad19      	addge	r5, sp, #100	; 0x64
 800f1a4:	ac29      	addge	r4, sp, #164	; 0xa4
 800f1a6:	e887 0003 	stmia.w	r7, {r0, r1}
 800f1aa:	b928      	cbnz	r0, 800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f1ac:	4b80      	ldr	r3, [pc, #512]	; (800f3b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f1ae:	6818      	ldr	r0, [r3, #0]
 800f1b0:	6803      	ldr	r3, [r0, #0]
 800f1b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1b4:	4798      	blx	r3
 800f1b6:	6038      	str	r0, [r7, #0]
 800f1b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f1ba:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f1be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f1c2:	930c      	str	r3, [sp, #48]	; 0x30
 800f1c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f1c6:	6963      	ldr	r3, [r4, #20]
 800f1c8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f1ca:	440b      	add	r3, r1
 800f1cc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f1d0:	4408      	add	r0, r1
 800f1d2:	b200      	sxth	r0, r0
 800f1d4:	4283      	cmp	r3, r0
 800f1d6:	900d      	str	r0, [sp, #52]	; 0x34
 800f1d8:	f280 80dd 	bge.w	800f396 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f1dc:	428b      	cmp	r3, r1
 800f1de:	da08      	bge.n	800f1f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f1e0:	2a00      	cmp	r2, #0
 800f1e2:	dd06      	ble.n	800f1f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f1e4:	1acb      	subs	r3, r1, r3
 800f1e6:	429a      	cmp	r2, r3
 800f1e8:	f2c0 80e4 	blt.w	800f3b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f1ec:	2b00      	cmp	r3, #0
 800f1ee:	f300 80e2 	bgt.w	800f3b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f1f2:	6967      	ldr	r7, [r4, #20]
 800f1f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f1f6:	443b      	add	r3, r7
 800f1f8:	461f      	mov	r7, r3
 800f1fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f1fc:	1bdf      	subs	r7, r3, r7
 800f1fe:	4297      	cmp	r7, r2
 800f200:	bfa8      	it	ge
 800f202:	4617      	movge	r7, r2
 800f204:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f208:	2f00      	cmp	r7, #0
 800f20a:	f340 8166 	ble.w	800f4da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f20e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f210:	6829      	ldr	r1, [r5, #0]
 800f212:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f216:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f21a:	6820      	ldr	r0, [r4, #0]
 800f21c:	4411      	add	r1, r2
 800f21e:	4299      	cmp	r1, r3
 800f220:	dd1a      	ble.n	800f258 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f222:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f226:	440b      	add	r3, r1
 800f228:	4402      	add	r2, r0
 800f22a:	b21b      	sxth	r3, r3
 800f22c:	429a      	cmp	r2, r3
 800f22e:	dc13      	bgt.n	800f258 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f230:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f232:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f234:	681b      	ldr	r3, [r3, #0]
 800f236:	9206      	str	r2, [sp, #24]
 800f238:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f23a:	9205      	str	r2, [sp, #20]
 800f23c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f23e:	9500      	str	r5, [sp, #0]
 800f240:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f244:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f246:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f248:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f24c:	a912      	add	r1, sp, #72	; 0x48
 800f24e:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800f252:	aa49      	add	r2, sp, #292	; 0x124
 800f254:	4623      	mov	r3, r4
 800f256:	47c8      	blx	r9
 800f258:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f25c:	441a      	add	r2, r3
 800f25e:	6963      	ldr	r3, [r4, #20]
 800f260:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f264:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f268:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f26c:	68a1      	ldr	r1, [r4, #8]
 800f26e:	ed94 6a08 	vldr	s12, [r4, #32]
 800f272:	6022      	str	r2, [r4, #0]
 800f274:	3301      	adds	r3, #1
 800f276:	6163      	str	r3, [r4, #20]
 800f278:	69a3      	ldr	r3, [r4, #24]
 800f27a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f27e:	3b01      	subs	r3, #1
 800f280:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f284:	61a3      	str	r3, [r4, #24]
 800f286:	6923      	ldr	r3, [r4, #16]
 800f288:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f28c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f290:	edd4 6a07 	vldr	s13, [r4, #28]
 800f294:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f298:	440b      	add	r3, r1
 800f29a:	68e1      	ldr	r1, [r4, #12]
 800f29c:	6123      	str	r3, [r4, #16]
 800f29e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f2a2:	428b      	cmp	r3, r1
 800f2a4:	edc4 6a07 	vstr	s13, [r4, #28]
 800f2a8:	db15      	blt.n	800f2d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f2aa:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f2ae:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f2b2:	3201      	adds	r2, #1
 800f2b4:	edc4 6a07 	vstr	s13, [r4, #28]
 800f2b8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f2bc:	6022      	str	r2, [r4, #0]
 800f2be:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f2c2:	1a5b      	subs	r3, r3, r1
 800f2c4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f2c8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f2cc:	6123      	str	r3, [r4, #16]
 800f2ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f2d2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f2d6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f2da:	441a      	add	r2, r3
 800f2dc:	696b      	ldr	r3, [r5, #20]
 800f2de:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f2e2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f2e6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f2ea:	68a9      	ldr	r1, [r5, #8]
 800f2ec:	ed95 6a08 	vldr	s12, [r5, #32]
 800f2f0:	602a      	str	r2, [r5, #0]
 800f2f2:	3301      	adds	r3, #1
 800f2f4:	616b      	str	r3, [r5, #20]
 800f2f6:	69ab      	ldr	r3, [r5, #24]
 800f2f8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f2fc:	3b01      	subs	r3, #1
 800f2fe:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f302:	61ab      	str	r3, [r5, #24]
 800f304:	692b      	ldr	r3, [r5, #16]
 800f306:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f30a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f30e:	edd5 6a07 	vldr	s13, [r5, #28]
 800f312:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f316:	440b      	add	r3, r1
 800f318:	68e9      	ldr	r1, [r5, #12]
 800f31a:	612b      	str	r3, [r5, #16]
 800f31c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f320:	428b      	cmp	r3, r1
 800f322:	edc5 6a07 	vstr	s13, [r5, #28]
 800f326:	db15      	blt.n	800f354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f328:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f32c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f330:	3201      	adds	r2, #1
 800f332:	edc5 6a07 	vstr	s13, [r5, #28]
 800f336:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f33a:	602a      	str	r2, [r5, #0]
 800f33c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f340:	1a5b      	subs	r3, r3, r1
 800f342:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f346:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f34a:	612b      	str	r3, [r5, #16]
 800f34c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f350:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f354:	3f01      	subs	r7, #1
 800f356:	e757      	b.n	800f208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f358:	4299      	cmp	r1, r3
 800f35a:	dc13      	bgt.n	800f384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f35c:	429a      	cmp	r2, r3
 800f35e:	da14      	bge.n	800f38a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f360:	2502      	movs	r5, #2
 800f362:	2703      	movs	r7, #3
 800f364:	46a9      	mov	r9, r5
 800f366:	f04f 0800 	mov.w	r8, #0
 800f36a:	f04f 0a01 	mov.w	sl, #1
 800f36e:	e6ef      	b.n	800f150 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f370:	2501      	movs	r5, #1
 800f372:	2700      	movs	r7, #0
 800f374:	46a9      	mov	r9, r5
 800f376:	46b8      	mov	r8, r7
 800f378:	f04f 0a02 	mov.w	sl, #2
 800f37c:	e6e8      	b.n	800f150 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f37e:	2501      	movs	r5, #1
 800f380:	2702      	movs	r7, #2
 800f382:	e6e1      	b.n	800f148 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f384:	2500      	movs	r5, #0
 800f386:	2701      	movs	r7, #1
 800f388:	e7f4      	b.n	800f374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f38a:	2702      	movs	r7, #2
 800f38c:	2503      	movs	r5, #3
 800f38e:	f04f 0900 	mov.w	r9, #0
 800f392:	46b8      	mov	r8, r7
 800f394:	e7e9      	b.n	800f36a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f396:	4613      	mov	r3, r2
 800f398:	e728      	b.n	800f1ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f39a:	bf00      	nop
 800f39c:	2000eb08 	.word	0x2000eb08
 800f3a0:	fffd8f01 	.word	0xfffd8f01
 800f3a4:	00027100 	.word	0x00027100
 800f3a8:	0004e1ff 	.word	0x0004e1ff
 800f3ac:	0004e1fe 	.word	0x0004e1fe
 800f3b0:	2000eb10 	.word	0x2000eb10
 800f3b4:	4613      	mov	r3, r2
 800f3b6:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f3b8:	9111      	str	r1, [sp, #68]	; 0x44
 800f3ba:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800f3be:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800f3c2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800f3c4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800f3c8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800f3cc:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800f3d0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800f3d4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800f3d8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800f3dc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800f3e0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800f3e4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800f3e8:	469e      	mov	lr, r3
 800f3ea:	469c      	mov	ip, r3
 800f3ec:	f04f 0900 	mov.w	r9, #0
 800f3f0:	f1bc 0f00 	cmp.w	ip, #0
 800f3f4:	d147      	bne.n	800f486 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f3f6:	eb03 0c07 	add.w	ip, r3, r7
 800f3fa:	1ad7      	subs	r7, r2, r3
 800f3fc:	f1b9 0f00 	cmp.w	r9, #0
 800f400:	d009      	beq.n	800f416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f402:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800f406:	9029      	str	r0, [sp, #164]	; 0xa4
 800f408:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800f40c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800f410:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800f414:	912d      	str	r1, [sp, #180]	; 0xb4
 800f416:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f418:	9111      	str	r1, [sp, #68]	; 0x44
 800f41a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f41e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f422:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f426:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f42a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f42e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f432:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f436:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f43a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f43e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f442:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f446:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f44a:	f04f 0800 	mov.w	r8, #0
 800f44e:	f1be 0f00 	cmp.w	lr, #0
 800f452:	d031      	beq.n	800f4b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f454:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f456:	4431      	add	r1, r6
 800f458:	4549      	cmp	r1, r9
 800f45a:	4450      	add	r0, sl
 800f45c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f460:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f464:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f468:	db08      	blt.n	800f47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f46a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f46e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f472:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f476:	3001      	adds	r0, #1
 800f478:	eba1 0109 	sub.w	r1, r1, r9
 800f47c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f480:	f04f 0801 	mov.w	r8, #1
 800f484:	e7e3      	b.n	800f44e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f486:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f488:	4431      	add	r1, r6
 800f48a:	4541      	cmp	r1, r8
 800f48c:	4450      	add	r0, sl
 800f48e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f492:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f496:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f49a:	db08      	blt.n	800f4ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f49c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f4a0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f4a4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f4a8:	3001      	adds	r0, #1
 800f4aa:	eba1 0108 	sub.w	r1, r1, r8
 800f4ae:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f4b2:	f04f 0901 	mov.w	r9, #1
 800f4b6:	e79b      	b.n	800f3f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f4b8:	449c      	add	ip, r3
 800f4ba:	1aff      	subs	r7, r7, r3
 800f4bc:	f1b8 0f00 	cmp.w	r8, #0
 800f4c0:	d009      	beq.n	800f4d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f4c2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f4c6:	9019      	str	r0, [sp, #100]	; 0x64
 800f4c8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f4cc:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f4d0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f4d4:	911d      	str	r1, [sp, #116]	; 0x74
 800f4d6:	1ad2      	subs	r2, r2, r3
 800f4d8:	e68b      	b.n	800f1f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f4da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f4dc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f4de:	2b00      	cmp	r3, #0
 800f4e0:	f000 80d1 	beq.w	800f686 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f4e4:	ad19      	add	r5, sp, #100	; 0x64
 800f4e6:	ac39      	add	r4, sp, #228	; 0xe4
 800f4e8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f4ea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f4ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f4f2:	930c      	str	r3, [sp, #48]	; 0x30
 800f4f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f4f6:	6963      	ldr	r3, [r4, #20]
 800f4f8:	440b      	add	r3, r1
 800f4fa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f4fe:	4408      	add	r0, r1
 800f500:	b200      	sxth	r0, r0
 800f502:	4283      	cmp	r3, r0
 800f504:	900d      	str	r0, [sp, #52]	; 0x34
 800f506:	f280 80c1 	bge.w	800f68c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f50a:	428b      	cmp	r3, r1
 800f50c:	da08      	bge.n	800f520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f50e:	2a00      	cmp	r2, #0
 800f510:	dd06      	ble.n	800f520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f512:	1acb      	subs	r3, r1, r3
 800f514:	429a      	cmp	r2, r3
 800f516:	f2c0 80bb 	blt.w	800f690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f51a:	2b00      	cmp	r3, #0
 800f51c:	f300 80b9 	bgt.w	800f692 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f520:	6967      	ldr	r7, [r4, #20]
 800f522:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f524:	443b      	add	r3, r7
 800f526:	461f      	mov	r7, r3
 800f528:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f52a:	1bdf      	subs	r7, r3, r7
 800f52c:	4297      	cmp	r7, r2
 800f52e:	bfa8      	it	ge
 800f530:	4617      	movge	r7, r2
 800f532:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f536:	2f00      	cmp	r7, #0
 800f538:	f340 813c 	ble.w	800f7b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f53c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f53e:	6829      	ldr	r1, [r5, #0]
 800f540:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f544:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f548:	6820      	ldr	r0, [r4, #0]
 800f54a:	4411      	add	r1, r2
 800f54c:	4299      	cmp	r1, r3
 800f54e:	dd1a      	ble.n	800f586 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f550:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f554:	440b      	add	r3, r1
 800f556:	4402      	add	r2, r0
 800f558:	b21b      	sxth	r3, r3
 800f55a:	429a      	cmp	r2, r3
 800f55c:	dc13      	bgt.n	800f586 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f55e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f560:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f562:	681b      	ldr	r3, [r3, #0]
 800f564:	9206      	str	r2, [sp, #24]
 800f566:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f568:	9205      	str	r2, [sp, #20]
 800f56a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f56c:	9500      	str	r5, [sp, #0]
 800f56e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f572:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f574:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f576:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f57a:	a912      	add	r1, sp, #72	; 0x48
 800f57c:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800f580:	aa49      	add	r2, sp, #292	; 0x124
 800f582:	4623      	mov	r3, r4
 800f584:	47c8      	blx	r9
 800f586:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f58a:	441a      	add	r2, r3
 800f58c:	6963      	ldr	r3, [r4, #20]
 800f58e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f592:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f596:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f59a:	68a1      	ldr	r1, [r4, #8]
 800f59c:	ed94 6a08 	vldr	s12, [r4, #32]
 800f5a0:	6022      	str	r2, [r4, #0]
 800f5a2:	3301      	adds	r3, #1
 800f5a4:	6163      	str	r3, [r4, #20]
 800f5a6:	69a3      	ldr	r3, [r4, #24]
 800f5a8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f5ac:	3b01      	subs	r3, #1
 800f5ae:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f5b2:	61a3      	str	r3, [r4, #24]
 800f5b4:	6923      	ldr	r3, [r4, #16]
 800f5b6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f5ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5be:	edd4 6a07 	vldr	s13, [r4, #28]
 800f5c2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f5c6:	440b      	add	r3, r1
 800f5c8:	68e1      	ldr	r1, [r4, #12]
 800f5ca:	6123      	str	r3, [r4, #16]
 800f5cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f5d0:	428b      	cmp	r3, r1
 800f5d2:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5d6:	db15      	blt.n	800f604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f5d8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f5dc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f5e0:	3201      	adds	r2, #1
 800f5e2:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5e6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f5ea:	6022      	str	r2, [r4, #0]
 800f5ec:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f5f0:	1a5b      	subs	r3, r3, r1
 800f5f2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f5f6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f5fa:	6123      	str	r3, [r4, #16]
 800f5fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f600:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f604:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f608:	441a      	add	r2, r3
 800f60a:	696b      	ldr	r3, [r5, #20]
 800f60c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f610:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f614:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f618:	68a9      	ldr	r1, [r5, #8]
 800f61a:	ed95 6a08 	vldr	s12, [r5, #32]
 800f61e:	602a      	str	r2, [r5, #0]
 800f620:	3301      	adds	r3, #1
 800f622:	616b      	str	r3, [r5, #20]
 800f624:	69ab      	ldr	r3, [r5, #24]
 800f626:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f62a:	3b01      	subs	r3, #1
 800f62c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f630:	61ab      	str	r3, [r5, #24]
 800f632:	692b      	ldr	r3, [r5, #16]
 800f634:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f638:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f63c:	edd5 6a07 	vldr	s13, [r5, #28]
 800f640:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f644:	440b      	add	r3, r1
 800f646:	68e9      	ldr	r1, [r5, #12]
 800f648:	612b      	str	r3, [r5, #16]
 800f64a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f64e:	428b      	cmp	r3, r1
 800f650:	edc5 6a07 	vstr	s13, [r5, #28]
 800f654:	db15      	blt.n	800f682 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f656:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f65a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f65e:	3201      	adds	r2, #1
 800f660:	edc5 6a07 	vstr	s13, [r5, #28]
 800f664:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f668:	602a      	str	r2, [r5, #0]
 800f66a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f66e:	1a5b      	subs	r3, r3, r1
 800f670:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f674:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f678:	612b      	str	r3, [r5, #16]
 800f67a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f67e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f682:	3f01      	subs	r7, #1
 800f684:	e757      	b.n	800f536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f686:	ad39      	add	r5, sp, #228	; 0xe4
 800f688:	ac19      	add	r4, sp, #100	; 0x64
 800f68a:	e72d      	b.n	800f4e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f68c:	4613      	mov	r3, r2
 800f68e:	e744      	b.n	800f51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f690:	4613      	mov	r3, r2
 800f692:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f696:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f698:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f69c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f6a0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f6a4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f6a8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f6ac:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f6b0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f6b4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f6b6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f6ba:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f6be:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f6c2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f6c6:	960e      	str	r6, [sp, #56]	; 0x38
 800f6c8:	469e      	mov	lr, r3
 800f6ca:	461f      	mov	r7, r3
 800f6cc:	f04f 0900 	mov.w	r9, #0
 800f6d0:	2f00      	cmp	r7, #0
 800f6d2:	d146      	bne.n	800f762 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f6d4:	449c      	add	ip, r3
 800f6d6:	1ad7      	subs	r7, r2, r3
 800f6d8:	f1b9 0f00 	cmp.w	r9, #0
 800f6dc:	d009      	beq.n	800f6f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f6de:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f6e2:	9039      	str	r0, [sp, #228]	; 0xe4
 800f6e4:	913d      	str	r1, [sp, #244]	; 0xf4
 800f6e6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f6ea:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f6ee:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f6f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f6f4:	910e      	str	r1, [sp, #56]	; 0x38
 800f6f6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f6fa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f6fe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f702:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f706:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f70a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f70e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f712:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f716:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f71a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f71e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f722:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f726:	f04f 0800 	mov.w	r8, #0
 800f72a:	f1be 0f00 	cmp.w	lr, #0
 800f72e:	d030      	beq.n	800f792 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f730:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f732:	4431      	add	r1, r6
 800f734:	4549      	cmp	r1, r9
 800f736:	4450      	add	r0, sl
 800f738:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f73c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f740:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f744:	db08      	blt.n	800f758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f746:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f74a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f74e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f752:	3001      	adds	r0, #1
 800f754:	eba1 0109 	sub.w	r1, r1, r9
 800f758:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f75c:	f04f 0801 	mov.w	r8, #1
 800f760:	e7e3      	b.n	800f72a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f762:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f764:	4431      	add	r1, r6
 800f766:	4541      	cmp	r1, r8
 800f768:	4450      	add	r0, sl
 800f76a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f76e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f772:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f776:	db08      	blt.n	800f78a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f778:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f77c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f780:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f784:	3001      	adds	r0, #1
 800f786:	eba1 0108 	sub.w	r1, r1, r8
 800f78a:	3f01      	subs	r7, #1
 800f78c:	f04f 0901 	mov.w	r9, #1
 800f790:	e79e      	b.n	800f6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f792:	449c      	add	ip, r3
 800f794:	1aff      	subs	r7, r7, r3
 800f796:	f1b8 0f00 	cmp.w	r8, #0
 800f79a:	d009      	beq.n	800f7b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f79c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f7a0:	9019      	str	r0, [sp, #100]	; 0x64
 800f7a2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f7a6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f7aa:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f7ae:	911d      	str	r1, [sp, #116]	; 0x74
 800f7b0:	1ad2      	subs	r2, r2, r3
 800f7b2:	e6b5      	b.n	800f520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f7b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f7b6:	681b      	ldr	r3, [r3, #0]
 800f7b8:	b923      	cbnz	r3, 800f7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f7ba:	4b04      	ldr	r3, [pc, #16]	; (800f7cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f7bc:	6818      	ldr	r0, [r3, #0]
 800f7be:	6803      	ldr	r3, [r0, #0]
 800f7c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f7c2:	4798      	blx	r3
 800f7c4:	b05b      	add	sp, #364	; 0x16c
 800f7c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7ca:	bf00      	nop
 800f7cc:	2000eb10 	.word	0x2000eb10

0800f7d0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800f7d0:	b570      	push	{r4, r5, r6, lr}
 800f7d2:	4604      	mov	r4, r0
 800f7d4:	2500      	movs	r5, #0
 800f7d6:	7223      	strb	r3, [r4, #8]
 800f7d8:	9804      	ldr	r0, [sp, #16]
 800f7da:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f7de:	8025      	strh	r5, [r4, #0]
 800f7e0:	6061      	str	r1, [r4, #4]
 800f7e2:	7263      	strb	r3, [r4, #9]
 800f7e4:	60e0      	str	r0, [r4, #12]
 800f7e6:	8222      	strh	r2, [r4, #16]
 800f7e8:	8265      	strh	r5, [r4, #18]
 800f7ea:	82a5      	strh	r5, [r4, #20]
 800f7ec:	82e5      	strh	r5, [r4, #22]
 800f7ee:	8325      	strh	r5, [r4, #24]
 800f7f0:	8365      	strh	r5, [r4, #26]
 800f7f2:	83a5      	strh	r5, [r4, #28]
 800f7f4:	77a5      	strb	r5, [r4, #30]
 800f7f6:	6803      	ldr	r3, [r0, #0]
 800f7f8:	695b      	ldr	r3, [r3, #20]
 800f7fa:	4798      	blx	r3
 800f7fc:	4606      	mov	r6, r0
 800f7fe:	b1f8      	cbz	r0, 800f840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f800:	68e0      	ldr	r0, [r4, #12]
 800f802:	6803      	ldr	r3, [r0, #0]
 800f804:	4631      	mov	r1, r6
 800f806:	68db      	ldr	r3, [r3, #12]
 800f808:	4798      	blx	r3
 800f80a:	7b43      	ldrb	r3, [r0, #13]
 800f80c:	7a82      	ldrb	r2, [r0, #10]
 800f80e:	005b      	lsls	r3, r3, #1
 800f810:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f814:	4313      	orrs	r3, r2
 800f816:	83a3      	strh	r3, [r4, #28]
 800f818:	7a63      	ldrb	r3, [r4, #9]
 800f81a:	2b04      	cmp	r3, #4
 800f81c:	4605      	mov	r5, r0
 800f81e:	d10f      	bne.n	800f840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f820:	68e0      	ldr	r0, [r4, #12]
 800f822:	6803      	ldr	r3, [r0, #0]
 800f824:	462a      	mov	r2, r5
 800f826:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f828:	4631      	mov	r1, r6
 800f82a:	4798      	blx	r3
 800f82c:	7b6b      	ldrb	r3, [r5, #13]
 800f82e:	005b      	lsls	r3, r3, #1
 800f830:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f834:	7aab      	ldrb	r3, [r5, #10]
 800f836:	4313      	orrs	r3, r2
 800f838:	4418      	add	r0, r3
 800f83a:	8ba3      	ldrh	r3, [r4, #28]
 800f83c:	4418      	add	r0, r3
 800f83e:	83a0      	strh	r0, [r4, #28]
 800f840:	4620      	mov	r0, r4
 800f842:	bd70      	pop	{r4, r5, r6, pc}

0800f844 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f848:	2400      	movs	r4, #0
 800f84a:	b085      	sub	sp, #20
 800f84c:	4681      	mov	r9, r0
 800f84e:	4688      	mov	r8, r1
 800f850:	4692      	mov	sl, r2
 800f852:	469b      	mov	fp, r3
 800f854:	4627      	mov	r7, r4
 800f856:	4625      	mov	r5, r4
 800f858:	4626      	mov	r6, r4
 800f85a:	4554      	cmp	r4, sl
 800f85c:	da2a      	bge.n	800f8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f85e:	2300      	movs	r3, #0
 800f860:	9303      	str	r3, [sp, #12]
 800f862:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f866:	429d      	cmp	r5, r3
 800f868:	d004      	beq.n	800f874 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f86a:	f242 030b 	movw	r3, #8203	; 0x200b
 800f86e:	429d      	cmp	r5, r3
 800f870:	bf18      	it	ne
 800f872:	462f      	movne	r7, r5
 800f874:	ab03      	add	r3, sp, #12
 800f876:	4642      	mov	r2, r8
 800f878:	4659      	mov	r1, fp
 800f87a:	4648      	mov	r0, r9
 800f87c:	f002 ff42 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f880:	4605      	mov	r5, r0
 800f882:	b1b8      	cbz	r0, 800f8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f884:	280a      	cmp	r0, #10
 800f886:	d015      	beq.n	800f8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f888:	9a03      	ldr	r2, [sp, #12]
 800f88a:	b18a      	cbz	r2, 800f8b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f88c:	7b50      	ldrb	r0, [r2, #13]
 800f88e:	7a93      	ldrb	r3, [r2, #10]
 800f890:	8895      	ldrh	r5, [r2, #4]
 800f892:	0040      	lsls	r0, r0, #1
 800f894:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f898:	4303      	orrs	r3, r0
 800f89a:	9301      	str	r3, [sp, #4]
 800f89c:	f8d8 3000 	ldr.w	r3, [r8]
 800f8a0:	4639      	mov	r1, r7
 800f8a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f8a4:	4640      	mov	r0, r8
 800f8a6:	4798      	blx	r3
 800f8a8:	9b01      	ldr	r3, [sp, #4]
 800f8aa:	4418      	add	r0, r3
 800f8ac:	4406      	add	r6, r0
 800f8ae:	b2b6      	uxth	r6, r6
 800f8b0:	3401      	adds	r4, #1
 800f8b2:	e7d2      	b.n	800f85a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f8b4:	4630      	mov	r0, r6
 800f8b6:	b005      	add	sp, #20
 800f8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f8bc:	2a02      	cmp	r2, #2
 800f8be:	b530      	push	{r4, r5, lr}
 800f8c0:	d011      	beq.n	800f8e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f8c2:	2a03      	cmp	r2, #3
 800f8c4:	d01c      	beq.n	800f900 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f8c6:	2a01      	cmp	r2, #1
 800f8c8:	d10c      	bne.n	800f8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f8ca:	888b      	ldrh	r3, [r1, #4]
 800f8cc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f8d0:	8801      	ldrh	r1, [r0, #0]
 800f8d2:	8844      	ldrh	r4, [r0, #2]
 800f8d4:	8004      	strh	r4, [r0, #0]
 800f8d6:	1a9b      	subs	r3, r3, r2
 800f8d8:	1a5b      	subs	r3, r3, r1
 800f8da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f8de:	8043      	strh	r3, [r0, #2]
 800f8e0:	8081      	strh	r1, [r0, #4]
 800f8e2:	80c2      	strh	r2, [r0, #6]
 800f8e4:	bd30      	pop	{r4, r5, pc}
 800f8e6:	88cb      	ldrh	r3, [r1, #6]
 800f8e8:	88c2      	ldrh	r2, [r0, #6]
 800f8ea:	1a9b      	subs	r3, r3, r2
 800f8ec:	8842      	ldrh	r2, [r0, #2]
 800f8ee:	1a9b      	subs	r3, r3, r2
 800f8f0:	888a      	ldrh	r2, [r1, #4]
 800f8f2:	8881      	ldrh	r1, [r0, #4]
 800f8f4:	8043      	strh	r3, [r0, #2]
 800f8f6:	1a52      	subs	r2, r2, r1
 800f8f8:	8801      	ldrh	r1, [r0, #0]
 800f8fa:	1a52      	subs	r2, r2, r1
 800f8fc:	8002      	strh	r2, [r0, #0]
 800f8fe:	e7f1      	b.n	800f8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f900:	88cb      	ldrh	r3, [r1, #6]
 800f902:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f906:	8841      	ldrh	r1, [r0, #2]
 800f908:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f90c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f910:	8045      	strh	r5, [r0, #2]
 800f912:	1a9b      	subs	r3, r3, r2
 800f914:	1a5b      	subs	r3, r3, r1
 800f916:	8003      	strh	r3, [r0, #0]
 800f918:	8082      	strh	r2, [r0, #4]
 800f91a:	80c4      	strh	r4, [r0, #6]
 800f91c:	e7e2      	b.n	800f8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f91e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f91e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f922:	b09f      	sub	sp, #124	; 0x7c
 800f924:	9116      	str	r1, [sp, #88]	; 0x58
 800f926:	9317      	str	r3, [sp, #92]	; 0x5c
 800f928:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f92a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f92c:	8809      	ldrh	r1, [r1, #0]
 800f92e:	889b      	ldrh	r3, [r3, #4]
 800f930:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f934:	9212      	str	r2, [sp, #72]	; 0x48
 800f936:	440b      	add	r3, r1
 800f938:	b21b      	sxth	r3, r3
 800f93a:	9310      	str	r3, [sp, #64]	; 0x40
 800f93c:	f8d8 3000 	ldr.w	r3, [r8]
 800f940:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f944:	7a59      	ldrb	r1, [r3, #9]
 800f946:	7a1b      	ldrb	r3, [r3, #8]
 800f948:	9315      	str	r3, [sp, #84]	; 0x54
 800f94a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f94c:	9011      	str	r0, [sp, #68]	; 0x44
 800f94e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f952:	9114      	str	r1, [sp, #80]	; 0x50
 800f954:	f9b3 5000 	ldrsh.w	r5, [r3]
 800f958:	2a00      	cmp	r2, #0
 800f95a:	d067      	beq.n	800fa2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800f95c:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f960:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f962:	2b04      	cmp	r3, #4
 800f964:	bf14      	ite	ne
 800f966:	2301      	movne	r3, #1
 800f968:	2302      	moveq	r3, #2
 800f96a:	4413      	add	r3, r2
 800f96c:	f04f 0900 	mov.w	r9, #0
 800f970:	930f      	str	r3, [sp, #60]	; 0x3c
 800f972:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f976:	464c      	mov	r4, r9
 800f978:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f97c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f980:	4293      	cmp	r3, r2
 800f982:	f280 808c 	bge.w	800fa9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f986:	2300      	movs	r3, #0
 800f988:	931c      	str	r3, [sp, #112]	; 0x70
 800f98a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f98e:	429c      	cmp	r4, r3
 800f990:	d006      	beq.n	800f9a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800f992:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f994:	f242 020b 	movw	r2, #8203	; 0x200b
 800f998:	4294      	cmp	r4, r2
 800f99a:	bf18      	it	ne
 800f99c:	4623      	movne	r3, r4
 800f99e:	930d      	str	r3, [sp, #52]	; 0x34
 800f9a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f9a2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f9a4:	f8d8 2000 	ldr.w	r2, [r8]
 800f9a8:	428b      	cmp	r3, r1
 800f9aa:	db41      	blt.n	800fa30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f9ac:	6813      	ldr	r3, [r2, #0]
 800f9ae:	4610      	mov	r0, r2
 800f9b0:	695b      	ldr	r3, [r3, #20]
 800f9b2:	4798      	blx	r3
 800f9b4:	4604      	mov	r4, r0
 800f9b6:	f8d8 0000 	ldr.w	r0, [r8]
 800f9ba:	6803      	ldr	r3, [r0, #0]
 800f9bc:	aa1d      	add	r2, sp, #116	; 0x74
 800f9be:	689e      	ldr	r6, [r3, #8]
 800f9c0:	4621      	mov	r1, r4
 800f9c2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f9c6:	47b0      	blx	r6
 800f9c8:	901c      	str	r0, [sp, #112]	; 0x70
 800f9ca:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f9ce:	429c      	cmp	r4, r3
 800f9d0:	f000 80e9 	beq.w	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f9d4:	f242 030b 	movw	r3, #8203	; 0x200b
 800f9d8:	429c      	cmp	r4, r3
 800f9da:	f000 80e4 	beq.w	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f9de:	2c00      	cmp	r4, #0
 800f9e0:	f000 80f6 	beq.w	800fbd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800f9e4:	2c0a      	cmp	r4, #10
 800f9e6:	d060      	beq.n	800faaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f9e8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f9ea:	b36a      	cbz	r2, 800fa48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800f9ec:	8894      	ldrh	r4, [r2, #4]
 800f9ee:	f1bb 0f00 	cmp.w	fp, #0
 800f9f2:	d03b      	beq.n	800fa6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800f9f4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f9f8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f9fc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800fa00:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fa04:	f1bb 0f01 	cmp.w	fp, #1
 800fa08:	ea49 0903 	orr.w	r9, r9, r3
 800fa0c:	d134      	bne.n	800fa78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800fa0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa10:	eba5 0509 	sub.w	r5, r5, r9
 800fa14:	2b00      	cmp	r3, #0
 800fa16:	d14f      	bne.n	800fab8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fa18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fa1a:	eb09 0305 	add.w	r3, r9, r5
 800fa1e:	4413      	add	r3, r2
 800fa20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800fa22:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fa26:	4293      	cmp	r3, r2
 800fa28:	da51      	bge.n	800face <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800fa2a:	e038      	b.n	800fa9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fa2c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fa2e:	e79d      	b.n	800f96c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800fa30:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800fa34:	9301      	str	r3, [sp, #4]
 800fa36:	ab1d      	add	r3, sp, #116	; 0x74
 800fa38:	9300      	str	r3, [sp, #0]
 800fa3a:	4659      	mov	r1, fp
 800fa3c:	ab1c      	add	r3, sp, #112	; 0x70
 800fa3e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fa40:	f002 feb8 	bl	80127b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fa44:	4604      	mov	r4, r0
 800fa46:	e7c0      	b.n	800f9ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800fa48:	f8d8 0000 	ldr.w	r0, [r8]
 800fa4c:	6803      	ldr	r3, [r0, #0]
 800fa4e:	691b      	ldr	r3, [r3, #16]
 800fa50:	4798      	blx	r3
 800fa52:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fa56:	4298      	cmp	r0, r3
 800fa58:	f000 80a5 	beq.w	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800fa5c:	f242 030b 	movw	r3, #8203	; 0x200b
 800fa60:	4298      	cmp	r0, r3
 800fa62:	f000 80a0 	beq.w	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800fa66:	f1bb 0f00 	cmp.w	fp, #0
 800fa6a:	d100      	bne.n	800fa6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800fa6c:	444d      	add	r5, r9
 800fa6e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fa70:	2a00      	cmp	r2, #0
 800fa72:	d1bf      	bne.n	800f9f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800fa74:	4691      	mov	r9, r2
 800fa76:	e096      	b.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800fa78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa7a:	2b00      	cmp	r3, #0
 800fa7c:	f000 80aa 	beq.w	800fbd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800fa80:	f1bb 0f00 	cmp.w	fp, #0
 800fa84:	d118      	bne.n	800fab8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fa86:	f8d8 0000 	ldr.w	r0, [r8]
 800fa8a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fa8c:	6803      	ldr	r3, [r0, #0]
 800fa8e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa90:	4798      	blx	r3
 800fa92:	4405      	add	r5, r0
 800fa94:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fa96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fa98:	1aeb      	subs	r3, r5, r3
 800fa9a:	4293      	cmp	r3, r2
 800fa9c:	dd17      	ble.n	800face <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800fa9e:	2c00      	cmp	r4, #0
 800faa0:	f000 8096 	beq.w	800fbd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800faa4:	2c0a      	cmp	r4, #10
 800faa6:	f040 8084 	bne.w	800fbb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800faaa:	240a      	movs	r4, #10
 800faac:	fab4 f084 	clz	r0, r4
 800fab0:	0940      	lsrs	r0, r0, #5
 800fab2:	b01f      	add	sp, #124	; 0x7c
 800fab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fab8:	f8d8 0000 	ldr.w	r0, [r8]
 800fabc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fabe:	6803      	ldr	r3, [r0, #0]
 800fac0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fac2:	4798      	blx	r3
 800fac4:	f1bb 0f01 	cmp.w	fp, #1
 800fac8:	eba5 0500 	sub.w	r5, r5, r0
 800facc:	d0a4      	beq.n	800fa18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800face:	981c      	ldr	r0, [sp, #112]	; 0x70
 800fad0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fad2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fad6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fada:	7b43      	ldrb	r3, [r0, #13]
 800fadc:	015b      	lsls	r3, r3, #5
 800fade:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fae2:	7983      	ldrb	r3, [r0, #6]
 800fae4:	4429      	add	r1, r5
 800fae6:	4313      	orrs	r3, r2
 800fae8:	440b      	add	r3, r1
 800faea:	42b3      	cmp	r3, r6
 800faec:	db5b      	blt.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800faee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800faf0:	4299      	cmp	r1, r3
 800faf2:	da58      	bge.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800faf4:	f8d8 0000 	ldr.w	r0, [r8]
 800faf8:	6803      	ldr	r3, [r0, #0]
 800fafa:	42ae      	cmp	r6, r5
 800fafc:	bfc8      	it	gt
 800fafe:	1b76      	subgt	r6, r6, r5
 800fb00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb02:	bfcc      	ite	gt
 800fb04:	b2b6      	uxthgt	r6, r6
 800fb06:	2600      	movle	r6, #0
 800fb08:	4798      	blx	r3
 800fb0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800fb0c:	7b5a      	ldrb	r2, [r3, #13]
 800fb0e:	00d1      	lsls	r1, r2, #3
 800fb10:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800fb14:	7a19      	ldrb	r1, [r3, #8]
 800fb16:	4339      	orrs	r1, r7
 800fb18:	0657      	lsls	r7, r2, #25
 800fb1a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800fb1c:	bf44      	itt	mi
 800fb1e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800fb22:	b209      	sxthmi	r1, r1
 800fb24:	19c7      	adds	r7, r0, r7
 800fb26:	1a7f      	subs	r7, r7, r1
 800fb28:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fb2a:	b2bf      	uxth	r7, r7
 800fb2c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fb30:	fa0f fa87 	sxth.w	sl, r7
 800fb34:	4551      	cmp	r1, sl
 800fb36:	dd3a      	ble.n	800fbae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fb38:	0112      	lsls	r2, r2, #4
 800fb3a:	79d8      	ldrb	r0, [r3, #7]
 800fb3c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fb40:	4302      	orrs	r2, r0
 800fb42:	4492      	add	sl, r2
 800fb44:	4551      	cmp	r1, sl
 800fb46:	dc2e      	bgt.n	800fba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800fb48:	1bcf      	subs	r7, r1, r7
 800fb4a:	b2bf      	uxth	r7, r7
 800fb4c:	468a      	mov	sl, r1
 800fb4e:	9319      	str	r3, [sp, #100]	; 0x64
 800fb50:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fb52:	f8d8 0000 	ldr.w	r0, [r8]
 800fb56:	681a      	ldr	r2, [r3, #0]
 800fb58:	6801      	ldr	r1, [r0, #0]
 800fb5a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800fb5c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fb5e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fb60:	9218      	str	r2, [sp, #96]	; 0x60
 800fb62:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800fb64:	4788      	blx	r1
 800fb66:	f898 1006 	ldrb.w	r1, [r8, #6]
 800fb6a:	910b      	str	r1, [sp, #44]	; 0x2c
 800fb6c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800fb70:	910a      	str	r1, [sp, #40]	; 0x28
 800fb72:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800fb76:	9109      	str	r1, [sp, #36]	; 0x24
 800fb78:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800fb7a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800fb7e:	9305      	str	r3, [sp, #20]
 800fb80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fb82:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800fb84:	9206      	str	r2, [sp, #24]
 800fb86:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fb8a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800fb8e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800fb92:	442e      	add	r6, r5
 800fb94:	b236      	sxth	r6, r6
 800fb96:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fb98:	9600      	str	r6, [sp, #0]
 800fb9a:	681a      	ldr	r2, [r3, #0]
 800fb9c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fb9e:	685b      	ldr	r3, [r3, #4]
 800fba0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fba2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fba4:	47b0      	blx	r6
 800fba6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fba8:	3301      	adds	r3, #1
 800fbaa:	930e      	str	r3, [sp, #56]	; 0x38
 800fbac:	e6e6      	b.n	800f97c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800fbae:	2700      	movs	r7, #0
 800fbb0:	e7cd      	b.n	800fb4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800fbb2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800fbb4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fbb6:	3501      	adds	r5, #1
 800fbb8:	429d      	cmp	r5, r3
 800fbba:	f6bf af77 	bge.w	800faac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fbbe:	4659      	mov	r1, fp
 800fbc0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fbc2:	f7f5 fd2b 	bl	800561c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fbc6:	4604      	mov	r4, r0
 800fbc8:	b110      	cbz	r0, 800fbd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800fbca:	280a      	cmp	r0, #10
 800fbcc:	d1f2      	bne.n	800fbb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800fbce:	e76c      	b.n	800faaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fbd0:	2400      	movs	r4, #0
 800fbd2:	e76b      	b.n	800faac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fbd4:	f1bb 0f00 	cmp.w	fp, #0
 800fbd8:	f43f af5c 	beq.w	800fa94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800fbdc:	e777      	b.n	800face <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800fbde <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fbde:	b530      	push	{r4, r5, lr}
 800fbe0:	8a44      	ldrh	r4, [r0, #18]
 800fbe2:	8ac5      	ldrh	r5, [r0, #22]
 800fbe4:	82c3      	strh	r3, [r0, #22]
 800fbe6:	442c      	add	r4, r5
 800fbe8:	1ae4      	subs	r4, r4, r3
 800fbea:	8244      	strh	r4, [r0, #18]
 800fbec:	8b03      	ldrh	r3, [r0, #24]
 800fbee:	8a84      	ldrh	r4, [r0, #20]
 800fbf0:	4422      	add	r2, r4
 800fbf2:	440c      	add	r4, r1
 800fbf4:	1a59      	subs	r1, r3, r1
 800fbf6:	8342      	strh	r2, [r0, #26]
 800fbf8:	8284      	strh	r4, [r0, #20]
 800fbfa:	8301      	strh	r1, [r0, #24]
 800fbfc:	bd30      	pop	{r4, r5, pc}

0800fbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800fbfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc02:	7a43      	ldrb	r3, [r0, #9]
 800fc04:	1eda      	subs	r2, r3, #3
 800fc06:	b087      	sub	sp, #28
 800fc08:	4604      	mov	r4, r0
 800fc0a:	b2d2      	uxtb	r2, r2
 800fc0c:	460f      	mov	r7, r1
 800fc0e:	2900      	cmp	r1, #0
 800fc10:	d036      	beq.n	800fc80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800fc12:	2a01      	cmp	r2, #1
 800fc14:	d932      	bls.n	800fc7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800fc16:	1e58      	subs	r0, r3, #1
 800fc18:	f1d0 0b00 	rsbs	fp, r0, #0
 800fc1c:	eb4b 0b00 	adc.w	fp, fp, r0
 800fc20:	1e99      	subs	r1, r3, #2
 800fc22:	424b      	negs	r3, r1
 800fc24:	414b      	adcs	r3, r1
 800fc26:	9303      	str	r3, [sp, #12]
 800fc28:	2300      	movs	r3, #0
 800fc2a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800fc2e:	2500      	movs	r5, #0
 800fc30:	8265      	strh	r5, [r4, #18]
 800fc32:	82a5      	strh	r5, [r4, #20]
 800fc34:	46a9      	mov	r9, r5
 800fc36:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800fc3a:	2300      	movs	r3, #0
 800fc3c:	9305      	str	r3, [sp, #20]
 800fc3e:	8823      	ldrh	r3, [r4, #0]
 800fc40:	2b20      	cmp	r3, #32
 800fc42:	d02b      	beq.n	800fc9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800fc44:	eba3 020a 	sub.w	r2, r3, sl
 800fc48:	4256      	negs	r6, r2
 800fc4a:	4156      	adcs	r6, r2
 800fc4c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800fc50:	4293      	cmp	r3, r2
 800fc52:	d004      	beq.n	800fc5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fc54:	4553      	cmp	r3, sl
 800fc56:	bf16      	itet	ne
 800fc58:	4699      	movne	r9, r3
 800fc5a:	2601      	moveq	r6, #1
 800fc5c:	2600      	movne	r6, #0
 800fc5e:	ab05      	add	r3, sp, #20
 800fc60:	68e2      	ldr	r2, [r4, #12]
 800fc62:	7a21      	ldrb	r1, [r4, #8]
 800fc64:	6860      	ldr	r0, [r4, #4]
 800fc66:	f002 fd4d 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fc6a:	8020      	strh	r0, [r4, #0]
 800fc6c:	b9c8      	cbnz	r0, 800fca2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800fc6e:	8b22      	ldrh	r2, [r4, #24]
 800fc70:	2300      	movs	r3, #0
 800fc72:	4611      	mov	r1, r2
 800fc74:	4620      	mov	r0, r4
 800fc76:	f7ff ffb2 	bl	800fbde <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fc7a:	e066      	b.n	800fd4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fc7c:	468b      	mov	fp, r1
 800fc7e:	e7cf      	b.n	800fc20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800fc80:	3b01      	subs	r3, #1
 800fc82:	2a01      	cmp	r2, #1
 800fc84:	bf8c      	ite	hi
 800fc86:	2200      	movhi	r2, #0
 800fc88:	2201      	movls	r2, #1
 800fc8a:	2b01      	cmp	r3, #1
 800fc8c:	bf8c      	ite	hi
 800fc8e:	2300      	movhi	r3, #0
 800fc90:	2301      	movls	r3, #1
 800fc92:	9202      	str	r2, [sp, #8]
 800fc94:	9301      	str	r3, [sp, #4]
 800fc96:	9103      	str	r1, [sp, #12]
 800fc98:	468b      	mov	fp, r1
 800fc9a:	e7c8      	b.n	800fc2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800fc9c:	4699      	mov	r9, r3
 800fc9e:	2601      	movs	r6, #1
 800fca0:	e7dd      	b.n	800fc5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800fca2:	8ae3      	ldrh	r3, [r4, #22]
 800fca4:	280a      	cmp	r0, #10
 800fca6:	f103 0301 	add.w	r3, r3, #1
 800fcaa:	82e3      	strh	r3, [r4, #22]
 800fcac:	d0df      	beq.n	800fc6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800fcae:	9a05      	ldr	r2, [sp, #20]
 800fcb0:	bb42      	cbnz	r2, 800fd04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800fcb2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fcb6:	4298      	cmp	r0, r3
 800fcb8:	d001      	beq.n	800fcbe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fcba:	4550      	cmp	r0, sl
 800fcbc:	d1bd      	bne.n	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fcbe:	8823      	ldrh	r3, [r4, #0]
 800fcc0:	8b21      	ldrh	r1, [r4, #24]
 800fcc2:	2b20      	cmp	r3, #32
 800fcc4:	d001      	beq.n	800fcca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800fcc6:	4553      	cmp	r3, sl
 800fcc8:	d131      	bne.n	800fd2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800fcca:	2e00      	cmp	r6, #0
 800fccc:	bf0a      	itet	eq
 800fcce:	460d      	moveq	r5, r1
 800fcd0:	4630      	movne	r0, r6
 800fcd2:	2001      	moveq	r0, #1
 800fcd4:	440a      	add	r2, r1
 800fcd6:	8aa3      	ldrh	r3, [r4, #20]
 800fcd8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fcdc:	b292      	uxth	r2, r2
 800fcde:	8322      	strh	r2, [r4, #24]
 800fce0:	4413      	add	r3, r2
 800fce2:	2f00      	cmp	r7, #0
 800fce4:	d03a      	beq.n	800fd5c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800fce6:	f1bb 0f00 	cmp.w	fp, #0
 800fcea:	d102      	bne.n	800fcf2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800fcec:	9903      	ldr	r1, [sp, #12]
 800fcee:	b301      	cbz	r1, 800fd32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fcf0:	b1f8      	cbz	r0, 800fd32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800fcf2:	8ba1      	ldrh	r1, [r4, #28]
 800fcf4:	4419      	add	r1, r3
 800fcf6:	458c      	cmp	ip, r1
 800fcf8:	da2a      	bge.n	800fd50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fcfa:	8a61      	ldrh	r1, [r4, #18]
 800fcfc:	b341      	cbz	r1, 800fd50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800fcfe:	4563      	cmp	r3, ip
 800fd00:	dd9b      	ble.n	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd02:	e01c      	b.n	800fd3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800fd04:	8893      	ldrh	r3, [r2, #4]
 800fd06:	8023      	strh	r3, [r4, #0]
 800fd08:	f892 800d 	ldrb.w	r8, [r2, #13]
 800fd0c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800fd10:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800fd14:	f892 800a 	ldrb.w	r8, [r2, #10]
 800fd18:	ea48 0800 	orr.w	r8, r8, r0
 800fd1c:	68e0      	ldr	r0, [r4, #12]
 800fd1e:	6803      	ldr	r3, [r0, #0]
 800fd20:	4649      	mov	r1, r9
 800fd22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fd24:	4798      	blx	r3
 800fd26:	eb08 0200 	add.w	r2, r8, r0
 800fd2a:	b292      	uxth	r2, r2
 800fd2c:	e7c7      	b.n	800fcbe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800fd2e:	2000      	movs	r0, #0
 800fd30:	e7d0      	b.n	800fcd4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800fd32:	4563      	cmp	r3, ip
 800fd34:	dd81      	ble.n	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd36:	8a63      	ldrh	r3, [r4, #18]
 800fd38:	2b00      	cmp	r3, #0
 800fd3a:	f43f af7e 	beq.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd3e:	2301      	movs	r3, #1
 800fd40:	77a3      	strb	r3, [r4, #30]
 800fd42:	8ba2      	ldrh	r2, [r4, #28]
 800fd44:	8b63      	ldrh	r3, [r4, #26]
 800fd46:	4413      	add	r3, r2
 800fd48:	8363      	strh	r3, [r4, #26]
 800fd4a:	b007      	add	sp, #28
 800fd4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd50:	2300      	movs	r3, #0
 800fd52:	4611      	mov	r1, r2
 800fd54:	4620      	mov	r0, r4
 800fd56:	f7ff ff42 	bl	800fbde <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fd5a:	e76e      	b.n	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd5c:	4563      	cmp	r3, ip
 800fd5e:	dd14      	ble.n	800fd8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800fd60:	9b02      	ldr	r3, [sp, #8]
 800fd62:	b113      	cbz	r3, 800fd6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800fd64:	2301      	movs	r3, #1
 800fd66:	460a      	mov	r2, r1
 800fd68:	e783      	b.n	800fc72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800fd6a:	9b01      	ldr	r3, [sp, #4]
 800fd6c:	2b00      	cmp	r3, #0
 800fd6e:	f43f af64 	beq.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd72:	2800      	cmp	r0, #0
 800fd74:	f47f af61 	bne.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd78:	b116      	cbz	r6, 800fd80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800fd7a:	2301      	movs	r3, #1
 800fd7c:	462a      	mov	r2, r5
 800fd7e:	e779      	b.n	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800fd80:	8a63      	ldrh	r3, [r4, #18]
 800fd82:	2b00      	cmp	r3, #0
 800fd84:	f43f af59 	beq.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd88:	e7df      	b.n	800fd4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800fd8a:	2800      	cmp	r0, #0
 800fd8c:	f47f af55 	bne.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd90:	2e00      	cmp	r6, #0
 800fd92:	f43f af52 	beq.w	800fc3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800fd96:	2301      	movs	r3, #1
 800fd98:	462a      	mov	r2, r5
 800fd9a:	e7db      	b.n	800fd54 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800fd9c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800fd9c:	b530      	push	{r4, r5, lr}
 800fd9e:	4605      	mov	r5, r0
 800fda0:	b08b      	sub	sp, #44	; 0x2c
 800fda2:	b191      	cbz	r1, 800fdca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800fda4:	e9cd 3100 	strd	r3, r1, [sp]
 800fda8:	4613      	mov	r3, r2
 800fdaa:	4601      	mov	r1, r0
 800fdac:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800fdb0:	a802      	add	r0, sp, #8
 800fdb2:	f7ff fd0d 	bl	800f7d0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800fdb6:	2401      	movs	r4, #1
 800fdb8:	2100      	movs	r1, #0
 800fdba:	a802      	add	r0, sp, #8
 800fdbc:	f7ff ff1f 	bl	800fbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800fdc0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800fdc4:	b163      	cbz	r3, 800fde0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800fdc6:	3401      	adds	r4, #1
 800fdc8:	e7f6      	b.n	800fdb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800fdca:	f002 fd93 	bl	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fdce:	2401      	movs	r4, #1
 800fdd0:	280a      	cmp	r0, #10
 800fdd2:	4628      	mov	r0, r5
 800fdd4:	bf08      	it	eq
 800fdd6:	3401      	addeq	r4, #1
 800fdd8:	f002 fd8c 	bl	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fddc:	2800      	cmp	r0, #0
 800fdde:	d1f7      	bne.n	800fdd0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800fde0:	b2a0      	uxth	r0, r4
 800fde2:	b00b      	add	sp, #44	; 0x2c
 800fde4:	bd30      	pop	{r4, r5, pc}

0800fde6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fde6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdea:	b0df      	sub	sp, #380	; 0x17c
 800fdec:	4689      	mov	r9, r1
 800fdee:	f8dd a1a0 	ldr.w	sl, [sp, #416]	; 0x1a0
 800fdf2:	900a      	str	r0, [sp, #40]	; 0x28
 800fdf4:	461c      	mov	r4, r3
 800fdf6:	f1ba 0f00 	cmp.w	sl, #0
 800fdfa:	f000 80b1 	beq.w	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800fdfe:	681b      	ldr	r3, [r3, #0]
 800fe00:	2b00      	cmp	r3, #0
 800fe02:	f000 80ad 	beq.w	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800fe06:	7ba3      	ldrb	r3, [r4, #14]
 800fe08:	2b00      	cmp	r3, #0
 800fe0a:	f000 80a9 	beq.w	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800fe0e:	6810      	ldr	r0, [r2, #0]
 800fe10:	6851      	ldr	r1, [r2, #4]
 800fe12:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800fe16:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800fe1a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800fe1e:	4643      	mov	r3, r8
 800fe20:	c303      	stmia	r3!, {r0, r1}
 800fe22:	2500      	movs	r5, #0
 800fe24:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800fe28:	79a2      	ldrb	r2, [r4, #6]
 800fe2a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fe2e:	a90f      	add	r1, sp, #60	; 0x3c
 800fe30:	4640      	mov	r0, r8
 800fe32:	950f      	str	r5, [sp, #60]	; 0x3c
 800fe34:	f7ff fd42 	bl	800f8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fe38:	a90f      	add	r1, sp, #60	; 0x3c
 800fe3a:	4608      	mov	r0, r1
 800fe3c:	79a2      	ldrb	r2, [r4, #6]
 800fe3e:	af19      	add	r7, sp, #100	; 0x64
 800fe40:	f7ff fd3c 	bl	800f8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fe44:	4638      	mov	r0, r7
 800fe46:	f002 f914 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 800fe4a:	6820      	ldr	r0, [r4, #0]
 800fe4c:	6803      	ldr	r3, [r0, #0]
 800fe4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fe50:	4798      	blx	r3
 800fe52:	4606      	mov	r6, r0
 800fe54:	6820      	ldr	r0, [r4, #0]
 800fe56:	6803      	ldr	r3, [r0, #0]
 800fe58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fe5a:	4798      	blx	r3
 800fe5c:	4633      	mov	r3, r6
 800fe5e:	9000      	str	r0, [sp, #0]
 800fe60:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800fe62:	4651      	mov	r1, sl
 800fe64:	4638      	mov	r0, r7
 800fe66:	f002 f951 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fe6a:	6820      	ldr	r0, [r4, #0]
 800fe6c:	7923      	ldrb	r3, [r4, #4]
 800fe6e:	9308      	str	r3, [sp, #32]
 800fe70:	6803      	ldr	r3, [r0, #0]
 800fe72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fe74:	4798      	blx	r3
 800fe76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fe7a:	181e      	adds	r6, r3, r0
 800fe7c:	42ae      	cmp	r6, r5
 800fe7e:	dd06      	ble.n	800fe8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800fe80:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800fe84:	4282      	cmp	r2, r0
 800fe86:	bfa4      	itt	ge
 800fe88:	189d      	addge	r5, r3, r2
 800fe8a:	fb95 f5f6 	sdivge	r5, r5, r6
 800fe8e:	a830      	add	r0, sp, #192	; 0xc0
 800fe90:	f002 f8ef 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 800fe94:	7c23      	ldrb	r3, [r4, #16]
 800fe96:	b17b      	cbz	r3, 800feb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800fe98:	6820      	ldr	r0, [r4, #0]
 800fe9a:	6803      	ldr	r3, [r0, #0]
 800fe9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fe9e:	4798      	blx	r3
 800fea0:	4683      	mov	fp, r0
 800fea2:	6820      	ldr	r0, [r4, #0]
 800fea4:	6803      	ldr	r3, [r0, #0]
 800fea6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fea8:	4798      	blx	r3
 800feaa:	465b      	mov	r3, fp
 800feac:	9000      	str	r0, [sp, #0]
 800feae:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800feb0:	4651      	mov	r1, sl
 800feb2:	a830      	add	r0, sp, #192	; 0xc0
 800feb4:	f002 f92a 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800feb8:	7c21      	ldrb	r1, [r4, #16]
 800feba:	9101      	str	r1, [sp, #4]
 800febc:	6821      	ldr	r1, [r4, #0]
 800febe:	7963      	ldrb	r3, [r4, #5]
 800fec0:	9100      	str	r1, [sp, #0]
 800fec2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800fec6:	a930      	add	r1, sp, #192	; 0xc0
 800fec8:	a811      	add	r0, sp, #68	; 0x44
 800feca:	f7ff fc81 	bl	800f7d0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800fece:	7c23      	ldrb	r3, [r4, #16]
 800fed0:	b9bb      	cbnz	r3, 800ff02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11c>
 800fed2:	fa1f fa86 	uxth.w	sl, r6
 800fed6:	2d00      	cmp	r5, #0
 800fed8:	dd45      	ble.n	800ff66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800feda:	4638      	mov	r0, r7
 800fedc:	f002 fd0a 	bl	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fee0:	2800      	cmp	r0, #0
 800fee2:	d03d      	beq.n	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800fee4:	280a      	cmp	r0, #10
 800fee6:	d1f6      	bne.n	800fed6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800fee8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800feec:	4453      	add	r3, sl
 800feee:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800fef2:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800fef6:	eba3 030a 	sub.w	r3, r3, sl
 800fefa:	3d01      	subs	r5, #1
 800fefc:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800ff00:	e7e9      	b.n	800fed6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800ff02:	0073      	lsls	r3, r6, #1
 800ff04:	9309      	str	r3, [sp, #36]	; 0x24
 800ff06:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800ff0a:	fa1f fa86 	uxth.w	sl, r6
 800ff0e:	2d00      	cmp	r5, #0
 800ff10:	dd29      	ble.n	800ff66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800ff12:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ff16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff18:	428b      	cmp	r3, r1
 800ff1a:	bfd4      	ite	le
 800ff1c:	2100      	movle	r1, #0
 800ff1e:	2101      	movgt	r1, #1
 800ff20:	a811      	add	r0, sp, #68	; 0x44
 800ff22:	f7ff fe6c 	bl	800fbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ff26:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800ff2a:	3b01      	subs	r3, #1
 800ff2c:	b29b      	uxth	r3, r3
 800ff2e:	455b      	cmp	r3, fp
 800ff30:	930b      	str	r3, [sp, #44]	; 0x2c
 800ff32:	d005      	beq.n	800ff40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15a>
 800ff34:	7961      	ldrb	r1, [r4, #5]
 800ff36:	4638      	mov	r0, r7
 800ff38:	f7f5 fb70 	bl	800561c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ff3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ff3e:	e7f4      	b.n	800ff2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800ff40:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800ff44:	4453      	add	r3, sl
 800ff46:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ff4a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800ff4e:	eba3 030a 	sub.w	r3, r3, sl
 800ff52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800ff56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ff5a:	3d01      	subs	r5, #1
 800ff5c:	2b00      	cmp	r3, #0
 800ff5e:	d1d6      	bne.n	800ff0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800ff60:	b05f      	add	sp, #380	; 0x17c
 800ff62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff66:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800ff6a:	ad47      	add	r5, sp, #284	; 0x11c
 800ff6c:	f04f 0b00 	mov.w	fp, #0
 800ff70:	7c23      	ldrb	r3, [r4, #16]
 800ff72:	2b00      	cmp	r3, #0
 800ff74:	d067      	beq.n	8010046 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800ff76:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ff7a:	458a      	cmp	sl, r1
 800ff7c:	bfd4      	ite	le
 800ff7e:	2100      	movle	r1, #0
 800ff80:	2101      	movgt	r1, #1
 800ff82:	a811      	add	r0, sp, #68	; 0x44
 800ff84:	f7ff fe3b 	bl	800fbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ff88:	9b08      	ldr	r3, [sp, #32]
 800ff8a:	2b00      	cmp	r3, #0
 800ff8c:	d056      	beq.n	801003c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800ff8e:	7c23      	ldrb	r3, [r4, #16]
 800ff90:	9309      	str	r3, [sp, #36]	; 0x24
 800ff92:	225c      	movs	r2, #92	; 0x5c
 800ff94:	4639      	mov	r1, r7
 800ff96:	4628      	mov	r0, r5
 800ff98:	f011 f8ca 	bl	8021130 <memcpy>
 800ff9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff9e:	2b00      	cmp	r3, #0
 800ffa0:	d059      	beq.n	8010056 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800ffa2:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800ffa6:	7922      	ldrb	r2, [r4, #4]
 800ffa8:	2a01      	cmp	r2, #1
 800ffaa:	d13d      	bne.n	8010028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800ffac:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800ffb0:	1ac0      	subs	r0, r0, r3
 800ffb2:	2302      	movs	r3, #2
 800ffb4:	fb90 f0f3 	sdiv	r0, r0, r3
 800ffb8:	b200      	sxth	r0, r0
 800ffba:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ffbe:	4418      	add	r0, r3
 800ffc0:	7c23      	ldrb	r3, [r4, #16]
 800ffc2:	f8ad 011c 	strh.w	r0, [sp, #284]	; 0x11c
 800ffc6:	2b00      	cmp	r3, #0
 800ffc8:	d03a      	beq.n	8010040 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800ffca:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800ffce:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800ffd2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800ffd6:	9500      	str	r5, [sp, #0]
 800ffd8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ffdc:	e9cd b703 	strd	fp, r7, [sp, #12]
 800ffe0:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800ffe4:	464a      	mov	r2, r9
 800ffe6:	2100      	movs	r1, #0
 800ffe8:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ffea:	f7ff fc98 	bl	800f91e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ffee:	2800      	cmp	r0, #0
 800fff0:	d1b6      	bne.n	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800fff2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800fff6:	b2b2      	uxth	r2, r6
 800fff8:	4611      	mov	r1, r2
 800fffa:	4413      	add	r3, r2
 800fffc:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010000:	1a52      	subs	r2, r2, r1
 8010002:	7c21      	ldrb	r1, [r4, #16]
 8010004:	b21b      	sxth	r3, r3
 8010006:	b212      	sxth	r2, r2
 8010008:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801000c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010010:	b109      	cbz	r1, 8010016 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010012:	42b2      	cmp	r2, r6
 8010014:	dba4      	blt.n	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 8010016:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 801001a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801001e:	440a      	add	r2, r1
 8010020:	b212      	sxth	r2, r2
 8010022:	4293      	cmp	r3, r2
 8010024:	dda4      	ble.n	800ff70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18a>
 8010026:	e79b      	b.n	800ff60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 8010028:	2a02      	cmp	r2, #2
 801002a:	d105      	bne.n	8010038 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801002c:	7be2      	ldrb	r2, [r4, #15]
 801002e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010032:	1a80      	subs	r0, r0, r2
 8010034:	1ac0      	subs	r0, r0, r3
 8010036:	e7bf      	b.n	800ffb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 8010038:	2000      	movs	r0, #0
 801003a:	e7be      	b.n	800ffba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 801003c:	7be0      	ldrb	r0, [r4, #15]
 801003e:	e7bc      	b.n	800ffba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010040:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010044:	e7c3      	b.n	800ffce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010046:	9b08      	ldr	r3, [sp, #32]
 8010048:	2b00      	cmp	r3, #0
 801004a:	d0f7      	beq.n	801003c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801004c:	225c      	movs	r2, #92	; 0x5c
 801004e:	4639      	mov	r1, r7
 8010050:	4628      	mov	r0, r5
 8010052:	f011 f86d 	bl	8021130 <memcpy>
 8010056:	2300      	movs	r3, #0
 8010058:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801005c:	6821      	ldr	r1, [r4, #0]
 801005e:	4628      	mov	r0, r5
 8010060:	f7ff fbf0 	bl	800f844 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010064:	b203      	sxth	r3, r0
 8010066:	e79e      	b.n	800ffa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c0>

08010068 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010068:	b510      	push	{r4, lr}
 801006a:	2b02      	cmp	r3, #2
 801006c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010070:	d00b      	beq.n	801008a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8010072:	2b03      	cmp	r3, #3
 8010074:	d00e      	beq.n	8010094 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8010076:	2b01      	cmp	r3, #1
 8010078:	d001      	beq.n	801007e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 801007a:	1860      	adds	r0, r4, r1
 801007c:	bd10      	pop	{r4, pc}
 801007e:	8880      	ldrh	r0, [r0, #4]
 8010080:	4420      	add	r0, r4
 8010082:	b200      	sxth	r0, r0
 8010084:	1a80      	subs	r0, r0, r2
 8010086:	3801      	subs	r0, #1
 8010088:	e7f8      	b.n	801007c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 801008a:	8880      	ldrh	r0, [r0, #4]
 801008c:	4420      	add	r0, r4
 801008e:	b200      	sxth	r0, r0
 8010090:	1a40      	subs	r0, r0, r1
 8010092:	e7f8      	b.n	8010086 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010094:	18a0      	adds	r0, r4, r2
 8010096:	e7f1      	b.n	801007c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08010098 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010098:	b510      	push	{r4, lr}
 801009a:	2b02      	cmp	r3, #2
 801009c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80100a0:	d006      	beq.n	80100b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 80100a2:	2b03      	cmp	r3, #3
 80100a4:	d00a      	beq.n	80100bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80100a6:	2b01      	cmp	r3, #1
 80100a8:	bf14      	ite	ne
 80100aa:	18a0      	addne	r0, r4, r2
 80100ac:	1860      	addeq	r0, r4, r1
 80100ae:	bd10      	pop	{r4, pc}
 80100b0:	88c0      	ldrh	r0, [r0, #6]
 80100b2:	4420      	add	r0, r4
 80100b4:	b200      	sxth	r0, r0
 80100b6:	1a80      	subs	r0, r0, r2
 80100b8:	3801      	subs	r0, #1
 80100ba:	e7f8      	b.n	80100ae <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 80100bc:	88c0      	ldrh	r0, [r0, #6]
 80100be:	4420      	add	r0, r4
 80100c0:	b200      	sxth	r0, r0
 80100c2:	1a40      	subs	r0, r0, r1
 80100c4:	e7f8      	b.n	80100b8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

080100c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80100c8:	4b01      	ldr	r3, [pc, #4]	; (80100d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80100ca:	2200      	movs	r2, #0
 80100cc:	601a      	str	r2, [r3, #0]
 80100ce:	4770      	bx	lr
 80100d0:	2000eb38 	.word	0x2000eb38

080100d4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80100d4:	4603      	mov	r3, r0
 80100d6:	b1c8      	cbz	r0, 801010c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80100d8:	0c02      	lsrs	r2, r0, #16
 80100da:	0412      	lsls	r2, r2, #16
 80100dc:	b9a2      	cbnz	r2, 8010108 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80100de:	0403      	lsls	r3, r0, #16
 80100e0:	2010      	movs	r0, #16
 80100e2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80100e6:	bf04      	itt	eq
 80100e8:	021b      	lsleq	r3, r3, #8
 80100ea:	3008      	addeq	r0, #8
 80100ec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80100f0:	bf04      	itt	eq
 80100f2:	011b      	lsleq	r3, r3, #4
 80100f4:	3004      	addeq	r0, #4
 80100f6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80100fa:	bf04      	itt	eq
 80100fc:	009b      	lsleq	r3, r3, #2
 80100fe:	3002      	addeq	r0, #2
 8010100:	2b00      	cmp	r3, #0
 8010102:	db04      	blt.n	801010e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010104:	3001      	adds	r0, #1
 8010106:	4770      	bx	lr
 8010108:	2000      	movs	r0, #0
 801010a:	e7ea      	b.n	80100e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801010c:	2020      	movs	r0, #32
 801010e:	4770      	bx	lr

08010110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010114:	b087      	sub	sp, #28
 8010116:	4681      	mov	r9, r0
 8010118:	4698      	mov	r8, r3
 801011a:	4610      	mov	r0, r2
 801011c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010120:	460d      	mov	r5, r1
 8010122:	b981      	cbnz	r1, 8010146 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010124:	b14b      	cbz	r3, 801013a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010126:	460b      	mov	r3, r1
 8010128:	e9cd 4700 	strd	r4, r7, [sp]
 801012c:	464a      	mov	r2, r9
 801012e:	4641      	mov	r1, r8
 8010130:	f7ff ffee 	bl	8010110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010134:	b007      	add	sp, #28
 8010136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801013a:	f04f 33ff 	mov.w	r3, #4294967295
 801013e:	603b      	str	r3, [r7, #0]
 8010140:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010144:	e7f6      	b.n	8010134 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010146:	fa32 fa01 	lsrs.w	sl, r2, r1
 801014a:	d107      	bne.n	801015c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 801014c:	fb09 f602 	mul.w	r6, r9, r2
 8010150:	fbb6 f0f4 	udiv	r0, r6, r4
 8010154:	fb04 6610 	mls	r6, r4, r0, r6
 8010158:	603e      	str	r6, [r7, #0]
 801015a:	e7eb      	b.n	8010134 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801015c:	2601      	movs	r6, #1
 801015e:	408e      	lsls	r6, r1
 8010160:	3e01      	subs	r6, #1
 8010162:	4016      	ands	r6, r2
 8010164:	fa09 fb01 	lsl.w	fp, r9, r1
 8010168:	4630      	mov	r0, r6
 801016a:	fbbb f3f4 	udiv	r3, fp, r4
 801016e:	9302      	str	r3, [sp, #8]
 8010170:	fb0a f303 	mul.w	r3, sl, r3
 8010174:	9303      	str	r3, [sp, #12]
 8010176:	f7ff ffad 	bl	80100d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801017a:	464a      	mov	r2, r9
 801017c:	460b      	mov	r3, r1
 801017e:	e9cd 4700 	strd	r4, r7, [sp]
 8010182:	4601      	mov	r1, r0
 8010184:	4630      	mov	r0, r6
 8010186:	f7ff ffc3 	bl	8010110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801018a:	9b02      	ldr	r3, [sp, #8]
 801018c:	fb04 bb13 	mls	fp, r4, r3, fp
 8010190:	4606      	mov	r6, r0
 8010192:	4658      	mov	r0, fp
 8010194:	eb05 0108 	add.w	r1, r5, r8
 8010198:	f7ff ff9c 	bl	80100d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801019c:	ab05      	add	r3, sp, #20
 801019e:	e9cd 4300 	strd	r4, r3, [sp]
 80101a2:	465a      	mov	r2, fp
 80101a4:	4603      	mov	r3, r0
 80101a6:	4650      	mov	r0, sl
 80101a8:	f7ff ffb2 	bl	8010110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80101ac:	6839      	ldr	r1, [r7, #0]
 80101ae:	9a05      	ldr	r2, [sp, #20]
 80101b0:	9b03      	ldr	r3, [sp, #12]
 80101b2:	4411      	add	r1, r2
 80101b4:	fbb1 f2f4 	udiv	r2, r1, r4
 80101b8:	18d3      	adds	r3, r2, r3
 80101ba:	441e      	add	r6, r3
 80101bc:	fb04 1412 	mls	r4, r4, r2, r1
 80101c0:	4430      	add	r0, r6
 80101c2:	603c      	str	r4, [r7, #0]
 80101c4:	e7b6      	b.n	8010134 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

080101c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80101c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80101ca:	b085      	sub	sp, #20
 80101cc:	f1b0 0900 	subs.w	r9, r0, #0
 80101d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80101d2:	461d      	mov	r5, r3
 80101d4:	bfbf      	itttt	lt
 80101d6:	6823      	ldrlt	r3, [r4, #0]
 80101d8:	425b      	neglt	r3, r3
 80101da:	f1c9 0900 	rsblt	r9, r9, #0
 80101de:	6023      	strlt	r3, [r4, #0]
 80101e0:	bfb4      	ite	lt
 80101e2:	f04f 36ff 	movlt.w	r6, #4294967295
 80101e6:	2601      	movge	r6, #1
 80101e8:	2a00      	cmp	r2, #0
 80101ea:	4617      	mov	r7, r2
 80101ec:	da04      	bge.n	80101f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80101ee:	6823      	ldr	r3, [r4, #0]
 80101f0:	425b      	negs	r3, r3
 80101f2:	4257      	negs	r7, r2
 80101f4:	4276      	negs	r6, r6
 80101f6:	6023      	str	r3, [r4, #0]
 80101f8:	2d00      	cmp	r5, #0
 80101fa:	4638      	mov	r0, r7
 80101fc:	bfba      	itte	lt
 80101fe:	426d      	neglt	r5, r5
 8010200:	f04f 38ff 	movlt.w	r8, #4294967295
 8010204:	f04f 0801 	movge.w	r8, #1
 8010208:	f7ff ff64 	bl	80100d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801020c:	ab03      	add	r3, sp, #12
 801020e:	e9cd 5300 	strd	r5, r3, [sp]
 8010212:	463a      	mov	r2, r7
 8010214:	4603      	mov	r3, r0
 8010216:	4648      	mov	r0, r9
 8010218:	f7ff ff7a 	bl	8010110 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801021c:	6823      	ldr	r3, [r4, #0]
 801021e:	9a03      	ldr	r2, [sp, #12]
 8010220:	4546      	cmp	r6, r8
 8010222:	441a      	add	r2, r3
 8010224:	fb92 f3f5 	sdiv	r3, r2, r5
 8010228:	4418      	add	r0, r3
 801022a:	bf18      	it	ne
 801022c:	4240      	negne	r0, r0
 801022e:	fb05 2313 	mls	r3, r5, r3, r2
 8010232:	1c72      	adds	r2, r6, #1
 8010234:	6023      	str	r3, [r4, #0]
 8010236:	d105      	bne.n	8010244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010238:	2b00      	cmp	r3, #0
 801023a:	f1c3 0200 	rsb	r2, r3, #0
 801023e:	db0b      	blt.n	8010258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010240:	6022      	str	r2, [r4, #0]
 8010242:	e006      	b.n	8010252 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010244:	2e01      	cmp	r6, #1
 8010246:	d104      	bne.n	8010252 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010248:	2b00      	cmp	r3, #0
 801024a:	da02      	bge.n	8010252 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801024c:	442b      	add	r3, r5
 801024e:	3801      	subs	r0, #1
 8010250:	6023      	str	r3, [r4, #0]
 8010252:	b005      	add	sp, #20
 8010254:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010258:	3801      	subs	r0, #1
 801025a:	1b52      	subs	r2, r2, r5
 801025c:	e7f0      	b.n	8010240 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010260 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010260:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010264:	4c1c      	ldr	r4, [pc, #112]	; (80102d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010266:	6807      	ldr	r7, [r0, #0]
 8010268:	69a3      	ldr	r3, [r4, #24]
 801026a:	4605      	mov	r5, r0
 801026c:	b92b      	cbnz	r3, 801027a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801026e:	6840      	ldr	r0, [r0, #4]
 8010270:	e9c5 7000 	strd	r7, r0, [r5]
 8010274:	b004      	add	sp, #16
 8010276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801027a:	68a2      	ldr	r2, [r4, #8]
 801027c:	6820      	ldr	r0, [r4, #0]
 801027e:	ae04      	add	r6, sp, #16
 8010280:	f04f 0802 	mov.w	r8, #2
 8010284:	fb93 f1f8 	sdiv	r1, r3, r8
 8010288:	440a      	add	r2, r1
 801028a:	f846 2d04 	str.w	r2, [r6, #-4]!
 801028e:	69e1      	ldr	r1, [r4, #28]
 8010290:	9600      	str	r6, [sp, #0]
 8010292:	463a      	mov	r2, r7
 8010294:	f7ff ff97 	bl	80101c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010298:	69a3      	ldr	r3, [r4, #24]
 801029a:	686a      	ldr	r2, [r5, #4]
 801029c:	6a21      	ldr	r1, [r4, #32]
 801029e:	9600      	str	r6, [sp, #0]
 80102a0:	4607      	mov	r7, r0
 80102a2:	6860      	ldr	r0, [r4, #4]
 80102a4:	f7ff ff8f 	bl	80101c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80102a8:	6962      	ldr	r2, [r4, #20]
 80102aa:	69a3      	ldr	r3, [r4, #24]
 80102ac:	fb93 f8f8 	sdiv	r8, r3, r8
 80102b0:	4442      	add	r2, r8
 80102b2:	9203      	str	r2, [sp, #12]
 80102b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80102b6:	682a      	ldr	r2, [r5, #0]
 80102b8:	9600      	str	r6, [sp, #0]
 80102ba:	4407      	add	r7, r0
 80102bc:	68e0      	ldr	r0, [r4, #12]
 80102be:	f7ff ff82 	bl	80101c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80102c2:	9600      	str	r6, [sp, #0]
 80102c4:	4680      	mov	r8, r0
 80102c6:	69a3      	ldr	r3, [r4, #24]
 80102c8:	686a      	ldr	r2, [r5, #4]
 80102ca:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80102cc:	6920      	ldr	r0, [r4, #16]
 80102ce:	f7ff ff7a 	bl	80101c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80102d2:	4440      	add	r0, r8
 80102d4:	e7cc      	b.n	8010270 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80102d6:	bf00      	nop
 80102d8:	2000eb3c 	.word	0x2000eb3c

080102dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80102dc:	b510      	push	{r4, lr}
 80102de:	4b07      	ldr	r3, [pc, #28]	; (80102fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80102e0:	781b      	ldrb	r3, [r3, #0]
 80102e2:	2b01      	cmp	r3, #1
 80102e4:	d108      	bne.n	80102f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80102e6:	4b06      	ldr	r3, [pc, #24]	; (8010300 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80102e8:	880c      	ldrh	r4, [r1, #0]
 80102ea:	881b      	ldrh	r3, [r3, #0]
 80102ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80102f0:	3b01      	subs	r3, #1
 80102f2:	1b1b      	subs	r3, r3, r4
 80102f4:	8003      	strh	r3, [r0, #0]
 80102f6:	800a      	strh	r2, [r1, #0]
 80102f8:	bd10      	pop	{r4, pc}
 80102fa:	bf00      	nop
 80102fc:	2000eb08 	.word	0x2000eb08
 8010300:	2000eb0c 	.word	0x2000eb0c

08010304 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010304:	b510      	push	{r4, lr}
 8010306:	4b0a      	ldr	r3, [pc, #40]	; (8010330 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010308:	781b      	ldrb	r3, [r3, #0]
 801030a:	2b01      	cmp	r3, #1
 801030c:	d10e      	bne.n	801032c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801030e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010312:	8843      	ldrh	r3, [r0, #2]
 8010314:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010318:	8044      	strh	r4, [r0, #2]
 801031a:	18ca      	adds	r2, r1, r3
 801031c:	4b05      	ldr	r3, [pc, #20]	; (8010334 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801031e:	881b      	ldrh	r3, [r3, #0]
 8010320:	1a9b      	subs	r3, r3, r2
 8010322:	8003      	strh	r3, [r0, #0]
 8010324:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010328:	80c3      	strh	r3, [r0, #6]
 801032a:	8081      	strh	r1, [r0, #4]
 801032c:	bd10      	pop	{r4, pc}
 801032e:	bf00      	nop
 8010330:	2000eb08 	.word	0x2000eb08
 8010334:	2000eb04 	.word	0x2000eb04

08010338 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010338:	b510      	push	{r4, lr}
 801033a:	4b07      	ldr	r3, [pc, #28]	; (8010358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801033c:	781b      	ldrb	r3, [r3, #0]
 801033e:	2b01      	cmp	r3, #1
 8010340:	d108      	bne.n	8010354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010342:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010346:	f9b0 4000 	ldrsh.w	r4, [r0]
 801034a:	8003      	strh	r3, [r0, #0]
 801034c:	8893      	ldrh	r3, [r2, #4]
 801034e:	3b01      	subs	r3, #1
 8010350:	1b1b      	subs	r3, r3, r4
 8010352:	800b      	strh	r3, [r1, #0]
 8010354:	bd10      	pop	{r4, pc}
 8010356:	bf00      	nop
 8010358:	2000eb08 	.word	0x2000eb08

0801035c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801035c:	b513      	push	{r0, r1, r4, lr}
 801035e:	4b08      	ldr	r3, [pc, #32]	; (8010380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010360:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010364:	4b07      	ldr	r3, [pc, #28]	; (8010384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 8010366:	f8ad 2004 	strh.w	r2, [sp, #4]
 801036a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801036e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010372:	2400      	movs	r4, #0
 8010374:	466a      	mov	r2, sp
 8010376:	9400      	str	r4, [sp, #0]
 8010378:	f7ff ffde 	bl	8010338 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801037c:	b002      	add	sp, #8
 801037e:	bd10      	pop	{r4, pc}
 8010380:	2000eb04 	.word	0x2000eb04
 8010384:	2000eb06 	.word	0x2000eb06

08010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010388:	b510      	push	{r4, lr}
 801038a:	4b0a      	ldr	r3, [pc, #40]	; (80103b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801038c:	781b      	ldrb	r3, [r3, #0]
 801038e:	2b01      	cmp	r3, #1
 8010390:	460a      	mov	r2, r1
 8010392:	d10d      	bne.n	80103b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010394:	8881      	ldrh	r1, [r0, #4]
 8010396:	8803      	ldrh	r3, [r0, #0]
 8010398:	440b      	add	r3, r1
 801039a:	4601      	mov	r1, r0
 801039c:	3b01      	subs	r3, #1
 801039e:	f821 3b02 	strh.w	r3, [r1], #2
 80103a2:	f7ff ffc9 	bl	8010338 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80103a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80103aa:	88c2      	ldrh	r2, [r0, #6]
 80103ac:	8082      	strh	r2, [r0, #4]
 80103ae:	80c3      	strh	r3, [r0, #6]
 80103b0:	bd10      	pop	{r4, pc}
 80103b2:	bf00      	nop
 80103b4:	2000eb08 	.word	0x2000eb08

080103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80103b8:	b507      	push	{r0, r1, r2, lr}
 80103ba:	4b09      	ldr	r3, [pc, #36]	; (80103e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80103bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103c0:	4b08      	ldr	r3, [pc, #32]	; (80103e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 80103c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80103c6:	2100      	movs	r1, #0
 80103c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80103cc:	9100      	str	r1, [sp, #0]
 80103ce:	4669      	mov	r1, sp
 80103d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80103d4:	f7ff ffd8 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80103d8:	b003      	add	sp, #12
 80103da:	f85d fb04 	ldr.w	pc, [sp], #4
 80103de:	bf00      	nop
 80103e0:	2000eb04 	.word	0x2000eb04
 80103e4:	2000eb06 	.word	0x2000eb06

080103e8 <_ZN8touchgfx11Application13requestRedrawEv>:
 80103e8:	4b06      	ldr	r3, [pc, #24]	; (8010404 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80103ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103ee:	4b06      	ldr	r3, [pc, #24]	; (8010408 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80103f0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80103f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80103f8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80103fc:	2100      	movs	r1, #0
 80103fe:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010402:	4770      	bx	lr
 8010404:	2000eb04 	.word	0x2000eb04
 8010408:	2000eb06 	.word	0x2000eb06

0801040c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801040c:	4b03      	ldr	r3, [pc, #12]	; (801041c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801040e:	6818      	ldr	r0, [r3, #0]
 8010410:	b110      	cbz	r0, 8010418 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010412:	6803      	ldr	r3, [r0, #0]
 8010414:	699b      	ldr	r3, [r3, #24]
 8010416:	4718      	bx	r3
 8010418:	4770      	bx	lr
 801041a:	bf00      	nop
 801041c:	2000eb6c 	.word	0x2000eb6c

08010420 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010420:	4770      	bx	lr
	...

08010424 <_ZN8touchgfx11Application4drawEv>:
 8010424:	b507      	push	{r0, r1, r2, lr}
 8010426:	4b09      	ldr	r3, [pc, #36]	; (801044c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010428:	f9b3 2000 	ldrsh.w	r2, [r3]
 801042c:	4b08      	ldr	r3, [pc, #32]	; (8010450 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801042e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010432:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010436:	f8ad 3006 	strh.w	r3, [sp, #6]
 801043a:	6803      	ldr	r3, [r0, #0]
 801043c:	2100      	movs	r1, #0
 801043e:	9100      	str	r1, [sp, #0]
 8010440:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010442:	4669      	mov	r1, sp
 8010444:	4798      	blx	r3
 8010446:	b003      	add	sp, #12
 8010448:	f85d fb04 	ldr.w	pc, [sp], #4
 801044c:	2000eb04 	.word	0x2000eb04
 8010450:	2000eb06 	.word	0x2000eb06

08010454 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010454:	4b03      	ldr	r3, [pc, #12]	; (8010464 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010456:	6818      	ldr	r0, [r3, #0]
 8010458:	b110      	cbz	r0, 8010460 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801045a:	6803      	ldr	r3, [r0, #0]
 801045c:	69db      	ldr	r3, [r3, #28]
 801045e:	4718      	bx	r3
 8010460:	4770      	bx	lr
 8010462:	bf00      	nop
 8010464:	2000eb6c 	.word	0x2000eb6c

08010468 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010468:	4b03      	ldr	r3, [pc, #12]	; (8010478 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801046a:	6818      	ldr	r0, [r3, #0]
 801046c:	b110      	cbz	r0, 8010474 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801046e:	6803      	ldr	r3, [r0, #0]
 8010470:	6a1b      	ldr	r3, [r3, #32]
 8010472:	4718      	bx	r3
 8010474:	4770      	bx	lr
 8010476:	bf00      	nop
 8010478:	2000eb6c 	.word	0x2000eb6c

0801047c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801047c:	4b03      	ldr	r3, [pc, #12]	; (801048c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801047e:	6818      	ldr	r0, [r3, #0]
 8010480:	b110      	cbz	r0, 8010488 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010482:	6803      	ldr	r3, [r0, #0]
 8010484:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010486:	4718      	bx	r3
 8010488:	4770      	bx	lr
 801048a:	bf00      	nop
 801048c:	2000eb6c 	.word	0x2000eb6c

08010490 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010490:	b570      	push	{r4, r5, r6, lr}
 8010492:	4d34      	ldr	r5, [pc, #208]	; (8010564 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 8010494:	4604      	mov	r4, r0
 8010496:	6828      	ldr	r0, [r5, #0]
 8010498:	b140      	cbz	r0, 80104ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801049a:	7a03      	ldrb	r3, [r0, #8]
 801049c:	b933      	cbnz	r3, 80104ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801049e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	689b      	ldr	r3, [r3, #8]
 80104a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104aa:	4718      	bx	r3
 80104ac:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 80104b0:	b97b      	cbnz	r3, 80104d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104b2:	b170      	cbz	r0, 80104d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104b4:	7a03      	ldrb	r3, [r0, #8]
 80104b6:	b163      	cbz	r3, 80104d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80104b8:	4b2b      	ldr	r3, [pc, #172]	; (8010568 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 80104ba:	6818      	ldr	r0, [r3, #0]
 80104bc:	b110      	cbz	r0, 80104c4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	691b      	ldr	r3, [r3, #16]
 80104c2:	4798      	blx	r3
 80104c4:	6828      	ldr	r0, [r5, #0]
 80104c6:	6803      	ldr	r3, [r0, #0]
 80104c8:	68db      	ldr	r3, [r3, #12]
 80104ca:	4798      	blx	r3
 80104cc:	2301      	movs	r3, #1
 80104ce:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 80104d2:	2500      	movs	r5, #0
 80104d4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80104d8:	42a8      	cmp	r0, r5
 80104da:	dd0c      	ble.n	80104f6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80104dc:	1963      	adds	r3, r4, r5
 80104de:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80104e2:	b132      	cbz	r2, 80104f2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80104e4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80104e8:	4413      	add	r3, r2
 80104ea:	6858      	ldr	r0, [r3, #4]
 80104ec:	6803      	ldr	r3, [r0, #0]
 80104ee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80104f0:	4798      	blx	r3
 80104f2:	3501      	adds	r5, #1
 80104f4:	e7ee      	b.n	80104d4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80104f6:	2300      	movs	r3, #0
 80104f8:	461a      	mov	r2, r3
 80104fa:	4298      	cmp	r0, r3
 80104fc:	d114      	bne.n	8010528 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 80104fe:	1d25      	adds	r5, r4, #4
 8010500:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 8010504:	1e48      	subs	r0, r1, #1
 8010506:	b280      	uxth	r0, r0
 8010508:	4291      	cmp	r1, r2
 801050a:	dd24      	ble.n	8010556 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 801050c:	4288      	cmp	r0, r1
 801050e:	d2fb      	bcs.n	8010508 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 8010510:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 8010514:	3304      	adds	r3, #4
 8010516:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801051a:	428b      	cmp	r3, r1
 801051c:	d018      	beq.n	8010550 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 801051e:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8010522:	f843 6c04 	str.w	r6, [r3, #-4]
 8010526:	e7f8      	b.n	801051a <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 8010528:	18e1      	adds	r1, r4, r3
 801052a:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801052e:	b16d      	cbz	r5, 801054c <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 8010530:	429a      	cmp	r2, r3
 8010532:	d00a      	beq.n	801054a <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 8010534:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010538:	4431      	add	r1, r6
 801053a:	684e      	ldr	r6, [r1, #4]
 801053c:	b291      	uxth	r1, r2
 801053e:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010542:	604e      	str	r6, [r1, #4]
 8010544:	18a1      	adds	r1, r4, r2
 8010546:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 801054a:	3201      	adds	r2, #1
 801054c:	3301      	adds	r3, #1
 801054e:	e7d4      	b.n	80104fa <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010550:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 8010554:	e7d4      	b.n	8010500 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8010556:	4b04      	ldr	r3, [pc, #16]	; (8010568 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 8010558:	6818      	ldr	r0, [r3, #0]
 801055a:	b110      	cbz	r0, 8010562 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 801055c:	6803      	ldr	r3, [r0, #0]
 801055e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010560:	e7a1      	b.n	80104a6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010562:	bd70      	pop	{r4, r5, r6, pc}
 8010564:	2000eb70 	.word	0x2000eb70
 8010568:	2000eb6c 	.word	0x2000eb6c

0801056c <_ZN8touchgfx11ApplicationD1Ev>:
 801056c:	4770      	bx	lr

0801056e <_ZN8touchgfx11ApplicationD0Ev>:
 801056e:	b510      	push	{r4, lr}
 8010570:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010574:	4604      	mov	r4, r0
 8010576:	f010 fc34 	bl	8020de2 <_ZdlPvj>
 801057a:	4620      	mov	r0, r4
 801057c:	bd10      	pop	{r4, pc}
	...

08010580 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010580:	b570      	push	{r4, r5, r6, lr}
 8010582:	4606      	mov	r6, r0
 8010584:	460c      	mov	r4, r1
 8010586:	b929      	cbnz	r1, 8010594 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8010588:	4b0c      	ldr	r3, [pc, #48]	; (80105bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801058a:	4a0d      	ldr	r2, [pc, #52]	; (80105c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 801058c:	480d      	ldr	r0, [pc, #52]	; (80105c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 801058e:	2167      	movs	r1, #103	; 0x67
 8010590:	f010 fc56 	bl	8020e40 <__assert_func>
 8010594:	4d0c      	ldr	r5, [pc, #48]	; (80105c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8010596:	2300      	movs	r3, #0
 8010598:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801059c:	6828      	ldr	r0, [r5, #0]
 801059e:	b110      	cbz	r0, 80105a6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 80105a0:	6803      	ldr	r3, [r0, #0]
 80105a2:	695b      	ldr	r3, [r3, #20]
 80105a4:	4798      	blx	r3
 80105a6:	602c      	str	r4, [r5, #0]
 80105a8:	6823      	ldr	r3, [r4, #0]
 80105aa:	4620      	mov	r0, r4
 80105ac:	68db      	ldr	r3, [r3, #12]
 80105ae:	4798      	blx	r3
 80105b0:	6833      	ldr	r3, [r6, #0]
 80105b2:	4630      	mov	r0, r6
 80105b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80105b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105ba:	4718      	bx	r3
 80105bc:	080247af 	.word	0x080247af
 80105c0:	08024880 	.word	0x08024880
 80105c4:	080247b9 	.word	0x080247b9
 80105c8:	2000eb6c 	.word	0x2000eb6c

080105cc <_ZNK8touchgfx4Rect8includesERKS0_>:
 80105cc:	b570      	push	{r4, r5, r6, lr}
 80105ce:	f9b1 4000 	ldrsh.w	r4, [r1]
 80105d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80105d6:	42ac      	cmp	r4, r5
 80105d8:	db18      	blt.n	801060c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80105da:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 80105de:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80105e2:	429a      	cmp	r2, r3
 80105e4:	db12      	blt.n	801060c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80105e6:	8886      	ldrh	r6, [r0, #4]
 80105e8:	4435      	add	r5, r6
 80105ea:	888e      	ldrh	r6, [r1, #4]
 80105ec:	4434      	add	r4, r6
 80105ee:	b22d      	sxth	r5, r5
 80105f0:	b224      	sxth	r4, r4
 80105f2:	42a5      	cmp	r5, r4
 80105f4:	db0a      	blt.n	801060c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80105f6:	88c0      	ldrh	r0, [r0, #6]
 80105f8:	4418      	add	r0, r3
 80105fa:	88cb      	ldrh	r3, [r1, #6]
 80105fc:	441a      	add	r2, r3
 80105fe:	b200      	sxth	r0, r0
 8010600:	b212      	sxth	r2, r2
 8010602:	4290      	cmp	r0, r2
 8010604:	bfb4      	ite	lt
 8010606:	2000      	movlt	r0, #0
 8010608:	2001      	movge	r0, #1
 801060a:	bd70      	pop	{r4, r5, r6, pc}
 801060c:	2000      	movs	r0, #0
 801060e:	e7fc      	b.n	801060a <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

08010610 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010612:	4604      	mov	r4, r0
 8010614:	4608      	mov	r0, r1
 8010616:	460d      	mov	r5, r1
 8010618:	f7fb fe2d 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 801061c:	b978      	cbnz	r0, 801063e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801061e:	4620      	mov	r0, r4
 8010620:	f7fb fe29 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010624:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010628:	b150      	cbz	r0, 8010640 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801062a:	8026      	strh	r6, [r4, #0]
 801062c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010630:	8063      	strh	r3, [r4, #2]
 8010632:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8010636:	80a3      	strh	r3, [r4, #4]
 8010638:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801063c:	80e3      	strh	r3, [r4, #6]
 801063e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010640:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010644:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010648:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801064c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8010650:	88ed      	ldrh	r5, [r5, #6]
 8010652:	42b1      	cmp	r1, r6
 8010654:	460f      	mov	r7, r1
 8010656:	bfa8      	it	ge
 8010658:	4637      	movge	r7, r6
 801065a:	4293      	cmp	r3, r2
 801065c:	4618      	mov	r0, r3
 801065e:	4466      	add	r6, ip
 8010660:	bfa8      	it	ge
 8010662:	4610      	movge	r0, r2
 8010664:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010668:	8027      	strh	r7, [r4, #0]
 801066a:	442a      	add	r2, r5
 801066c:	88e5      	ldrh	r5, [r4, #6]
 801066e:	8060      	strh	r0, [r4, #2]
 8010670:	4461      	add	r1, ip
 8010672:	442b      	add	r3, r5
 8010674:	b236      	sxth	r6, r6
 8010676:	b209      	sxth	r1, r1
 8010678:	b212      	sxth	r2, r2
 801067a:	b21b      	sxth	r3, r3
 801067c:	428e      	cmp	r6, r1
 801067e:	bfac      	ite	ge
 8010680:	ebc7 0106 	rsbge	r1, r7, r6
 8010684:	ebc7 0101 	rsblt	r1, r7, r1
 8010688:	429a      	cmp	r2, r3
 801068a:	bfac      	ite	ge
 801068c:	ebc0 0202 	rsbge	r2, r0, r2
 8010690:	ebc0 0203 	rsblt	r2, r0, r3
 8010694:	80a1      	strh	r1, [r4, #4]
 8010696:	80e2      	strh	r2, [r4, #6]
 8010698:	e7d1      	b.n	801063e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801069c <_ZN8touchgfx11Application11getInstanceEv>:
 801069c:	4b01      	ldr	r3, [pc, #4]	; (80106a4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801069e:	6818      	ldr	r0, [r3, #0]
 80106a0:	4770      	bx	lr
 80106a2:	bf00      	nop
 80106a4:	2000eb7c 	.word	0x2000eb7c

080106a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80106a8:	2300      	movs	r3, #0
 80106aa:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80106ae:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80106b2:	30a8      	adds	r0, #168	; 0xa8
 80106b4:	f802 3b01 	strb.w	r3, [r2], #1
 80106b8:	4282      	cmp	r2, r0
 80106ba:	d1fb      	bne.n	80106b4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80106bc:	4770      	bx	lr

080106be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80106be:	4603      	mov	r3, r0
 80106c0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80106c4:	2200      	movs	r2, #0
 80106c6:	801a      	strh	r2, [r3, #0]
 80106c8:	805a      	strh	r2, [r3, #2]
 80106ca:	809a      	strh	r2, [r3, #4]
 80106cc:	80da      	strh	r2, [r3, #6]
 80106ce:	3308      	adds	r3, #8
 80106d0:	428b      	cmp	r3, r1
 80106d2:	d1f8      	bne.n	80106c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80106d4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80106d8:	4770      	bx	lr
	...

080106dc <_ZN8touchgfx11ApplicationC1Ev>:
 80106dc:	b570      	push	{r4, r5, r6, lr}
 80106de:	4b1a      	ldr	r3, [pc, #104]	; (8010748 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80106e0:	6003      	str	r3, [r0, #0]
 80106e2:	2500      	movs	r5, #0
 80106e4:	4604      	mov	r4, r0
 80106e6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80106ea:	30a8      	adds	r0, #168	; 0xa8
 80106ec:	f7ff ffe7 	bl	80106be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106f0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80106f4:	f7ff ffe3 	bl	80106be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106f8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80106fc:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8010700:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010704:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010708:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 801070c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 8010710:	490e      	ldr	r1, [pc, #56]	; (801074c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8010712:	480f      	ldr	r0, [pc, #60]	; (8010750 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010714:	4e0f      	ldr	r6, [pc, #60]	; (8010754 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010716:	f00e fe35 	bl	801f384 <CRC_Lock>
 801071a:	4b0f      	ldr	r3, [pc, #60]	; (8010758 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801071c:	b158      	cbz	r0, 8010736 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 801071e:	801d      	strh	r5, [r3, #0]
 8010720:	4a0e      	ldr	r2, [pc, #56]	; (801075c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010722:	2300      	movs	r3, #0
 8010724:	6013      	str	r3, [r2, #0]
 8010726:	4a0e      	ldr	r2, [pc, #56]	; (8010760 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010728:	6033      	str	r3, [r6, #0]
 801072a:	4620      	mov	r0, r4
 801072c:	6013      	str	r3, [r2, #0]
 801072e:	f7ff ffbb 	bl	80106a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8010732:	4620      	mov	r0, r4
 8010734:	bd70      	pop	{r4, r5, r6, pc}
 8010736:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801073a:	2002      	movs	r0, #2
 801073c:	801a      	strh	r2, [r3, #0]
 801073e:	6030      	str	r0, [r6, #0]
 8010740:	f001 fb4c 	bl	8011ddc <_ZN8touchgfx6Screen4drawEv>
 8010744:	e7ec      	b.n	8010720 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 8010746:	bf00      	nop
 8010748:	08024844 	.word	0x08024844
 801074c:	b5e8b5cd 	.word	0xb5e8b5cd
 8010750:	f407a5c2 	.word	0xf407a5c2
 8010754:	2000eb6c 	.word	0x2000eb6c
 8010758:	20000084 	.word	0x20000084
 801075c:	2000eb7c 	.word	0x2000eb7c
 8010760:	2000eb70 	.word	0x2000eb70

08010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010764:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010768:	428b      	cmp	r3, r1
 801076a:	b510      	push	{r4, lr}
 801076c:	d90e      	bls.n	801078c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 801076e:	3b01      	subs	r3, #1
 8010770:	b29b      	uxth	r3, r3
 8010772:	428b      	cmp	r3, r1
 8010774:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010778:	d908      	bls.n	801078c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 801077a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801077e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010782:	681a      	ldr	r2, [r3, #0]
 8010784:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010788:	685a      	ldr	r2, [r3, #4]
 801078a:	6062      	str	r2, [r4, #4]
 801078c:	bd10      	pop	{r4, pc}
	...

08010790 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8010790:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010792:	466b      	mov	r3, sp
 8010794:	e883 0006 	stmia.w	r3, {r1, r2}
 8010798:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801079c:	2a07      	cmp	r2, #7
 801079e:	4604      	mov	r4, r0
 80107a0:	d906      	bls.n	80107b0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 80107a2:	4b09      	ldr	r3, [pc, #36]	; (80107c8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 80107a4:	4a09      	ldr	r2, [pc, #36]	; (80107cc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 80107a6:	480a      	ldr	r0, [pc, #40]	; (80107d0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 80107a8:	f44f 71c0 	mov.w	r1, #384	; 0x180
 80107ac:	f010 fb48 	bl	8020e40 <__assert_func>
 80107b0:	1c51      	adds	r1, r2, #1
 80107b2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80107b6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 80107ba:	cb03      	ldmia	r3!, {r0, r1}
 80107bc:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 80107c0:	6069      	str	r1, [r5, #4]
 80107c2:	b003      	add	sp, #12
 80107c4:	bd30      	pop	{r4, r5, pc}
 80107c6:	bf00      	nop
 80107c8:	080247e3 	.word	0x080247e3
 80107cc:	080248c4 	.word	0x080248c4
 80107d0:	08024812 	.word	0x08024812

080107d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80107d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107d8:	b08d      	sub	sp, #52	; 0x34
 80107da:	ac08      	add	r4, sp, #32
 80107dc:	4683      	mov	fp, r0
 80107de:	4620      	mov	r0, r4
 80107e0:	e884 0006 	stmia.w	r4, {r1, r2}
 80107e4:	f7fb fd47 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107e8:	2800      	cmp	r0, #0
 80107ea:	d16a      	bne.n	80108c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 80107ec:	9402      	str	r4, [sp, #8]
 80107ee:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80107f2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80107f6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80107fa:	2400      	movs	r4, #0
 80107fc:	9301      	str	r3, [sp, #4]
 80107fe:	36a0      	adds	r6, #160	; 0xa0
 8010800:	42a5      	cmp	r5, r4
 8010802:	d00d      	beq.n	8010820 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 8010804:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010808:	9802      	ldr	r0, [sp, #8]
 801080a:	f7ff fedf 	bl	80105cc <_ZNK8touchgfx4Rect8includesERKS0_>
 801080e:	b128      	cbz	r0, 801081c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8010810:	1e69      	subs	r1, r5, #1
 8010812:	1b09      	subs	r1, r1, r4
 8010814:	b289      	uxth	r1, r1
 8010816:	9801      	ldr	r0, [sp, #4]
 8010818:	f7ff ffa4 	bl	8010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801081c:	3401      	adds	r4, #1
 801081e:	e7ef      	b.n	8010800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010820:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010824:	9703      	str	r7, [sp, #12]
 8010826:	1e7b      	subs	r3, r7, #1
 8010828:	9300      	str	r3, [sp, #0]
 801082a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801082e:	2400      	movs	r4, #0
 8010830:	4655      	mov	r5, sl
 8010832:	9704      	str	r7, [sp, #16]
 8010834:	4626      	mov	r6, r4
 8010836:	9b04      	ldr	r3, [sp, #16]
 8010838:	2b00      	cmp	r3, #0
 801083a:	d078      	beq.n	801092e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 801083c:	9902      	ldr	r1, [sp, #8]
 801083e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010842:	f7fd fad5 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010846:	b360      	cbz	r0, 80108a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8010848:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801084c:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8010850:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8010854:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8010858:	45e6      	cmp	lr, ip
 801085a:	db35      	blt.n	80108c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 801085c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8010860:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010864:	4472      	add	r2, lr
 8010866:	4463      	add	r3, ip
 8010868:	b212      	sxth	r2, r2
 801086a:	b21b      	sxth	r3, r3
 801086c:	429a      	cmp	r2, r3
 801086e:	dc2b      	bgt.n	80108c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8010870:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010874:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010878:	fa1f f288 	uxth.w	r2, r8
 801087c:	4413      	add	r3, r2
 801087e:	b29b      	uxth	r3, r3
 8010880:	45c1      	cmp	r9, r8
 8010882:	fa0f fe83 	sxth.w	lr, r3
 8010886:	fa1f fc89 	uxth.w	ip, r9
 801088a:	db0f      	blt.n	80108ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 801088c:	eba3 030c 	sub.w	r3, r3, ip
 8010890:	1ac9      	subs	r1, r1, r3
 8010892:	b209      	sxth	r1, r1
 8010894:	2900      	cmp	r1, #0
 8010896:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801089a:	dd12      	ble.n	80108c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801089c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 80108a0:	4604      	mov	r4, r0
 80108a2:	9b04      	ldr	r3, [sp, #16]
 80108a4:	3b01      	subs	r3, #1
 80108a6:	9304      	str	r3, [sp, #16]
 80108a8:	3d08      	subs	r5, #8
 80108aa:	e7c4      	b.n	8010836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 80108ac:	4461      	add	r1, ip
 80108ae:	b209      	sxth	r1, r1
 80108b0:	4571      	cmp	r1, lr
 80108b2:	dc3a      	bgt.n	801092a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80108b4:	eba2 020c 	sub.w	r2, r2, ip
 80108b8:	b212      	sxth	r2, r2
 80108ba:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80108be:	2a00      	cmp	r2, #0
 80108c0:	dcee      	bgt.n	80108a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 80108c2:	b00d      	add	sp, #52	; 0x34
 80108c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108c8:	45c1      	cmp	r9, r8
 80108ca:	db2e      	blt.n	801092a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80108cc:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80108d0:	4499      	add	r9, r3
 80108d2:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80108d6:	4498      	add	r8, r3
 80108d8:	fa0f f989 	sxth.w	r9, r9
 80108dc:	fa0f f888 	sxth.w	r8, r8
 80108e0:	45c1      	cmp	r9, r8
 80108e2:	dc22      	bgt.n	801092a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 80108e4:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80108e8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80108ec:	fa1f f28c 	uxth.w	r2, ip
 80108f0:	4413      	add	r3, r2
 80108f2:	b29b      	uxth	r3, r3
 80108f4:	45e6      	cmp	lr, ip
 80108f6:	fa1f f88e 	uxth.w	r8, lr
 80108fa:	fa0f f983 	sxth.w	r9, r3
 80108fe:	db0a      	blt.n	8010916 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 8010900:	eba3 0308 	sub.w	r3, r3, r8
 8010904:	1ac9      	subs	r1, r1, r3
 8010906:	b209      	sxth	r1, r1
 8010908:	2900      	cmp	r1, #0
 801090a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801090e:	ddd8      	ble.n	80108c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010910:	f8ad 9020 	strh.w	r9, [sp, #32]
 8010914:	e7c4      	b.n	80108a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8010916:	4441      	add	r1, r8
 8010918:	b209      	sxth	r1, r1
 801091a:	4549      	cmp	r1, r9
 801091c:	dc05      	bgt.n	801092a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801091e:	eba2 0208 	sub.w	r2, r2, r8
 8010922:	b212      	sxth	r2, r2
 8010924:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8010928:	e7c9      	b.n	80108be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801092a:	4606      	mov	r6, r0
 801092c:	e7b9      	b.n	80108a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 801092e:	2c00      	cmp	r4, #0
 8010930:	f47f af7d 	bne.w	801082e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8010934:	2e00      	cmp	r6, #0
 8010936:	f000 81dd 	beq.w	8010cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 801093a:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 801093e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8010942:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8010946:	b2b9      	uxth	r1, r7
 8010948:	9104      	str	r1, [sp, #16]
 801094a:	9804      	ldr	r0, [sp, #16]
 801094c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010950:	4401      	add	r1, r0
 8010952:	b2b3      	uxth	r3, r6
 8010954:	b289      	uxth	r1, r1
 8010956:	441a      	add	r2, r3
 8010958:	9105      	str	r1, [sp, #20]
 801095a:	b292      	uxth	r2, r2
 801095c:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8010960:	fa0f f882 	sxth.w	r8, r2
 8010964:	4655      	mov	r5, sl
 8010966:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801096a:	9b03      	ldr	r3, [sp, #12]
 801096c:	2b00      	cmp	r3, #0
 801096e:	d054      	beq.n	8010a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8010970:	9902      	ldr	r1, [sp, #8]
 8010972:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8010976:	f7fd fa3b 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801097a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801097e:	b1d8      	cbz	r0, 80109b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010980:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8010984:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8010988:	4576      	cmp	r6, lr
 801098a:	dc26      	bgt.n	80109da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801098c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8010990:	44f4      	add	ip, lr
 8010992:	fa0f fc8c 	sxth.w	ip, ip
 8010996:	45e0      	cmp	r8, ip
 8010998:	db1f      	blt.n	80109da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801099a:	428f      	cmp	r7, r1
 801099c:	fa1f fc81 	uxth.w	ip, r1
 80109a0:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 80109a4:	dc0f      	bgt.n	80109c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80109a6:	9805      	ldr	r0, [sp, #20]
 80109a8:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 80109ac:	eba0 0c0c 	sub.w	ip, r0, ip
 80109b0:	eba1 010c 	sub.w	r1, r1, ip
 80109b4:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 80109b8:	4620      	mov	r0, r4
 80109ba:	9903      	ldr	r1, [sp, #12]
 80109bc:	3901      	subs	r1, #1
 80109be:	9103      	str	r1, [sp, #12]
 80109c0:	3d08      	subs	r5, #8
 80109c2:	4604      	mov	r4, r0
 80109c4:	e7cf      	b.n	8010966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 80109c6:	4461      	add	r1, ip
 80109c8:	b209      	sxth	r1, r1
 80109ca:	4549      	cmp	r1, r9
 80109cc:	dcf5      	bgt.n	80109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80109ce:	9904      	ldr	r1, [sp, #16]
 80109d0:	eba1 0c0c 	sub.w	ip, r1, ip
 80109d4:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 80109d8:	e7ee      	b.n	80109b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 80109da:	428f      	cmp	r7, r1
 80109dc:	dced      	bgt.n	80109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80109de:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 80109e2:	4461      	add	r1, ip
 80109e4:	b209      	sxth	r1, r1
 80109e6:	4589      	cmp	r9, r1
 80109e8:	dbe7      	blt.n	80109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80109ea:	4576      	cmp	r6, lr
 80109ec:	fa1f fc8e 	uxth.w	ip, lr
 80109f0:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80109f4:	dc08      	bgt.n	8010a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 80109f6:	eba2 0c0c 	sub.w	ip, r2, ip
 80109fa:	eba1 010c 	sub.w	r1, r1, ip
 80109fe:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8010a02:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8010a06:	e7d7      	b.n	80109b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010a08:	4461      	add	r1, ip
 8010a0a:	b209      	sxth	r1, r1
 8010a0c:	4588      	cmp	r8, r1
 8010a0e:	dbd4      	blt.n	80109ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010a10:	eba3 0c0c 	sub.w	ip, r3, ip
 8010a14:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8010a18:	e7ce      	b.n	80109b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010a1a:	2c00      	cmp	r4, #0
 8010a1c:	f000 816a 	beq.w	8010cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8010a20:	9b00      	ldr	r3, [sp, #0]
 8010a22:	3301      	adds	r3, #1
 8010a24:	f000 8166 	beq.w	8010cf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8010a28:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8010a2c:	4621      	mov	r1, r4
 8010a2e:	9802      	ldr	r0, [sp, #8]
 8010a30:	f7ff fdcc 	bl	80105cc <_ZNK8touchgfx4Rect8includesERKS0_>
 8010a34:	b120      	cbz	r0, 8010a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8010a36:	f8bd 1000 	ldrh.w	r1, [sp]
 8010a3a:	9801      	ldr	r0, [sp, #4]
 8010a3c:	f7ff fe92 	bl	8010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010a40:	9902      	ldr	r1, [sp, #8]
 8010a42:	4620      	mov	r0, r4
 8010a44:	f7fd f9d4 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010a48:	2800      	cmp	r0, #0
 8010a4a:	f000 809b 	beq.w	8010b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 8010a4e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8010a52:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8010a56:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8010a5a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8010a5e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010a62:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8010a66:	fa1f f288 	uxth.w	r2, r8
 8010a6a:	19d5      	adds	r5, r2, r7
 8010a6c:	fa1f f985 	uxth.w	r9, r5
 8010a70:	fa0f f589 	sxth.w	r5, r9
 8010a74:	b2a1      	uxth	r1, r4
 8010a76:	440b      	add	r3, r1
 8010a78:	9503      	str	r5, [sp, #12]
 8010a7a:	45a0      	cmp	r8, r4
 8010a7c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8010a80:	9507      	str	r5, [sp, #28]
 8010a82:	b29b      	uxth	r3, r3
 8010a84:	f340 809d 	ble.w	8010bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010a88:	1a52      	subs	r2, r2, r1
 8010a8a:	b292      	uxth	r2, r2
 8010a8c:	4584      	cmp	ip, r0
 8010a8e:	fa0f fe83 	sxth.w	lr, r3
 8010a92:	b215      	sxth	r5, r2
 8010a94:	dd2f      	ble.n	8010af6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8010a96:	9e00      	ldr	r6, [sp, #0]
 8010a98:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010a9c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8010aa0:	9e03      	ldr	r6, [sp, #12]
 8010aa2:	eba6 060e 	sub.w	r6, r6, lr
 8010aa6:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8010aaa:	fa1f fc8c 	uxth.w	ip, ip
 8010aae:	b280      	uxth	r0, r0
 8010ab0:	ebac 0300 	sub.w	r3, ip, r0
 8010ab4:	448c      	add	ip, r1
 8010ab6:	4470      	add	r0, lr
 8010ab8:	b29b      	uxth	r3, r3
 8010aba:	fa0f fc8c 	sxth.w	ip, ip
 8010abe:	b200      	sxth	r0, r0
 8010ac0:	b21c      	sxth	r4, r3
 8010ac2:	ebac 0000 	sub.w	r0, ip, r0
 8010ac6:	4366      	muls	r6, r4
 8010ac8:	4368      	muls	r0, r5
 8010aca:	4286      	cmp	r6, r0
 8010acc:	db09      	blt.n	8010ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 8010ace:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8010ad2:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8010ad6:	4417      	add	r7, r2
 8010ad8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010adc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8010ae0:	e685      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010ae2:	440b      	add	r3, r1
 8010ae4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010ae8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8010aec:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8010af0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010af4:	e67b      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010af6:	9e03      	ldr	r6, [sp, #12]
 8010af8:	45b6      	cmp	lr, r6
 8010afa:	da28      	bge.n	8010b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 8010afc:	9b00      	ldr	r3, [sp, #0]
 8010afe:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8010b02:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8010b06:	eb04 030c 	add.w	r3, r4, ip
 8010b0a:	fa1f f883 	uxth.w	r8, r3
 8010b0e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8010b12:	4403      	add	r3, r0
 8010b14:	eba3 0308 	sub.w	r3, r3, r8
 8010b18:	b29b      	uxth	r3, r3
 8010b1a:	fa0f f988 	sxth.w	r9, r8
 8010b1e:	eba0 000c 	sub.w	r0, r0, ip
 8010b22:	fa0f f883 	sxth.w	r8, r3
 8010b26:	eba6 060e 	sub.w	r6, r6, lr
 8010b2a:	4368      	muls	r0, r5
 8010b2c:	fb08 f606 	mul.w	r6, r8, r6
 8010b30:	42b0      	cmp	r0, r6
 8010b32:	dc06      	bgt.n	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8010b34:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8010b38:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8010b3c:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8010b40:	e7c9      	b.n	8010ad6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 8010b42:	4423      	add	r3, r4
 8010b44:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8010b48:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010b4c:	e64f      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010b4e:	9807      	ldr	r0, [sp, #28]
 8010b50:	eba3 0309 	sub.w	r3, r3, r9
 8010b54:	b29b      	uxth	r3, r3
 8010b56:	2806      	cmp	r0, #6
 8010b58:	fa0f fc83 	sxth.w	ip, r3
 8010b5c:	d818      	bhi.n	8010b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 8010b5e:	4652      	mov	r2, sl
 8010b60:	ab0a      	add	r3, sp, #40	; 0x28
 8010b62:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8010b66:	6851      	ldr	r1, [r2, #4]
 8010b68:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8010b6c:	c303      	stmia	r3!, {r0, r1}
 8010b6e:	9b03      	ldr	r3, [sp, #12]
 8010b70:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8010b74:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8010b78:	ab0a      	add	r3, sp, #40	; 0x28
 8010b7a:	e893 0006 	ldmia.w	r3, {r1, r2}
 8010b7e:	9801      	ldr	r0, [sp, #4]
 8010b80:	f7ff fe06 	bl	8010790 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010b84:	9b00      	ldr	r3, [sp, #0]
 8010b86:	3b01      	subs	r3, #1
 8010b88:	9300      	str	r3, [sp, #0]
 8010b8a:	f1aa 0a08 	sub.w	sl, sl, #8
 8010b8e:	e747      	b.n	8010a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010b90:	9800      	ldr	r0, [sp, #0]
 8010b92:	45ac      	cmp	ip, r5
 8010b94:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010b98:	db0c      	blt.n	8010bb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 8010b9a:	4417      	add	r7, r2
 8010b9c:	b2bf      	uxth	r7, r7
 8010b9e:	4458      	add	r0, fp
 8010ba0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8010ba4:	440f      	add	r7, r1
 8010ba6:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010baa:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8010bae:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8010bb2:	e61c      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010bb4:	4458      	add	r0, fp
 8010bb6:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8010bba:	443b      	add	r3, r7
 8010bbc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010bc0:	e615      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010bc2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8010bc6:	fa1f f18c 	uxth.w	r1, ip
 8010bca:	eb01 0e05 	add.w	lr, r1, r5
 8010bce:	b282      	uxth	r2, r0
 8010bd0:	fa1f fe8e 	uxth.w	lr, lr
 8010bd4:	9204      	str	r2, [sp, #16]
 8010bd6:	fa0f f28e 	sxth.w	r2, lr
 8010bda:	9205      	str	r2, [sp, #20]
 8010bdc:	9e04      	ldr	r6, [sp, #16]
 8010bde:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8010be2:	4432      	add	r2, r6
 8010be4:	b292      	uxth	r2, r2
 8010be6:	4584      	cmp	ip, r0
 8010be8:	9206      	str	r2, [sp, #24]
 8010bea:	da26      	bge.n	8010c3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8010bec:	eba3 0309 	sub.w	r3, r3, r9
 8010bf0:	eba2 020e 	sub.w	r2, r2, lr
 8010bf4:	b29b      	uxth	r3, r3
 8010bf6:	b292      	uxth	r2, r2
 8010bf8:	fa0f fa83 	sxth.w	sl, r3
 8010bfc:	b211      	sxth	r1, r2
 8010bfe:	eba0 000c 	sub.w	r0, r0, ip
 8010c02:	eba4 0408 	sub.w	r4, r4, r8
 8010c06:	fb0a f000 	mul.w	r0, sl, r0
 8010c0a:	434c      	muls	r4, r1
 8010c0c:	42a0      	cmp	r0, r4
 8010c0e:	9800      	ldr	r0, [sp, #0]
 8010c10:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010c14:	dc06      	bgt.n	8010c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8010c16:	4458      	add	r0, fp
 8010c18:	9a05      	ldr	r2, [sp, #20]
 8010c1a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8010c1e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8010c22:	e7ca      	b.n	8010bba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8010c24:	eb0b 0300 	add.w	r3, fp, r0
 8010c28:	9903      	ldr	r1, [sp, #12]
 8010c2a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8010c2e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8010c32:	442a      	add	r2, r5
 8010c34:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8010c38:	e5d9      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010c3a:	9e04      	ldr	r6, [sp, #16]
 8010c3c:	9a03      	ldr	r2, [sp, #12]
 8010c3e:	1b89      	subs	r1, r1, r6
 8010c40:	b21e      	sxth	r6, r3
 8010c42:	b289      	uxth	r1, r1
 8010c44:	4296      	cmp	r6, r2
 8010c46:	fa0f fc81 	sxth.w	ip, r1
 8010c4a:	dd26      	ble.n	8010c9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 8010c4c:	eba3 0309 	sub.w	r3, r3, r9
 8010c50:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8010c54:	9e05      	ldr	r6, [sp, #20]
 8010c56:	b29b      	uxth	r3, r3
 8010c58:	eba6 0902 	sub.w	r9, r6, r2
 8010c5c:	b218      	sxth	r0, r3
 8010c5e:	eba4 0408 	sub.w	r4, r4, r8
 8010c62:	fb0c f404 	mul.w	r4, ip, r4
 8010c66:	fb00 f909 	mul.w	r9, r0, r9
 8010c6a:	9a00      	ldr	r2, [sp, #0]
 8010c6c:	454c      	cmp	r4, r9
 8010c6e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010c72:	db03      	blt.n	8010c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 8010c74:	445a      	add	r2, fp
 8010c76:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8010c7a:	e79e      	b.n	8010bba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8010c7c:	eb0b 0302 	add.w	r3, fp, r2
 8010c80:	9a03      	ldr	r2, [sp, #12]
 8010c82:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8010c86:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8010c8a:	4429      	add	r1, r5
 8010c8c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8010c90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010c94:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8010c98:	e5a9      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010c9a:	9b06      	ldr	r3, [sp, #24]
 8010c9c:	9c07      	ldr	r4, [sp, #28]
 8010c9e:	eba3 020e 	sub.w	r2, r3, lr
 8010ca2:	b292      	uxth	r2, r2
 8010ca4:	2c06      	cmp	r4, #6
 8010ca6:	b213      	sxth	r3, r2
 8010ca8:	d80d      	bhi.n	8010cc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 8010caa:	4651      	mov	r1, sl
 8010cac:	aa0a      	add	r2, sp, #40	; 0x28
 8010cae:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8010cb2:	6849      	ldr	r1, [r1, #4]
 8010cb4:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8010cb8:	9b05      	ldr	r3, [sp, #20]
 8010cba:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8010cbe:	c203      	stmia	r2!, {r0, r1}
 8010cc0:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8010cc4:	e758      	b.n	8010b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 8010cc6:	9c00      	ldr	r4, [sp, #0]
 8010cc8:	4563      	cmp	r3, ip
 8010cca:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010cce:	db0d      	blt.n	8010cec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 8010cd0:	4429      	add	r1, r5
 8010cd2:	9a04      	ldr	r2, [sp, #16]
 8010cd4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010cd8:	b289      	uxth	r1, r1
 8010cda:	445c      	add	r4, fp
 8010cdc:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8010ce0:	4411      	add	r1, r2
 8010ce2:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8010ce6:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8010cea:	e580      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010cec:	445c      	add	r4, fp
 8010cee:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8010cf2:	e79e      	b.n	8010c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 8010cf4:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010cf8:	2f07      	cmp	r7, #7
 8010cfa:	d806      	bhi.n	8010d0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 8010cfc:	ab08      	add	r3, sp, #32
 8010cfe:	e893 0006 	ldmia.w	r3, {r1, r2}
 8010d02:	9801      	ldr	r0, [sp, #4]
 8010d04:	f7ff fd44 	bl	8010790 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010d08:	e5db      	b.n	80108c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010d0a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010d0e:	f107 39ff 	add.w	r9, r7, #4294967295
 8010d12:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010d16:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8010d1a:	f04f 35ff 	mov.w	r5, #4294967295
 8010d1e:	2400      	movs	r4, #0
 8010d20:	9304      	str	r3, [sp, #16]
 8010d22:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8010d26:	9300      	str	r3, [sp, #0]
 8010d28:	f109 32ff 	add.w	r2, r9, #4294967295
 8010d2c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8010d30:	9303      	str	r3, [sp, #12]
 8010d32:	4690      	mov	r8, r2
 8010d34:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8010d38:	f1b8 3fff 	cmp.w	r8, #4294967295
 8010d3c:	bf14      	ite	ne
 8010d3e:	9904      	ldrne	r1, [sp, #16]
 8010d40:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8010d44:	6818      	ldr	r0, [r3, #0]
 8010d46:	9206      	str	r2, [sp, #24]
 8010d48:	bf18      	it	ne
 8010d4a:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8010d4e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8010d52:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010d56:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8010d5a:	9305      	str	r3, [sp, #20]
 8010d5c:	fb16 f601 	smulbb	r6, r6, r1
 8010d60:	6859      	ldr	r1, [r3, #4]
 8010d62:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010d66:	4671      	mov	r1, lr
 8010d68:	a80a      	add	r0, sp, #40	; 0x28
 8010d6a:	f7ff fc51 	bl	8010610 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010d6e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8010d72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010d76:	9b03      	ldr	r3, [sp, #12]
 8010d78:	9a00      	ldr	r2, [sp, #0]
 8010d7a:	fb11 f100 	smulbb	r1, r1, r0
 8010d7e:	fb02 6603 	mla	r6, r2, r3, r6
 8010d82:	1b8e      	subs	r6, r1, r6
 8010d84:	2008      	movs	r0, #8
 8010d86:	fb91 f1f0 	sdiv	r1, r1, r0
 8010d8a:	42b1      	cmp	r1, r6
 8010d8c:	dc21      	bgt.n	8010dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8010d8e:	4556      	cmp	r6, sl
 8010d90:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8010d94:	da03      	bge.n	8010d9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010d96:	b1e6      	cbz	r6, 8010dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8010d98:	46b2      	mov	sl, r6
 8010d9a:	4645      	mov	r5, r8
 8010d9c:	464c      	mov	r4, r9
 8010d9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010da2:	f118 0f02 	cmn.w	r8, #2
 8010da6:	d1c7      	bne.n	8010d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8010da8:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010dac:	f1a7 0708 	sub.w	r7, r7, #8
 8010db0:	4691      	mov	r9, r2
 8010db2:	d1b6      	bne.n	8010d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8010db4:	9b01      	ldr	r3, [sp, #4]
 8010db6:	b2a6      	uxth	r6, r4
 8010db8:	00e4      	lsls	r4, r4, #3
 8010dba:	1918      	adds	r0, r3, r4
 8010dbc:	1c6b      	adds	r3, r5, #1
 8010dbe:	d10b      	bne.n	8010dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 8010dc0:	4601      	mov	r1, r0
 8010dc2:	9802      	ldr	r0, [sp, #8]
 8010dc4:	f7ff fc24 	bl	8010610 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010dc8:	4631      	mov	r1, r6
 8010dca:	9801      	ldr	r0, [sp, #4]
 8010dcc:	f7ff fcca 	bl	8010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010dd0:	e50d      	b.n	80107ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010dd2:	4645      	mov	r5, r8
 8010dd4:	464c      	mov	r4, r9
 8010dd6:	e7ed      	b.n	8010db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8010dd8:	9b01      	ldr	r3, [sp, #4]
 8010dda:	00ed      	lsls	r5, r5, #3
 8010ddc:	1959      	adds	r1, r3, r5
 8010dde:	f7ff fc17 	bl	8010610 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010de2:	9b02      	ldr	r3, [sp, #8]
 8010de4:	cb03      	ldmia	r3!, {r0, r1}
 8010de6:	445d      	add	r5, fp
 8010de8:	445c      	add	r4, fp
 8010dea:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8010dee:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8010df2:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8010df6:	9b02      	ldr	r3, [sp, #8]
 8010df8:	6861      	ldr	r1, [r4, #4]
 8010dfa:	c303      	stmia	r3!, {r0, r1}
 8010dfc:	e7e4      	b.n	8010dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

08010e00 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010e00:	b530      	push	{r4, r5, lr}
 8010e02:	4b1d      	ldr	r3, [pc, #116]	; (8010e78 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8010e04:	b085      	sub	sp, #20
 8010e06:	460c      	mov	r4, r1
 8010e08:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010e0c:	4b1b      	ldr	r3, [pc, #108]	; (8010e7c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 8010e0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010e12:	2100      	movs	r1, #0
 8010e14:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010e18:	9100      	str	r1, [sp, #0]
 8010e1a:	4605      	mov	r5, r0
 8010e1c:	6861      	ldr	r1, [r4, #4]
 8010e1e:	6820      	ldr	r0, [r4, #0]
 8010e20:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e24:	ab02      	add	r3, sp, #8
 8010e26:	c303      	stmia	r3!, {r0, r1}
 8010e28:	4669      	mov	r1, sp
 8010e2a:	a802      	add	r0, sp, #8
 8010e2c:	f7fb f9e0 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 8010e30:	ab02      	add	r3, sp, #8
 8010e32:	cb03      	ldmia	r3!, {r0, r1}
 8010e34:	4b12      	ldr	r3, [pc, #72]	; (8010e80 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8010e36:	6020      	str	r0, [r4, #0]
 8010e38:	6818      	ldr	r0, [r3, #0]
 8010e3a:	6061      	str	r1, [r4, #4]
 8010e3c:	b138      	cbz	r0, 8010e4e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8010e3e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 8010e42:	b133      	cbz	r3, 8010e52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 8010e44:	6821      	ldr	r1, [r4, #0]
 8010e46:	6862      	ldr	r2, [r4, #4]
 8010e48:	4628      	mov	r0, r5
 8010e4a:	f7ff fcc3 	bl	80107d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010e4e:	b005      	add	sp, #20
 8010e50:	bd30      	pop	{r4, r5, pc}
 8010e52:	6803      	ldr	r3, [r0, #0]
 8010e54:	4621      	mov	r1, r4
 8010e56:	689b      	ldr	r3, [r3, #8]
 8010e58:	4798      	blx	r3
 8010e5a:	4b0a      	ldr	r3, [pc, #40]	; (8010e84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 8010e5c:	6818      	ldr	r0, [r3, #0]
 8010e5e:	b118      	cbz	r0, 8010e68 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 8010e60:	6803      	ldr	r3, [r0, #0]
 8010e62:	4621      	mov	r1, r4
 8010e64:	689b      	ldr	r3, [r3, #8]
 8010e66:	4798      	blx	r3
 8010e68:	4b07      	ldr	r3, [pc, #28]	; (8010e88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 8010e6a:	6818      	ldr	r0, [r3, #0]
 8010e6c:	6803      	ldr	r3, [r0, #0]
 8010e6e:	4621      	mov	r1, r4
 8010e70:	699b      	ldr	r3, [r3, #24]
 8010e72:	4798      	blx	r3
 8010e74:	e7eb      	b.n	8010e4e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8010e76:	bf00      	nop
 8010e78:	2000eb04 	.word	0x2000eb04
 8010e7c:	2000eb06 	.word	0x2000eb06
 8010e80:	2000eb6c 	.word	0x2000eb6c
 8010e84:	2000eb68 	.word	0x2000eb68
 8010e88:	2000eb10 	.word	0x2000eb10

08010e8c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 8010e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e90:	4604      	mov	r4, r0
 8010e92:	b09b      	sub	sp, #108	; 0x6c
 8010e94:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 8010e98:	b129      	cbz	r1, 8010ea6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 8010e9a:	2300      	movs	r3, #0
 8010e9c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010ea0:	b01b      	add	sp, #108	; 0x6c
 8010ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ea6:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8010eaa:	4630      	mov	r0, r6
 8010eac:	f7fb f9e3 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010eb0:	4605      	mov	r5, r0
 8010eb2:	b940      	cbnz	r0, 8010ec6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 8010eb4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010eb8:	4620      	mov	r0, r4
 8010eba:	f7ff fc8b 	bl	80107d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010ebe:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8010ec2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010ec6:	4ba7      	ldr	r3, [pc, #668]	; (8011164 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8010ec8:	681b      	ldr	r3, [r3, #0]
 8010eca:	b33b      	cbz	r3, 8010f1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010ecc:	4da6      	ldr	r5, [pc, #664]	; (8011168 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 8010ece:	4628      	mov	r0, r5
 8010ed0:	f7fb f9d1 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ed4:	4606      	mov	r6, r0
 8010ed6:	bb08      	cbnz	r0, 8010f1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010ed8:	4628      	mov	r0, r5
 8010eda:	f7ff fa13 	bl	8010304 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010ede:	6829      	ldr	r1, [r5, #0]
 8010ee0:	686a      	ldr	r2, [r5, #4]
 8010ee2:	4620      	mov	r0, r4
 8010ee4:	f7ff fc76 	bl	80107d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010ee8:	802e      	strh	r6, [r5, #0]
 8010eea:	806e      	strh	r6, [r5, #2]
 8010eec:	80ae      	strh	r6, [r5, #4]
 8010eee:	80ee      	strh	r6, [r5, #6]
 8010ef0:	4f9e      	ldr	r7, [pc, #632]	; (801116c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 8010ef2:	a809      	add	r0, sp, #36	; 0x24
 8010ef4:	f7ff fbe3 	bl	80106be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010ef8:	883d      	ldrh	r5, [r7, #0]
 8010efa:	462e      	mov	r6, r5
 8010efc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010f00:	42b3      	cmp	r3, r6
 8010f02:	d910      	bls.n	8010f26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 8010f04:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010f08:	a809      	add	r0, sp, #36	; 0x24
 8010f0a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8010f0e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8010f12:	3601      	adds	r6, #1
 8010f14:	f7ff fc3c 	bl	8010790 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010f18:	b2b6      	uxth	r6, r6
 8010f1a:	e7ef      	b.n	8010efc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 8010f1c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010f20:	2b00      	cmp	r3, #0
 8010f22:	d1e5      	bne.n	8010ef0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 8010f24:	e7bc      	b.n	8010ea0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8010f26:	462e      	mov	r6, r5
 8010f28:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8010f2c:	42b3      	cmp	r3, r6
 8010f2e:	d90b      	bls.n	8010f48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 8010f30:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010f34:	4620      	mov	r0, r4
 8010f36:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8010f3a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8010f3e:	3601      	adds	r6, #1
 8010f40:	f7ff fc48 	bl	80107d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010f44:	b2b6      	uxth	r6, r6
 8010f46:	e7ef      	b.n	8010f28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 8010f48:	4a89      	ldr	r2, [pc, #548]	; (8011170 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 8010f4a:	6813      	ldr	r3, [r2, #0]
 8010f4c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8010f50:	2b01      	cmp	r3, #1
 8010f52:	4690      	mov	r8, r2
 8010f54:	f040 8094 	bne.w	8011080 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 8010f58:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8010f5c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 8010f60:	33aa      	adds	r3, #170	; 0xaa
 8010f62:	f04f 0900 	mov.w	r9, #0
 8010f66:	42a8      	cmp	r0, r5
 8010f68:	f103 0308 	add.w	r3, r3, #8
 8010f6c:	dd0a      	ble.n	8010f84 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 8010f6e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8010f72:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 8010f76:	440a      	add	r2, r1
 8010f78:	b212      	sxth	r2, r2
 8010f7a:	4591      	cmp	r9, r2
 8010f7c:	bfb8      	it	lt
 8010f7e:	4691      	movlt	r9, r2
 8010f80:	3501      	adds	r5, #1
 8010f82:	e7f0      	b.n	8010f66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 8010f84:	4b7b      	ldr	r3, [pc, #492]	; (8011174 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 8010f86:	4e7c      	ldr	r6, [pc, #496]	; (8011178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 8010f88:	881d      	ldrh	r5, [r3, #0]
 8010f8a:	2300      	movs	r3, #0
 8010f8c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010f90:	2d0f      	cmp	r5, #15
 8010f92:	bf8c      	ite	hi
 8010f94:	08ed      	lsrhi	r5, r5, #3
 8010f96:	2501      	movls	r5, #1
 8010f98:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010f9c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8010fa0:	f8d8 0000 	ldr.w	r0, [r8]
 8010fa4:	440b      	add	r3, r1
 8010fa6:	b21b      	sxth	r3, r3
 8010fa8:	4599      	cmp	r9, r3
 8010faa:	6802      	ldr	r2, [r0, #0]
 8010fac:	dd4b      	ble.n	8011046 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 8010fae:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8010fb2:	4798      	blx	r3
 8010fb4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010fb8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010fbc:	4413      	add	r3, r2
 8010fbe:	b21b      	sxth	r3, r3
 8010fc0:	195a      	adds	r2, r3, r5
 8010fc2:	4290      	cmp	r0, r2
 8010fc4:	da07      	bge.n	8010fd6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8010fc6:	4581      	cmp	r9, r0
 8010fc8:	dd05      	ble.n	8010fd6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8010fca:	4298      	cmp	r0, r3
 8010fcc:	da33      	bge.n	8011036 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8010fce:	2b00      	cmp	r3, #0
 8010fd0:	dd31      	ble.n	8011036 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8010fd2:	4648      	mov	r0, r9
 8010fd4:	e004      	b.n	8010fe0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 8010fd6:	4298      	cmp	r0, r3
 8010fd8:	dbfb      	blt.n	8010fd2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8010fda:	4548      	cmp	r0, r9
 8010fdc:	bfa8      	it	ge
 8010fde:	4648      	movge	r0, r9
 8010fe0:	f9b6 2000 	ldrsh.w	r2, [r6]
 8010fe4:	f8b7 a000 	ldrh.w	sl, [r7]
 8010fe8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010fec:	2100      	movs	r1, #0
 8010fee:	1ac0      	subs	r0, r0, r3
 8010ff0:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010ff4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010ff8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010ffc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011000:	4553      	cmp	r3, sl
 8011002:	d9c9      	bls.n	8010f98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8011004:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8011008:	ab07      	add	r3, sp, #28
 801100a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801100e:	6851      	ldr	r1, [r2, #4]
 8011010:	c303      	stmia	r3!, {r0, r1}
 8011012:	a807      	add	r0, sp, #28
 8011014:	a905      	add	r1, sp, #20
 8011016:	f7fb f8eb 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 801101a:	a807      	add	r0, sp, #28
 801101c:	f7fb f92b 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011020:	b920      	cbnz	r0, 801102c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 8011022:	6823      	ldr	r3, [r4, #0]
 8011024:	a907      	add	r1, sp, #28
 8011026:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011028:	4620      	mov	r0, r4
 801102a:	4798      	blx	r3
 801102c:	f10a 0a01 	add.w	sl, sl, #1
 8011030:	fa1f fa8a 	uxth.w	sl, sl
 8011034:	e7e2      	b.n	8010ffc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 8011036:	f8d8 0000 	ldr.w	r0, [r8]
 801103a:	6803      	ldr	r3, [r0, #0]
 801103c:	2101      	movs	r1, #1
 801103e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8011042:	4798      	blx	r3
 8011044:	e7a8      	b.n	8010f98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8011046:	6a13      	ldr	r3, [r2, #32]
 8011048:	4798      	blx	r3
 801104a:	4b4c      	ldr	r3, [pc, #304]	; (801117c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 801104c:	781b      	ldrb	r3, [r3, #0]
 801104e:	2b00      	cmp	r3, #0
 8011050:	f43f af26 	beq.w	8010ea0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8011054:	2300      	movs	r3, #0
 8011056:	883d      	ldrh	r5, [r7, #0]
 8011058:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 801105c:	34ea      	adds	r4, #234	; 0xea
 801105e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8011062:	42ab      	cmp	r3, r5
 8011064:	f67f af1c 	bls.w	8010ea0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8011068:	ab1a      	add	r3, sp, #104	; 0x68
 801106a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801106e:	3b44      	subs	r3, #68	; 0x44
 8011070:	e893 0006 	ldmia.w	r3, {r1, r2}
 8011074:	4620      	mov	r0, r4
 8011076:	3501      	adds	r5, #1
 8011078:	f7ff fb8a 	bl	8010790 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801107c:	b2ad      	uxth	r5, r5
 801107e:	e7ee      	b.n	801105e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 8011080:	2b02      	cmp	r3, #2
 8011082:	f040 813e 	bne.w	8011302 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 8011086:	4b3e      	ldr	r3, [pc, #248]	; (8011180 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 8011088:	781b      	ldrb	r3, [r3, #0]
 801108a:	2b01      	cmp	r3, #1
 801108c:	d02c      	beq.n	80110e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 801108e:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 8011092:	883a      	ldrh	r2, [r7, #0]
 8011094:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8011098:	3201      	adds	r2, #1
 801109a:	b292      	uxth	r2, r2
 801109c:	2900      	cmp	r1, #0
 801109e:	d0d4      	beq.n	801104a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 80110a0:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 80110a4:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80110a8:	441d      	add	r5, r3
 80110aa:	b22d      	sxth	r5, r5
 80110ac:	4610      	mov	r0, r2
 80110ae:	f04f 0a00 	mov.w	sl, #0
 80110b2:	b283      	uxth	r3, r0
 80110b4:	4299      	cmp	r1, r3
 80110b6:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 80110ba:	f240 80c5 	bls.w	8011248 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 80110be:	4426      	add	r6, r4
 80110c0:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 80110c4:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 80110c8:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 80110cc:	4573      	cmp	r3, lr
 80110ce:	4684      	mov	ip, r0
 80110d0:	f340 80a7 	ble.w	8011222 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 80110d4:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 80110d8:	4475      	add	r5, lr
 80110da:	b22d      	sxth	r5, r5
 80110dc:	429d      	cmp	r5, r3
 80110de:	bfa8      	it	ge
 80110e0:	461d      	movge	r5, r3
 80110e2:	3001      	adds	r0, #1
 80110e4:	46e2      	mov	sl, ip
 80110e6:	e7e4      	b.n	80110b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 80110e8:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 80110ec:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80110f0:	f1bb 0f00 	cmp.w	fp, #0
 80110f4:	d0a9      	beq.n	801104a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 80110f6:	883b      	ldrh	r3, [r7, #0]
 80110f8:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80110fc:	3301      	adds	r3, #1
 80110fe:	b29b      	uxth	r3, r3
 8011100:	2600      	movs	r6, #0
 8011102:	b299      	uxth	r1, r3
 8011104:	458b      	cmp	fp, r1
 8011106:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 801110a:	d93b      	bls.n	8011184 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 801110c:	4425      	add	r5, r4
 801110e:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011112:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011116:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 801111a:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801111e:	4408      	add	r0, r1
 8011120:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011124:	4471      	add	r1, lr
 8011126:	b200      	sxth	r0, r0
 8011128:	b209      	sxth	r1, r1
 801112a:	4288      	cmp	r0, r1
 801112c:	469c      	mov	ip, r3
 801112e:	da06      	bge.n	801113e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 8011130:	4586      	cmp	lr, r0
 8011132:	4672      	mov	r2, lr
 8011134:	bfb8      	it	lt
 8011136:	4602      	movlt	r2, r0
 8011138:	3301      	adds	r3, #1
 801113a:	4666      	mov	r6, ip
 801113c:	e7e1      	b.n	8011102 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 801113e:	d10b      	bne.n	8011158 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 8011140:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011144:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011148:	458c      	cmp	ip, r1
 801114a:	bfb4      	ite	lt
 801114c:	469c      	movlt	ip, r3
 801114e:	46b4      	movge	ip, r6
 8011150:	4572      	cmp	r2, lr
 8011152:	bfb8      	it	lt
 8011154:	4672      	movlt	r2, lr
 8011156:	e7ef      	b.n	8011138 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 8011158:	428a      	cmp	r2, r1
 801115a:	bfb8      	it	lt
 801115c:	460a      	movlt	r2, r1
 801115e:	46b4      	mov	ip, r6
 8011160:	e7ea      	b.n	8011138 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 8011162:	bf00      	nop
 8011164:	2000eb68 	.word	0x2000eb68
 8011168:	2000eb74 	.word	0x2000eb74
 801116c:	20000084 	.word	0x20000084
 8011170:	2000eb10 	.word	0x2000eb10
 8011174:	2000eb06 	.word	0x2000eb06
 8011178:	2000eb04 	.word	0x2000eb04
 801117c:	2000eb0e 	.word	0x2000eb0e
 8011180:	2000eb08 	.word	0x2000eb08
 8011184:	1961      	adds	r1, r4, r5
 8011186:	ab07      	add	r3, sp, #28
 8011188:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801118c:	6849      	ldr	r1, [r1, #4]
 801118e:	c303      	stmia	r3!, {r0, r1}
 8011190:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011194:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011198:	2b13      	cmp	r3, #19
 801119a:	bfd8      	it	le
 801119c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80111a0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80111a4:	440b      	add	r3, r1
 80111a6:	1a9b      	subs	r3, r3, r2
 80111a8:	a807      	add	r0, sp, #28
 80111aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80111ae:	f7ff f903 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80111b2:	a807      	add	r0, sp, #28
 80111b4:	f7fb f85f 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 80111b8:	2800      	cmp	r0, #0
 80111ba:	d197      	bne.n	80110ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 80111bc:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80111c0:	f8d8 0000 	ldr.w	r0, [r8]
 80111c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80111c8:	f8d0 e000 	ldr.w	lr, [r0]
 80111cc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80111d0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80111d4:	f1bc 0f14 	cmp.w	ip, #20
 80111d8:	bfa8      	it	ge
 80111da:	f04f 0c14 	movge.w	ip, #20
 80111de:	fa1f fc8c 	uxth.w	ip, ip
 80111e2:	f8cd c000 	str.w	ip, [sp]
 80111e6:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 80111ea:	47d0      	blx	sl
 80111ec:	4682      	mov	sl, r0
 80111ee:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80111f2:	a807      	add	r0, sp, #28
 80111f4:	f7ff f886 	bl	8010304 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80111f8:	6823      	ldr	r3, [r4, #0]
 80111fa:	4425      	add	r5, r4
 80111fc:	4620      	mov	r0, r4
 80111fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011200:	a907      	add	r1, sp, #28
 8011202:	4798      	blx	r3
 8011204:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011208:	eba0 000a 	sub.w	r0, r0, sl
 801120c:	b200      	sxth	r0, r0
 801120e:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011212:	2800      	cmp	r0, #0
 8011214:	f47f af6a 	bne.w	80110ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8011218:	b2b1      	uxth	r1, r6
 801121a:	4648      	mov	r0, r9
 801121c:	f7ff faa2 	bl	8010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011220:	e764      	b.n	80110ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8011222:	d10c      	bne.n	801123e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 8011224:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 8011228:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 801122c:	45b4      	cmp	ip, r6
 801122e:	bfb4      	ite	lt
 8011230:	4684      	movlt	ip, r0
 8011232:	46d4      	movge	ip, sl
 8011234:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 8011238:	4433      	add	r3, r6
 801123a:	b21b      	sxth	r3, r3
 801123c:	e74e      	b.n	80110dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 801123e:	4575      	cmp	r5, lr
 8011240:	bfa8      	it	ge
 8011242:	4675      	movge	r5, lr
 8011244:	46d4      	mov	ip, sl
 8011246:	e74c      	b.n	80110e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 8011248:	eb0b 0006 	add.w	r0, fp, r6
 801124c:	4426      	add	r6, r4
 801124e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8011252:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 8011256:	f1b9 0f13 	cmp.w	r9, #19
 801125a:	bfde      	ittt	le
 801125c:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 8011260:	444d      	addle	r5, r9
 8011262:	b22d      	sxthle	r5, r5
 8011264:	f7fb f807 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011268:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801126c:	2800      	cmp	r0, #0
 801126e:	f47f af15 	bne.w	801109c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 8011272:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 8011276:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801127a:	eba5 050c 	sub.w	r5, r5, ip
 801127e:	fa1f f28c 	uxth.w	r2, ip
 8011282:	fa1f f989 	uxth.w	r9, r9
 8011286:	eb02 0009 	add.w	r0, r2, r9
 801128a:	2d14      	cmp	r5, #20
 801128c:	bfa8      	it	ge
 801128e:	2514      	movge	r5, #20
 8011290:	b200      	sxth	r0, r0
 8011292:	fa1f fe85 	uxth.w	lr, r5
 8011296:	eba0 000c 	sub.w	r0, r0, ip
 801129a:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 801129e:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 80112a2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80112a6:	4586      	cmp	lr, r0
 80112a8:	f8d8 0000 	ldr.w	r0, [r8]
 80112ac:	f8ad c01e 	strh.w	ip, [sp, #30]
 80112b0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80112b4:	bfb8      	it	lt
 80112b6:	46f1      	movlt	r9, lr
 80112b8:	6805      	ldr	r5, [r0, #0]
 80112ba:	f8cd 9000 	str.w	r9, [sp]
 80112be:	b29b      	uxth	r3, r3
 80112c0:	b289      	uxth	r1, r1
 80112c2:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 80112c6:	47a8      	blx	r5
 80112c8:	6823      	ldr	r3, [r4, #0]
 80112ca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80112ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80112d0:	a907      	add	r1, sp, #28
 80112d2:	4620      	mov	r0, r4
 80112d4:	4798      	blx	r3
 80112d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80112da:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 80112de:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 80112e2:	1a5b      	subs	r3, r3, r1
 80112e4:	440a      	add	r2, r1
 80112e6:	b21b      	sxth	r3, r3
 80112e8:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 80112ec:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 80112f0:	2b00      	cmp	r3, #0
 80112f2:	f47f aece 	bne.w	8011092 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 80112f6:	fa1f f18a 	uxth.w	r1, sl
 80112fa:	4658      	mov	r0, fp
 80112fc:	f7ff fa32 	bl	8010764 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011300:	e6c7      	b.n	8011092 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 8011302:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011306:	42ab      	cmp	r3, r5
 8011308:	f67f ae9f 	bls.w	801104a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 801130c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011310:	ab07      	add	r3, sp, #28
 8011312:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011316:	6851      	ldr	r1, [r2, #4]
 8011318:	c303      	stmia	r3!, {r0, r1}
 801131a:	a807      	add	r0, sp, #28
 801131c:	f7fa ffab 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011320:	b920      	cbnz	r0, 801132c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 8011322:	6823      	ldr	r3, [r4, #0]
 8011324:	a907      	add	r1, sp, #28
 8011326:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011328:	4620      	mov	r0, r4
 801132a:	4798      	blx	r3
 801132c:	3501      	adds	r5, #1
 801132e:	b2ad      	uxth	r5, r5
 8011330:	e7e7      	b.n	8011302 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 8011332:	bf00      	nop

08011334 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011334:	4b03      	ldr	r3, [pc, #12]	; (8011344 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011336:	2200      	movs	r2, #0
 8011338:	801a      	strh	r2, [r3, #0]
 801133a:	805a      	strh	r2, [r3, #2]
 801133c:	809a      	strh	r2, [r3, #4]
 801133e:	80da      	strh	r2, [r3, #6]
 8011340:	4770      	bx	lr
 8011342:	bf00      	nop
 8011344:	2000eb74 	.word	0x2000eb74

08011348 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801134c:	4606      	mov	r6, r0
 801134e:	b09b      	sub	sp, #108	; 0x6c
 8011350:	a803      	add	r0, sp, #12
 8011352:	4614      	mov	r4, r2
 8011354:	468a      	mov	sl, r1
 8011356:	461d      	mov	r5, r3
 8011358:	f000 fe8b 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 801135c:	6833      	ldr	r3, [r6, #0]
 801135e:	4630      	mov	r0, r6
 8011360:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011362:	4798      	blx	r3
 8011364:	6833      	ldr	r3, [r6, #0]
 8011366:	4607      	mov	r7, r0
 8011368:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801136a:	4630      	mov	r0, r6
 801136c:	4798      	blx	r3
 801136e:	462a      	mov	r2, r5
 8011370:	9000      	str	r0, [sp, #0]
 8011372:	4621      	mov	r1, r4
 8011374:	463b      	mov	r3, r7
 8011376:	a803      	add	r0, sp, #12
 8011378:	f000 fec8 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801137c:	2500      	movs	r5, #0
 801137e:	462c      	mov	r4, r5
 8011380:	46a9      	mov	r9, r5
 8011382:	46a8      	mov	r8, r5
 8011384:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011388:	2300      	movs	r3, #0
 801138a:	9302      	str	r3, [sp, #8]
 801138c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011390:	429c      	cmp	r4, r3
 8011392:	d002      	beq.n	801139a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011394:	455c      	cmp	r4, fp
 8011396:	bf18      	it	ne
 8011398:	4625      	movne	r5, r4
 801139a:	ab02      	add	r3, sp, #8
 801139c:	4632      	mov	r2, r6
 801139e:	4651      	mov	r1, sl
 80113a0:	a803      	add	r0, sp, #12
 80113a2:	f001 f9af 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80113a6:	4604      	mov	r4, r0
 80113a8:	b108      	cbz	r0, 80113ae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80113aa:	280a      	cmp	r0, #10
 80113ac:	d10a      	bne.n	80113c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80113ae:	45c1      	cmp	r9, r8
 80113b0:	bf38      	it	cc
 80113b2:	46c1      	movcc	r9, r8
 80113b4:	f04f 0800 	mov.w	r8, #0
 80113b8:	2c00      	cmp	r4, #0
 80113ba:	d1e5      	bne.n	8011388 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80113bc:	4648      	mov	r0, r9
 80113be:	b01b      	add	sp, #108	; 0x6c
 80113c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113c4:	9a02      	ldr	r2, [sp, #8]
 80113c6:	2a00      	cmp	r2, #0
 80113c8:	d0de      	beq.n	8011388 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80113ca:	7b57      	ldrb	r7, [r2, #13]
 80113cc:	6833      	ldr	r3, [r6, #0]
 80113ce:	8894      	ldrh	r4, [r2, #4]
 80113d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80113d2:	007f      	lsls	r7, r7, #1
 80113d4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80113d8:	7a97      	ldrb	r7, [r2, #10]
 80113da:	4629      	mov	r1, r5
 80113dc:	4307      	orrs	r7, r0
 80113de:	4630      	mov	r0, r6
 80113e0:	4798      	blx	r3
 80113e2:	4438      	add	r0, r7
 80113e4:	4480      	add	r8, r0
 80113e6:	fa1f f888 	uxth.w	r8, r8
 80113ea:	e7e5      	b.n	80113b8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080113ec <_ZNK8touchgfx4Font12getCharWidthEt>:
 80113ec:	b508      	push	{r3, lr}
 80113ee:	6803      	ldr	r3, [r0, #0]
 80113f0:	68db      	ldr	r3, [r3, #12]
 80113f2:	4798      	blx	r3
 80113f4:	b128      	cbz	r0, 8011402 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80113f6:	7b43      	ldrb	r3, [r0, #13]
 80113f8:	7a80      	ldrb	r0, [r0, #10]
 80113fa:	005b      	lsls	r3, r3, #1
 80113fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011400:	4318      	orrs	r0, r3
 8011402:	bd08      	pop	{r3, pc}

08011404 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011404:	b40e      	push	{r1, r2, r3}
 8011406:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011408:	b09c      	sub	sp, #112	; 0x70
 801140a:	ab21      	add	r3, sp, #132	; 0x84
 801140c:	4605      	mov	r5, r0
 801140e:	f853 4b04 	ldr.w	r4, [r3], #4
 8011412:	9303      	str	r3, [sp, #12]
 8011414:	a805      	add	r0, sp, #20
 8011416:	f000 fe2c 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 801141a:	682b      	ldr	r3, [r5, #0]
 801141c:	4628      	mov	r0, r5
 801141e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011420:	4798      	blx	r3
 8011422:	682b      	ldr	r3, [r5, #0]
 8011424:	4606      	mov	r6, r0
 8011426:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011428:	4628      	mov	r0, r5
 801142a:	4798      	blx	r3
 801142c:	4633      	mov	r3, r6
 801142e:	ae1c      	add	r6, sp, #112	; 0x70
 8011430:	4621      	mov	r1, r4
 8011432:	9000      	str	r0, [sp, #0]
 8011434:	9a03      	ldr	r2, [sp, #12]
 8011436:	2400      	movs	r4, #0
 8011438:	a805      	add	r0, sp, #20
 801143a:	f000 fe67 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801143e:	f846 4d60 	str.w	r4, [r6, #-96]!
 8011442:	462a      	mov	r2, r5
 8011444:	4633      	mov	r3, r6
 8011446:	4621      	mov	r1, r4
 8011448:	a805      	add	r0, sp, #20
 801144a:	f001 f95b 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801144e:	b1f0      	cbz	r0, 801148e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011450:	280a      	cmp	r0, #10
 8011452:	d018      	beq.n	8011486 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011454:	9f04      	ldr	r7, [sp, #16]
 8011456:	b1b7      	cbz	r7, 8011486 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011458:	7b78      	ldrb	r0, [r7, #13]
 801145a:	7a3b      	ldrb	r3, [r7, #8]
 801145c:	88aa      	ldrh	r2, [r5, #4]
 801145e:	00c1      	lsls	r1, r0, #3
 8011460:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011464:	4319      	orrs	r1, r3
 8011466:	0643      	lsls	r3, r0, #25
 8011468:	bf44      	itt	mi
 801146a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801146e:	b219      	sxthmi	r1, r3
 8011470:	0100      	lsls	r0, r0, #4
 8011472:	79fb      	ldrb	r3, [r7, #7]
 8011474:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011478:	4303      	orrs	r3, r0
 801147a:	4413      	add	r3, r2
 801147c:	1a5b      	subs	r3, r3, r1
 801147e:	b29b      	uxth	r3, r3
 8011480:	42a3      	cmp	r3, r4
 8011482:	bfc8      	it	gt
 8011484:	b21c      	sxthgt	r4, r3
 8011486:	4633      	mov	r3, r6
 8011488:	462a      	mov	r2, r5
 801148a:	2100      	movs	r1, #0
 801148c:	e7dc      	b.n	8011448 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801148e:	b2a0      	uxth	r0, r4
 8011490:	b01c      	add	sp, #112	; 0x70
 8011492:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011496:	b003      	add	sp, #12
 8011498:	4770      	bx	lr

0801149a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801149a:	b40e      	push	{r1, r2, r3}
 801149c:	b570      	push	{r4, r5, r6, lr}
 801149e:	b09b      	sub	sp, #108	; 0x6c
 80114a0:	ab1f      	add	r3, sp, #124	; 0x7c
 80114a2:	4604      	mov	r4, r0
 80114a4:	f853 5b04 	ldr.w	r5, [r3], #4
 80114a8:	9302      	str	r3, [sp, #8]
 80114aa:	a803      	add	r0, sp, #12
 80114ac:	f000 fde1 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 80114b0:	6823      	ldr	r3, [r4, #0]
 80114b2:	4620      	mov	r0, r4
 80114b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80114b6:	4798      	blx	r3
 80114b8:	6823      	ldr	r3, [r4, #0]
 80114ba:	4606      	mov	r6, r0
 80114bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80114be:	4620      	mov	r0, r4
 80114c0:	4798      	blx	r3
 80114c2:	4633      	mov	r3, r6
 80114c4:	9000      	str	r0, [sp, #0]
 80114c6:	9a02      	ldr	r2, [sp, #8]
 80114c8:	4629      	mov	r1, r5
 80114ca:	a803      	add	r0, sp, #12
 80114cc:	f000 fe1e 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80114d0:	a803      	add	r0, sp, #12
 80114d2:	f001 fa0f 	bl	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80114d6:	2401      	movs	r4, #1
 80114d8:	b2a3      	uxth	r3, r4
 80114da:	b140      	cbz	r0, 80114ee <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80114dc:	280a      	cmp	r0, #10
 80114de:	bf08      	it	eq
 80114e0:	3301      	addeq	r3, #1
 80114e2:	a803      	add	r0, sp, #12
 80114e4:	bf08      	it	eq
 80114e6:	b21c      	sxtheq	r4, r3
 80114e8:	f001 fa04 	bl	80128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80114ec:	e7f4      	b.n	80114d8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80114ee:	4618      	mov	r0, r3
 80114f0:	b01b      	add	sp, #108	; 0x6c
 80114f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114f6:	b003      	add	sp, #12
 80114f8:	4770      	bx	lr

080114fa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80114fa:	b40e      	push	{r1, r2, r3}
 80114fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114fe:	b09c      	sub	sp, #112	; 0x70
 8011500:	ab21      	add	r3, sp, #132	; 0x84
 8011502:	4604      	mov	r4, r0
 8011504:	f853 5b04 	ldr.w	r5, [r3], #4
 8011508:	9303      	str	r3, [sp, #12]
 801150a:	a805      	add	r0, sp, #20
 801150c:	f000 fdb1 	bl	8012072 <_ZN8touchgfx12TextProviderC1Ev>
 8011510:	6823      	ldr	r3, [r4, #0]
 8011512:	4620      	mov	r0, r4
 8011514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011516:	4798      	blx	r3
 8011518:	6823      	ldr	r3, [r4, #0]
 801151a:	4606      	mov	r6, r0
 801151c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801151e:	4620      	mov	r0, r4
 8011520:	4798      	blx	r3
 8011522:	4633      	mov	r3, r6
 8011524:	4629      	mov	r1, r5
 8011526:	9000      	str	r0, [sp, #0]
 8011528:	9a03      	ldr	r2, [sp, #12]
 801152a:	a805      	add	r0, sp, #20
 801152c:	ad1c      	add	r5, sp, #112	; 0x70
 801152e:	f000 fded 	bl	801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011532:	2100      	movs	r1, #0
 8011534:	f845 1d60 	str.w	r1, [r5, #-96]!
 8011538:	4622      	mov	r2, r4
 801153a:	462b      	mov	r3, r5
 801153c:	a805      	add	r0, sp, #20
 801153e:	f001 f8e1 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011542:	26ff      	movs	r6, #255	; 0xff
 8011544:	b1d8      	cbz	r0, 801157e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011546:	280a      	cmp	r0, #10
 8011548:	d012      	beq.n	8011570 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801154a:	9804      	ldr	r0, [sp, #16]
 801154c:	b180      	cbz	r0, 8011570 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801154e:	7b47      	ldrb	r7, [r0, #13]
 8011550:	7922      	ldrb	r2, [r4, #4]
 8011552:	00fb      	lsls	r3, r7, #3
 8011554:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011558:	7a03      	ldrb	r3, [r0, #8]
 801155a:	430b      	orrs	r3, r1
 801155c:	0679      	lsls	r1, r7, #25
 801155e:	bf44      	itt	mi
 8011560:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011564:	b21b      	sxthmi	r3, r3
 8011566:	1ad3      	subs	r3, r2, r3
 8011568:	b2db      	uxtb	r3, r3
 801156a:	429e      	cmp	r6, r3
 801156c:	bf28      	it	cs
 801156e:	461e      	movcs	r6, r3
 8011570:	462b      	mov	r3, r5
 8011572:	4622      	mov	r2, r4
 8011574:	2100      	movs	r1, #0
 8011576:	a805      	add	r0, sp, #20
 8011578:	f001 f8c4 	bl	8012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801157c:	e7e2      	b.n	8011544 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 801157e:	4630      	mov	r0, r6
 8011580:	b01c      	add	sp, #112	; 0x70
 8011582:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011586:	b003      	add	sp, #12
 8011588:	4770      	bx	lr

0801158a <_ZNK8touchgfx8Drawable10invalidateEv>:
 801158a:	b513      	push	{r0, r1, r4, lr}
 801158c:	1d01      	adds	r1, r0, #4
 801158e:	4603      	mov	r3, r0
 8011590:	c903      	ldmia	r1, {r0, r1}
 8011592:	466a      	mov	r2, sp
 8011594:	e882 0003 	stmia.w	r2, {r0, r1}
 8011598:	2100      	movs	r1, #0
 801159a:	9100      	str	r1, [sp, #0]
 801159c:	6819      	ldr	r1, [r3, #0]
 801159e:	4618      	mov	r0, r3
 80115a0:	690c      	ldr	r4, [r1, #16]
 80115a2:	4611      	mov	r1, r2
 80115a4:	47a0      	blx	r4
 80115a6:	b002      	add	sp, #8
 80115a8:	bd10      	pop	{r4, pc}

080115aa <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80115aa:	b538      	push	{r3, r4, r5, lr}
 80115ac:	680b      	ldr	r3, [r1, #0]
 80115ae:	460c      	mov	r4, r1
 80115b0:	68db      	ldr	r3, [r3, #12]
 80115b2:	4605      	mov	r5, r0
 80115b4:	4798      	blx	r3
 80115b6:	6823      	ldr	r3, [r4, #0]
 80115b8:	4620      	mov	r0, r4
 80115ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80115bc:	4629      	mov	r1, r5
 80115be:	4798      	blx	r3
 80115c0:	4628      	mov	r0, r5
 80115c2:	bd38      	pop	{r3, r4, r5, pc}

080115c4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80115c4:	b410      	push	{r4}
 80115c6:	880a      	ldrh	r2, [r1, #0]
 80115c8:	8884      	ldrh	r4, [r0, #4]
 80115ca:	4422      	add	r2, r4
 80115cc:	800a      	strh	r2, [r1, #0]
 80115ce:	88c4      	ldrh	r4, [r0, #6]
 80115d0:	884a      	ldrh	r2, [r1, #2]
 80115d2:	4422      	add	r2, r4
 80115d4:	804a      	strh	r2, [r1, #2]
 80115d6:	6940      	ldr	r0, [r0, #20]
 80115d8:	b120      	cbz	r0, 80115e4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80115da:	6803      	ldr	r3, [r0, #0]
 80115dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80115e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80115e2:	4718      	bx	r3
 80115e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80115e8:	4770      	bx	lr

080115ea <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80115ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80115ec:	460b      	mov	r3, r1
 80115ee:	b085      	sub	sp, #20
 80115f0:	4604      	mov	r4, r0
 80115f2:	b901      	cbnz	r1, 80115f6 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80115f4:	b322      	cbz	r2, 8011640 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 80115f6:	1d27      	adds	r7, r4, #4
 80115f8:	e897 0003 	ldmia.w	r7, {r0, r1}
 80115fc:	466e      	mov	r6, sp
 80115fe:	e886 0003 	stmia.w	r6, {r0, r1}
 8011602:	88a1      	ldrh	r1, [r4, #4]
 8011604:	88e5      	ldrh	r5, [r4, #6]
 8011606:	4419      	add	r1, r3
 8011608:	6823      	ldr	r3, [r4, #0]
 801160a:	442a      	add	r2, r5
 801160c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801160e:	b209      	sxth	r1, r1
 8011610:	4620      	mov	r0, r4
 8011612:	b215      	sxth	r5, r2
 8011614:	4798      	blx	r3
 8011616:	6823      	ldr	r3, [r4, #0]
 8011618:	4629      	mov	r1, r5
 801161a:	4620      	mov	r0, r4
 801161c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801161e:	4798      	blx	r3
 8011620:	e897 0003 	ldmia.w	r7, {r0, r1}
 8011624:	ad02      	add	r5, sp, #8
 8011626:	e885 0003 	stmia.w	r5, {r0, r1}
 801162a:	6960      	ldr	r0, [r4, #20]
 801162c:	b150      	cbz	r0, 8011644 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 801162e:	6803      	ldr	r3, [r0, #0]
 8011630:	4631      	mov	r1, r6
 8011632:	691b      	ldr	r3, [r3, #16]
 8011634:	4798      	blx	r3
 8011636:	6960      	ldr	r0, [r4, #20]
 8011638:	6803      	ldr	r3, [r0, #0]
 801163a:	691b      	ldr	r3, [r3, #16]
 801163c:	4629      	mov	r1, r5
 801163e:	4798      	blx	r3
 8011640:	b005      	add	sp, #20
 8011642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011644:	f7ff f82a 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 8011648:	6803      	ldr	r3, [r0, #0]
 801164a:	4631      	mov	r1, r6
 801164c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801164e:	4798      	blx	r3
 8011650:	f7ff f824 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 8011654:	6803      	ldr	r3, [r0, #0]
 8011656:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011658:	e7f0      	b.n	801163c <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0801165a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801165a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801165c:	8882      	ldrh	r2, [r0, #4]
 801165e:	880b      	ldrh	r3, [r1, #0]
 8011660:	4413      	add	r3, r2
 8011662:	800b      	strh	r3, [r1, #0]
 8011664:	88c2      	ldrh	r2, [r0, #6]
 8011666:	884b      	ldrh	r3, [r1, #2]
 8011668:	4413      	add	r3, r2
 801166a:	4602      	mov	r2, r0
 801166c:	804b      	strh	r3, [r1, #2]
 801166e:	4605      	mov	r5, r0
 8011670:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011674:	460c      	mov	r4, r1
 8011676:	6851      	ldr	r1, [r2, #4]
 8011678:	466b      	mov	r3, sp
 801167a:	c303      	stmia	r3!, {r0, r1}
 801167c:	4621      	mov	r1, r4
 801167e:	4668      	mov	r0, sp
 8011680:	f7fa fdb6 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 8011684:	466b      	mov	r3, sp
 8011686:	cb03      	ldmia	r3!, {r0, r1}
 8011688:	6020      	str	r0, [r4, #0]
 801168a:	6061      	str	r1, [r4, #4]
 801168c:	6968      	ldr	r0, [r5, #20]
 801168e:	b128      	cbz	r0, 801169c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 8011690:	6803      	ldr	r3, [r0, #0]
 8011692:	691b      	ldr	r3, [r3, #16]
 8011694:	4621      	mov	r1, r4
 8011696:	4798      	blx	r3
 8011698:	b003      	add	sp, #12
 801169a:	bd30      	pop	{r4, r5, pc}
 801169c:	f7fe fffe 	bl	801069c <_ZN8touchgfx11Application11getInstanceEv>
 80116a0:	6803      	ldr	r3, [r0, #0]
 80116a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80116a4:	e7f6      	b.n	8011694 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

080116a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80116a6:	b570      	push	{r4, r5, r6, lr}
 80116a8:	8882      	ldrh	r2, [r0, #4]
 80116aa:	880b      	ldrh	r3, [r1, #0]
 80116ac:	4413      	add	r3, r2
 80116ae:	800b      	strh	r3, [r1, #0]
 80116b0:	88c2      	ldrh	r2, [r0, #6]
 80116b2:	884b      	ldrh	r3, [r1, #2]
 80116b4:	460c      	mov	r4, r1
 80116b6:	4413      	add	r3, r2
 80116b8:	804b      	strh	r3, [r1, #2]
 80116ba:	4605      	mov	r5, r0
 80116bc:	1d01      	adds	r1, r0, #4
 80116be:	4620      	mov	r0, r4
 80116c0:	f7fa fd96 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 80116c4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80116c8:	2b00      	cmp	r3, #0
 80116ca:	dd0b      	ble.n	80116e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80116cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80116d0:	2b00      	cmp	r3, #0
 80116d2:	dd07      	ble.n	80116e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80116d4:	6968      	ldr	r0, [r5, #20]
 80116d6:	b128      	cbz	r0, 80116e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80116d8:	6803      	ldr	r3, [r0, #0]
 80116da:	4621      	mov	r1, r4
 80116dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116e2:	4718      	bx	r3
 80116e4:	bd70      	pop	{r4, r5, r6, pc}

080116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80116e6:	b510      	push	{r4, lr}
 80116e8:	4604      	mov	r4, r0
 80116ea:	4608      	mov	r0, r1
 80116ec:	2300      	movs	r3, #0
 80116ee:	8023      	strh	r3, [r4, #0]
 80116f0:	8063      	strh	r3, [r4, #2]
 80116f2:	6803      	ldr	r3, [r0, #0]
 80116f4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80116f8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80116fc:	80a1      	strh	r1, [r4, #4]
 80116fe:	80e2      	strh	r2, [r4, #6]
 8011700:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011702:	4621      	mov	r1, r4
 8011704:	4798      	blx	r3
 8011706:	4620      	mov	r0, r4
 8011708:	bd10      	pop	{r4, pc}
	...

0801170c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 801170c:	b530      	push	{r4, r5, lr}
 801170e:	8083      	strh	r3, [r0, #4]
 8011710:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011714:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8011718:	7183      	strb	r3, [r0, #6]
 801171a:	79c3      	ldrb	r3, [r0, #7]
 801171c:	6101      	str	r1, [r0, #16]
 801171e:	f365 0306 	bfi	r3, r5, #0, #7
 8011722:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8011726:	8282      	strh	r2, [r0, #20]
 8011728:	f365 13c7 	bfi	r3, r5, #7, #1
 801172c:	71c3      	strb	r3, [r0, #7]
 801172e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011732:	7203      	strb	r3, [r0, #8]
 8011734:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011738:	7243      	strb	r3, [r0, #9]
 801173a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801173e:	8143      	strh	r3, [r0, #10]
 8011740:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011744:	8183      	strh	r3, [r0, #12]
 8011746:	4b01      	ldr	r3, [pc, #4]	; (801174c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8011748:	6003      	str	r3, [r0, #0]
 801174a:	bd30      	pop	{r4, r5, pc}
 801174c:	08024998 	.word	0x08024998

08011750 <_ZNK8touchgfx9ConstFont4findEt>:
 8011750:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011752:	6904      	ldr	r4, [r0, #16]
 8011754:	b3bc      	cbz	r4, 80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011756:	88a3      	ldrh	r3, [r4, #4]
 8011758:	8a82      	ldrh	r2, [r0, #20]
 801175a:	1acb      	subs	r3, r1, r3
 801175c:	f102 32ff 	add.w	r2, r2, #4294967295
 8011760:	d431      	bmi.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011762:	4293      	cmp	r3, r2
 8011764:	dd0c      	ble.n	8011780 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011766:	230e      	movs	r3, #14
 8011768:	fb03 4302 	mla	r3, r3, r2, r4
 801176c:	889b      	ldrh	r3, [r3, #4]
 801176e:	1a5b      	subs	r3, r3, r1
 8011770:	1ad3      	subs	r3, r2, r3
 8011772:	429a      	cmp	r2, r3
 8011774:	db27      	blt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011776:	2b00      	cmp	r3, #0
 8011778:	bfbc      	itt	lt
 801177a:	2302      	movlt	r3, #2
 801177c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011780:	2500      	movs	r5, #0
 8011782:	260e      	movs	r6, #14
 8011784:	4295      	cmp	r5, r2
 8011786:	dc1e      	bgt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011788:	fb06 4003 	mla	r0, r6, r3, r4
 801178c:	8887      	ldrh	r7, [r0, #4]
 801178e:	42b9      	cmp	r1, r7
 8011790:	d01a      	beq.n	80117c8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011792:	d20d      	bcs.n	80117b0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011794:	1e5a      	subs	r2, r3, #1
 8011796:	4295      	cmp	r5, r2
 8011798:	dc15      	bgt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801179a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801179e:	1a5b      	subs	r3, r3, r1
 80117a0:	1ad3      	subs	r3, r2, r3
 80117a2:	429a      	cmp	r2, r3
 80117a4:	db0f      	blt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117a6:	429d      	cmp	r5, r3
 80117a8:	ddec      	ble.n	8011784 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117aa:	1953      	adds	r3, r2, r5
 80117ac:	105b      	asrs	r3, r3, #1
 80117ae:	e7e9      	b.n	8011784 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117b0:	1c5d      	adds	r5, r3, #1
 80117b2:	42aa      	cmp	r2, r5
 80117b4:	db07      	blt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117b6:	8a43      	ldrh	r3, [r0, #18]
 80117b8:	1acb      	subs	r3, r1, r3
 80117ba:	442b      	add	r3, r5
 80117bc:	429d      	cmp	r5, r3
 80117be:	dc02      	bgt.n	80117c6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80117c0:	429a      	cmp	r2, r3
 80117c2:	dadf      	bge.n	8011784 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80117c4:	e7f1      	b.n	80117aa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80117c6:	2000      	movs	r0, #0
 80117c8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080117ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80117ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117cc:	4604      	mov	r4, r0
 80117ce:	4617      	mov	r7, r2
 80117d0:	461e      	mov	r6, r3
 80117d2:	b911      	cbnz	r1, 80117da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80117d4:	2500      	movs	r5, #0
 80117d6:	4628      	mov	r0, r5
 80117d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80117da:	290a      	cmp	r1, #10
 80117dc:	d0fa      	beq.n	80117d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117de:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80117e2:	4291      	cmp	r1, r2
 80117e4:	d0f6      	beq.n	80117d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117e6:	f242 020b 	movw	r2, #8203	; 0x200b
 80117ea:	4291      	cmp	r1, r2
 80117ec:	d0f2      	beq.n	80117d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80117ee:	f7ff ffaf 	bl	8011750 <_ZNK8touchgfx9ConstFont4findEt>
 80117f2:	4605      	mov	r5, r0
 80117f4:	b950      	cbnz	r0, 801180c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80117f6:	6823      	ldr	r3, [r4, #0]
 80117f8:	4620      	mov	r0, r4
 80117fa:	691b      	ldr	r3, [r3, #16]
 80117fc:	4798      	blx	r3
 80117fe:	4601      	mov	r1, r0
 8011800:	4620      	mov	r0, r4
 8011802:	f7ff ffa5 	bl	8011750 <_ZNK8touchgfx9ConstFont4findEt>
 8011806:	4605      	mov	r5, r0
 8011808:	2800      	cmp	r0, #0
 801180a:	d0e3      	beq.n	80117d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801180c:	6823      	ldr	r3, [r4, #0]
 801180e:	4629      	mov	r1, r5
 8011810:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011812:	4620      	mov	r0, r4
 8011814:	4798      	blx	r3
 8011816:	6038      	str	r0, [r7, #0]
 8011818:	6823      	ldr	r3, [r4, #0]
 801181a:	4620      	mov	r0, r4
 801181c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801181e:	4798      	blx	r3
 8011820:	7030      	strb	r0, [r6, #0]
 8011822:	e7d8      	b.n	80117d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011824 <_ZN8touchgfx6memsetEPvhm>:
 8011824:	4402      	add	r2, r0
 8011826:	4290      	cmp	r0, r2
 8011828:	d002      	beq.n	8011830 <_ZN8touchgfx6memsetEPvhm+0xc>
 801182a:	f800 1b01 	strb.w	r1, [r0], #1
 801182e:	e7fa      	b.n	8011826 <_ZN8touchgfx6memsetEPvhm+0x2>
 8011830:	4770      	bx	lr

08011832 <_ZN8touchgfx4clzuEm>:
 8011832:	4603      	mov	r3, r0
 8011834:	b1c8      	cbz	r0, 801186a <_ZN8touchgfx4clzuEm+0x38>
 8011836:	0c02      	lsrs	r2, r0, #16
 8011838:	0412      	lsls	r2, r2, #16
 801183a:	b9a2      	cbnz	r2, 8011866 <_ZN8touchgfx4clzuEm+0x34>
 801183c:	0403      	lsls	r3, r0, #16
 801183e:	2010      	movs	r0, #16
 8011840:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011844:	bf04      	itt	eq
 8011846:	021b      	lsleq	r3, r3, #8
 8011848:	3008      	addeq	r0, #8
 801184a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801184e:	bf04      	itt	eq
 8011850:	011b      	lsleq	r3, r3, #4
 8011852:	3004      	addeq	r0, #4
 8011854:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011858:	bf04      	itt	eq
 801185a:	009b      	lsleq	r3, r3, #2
 801185c:	3002      	addeq	r0, #2
 801185e:	2b00      	cmp	r3, #0
 8011860:	db04      	blt.n	801186c <_ZN8touchgfx4clzuEm+0x3a>
 8011862:	3001      	adds	r0, #1
 8011864:	4770      	bx	lr
 8011866:	2000      	movs	r0, #0
 8011868:	e7ea      	b.n	8011840 <_ZN8touchgfx4clzuEm+0xe>
 801186a:	2020      	movs	r0, #32
 801186c:	4770      	bx	lr

0801186e <_ZN8touchgfx7muldivuEmmmRm>:
 801186e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011872:	4680      	mov	r8, r0
 8011874:	460f      	mov	r7, r1
 8011876:	4615      	mov	r5, r2
 8011878:	461e      	mov	r6, r3
 801187a:	f7ff ffda 	bl	8011832 <_ZN8touchgfx4clzuEm>
 801187e:	b998      	cbnz	r0, 80118a8 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8011880:	4608      	mov	r0, r1
 8011882:	f7ff ffd6 	bl	8011832 <_ZN8touchgfx4clzuEm>
 8011886:	2800      	cmp	r0, #0
 8011888:	dd08      	ble.n	801189c <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801188a:	4633      	mov	r3, r6
 801188c:	462a      	mov	r2, r5
 801188e:	4641      	mov	r1, r8
 8011890:	4638      	mov	r0, r7
 8011892:	f7ff ffec 	bl	801186e <_ZN8touchgfx7muldivuEmmmRm>
 8011896:	b003      	add	sp, #12
 8011898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801189c:	f04f 33ff 	mov.w	r3, #4294967295
 80118a0:	6033      	str	r3, [r6, #0]
 80118a2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80118a6:	e7f6      	b.n	8011896 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80118a8:	fa31 f900 	lsrs.w	r9, r1, r0
 80118ac:	fb01 f308 	mul.w	r3, r1, r8
 80118b0:	d105      	bne.n	80118be <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80118b2:	fbb3 f0f5 	udiv	r0, r3, r5
 80118b6:	fb05 3510 	mls	r5, r5, r0, r3
 80118ba:	6035      	str	r5, [r6, #0]
 80118bc:	e7eb      	b.n	8011896 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80118be:	2301      	movs	r3, #1
 80118c0:	fa08 fb00 	lsl.w	fp, r8, r0
 80118c4:	fa03 f000 	lsl.w	r0, r3, r0
 80118c8:	3801      	subs	r0, #1
 80118ca:	462a      	mov	r2, r5
 80118cc:	4633      	mov	r3, r6
 80118ce:	4641      	mov	r1, r8
 80118d0:	4038      	ands	r0, r7
 80118d2:	f7ff ffcc 	bl	801186e <_ZN8touchgfx7muldivuEmmmRm>
 80118d6:	fbbb faf5 	udiv	sl, fp, r5
 80118da:	462a      	mov	r2, r5
 80118dc:	4607      	mov	r7, r0
 80118de:	ab01      	add	r3, sp, #4
 80118e0:	fb05 b11a 	mls	r1, r5, sl, fp
 80118e4:	4648      	mov	r0, r9
 80118e6:	f7ff ffc2 	bl	801186e <_ZN8touchgfx7muldivuEmmmRm>
 80118ea:	9b01      	ldr	r3, [sp, #4]
 80118ec:	6832      	ldr	r2, [r6, #0]
 80118ee:	fb09 f40a 	mul.w	r4, r9, sl
 80118f2:	441a      	add	r2, r3
 80118f4:	fbb2 f3f5 	udiv	r3, r2, r5
 80118f8:	441c      	add	r4, r3
 80118fa:	443c      	add	r4, r7
 80118fc:	4420      	add	r0, r4
 80118fe:	fb05 2513 	mls	r5, r5, r3, r2
 8011902:	e7da      	b.n	80118ba <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08011904 <_ZN8touchgfx6muldivElllRl>:
 8011904:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011906:	2800      	cmp	r0, #0
 8011908:	bfba      	itte	lt
 801190a:	4240      	neglt	r0, r0
 801190c:	f04f 34ff 	movlt.w	r4, #4294967295
 8011910:	2401      	movge	r4, #1
 8011912:	2900      	cmp	r1, #0
 8011914:	bfbc      	itt	lt
 8011916:	4249      	neglt	r1, r1
 8011918:	4264      	neglt	r4, r4
 801191a:	2a00      	cmp	r2, #0
 801191c:	bfb6      	itet	lt
 801191e:	4265      	neglt	r5, r4
 8011920:	4625      	movge	r5, r4
 8011922:	4252      	neglt	r2, r2
 8011924:	4288      	cmp	r0, r1
 8011926:	461e      	mov	r6, r3
 8011928:	bfc2      	ittt	gt
 801192a:	4603      	movgt	r3, r0
 801192c:	4608      	movgt	r0, r1
 801192e:	4619      	movgt	r1, r3
 8011930:	ab01      	add	r3, sp, #4
 8011932:	f7ff ff9c 	bl	801186e <_ZN8touchgfx7muldivuEmmmRm>
 8011936:	9b01      	ldr	r3, [sp, #4]
 8011938:	4368      	muls	r0, r5
 801193a:	435c      	muls	r4, r3
 801193c:	6034      	str	r4, [r6, #0]
 801193e:	b002      	add	sp, #8
 8011940:	bd70      	pop	{r4, r5, r6, pc}

08011942 <_ZN8touchgfx6muldivElll>:
 8011942:	b513      	push	{r0, r1, r4, lr}
 8011944:	ab01      	add	r3, sp, #4
 8011946:	4614      	mov	r4, r2
 8011948:	f7ff ffdc 	bl	8011904 <_ZN8touchgfx6muldivElllRl>
 801194c:	ea84 72e4 	eor.w	r2, r4, r4, asr #31
 8011950:	2800      	cmp	r0, #0
 8011952:	eba2 72e4 	sub.w	r2, r2, r4, asr #31
 8011956:	9b01      	ldr	r3, [sp, #4]
 8011958:	db0a      	blt.n	8011970 <_ZN8touchgfx6muldivElll+0x2e>
 801195a:	2b00      	cmp	r3, #0
 801195c:	f102 0201 	add.w	r2, r2, #1
 8011960:	bfb8      	it	lt
 8011962:	425b      	neglt	r3, r3
 8011964:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 8011968:	db00      	blt.n	801196c <_ZN8touchgfx6muldivElll+0x2a>
 801196a:	3001      	adds	r0, #1
 801196c:	b002      	add	sp, #8
 801196e:	bd10      	pop	{r4, pc}
 8011970:	2b00      	cmp	r3, #0
 8011972:	bfb8      	it	lt
 8011974:	425b      	neglt	r3, r3
 8011976:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 801197a:	bfc8      	it	gt
 801197c:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011980:	e7f4      	b.n	801196c <_ZN8touchgfx6muldivElll+0x2a>

08011982 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 8011982:	2000      	movs	r0, #0
 8011984:	4770      	bx	lr

08011986 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 8011986:	2001      	movs	r0, #1
 8011988:	4770      	bx	lr

0801198a <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 801198a:	2002      	movs	r0, #2
 801198c:	4770      	bx	lr

0801198e <_ZN8touchgfx6ScreenD1Ev>:
 801198e:	4770      	bx	lr

08011990 <_ZN8touchgfx12GestureEventD1Ev>:
 8011990:	4770      	bx	lr

08011992 <_ZN8touchgfx9DragEventD1Ev>:
 8011992:	4770      	bx	lr

08011994 <_ZN8touchgfx10ClickEventD1Ev>:
 8011994:	4770      	bx	lr

08011996 <_ZN8touchgfx10ClickEventD0Ev>:
 8011996:	b510      	push	{r4, lr}
 8011998:	210c      	movs	r1, #12
 801199a:	4604      	mov	r4, r0
 801199c:	f00f fa21 	bl	8020de2 <_ZdlPvj>
 80119a0:	4620      	mov	r0, r4
 80119a2:	bd10      	pop	{r4, pc}

080119a4 <_ZN8touchgfx9DragEventD0Ev>:
 80119a4:	b510      	push	{r4, lr}
 80119a6:	2110      	movs	r1, #16
 80119a8:	4604      	mov	r4, r0
 80119aa:	f00f fa1a 	bl	8020de2 <_ZdlPvj>
 80119ae:	4620      	mov	r0, r4
 80119b0:	bd10      	pop	{r4, pc}

080119b2 <_ZN8touchgfx12GestureEventD0Ev>:
 80119b2:	b510      	push	{r4, lr}
 80119b4:	210c      	movs	r1, #12
 80119b6:	4604      	mov	r4, r0
 80119b8:	f00f fa13 	bl	8020de2 <_ZdlPvj>
 80119bc:	4620      	mov	r0, r4
 80119be:	bd10      	pop	{r4, pc}

080119c0 <_ZN8touchgfx6ScreenD0Ev>:
 80119c0:	b510      	push	{r4, lr}
 80119c2:	213c      	movs	r1, #60	; 0x3c
 80119c4:	4604      	mov	r4, r0
 80119c6:	f00f fa0c 	bl	8020de2 <_ZdlPvj>
 80119ca:	4620      	mov	r0, r4
 80119cc:	bd10      	pop	{r4, pc}
	...

080119d0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80119d0:	b530      	push	{r4, r5, lr}
 80119d2:	460d      	mov	r5, r1
 80119d4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80119d6:	b087      	sub	sp, #28
 80119d8:	4604      	mov	r4, r0
 80119da:	b301      	cbz	r1, 8011a1e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80119dc:	a801      	add	r0, sp, #4
 80119de:	f7ff fe82 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119e2:	892a      	ldrh	r2, [r5, #8]
 80119e4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80119e8:	7928      	ldrb	r0, [r5, #4]
 80119ea:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80119ee:	f88d 0010 	strb.w	r0, [sp, #16]
 80119f2:	1ad2      	subs	r2, r2, r3
 80119f4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80119f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80119f8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80119fc:	441a      	add	r2, r3
 80119fe:	896b      	ldrh	r3, [r5, #10]
 8011a00:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011a04:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a08:	1b5b      	subs	r3, r3, r5
 8011a0a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011a0c:	442b      	add	r3, r5
 8011a0e:	4d05      	ldr	r5, [pc, #20]	; (8011a24 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011a10:	9503      	str	r5, [sp, #12]
 8011a12:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a16:	6803      	ldr	r3, [r0, #0]
 8011a18:	a903      	add	r1, sp, #12
 8011a1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a1c:	4798      	blx	r3
 8011a1e:	b007      	add	sp, #28
 8011a20:	bd30      	pop	{r4, r5, pc}
 8011a22:	bf00      	nop
 8011a24:	08024a18 	.word	0x08024a18

08011a28 <_ZNK8touchgfx4Rect9intersectEss>:
 8011a28:	b510      	push	{r4, lr}
 8011a2a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011a2e:	428b      	cmp	r3, r1
 8011a30:	dc10      	bgt.n	8011a54 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a32:	8884      	ldrh	r4, [r0, #4]
 8011a34:	4423      	add	r3, r4
 8011a36:	b21b      	sxth	r3, r3
 8011a38:	4299      	cmp	r1, r3
 8011a3a:	da0b      	bge.n	8011a54 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a3c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011a40:	4293      	cmp	r3, r2
 8011a42:	dc07      	bgt.n	8011a54 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8011a44:	88c0      	ldrh	r0, [r0, #6]
 8011a46:	4418      	add	r0, r3
 8011a48:	b200      	sxth	r0, r0
 8011a4a:	4282      	cmp	r2, r0
 8011a4c:	bfac      	ite	ge
 8011a4e:	2000      	movge	r0, #0
 8011a50:	2001      	movlt	r0, #1
 8011a52:	bd10      	pop	{r4, pc}
 8011a54:	2000      	movs	r0, #0
 8011a56:	e7fc      	b.n	8011a52 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

08011a58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011a58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a5a:	460c      	mov	r4, r1
 8011a5c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8011a5e:	b089      	sub	sp, #36	; 0x24
 8011a60:	4605      	mov	r5, r0
 8011a62:	2900      	cmp	r1, #0
 8011a64:	d054      	beq.n	8011b10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 8011a66:	4668      	mov	r0, sp
 8011a68:	f7ff fe3d 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011a6c:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 8011a6e:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 8011a70:	8922      	ldrh	r2, [r4, #8]
 8011a72:	88e1      	ldrh	r1, [r4, #6]
 8011a74:	443a      	add	r2, r7
 8011a76:	4431      	add	r1, r6
 8011a78:	b212      	sxth	r2, r2
 8011a7a:	b209      	sxth	r1, r1
 8011a7c:	4668      	mov	r0, sp
 8011a7e:	f7ff ffd3 	bl	8011a28 <_ZNK8touchgfx4Rect9intersectEss>
 8011a82:	b1d0      	cbz	r0, 8011aba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8011a84:	89a2      	ldrh	r2, [r4, #12]
 8011a86:	8961      	ldrh	r1, [r4, #10]
 8011a88:	443a      	add	r2, r7
 8011a8a:	4431      	add	r1, r6
 8011a8c:	b212      	sxth	r2, r2
 8011a8e:	b209      	sxth	r1, r1
 8011a90:	4668      	mov	r0, sp
 8011a92:	f7ff ffc9 	bl	8011a28 <_ZNK8touchgfx4Rect9intersectEss>
 8011a96:	4603      	mov	r3, r0
 8011a98:	b978      	cbnz	r0, 8011aba <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8011a9a:	4a1e      	ldr	r2, [pc, #120]	; (8011b14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 8011a9c:	9204      	str	r2, [sp, #16]
 8011a9e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011aa0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011aa4:	2202      	movs	r2, #2
 8011aa6:	f88d 2014 	strb.w	r2, [sp, #20]
 8011aaa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011aae:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011ab2:	6803      	ldr	r3, [r0, #0]
 8011ab4:	a904      	add	r1, sp, #16
 8011ab6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011ab8:	4798      	blx	r3
 8011aba:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8011abc:	a802      	add	r0, sp, #8
 8011abe:	f7ff fe12 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ac2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011ac6:	88e0      	ldrh	r0, [r4, #6]
 8011ac8:	8961      	ldrh	r1, [r4, #10]
 8011aca:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011ace:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 8011ad2:	8923      	ldrh	r3, [r4, #8]
 8011ad4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011ad6:	7927      	ldrb	r7, [r4, #4]
 8011ad8:	f88d 7014 	strb.w	r7, [sp, #20]
 8011adc:	1a80      	subs	r0, r0, r2
 8011ade:	1a89      	subs	r1, r1, r2
 8011ae0:	89a2      	ldrh	r2, [r4, #12]
 8011ae2:	4c0d      	ldr	r4, [pc, #52]	; (8011b18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 8011ae4:	9404      	str	r4, [sp, #16]
 8011ae6:	4460      	add	r0, ip
 8011ae8:	eba3 030e 	sub.w	r3, r3, lr
 8011aec:	eba2 020e 	sub.w	r2, r2, lr
 8011af0:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011af4:	4433      	add	r3, r6
 8011af6:	4461      	add	r1, ip
 8011af8:	4432      	add	r2, r6
 8011afa:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011afc:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011b00:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b04:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011b08:	6803      	ldr	r3, [r0, #0]
 8011b0a:	a904      	add	r1, sp, #16
 8011b0c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011b0e:	4798      	blx	r3
 8011b10:	b009      	add	sp, #36	; 0x24
 8011b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b14:	080249f0 	.word	0x080249f0
 8011b18:	08024a04 	.word	0x08024a04

08011b1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b20:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 8011b24:	790b      	ldrb	r3, [r1, #4]
 8011b26:	b0a1      	sub	sp, #132	; 0x84
 8011b28:	4604      	mov	r4, r0
 8011b2a:	460d      	mov	r5, r1
 8011b2c:	f1b9 0f00 	cmp.w	r9, #0
 8011b30:	d00f      	beq.n	8011b52 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 8011b32:	2b00      	cmp	r3, #0
 8011b34:	f040 80a0 	bne.w	8011c78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 8011b38:	b021      	add	sp, #132	; 0x84
 8011b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b3e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8011b42:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8011b46:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011b4a:	1d20      	adds	r0, r4, #4
 8011b4c:	f7fa fa96 	bl	800c07c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011b50:	e092      	b.n	8011c78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 8011b52:	2b00      	cmp	r3, #0
 8011b54:	d1f0      	bne.n	8011b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011b56:	4b5e      	ldr	r3, [pc, #376]	; (8011cd0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 8011b58:	681b      	ldr	r3, [r3, #0]
 8011b5a:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 8011b5e:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 8011b62:	f1ba 0f03 	cmp.w	sl, #3
 8011b66:	ddea      	ble.n	8011b3e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 8011b68:	f1ba 0f0c 	cmp.w	sl, #12
 8011b6c:	f04f 0303 	mov.w	r3, #3
 8011b70:	bfdc      	itt	le
 8011b72:	f10a 32ff 	addle.w	r2, sl, #4294967295
 8011b76:	fb92 f3f3 	sdivle	r3, r2, r3
 8011b7a:	9301      	str	r3, [sp, #4]
 8011b7c:	4b55      	ldr	r3, [pc, #340]	; (8011cd4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 8011b7e:	4956      	ldr	r1, [pc, #344]	; (8011cd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 8011b80:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011b84:	4b55      	ldr	r3, [pc, #340]	; (8011cdc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 8011b86:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011b8a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011b8e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011b92:	ab0e      	add	r3, sp, #56	; 0x38
 8011b94:	2248      	movs	r2, #72	; 0x48
 8011b96:	2600      	movs	r6, #0
 8011b98:	4618      	mov	r0, r3
 8011b9a:	960a      	str	r6, [sp, #40]	; 0x28
 8011b9c:	f00f fac8 	bl	8021130 <memcpy>
 8011ba0:	f04f 32ff 	mov.w	r2, #4294967295
 8011ba4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8011ba8:	f8cd a008 	str.w	sl, [sp, #8]
 8011bac:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8011bb0:	fb93 f3f2 	sdiv	r3, r3, r2
 8011bb4:	b29b      	uxth	r3, r3
 8011bb6:	46b3      	mov	fp, r6
 8011bb8:	9303      	str	r3, [sp, #12]
 8011bba:	2300      	movs	r3, #0
 8011bbc:	9309      	str	r3, [sp, #36]	; 0x24
 8011bbe:	9b07      	ldr	r3, [sp, #28]
 8011bc0:	9a03      	ldr	r2, [sp, #12]
 8011bc2:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 8011bc6:	88ef      	ldrh	r7, [r5, #6]
 8011bc8:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 8011bcc:	fb13 f302 	smulbb	r3, r3, r2
 8011bd0:	b29b      	uxth	r3, r3
 8011bd2:	9304      	str	r3, [sp, #16]
 8011bd4:	9b07      	ldr	r3, [sp, #28]
 8011bd6:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8011bda:	a80a      	add	r0, sp, #40	; 0x28
 8011bdc:	685b      	ldr	r3, [r3, #4]
 8011bde:	fb13 f302 	smulbb	r3, r3, r2
 8011be2:	b29b      	uxth	r3, r3
 8011be4:	9305      	str	r3, [sp, #20]
 8011be6:	9b04      	ldr	r3, [sp, #16]
 8011be8:	441f      	add	r7, r3
 8011bea:	9b05      	ldr	r3, [sp, #20]
 8011bec:	4498      	add	r8, r3
 8011bee:	b23f      	sxth	r7, r7
 8011bf0:	fa0f f888 	sxth.w	r8, r8
 8011bf4:	4642      	mov	r2, r8
 8011bf6:	4639      	mov	r1, r7
 8011bf8:	f7ff ff16 	bl	8011a28 <_ZNK8touchgfx4Rect9intersectEss>
 8011bfc:	b380      	cbz	r0, 8011c60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011bfe:	4639      	mov	r1, r7
 8011c00:	ab09      	add	r3, sp, #36	; 0x24
 8011c02:	4642      	mov	r2, r8
 8011c04:	1d20      	adds	r0, r4, #4
 8011c06:	f7fa fa39 	bl	800c07c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011c0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011c0c:	b341      	cbz	r1, 8011c60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011c0e:	4549      	cmp	r1, r9
 8011c10:	d026      	beq.n	8011c60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011c12:	a80c      	add	r0, sp, #48	; 0x30
 8011c14:	f7ff fd67 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c18:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8011c1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011c20:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8011c24:	2002      	movs	r0, #2
 8011c26:	fb92 f2f0 	sdiv	r2, r2, r0
 8011c2a:	440a      	add	r2, r1
 8011c2c:	1a99      	subs	r1, r3, r2
 8011c2e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8011c32:	fb93 f3f0 	sdiv	r3, r3, r0
 8011c36:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 8011c3a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8011c3e:	4403      	add	r3, r0
 8011c40:	1ad3      	subs	r3, r2, r3
 8011c42:	435b      	muls	r3, r3
 8011c44:	9a06      	ldr	r2, [sp, #24]
 8011c46:	fb01 3301 	mla	r3, r1, r1, r3
 8011c4a:	4293      	cmp	r3, r2
 8011c4c:	d208      	bcs.n	8011c60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011c4e:	9a04      	ldr	r2, [sp, #16]
 8011c50:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8011c54:	86a2      	strh	r2, [r4, #52]	; 0x34
 8011c56:	9a05      	ldr	r2, [sp, #20]
 8011c58:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 8011c5c:	86e2      	strh	r2, [r4, #54]	; 0x36
 8011c5e:	9306      	str	r3, [sp, #24]
 8011c60:	f10b 0b02 	add.w	fp, fp, #2
 8011c64:	f1bb 0f08 	cmp.w	fp, #8
 8011c68:	dda7      	ble.n	8011bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011c6a:	9b02      	ldr	r3, [sp, #8]
 8011c6c:	4453      	add	r3, sl
 8011c6e:	9302      	str	r3, [sp, #8]
 8011c70:	9b01      	ldr	r3, [sp, #4]
 8011c72:	3601      	adds	r6, #1
 8011c74:	42b3      	cmp	r3, r6
 8011c76:	d199      	bne.n	8011bac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 8011c78:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011c7a:	2900      	cmp	r1, #0
 8011c7c:	f43f af5c 	beq.w	8011b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011c80:	a80c      	add	r0, sp, #48	; 0x30
 8011c82:	f7ff fd30 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c86:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8011c8a:	88ea      	ldrh	r2, [r5, #6]
 8011c8c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 8011c90:	7929      	ldrb	r1, [r5, #4]
 8011c92:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 8011c96:	1ad2      	subs	r2, r2, r3
 8011c98:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011c9a:	441a      	add	r2, r3
 8011c9c:	892b      	ldrh	r3, [r5, #8]
 8011c9e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8011ca2:	1a1b      	subs	r3, r3, r0
 8011ca4:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 8011ca6:	4403      	add	r3, r0
 8011ca8:	480d      	ldr	r0, [pc, #52]	; (8011ce0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 8011caa:	900e      	str	r0, [sp, #56]	; 0x38
 8011cac:	2600      	movs	r6, #0
 8011cae:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011cb0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8011cb4:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 8011cb8:	6803      	ldr	r3, [r0, #0]
 8011cba:	a90e      	add	r1, sp, #56	; 0x38
 8011cbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cbe:	4798      	blx	r3
 8011cc0:	792b      	ldrb	r3, [r5, #4]
 8011cc2:	2b00      	cmp	r3, #0
 8011cc4:	f43f af38 	beq.w	8011b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011cc8:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011ccc:	e734      	b.n	8011b38 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011cce:	bf00      	nop
 8011cd0:	2000eb10 	.word	0x2000eb10
 8011cd4:	2000eb04 	.word	0x2000eb04
 8011cd8:	08022020 	.word	0x08022020
 8011cdc:	2000eb06 	.word	0x2000eb06
 8011ce0:	080249f0 	.word	0x080249f0

08011ce4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011ce4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ce6:	4604      	mov	r4, r0
 8011ce8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011cec:	3201      	adds	r2, #1
 8011cee:	d112      	bne.n	8011d16 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011cf0:	6803      	ldr	r3, [r0, #0]
 8011cf2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011cf6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011cfa:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011cfe:	2500      	movs	r5, #0
 8011d00:	9500      	str	r5, [sp, #0]
 8011d02:	466d      	mov	r5, sp
 8011d04:	4629      	mov	r1, r5
 8011d06:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011d0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d0c:	4798      	blx	r3
 8011d0e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011d12:	e884 0003 	stmia.w	r4, {r0, r1}
 8011d16:	4620      	mov	r0, r4
 8011d18:	b003      	add	sp, #12
 8011d1a:	bd30      	pop	{r4, r5, pc}

08011d1c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011d1c:	b513      	push	{r0, r1, r4, lr}
 8011d1e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011d22:	3301      	adds	r3, #1
 8011d24:	4604      	mov	r4, r0
 8011d26:	d109      	bne.n	8011d3c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011d28:	4601      	mov	r1, r0
 8011d2a:	4668      	mov	r0, sp
 8011d2c:	f7ff fcdb 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d30:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d34:	8423      	strh	r3, [r4, #32]
 8011d36:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d3a:	8463      	strh	r3, [r4, #34]	; 0x22
 8011d3c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011d40:	b002      	add	sp, #8
 8011d42:	bd10      	pop	{r4, pc}

08011d44 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011d44:	b513      	push	{r0, r1, r4, lr}
 8011d46:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011d4a:	3301      	adds	r3, #1
 8011d4c:	4604      	mov	r4, r0
 8011d4e:	d109      	bne.n	8011d64 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011d50:	4601      	mov	r1, r0
 8011d52:	4668      	mov	r0, sp
 8011d54:	f7ff fcc7 	bl	80116e6 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d58:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d5c:	8423      	strh	r3, [r4, #32]
 8011d5e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d62:	8463      	strh	r3, [r4, #34]	; 0x22
 8011d64:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011d68:	b002      	add	sp, #8
 8011d6a:	bd10      	pop	{r4, pc}

08011d6c <_ZN8touchgfx6ScreenC1Ev>:
 8011d6c:	b570      	push	{r4, r5, r6, lr}
 8011d6e:	4605      	mov	r5, r0
 8011d70:	4b16      	ldr	r3, [pc, #88]	; (8011dcc <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011d72:	f845 3b04 	str.w	r3, [r5], #4
 8011d76:	2300      	movs	r3, #0
 8011d78:	8103      	strh	r3, [r0, #8]
 8011d7a:	8143      	strh	r3, [r0, #10]
 8011d7c:	8183      	strh	r3, [r0, #12]
 8011d7e:	81c3      	strh	r3, [r0, #14]
 8011d80:	8203      	strh	r3, [r0, #16]
 8011d82:	8243      	strh	r3, [r0, #18]
 8011d84:	8283      	strh	r3, [r0, #20]
 8011d86:	82c3      	strh	r3, [r0, #22]
 8011d88:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011d8c:	6203      	str	r3, [r0, #32]
 8011d8e:	8483      	strh	r3, [r0, #36]	; 0x24
 8011d90:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011d92:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011d96:	4a0e      	ldr	r2, [pc, #56]	; (8011dd0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011d98:	6343      	str	r3, [r0, #52]	; 0x34
 8011d9a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011d9e:	4b0d      	ldr	r3, [pc, #52]	; (8011dd4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011da0:	6042      	str	r2, [r0, #4]
 8011da2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011da6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8011da8:	4a0b      	ldr	r2, [pc, #44]	; (8011dd8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011daa:	4604      	mov	r4, r0
 8011dac:	2101      	movs	r1, #1
 8011dae:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011db2:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8011db6:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011dba:	4628      	mov	r0, r5
 8011dbc:	4798      	blx	r3
 8011dbe:	6863      	ldr	r3, [r4, #4]
 8011dc0:	4628      	mov	r0, r5
 8011dc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011dc4:	4631      	mov	r1, r6
 8011dc6:	4798      	blx	r3
 8011dc8:	4620      	mov	r0, r4
 8011dca:	bd70      	pop	{r4, r5, r6, pc}
 8011dcc:	08024a2c 	.word	0x08024a2c
 8011dd0:	080237f4 	.word	0x080237f4
 8011dd4:	2000eb06 	.word	0x2000eb06
 8011dd8:	2000eb04 	.word	0x2000eb04

08011ddc <_ZN8touchgfx6Screen4drawEv>:
 8011ddc:	b507      	push	{r0, r1, r2, lr}
 8011dde:	4b09      	ldr	r3, [pc, #36]	; (8011e04 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011de0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011de4:	4b08      	ldr	r3, [pc, #32]	; (8011e08 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011de6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011dea:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011dee:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011df2:	6803      	ldr	r3, [r0, #0]
 8011df4:	2100      	movs	r1, #0
 8011df6:	9100      	str	r1, [sp, #0]
 8011df8:	689b      	ldr	r3, [r3, #8]
 8011dfa:	4669      	mov	r1, sp
 8011dfc:	4798      	blx	r3
 8011dfe:	b003      	add	sp, #12
 8011e00:	f85d fb04 	ldr.w	pc, [sp], #4
 8011e04:	2000eb04 	.word	0x2000eb04
 8011e08:	2000eb06 	.word	0x2000eb06

08011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e10:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011e14:	2b00      	cmp	r3, #0
 8011e16:	b089      	sub	sp, #36	; 0x24
 8011e18:	4680      	mov	r8, r0
 8011e1a:	460c      	mov	r4, r1
 8011e1c:	4615      	mov	r5, r2
 8011e1e:	dd0e      	ble.n	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e20:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011e24:	2b00      	cmp	r3, #0
 8011e26:	dd0a      	ble.n	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e28:	4628      	mov	r0, r5
 8011e2a:	f7ff ff5b 	bl	8011ce4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011e2e:	4621      	mov	r1, r4
 8011e30:	f7fb ffde 	bl	800ddf0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011e34:	69eb      	ldr	r3, [r5, #28]
 8011e36:	b928      	cbnz	r0, 8011e44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011e38:	461d      	mov	r5, r3
 8011e3a:	2b00      	cmp	r3, #0
 8011e3c:	d1f4      	bne.n	8011e28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011e3e:	b009      	add	sp, #36	; 0x24
 8011e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e44:	ae04      	add	r6, sp, #16
 8011e46:	2b00      	cmp	r3, #0
 8011e48:	f000 80b5 	beq.w	8011fb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011e4c:	682b      	ldr	r3, [r5, #0]
 8011e4e:	4629      	mov	r1, r5
 8011e50:	68db      	ldr	r3, [r3, #12]
 8011e52:	a802      	add	r0, sp, #8
 8011e54:	4798      	blx	r3
 8011e56:	4628      	mov	r0, r5
 8011e58:	f7ff ff60 	bl	8011d1c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011e5c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011e60:	4407      	add	r7, r0
 8011e62:	4628      	mov	r0, r5
 8011e64:	f7ff ff6e 	bl	8011d44 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011e68:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011e6c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011e70:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e74:	4418      	add	r0, r3
 8011e76:	4621      	mov	r1, r4
 8011e78:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011e7c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011e80:	b23f      	sxth	r7, r7
 8011e82:	4630      	mov	r0, r6
 8011e84:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011e88:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011e8c:	f7fa f9b0 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 8011e90:	4628      	mov	r0, r5
 8011e92:	f7ff ff27 	bl	8011ce4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011e96:	4602      	mov	r2, r0
 8011e98:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011e9c:	ab06      	add	r3, sp, #24
 8011e9e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ea2:	4611      	mov	r1, r2
 8011ea4:	4618      	mov	r0, r3
 8011ea6:	f7fa f9a3 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 8011eaa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011eae:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011eb2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011eb6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011eba:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011ebe:	4299      	cmp	r1, r3
 8011ec0:	d10b      	bne.n	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011ec2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ec6:	4552      	cmp	r2, sl
 8011ec8:	d107      	bne.n	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011eca:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011ece:	455a      	cmp	r2, fp
 8011ed0:	d103      	bne.n	8011eda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011ed2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011ed6:	454a      	cmp	r2, r9
 8011ed8:	d06d      	beq.n	8011fb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011eda:	f1bb 0f00 	cmp.w	fp, #0
 8011ede:	dd65      	ble.n	8011fac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011ee0:	f1b9 0f00 	cmp.w	r9, #0
 8011ee4:	dd62      	ble.n	8011fac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011ee6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011eea:	fa1f f08a 	uxth.w	r0, sl
 8011eee:	4552      	cmp	r2, sl
 8011ef0:	9000      	str	r0, [sp, #0]
 8011ef2:	da12      	bge.n	8011f1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011ef4:	9301      	str	r3, [sp, #4]
 8011ef6:	9b00      	ldr	r3, [sp, #0]
 8011ef8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011efc:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011f00:	1a9a      	subs	r2, r3, r2
 8011f02:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011f06:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011f0a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011f0e:	69ea      	ldr	r2, [r5, #28]
 8011f10:	4631      	mov	r1, r6
 8011f12:	4640      	mov	r0, r8
 8011f14:	f7ff ff7a 	bl	8011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f18:	9b01      	ldr	r3, [sp, #4]
 8011f1a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011f1e:	429a      	cmp	r2, r3
 8011f20:	b29f      	uxth	r7, r3
 8011f22:	da0d      	bge.n	8011f40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011f24:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f28:	1aba      	subs	r2, r7, r2
 8011f2a:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f2e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011f32:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011f36:	69ea      	ldr	r2, [r5, #28]
 8011f38:	4631      	mov	r1, r6
 8011f3a:	4640      	mov	r0, r8
 8011f3c:	f7ff ff66 	bl	8011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f40:	8822      	ldrh	r2, [r4, #0]
 8011f42:	88a3      	ldrh	r3, [r4, #4]
 8011f44:	445f      	add	r7, fp
 8011f46:	4413      	add	r3, r2
 8011f48:	b29b      	uxth	r3, r3
 8011f4a:	b2bf      	uxth	r7, r7
 8011f4c:	b23a      	sxth	r2, r7
 8011f4e:	b219      	sxth	r1, r3
 8011f50:	4291      	cmp	r1, r2
 8011f52:	dd0d      	ble.n	8011f70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011f54:	1bdb      	subs	r3, r3, r7
 8011f56:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f5a:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f5e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011f62:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011f66:	69ea      	ldr	r2, [r5, #28]
 8011f68:	4631      	mov	r1, r6
 8011f6a:	4640      	mov	r0, r8
 8011f6c:	f7ff ff4e 	bl	8011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f70:	88e2      	ldrh	r2, [r4, #6]
 8011f72:	8863      	ldrh	r3, [r4, #2]
 8011f74:	4413      	add	r3, r2
 8011f76:	9a00      	ldr	r2, [sp, #0]
 8011f78:	444a      	add	r2, r9
 8011f7a:	b29b      	uxth	r3, r3
 8011f7c:	fa1f f982 	uxth.w	r9, r2
 8011f80:	fa0f f289 	sxth.w	r2, r9
 8011f84:	b219      	sxth	r1, r3
 8011f86:	428a      	cmp	r2, r1
 8011f88:	da15      	bge.n	8011fb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011f8a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011f8e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011f92:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011f96:	eba3 0309 	sub.w	r3, r3, r9
 8011f9a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011f9e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011fa2:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011fa6:	69ea      	ldr	r2, [r5, #28]
 8011fa8:	4631      	mov	r1, r6
 8011faa:	e001      	b.n	8011fb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011fac:	69ea      	ldr	r2, [r5, #28]
 8011fae:	4621      	mov	r1, r4
 8011fb0:	4640      	mov	r0, r8
 8011fb2:	f7ff ff2b 	bl	8011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011fb6:	4628      	mov	r0, r5
 8011fb8:	f7ff fe94 	bl	8011ce4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011fbc:	6861      	ldr	r1, [r4, #4]
 8011fbe:	4602      	mov	r2, r0
 8011fc0:	6820      	ldr	r0, [r4, #0]
 8011fc2:	4633      	mov	r3, r6
 8011fc4:	c303      	stmia	r3!, {r0, r1}
 8011fc6:	4611      	mov	r1, r2
 8011fc8:	4630      	mov	r0, r6
 8011fca:	f7fa f911 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 8011fce:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011fd2:	2b00      	cmp	r3, #0
 8011fd4:	f77f af33 	ble.w	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011fd8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011fdc:	2b00      	cmp	r3, #0
 8011fde:	f77f af2e 	ble.w	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011fe2:	4628      	mov	r0, r5
 8011fe4:	f7ff fe9a 	bl	8011d1c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011fe8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011fec:	1a18      	subs	r0, r3, r0
 8011fee:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011ff2:	4628      	mov	r0, r5
 8011ff4:	f7ff fea6 	bl	8011d44 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011ff8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011ffc:	1a18      	subs	r0, r3, r0
 8011ffe:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012002:	682b      	ldr	r3, [r5, #0]
 8012004:	4631      	mov	r1, r6
 8012006:	689b      	ldr	r3, [r3, #8]
 8012008:	4628      	mov	r0, r5
 801200a:	4798      	blx	r3
 801200c:	e717      	b.n	8011e3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801200e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801200e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012010:	aa02      	add	r2, sp, #8
 8012012:	2300      	movs	r3, #0
 8012014:	f842 3d04 	str.w	r3, [r2, #-4]!
 8012018:	4604      	mov	r4, r0
 801201a:	3004      	adds	r0, #4
 801201c:	460d      	mov	r5, r1
 801201e:	f7fa f9bf 	bl	800c3a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012022:	9a01      	ldr	r2, [sp, #4]
 8012024:	b11a      	cbz	r2, 801202e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 8012026:	4629      	mov	r1, r5
 8012028:	4620      	mov	r0, r4
 801202a:	f7ff feef 	bl	8011e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801202e:	b003      	add	sp, #12
 8012030:	bd30      	pop	{r4, r5, pc}

08012032 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012032:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012034:	4602      	mov	r2, r0
 8012036:	4604      	mov	r4, r0
 8012038:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801203c:	460d      	mov	r5, r1
 801203e:	6851      	ldr	r1, [r2, #4]
 8012040:	466b      	mov	r3, sp
 8012042:	c303      	stmia	r3!, {r0, r1}
 8012044:	4629      	mov	r1, r5
 8012046:	4668      	mov	r0, sp
 8012048:	f7fa f8d2 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 801204c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012050:	4669      	mov	r1, sp
 8012052:	b123      	cbz	r3, 801205e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 8012054:	4620      	mov	r0, r4
 8012056:	f7ff ffda 	bl	801200e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801205a:	b003      	add	sp, #12
 801205c:	bd30      	pop	{r4, r5, pc}
 801205e:	1d20      	adds	r0, r4, #4
 8012060:	f7fa f965 	bl	800c32e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012064:	e7f9      	b.n	801205a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

08012066 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012066:	680a      	ldr	r2, [r1, #0]
 8012068:	460b      	mov	r3, r1
 801206a:	6992      	ldr	r2, [r2, #24]
 801206c:	1d01      	adds	r1, r0, #4
 801206e:	4618      	mov	r0, r3
 8012070:	4710      	bx	r2

08012072 <_ZN8touchgfx12TextProviderC1Ev>:
 8012072:	b538      	push	{r3, r4, r5, lr}
 8012074:	2500      	movs	r5, #0
 8012076:	4604      	mov	r4, r0
 8012078:	e9c0 5500 	strd	r5, r5, [r0]
 801207c:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8012080:	7405      	strb	r5, [r0, #16]
 8012082:	82c5      	strh	r5, [r0, #22]
 8012084:	8305      	strh	r5, [r0, #24]
 8012086:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8012088:	8605      	strh	r5, [r0, #48]	; 0x30
 801208a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801208c:	8705      	strh	r5, [r0, #56]	; 0x38
 801208e:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 8012092:	220e      	movs	r2, #14
 8012094:	4629      	mov	r1, r5
 8012096:	3044      	adds	r0, #68	; 0x44
 8012098:	f00f f858 	bl	802114c <memset>
 801209c:	2301      	movs	r3, #1
 801209e:	4620      	mov	r0, r4
 80120a0:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80120a4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80120a8:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80120ac:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80120b0:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80120b4:	f7f3 faf4 	bl	80056a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80120b8:	4620      	mov	r0, r4
 80120ba:	bd38      	pop	{r3, r4, r5, pc}

080120bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80120bc:	b530      	push	{r4, r5, lr}
 80120be:	2500      	movs	r5, #0
 80120c0:	2401      	movs	r4, #1
 80120c2:	6843      	ldr	r3, [r0, #4]
 80120c4:	b913      	cbnz	r3, 80120cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80120c6:	6803      	ldr	r3, [r0, #0]
 80120c8:	b1f3      	cbz	r3, 8012108 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 80120ca:	6043      	str	r3, [r0, #4]
 80120cc:	7c03      	ldrb	r3, [r0, #16]
 80120ce:	b143      	cbz	r3, 80120e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80120d0:	68c3      	ldr	r3, [r0, #12]
 80120d2:	b12b      	cbz	r3, 80120e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80120d4:	881a      	ldrh	r2, [r3, #0]
 80120d6:	b11a      	cbz	r2, 80120e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80120d8:	1c9a      	adds	r2, r3, #2
 80120da:	60c2      	str	r2, [r0, #12]
 80120dc:	8818      	ldrh	r0, [r3, #0]
 80120de:	bd30      	pop	{r4, r5, pc}
 80120e0:	7405      	strb	r5, [r0, #16]
 80120e2:	6843      	ldr	r3, [r0, #4]
 80120e4:	8819      	ldrh	r1, [r3, #0]
 80120e6:	b179      	cbz	r1, 8012108 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 80120e8:	1c9a      	adds	r2, r3, #2
 80120ea:	2902      	cmp	r1, #2
 80120ec:	6042      	str	r2, [r0, #4]
 80120ee:	d1f5      	bne.n	80120dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80120f0:	6883      	ldr	r3, [r0, #8]
 80120f2:	1d1a      	adds	r2, r3, #4
 80120f4:	6082      	str	r2, [r0, #8]
 80120f6:	681b      	ldr	r3, [r3, #0]
 80120f8:	60c3      	str	r3, [r0, #12]
 80120fa:	2b00      	cmp	r3, #0
 80120fc:	d0e1      	beq.n	80120c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80120fe:	881b      	ldrh	r3, [r3, #0]
 8012100:	2b00      	cmp	r3, #0
 8012102:	d0de      	beq.n	80120c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012104:	7404      	strb	r4, [r0, #16]
 8012106:	e7dc      	b.n	80120c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012108:	2000      	movs	r0, #0
 801210a:	e7e8      	b.n	80120de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801210c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801210c:	b410      	push	{r4}
 801210e:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012110:	9b01      	ldr	r3, [sp, #4]
 8012112:	6403      	str	r3, [r0, #64]	; 0x40
 8012114:	2300      	movs	r3, #0
 8012116:	6082      	str	r2, [r0, #8]
 8012118:	6001      	str	r1, [r0, #0]
 801211a:	6043      	str	r3, [r0, #4]
 801211c:	60c3      	str	r3, [r0, #12]
 801211e:	7403      	strb	r3, [r0, #16]
 8012120:	8603      	strh	r3, [r0, #48]	; 0x30
 8012122:	8303      	strh	r3, [r0, #24]
 8012124:	8703      	strh	r3, [r0, #56]	; 0x38
 8012126:	f85d 4b04 	ldr.w	r4, [sp], #4
 801212a:	f7f3 bab9 	b.w	80056a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801212e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801212e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012130:	4605      	mov	r5, r0
 8012132:	4608      	mov	r0, r1
 8012134:	b1e9      	cbz	r1, 8012172 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012136:	f105 0444 	add.w	r4, r5, #68	; 0x44
 801213a:	460b      	mov	r3, r1
 801213c:	f101 0708 	add.w	r7, r1, #8
 8012140:	4622      	mov	r2, r4
 8012142:	6818      	ldr	r0, [r3, #0]
 8012144:	6859      	ldr	r1, [r3, #4]
 8012146:	4626      	mov	r6, r4
 8012148:	c603      	stmia	r6!, {r0, r1}
 801214a:	3308      	adds	r3, #8
 801214c:	42bb      	cmp	r3, r7
 801214e:	4634      	mov	r4, r6
 8012150:	d1f7      	bne.n	8012142 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012152:	6818      	ldr	r0, [r3, #0]
 8012154:	6030      	str	r0, [r6, #0]
 8012156:	889b      	ldrh	r3, [r3, #4]
 8012158:	80b3      	strh	r3, [r6, #4]
 801215a:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 801215e:	015b      	lsls	r3, r3, #5
 8012160:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012164:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 8012168:	430b      	orrs	r3, r1
 801216a:	425b      	negs	r3, r3
 801216c:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 8012170:	4610      	mov	r0, r2
 8012172:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012174 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012174:	b538      	push	{r3, r4, r5, lr}
 8012176:	460c      	mov	r4, r1
 8012178:	6811      	ldr	r1, [r2, #0]
 801217a:	4610      	mov	r0, r2
 801217c:	68cd      	ldr	r5, [r1, #12]
 801217e:	4619      	mov	r1, r3
 8012180:	47a8      	blx	r5
 8012182:	2800      	cmp	r0, #0
 8012184:	bf08      	it	eq
 8012186:	4620      	moveq	r0, r4
 8012188:	bd38      	pop	{r3, r4, r5, pc}
	...

0801218c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801218c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801218e:	4604      	mov	r4, r0
 8012190:	4615      	mov	r5, r2
 8012192:	4608      	mov	r0, r1
 8012194:	b93a      	cbnz	r2, 80121a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012196:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801219a:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 801219e:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 80121a2:	4628      	mov	r0, r5
 80121a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121a6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80121aa:	8893      	ldrh	r3, [r2, #4]
 80121ac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80121b0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80121b4:	79ee      	ldrb	r6, [r5, #7]
 80121b6:	4316      	orrs	r6, r2
 80121b8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 80121bc:	189a      	adds	r2, r3, r2
 80121be:	b291      	uxth	r1, r2
 80121c0:	291d      	cmp	r1, #29
 80121c2:	b2b7      	uxth	r7, r6
 80121c4:	f200 8083 	bhi.w	80122ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 80121c8:	2201      	movs	r2, #1
 80121ca:	408a      	lsls	r2, r1
 80121cc:	4978      	ldr	r1, [pc, #480]	; (80123b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 80121ce:	420a      	tst	r2, r1
 80121d0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80121d4:	d12d      	bne.n	8012232 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 80121d6:	f412 7f60 	tst.w	r2, #896	; 0x380
 80121da:	d078      	beq.n	80122ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 80121dc:	f104 0244 	add.w	r2, r4, #68	; 0x44
 80121e0:	462b      	mov	r3, r5
 80121e2:	f105 0e08 	add.w	lr, r5, #8
 80121e6:	4615      	mov	r5, r2
 80121e8:	6818      	ldr	r0, [r3, #0]
 80121ea:	6859      	ldr	r1, [r3, #4]
 80121ec:	4694      	mov	ip, r2
 80121ee:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80121f2:	3308      	adds	r3, #8
 80121f4:	4573      	cmp	r3, lr
 80121f6:	4662      	mov	r2, ip
 80121f8:	d1f6      	bne.n	80121e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 80121fa:	6818      	ldr	r0, [r3, #0]
 80121fc:	f8cc 0000 	str.w	r0, [ip]
 8012200:	889b      	ldrh	r3, [r3, #4]
 8012202:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012206:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 801220a:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 801220e:	b2b3      	uxth	r3, r6
 8012210:	1aca      	subs	r2, r1, r3
 8012212:	b292      	uxth	r2, r2
 8012214:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 8012218:	10d2      	asrs	r2, r2, #3
 801221a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801221e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012222:	4302      	orrs	r2, r0
 8012224:	1bcf      	subs	r7, r1, r7
 8012226:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 801222a:	1afb      	subs	r3, r7, r3
 801222c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8012230:	e7b7      	b.n	80121a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012232:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012234:	b92b      	cbnz	r3, 8012242 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8012236:	4b5f      	ldr	r3, [pc, #380]	; (80123b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8012238:	4a5f      	ldr	r2, [pc, #380]	; (80123b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801223a:	4860      	ldr	r0, [pc, #384]	; (80123bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801223c:	21bf      	movs	r1, #191	; 0xbf
 801223e:	f00e fdff 	bl	8020e40 <__assert_func>
 8012242:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012244:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012248:	8b59      	ldrh	r1, [r3, #26]
 801224a:	f640 6333 	movw	r3, #3635	; 0xe33
 801224e:	4299      	cmp	r1, r3
 8012250:	d110      	bne.n	8012274 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8012252:	6803      	ldr	r3, [r0, #0]
 8012254:	68db      	ldr	r3, [r3, #12]
 8012256:	4798      	blx	r3
 8012258:	7b41      	ldrb	r1, [r0, #13]
 801225a:	00cb      	lsls	r3, r1, #3
 801225c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012260:	7a03      	ldrb	r3, [r0, #8]
 8012262:	0648      	lsls	r0, r1, #25
 8012264:	ea43 0302 	orr.w	r3, r3, r2
 8012268:	bf44      	itt	mi
 801226a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801226e:	b21b      	sxthmi	r3, r3
 8012270:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012274:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 8012278:	443b      	add	r3, r7
 801227a:	4433      	add	r3, r6
 801227c:	b29b      	uxth	r3, r3
 801227e:	f104 0644 	add.w	r6, r4, #68	; 0x44
 8012282:	462a      	mov	r2, r5
 8012284:	f105 0c08 	add.w	ip, r5, #8
 8012288:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801228c:	4635      	mov	r5, r6
 801228e:	6810      	ldr	r0, [r2, #0]
 8012290:	6851      	ldr	r1, [r2, #4]
 8012292:	4637      	mov	r7, r6
 8012294:	c703      	stmia	r7!, {r0, r1}
 8012296:	3208      	adds	r2, #8
 8012298:	4562      	cmp	r2, ip
 801229a:	463e      	mov	r6, r7
 801229c:	d1f7      	bne.n	801228e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801229e:	6810      	ldr	r0, [r2, #0]
 80122a0:	6038      	str	r0, [r7, #0]
 80122a2:	8892      	ldrh	r2, [r2, #4]
 80122a4:	80ba      	strh	r2, [r7, #4]
 80122a6:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 80122aa:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 80122ae:	10db      	asrs	r3, r3, #3
 80122b0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80122b4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80122b8:	4313      	orrs	r3, r2
 80122ba:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80122be:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 80122c2:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 80122c6:	1a9b      	subs	r3, r3, r2
 80122c8:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80122cc:	e769      	b.n	80121a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80122ce:	f023 0204 	bic.w	r2, r3, #4
 80122d2:	f640 611b 	movw	r1, #3611	; 0xe1b
 80122d6:	428a      	cmp	r2, r1
 80122d8:	d003      	beq.n	80122e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 80122da:	f640 621d 	movw	r2, #3613	; 0xe1d
 80122de:	4293      	cmp	r3, r2
 80122e0:	d120      	bne.n	8012324 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 80122e2:	3b01      	subs	r3, #1
 80122e4:	4602      	mov	r2, r0
 80122e6:	b29b      	uxth	r3, r3
 80122e8:	4629      	mov	r1, r5
 80122ea:	4620      	mov	r0, r4
 80122ec:	f7ff ff42 	bl	8012174 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80122f0:	7b41      	ldrb	r1, [r0, #13]
 80122f2:	00cb      	lsls	r3, r1, #3
 80122f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80122f8:	7a03      	ldrb	r3, [r0, #8]
 80122fa:	0649      	lsls	r1, r1, #25
 80122fc:	ea43 0302 	orr.w	r3, r3, r2
 8012300:	bf44      	itt	mi
 8012302:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012306:	b21b      	sxthmi	r3, r3
 8012308:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801230c:	7b6b      	ldrb	r3, [r5, #13]
 801230e:	7aaa      	ldrb	r2, [r5, #10]
 8012310:	005b      	lsls	r3, r3, #1
 8012312:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012316:	4313      	orrs	r3, r2
 8012318:	115a      	asrs	r2, r3, #5
 801231a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801231e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8012322:	e036      	b.n	8012392 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8012324:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012328:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801232c:	7a2a      	ldrb	r2, [r5, #8]
 801232e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012332:	ea42 0201 	orr.w	r2, r2, r1
 8012336:	bf1c      	itt	ne
 8012338:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801233c:	b212      	sxthne	r2, r2
 801233e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8012342:	f640 6109 	movw	r1, #3593	; 0xe09
 8012346:	f023 0210 	bic.w	r2, r3, #16
 801234a:	428a      	cmp	r2, r1
 801234c:	d003      	beq.n	8012356 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801234e:	f640 6213 	movw	r2, #3603	; 0xe13
 8012352:	4293      	cmp	r3, r2
 8012354:	d12a      	bne.n	80123ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8012356:	7b6e      	ldrb	r6, [r5, #13]
 8012358:	0076      	lsls	r6, r6, #1
 801235a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801235e:	7aae      	ldrb	r6, [r5, #10]
 8012360:	4316      	orrs	r6, r2
 8012362:	f640 6213 	movw	r2, #3603	; 0xe13
 8012366:	4293      	cmp	r3, r2
 8012368:	bf18      	it	ne
 801236a:	f103 33ff 	addne.w	r3, r3, #4294967295
 801236e:	4602      	mov	r2, r0
 8012370:	bf14      	ite	ne
 8012372:	b29b      	uxthne	r3, r3
 8012374:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012378:	4629      	mov	r1, r5
 801237a:	4620      	mov	r0, r4
 801237c:	f7ff fefa 	bl	8012174 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012380:	7b43      	ldrb	r3, [r0, #13]
 8012382:	7a82      	ldrb	r2, [r0, #10]
 8012384:	005b      	lsls	r3, r3, #1
 8012386:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801238a:	4313      	orrs	r3, r2
 801238c:	1af6      	subs	r6, r6, r3
 801238e:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 8012392:	7b69      	ldrb	r1, [r5, #13]
 8012394:	00cb      	lsls	r3, r1, #3
 8012396:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801239a:	7a2b      	ldrb	r3, [r5, #8]
 801239c:	4313      	orrs	r3, r2
 801239e:	064a      	lsls	r2, r1, #25
 80123a0:	bf44      	itt	mi
 80123a2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80123a6:	b21b      	sxthmi	r3, r3
 80123a8:	1bdb      	subs	r3, r3, r7
 80123aa:	e73f      	b.n	801222c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80123ac:	2300      	movs	r3, #0
 80123ae:	e7b6      	b.n	801231e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 80123b0:	3fc00079 	.word	0x3fc00079
 80123b4:	08022fd0 	.word	0x08022fd0
 80123b8:	08024c87 	.word	0x08024c87
 80123bc:	080230a2 	.word	0x080230a2

080123c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80123c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80123c4:	4604      	mov	r4, r0
 80123c6:	b942      	cbnz	r2, 80123da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80123c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80123cc:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 80123d0:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 80123d4:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80123d8:	e046      	b.n	8012468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80123da:	7b51      	ldrb	r1, [r2, #13]
 80123dc:	8893      	ldrh	r3, [r2, #4]
 80123de:	010f      	lsls	r7, r1, #4
 80123e0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80123e4:	79d7      	ldrb	r7, [r2, #7]
 80123e6:	4307      	orrs	r7, r0
 80123e8:	2f04      	cmp	r7, #4
 80123ea:	b2bd      	uxth	r5, r7
 80123ec:	bfcc      	ite	gt
 80123ee:	08bf      	lsrgt	r7, r7, #2
 80123f0:	2701      	movle	r7, #1
 80123f2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80123f6:	f200 80ab 	bhi.w	8012550 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 80123fa:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80123fe:	4283      	cmp	r3, r0
 8012400:	d216      	bcs.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012402:	f240 605b 	movw	r0, #1627	; 0x65b
 8012406:	4283      	cmp	r3, r0
 8012408:	d859      	bhi.n	80124be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801240a:	f240 6057 	movw	r0, #1623	; 0x657
 801240e:	4283      	cmp	r3, r0
 8012410:	d20e      	bcs.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012412:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012416:	d24a      	bcs.n	80124ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8012418:	f240 604e 	movw	r0, #1614	; 0x64e
 801241c:	4283      	cmp	r3, r0
 801241e:	d207      	bcs.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012420:	f240 601a 	movw	r0, #1562	; 0x61a
 8012424:	4283      	cmp	r3, r0
 8012426:	d02a      	beq.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012428:	d821      	bhi.n	801246e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801242a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801242e:	d35b      	bcc.n	80124e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012430:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 8012434:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012438:	f040 80d0 	bne.w	80125dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801243c:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 8012440:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012444:	f040 80ca 	bne.w	80125dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8012448:	00cb      	lsls	r3, r1, #3
 801244a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801244e:	7a13      	ldrb	r3, [r2, #8]
 8012450:	0649      	lsls	r1, r1, #25
 8012452:	ea43 0300 	orr.w	r3, r3, r0
 8012456:	bf44      	itt	mi
 8012458:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801245c:	b21b      	sxthmi	r3, r3
 801245e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012462:	1b5d      	subs	r5, r3, r5
 8012464:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8012468:	4610      	mov	r0, r2
 801246a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801246e:	f240 604b 	movw	r0, #1611	; 0x64b
 8012472:	4283      	cmp	r3, r0
 8012474:	d338      	bcc.n	80124e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012476:	f240 604c 	movw	r0, #1612	; 0x64c
 801247a:	4283      	cmp	r3, r0
 801247c:	d9d8      	bls.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801247e:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 8012482:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 8012486:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801248a:	f040 80f1 	bne.w	8012670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801248e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012492:	f040 80ed 	bne.w	8012670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8012496:	00cb      	lsls	r3, r1, #3
 8012498:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801249c:	7a13      	ldrb	r3, [r2, #8]
 801249e:	064e      	lsls	r6, r1, #25
 80124a0:	ea43 0300 	orr.w	r3, r3, r0
 80124a4:	bf44      	itt	mi
 80124a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80124aa:	b21b      	sxthmi	r3, r3
 80124ac:	e7d9      	b.n	8012462 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80124ae:	f240 6054 	movw	r0, #1620	; 0x654
 80124b2:	4283      	cmp	r3, r0
 80124b4:	d8e3      	bhi.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124b6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80124ba:	d9e0      	bls.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124bc:	e7b8      	b.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124be:	f240 6074 	movw	r0, #1652	; 0x674
 80124c2:	4283      	cmp	r3, r0
 80124c4:	d0b4      	beq.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124c6:	d82d      	bhi.n	8012524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80124c8:	f240 605e 	movw	r0, #1630	; 0x65e
 80124cc:	4283      	cmp	r3, r0
 80124ce:	d804      	bhi.n	80124da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 80124d0:	f240 605d 	movw	r0, #1629	; 0x65d
 80124d4:	4283      	cmp	r3, r0
 80124d6:	d3d2      	bcc.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124d8:	e7aa      	b.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124da:	f240 605f 	movw	r0, #1631	; 0x65f
 80124de:	4283      	cmp	r3, r0
 80124e0:	d0cd      	beq.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80124e2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80124e6:	d0a3      	beq.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80124e8:	00cb      	lsls	r3, r1, #3
 80124ea:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80124ee:	7a13      	ldrb	r3, [r2, #8]
 80124f0:	0649      	lsls	r1, r1, #25
 80124f2:	ea43 0300 	orr.w	r3, r3, r0
 80124f6:	bf44      	itt	mi
 80124f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80124fc:	b21b      	sxthmi	r3, r3
 80124fe:	1b5d      	subs	r5, r3, r5
 8012500:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012504:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8012508:	7b53      	ldrb	r3, [r2, #13]
 801250a:	015b      	lsls	r3, r3, #5
 801250c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012510:	7993      	ldrb	r3, [r2, #6]
 8012512:	430b      	orrs	r3, r1
 8012514:	005b      	lsls	r3, r3, #1
 8012516:	2105      	movs	r1, #5
 8012518:	fb93 f3f1 	sdiv	r3, r3, r1
 801251c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012520:	440b      	add	r3, r1
 8012522:	e757      	b.n	80123d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012524:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012528:	4283      	cmp	r3, r0
 801252a:	d809      	bhi.n	8012540 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801252c:	f240 60df 	movw	r0, #1759	; 0x6df
 8012530:	4283      	cmp	r3, r0
 8012532:	f4bf af7d 	bcs.w	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012536:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801253a:	2b05      	cmp	r3, #5
 801253c:	d8d4      	bhi.n	80124e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801253e:	e777      	b.n	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012540:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012544:	4283      	cmp	r3, r0
 8012546:	d09a      	beq.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012548:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801254c:	4283      	cmp	r3, r0
 801254e:	e7ca      	b.n	80124e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8012550:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012554:	d22b      	bcs.n	80125ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8012556:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801255a:	4283      	cmp	r3, r0
 801255c:	d28f      	bcs.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801255e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012562:	4283      	cmp	r3, r0
 8012564:	d816      	bhi.n	8012594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8012566:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801256a:	4283      	cmp	r3, r0
 801256c:	f4bf af60 	bcs.w	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012570:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012574:	4283      	cmp	r3, r0
 8012576:	d80a      	bhi.n	801258e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8012578:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801257c:	4283      	cmp	r3, r0
 801257e:	f4bf af57 	bcs.w	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012582:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012586:	4283      	cmp	r3, r0
 8012588:	f43f af79 	beq.w	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801258c:	e7ac      	b.n	80124e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801258e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012592:	e7f8      	b.n	8012586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8012594:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012598:	4283      	cmp	r3, r0
 801259a:	d802      	bhi.n	80125a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801259c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80125a0:	e798      	b.n	80124d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80125a2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80125a6:	4283      	cmp	r3, r0
 80125a8:	f47f af42 	bne.w	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80125ac:	e767      	b.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125ae:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80125b2:	4283      	cmp	r3, r0
 80125b4:	f43f af63 	beq.w	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125b8:	d802      	bhi.n	80125c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 80125ba:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80125be:	e7f2      	b.n	80125a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 80125c0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80125c4:	4283      	cmp	r3, r0
 80125c6:	d805      	bhi.n	80125d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 80125c8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80125cc:	4283      	cmp	r3, r0
 80125ce:	f4ff af2f 	bcc.w	8012430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80125d2:	e754      	b.n	801247e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80125d4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80125d8:	4283      	cmp	r3, r0
 80125da:	e7af      	b.n	801253c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 80125dc:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 80125e0:	4617      	mov	r7, r2
 80125e2:	f102 0808 	add.w	r8, r2, #8
 80125e6:	4666      	mov	r6, ip
 80125e8:	6838      	ldr	r0, [r7, #0]
 80125ea:	6879      	ldr	r1, [r7, #4]
 80125ec:	46e6      	mov	lr, ip
 80125ee:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80125f2:	3708      	adds	r7, #8
 80125f4:	4547      	cmp	r7, r8
 80125f6:	46f4      	mov	ip, lr
 80125f8:	d1f6      	bne.n	80125e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 80125fa:	6838      	ldr	r0, [r7, #0]
 80125fc:	f8ce 0000 	str.w	r0, [lr]
 8012600:	88b9      	ldrh	r1, [r7, #4]
 8012602:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012606:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 801260a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801260e:	d009      	beq.n	8012624 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8012610:	7b51      	ldrb	r1, [r2, #13]
 8012612:	7992      	ldrb	r2, [r2, #6]
 8012614:	0149      	lsls	r1, r1, #5
 8012616:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801261a:	4311      	orrs	r1, r2
 801261c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012620:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 8012624:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012628:	d00d      	beq.n	8012646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801262a:	442b      	add	r3, r5
 801262c:	b29b      	uxth	r3, r3
 801262e:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8012632:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8012636:	10db      	asrs	r3, r3, #3
 8012638:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801263c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012640:	4313      	orrs	r3, r2
 8012642:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 8012646:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 801264a:	00cb      	lsls	r3, r1, #3
 801264c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012650:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8012654:	064f      	lsls	r7, r1, #25
 8012656:	ea43 0302 	orr.w	r3, r3, r2
 801265a:	bf44      	itt	mi
 801265c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012660:	b21b      	sxthmi	r3, r3
 8012662:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8012666:	1b5d      	subs	r5, r3, r5
 8012668:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801266c:	4632      	mov	r2, r6
 801266e:	e6fb      	b.n	8012468 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8012670:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 8012674:	4694      	mov	ip, r2
 8012676:	f102 0908 	add.w	r9, r2, #8
 801267a:	4676      	mov	r6, lr
 801267c:	f8dc 0000 	ldr.w	r0, [ip]
 8012680:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8012684:	46f0      	mov	r8, lr
 8012686:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801268a:	f10c 0c08 	add.w	ip, ip, #8
 801268e:	45cc      	cmp	ip, r9
 8012690:	46c6      	mov	lr, r8
 8012692:	d1f3      	bne.n	801267c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8012694:	f8dc 0000 	ldr.w	r0, [ip]
 8012698:	f8c8 0000 	str.w	r0, [r8]
 801269c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80126a0:	f8a8 1004 	strh.w	r1, [r8, #4]
 80126a4:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 80126a8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80126ac:	d009      	beq.n	80126c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 80126ae:	7b51      	ldrb	r1, [r2, #13]
 80126b0:	7992      	ldrb	r2, [r2, #6]
 80126b2:	0149      	lsls	r1, r1, #5
 80126b4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80126b8:	4311      	orrs	r1, r2
 80126ba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80126be:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 80126c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80126c6:	d00d      	beq.n	80126e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80126c8:	1bdb      	subs	r3, r3, r7
 80126ca:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 80126ce:	b29b      	uxth	r3, r3
 80126d0:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 80126d4:	10db      	asrs	r3, r3, #3
 80126d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80126da:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80126de:	4313      	orrs	r3, r2
 80126e0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 80126e4:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 80126e8:	00cb      	lsls	r3, r1, #3
 80126ea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80126ee:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 80126f2:	0648      	lsls	r0, r1, #25
 80126f4:	ea43 0302 	orr.w	r3, r3, r2
 80126f8:	bf44      	itt	mi
 80126fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80126fe:	b21b      	sxthmi	r3, r3
 8012700:	e7b1      	b.n	8012666 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08012704 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012708:	461e      	mov	r6, r3
 801270a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801270c:	4604      	mov	r4, r0
 801270e:	4617      	mov	r7, r2
 8012710:	b92b      	cbnz	r3, 801271e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8012712:	4b25      	ldr	r3, [pc, #148]	; (80127a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8012714:	4a25      	ldr	r2, [pc, #148]	; (80127ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8012716:	4826      	ldr	r0, [pc, #152]	; (80127b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8012718:	21bf      	movs	r1, #191	; 0xbf
 801271a:	f00e fb91 	bl	8020e40 <__assert_func>
 801271e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012720:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012724:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012728:	f7f2 ff78 	bl	800561c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801272c:	4605      	mov	r5, r0
 801272e:	b918      	cbnz	r0, 8012738 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8012730:	6030      	str	r0, [r6, #0]
 8012732:	4628      	mov	r0, r5
 8012734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012738:	683b      	ldr	r3, [r7, #0]
 801273a:	4601      	mov	r1, r0
 801273c:	68db      	ldr	r3, [r3, #12]
 801273e:	4638      	mov	r0, r7
 8012740:	4798      	blx	r3
 8012742:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012746:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801274a:	4602      	mov	r2, r0
 801274c:	6030      	str	r0, [r6, #0]
 801274e:	d213      	bcs.n	8012778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8012750:	4643      	mov	r3, r8
 8012752:	4639      	mov	r1, r7
 8012754:	4620      	mov	r0, r4
 8012756:	f7ff fe33 	bl	80123c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801275a:	6030      	str	r0, [r6, #0]
 801275c:	6833      	ldr	r3, [r6, #0]
 801275e:	b143      	cbz	r3, 8012772 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8012760:	7b5a      	ldrb	r2, [r3, #13]
 8012762:	7a9b      	ldrb	r3, [r3, #10]
 8012764:	0052      	lsls	r2, r2, #1
 8012766:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801276a:	4313      	orrs	r3, r2
 801276c:	bf0c      	ite	eq
 801276e:	2301      	moveq	r3, #1
 8012770:	2300      	movne	r3, #0
 8012772:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012776:	e7dc      	b.n	8012732 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8012778:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801277c:	b29b      	uxth	r3, r3
 801277e:	2b7f      	cmp	r3, #127	; 0x7f
 8012780:	d804      	bhi.n	801278c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8012782:	4639      	mov	r1, r7
 8012784:	4620      	mov	r0, r4
 8012786:	f7ff fd01 	bl	801218c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801278a:	e7e6      	b.n	801275a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801278c:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8012790:	2b00      	cmp	r3, #0
 8012792:	d0e3      	beq.n	801275c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8012794:	f640 1302 	movw	r3, #2306	; 0x902
 8012798:	429d      	cmp	r5, r3
 801279a:	d1df      	bne.n	801275c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801279c:	4601      	mov	r1, r0
 801279e:	4620      	mov	r0, r4
 80127a0:	f7ff fcc5 	bl	801212e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80127a4:	e7d9      	b.n	801275a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80127a6:	bf00      	nop
 80127a8:	08022fd0 	.word	0x08022fd0
 80127ac:	08024c87 	.word	0x08024c87
 80127b0:	080230a2 	.word	0x080230a2

080127b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80127b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80127b8:	461e      	mov	r6, r3
 80127ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80127bc:	4604      	mov	r4, r0
 80127be:	4617      	mov	r7, r2
 80127c0:	b92b      	cbnz	r3, 80127ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80127c2:	4b26      	ldr	r3, [pc, #152]	; (801285c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80127c4:	4a26      	ldr	r2, [pc, #152]	; (8012860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80127c6:	4827      	ldr	r0, [pc, #156]	; (8012864 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80127c8:	21bf      	movs	r1, #191	; 0xbf
 80127ca:	f00e fb39 	bl	8020e40 <__assert_func>
 80127ce:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80127d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80127d4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80127d8:	f7f2 ff20 	bl	800561c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80127dc:	4605      	mov	r5, r0
 80127de:	b918      	cbnz	r0, 80127e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 80127e0:	6030      	str	r0, [r6, #0]
 80127e2:	4628      	mov	r0, r5
 80127e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80127e8:	683b      	ldr	r3, [r7, #0]
 80127ea:	4601      	mov	r1, r0
 80127ec:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80127f0:	4638      	mov	r0, r7
 80127f2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80127f6:	47c8      	blx	r9
 80127f8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80127fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012800:	4602      	mov	r2, r0
 8012802:	6030      	str	r0, [r6, #0]
 8012804:	d213      	bcs.n	801282e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8012806:	4643      	mov	r3, r8
 8012808:	4639      	mov	r1, r7
 801280a:	4620      	mov	r0, r4
 801280c:	f7ff fdd8 	bl	80123c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012810:	6030      	str	r0, [r6, #0]
 8012812:	6833      	ldr	r3, [r6, #0]
 8012814:	b143      	cbz	r3, 8012828 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8012816:	7b5a      	ldrb	r2, [r3, #13]
 8012818:	7a9b      	ldrb	r3, [r3, #10]
 801281a:	0052      	lsls	r2, r2, #1
 801281c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012820:	4313      	orrs	r3, r2
 8012822:	bf0c      	ite	eq
 8012824:	2301      	moveq	r3, #1
 8012826:	2300      	movne	r3, #0
 8012828:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801282c:	e7d9      	b.n	80127e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801282e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012832:	b29b      	uxth	r3, r3
 8012834:	2b7f      	cmp	r3, #127	; 0x7f
 8012836:	d804      	bhi.n	8012842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8012838:	4639      	mov	r1, r7
 801283a:	4620      	mov	r0, r4
 801283c:	f7ff fca6 	bl	801218c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012840:	e7e6      	b.n	8012810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8012842:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8012846:	2b00      	cmp	r3, #0
 8012848:	d0e3      	beq.n	8012812 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801284a:	f640 1302 	movw	r3, #2306	; 0x902
 801284e:	429d      	cmp	r5, r3
 8012850:	d1df      	bne.n	8012812 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8012852:	4601      	mov	r1, r0
 8012854:	4620      	mov	r0, r4
 8012856:	f7ff fc6a 	bl	801212e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801285a:	e7d9      	b.n	8012810 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801285c:	08022fd0 	.word	0x08022fd0
 8012860:	08024c87 	.word	0x08024c87
 8012864:	080230a2 	.word	0x080230a2

08012868 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012868:	b510      	push	{r4, lr}
 801286a:	4604      	mov	r4, r0
 801286c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801286e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012870:	b9d9      	cbnz	r1, 80128aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 8012872:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012874:	2b0a      	cmp	r3, #10
 8012876:	d036      	beq.n	80128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 8012878:	4620      	mov	r0, r4
 801287a:	f7ff fc1f 	bl	80120bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801287e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012880:	2b09      	cmp	r3, #9
 8012882:	d906      	bls.n	8012892 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 8012884:	4b18      	ldr	r3, [pc, #96]	; (80128e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 8012886:	4a19      	ldr	r2, [pc, #100]	; (80128ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8012888:	4819      	ldr	r0, [pc, #100]	; (80128f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801288a:	f240 1103 	movw	r1, #259	; 0x103
 801288e:	f00e fad7 	bl	8020e40 <__assert_func>
 8012892:	1c5a      	adds	r2, r3, #1
 8012894:	8622      	strh	r2, [r4, #48]	; 0x30
 8012896:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8012898:	4413      	add	r3, r2
 801289a:	b29b      	uxth	r3, r3
 801289c:	2b09      	cmp	r3, #9
 801289e:	bf88      	it	hi
 80128a0:	3b0a      	subhi	r3, #10
 80128a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128a6:	8358      	strh	r0, [r3, #26]
 80128a8:	e7e3      	b.n	8012872 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 80128aa:	2b0a      	cmp	r3, #10
 80128ac:	d01b      	beq.n	80128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 80128ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80128b0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80128b4:	3901      	subs	r1, #1
 80128b6:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 80128b8:	8721      	strh	r1, [r4, #56]	; 0x38
 80128ba:	1c51      	adds	r1, r2, #1
 80128bc:	b289      	uxth	r1, r1
 80128be:	2901      	cmp	r1, #1
 80128c0:	bf8a      	itet	hi
 80128c2:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80128c6:	86e1      	strhls	r1, [r4, #54]	; 0x36
 80128c8:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 80128ca:	2b09      	cmp	r3, #9
 80128cc:	d8da      	bhi.n	8012884 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 80128ce:	1c5a      	adds	r2, r3, #1
 80128d0:	8622      	strh	r2, [r4, #48]	; 0x30
 80128d2:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80128d4:	4413      	add	r3, r2
 80128d6:	b29b      	uxth	r3, r3
 80128d8:	2b09      	cmp	r3, #9
 80128da:	bf88      	it	hi
 80128dc:	3b0a      	subhi	r3, #10
 80128de:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128e2:	8358      	strh	r0, [r3, #26]
 80128e4:	e7c2      	b.n	801286c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80128e6:	bd10      	pop	{r4, pc}
 80128e8:	08024a58 	.word	0x08024a58
 80128ec:	08024ddd 	.word	0x08024ddd
 80128f0:	080230a2 	.word	0x080230a2

080128f4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80128f4:	b538      	push	{r3, r4, r5, lr}
 80128f6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80128f8:	4604      	mov	r4, r0
 80128fa:	b92a      	cbnz	r2, 8012908 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 80128fc:	4b13      	ldr	r3, [pc, #76]	; (801294c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 80128fe:	4a14      	ldr	r2, [pc, #80]	; (8012950 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8012900:	4814      	ldr	r0, [pc, #80]	; (8012954 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8012902:	21d4      	movs	r1, #212	; 0xd4
 8012904:	f00e fa9c 	bl	8020e40 <__assert_func>
 8012908:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801290a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801290e:	3a01      	subs	r2, #1
 8012910:	8b4d      	ldrh	r5, [r1, #26]
 8012912:	8602      	strh	r2, [r0, #48]	; 0x30
 8012914:	1c5a      	adds	r2, r3, #1
 8012916:	b292      	uxth	r2, r2
 8012918:	2a09      	cmp	r2, #9
 801291a:	bf86      	itte	hi
 801291c:	3b09      	subhi	r3, #9
 801291e:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 8012920:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 8012922:	f7ff ffa1 	bl	8012868 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012926:	8b23      	ldrh	r3, [r4, #24]
 8012928:	2b01      	cmp	r3, #1
 801292a:	bf9c      	itt	ls
 801292c:	3301      	addls	r3, #1
 801292e:	8323      	strhls	r3, [r4, #24]
 8012930:	8ae3      	ldrh	r3, [r4, #22]
 8012932:	b90b      	cbnz	r3, 8012938 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8012934:	2302      	movs	r3, #2
 8012936:	82e3      	strh	r3, [r4, #22]
 8012938:	8ae3      	ldrh	r3, [r4, #22]
 801293a:	3b01      	subs	r3, #1
 801293c:	b29b      	uxth	r3, r3
 801293e:	82e3      	strh	r3, [r4, #22]
 8012940:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012944:	4628      	mov	r0, r5
 8012946:	8265      	strh	r5, [r4, #18]
 8012948:	bd38      	pop	{r3, r4, r5, pc}
 801294a:	bf00      	nop
 801294c:	08022fd0 	.word	0x08022fd0
 8012950:	08024d32 	.word	0x08024d32
 8012954:	080230a2 	.word	0x080230a2

08012958 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012958:	b538      	push	{r3, r4, r5, lr}
 801295a:	428a      	cmp	r2, r1
 801295c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801295e:	d90c      	bls.n	801297a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8012960:	b92c      	cbnz	r4, 801296e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8012962:	4b1c      	ldr	r3, [pc, #112]	; (80129d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8012964:	4a1c      	ldr	r2, [pc, #112]	; (80129d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8012966:	21e0      	movs	r1, #224	; 0xe0
 8012968:	481c      	ldr	r0, [pc, #112]	; (80129dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801296a:	f00e fa69 	bl	8020e40 <__assert_func>
 801296e:	3c01      	subs	r4, #1
 8012970:	8604      	strh	r4, [r0, #48]	; 0x30
 8012972:	4b1b      	ldr	r3, [pc, #108]	; (80129e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8012974:	4a1b      	ldr	r2, [pc, #108]	; (80129e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8012976:	21c4      	movs	r1, #196	; 0xc4
 8012978:	e7f6      	b.n	8012968 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801297a:	428c      	cmp	r4, r1
 801297c:	d203      	bcs.n	8012986 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801297e:	4b1a      	ldr	r3, [pc, #104]	; (80129e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8012980:	4a1a      	ldr	r2, [pc, #104]	; (80129ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8012982:	21ca      	movs	r1, #202	; 0xca
 8012984:	e7f0      	b.n	8012968 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8012986:	1a64      	subs	r4, r4, r1
 8012988:	8604      	strh	r4, [r0, #48]	; 0x30
 801298a:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 801298c:	4421      	add	r1, r4
 801298e:	b289      	uxth	r1, r1
 8012990:	2909      	cmp	r1, #9
 8012992:	bf88      	it	hi
 8012994:	390a      	subhi	r1, #10
 8012996:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012998:	250a      	movs	r5, #10
 801299a:	b1ba      	cbz	r2, 80129cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801299c:	3a01      	subs	r2, #1
 801299e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 80129a0:	b292      	uxth	r2, r2
 80129a2:	2909      	cmp	r1, #9
 80129a4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80129a8:	d903      	bls.n	80129b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 80129aa:	4b11      	ldr	r3, [pc, #68]	; (80129f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 80129ac:	4a11      	ldr	r2, [pc, #68]	; (80129f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 80129ae:	21e5      	movs	r1, #229	; 0xe5
 80129b0:	e7da      	b.n	8012968 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80129b2:	3101      	adds	r1, #1
 80129b4:	8601      	strh	r1, [r0, #48]	; 0x30
 80129b6:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80129b8:	b901      	cbnz	r1, 80129bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 80129ba:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80129bc:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80129be:	3901      	subs	r1, #1
 80129c0:	b289      	uxth	r1, r1
 80129c2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80129c4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80129c8:	834c      	strh	r4, [r1, #26]
 80129ca:	e7e6      	b.n	801299a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 80129cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80129d0:	f7ff bf4a 	b.w	8012868 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80129d4:	08022fd0 	.word	0x08022fd0
 80129d8:	08024b0b 	.word	0x08024b0b
 80129dc:	080230a2 	.word	0x080230a2
 80129e0:	080230ce 	.word	0x080230ce
 80129e4:	08024bb5 	.word	0x08024bb5
 80129e8:	08024a64 	.word	0x08024a64
 80129ec:	08024e8c 	.word	0x08024e8c
 80129f0:	08024a70 	.word	0x08024a70
 80129f4:	08024a83 	.word	0x08024a83

080129f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80129f8:	3a01      	subs	r2, #1
 80129fa:	b570      	push	{r4, r5, r6, lr}
 80129fc:	b292      	uxth	r2, r2
 80129fe:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8012a02:	42b2      	cmp	r2, r6
 8012a04:	d019      	beq.n	8012a3a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8012a06:	8b04      	ldrh	r4, [r0, #24]
 8012a08:	f831 5b02 	ldrh.w	r5, [r1], #2
 8012a0c:	4294      	cmp	r4, r2
 8012a0e:	d805      	bhi.n	8012a1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8012a10:	4b19      	ldr	r3, [pc, #100]	; (8012a78 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8012a12:	4a1a      	ldr	r2, [pc, #104]	; (8012a7c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8012a14:	481a      	ldr	r0, [pc, #104]	; (8012a80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8012a16:	21c4      	movs	r1, #196	; 0xc4
 8012a18:	f00e fa12 	bl	8020e40 <__assert_func>
 8012a1c:	8ac4      	ldrh	r4, [r0, #22]
 8012a1e:	4414      	add	r4, r2
 8012a20:	b2a4      	uxth	r4, r4
 8012a22:	2c01      	cmp	r4, #1
 8012a24:	bf88      	it	hi
 8012a26:	3c02      	subhi	r4, #2
 8012a28:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012a2c:	3a01      	subs	r2, #1
 8012a2e:	8a64      	ldrh	r4, [r4, #18]
 8012a30:	42ac      	cmp	r4, r5
 8012a32:	b292      	uxth	r2, r2
 8012a34:	d0e5      	beq.n	8012a02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8012a36:	2000      	movs	r0, #0
 8012a38:	bd70      	pop	{r4, r5, r6, pc}
 8012a3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012a3e:	2400      	movs	r4, #0
 8012a40:	4413      	add	r3, r2
 8012a42:	b2a2      	uxth	r2, r4
 8012a44:	429a      	cmp	r2, r3
 8012a46:	da14      	bge.n	8012a72 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8012a48:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8012a4a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012a4e:	4296      	cmp	r6, r2
 8012a50:	d802      	bhi.n	8012a58 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8012a52:	4b09      	ldr	r3, [pc, #36]	; (8012a78 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8012a54:	4a0b      	ldr	r2, [pc, #44]	; (8012a84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8012a56:	e7dd      	b.n	8012a14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8012a58:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 8012a5a:	4432      	add	r2, r6
 8012a5c:	b292      	uxth	r2, r2
 8012a5e:	2a09      	cmp	r2, #9
 8012a60:	bf88      	it	hi
 8012a62:	3a0a      	subhi	r2, #10
 8012a64:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012a68:	3401      	adds	r4, #1
 8012a6a:	8b52      	ldrh	r2, [r2, #26]
 8012a6c:	42aa      	cmp	r2, r5
 8012a6e:	d0e8      	beq.n	8012a42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8012a70:	e7e1      	b.n	8012a36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8012a72:	2001      	movs	r0, #1
 8012a74:	e7e0      	b.n	8012a38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8012a76:	bf00      	nop
 8012a78:	080230ce 	.word	0x080230ce
 8012a7c:	08024f10 	.word	0x08024f10
 8012a80:	080230a2 	.word	0x080230a2
 8012a84:	08024bb5 	.word	0x08024bb5

08012a88 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012a88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a8c:	4605      	mov	r5, r0
 8012a8e:	4616      	mov	r6, r2
 8012a90:	1c8c      	adds	r4, r1, #2
 8012a92:	8809      	ldrh	r1, [r1, #0]
 8012a94:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012a98:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012a9c:	42b3      	cmp	r3, r6
 8012a9e:	d124      	bne.n	8012aea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012aa0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012aa4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012aa8:	f001 070f 	and.w	r7, r1, #15
 8012aac:	f8cd 8000 	str.w	r8, [sp]
 8012ab0:	464b      	mov	r3, r9
 8012ab2:	4652      	mov	r2, sl
 8012ab4:	4621      	mov	r1, r4
 8012ab6:	4628      	mov	r0, r5
 8012ab8:	f7ff ff9e 	bl	80129f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012abc:	4683      	mov	fp, r0
 8012abe:	b168      	cbz	r0, 8012adc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012ac0:	eb0a 0109 	add.w	r1, sl, r9
 8012ac4:	4441      	add	r1, r8
 8012ac6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012aca:	463a      	mov	r2, r7
 8012acc:	4649      	mov	r1, r9
 8012ace:	4628      	mov	r0, r5
 8012ad0:	f7ff ff42 	bl	8012958 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012ad4:	4658      	mov	r0, fp
 8012ad6:	b003      	add	sp, #12
 8012ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012adc:	eb07 010a 	add.w	r1, r7, sl
 8012ae0:	4449      	add	r1, r9
 8012ae2:	4441      	add	r1, r8
 8012ae4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012ae8:	e7d2      	b.n	8012a90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012aea:	f04f 0b00 	mov.w	fp, #0
 8012aee:	e7f1      	b.n	8012ad4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012af0:	b570      	push	{r4, r5, r6, lr}
 8012af2:	8810      	ldrh	r0, [r2, #0]
 8012af4:	4298      	cmp	r0, r3
 8012af6:	d817      	bhi.n	8012b28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012af8:	1e48      	subs	r0, r1, #1
 8012afa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012afe:	4298      	cmp	r0, r3
 8012b00:	d312      	bcc.n	8012b28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b02:	2400      	movs	r4, #0
 8012b04:	428c      	cmp	r4, r1
 8012b06:	d20f      	bcs.n	8012b28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b08:	1860      	adds	r0, r4, r1
 8012b0a:	1040      	asrs	r0, r0, #1
 8012b0c:	0085      	lsls	r5, r0, #2
 8012b0e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012b12:	42b3      	cmp	r3, r6
 8012b14:	d902      	bls.n	8012b1c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012b16:	3001      	adds	r0, #1
 8012b18:	b284      	uxth	r4, r0
 8012b1a:	e7f3      	b.n	8012b04 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b1c:	d201      	bcs.n	8012b22 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012b1e:	b281      	uxth	r1, r0
 8012b20:	e7f0      	b.n	8012b04 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b22:	442a      	add	r2, r5
 8012b24:	8850      	ldrh	r0, [r2, #2]
 8012b26:	bd70      	pop	{r4, r5, r6, pc}
 8012b28:	2000      	movs	r0, #0
 8012b2a:	e7fc      	b.n	8012b26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012b2c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012b2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b30:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8012b32:	886f      	ldrh	r7, [r5, #2]
 8012b34:	4604      	mov	r4, r0
 8012b36:	087f      	lsrs	r7, r7, #1
 8012b38:	260b      	movs	r6, #11
 8012b3a:	3e01      	subs	r6, #1
 8012b3c:	d01b      	beq.n	8012b76 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8012b3e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012b40:	b92b      	cbnz	r3, 8012b4e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8012b42:	4b0e      	ldr	r3, [pc, #56]	; (8012b7c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8012b44:	4a0e      	ldr	r2, [pc, #56]	; (8012b80 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8012b46:	480f      	ldr	r0, [pc, #60]	; (8012b84 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8012b48:	21bf      	movs	r1, #191	; 0xbf
 8012b4a:	f00e f979 	bl	8020e40 <__assert_func>
 8012b4e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012b50:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b54:	462a      	mov	r2, r5
 8012b56:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012b5a:	4639      	mov	r1, r7
 8012b5c:	4643      	mov	r3, r8
 8012b5e:	4620      	mov	r0, r4
 8012b60:	f7ff ffc6 	bl	8012af0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012b64:	b138      	cbz	r0, 8012b76 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8012b66:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012b6a:	4642      	mov	r2, r8
 8012b6c:	4620      	mov	r0, r4
 8012b6e:	f7ff ff8b 	bl	8012a88 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012b72:	2800      	cmp	r0, #0
 8012b74:	d1e1      	bne.n	8012b3a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012b76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b7a:	bf00      	nop
 8012b7c:	08022fd0 	.word	0x08022fd0
 8012b80:	08024c87 	.word	0x08024c87
 8012b84:	080230a2 	.word	0x080230a2

08012b88 <_ZN8touchgfx8ceil28_4El>:
 8012b88:	f110 030f 	adds.w	r3, r0, #15
 8012b8c:	d401      	bmi.n	8012b92 <_ZN8touchgfx8ceil28_4El+0xa>
 8012b8e:	1118      	asrs	r0, r3, #4
 8012b90:	4770      	bx	lr
 8012b92:	f1c0 0001 	rsb	r0, r0, #1
 8012b96:	f010 000f 	ands.w	r0, r0, #15
 8012b9a:	bf18      	it	ne
 8012b9c:	2001      	movne	r0, #1
 8012b9e:	2210      	movs	r2, #16
 8012ba0:	fb93 f3f2 	sdiv	r3, r3, r2
 8012ba4:	1a18      	subs	r0, r3, r0
 8012ba6:	4770      	bx	lr

08012ba8 <_ZN8touchgfx11floorDivModEllRlS0_>:
 8012ba8:	2900      	cmp	r1, #0
 8012baa:	b538      	push	{r3, r4, r5, lr}
 8012bac:	dc05      	bgt.n	8012bba <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 8012bae:	4b0f      	ldr	r3, [pc, #60]	; (8012bec <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 8012bb0:	4a0f      	ldr	r2, [pc, #60]	; (8012bf0 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 8012bb2:	4810      	ldr	r0, [pc, #64]	; (8012bf4 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 8012bb4:	21f7      	movs	r1, #247	; 0xf7
 8012bb6:	f00e f943 	bl	8020e40 <__assert_func>
 8012bba:	2800      	cmp	r0, #0
 8012bbc:	db06      	blt.n	8012bcc <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 8012bbe:	fb90 f4f1 	sdiv	r4, r0, r1
 8012bc2:	6014      	str	r4, [r2, #0]
 8012bc4:	fb01 0114 	mls	r1, r1, r4, r0
 8012bc8:	6019      	str	r1, [r3, #0]
 8012bca:	bd38      	pop	{r3, r4, r5, pc}
 8012bcc:	4240      	negs	r0, r0
 8012bce:	fb90 f4f1 	sdiv	r4, r0, r1
 8012bd2:	4265      	negs	r5, r4
 8012bd4:	fb01 0014 	mls	r0, r1, r4, r0
 8012bd8:	6015      	str	r5, [r2, #0]
 8012bda:	6018      	str	r0, [r3, #0]
 8012bdc:	2800      	cmp	r0, #0
 8012bde:	d0f4      	beq.n	8012bca <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 8012be0:	6810      	ldr	r0, [r2, #0]
 8012be2:	3801      	subs	r0, #1
 8012be4:	6010      	str	r0, [r2, #0]
 8012be6:	6818      	ldr	r0, [r3, #0]
 8012be8:	1a09      	subs	r1, r1, r0
 8012bea:	e7ed      	b.n	8012bc8 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 8012bec:	08024fe1 	.word	0x08024fe1
 8012bf0:	08025020 	.word	0x08025020
 8012bf4:	08024ff1 	.word	0x08024ff1

08012bf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012bf8:	b570      	push	{r4, r5, r6, lr}
 8012bfa:	694a      	ldr	r2, [r1, #20]
 8012bfc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012bfe:	684b      	ldr	r3, [r1, #4]
 8012c00:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8012c02:	1b54      	subs	r4, r2, r5
 8012c04:	f000 8106 	beq.w	8012e14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012c08:	1b9b      	subs	r3, r3, r6
 8012c0a:	d003      	beq.n	8012c14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012c0c:	4363      	muls	r3, r4
 8012c0e:	2210      	movs	r2, #16
 8012c10:	fb93 f3f2 	sdiv	r3, r3, r2
 8012c14:	680c      	ldr	r4, [r1, #0]
 8012c16:	698a      	ldr	r2, [r1, #24]
 8012c18:	1b65      	subs	r5, r4, r5
 8012c1a:	f000 80fd 	beq.w	8012e18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012c1e:	1b92      	subs	r2, r2, r6
 8012c20:	d003      	beq.n	8012c2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012c22:	436a      	muls	r2, r5
 8012c24:	2410      	movs	r4, #16
 8012c26:	fb92 f2f4 	sdiv	r2, r2, r4
 8012c2a:	1a9b      	subs	r3, r3, r2
 8012c2c:	ee07 3a90 	vmov	s15, r3
 8012c30:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8012e54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012c34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012c3c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012c40:	460a      	mov	r2, r1
 8012c42:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012c46:	4603      	mov	r3, r0
 8012c48:	f100 040c 	add.w	r4, r0, #12
 8012c4c:	eeb1 6a43 	vneg.f32	s12, s6
 8012c50:	edd2 7a02 	vldr	s15, [r2, #8]
 8012c54:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012c58:	3214      	adds	r2, #20
 8012c5a:	ece3 6a01 	vstmia	r3!, {s13}
 8012c5e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012c62:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012c66:	429c      	cmp	r4, r3
 8012c68:	edc3 7a02 	vstr	s15, [r3, #8]
 8012c6c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012c70:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012c74:	edc3 7a05 	vstr	s15, [r3, #20]
 8012c78:	d1ea      	bne.n	8012c50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012c7a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012c7c:	698b      	ldr	r3, [r1, #24]
 8012c7e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012c82:	edd0 3a00 	vldr	s7, [r0]
 8012c86:	edd0 6a01 	vldr	s13, [r0, #4]
 8012c8a:	ed90 5a05 	vldr	s10, [r0, #20]
 8012c8e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012c92:	edd0 5a04 	vldr	s11, [r0, #16]
 8012c96:	ed90 1a07 	vldr	s2, [r0, #28]
 8012c9a:	edd0 2a06 	vldr	s5, [r0, #24]
 8012c9e:	1a9b      	subs	r3, r3, r2
 8012ca0:	ee07 3a90 	vmov	s15, r3
 8012ca4:	684b      	ldr	r3, [r1, #4]
 8012ca6:	1a9b      	subs	r3, r3, r2
 8012ca8:	ee07 3a10 	vmov	s14, r3
 8012cac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cb0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012cb4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012cb8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012cbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cc0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012cc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cc8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012ccc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012cd0:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012cd4:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012cd8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012cdc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012cde:	694a      	ldr	r2, [r1, #20]
 8012ce0:	1b13      	subs	r3, r2, r4
 8012ce2:	ee07 3a10 	vmov	s14, r3
 8012ce6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cea:	680b      	ldr	r3, [r1, #0]
 8012cec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cf0:	1b1b      	subs	r3, r3, r4
 8012cf2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012cf6:	ee07 3a10 	vmov	s14, r3
 8012cfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cfe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d02:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012d06:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012d0a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012d0e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012d10:	698b      	ldr	r3, [r1, #24]
 8012d12:	1a9b      	subs	r3, r3, r2
 8012d14:	ee06 3a90 	vmov	s13, r3
 8012d18:	684b      	ldr	r3, [r1, #4]
 8012d1a:	1a9b      	subs	r3, r3, r2
 8012d1c:	ee07 3a10 	vmov	s14, r3
 8012d20:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012d24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d28:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012d2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d30:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012d34:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012d38:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012d3c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012d40:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012d42:	694a      	ldr	r2, [r1, #20]
 8012d44:	1b13      	subs	r3, r2, r4
 8012d46:	ee07 3a10 	vmov	s14, r3
 8012d4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d4e:	680b      	ldr	r3, [r1, #0]
 8012d50:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d54:	1b1b      	subs	r3, r3, r4
 8012d56:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012d5a:	ee07 3a10 	vmov	s14, r3
 8012d5e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d62:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d66:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012d6a:	edd0 5a08 	vldr	s11, [r0, #32]
 8012d6e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012d72:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012d76:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012d7a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012d7c:	698b      	ldr	r3, [r1, #24]
 8012d7e:	1a9b      	subs	r3, r3, r2
 8012d80:	ee07 3a10 	vmov	s14, r3
 8012d84:	684b      	ldr	r3, [r1, #4]
 8012d86:	1a9b      	subs	r3, r3, r2
 8012d88:	ee01 3a90 	vmov	s3, r3
 8012d8c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d90:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012d94:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d98:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012d9c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012da0:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012da4:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012da8:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012dac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012db0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012db2:	694a      	ldr	r2, [r1, #20]
 8012db4:	1b13      	subs	r3, r2, r4
 8012db6:	ee03 3a10 	vmov	s6, r3
 8012dba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012dbe:	680b      	ldr	r3, [r1, #0]
 8012dc0:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012dc4:	1b1b      	subs	r3, r3, r4
 8012dc6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012dca:	ee03 3a10 	vmov	s6, r3
 8012dce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012dd2:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012dd6:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012dda:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012dde:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012de2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012de6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012dea:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012df2:	dd13      	ble.n	8012e1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012df4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012df8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012dfc:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012dfe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012e02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e0a:	dd15      	ble.n	8012e38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012e0c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012e10:	6403      	str	r3, [r0, #64]	; 0x40
 8012e12:	bd70      	pop	{r4, r5, r6, pc}
 8012e14:	4623      	mov	r3, r4
 8012e16:	e6fd      	b.n	8012c14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012e18:	462a      	mov	r2, r5
 8012e1a:	e706      	b.n	8012c2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012e1c:	d502      	bpl.n	8012e24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012e1e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012e22:	e7e9      	b.n	8012df8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012e24:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012e28:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012e2c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012e30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e34:	dade      	bge.n	8012df4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012e36:	e7f2      	b.n	8012e1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012e38:	d502      	bpl.n	8012e40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012e3a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012e3e:	e7e7      	b.n	8012e10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012e40:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012e44:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012e48:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012e4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012e50:	dadc      	bge.n	8012e0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012e52:	e7f2      	b.n	8012e3a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012e54:	3d800000 	.word	0x3d800000

08012e58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012e58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e5c:	f04f 0814 	mov.w	r8, #20
 8012e60:	fb08 f903 	mul.w	r9, r8, r3
 8012e64:	eb02 0a09 	add.w	sl, r2, r9
 8012e68:	4604      	mov	r4, r0
 8012e6a:	f8da 0004 	ldr.w	r0, [sl, #4]
 8012e6e:	4617      	mov	r7, r2
 8012e70:	460d      	mov	r5, r1
 8012e72:	461e      	mov	r6, r3
 8012e74:	f7ff fe88 	bl	8012b88 <_ZN8touchgfx8ceil28_4El>
 8012e78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e7a:	6160      	str	r0, [r4, #20]
 8012e7c:	fb08 f803 	mul.w	r8, r8, r3
 8012e80:	eb07 0b08 	add.w	fp, r7, r8
 8012e84:	9001      	str	r0, [sp, #4]
 8012e86:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012e8a:	f7ff fe7d 	bl	8012b88 <_ZN8touchgfx8ceil28_4El>
 8012e8e:	9a01      	ldr	r2, [sp, #4]
 8012e90:	1a80      	subs	r0, r0, r2
 8012e92:	61a0      	str	r0, [r4, #24]
 8012e94:	2800      	cmp	r0, #0
 8012e96:	f000 8088 	beq.w	8012faa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 8012e9a:	f857 3009 	ldr.w	r3, [r7, r9]
 8012e9e:	f857 c008 	ldr.w	ip, [r7, r8]
 8012ea2:	f8da 1004 	ldr.w	r1, [sl, #4]
 8012ea6:	f8db 0004 	ldr.w	r0, [fp, #4]
 8012eaa:	ebac 0c03 	sub.w	ip, ip, r3
 8012eae:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8012eb2:	fb0b f202 	mul.w	r2, fp, r2
 8012eb6:	fb0c 2211 	mls	r2, ip, r1, r2
 8012eba:	1a40      	subs	r0, r0, r1
 8012ebc:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8012ec0:	fb00 2003 	mla	r0, r0, r3, r2
 8012ec4:	3801      	subs	r0, #1
 8012ec6:	f104 0310 	add.w	r3, r4, #16
 8012eca:	4622      	mov	r2, r4
 8012ecc:	4641      	mov	r1, r8
 8012ece:	4440      	add	r0, r8
 8012ed0:	f7ff fe6a 	bl	8012ba8 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012ed4:	f104 0308 	add.w	r3, r4, #8
 8012ed8:	1d22      	adds	r2, r4, #4
 8012eda:	4641      	mov	r1, r8
 8012edc:	4658      	mov	r0, fp
 8012ede:	f7ff fe63 	bl	8012ba8 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012ee2:	f8c4 800c 	str.w	r8, [r4, #12]
 8012ee6:	f8da 3004 	ldr.w	r3, [sl, #4]
 8012eea:	6962      	ldr	r2, [r4, #20]
 8012eec:	eddf 6a31 	vldr	s13, [pc, #196]	; 8012fb4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012ef0:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8012ef4:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8012ef8:	ee07 3a10 	vmov	s14, r3
 8012efc:	6822      	ldr	r2, [r4, #0]
 8012efe:	f857 3009 	ldr.w	r3, [r7, r9]
 8012f02:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8012f06:	ee07 3a90 	vmov	s15, r3
 8012f0a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012f0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f12:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8012f16:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012f1a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012f1e:	edd3 6a00 	vldr	s13, [r3]
 8012f22:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012f26:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012f2a:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012f2e:	edc4 6a07 	vstr	s13, [r4, #28]
 8012f32:	edd4 6a01 	vldr	s13, [r4, #4]
 8012f36:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 8012f3a:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8012f3e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012f42:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012f46:	ed84 6a08 	vstr	s12, [r4, #32]
 8012f4a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8012f4c:	6262      	str	r2, [r4, #36]	; 0x24
 8012f4e:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8012f52:	ed93 6a03 	vldr	s12, [r3, #12]
 8012f56:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012f5a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012f5e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012f62:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8012f66:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012f6a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8012f6e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012f72:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8012f76:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8012f78:	6322      	str	r2, [r4, #48]	; 0x30
 8012f7a:	ed93 6a06 	vldr	s12, [r3, #24]
 8012f7e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8012f82:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012f86:	eeb0 7a46 	vmov.f32	s14, s12
 8012f8a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8012f8e:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012f92:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8012f96:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8012f9a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8012f9e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012fa2:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8012fa6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8012fa8:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012faa:	4620      	mov	r0, r4
 8012fac:	b003      	add	sp, #12
 8012fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fb2:	bf00      	nop
 8012fb4:	3d800000 	.word	0x3d800000

08012fb8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012fb8:	4602      	mov	r2, r0
 8012fba:	b148      	cbz	r0, 8012fd0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012fbc:	2300      	movs	r3, #0
 8012fbe:	b298      	uxth	r0, r3
 8012fc0:	3301      	adds	r3, #1
 8012fc2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012fc6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012fca:	2900      	cmp	r1, #0
 8012fcc:	d1f7      	bne.n	8012fbe <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012fce:	4770      	bx	lr
 8012fd0:	4770      	bx	lr

08012fd2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012fd2:	b530      	push	{r4, r5, lr}
 8012fd4:	4604      	mov	r4, r0
 8012fd6:	b159      	cbz	r1, 8012ff0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012fd8:	b148      	cbz	r0, 8012fee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012fda:	2300      	movs	r3, #0
 8012fdc:	b298      	uxth	r0, r3
 8012fde:	4282      	cmp	r2, r0
 8012fe0:	d905      	bls.n	8012fee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012fe2:	5ccd      	ldrb	r5, [r1, r3]
 8012fe4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012fe8:	3301      	adds	r3, #1
 8012fea:	2d00      	cmp	r5, #0
 8012fec:	d1f6      	bne.n	8012fdc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012fee:	bd30      	pop	{r4, r5, pc}
 8012ff0:	4608      	mov	r0, r1
 8012ff2:	e7fc      	b.n	8012fee <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012ff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8012ff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ff6:	b08b      	sub	sp, #44	; 0x2c
 8012ff8:	468c      	mov	ip, r1
 8012ffa:	2100      	movs	r1, #0
 8012ffc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013000:	ae01      	add	r6, sp, #4
 8013002:	211f      	movs	r1, #31
 8013004:	fbb0 f7f3 	udiv	r7, r0, r3
 8013008:	fb03 0517 	mls	r5, r3, r7, r0
 801300c:	b2ec      	uxtb	r4, r5
 801300e:	2d09      	cmp	r5, #9
 8013010:	bfd4      	ite	le
 8013012:	3430      	addle	r4, #48	; 0x30
 8013014:	3457      	addgt	r4, #87	; 0x57
 8013016:	b2e4      	uxtb	r4, r4
 8013018:	558c      	strb	r4, [r1, r6]
 801301a:	4638      	mov	r0, r7
 801301c:	1e4c      	subs	r4, r1, #1
 801301e:	b92f      	cbnz	r7, 801302c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013020:	4431      	add	r1, r6
 8013022:	4660      	mov	r0, ip
 8013024:	f7ff ffd5 	bl	8012fd2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013028:	b00b      	add	sp, #44	; 0x2c
 801302a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801302c:	4621      	mov	r1, r4
 801302e:	e7e9      	b.n	8013004 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013030 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013030:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013032:	4607      	mov	r7, r0
 8013034:	b08b      	sub	sp, #44	; 0x2c
 8013036:	4608      	mov	r0, r1
 8013038:	b341      	cbz	r1, 801308c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801303a:	1e99      	subs	r1, r3, #2
 801303c:	2922      	cmp	r1, #34	; 0x22
 801303e:	d825      	bhi.n	801308c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013040:	2100      	movs	r1, #0
 8013042:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013046:	463c      	mov	r4, r7
 8013048:	261f      	movs	r6, #31
 801304a:	f10d 0c04 	add.w	ip, sp, #4
 801304e:	fb94 fef3 	sdiv	lr, r4, r3
 8013052:	fb03 441e 	mls	r4, r3, lr, r4
 8013056:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801305a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801305e:	b2ec      	uxtb	r4, r5
 8013060:	2d09      	cmp	r5, #9
 8013062:	bfd4      	ite	le
 8013064:	3430      	addle	r4, #48	; 0x30
 8013066:	3457      	addgt	r4, #87	; 0x57
 8013068:	b2e4      	uxtb	r4, r4
 801306a:	f80c 4006 	strb.w	r4, [ip, r6]
 801306e:	4674      	mov	r4, lr
 8013070:	1e71      	subs	r1, r6, #1
 8013072:	b96c      	cbnz	r4, 8013090 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013074:	2f00      	cmp	r7, #0
 8013076:	da05      	bge.n	8013084 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013078:	ab0a      	add	r3, sp, #40	; 0x28
 801307a:	4419      	add	r1, r3
 801307c:	232d      	movs	r3, #45	; 0x2d
 801307e:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013082:	1eb1      	subs	r1, r6, #2
 8013084:	3101      	adds	r1, #1
 8013086:	4461      	add	r1, ip
 8013088:	f7ff ffa3 	bl	8012fd2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801308c:	b00b      	add	sp, #44	; 0x2c
 801308e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013090:	460e      	mov	r6, r1
 8013092:	e7dc      	b.n	801304e <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013098:	4691      	mov	r9, r2
 801309a:	b085      	sub	sp, #20
 801309c:	6802      	ldr	r2, [r0, #0]
 801309e:	9201      	str	r2, [sp, #4]
 80130a0:	4688      	mov	r8, r1
 80130a2:	4683      	mov	fp, r0
 80130a4:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80130a8:	9103      	str	r1, [sp, #12]
 80130aa:	4610      	mov	r0, r2
 80130ac:	461c      	mov	r4, r3
 80130ae:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80130b2:	9302      	str	r3, [sp, #8]
 80130b4:	f7ff ff80 	bl	8012fb8 <_ZN8touchgfx7Unicode6strlenEPKt>
 80130b8:	f1b8 0f00 	cmp.w	r8, #0
 80130bc:	bf0c      	ite	eq
 80130be:	4684      	moveq	ip, r0
 80130c0:	f100 0c01 	addne.w	ip, r0, #1
 80130c4:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80130c8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80130cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80130ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80130d0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80130d4:	9903      	ldr	r1, [sp, #12]
 80130d6:	fa1f fc8c 	uxth.w	ip, ip
 80130da:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80130de:	d041      	beq.n	8013164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80130e0:	d834      	bhi.n	801314c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80130e2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80130e6:	d059      	beq.n	801319c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80130e8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80130ec:	d03a      	beq.n	8013164 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80130ee:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80130f2:	d034      	beq.n	801315e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80130f4:	2400      	movs	r4, #0
 80130f6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80130fa:	3a01      	subs	r2, #1
 80130fc:	b169      	cbz	r1, 801311a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80130fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013100:	458c      	cmp	ip, r1
 8013102:	da09      	bge.n	8013118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013104:	eba1 010c 	sub.w	r1, r1, ip
 8013108:	b289      	uxth	r1, r1
 801310a:	b933      	cbnz	r3, 801311a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801310c:	2e00      	cmp	r6, #0
 801310e:	d051      	beq.n	80131b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013110:	2800      	cmp	r0, #0
 8013112:	d04f      	beq.n	80131b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013114:	440c      	add	r4, r1
 8013116:	b2a4      	uxth	r4, r4
 8013118:	2100      	movs	r1, #0
 801311a:	682b      	ldr	r3, [r5, #0]
 801311c:	4293      	cmp	r3, r2
 801311e:	da07      	bge.n	8013130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013120:	f1b8 0f00 	cmp.w	r8, #0
 8013124:	d004      	beq.n	8013130 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013126:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801312a:	682b      	ldr	r3, [r5, #0]
 801312c:	3301      	adds	r3, #1
 801312e:	602b      	str	r3, [r5, #0]
 8013130:	2730      	movs	r7, #48	; 0x30
 8013132:	2c00      	cmp	r4, #0
 8013134:	d04e      	beq.n	80131d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013136:	682e      	ldr	r6, [r5, #0]
 8013138:	3c01      	subs	r4, #1
 801313a:	42b2      	cmp	r2, r6
 801313c:	b2a4      	uxth	r4, r4
 801313e:	dd49      	ble.n	80131d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013140:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013144:	682b      	ldr	r3, [r5, #0]
 8013146:	3301      	adds	r3, #1
 8013148:	602b      	str	r3, [r5, #0]
 801314a:	e7f2      	b.n	8013132 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801314c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013150:	d01d      	beq.n	801318e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013152:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013156:	d002      	beq.n	801315e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013158:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801315c:	e7c9      	b.n	80130f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801315e:	4684      	mov	ip, r0
 8013160:	f04f 0800 	mov.w	r8, #0
 8013164:	2c00      	cmp	r4, #0
 8013166:	d0c6      	beq.n	80130f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013168:	b947      	cbnz	r7, 801317c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801316a:	2801      	cmp	r0, #1
 801316c:	d106      	bne.n	801317c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801316e:	8814      	ldrh	r4, [r2, #0]
 8013170:	2c30      	cmp	r4, #48	; 0x30
 8013172:	bf02      	ittt	eq
 8013174:	3202      	addeq	r2, #2
 8013176:	f8cb 2000 	streq.w	r2, [fp]
 801317a:	4638      	moveq	r0, r7
 801317c:	45bc      	cmp	ip, r7
 801317e:	da14      	bge.n	80131aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013180:	b2bf      	uxth	r7, r7
 8013182:	eba7 040c 	sub.w	r4, r7, ip
 8013186:	b2a4      	uxth	r4, r4
 8013188:	46bc      	mov	ip, r7
 801318a:	2600      	movs	r6, #0
 801318c:	e7b3      	b.n	80130f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801318e:	4684      	mov	ip, r0
 8013190:	b16c      	cbz	r4, 80131ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013192:	42b8      	cmp	r0, r7
 8013194:	dd00      	ble.n	8013198 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013196:	b2b8      	uxth	r0, r7
 8013198:	2400      	movs	r4, #0
 801319a:	e003      	b.n	80131a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801319c:	f04f 0c01 	mov.w	ip, #1
 80131a0:	2400      	movs	r4, #0
 80131a2:	4660      	mov	r0, ip
 80131a4:	4626      	mov	r6, r4
 80131a6:	46a0      	mov	r8, r4
 80131a8:	e7a5      	b.n	80130f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131aa:	2400      	movs	r4, #0
 80131ac:	e7ed      	b.n	801318a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80131ae:	4626      	mov	r6, r4
 80131b0:	46a0      	mov	r8, r4
 80131b2:	e7a0      	b.n	80130f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131b4:	2900      	cmp	r1, #0
 80131b6:	d0b0      	beq.n	801311a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131b8:	2720      	movs	r7, #32
 80131ba:	682e      	ldr	r6, [r5, #0]
 80131bc:	2900      	cmp	r1, #0
 80131be:	d0ac      	beq.n	801311a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131c0:	3901      	subs	r1, #1
 80131c2:	4296      	cmp	r6, r2
 80131c4:	b289      	uxth	r1, r1
 80131c6:	daa7      	bge.n	8013118 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80131c8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80131cc:	682b      	ldr	r3, [r5, #0]
 80131ce:	3301      	adds	r3, #1
 80131d0:	602b      	str	r3, [r5, #0]
 80131d2:	e7f2      	b.n	80131ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80131d4:	b188      	cbz	r0, 80131fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80131d6:	682b      	ldr	r3, [r5, #0]
 80131d8:	3801      	subs	r0, #1
 80131da:	429a      	cmp	r2, r3
 80131dc:	b280      	uxth	r0, r0
 80131de:	dd0c      	ble.n	80131fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80131e0:	f8db 3000 	ldr.w	r3, [fp]
 80131e4:	1c9c      	adds	r4, r3, #2
 80131e6:	f8cb 4000 	str.w	r4, [fp]
 80131ea:	881c      	ldrh	r4, [r3, #0]
 80131ec:	682b      	ldr	r3, [r5, #0]
 80131ee:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80131f2:	682b      	ldr	r3, [r5, #0]
 80131f4:	3301      	adds	r3, #1
 80131f6:	602b      	str	r3, [r5, #0]
 80131f8:	e7ec      	b.n	80131d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80131fa:	2620      	movs	r6, #32
 80131fc:	b151      	cbz	r1, 8013214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80131fe:	6828      	ldr	r0, [r5, #0]
 8013200:	3901      	subs	r1, #1
 8013202:	4282      	cmp	r2, r0
 8013204:	b289      	uxth	r1, r1
 8013206:	dd05      	ble.n	8013214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013208:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801320c:	682b      	ldr	r3, [r5, #0]
 801320e:	3301      	adds	r3, #1
 8013210:	602b      	str	r3, [r5, #0]
 8013212:	e7f3      	b.n	80131fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013214:	b005      	add	sp, #20
 8013216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801321a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801321a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801321e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013222:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013226:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801322a:	2400      	movs	r4, #0
 801322c:	8014      	strh	r4, [r2, #0]
 801322e:	701c      	strb	r4, [r3, #0]
 8013230:	f888 4000 	strb.w	r4, [r8]
 8013234:	f88c 4000 	strb.w	r4, [ip]
 8013238:	f88e 4000 	strb.w	r4, [lr]
 801323c:	703c      	strb	r4, [r7, #0]
 801323e:	6804      	ldr	r4, [r0, #0]
 8013240:	b1a4      	cbz	r4, 801326c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013242:	8824      	ldrh	r4, [r4, #0]
 8013244:	f04f 0901 	mov.w	r9, #1
 8013248:	b314      	cbz	r4, 8013290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801324a:	2c2b      	cmp	r4, #43	; 0x2b
 801324c:	d001      	beq.n	8013252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801324e:	2c20      	cmp	r4, #32
 8013250:	d110      	bne.n	8013274 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013252:	8014      	strh	r4, [r2, #0]
 8013254:	6804      	ldr	r4, [r0, #0]
 8013256:	b10c      	cbz	r4, 801325c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013258:	3402      	adds	r4, #2
 801325a:	6004      	str	r4, [r0, #0]
 801325c:	680c      	ldr	r4, [r1, #0]
 801325e:	b10c      	cbz	r4, 8013264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013260:	3401      	adds	r4, #1
 8013262:	600c      	str	r4, [r1, #0]
 8013264:	6804      	ldr	r4, [r0, #0]
 8013266:	b17c      	cbz	r4, 8013288 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013268:	8824      	ldrh	r4, [r4, #0]
 801326a:	e7ed      	b.n	8013248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801326c:	680c      	ldr	r4, [r1, #0]
 801326e:	b17c      	cbz	r4, 8013290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013270:	7824      	ldrb	r4, [r4, #0]
 8013272:	e7e7      	b.n	8013244 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013274:	2c2d      	cmp	r4, #45	; 0x2d
 8013276:	d102      	bne.n	801327e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013278:	f883 9000 	strb.w	r9, [r3]
 801327c:	e7ea      	b.n	8013254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801327e:	2c23      	cmp	r4, #35	; 0x23
 8013280:	d107      	bne.n	8013292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013282:	f888 9000 	strb.w	r9, [r8]
 8013286:	e7e5      	b.n	8013254 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013288:	680c      	ldr	r4, [r1, #0]
 801328a:	b10c      	cbz	r4, 8013290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801328c:	7824      	ldrb	r4, [r4, #0]
 801328e:	e7db      	b.n	8013248 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013290:	2400      	movs	r4, #0
 8013292:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013296:	2b09      	cmp	r3, #9
 8013298:	d901      	bls.n	801329e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801329a:	2c2a      	cmp	r4, #42	; 0x2a
 801329c:	d122      	bne.n	80132e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801329e:	2301      	movs	r3, #1
 80132a0:	2c30      	cmp	r4, #48	; 0x30
 80132a2:	f88e 3000 	strb.w	r3, [lr]
 80132a6:	d10d      	bne.n	80132c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80132a8:	f88c 3000 	strb.w	r3, [ip]
 80132ac:	6803      	ldr	r3, [r0, #0]
 80132ae:	b10b      	cbz	r3, 80132b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80132b0:	3302      	adds	r3, #2
 80132b2:	6003      	str	r3, [r0, #0]
 80132b4:	680b      	ldr	r3, [r1, #0]
 80132b6:	b10b      	cbz	r3, 80132bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80132b8:	3301      	adds	r3, #1
 80132ba:	600b      	str	r3, [r1, #0]
 80132bc:	6803      	ldr	r3, [r0, #0]
 80132be:	2b00      	cmp	r3, #0
 80132c0:	d02f      	beq.n	8013322 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80132c2:	881c      	ldrh	r4, [r3, #0]
 80132c4:	2c2a      	cmp	r4, #42	; 0x2a
 80132c6:	d135      	bne.n	8013334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80132c8:	f04f 33ff 	mov.w	r3, #4294967295
 80132cc:	6033      	str	r3, [r6, #0]
 80132ce:	6803      	ldr	r3, [r0, #0]
 80132d0:	b10b      	cbz	r3, 80132d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80132d2:	3302      	adds	r3, #2
 80132d4:	6003      	str	r3, [r0, #0]
 80132d6:	680b      	ldr	r3, [r1, #0]
 80132d8:	b10b      	cbz	r3, 80132de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80132da:	3301      	adds	r3, #1
 80132dc:	600b      	str	r3, [r1, #0]
 80132de:	6803      	ldr	r3, [r0, #0]
 80132e0:	b31b      	cbz	r3, 801332a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80132e2:	881c      	ldrh	r4, [r3, #0]
 80132e4:	2c2e      	cmp	r4, #46	; 0x2e
 80132e6:	d11a      	bne.n	801331e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80132e8:	2301      	movs	r3, #1
 80132ea:	703b      	strb	r3, [r7, #0]
 80132ec:	6803      	ldr	r3, [r0, #0]
 80132ee:	b10b      	cbz	r3, 80132f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80132f0:	3302      	adds	r3, #2
 80132f2:	6003      	str	r3, [r0, #0]
 80132f4:	680b      	ldr	r3, [r1, #0]
 80132f6:	b10b      	cbz	r3, 80132fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80132f8:	3301      	adds	r3, #1
 80132fa:	600b      	str	r3, [r1, #0]
 80132fc:	6803      	ldr	r3, [r0, #0]
 80132fe:	2b00      	cmp	r3, #0
 8013300:	d036      	beq.n	8013370 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013302:	881b      	ldrh	r3, [r3, #0]
 8013304:	2b2a      	cmp	r3, #42	; 0x2a
 8013306:	d137      	bne.n	8013378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013308:	f04f 33ff 	mov.w	r3, #4294967295
 801330c:	602b      	str	r3, [r5, #0]
 801330e:	6803      	ldr	r3, [r0, #0]
 8013310:	b10b      	cbz	r3, 8013316 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013312:	3302      	adds	r3, #2
 8013314:	6003      	str	r3, [r0, #0]
 8013316:	680b      	ldr	r3, [r1, #0]
 8013318:	b10b      	cbz	r3, 801331e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801331a:	3301      	adds	r3, #1
 801331c:	600b      	str	r3, [r1, #0]
 801331e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013322:	680c      	ldr	r4, [r1, #0]
 8013324:	b134      	cbz	r4, 8013334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013326:	7824      	ldrb	r4, [r4, #0]
 8013328:	e7cc      	b.n	80132c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801332a:	680b      	ldr	r3, [r1, #0]
 801332c:	2b00      	cmp	r3, #0
 801332e:	d0f6      	beq.n	801331e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013330:	781c      	ldrb	r4, [r3, #0]
 8013332:	e7d7      	b.n	80132e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013334:	2300      	movs	r3, #0
 8013336:	6033      	str	r3, [r6, #0]
 8013338:	220a      	movs	r2, #10
 801333a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801333e:	fa1f f38c 	uxth.w	r3, ip
 8013342:	2b09      	cmp	r3, #9
 8013344:	d8ce      	bhi.n	80132e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013346:	6833      	ldr	r3, [r6, #0]
 8013348:	fb02 c303 	mla	r3, r2, r3, ip
 801334c:	6033      	str	r3, [r6, #0]
 801334e:	6803      	ldr	r3, [r0, #0]
 8013350:	b10b      	cbz	r3, 8013356 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013352:	3302      	adds	r3, #2
 8013354:	6003      	str	r3, [r0, #0]
 8013356:	680b      	ldr	r3, [r1, #0]
 8013358:	b10b      	cbz	r3, 801335e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801335a:	3301      	adds	r3, #1
 801335c:	600b      	str	r3, [r1, #0]
 801335e:	6803      	ldr	r3, [r0, #0]
 8013360:	b10b      	cbz	r3, 8013366 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013362:	881c      	ldrh	r4, [r3, #0]
 8013364:	e7e9      	b.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013366:	680c      	ldr	r4, [r1, #0]
 8013368:	2c00      	cmp	r4, #0
 801336a:	d0e6      	beq.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801336c:	7824      	ldrb	r4, [r4, #0]
 801336e:	e7e4      	b.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013370:	680b      	ldr	r3, [r1, #0]
 8013372:	b10b      	cbz	r3, 8013378 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013374:	781b      	ldrb	r3, [r3, #0]
 8013376:	e7c5      	b.n	8013304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013378:	2200      	movs	r2, #0
 801337a:	602a      	str	r2, [r5, #0]
 801337c:	240a      	movs	r4, #10
 801337e:	3b30      	subs	r3, #48	; 0x30
 8013380:	b29e      	uxth	r6, r3
 8013382:	2e09      	cmp	r6, #9
 8013384:	682a      	ldr	r2, [r5, #0]
 8013386:	d813      	bhi.n	80133b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013388:	fb04 3302 	mla	r3, r4, r2, r3
 801338c:	602b      	str	r3, [r5, #0]
 801338e:	6803      	ldr	r3, [r0, #0]
 8013390:	b10b      	cbz	r3, 8013396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013392:	3302      	adds	r3, #2
 8013394:	6003      	str	r3, [r0, #0]
 8013396:	680b      	ldr	r3, [r1, #0]
 8013398:	b10b      	cbz	r3, 801339e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801339a:	3301      	adds	r3, #1
 801339c:	600b      	str	r3, [r1, #0]
 801339e:	6803      	ldr	r3, [r0, #0]
 80133a0:	b10b      	cbz	r3, 80133a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80133a2:	881b      	ldrh	r3, [r3, #0]
 80133a4:	e7eb      	b.n	801337e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133a6:	680b      	ldr	r3, [r1, #0]
 80133a8:	2b00      	cmp	r3, #0
 80133aa:	d0e8      	beq.n	801337e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133ac:	781b      	ldrb	r3, [r3, #0]
 80133ae:	e7e6      	b.n	801337e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133b0:	2a06      	cmp	r2, #6
 80133b2:	bfa8      	it	ge
 80133b4:	2206      	movge	r2, #6
 80133b6:	602a      	str	r2, [r5, #0]
 80133b8:	e7b1      	b.n	801331e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080133ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80133ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133be:	b0a3      	sub	sp, #140	; 0x8c
 80133c0:	2600      	movs	r6, #0
 80133c2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80133c6:	4607      	mov	r7, r0
 80133c8:	4688      	mov	r8, r1
 80133ca:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80133ce:	4631      	mov	r1, r6
 80133d0:	2242      	movs	r2, #66	; 0x42
 80133d2:	4648      	mov	r0, r9
 80133d4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80133d6:	960d      	str	r6, [sp, #52]	; 0x34
 80133d8:	f00d feb8 	bl	802114c <memset>
 80133dc:	b15f      	cbz	r7, 80133f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80133de:	f108 3aff 	add.w	sl, r8, #4294967295
 80133e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80133e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133e6:	b152      	cbz	r2, 80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80133e8:	8812      	ldrh	r2, [r2, #0]
 80133ea:	b10a      	cbz	r2, 80133f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80133ec:	459a      	cmp	sl, r3
 80133ee:	dc2e      	bgt.n	801344e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80133f0:	2200      	movs	r2, #0
 80133f2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80133f6:	4638      	mov	r0, r7
 80133f8:	b023      	add	sp, #140	; 0x8c
 80133fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133fe:	9a08      	ldr	r2, [sp, #32]
 8013400:	2a00      	cmp	r2, #0
 8013402:	d0f5      	beq.n	80133f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013404:	7812      	ldrb	r2, [r2, #0]
 8013406:	e7f0      	b.n	80133ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013408:	2d00      	cmp	r5, #0
 801340a:	d0ea      	beq.n	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801340c:	782a      	ldrb	r2, [r5, #0]
 801340e:	b142      	cbz	r2, 8013422 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013410:	2a25      	cmp	r2, #37	; 0x25
 8013412:	d001      	beq.n	8013418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013414:	459a      	cmp	sl, r3
 8013416:	dc08      	bgt.n	801342a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013418:	f1bb 0f00 	cmp.w	fp, #0
 801341c:	d121      	bne.n	8013462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801341e:	2d00      	cmp	r5, #0
 8013420:	d0df      	beq.n	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013422:	782a      	ldrb	r2, [r5, #0]
 8013424:	f04f 0b00 	mov.w	fp, #0
 8013428:	e01d      	b.n	8013466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801342a:	f1bb 0f00 	cmp.w	fp, #0
 801342e:	d078      	beq.n	8013522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013430:	f8bb 2000 	ldrh.w	r2, [fp]
 8013434:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013438:	f1bb 0f00 	cmp.w	fp, #0
 801343c:	d002      	beq.n	8013444 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801343e:	f10b 0202 	add.w	r2, fp, #2
 8013442:	9209      	str	r2, [sp, #36]	; 0x24
 8013444:	b10d      	cbz	r5, 801344a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013446:	3501      	adds	r5, #1
 8013448:	9508      	str	r5, [sp, #32]
 801344a:	3301      	adds	r3, #1
 801344c:	930d      	str	r3, [sp, #52]	; 0x34
 801344e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013452:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013454:	f1bb 0f00 	cmp.w	fp, #0
 8013458:	d0d6      	beq.n	8013408 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801345a:	f8bb 2000 	ldrh.w	r2, [fp]
 801345e:	2a00      	cmp	r2, #0
 8013460:	d1d6      	bne.n	8013410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013462:	f8bb 2000 	ldrh.w	r2, [fp]
 8013466:	2a00      	cmp	r2, #0
 8013468:	d0bb      	beq.n	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801346a:	459a      	cmp	sl, r3
 801346c:	ddb9      	ble.n	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801346e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013472:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013476:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801347a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801347e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013482:	960e      	str	r6, [sp, #56]	; 0x38
 8013484:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013488:	960f      	str	r6, [sp, #60]	; 0x3c
 801348a:	f1bb 0f00 	cmp.w	fp, #0
 801348e:	d002      	beq.n	8013496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013490:	f10b 0302 	add.w	r3, fp, #2
 8013494:	9309      	str	r3, [sp, #36]	; 0x24
 8013496:	b10d      	cbz	r5, 801349c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013498:	1c6b      	adds	r3, r5, #1
 801349a:	9308      	str	r3, [sp, #32]
 801349c:	ab0f      	add	r3, sp, #60	; 0x3c
 801349e:	9305      	str	r3, [sp, #20]
 80134a0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80134a4:	9304      	str	r3, [sp, #16]
 80134a6:	ab0e      	add	r3, sp, #56	; 0x38
 80134a8:	9303      	str	r3, [sp, #12]
 80134aa:	ab0c      	add	r3, sp, #48	; 0x30
 80134ac:	9302      	str	r3, [sp, #8]
 80134ae:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80134b2:	9301      	str	r3, [sp, #4]
 80134b4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80134b8:	9300      	str	r3, [sp, #0]
 80134ba:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80134be:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80134c2:	a908      	add	r1, sp, #32
 80134c4:	a809      	add	r0, sp, #36	; 0x24
 80134c6:	f7ff fea8 	bl	801321a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80134ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80134cc:	2b00      	cmp	r3, #0
 80134ce:	bfbe      	ittt	lt
 80134d0:	6823      	ldrlt	r3, [r4, #0]
 80134d2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80134d6:	930e      	strlt	r3, [sp, #56]	; 0x38
 80134d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80134da:	bfb8      	it	lt
 80134dc:	3404      	addlt	r4, #4
 80134de:	2b00      	cmp	r3, #0
 80134e0:	bfb8      	it	lt
 80134e2:	6823      	ldrlt	r3, [r4, #0]
 80134e4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80134e8:	bfbe      	ittt	lt
 80134ea:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80134ee:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80134f0:	3404      	addlt	r4, #4
 80134f2:	b1d9      	cbz	r1, 801352c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80134f4:	880b      	ldrh	r3, [r1, #0]
 80134f6:	2b69      	cmp	r3, #105	; 0x69
 80134f8:	d01f      	beq.n	801353a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80134fa:	d82f      	bhi.n	801355c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80134fc:	2b58      	cmp	r3, #88	; 0x58
 80134fe:	d01c      	beq.n	801353a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013500:	d818      	bhi.n	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013502:	2b25      	cmp	r3, #37	; 0x25
 8013504:	d034      	beq.n	8013570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013506:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801350a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801350c:	f1bb 0f00 	cmp.w	fp, #0
 8013510:	f000 80b8 	beq.w	8013684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013514:	f8bb 5000 	ldrh.w	r5, [fp]
 8013518:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801351c:	3301      	adds	r3, #1
 801351e:	930d      	str	r3, [sp, #52]	; 0x34
 8013520:	e029      	b.n	8013576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013522:	b10d      	cbz	r5, 8013528 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013524:	782a      	ldrb	r2, [r5, #0]
 8013526:	e785      	b.n	8013434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013528:	462a      	mov	r2, r5
 801352a:	e783      	b.n	8013434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801352c:	2a00      	cmp	r2, #0
 801352e:	d0ea      	beq.n	8013506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013530:	7813      	ldrb	r3, [r2, #0]
 8013532:	e7e0      	b.n	80134f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013534:	3b63      	subs	r3, #99	; 0x63
 8013536:	2b01      	cmp	r3, #1
 8013538:	d8e5      	bhi.n	8013506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801353a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801353e:	b329      	cbz	r1, 801358c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013540:	880b      	ldrh	r3, [r1, #0]
 8013542:	2b69      	cmp	r3, #105	; 0x69
 8013544:	d063      	beq.n	801360e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013546:	d825      	bhi.n	8013594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013548:	2b63      	cmp	r3, #99	; 0x63
 801354a:	d038      	beq.n	80135be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801354c:	2b64      	cmp	r3, #100	; 0x64
 801354e:	d05e      	beq.n	801360e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013550:	2b58      	cmp	r3, #88	; 0x58
 8013552:	d07b      	beq.n	801364c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013554:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013558:	4625      	mov	r5, r4
 801355a:	e036      	b.n	80135ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801355c:	2b73      	cmp	r3, #115	; 0x73
 801355e:	d0ec      	beq.n	801353a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013560:	d802      	bhi.n	8013568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013562:	2b6f      	cmp	r3, #111	; 0x6f
 8013564:	d1cf      	bne.n	8013506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013566:	e7e8      	b.n	801353a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013568:	2b75      	cmp	r3, #117	; 0x75
 801356a:	d0e6      	beq.n	801353a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801356c:	2b78      	cmp	r3, #120	; 0x78
 801356e:	e7f9      	b.n	8013564 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013570:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013572:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013578:	b10b      	cbz	r3, 801357e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801357a:	3302      	adds	r3, #2
 801357c:	9309      	str	r3, [sp, #36]	; 0x24
 801357e:	9b08      	ldr	r3, [sp, #32]
 8013580:	2b00      	cmp	r3, #0
 8013582:	f43f af2e 	beq.w	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013586:	3301      	adds	r3, #1
 8013588:	9308      	str	r3, [sp, #32]
 801358a:	e72a      	b.n	80133e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801358c:	2a00      	cmp	r2, #0
 801358e:	d0e1      	beq.n	8013554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013590:	7813      	ldrb	r3, [r2, #0]
 8013592:	e7d6      	b.n	8013542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013594:	2b73      	cmp	r3, #115	; 0x73
 8013596:	d036      	beq.n	8013606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013598:	d807      	bhi.n	80135aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801359a:	2b6f      	cmp	r3, #111	; 0x6f
 801359c:	d1da      	bne.n	8013554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801359e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135a0:	1d25      	adds	r5, r4, #4
 80135a2:	eba8 0202 	sub.w	r2, r8, r2
 80135a6:	2308      	movs	r3, #8
 80135a8:	e04a      	b.n	8013640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80135aa:	2b75      	cmp	r3, #117	; 0x75
 80135ac:	d043      	beq.n	8013636 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80135ae:	2b78      	cmp	r3, #120	; 0x78
 80135b0:	d1d0      	bne.n	8013554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80135b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80135b4:	1d25      	adds	r5, r4, #4
 80135b6:	eba8 0202 	sub.w	r2, r8, r2
 80135ba:	2310      	movs	r3, #16
 80135bc:	e040      	b.n	8013640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80135be:	7823      	ldrb	r3, [r4, #0]
 80135c0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80135c4:	1d25      	adds	r5, r4, #4
 80135c6:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80135ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135cc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80135d0:	2b00      	cmp	r3, #0
 80135d2:	d052      	beq.n	801367a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80135d4:	881a      	ldrh	r2, [r3, #0]
 80135d6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80135da:	a80d      	add	r0, sp, #52	; 0x34
 80135dc:	9005      	str	r0, [sp, #20]
 80135de:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80135e2:	9004      	str	r0, [sp, #16]
 80135e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80135e6:	9003      	str	r0, [sp, #12]
 80135e8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80135ec:	9002      	str	r0, [sp, #8]
 80135ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80135f0:	9001      	str	r0, [sp, #4]
 80135f2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80135f6:	9000      	str	r0, [sp, #0]
 80135f8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80135fc:	a810      	add	r0, sp, #64	; 0x40
 80135fe:	f7ff fd49 	bl	8013094 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013602:	462c      	mov	r4, r5
 8013604:	e7b7      	b.n	8013576 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013606:	6823      	ldr	r3, [r4, #0]
 8013608:	1d25      	adds	r5, r4, #4
 801360a:	9310      	str	r3, [sp, #64]	; 0x40
 801360c:	e7dd      	b.n	80135ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801360e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013610:	6820      	ldr	r0, [r4, #0]
 8013612:	eba8 0202 	sub.w	r2, r8, r2
 8013616:	230a      	movs	r3, #10
 8013618:	b292      	uxth	r2, r2
 801361a:	4649      	mov	r1, r9
 801361c:	f7ff fd08 	bl	8013030 <_ZN8touchgfx7Unicode4itoaElPtti>
 8013620:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013624:	2b2d      	cmp	r3, #45	; 0x2d
 8013626:	f104 0504 	add.w	r5, r4, #4
 801362a:	d1ce      	bne.n	80135ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801362c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013630:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013632:	3302      	adds	r3, #2
 8013634:	e7e9      	b.n	801360a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013636:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013638:	1d25      	adds	r5, r4, #4
 801363a:	eba8 0202 	sub.w	r2, r8, r2
 801363e:	230a      	movs	r3, #10
 8013640:	b292      	uxth	r2, r2
 8013642:	4649      	mov	r1, r9
 8013644:	6820      	ldr	r0, [r4, #0]
 8013646:	f7ff fcd5 	bl	8012ff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801364a:	e7be      	b.n	80135ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801364c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801364e:	6820      	ldr	r0, [r4, #0]
 8013650:	eba8 0202 	sub.w	r2, r8, r2
 8013654:	b292      	uxth	r2, r2
 8013656:	2310      	movs	r3, #16
 8013658:	4649      	mov	r1, r9
 801365a:	f7ff fccb 	bl	8012ff4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801365e:	1d25      	adds	r5, r4, #4
 8013660:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013664:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013668:	2b00      	cmp	r3, #0
 801366a:	d0ae      	beq.n	80135ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801366c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013670:	2919      	cmp	r1, #25
 8013672:	d8f7      	bhi.n	8013664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013674:	3b20      	subs	r3, #32
 8013676:	8013      	strh	r3, [r2, #0]
 8013678:	e7f4      	b.n	8013664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801367a:	9a08      	ldr	r2, [sp, #32]
 801367c:	2a00      	cmp	r2, #0
 801367e:	d0aa      	beq.n	80135d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013680:	7812      	ldrb	r2, [r2, #0]
 8013682:	e7a8      	b.n	80135d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013684:	2d00      	cmp	r5, #0
 8013686:	f43f af47 	beq.w	8013518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801368a:	782d      	ldrb	r5, [r5, #0]
 801368c:	e744      	b.n	8013518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801368e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801368e:	b507      	push	{r0, r1, r2, lr}
 8013690:	9300      	str	r3, [sp, #0]
 8013692:	4613      	mov	r3, r2
 8013694:	2200      	movs	r2, #0
 8013696:	f7ff fe90 	bl	80133ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801369a:	b003      	add	sp, #12
 801369c:	f85d fb04 	ldr.w	pc, [sp], #4

080136a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80136a0:	b40c      	push	{r2, r3}
 80136a2:	b507      	push	{r0, r1, r2, lr}
 80136a4:	ab04      	add	r3, sp, #16
 80136a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80136aa:	9301      	str	r3, [sp, #4]
 80136ac:	f7ff ffef 	bl	801368e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80136b0:	b003      	add	sp, #12
 80136b2:	f85d eb04 	ldr.w	lr, [sp], #4
 80136b6:	b002      	add	sp, #8
 80136b8:	4770      	bx	lr
	...

080136bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80136bc:	4b01      	ldr	r3, [pc, #4]	; (80136c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80136be:	6018      	str	r0, [r3, #0]
 80136c0:	4770      	bx	lr
 80136c2:	bf00      	nop
 80136c4:	2000eb90 	.word	0x2000eb90

080136c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80136c8:	4b06      	ldr	r3, [pc, #24]	; (80136e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80136ca:	881a      	ldrh	r2, [r3, #0]
 80136cc:	4282      	cmp	r2, r0
 80136ce:	d807      	bhi.n	80136e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80136d0:	4b05      	ldr	r3, [pc, #20]	; (80136e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80136d2:	881b      	ldrh	r3, [r3, #0]
 80136d4:	4413      	add	r3, r2
 80136d6:	4298      	cmp	r0, r3
 80136d8:	bfac      	ite	ge
 80136da:	2000      	movge	r0, #0
 80136dc:	2001      	movlt	r0, #1
 80136de:	4770      	bx	lr
 80136e0:	2000      	movs	r0, #0
 80136e2:	4770      	bx	lr
 80136e4:	2000ebb0 	.word	0x2000ebb0
 80136e8:	2000ebb4 	.word	0x2000ebb4

080136ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80136ec:	b508      	push	{r3, lr}
 80136ee:	4601      	mov	r1, r0
 80136f0:	f7ff ffea 	bl	80136c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80136f4:	b118      	cbz	r0, 80136fe <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80136f6:	4b02      	ldr	r3, [pc, #8]	; (8013700 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80136f8:	681b      	ldr	r3, [r3, #0]
 80136fa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80136fe:	bd08      	pop	{r3, pc}
 8013700:	2000eb94 	.word	0x2000eb94

08013704 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013708:	4d28      	ldr	r5, [pc, #160]	; (80137ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801370a:	682b      	ldr	r3, [r5, #0]
 801370c:	2b00      	cmp	r3, #0
 801370e:	d04a      	beq.n	80137a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8013710:	4a27      	ldr	r2, [pc, #156]	; (80137b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013712:	4e28      	ldr	r6, [pc, #160]	; (80137b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013714:	8810      	ldrh	r0, [r2, #0]
 8013716:	f8b6 8000 	ldrh.w	r8, [r6]
 801371a:	4c27      	ldr	r4, [pc, #156]	; (80137b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801371c:	4f27      	ldr	r7, [pc, #156]	; (80137bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801371e:	4440      	add	r0, r8
 8013720:	1c41      	adds	r1, r0, #1
 8013722:	f021 0101 	bic.w	r1, r1, #1
 8013726:	0409      	lsls	r1, r1, #16
 8013728:	0c09      	lsrs	r1, r1, #16
 801372a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801372e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8013732:	eb03 020e 	add.w	r2, r3, lr
 8013736:	eb0e 010c 	add.w	r1, lr, ip
 801373a:	6022      	str	r2, [r4, #0]
 801373c:	185a      	adds	r2, r3, r1
 801373e:	603a      	str	r2, [r7, #0]
 8013740:	220e      	movs	r2, #14
 8013742:	fb02 f208 	mul.w	r2, r2, r8
 8013746:	3203      	adds	r2, #3
 8013748:	f022 0203 	bic.w	r2, r2, #3
 801374c:	4411      	add	r1, r2
 801374e:	440b      	add	r3, r1
 8013750:	491b      	ldr	r1, [pc, #108]	; (80137c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8013752:	600b      	str	r3, [r1, #0]
 8013754:	491b      	ldr	r1, [pc, #108]	; (80137c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8013756:	2300      	movs	r3, #0
 8013758:	800b      	strh	r3, [r1, #0]
 801375a:	491b      	ldr	r1, [pc, #108]	; (80137c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 801375c:	6809      	ldr	r1, [r1, #0]
 801375e:	eba1 010e 	sub.w	r1, r1, lr
 8013762:	eba1 010c 	sub.w	r1, r1, ip
 8013766:	1a8a      	subs	r2, r1, r2
 8013768:	4918      	ldr	r1, [pc, #96]	; (80137cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 801376a:	600a      	str	r2, [r1, #0]
 801376c:	4a18      	ldr	r2, [pc, #96]	; (80137d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 801376e:	469c      	mov	ip, r3
 8013770:	8013      	strh	r3, [r2, #0]
 8013772:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013776:	4283      	cmp	r3, r0
 8013778:	d10d      	bne.n	8013796 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 801377a:	8835      	ldrh	r5, [r6, #0]
 801377c:	6838      	ldr	r0, [r7, #0]
 801377e:	2300      	movs	r3, #0
 8013780:	240e      	movs	r4, #14
 8013782:	429d      	cmp	r5, r3
 8013784:	d90f      	bls.n	80137a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8013786:	fb04 0203 	mla	r2, r4, r3, r0
 801378a:	3301      	adds	r3, #1
 801378c:	7b11      	ldrb	r1, [r2, #12]
 801378e:	f36f 1145 	bfc	r1, #5, #1
 8013792:	7311      	strb	r1, [r2, #12]
 8013794:	e7f5      	b.n	8013782 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8013796:	682a      	ldr	r2, [r5, #0]
 8013798:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801379c:	6822      	ldr	r2, [r4, #0]
 801379e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80137a2:	3301      	adds	r3, #1
 80137a4:	e7e7      	b.n	8013776 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 80137a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80137aa:	bf00      	nop
 80137ac:	2000eb94 	.word	0x2000eb94
 80137b0:	2000ebb0 	.word	0x2000ebb0
 80137b4:	2000ebb4 	.word	0x2000ebb4
 80137b8:	2000eba8 	.word	0x2000eba8
 80137bc:	2000eb98 	.word	0x2000eb98
 80137c0:	2000eba0 	.word	0x2000eba0
 80137c4:	2000ebb2 	.word	0x2000ebb2
 80137c8:	2000eb9c 	.word	0x2000eb9c
 80137cc:	2000ebac 	.word	0x2000ebac
 80137d0:	2000eba4 	.word	0x2000eba4

080137d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80137d4:	b510      	push	{r4, lr}
 80137d6:	4b10      	ldr	r3, [pc, #64]	; (8013818 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 80137d8:	681b      	ldr	r3, [r3, #0]
 80137da:	b9db      	cbnz	r3, 8013814 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 80137dc:	b1d1      	cbz	r1, 8013814 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 80137de:	4b0f      	ldr	r3, [pc, #60]	; (801381c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 80137e0:	801a      	strh	r2, [r3, #0]
 80137e2:	4b0f      	ldr	r3, [pc, #60]	; (8013820 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 80137e4:	881b      	ldrh	r3, [r3, #0]
 80137e6:	b292      	uxth	r2, r2
 80137e8:	240e      	movs	r4, #14
 80137ea:	4413      	add	r3, r2
 80137ec:	4362      	muls	r2, r4
 80137ee:	2406      	movs	r4, #6
 80137f0:	fb04 2203 	mla	r2, r4, r3, r2
 80137f4:	428a      	cmp	r2, r1
 80137f6:	d305      	bcc.n	8013804 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 80137f8:	4b0a      	ldr	r3, [pc, #40]	; (8013824 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 80137fa:	4a0b      	ldr	r2, [pc, #44]	; (8013828 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 80137fc:	480b      	ldr	r0, [pc, #44]	; (801382c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 80137fe:	2135      	movs	r1, #53	; 0x35
 8013800:	f00d fb1e 	bl	8020e40 <__assert_func>
 8013804:	4b0a      	ldr	r3, [pc, #40]	; (8013830 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8013806:	6019      	str	r1, [r3, #0]
 8013808:	4b0a      	ldr	r3, [pc, #40]	; (8013834 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801380a:	6018      	str	r0, [r3, #0]
 801380c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013810:	f7ff bf78 	b.w	8013704 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013814:	bd10      	pop	{r4, pc}
 8013816:	bf00      	nop
 8013818:	2000eba0 	.word	0x2000eba0
 801381c:	2000ebb4 	.word	0x2000ebb4
 8013820:	2000ebb0 	.word	0x2000ebb0
 8013824:	080250be 	.word	0x080250be
 8013828:	08025153 	.word	0x08025153
 801382c:	08025099 	.word	0x08025099
 8013830:	2000eb9c 	.word	0x2000eb9c
 8013834:	2000eb94 	.word	0x2000eb94

08013838 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013838:	b470      	push	{r4, r5, r6}
 801383a:	4c07      	ldr	r4, [pc, #28]	; (8013858 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801383c:	6826      	ldr	r6, [r4, #0]
 801383e:	4605      	mov	r5, r0
 8013840:	4610      	mov	r0, r2
 8013842:	9a03      	ldr	r2, [sp, #12]
 8013844:	b936      	cbnz	r6, 8013854 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013846:	6025      	str	r5, [r4, #0]
 8013848:	4c04      	ldr	r4, [pc, #16]	; (801385c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801384a:	8021      	strh	r1, [r4, #0]
 801384c:	bc70      	pop	{r4, r5, r6}
 801384e:	4619      	mov	r1, r3
 8013850:	f7ff bfc0 	b.w	80137d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013854:	bc70      	pop	{r4, r5, r6}
 8013856:	4770      	bx	lr
 8013858:	2000ebb8 	.word	0x2000ebb8
 801385c:	2000ebb0 	.word	0x2000ebb0

08013860 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013860:	b508      	push	{r3, lr}
 8013862:	4b14      	ldr	r3, [pc, #80]	; (80138b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013864:	6819      	ldr	r1, [r3, #0]
 8013866:	b931      	cbnz	r1, 8013876 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8013868:	4b13      	ldr	r3, [pc, #76]	; (80138b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801386a:	4a14      	ldr	r2, [pc, #80]	; (80138bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801386c:	4814      	ldr	r0, [pc, #80]	; (80138c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801386e:	f240 4186 	movw	r1, #1158	; 0x486
 8013872:	f00d fae5 	bl	8020e40 <__assert_func>
 8013876:	4a13      	ldr	r2, [pc, #76]	; (80138c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013878:	8803      	ldrh	r3, [r0, #0]
 801387a:	8812      	ldrh	r2, [r2, #0]
 801387c:	4293      	cmp	r3, r2
 801387e:	d204      	bcs.n	801388a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8013880:	2214      	movs	r2, #20
 8013882:	fb02 1303 	mla	r3, r2, r3, r1
 8013886:	8918      	ldrh	r0, [r3, #8]
 8013888:	bd08      	pop	{r3, pc}
 801388a:	490f      	ldr	r1, [pc, #60]	; (80138c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801388c:	8809      	ldrh	r1, [r1, #0]
 801388e:	4411      	add	r1, r2
 8013890:	428b      	cmp	r3, r1
 8013892:	da06      	bge.n	80138a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8013894:	1a9b      	subs	r3, r3, r2
 8013896:	4a0d      	ldr	r2, [pc, #52]	; (80138cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8013898:	6812      	ldr	r2, [r2, #0]
 801389a:	210e      	movs	r1, #14
 801389c:	fb01 2303 	mla	r3, r1, r3, r2
 80138a0:	e7f1      	b.n	8013886 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80138a2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80138a6:	4293      	cmp	r3, r2
 80138a8:	bf0a      	itet	eq
 80138aa:	4b09      	ldreq	r3, [pc, #36]	; (80138d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80138ac:	2000      	movne	r0, #0
 80138ae:	8818      	ldrheq	r0, [r3, #0]
 80138b0:	e7ea      	b.n	8013888 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 80138b2:	bf00      	nop
 80138b4:	2000ebb8 	.word	0x2000ebb8
 80138b8:	08025117 	.word	0x08025117
 80138bc:	08025200 	.word	0x08025200
 80138c0:	08025099 	.word	0x08025099
 80138c4:	2000ebb0 	.word	0x2000ebb0
 80138c8:	2000ebb4 	.word	0x2000ebb4
 80138cc:	2000eb98 	.word	0x2000eb98
 80138d0:	2000eb04 	.word	0x2000eb04

080138d4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80138d4:	b508      	push	{r3, lr}
 80138d6:	4b14      	ldr	r3, [pc, #80]	; (8013928 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80138d8:	6819      	ldr	r1, [r3, #0]
 80138da:	b931      	cbnz	r1, 80138ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 80138dc:	4b13      	ldr	r3, [pc, #76]	; (801392c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80138de:	4a14      	ldr	r2, [pc, #80]	; (8013930 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80138e0:	4814      	ldr	r0, [pc, #80]	; (8013934 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80138e2:	f240 419a 	movw	r1, #1178	; 0x49a
 80138e6:	f00d faab 	bl	8020e40 <__assert_func>
 80138ea:	4a13      	ldr	r2, [pc, #76]	; (8013938 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80138ec:	8803      	ldrh	r3, [r0, #0]
 80138ee:	8812      	ldrh	r2, [r2, #0]
 80138f0:	4293      	cmp	r3, r2
 80138f2:	d204      	bcs.n	80138fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 80138f4:	2214      	movs	r2, #20
 80138f6:	fb02 1303 	mla	r3, r2, r3, r1
 80138fa:	8958      	ldrh	r0, [r3, #10]
 80138fc:	bd08      	pop	{r3, pc}
 80138fe:	490f      	ldr	r1, [pc, #60]	; (801393c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8013900:	8809      	ldrh	r1, [r1, #0]
 8013902:	4411      	add	r1, r2
 8013904:	428b      	cmp	r3, r1
 8013906:	da06      	bge.n	8013916 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8013908:	1a9b      	subs	r3, r3, r2
 801390a:	4a0d      	ldr	r2, [pc, #52]	; (8013940 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801390c:	6812      	ldr	r2, [r2, #0]
 801390e:	210e      	movs	r1, #14
 8013910:	fb01 2303 	mla	r3, r1, r3, r2
 8013914:	e7f1      	b.n	80138fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8013916:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801391a:	4293      	cmp	r3, r2
 801391c:	bf0a      	itet	eq
 801391e:	4b09      	ldreq	r3, [pc, #36]	; (8013944 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8013920:	2000      	movne	r0, #0
 8013922:	8818      	ldrheq	r0, [r3, #0]
 8013924:	e7ea      	b.n	80138fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8013926:	bf00      	nop
 8013928:	2000ebb8 	.word	0x2000ebb8
 801392c:	08025117 	.word	0x08025117
 8013930:	0802522c 	.word	0x0802522c
 8013934:	08025099 	.word	0x08025099
 8013938:	2000ebb0 	.word	0x2000ebb0
 801393c:	2000ebb4 	.word	0x2000ebb4
 8013940:	2000eb98 	.word	0x2000eb98
 8013944:	2000eb06 	.word	0x2000eb06

08013948 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013948:	b510      	push	{r4, lr}
 801394a:	4b23      	ldr	r3, [pc, #140]	; (80139d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801394c:	681c      	ldr	r4, [r3, #0]
 801394e:	b934      	cbnz	r4, 801395e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8013950:	4b22      	ldr	r3, [pc, #136]	; (80139dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013952:	4a23      	ldr	r2, [pc, #140]	; (80139e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013954:	4823      	ldr	r0, [pc, #140]	; (80139e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8013956:	f240 41ae 	movw	r1, #1198	; 0x4ae
 801395a:	f00d fa71 	bl	8020e40 <__assert_func>
 801395e:	4a22      	ldr	r2, [pc, #136]	; (80139e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8013960:	880b      	ldrh	r3, [r1, #0]
 8013962:	8812      	ldrh	r2, [r2, #0]
 8013964:	4293      	cmp	r3, r2
 8013966:	d211      	bcs.n	801398c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8013968:	2214      	movs	r2, #20
 801396a:	fb02 4303 	mla	r3, r2, r3, r4
 801396e:	8a1a      	ldrh	r2, [r3, #16]
 8013970:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013974:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013978:	8a5b      	ldrh	r3, [r3, #18]
 801397a:	8004      	strh	r4, [r0, #0]
 801397c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013980:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013984:	8041      	strh	r1, [r0, #2]
 8013986:	8082      	strh	r2, [r0, #4]
 8013988:	80c3      	strh	r3, [r0, #6]
 801398a:	e00e      	b.n	80139aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801398c:	4917      	ldr	r1, [pc, #92]	; (80139ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801398e:	8809      	ldrh	r1, [r1, #0]
 8013990:	4411      	add	r1, r2
 8013992:	428b      	cmp	r3, r1
 8013994:	da0a      	bge.n	80139ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8013996:	1a9b      	subs	r3, r3, r2
 8013998:	4a15      	ldr	r2, [pc, #84]	; (80139f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801399a:	6812      	ldr	r2, [r2, #0]
 801399c:	210e      	movs	r1, #14
 801399e:	fb01 2303 	mla	r3, r1, r3, r2
 80139a2:	681a      	ldr	r2, [r3, #0]
 80139a4:	6002      	str	r2, [r0, #0]
 80139a6:	685a      	ldr	r2, [r3, #4]
 80139a8:	6042      	str	r2, [r0, #4]
 80139aa:	bd10      	pop	{r4, pc}
 80139ac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80139b0:	4293      	cmp	r3, r2
 80139b2:	d10b      	bne.n	80139cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 80139b4:	4b0f      	ldr	r3, [pc, #60]	; (80139f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 80139b6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80139ba:	4b0f      	ldr	r3, [pc, #60]	; (80139f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 80139bc:	8081      	strh	r1, [r0, #4]
 80139be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139c2:	80c2      	strh	r2, [r0, #6]
 80139c4:	2300      	movs	r3, #0
 80139c6:	8003      	strh	r3, [r0, #0]
 80139c8:	8043      	strh	r3, [r0, #2]
 80139ca:	e7ee      	b.n	80139aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80139cc:	2300      	movs	r3, #0
 80139ce:	8003      	strh	r3, [r0, #0]
 80139d0:	8043      	strh	r3, [r0, #2]
 80139d2:	8083      	strh	r3, [r0, #4]
 80139d4:	e7d8      	b.n	8013988 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 80139d6:	bf00      	nop
 80139d8:	2000ebb8 	.word	0x2000ebb8
 80139dc:	08025117 	.word	0x08025117
 80139e0:	08025199 	.word	0x08025199
 80139e4:	08025099 	.word	0x08025099
 80139e8:	2000ebb0 	.word	0x2000ebb0
 80139ec:	2000ebb4 	.word	0x2000ebb4
 80139f0:	2000eb98 	.word	0x2000eb98
 80139f4:	2000eb04 	.word	0x2000eb04
 80139f8:	2000eb06 	.word	0x2000eb06

080139fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80139fc:	4b18      	ldr	r3, [pc, #96]	; (8013a60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80139fe:	681b      	ldr	r3, [r3, #0]
 8013a00:	b34b      	cbz	r3, 8013a56 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8013a02:	4a18      	ldr	r2, [pc, #96]	; (8013a64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013a04:	8800      	ldrh	r0, [r0, #0]
 8013a06:	8812      	ldrh	r2, [r2, #0]
 8013a08:	4290      	cmp	r0, r2
 8013a0a:	d211      	bcs.n	8013a30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8013a0c:	2214      	movs	r2, #20
 8013a0e:	fb02 3300 	mla	r3, r2, r0, r3
 8013a12:	8a1a      	ldrh	r2, [r3, #16]
 8013a14:	8919      	ldrh	r1, [r3, #8]
 8013a16:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013a1a:	428a      	cmp	r2, r1
 8013a1c:	db1d      	blt.n	8013a5a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8013a1e:	8a58      	ldrh	r0, [r3, #18]
 8013a20:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013a24:	895b      	ldrh	r3, [r3, #10]
 8013a26:	4298      	cmp	r0, r3
 8013a28:	bfac      	ite	ge
 8013a2a:	2000      	movge	r0, #0
 8013a2c:	2001      	movlt	r0, #1
 8013a2e:	4770      	bx	lr
 8013a30:	4b0d      	ldr	r3, [pc, #52]	; (8013a68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013a32:	881b      	ldrh	r3, [r3, #0]
 8013a34:	4413      	add	r3, r2
 8013a36:	4298      	cmp	r0, r3
 8013a38:	da0d      	bge.n	8013a56 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8013a3a:	4b0c      	ldr	r3, [pc, #48]	; (8013a6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8013a3c:	681b      	ldr	r3, [r3, #0]
 8013a3e:	1a80      	subs	r0, r0, r2
 8013a40:	220e      	movs	r2, #14
 8013a42:	fb02 3300 	mla	r3, r2, r0, r3
 8013a46:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013a4a:	891a      	ldrh	r2, [r3, #8]
 8013a4c:	4291      	cmp	r1, r2
 8013a4e:	db04      	blt.n	8013a5a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8013a50:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013a54:	e7e6      	b.n	8013a24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8013a56:	2000      	movs	r0, #0
 8013a58:	4770      	bx	lr
 8013a5a:	2001      	movs	r0, #1
 8013a5c:	4770      	bx	lr
 8013a5e:	bf00      	nop
 8013a60:	2000ebb8 	.word	0x2000ebb8
 8013a64:	2000ebb0 	.word	0x2000ebb0
 8013a68:	2000ebb4 	.word	0x2000ebb4
 8013a6c:	2000eb98 	.word	0x2000eb98

08013a70 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013a70:	b508      	push	{r3, lr}
 8013a72:	4b12      	ldr	r3, [pc, #72]	; (8013abc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013a74:	6819      	ldr	r1, [r3, #0]
 8013a76:	b931      	cbnz	r1, 8013a86 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013a78:	4b11      	ldr	r3, [pc, #68]	; (8013ac0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013a7a:	4a12      	ldr	r2, [pc, #72]	; (8013ac4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013a7c:	4812      	ldr	r0, [pc, #72]	; (8013ac8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013a7e:	f240 41d2 	movw	r1, #1234	; 0x4d2
 8013a82:	f00d f9dd 	bl	8020e40 <__assert_func>
 8013a86:	8803      	ldrh	r3, [r0, #0]
 8013a88:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013a8c:	4293      	cmp	r3, r2
 8013a8e:	d012      	beq.n	8013ab6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013a90:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013a94:	4293      	cmp	r3, r2
 8013a96:	d103      	bne.n	8013aa0 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8013a98:	4b0c      	ldr	r3, [pc, #48]	; (8013acc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013a9a:	681b      	ldr	r3, [r3, #0]
 8013a9c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8013a9e:	bd08      	pop	{r3, pc}
 8013aa0:	4a0b      	ldr	r2, [pc, #44]	; (8013ad0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8013aa2:	6812      	ldr	r2, [r2, #0]
 8013aa4:	b11a      	cbz	r2, 8013aae <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8013aa6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013aaa:	2800      	cmp	r0, #0
 8013aac:	d1f7      	bne.n	8013a9e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013aae:	2214      	movs	r2, #20
 8013ab0:	4353      	muls	r3, r2
 8013ab2:	58c8      	ldr	r0, [r1, r3]
 8013ab4:	e7f3      	b.n	8013a9e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013ab6:	2000      	movs	r0, #0
 8013ab8:	e7f1      	b.n	8013a9e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013aba:	bf00      	nop
 8013abc:	2000ebb8 	.word	0x2000ebb8
 8013ac0:	08025117 	.word	0x08025117
 8013ac4:	080251cf 	.word	0x080251cf
 8013ac8:	08025099 	.word	0x08025099
 8013acc:	2000eb10 	.word	0x2000eb10
 8013ad0:	2000eb94 	.word	0x2000eb94

08013ad4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013ad4:	8802      	ldrh	r2, [r0, #0]
 8013ad6:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8013ada:	429a      	cmp	r2, r3
 8013adc:	d845      	bhi.n	8013b6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013ade:	4b24      	ldr	r3, [pc, #144]	; (8013b70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013ae0:	8818      	ldrh	r0, [r3, #0]
 8013ae2:	4282      	cmp	r2, r0
 8013ae4:	d221      	bcs.n	8013b2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8013ae6:	4b23      	ldr	r3, [pc, #140]	; (8013b74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013ae8:	6819      	ldr	r1, [r3, #0]
 8013aea:	2314      	movs	r3, #20
 8013aec:	fb03 1302 	mla	r3, r3, r2, r1
 8013af0:	6858      	ldr	r0, [r3, #4]
 8013af2:	2800      	cmp	r0, #0
 8013af4:	d03a      	beq.n	8013b6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013af6:	4920      	ldr	r1, [pc, #128]	; (8013b78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013af8:	6809      	ldr	r1, [r1, #0]
 8013afa:	2900      	cmp	r1, #0
 8013afc:	d036      	beq.n	8013b6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013afe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013b02:	2900      	cmp	r1, #0
 8013b04:	d032      	beq.n	8013b6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8013b06:	891a      	ldrh	r2, [r3, #8]
 8013b08:	8958      	ldrh	r0, [r3, #10]
 8013b0a:	4350      	muls	r0, r2
 8013b0c:	7c5a      	ldrb	r2, [r3, #17]
 8013b0e:	7cdb      	ldrb	r3, [r3, #19]
 8013b10:	0952      	lsrs	r2, r2, #5
 8013b12:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013b16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013b1a:	2b0b      	cmp	r3, #11
 8013b1c:	bf18      	it	ne
 8013b1e:	0040      	lslne	r0, r0, #1
 8013b20:	3003      	adds	r0, #3
 8013b22:	f020 0003 	bic.w	r0, r0, #3
 8013b26:	4408      	add	r0, r1
 8013b28:	4770      	bx	lr
 8013b2a:	4b14      	ldr	r3, [pc, #80]	; (8013b7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8013b2c:	881b      	ldrh	r3, [r3, #0]
 8013b2e:	4403      	add	r3, r0
 8013b30:	429a      	cmp	r2, r3
 8013b32:	da1a      	bge.n	8013b6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013b34:	4b12      	ldr	r3, [pc, #72]	; (8013b80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8013b36:	681b      	ldr	r3, [r3, #0]
 8013b38:	1a10      	subs	r0, r2, r0
 8013b3a:	210e      	movs	r1, #14
 8013b3c:	fb01 3000 	mla	r0, r1, r0, r3
 8013b40:	7b03      	ldrb	r3, [r0, #12]
 8013b42:	f003 031f 	and.w	r3, r3, #31
 8013b46:	2b0b      	cmp	r3, #11
 8013b48:	d10b      	bne.n	8013b62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013b4a:	8903      	ldrh	r3, [r0, #8]
 8013b4c:	8940      	ldrh	r0, [r0, #10]
 8013b4e:	4358      	muls	r0, r3
 8013b50:	4b09      	ldr	r3, [pc, #36]	; (8013b78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013b52:	6819      	ldr	r1, [r3, #0]
 8013b54:	3003      	adds	r0, #3
 8013b56:	f020 0303 	bic.w	r3, r0, #3
 8013b5a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013b5e:	4418      	add	r0, r3
 8013b60:	4770      	bx	lr
 8013b62:	2b0d      	cmp	r3, #13
 8013b64:	d101      	bne.n	8013b6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013b66:	300d      	adds	r0, #13
 8013b68:	4770      	bx	lr
 8013b6a:	2000      	movs	r0, #0
 8013b6c:	4770      	bx	lr
 8013b6e:	bf00      	nop
 8013b70:	2000ebb0 	.word	0x2000ebb0
 8013b74:	2000ebb8 	.word	0x2000ebb8
 8013b78:	2000eb94 	.word	0x2000eb94
 8013b7c:	2000ebb4 	.word	0x2000ebb4
 8013b80:	2000eb98 	.word	0x2000eb98

08013b84 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013b84:	b510      	push	{r4, lr}
 8013b86:	4b17      	ldr	r3, [pc, #92]	; (8013be4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8013b88:	6819      	ldr	r1, [r3, #0]
 8013b8a:	8803      	ldrh	r3, [r0, #0]
 8013b8c:	b1e9      	cbz	r1, 8013bca <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8013b8e:	4a16      	ldr	r2, [pc, #88]	; (8013be8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8013b90:	8812      	ldrh	r2, [r2, #0]
 8013b92:	429a      	cmp	r2, r3
 8013b94:	d90a      	bls.n	8013bac <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8013b96:	2214      	movs	r2, #20
 8013b98:	fb02 1303 	mla	r3, r2, r3, r1
 8013b9c:	7c58      	ldrb	r0, [r3, #17]
 8013b9e:	0942      	lsrs	r2, r0, #5
 8013ba0:	7cd8      	ldrb	r0, [r3, #19]
 8013ba2:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013ba6:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013baa:	bd10      	pop	{r4, pc}
 8013bac:	490f      	ldr	r1, [pc, #60]	; (8013bec <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013bae:	8809      	ldrh	r1, [r1, #0]
 8013bb0:	4411      	add	r1, r2
 8013bb2:	428b      	cmp	r3, r1
 8013bb4:	da09      	bge.n	8013bca <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8013bb6:	1a9b      	subs	r3, r3, r2
 8013bb8:	4a0d      	ldr	r2, [pc, #52]	; (8013bf0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8013bba:	6812      	ldr	r2, [r2, #0]
 8013bbc:	210e      	movs	r1, #14
 8013bbe:	fb01 2303 	mla	r3, r1, r3, r2
 8013bc2:	7b18      	ldrb	r0, [r3, #12]
 8013bc4:	f000 001f 	and.w	r0, r0, #31
 8013bc8:	e7ef      	b.n	8013baa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013bca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013bce:	4293      	cmp	r3, r2
 8013bd0:	d106      	bne.n	8013be0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8013bd2:	f7f8 fde5 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 8013bd6:	6803      	ldr	r3, [r0, #0]
 8013bd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013bdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013bde:	4718      	bx	r3
 8013be0:	2000      	movs	r0, #0
 8013be2:	e7e2      	b.n	8013baa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013be4:	2000ebb8 	.word	0x2000ebb8
 8013be8:	2000ebb0 	.word	0x2000ebb0
 8013bec:	2000ebb4 	.word	0x2000ebb4
 8013bf0:	2000eb98 	.word	0x2000eb98

08013bf4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013bf4:	2010      	movs	r0, #16
 8013bf6:	4770      	bx	lr

08013bf8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013bf8:	2000      	movs	r0, #0
 8013bfa:	4770      	bx	lr

08013bfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013bfc:	2bff      	cmp	r3, #255	; 0xff
 8013bfe:	d050      	beq.n	8013ca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013c00:	2a0b      	cmp	r2, #11
 8013c02:	d04a      	beq.n	8013c9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013c04:	d80e      	bhi.n	8013c24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013c06:	2a03      	cmp	r2, #3
 8013c08:	d03f      	beq.n	8013c8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013c0a:	d804      	bhi.n	8013c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013c0c:	2a01      	cmp	r2, #1
 8013c0e:	d03e      	beq.n	8013c8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8013c10:	d93f      	bls.n	8013c92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8013c12:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8013c14:	4770      	bx	lr
 8013c16:	2a09      	cmp	r2, #9
 8013c18:	d03f      	beq.n	8013c9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013c1a:	d83c      	bhi.n	8013c96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013c1c:	2a08      	cmp	r2, #8
 8013c1e:	d03a      	beq.n	8013c96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013c20:	2000      	movs	r0, #0
 8013c22:	4770      	bx	lr
 8013c24:	2a2f      	cmp	r2, #47	; 0x2f
 8013c26:	d024      	beq.n	8013c72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013c28:	d80d      	bhi.n	8013c46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013c2a:	2a2d      	cmp	r2, #45	; 0x2d
 8013c2c:	d014      	beq.n	8013c58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013c2e:	d826      	bhi.n	8013c7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013c30:	2a2c      	cmp	r2, #44	; 0x2c
 8013c32:	d1f5      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c34:	684b      	ldr	r3, [r1, #4]
 8013c36:	781b      	ldrb	r3, [r3, #0]
 8013c38:	2b01      	cmp	r3, #1
 8013c3a:	d018      	beq.n	8013c6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013c3c:	d323      	bcc.n	8013c86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013c3e:	2b02      	cmp	r3, #2
 8013c40:	d1ee      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c42:	6880      	ldr	r0, [r0, #8]
 8013c44:	4770      	bx	lr
 8013c46:	2a31      	cmp	r2, #49	; 0x31
 8013c48:	d004      	beq.n	8013c54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013c4a:	d328      	bcc.n	8013c9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013c4c:	2a32      	cmp	r2, #50	; 0x32
 8013c4e:	d026      	beq.n	8013c9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013c50:	2a33      	cmp	r2, #51	; 0x33
 8013c52:	d1e5      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c54:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8013c56:	4770      	bx	lr
 8013c58:	684b      	ldr	r3, [r1, #4]
 8013c5a:	781b      	ldrb	r3, [r3, #0]
 8013c5c:	2b01      	cmp	r3, #1
 8013c5e:	d004      	beq.n	8013c6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013c60:	d30b      	bcc.n	8013c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013c62:	2b02      	cmp	r3, #2
 8013c64:	d1dc      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c66:	6900      	ldr	r0, [r0, #16]
 8013c68:	4770      	bx	lr
 8013c6a:	6a00      	ldr	r0, [r0, #32]
 8013c6c:	4770      	bx	lr
 8013c6e:	6980      	ldr	r0, [r0, #24]
 8013c70:	4770      	bx	lr
 8013c72:	684b      	ldr	r3, [r1, #4]
 8013c74:	781b      	ldrb	r3, [r3, #0]
 8013c76:	2b00      	cmp	r3, #0
 8013c78:	d1d2      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c7a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013c7c:	4770      	bx	lr
 8013c7e:	684b      	ldr	r3, [r1, #4]
 8013c80:	781b      	ldrb	r3, [r3, #0]
 8013c82:	2b00      	cmp	r3, #0
 8013c84:	d1cc      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013c86:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013c88:	4770      	bx	lr
 8013c8a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013c8c:	4770      	bx	lr
 8013c8e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013c90:	4770      	bx	lr
 8013c92:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8013c94:	4770      	bx	lr
 8013c96:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013c98:	4770      	bx	lr
 8013c9a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8013c9c:	4770      	bx	lr
 8013c9e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013ca0:	4770      	bx	lr
 8013ca2:	2a0b      	cmp	r2, #11
 8013ca4:	d049      	beq.n	8013d3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013ca6:	d80e      	bhi.n	8013cc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013ca8:	2a03      	cmp	r2, #3
 8013caa:	d040      	beq.n	8013d2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013cac:	d804      	bhi.n	8013cb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013cae:	2a01      	cmp	r2, #1
 8013cb0:	d03f      	beq.n	8013d32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8013cb2:	d940      	bls.n	8013d36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8013cb4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8013cb6:	4770      	bx	lr
 8013cb8:	2a09      	cmp	r2, #9
 8013cba:	d03e      	beq.n	8013d3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8013cbc:	d801      	bhi.n	8013cc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8013cbe:	2a08      	cmp	r2, #8
 8013cc0:	d1ae      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cc2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8013cc4:	4770      	bx	lr
 8013cc6:	2a2f      	cmp	r2, #47	; 0x2f
 8013cc8:	d024      	beq.n	8013d14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8013cca:	d80d      	bhi.n	8013ce8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8013ccc:	2a2d      	cmp	r2, #45	; 0x2d
 8013cce:	d014      	beq.n	8013cfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8013cd0:	d826      	bhi.n	8013d20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8013cd2:	2a2c      	cmp	r2, #44	; 0x2c
 8013cd4:	d1a4      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cd6:	684b      	ldr	r3, [r1, #4]
 8013cd8:	781b      	ldrb	r3, [r3, #0]
 8013cda:	2b01      	cmp	r3, #1
 8013cdc:	d018      	beq.n	8013d10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8013cde:	d324      	bcc.n	8013d2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8013ce0:	2b02      	cmp	r3, #2
 8013ce2:	d19d      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ce4:	68c0      	ldr	r0, [r0, #12]
 8013ce6:	4770      	bx	lr
 8013ce8:	2a31      	cmp	r2, #49	; 0x31
 8013cea:	d004      	beq.n	8013cf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8013cec:	d327      	bcc.n	8013d3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013cee:	2a32      	cmp	r2, #50	; 0x32
 8013cf0:	d025      	beq.n	8013d3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8013cf2:	2a33      	cmp	r2, #51	; 0x33
 8013cf4:	d194      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013cf6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013cf8:	4770      	bx	lr
 8013cfa:	684b      	ldr	r3, [r1, #4]
 8013cfc:	781b      	ldrb	r3, [r3, #0]
 8013cfe:	2b01      	cmp	r3, #1
 8013d00:	d004      	beq.n	8013d0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8013d02:	d30b      	bcc.n	8013d1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8013d04:	2b02      	cmp	r3, #2
 8013d06:	d18b      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d08:	6940      	ldr	r0, [r0, #20]
 8013d0a:	4770      	bx	lr
 8013d0c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8013d0e:	4770      	bx	lr
 8013d10:	69c0      	ldr	r0, [r0, #28]
 8013d12:	4770      	bx	lr
 8013d14:	684b      	ldr	r3, [r1, #4]
 8013d16:	781b      	ldrb	r3, [r3, #0]
 8013d18:	2b00      	cmp	r3, #0
 8013d1a:	d181      	bne.n	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d1c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013d1e:	4770      	bx	lr
 8013d20:	684b      	ldr	r3, [r1, #4]
 8013d22:	781b      	ldrb	r3, [r3, #0]
 8013d24:	2b00      	cmp	r3, #0
 8013d26:	f47f af7b 	bne.w	8013c20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013d2a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013d2c:	4770      	bx	lr
 8013d2e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013d30:	4770      	bx	lr
 8013d32:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013d34:	4770      	bx	lr
 8013d36:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013d38:	4770      	bx	lr
 8013d3a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013d3c:	4770      	bx	lr
 8013d3e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013d40:	4770      	bx	lr

08013d42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013d42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d46:	b087      	sub	sp, #28
 8013d48:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013d4a:	9205      	str	r2, [sp, #20]
 8013d4c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013d50:	9202      	str	r2, [sp, #8]
 8013d52:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013d56:	9101      	str	r1, [sp, #4]
 8013d58:	6841      	ldr	r1, [r0, #4]
 8013d5a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013d5e:	fb01 2404 	mla	r4, r1, r4, r2
 8013d62:	6802      	ldr	r2, [r0, #0]
 8013d64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013d68:	f8de 2000 	ldr.w	r2, [lr]
 8013d6c:	9203      	str	r2, [sp, #12]
 8013d6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013d72:	3204      	adds	r2, #4
 8013d74:	9204      	str	r2, [sp, #16]
 8013d76:	9a02      	ldr	r2, [sp, #8]
 8013d78:	43d6      	mvns	r6, r2
 8013d7a:	b2f6      	uxtb	r6, r6
 8013d7c:	9a01      	ldr	r2, [sp, #4]
 8013d7e:	2a00      	cmp	r2, #0
 8013d80:	dc03      	bgt.n	8013d8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013d82:	9a05      	ldr	r2, [sp, #20]
 8013d84:	2a00      	cmp	r2, #0
 8013d86:	f340 8129 	ble.w	8013fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013d8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013d8c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013d90:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013d94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013d98:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013d9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013d9e:	2b00      	cmp	r3, #0
 8013da0:	dd0e      	ble.n	8013dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013da2:	1408      	asrs	r0, r1, #16
 8013da4:	d405      	bmi.n	8013db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013da6:	4560      	cmp	r0, ip
 8013da8:	da03      	bge.n	8013db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013daa:	1410      	asrs	r0, r2, #16
 8013dac:	d401      	bmi.n	8013db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013dae:	42b8      	cmp	r0, r7
 8013db0:	db07      	blt.n	8013dc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013db2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013db4:	4401      	add	r1, r0
 8013db6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013db8:	3b01      	subs	r3, #1
 8013dba:	4402      	add	r2, r0
 8013dbc:	3402      	adds	r4, #2
 8013dbe:	e7ee      	b.n	8013d9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013dc0:	d071      	beq.n	8013ea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013dc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013dc4:	1e58      	subs	r0, r3, #1
 8013dc6:	fb05 1500 	mla	r5, r5, r0, r1
 8013dca:	142d      	asrs	r5, r5, #16
 8013dcc:	d45f      	bmi.n	8013e8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013dce:	4565      	cmp	r5, ip
 8013dd0:	da5d      	bge.n	8013e8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013dd2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013dd4:	fb05 2000 	mla	r0, r5, r0, r2
 8013dd8:	1400      	asrs	r0, r0, #16
 8013dda:	d458      	bmi.n	8013e8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013ddc:	42b8      	cmp	r0, r7
 8013dde:	da56      	bge.n	8013e8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013de0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013de4:	4699      	mov	r9, r3
 8013de6:	46a2      	mov	sl, r4
 8013de8:	f1b9 0f00 	cmp.w	r9, #0
 8013dec:	dd57      	ble.n	8013e9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013dee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013df2:	9803      	ldr	r0, [sp, #12]
 8013df4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013df8:	140d      	asrs	r5, r1, #16
 8013dfa:	fb07 000c 	mla	r0, r7, ip, r0
 8013dfe:	f109 39ff 	add.w	r9, r9, #4294967295
 8013e02:	5d40      	ldrb	r0, [r0, r5]
 8013e04:	9d04      	ldr	r5, [sp, #16]
 8013e06:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013e0a:	f8ba 5000 	ldrh.w	r5, [sl]
 8013e0e:	122f      	asrs	r7, r5, #8
 8013e10:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013e14:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e18:	fb17 f706 	smulbb	r7, r7, r6
 8013e1c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013e20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013e24:	00ed      	lsls	r5, r5, #3
 8013e26:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013e2a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013e2e:	10c7      	asrs	r7, r0, #3
 8013e30:	b2ed      	uxtb	r5, r5
 8013e32:	00c0      	lsls	r0, r0, #3
 8013e34:	fb18 f806 	smulbb	r8, r8, r6
 8013e38:	fb15 f506 	smulbb	r5, r5, r6
 8013e3c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013e40:	b2c0      	uxtb	r0, r0
 8013e42:	fa1f fc8c 	uxth.w	ip, ip
 8013e46:	fb07 870b 	mla	r7, r7, fp, r8
 8013e4a:	fb00 500b 	mla	r0, r0, fp, r5
 8013e4e:	b280      	uxth	r0, r0
 8013e50:	b2bf      	uxth	r7, r7
 8013e52:	f10c 0501 	add.w	r5, ip, #1
 8013e56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013e5a:	f107 0801 	add.w	r8, r7, #1
 8013e5e:	1c45      	adds	r5, r0, #1
 8013e60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013e64:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013e68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013e6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013e6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013e72:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013e76:	ea45 0c0c 	orr.w	ip, r5, ip
 8013e7a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013e7e:	4401      	add	r1, r0
 8013e80:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013e82:	ea4c 0c08 	orr.w	ip, ip, r8
 8013e86:	f82a cb02 	strh.w	ip, [sl], #2
 8013e8a:	4402      	add	r2, r0
 8013e8c:	e7ac      	b.n	8013de8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013e8e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013e92:	f04f 0800 	mov.w	r8, #0
 8013e96:	eb03 0008 	add.w	r0, r3, r8
 8013e9a:	2800      	cmp	r0, #0
 8013e9c:	dc41      	bgt.n	8013f22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013e9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ea2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013ea6:	9b01      	ldr	r3, [sp, #4]
 8013ea8:	2b00      	cmp	r3, #0
 8013eaa:	f340 8097 	ble.w	8013fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013eae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013eb2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013eb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013eba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ebc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ec8:	eef0 6a62 	vmov.f32	s13, s5
 8013ecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ed0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ed8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ee0:	eef0 6a43 	vmov.f32	s13, s6
 8013ee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ee8:	ee12 2a90 	vmov	r2, s5
 8013eec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ef0:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ef4:	ee13 2a10 	vmov	r2, s6
 8013ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8013efa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013efc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f00:	9314      	str	r3, [sp, #80]	; 0x50
 8013f02:	9b01      	ldr	r3, [sp, #4]
 8013f04:	9a05      	ldr	r2, [sp, #20]
 8013f06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f0a:	3b01      	subs	r3, #1
 8013f0c:	9301      	str	r3, [sp, #4]
 8013f0e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013f12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f14:	eeb0 3a67 	vmov.f32	s6, s15
 8013f18:	bf08      	it	eq
 8013f1a:	4613      	moveq	r3, r2
 8013f1c:	eef0 2a47 	vmov.f32	s5, s14
 8013f20:	e72c      	b.n	8013d7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013f22:	140f      	asrs	r7, r1, #16
 8013f24:	d453      	bmi.n	8013fce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f26:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013f2a:	42bd      	cmp	r5, r7
 8013f2c:	dd4f      	ble.n	8013fce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013f32:	d44c      	bmi.n	8013fce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f34:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013f38:	4560      	cmp	r0, ip
 8013f3a:	dd48      	ble.n	8013fce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013f3c:	9803      	ldr	r0, [sp, #12]
 8013f3e:	b22d      	sxth	r5, r5
 8013f40:	fb0c 0505 	mla	r5, ip, r5, r0
 8013f44:	5de8      	ldrb	r0, [r5, r7]
 8013f46:	9d04      	ldr	r5, [sp, #16]
 8013f48:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013f4c:	f06f 0501 	mvn.w	r5, #1
 8013f50:	fb05 fb08 	mul.w	fp, r5, r8
 8013f54:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013f58:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013f5c:	122f      	asrs	r7, r5, #8
 8013f5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013f62:	fb17 f706 	smulbb	r7, r7, r6
 8013f66:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013f6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013f6e:	00ed      	lsls	r5, r5, #3
 8013f70:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013f74:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013f78:	10c7      	asrs	r7, r0, #3
 8013f7a:	b2ed      	uxtb	r5, r5
 8013f7c:	00c0      	lsls	r0, r0, #3
 8013f7e:	fb19 f906 	smulbb	r9, r9, r6
 8013f82:	fb15 f506 	smulbb	r5, r5, r6
 8013f86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013f8a:	b2c0      	uxtb	r0, r0
 8013f8c:	fa1f fc8c 	uxth.w	ip, ip
 8013f90:	fb07 970a 	mla	r7, r7, sl, r9
 8013f94:	fb00 500a 	mla	r0, r0, sl, r5
 8013f98:	b2bf      	uxth	r7, r7
 8013f9a:	b280      	uxth	r0, r0
 8013f9c:	f10c 0501 	add.w	r5, ip, #1
 8013fa0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013fa4:	f107 0901 	add.w	r9, r7, #1
 8013fa8:	1c45      	adds	r5, r0, #1
 8013faa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013fae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013fb2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013fb6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013fba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013fbe:	ea45 0c0c 	orr.w	ip, r5, ip
 8013fc2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013fc6:	ea4c 0c09 	orr.w	ip, ip, r9
 8013fca:	f824 c00b 	strh.w	ip, [r4, fp]
 8013fce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013fd0:	4401      	add	r1, r0
 8013fd2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013fd4:	f108 38ff 	add.w	r8, r8, #4294967295
 8013fd8:	4402      	add	r2, r0
 8013fda:	e75c      	b.n	8013e96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013fdc:	b007      	add	sp, #28
 8013fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013fe2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fe6:	b085      	sub	sp, #20
 8013fe8:	4693      	mov	fp, r2
 8013fea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013fec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013fee:	6870      	ldr	r0, [r6, #4]
 8013ff0:	9100      	str	r1, [sp, #0]
 8013ff2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ff6:	fb00 2404 	mla	r4, r0, r4, r2
 8013ffa:	6832      	ldr	r2, [r6, #0]
 8013ffc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014000:	682a      	ldr	r2, [r5, #0]
 8014002:	9201      	str	r2, [sp, #4]
 8014004:	686a      	ldr	r2, [r5, #4]
 8014006:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801400a:	3204      	adds	r2, #4
 801400c:	9202      	str	r2, [sp, #8]
 801400e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014012:	9a00      	ldr	r2, [sp, #0]
 8014014:	2a00      	cmp	r2, #0
 8014016:	dc03      	bgt.n	8014020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014018:	f1bb 0f00 	cmp.w	fp, #0
 801401c:	f340 80a0 	ble.w	8014160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014020:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014022:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014026:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801402a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801402e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014030:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014034:	2b00      	cmp	r3, #0
 8014036:	dd0c      	ble.n	8014052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014038:	1406      	asrs	r6, r0, #16
 801403a:	d405      	bmi.n	8014048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801403c:	454e      	cmp	r6, r9
 801403e:	da03      	bge.n	8014048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014040:	1416      	asrs	r6, r2, #16
 8014042:	d401      	bmi.n	8014048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014044:	4546      	cmp	r6, r8
 8014046:	db05      	blt.n	8014054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014048:	4470      	add	r0, lr
 801404a:	4462      	add	r2, ip
 801404c:	3b01      	subs	r3, #1
 801404e:	3402      	adds	r4, #2
 8014050:	e7f0      	b.n	8014034 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014052:	d00f      	beq.n	8014074 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014054:	1e5e      	subs	r6, r3, #1
 8014056:	fb0e 0706 	mla	r7, lr, r6, r0
 801405a:	143f      	asrs	r7, r7, #16
 801405c:	d541      	bpl.n	80140e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801405e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014062:	4698      	mov	r8, r3
 8014064:	9603      	str	r6, [sp, #12]
 8014066:	f1b8 0f00 	cmp.w	r8, #0
 801406a:	dc59      	bgt.n	8014120 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801406c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014070:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014074:	9b00      	ldr	r3, [sp, #0]
 8014076:	2b00      	cmp	r3, #0
 8014078:	dd72      	ble.n	8014160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801407a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801407e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014082:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014088:	ee31 1a05 	vadd.f32	s2, s2, s10
 801408c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014090:	eeb0 6a62 	vmov.f32	s12, s5
 8014094:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014098:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801409c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80140a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80140a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80140a8:	eeb0 6a43 	vmov.f32	s12, s6
 80140ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80140b0:	ee12 2a90 	vmov	r2, s5
 80140b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80140b8:	fb92 fef3 	sdiv	lr, r2, r3
 80140bc:	ee13 2a10 	vmov	r2, s6
 80140c0:	fb92 fcf3 	sdiv	ip, r2, r3
 80140c4:	9b00      	ldr	r3, [sp, #0]
 80140c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140ca:	3b01      	subs	r3, #1
 80140cc:	9300      	str	r3, [sp, #0]
 80140ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80140d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140d4:	eeb0 3a67 	vmov.f32	s6, s15
 80140d8:	bf08      	it	eq
 80140da:	465b      	moveq	r3, fp
 80140dc:	eef0 2a47 	vmov.f32	s5, s14
 80140e0:	e797      	b.n	8014012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80140e2:	454f      	cmp	r7, r9
 80140e4:	dabb      	bge.n	801405e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80140e6:	fb0c 2606 	mla	r6, ip, r6, r2
 80140ea:	1436      	asrs	r6, r6, #16
 80140ec:	d4b7      	bmi.n	801405e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80140ee:	4546      	cmp	r6, r8
 80140f0:	dab5      	bge.n	801405e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80140f2:	461e      	mov	r6, r3
 80140f4:	46a0      	mov	r8, r4
 80140f6:	2e00      	cmp	r6, #0
 80140f8:	ddb8      	ble.n	801406c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80140fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80140fe:	9901      	ldr	r1, [sp, #4]
 8014100:	1417      	asrs	r7, r2, #16
 8014102:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014106:	fb0a 1707 	mla	r7, sl, r7, r1
 801410a:	9902      	ldr	r1, [sp, #8]
 801410c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014110:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014114:	f828 7b02 	strh.w	r7, [r8], #2
 8014118:	4470      	add	r0, lr
 801411a:	4462      	add	r2, ip
 801411c:	3e01      	subs	r6, #1
 801411e:	e7ea      	b.n	80140f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014120:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014124:	d417      	bmi.n	8014156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014126:	68ae      	ldr	r6, [r5, #8]
 8014128:	454e      	cmp	r6, r9
 801412a:	dd14      	ble.n	8014156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801412c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014130:	d411      	bmi.n	8014156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014132:	68ef      	ldr	r7, [r5, #12]
 8014134:	4557      	cmp	r7, sl
 8014136:	dd0e      	ble.n	8014156 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014138:	9f01      	ldr	r7, [sp, #4]
 801413a:	b236      	sxth	r6, r6
 801413c:	fb0a 7606 	mla	r6, sl, r6, r7
 8014140:	9f02      	ldr	r7, [sp, #8]
 8014142:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014146:	f06f 0101 	mvn.w	r1, #1
 801414a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801414e:	fb01 f608 	mul.w	r6, r1, r8
 8014152:	9903      	ldr	r1, [sp, #12]
 8014154:	538f      	strh	r7, [r1, r6]
 8014156:	4470      	add	r0, lr
 8014158:	4462      	add	r2, ip
 801415a:	f108 38ff 	add.w	r8, r8, #4294967295
 801415e:	e782      	b.n	8014066 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014160:	b005      	add	sp, #20
 8014162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014166:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801416a:	b087      	sub	sp, #28
 801416c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801416e:	9205      	str	r2, [sp, #20]
 8014170:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014174:	9203      	str	r2, [sp, #12]
 8014176:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801417a:	9102      	str	r1, [sp, #8]
 801417c:	6861      	ldr	r1, [r4, #4]
 801417e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014182:	fb01 2000 	mla	r0, r1, r0, r2
 8014186:	6822      	ldr	r2, [r4, #0]
 8014188:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801418c:	9200      	str	r2, [sp, #0]
 801418e:	f8dc 2000 	ldr.w	r2, [ip]
 8014192:	9204      	str	r2, [sp, #16]
 8014194:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014198:	3204      	adds	r2, #4
 801419a:	9201      	str	r2, [sp, #4]
 801419c:	9a03      	ldr	r2, [sp, #12]
 801419e:	43d5      	mvns	r5, r2
 80141a0:	b2ed      	uxtb	r5, r5
 80141a2:	9a02      	ldr	r2, [sp, #8]
 80141a4:	2a00      	cmp	r2, #0
 80141a6:	dc03      	bgt.n	80141b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80141a8:	9a05      	ldr	r2, [sp, #20]
 80141aa:	2a00      	cmp	r2, #0
 80141ac:	f340 812c 	ble.w	8014408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80141b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80141b2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80141b6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80141ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80141be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80141c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80141c4:	2b00      	cmp	r3, #0
 80141c6:	dd10      	ble.n	80141ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80141c8:	140c      	asrs	r4, r1, #16
 80141ca:	d405      	bmi.n	80141d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80141cc:	4574      	cmp	r4, lr
 80141ce:	da03      	bge.n	80141d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80141d0:	1414      	asrs	r4, r2, #16
 80141d2:	d401      	bmi.n	80141d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80141d4:	42bc      	cmp	r4, r7
 80141d6:	db09      	blt.n	80141ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80141d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80141da:	9800      	ldr	r0, [sp, #0]
 80141dc:	4421      	add	r1, r4
 80141de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80141e0:	3002      	adds	r0, #2
 80141e2:	4422      	add	r2, r4
 80141e4:	3b01      	subs	r3, #1
 80141e6:	9000      	str	r0, [sp, #0]
 80141e8:	e7ec      	b.n	80141c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80141ea:	d071      	beq.n	80142d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80141ec:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80141ee:	1e5c      	subs	r4, r3, #1
 80141f0:	fb06 1604 	mla	r6, r6, r4, r1
 80141f4:	1436      	asrs	r6, r6, #16
 80141f6:	d45d      	bmi.n	80142b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80141f8:	4576      	cmp	r6, lr
 80141fa:	da5b      	bge.n	80142b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80141fc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80141fe:	fb06 2404 	mla	r4, r6, r4, r2
 8014202:	1424      	asrs	r4, r4, #16
 8014204:	d456      	bmi.n	80142b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014206:	42bc      	cmp	r4, r7
 8014208:	da54      	bge.n	80142b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801420a:	f8dd 9000 	ldr.w	r9, [sp]
 801420e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014212:	4698      	mov	r8, r3
 8014214:	f1b8 0f00 	cmp.w	r8, #0
 8014218:	dd54      	ble.n	80142c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801421a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801421e:	9804      	ldr	r0, [sp, #16]
 8014220:	1414      	asrs	r4, r2, #16
 8014222:	fb07 0404 	mla	r4, r7, r4, r0
 8014226:	140e      	asrs	r6, r1, #16
 8014228:	9801      	ldr	r0, [sp, #4]
 801422a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801422e:	f8b9 4000 	ldrh.w	r4, [r9]
 8014232:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014236:	eb00 0b0e 	add.w	fp, r0, lr
 801423a:	1227      	asrs	r7, r4, #8
 801423c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014240:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014244:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014248:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801424a:	fb16 f60a 	smulbb	r6, r6, sl
 801424e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014252:	fb07 6705 	mla	r7, r7, r5, r6
 8014256:	10e6      	asrs	r6, r4, #3
 8014258:	00e4      	lsls	r4, r4, #3
 801425a:	b2e4      	uxtb	r4, r4
 801425c:	fb1b fb0a 	smulbb	fp, fp, sl
 8014260:	fb14 f405 	smulbb	r4, r4, r5
 8014264:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014268:	b2bf      	uxth	r7, r7
 801426a:	fb06 b605 	mla	r6, r6, r5, fp
 801426e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014272:	b2b6      	uxth	r6, r6
 8014274:	fa1f fe8e 	uxth.w	lr, lr
 8014278:	1c7c      	adds	r4, r7, #1
 801427a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801427e:	f106 0b01 	add.w	fp, r6, #1
 8014282:	f10e 0401 	add.w	r4, lr, #1
 8014286:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801428a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801428e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014292:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014296:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801429a:	4327      	orrs	r7, r4
 801429c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80142a0:	4401      	add	r1, r0
 80142a2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80142a4:	ea47 070b 	orr.w	r7, r7, fp
 80142a8:	f829 7b02 	strh.w	r7, [r9], #2
 80142ac:	4402      	add	r2, r0
 80142ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80142b2:	e7af      	b.n	8014214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80142b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80142b8:	f04f 0e00 	mov.w	lr, #0
 80142bc:	eb03 040e 	add.w	r4, r3, lr
 80142c0:	2c00      	cmp	r4, #0
 80142c2:	dc43      	bgt.n	801434c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80142c4:	9a00      	ldr	r2, [sp, #0]
 80142c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80142ce:	9300      	str	r3, [sp, #0]
 80142d0:	9b02      	ldr	r3, [sp, #8]
 80142d2:	2b00      	cmp	r3, #0
 80142d4:	f340 8098 	ble.w	8014408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80142d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80142e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80142e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142f2:	eef0 6a62 	vmov.f32	s13, s5
 80142f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80142fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014302:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014306:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801430a:	eef0 6a43 	vmov.f32	s13, s6
 801430e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014312:	ee12 2a90 	vmov	r2, s5
 8014316:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801431a:	fb92 f3f3 	sdiv	r3, r2, r3
 801431e:	ee13 2a10 	vmov	r2, s6
 8014322:	9313      	str	r3, [sp, #76]	; 0x4c
 8014324:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014326:	fb92 f3f3 	sdiv	r3, r2, r3
 801432a:	9314      	str	r3, [sp, #80]	; 0x50
 801432c:	9b02      	ldr	r3, [sp, #8]
 801432e:	9a05      	ldr	r2, [sp, #20]
 8014330:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014334:	3b01      	subs	r3, #1
 8014336:	9302      	str	r3, [sp, #8]
 8014338:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801433c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801433e:	eeb0 3a67 	vmov.f32	s6, s15
 8014342:	bf08      	it	eq
 8014344:	4613      	moveq	r3, r2
 8014346:	eef0 2a47 	vmov.f32	s5, s14
 801434a:	e72a      	b.n	80141a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801434c:	140f      	asrs	r7, r1, #16
 801434e:	d454      	bmi.n	80143fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014350:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014354:	42be      	cmp	r6, r7
 8014356:	dd50      	ble.n	80143fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014358:	ea5f 4822 	movs.w	r8, r2, asr #16
 801435c:	d44d      	bmi.n	80143fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801435e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014362:	4544      	cmp	r4, r8
 8014364:	dd49      	ble.n	80143fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014366:	9c04      	ldr	r4, [sp, #16]
 8014368:	b236      	sxth	r6, r6
 801436a:	fb08 4606 	mla	r6, r8, r6, r4
 801436e:	f06f 0001 	mvn.w	r0, #1
 8014372:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014376:	9c01      	ldr	r4, [sp, #4]
 8014378:	fb00 fa0e 	mul.w	sl, r0, lr
 801437c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014380:	9800      	ldr	r0, [sp, #0]
 8014382:	eb04 0b08 	add.w	fp, r4, r8
 8014386:	f830 400a 	ldrh.w	r4, [r0, sl]
 801438a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801438e:	9801      	ldr	r0, [sp, #4]
 8014390:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014394:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014398:	9800      	ldr	r0, [sp, #0]
 801439a:	1227      	asrs	r7, r4, #8
 801439c:	fb16 f609 	smulbb	r6, r6, r9
 80143a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80143a4:	fb07 6705 	mla	r7, r7, r5, r6
 80143a8:	10e6      	asrs	r6, r4, #3
 80143aa:	00e4      	lsls	r4, r4, #3
 80143ac:	b2e4      	uxtb	r4, r4
 80143ae:	fb1b fb09 	smulbb	fp, fp, r9
 80143b2:	fb14 f405 	smulbb	r4, r4, r5
 80143b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143ba:	b2bf      	uxth	r7, r7
 80143bc:	fb06 b605 	mla	r6, r6, r5, fp
 80143c0:	fb08 4809 	mla	r8, r8, r9, r4
 80143c4:	b2b6      	uxth	r6, r6
 80143c6:	fa1f f888 	uxth.w	r8, r8
 80143ca:	1c7c      	adds	r4, r7, #1
 80143cc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80143d0:	f106 0b01 	add.w	fp, r6, #1
 80143d4:	f108 0401 	add.w	r4, r8, #1
 80143d8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80143dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80143e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80143e4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80143e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80143ec:	4327      	orrs	r7, r4
 80143ee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80143f2:	ea47 070b 	orr.w	r7, r7, fp
 80143f6:	f820 700a 	strh.w	r7, [r0, sl]
 80143fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80143fc:	4401      	add	r1, r0
 80143fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014400:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014404:	4402      	add	r2, r0
 8014406:	e759      	b.n	80142bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014408:	b007      	add	sp, #28
 801440a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014414:	b085      	sub	sp, #20
 8014416:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801441a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801441c:	9203      	str	r2, [sp, #12]
 801441e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014422:	6870      	ldr	r0, [r6, #4]
 8014424:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014426:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801442a:	686f      	ldr	r7, [r5, #4]
 801442c:	9101      	str	r1, [sp, #4]
 801442e:	fb00 2404 	mla	r4, r0, r4, r2
 8014432:	6832      	ldr	r2, [r6, #0]
 8014434:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014438:	682a      	ldr	r2, [r5, #0]
 801443a:	9202      	str	r2, [sp, #8]
 801443c:	3704      	adds	r7, #4
 801443e:	9a01      	ldr	r2, [sp, #4]
 8014440:	2a00      	cmp	r2, #0
 8014442:	dc03      	bgt.n	801444c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014444:	9a03      	ldr	r2, [sp, #12]
 8014446:	2a00      	cmp	r2, #0
 8014448:	f340 80cc 	ble.w	80145e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801444c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801444e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014452:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014456:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801445a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801445c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014460:	2b00      	cmp	r3, #0
 8014462:	dd0d      	ble.n	8014480 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014464:	1406      	asrs	r6, r0, #16
 8014466:	d405      	bmi.n	8014474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014468:	454e      	cmp	r6, r9
 801446a:	da03      	bge.n	8014474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801446c:	1416      	asrs	r6, r2, #16
 801446e:	d401      	bmi.n	8014474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014470:	4546      	cmp	r6, r8
 8014472:	db06      	blt.n	8014482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014474:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014476:	4460      	add	r0, ip
 8014478:	4432      	add	r2, r6
 801447a:	3b01      	subs	r3, #1
 801447c:	3402      	adds	r4, #2
 801447e:	e7ef      	b.n	8014460 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014480:	d00f      	beq.n	80144a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014482:	1e5e      	subs	r6, r3, #1
 8014484:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014488:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801448c:	d543      	bpl.n	8014516 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801448e:	4698      	mov	r8, r3
 8014490:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014494:	f1b8 0f00 	cmp.w	r8, #0
 8014498:	dc71      	bgt.n	801457e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801449a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801449e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80144a2:	9b01      	ldr	r3, [sp, #4]
 80144a4:	2b00      	cmp	r3, #0
 80144a6:	f340 809d 	ble.w	80145e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80144aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80144ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80144b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80144b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80144b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80144bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80144c0:	eeb0 6a62 	vmov.f32	s12, s5
 80144c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80144c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80144d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144d8:	eeb0 6a43 	vmov.f32	s12, s6
 80144dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144e0:	ee12 2a90 	vmov	r2, s5
 80144e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80144ec:	ee13 2a10 	vmov	r2, s6
 80144f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80144f4:	9312      	str	r3, [sp, #72]	; 0x48
 80144f6:	9b01      	ldr	r3, [sp, #4]
 80144f8:	9a03      	ldr	r2, [sp, #12]
 80144fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144fe:	3b01      	subs	r3, #1
 8014500:	9301      	str	r3, [sp, #4]
 8014502:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014508:	eeb0 3a67 	vmov.f32	s6, s15
 801450c:	bf08      	it	eq
 801450e:	4613      	moveq	r3, r2
 8014510:	eef0 2a47 	vmov.f32	s5, s14
 8014514:	e793      	b.n	801443e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014516:	45ce      	cmp	lr, r9
 8014518:	dab9      	bge.n	801448e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801451a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801451c:	fb01 2606 	mla	r6, r1, r6, r2
 8014520:	1436      	asrs	r6, r6, #16
 8014522:	d4b4      	bmi.n	801448e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014524:	4546      	cmp	r6, r8
 8014526:	dab2      	bge.n	801448e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014528:	4698      	mov	r8, r3
 801452a:	46a2      	mov	sl, r4
 801452c:	f1b8 0f00 	cmp.w	r8, #0
 8014530:	ddb3      	ble.n	801449a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014532:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014536:	9902      	ldr	r1, [sp, #8]
 8014538:	1416      	asrs	r6, r2, #16
 801453a:	fb09 1606 	mla	r6, r9, r6, r1
 801453e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014542:	492a      	ldr	r1, [pc, #168]	; (80145ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014544:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014548:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801454c:	eb07 0b0e 	add.w	fp, r7, lr
 8014550:	4460      	add	r0, ip
 8014552:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014556:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801455a:	00f6      	lsls	r6, r6, #3
 801455c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014560:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014564:	ea49 0606 	orr.w	r6, r9, r6
 8014568:	f817 900e 	ldrb.w	r9, [r7, lr]
 801456c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801456e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014572:	f82a 6b02 	strh.w	r6, [sl], #2
 8014576:	440a      	add	r2, r1
 8014578:	f108 38ff 	add.w	r8, r8, #4294967295
 801457c:	e7d6      	b.n	801452c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801457e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014582:	d429      	bmi.n	80145d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014584:	68ae      	ldr	r6, [r5, #8]
 8014586:	454e      	cmp	r6, r9
 8014588:	dd26      	ble.n	80145d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801458a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801458e:	d423      	bmi.n	80145d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014590:	68e9      	ldr	r1, [r5, #12]
 8014592:	4559      	cmp	r1, fp
 8014594:	dd20      	ble.n	80145d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014596:	9902      	ldr	r1, [sp, #8]
 8014598:	fa0f fe86 	sxth.w	lr, r6
 801459c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80145a0:	f06f 0101 	mvn.w	r1, #1
 80145a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80145a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80145ac:	eb07 060e 	add.w	r6, r7, lr
 80145b0:	fb01 f908 	mul.w	r9, r1, r8
 80145b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80145b8:	7876      	ldrb	r6, [r6, #1]
 80145ba:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80145be:	00f6      	lsls	r6, r6, #3
 80145c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80145c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80145c8:	ea4b 0606 	orr.w	r6, fp, r6
 80145cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80145d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80145d4:	f82a 6009 	strh.w	r6, [sl, r9]
 80145d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80145da:	4460      	add	r0, ip
 80145dc:	440a      	add	r2, r1
 80145de:	f108 38ff 	add.w	r8, r8, #4294967295
 80145e2:	e757      	b.n	8014494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80145e4:	b005      	add	sp, #20
 80145e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145ea:	bf00      	nop
 80145ec:	fffff800 	.word	0xfffff800

080145f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80145f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145f4:	b087      	sub	sp, #28
 80145f6:	468b      	mov	fp, r1
 80145f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80145fa:	9204      	str	r2, [sp, #16]
 80145fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014600:	9205      	str	r2, [sp, #20]
 8014602:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014606:	6841      	ldr	r1, [r0, #4]
 8014608:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801460c:	fb01 2404 	mla	r4, r1, r4, r2
 8014610:	6802      	ldr	r2, [r0, #0]
 8014612:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014616:	f8dc 2000 	ldr.w	r2, [ip]
 801461a:	9201      	str	r2, [sp, #4]
 801461c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014620:	3204      	adds	r2, #4
 8014622:	9202      	str	r2, [sp, #8]
 8014624:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014628:	f1bb 0f00 	cmp.w	fp, #0
 801462c:	dc03      	bgt.n	8014636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801462e:	9a04      	ldr	r2, [sp, #16]
 8014630:	2a00      	cmp	r2, #0
 8014632:	f340 8138 	ble.w	80148a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014636:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014638:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801463c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014640:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014644:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014646:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801464a:	2b00      	cmp	r3, #0
 801464c:	dd0e      	ble.n	801466c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801464e:	1402      	asrs	r2, r0, #16
 8014650:	d405      	bmi.n	801465e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014652:	42ba      	cmp	r2, r7
 8014654:	da03      	bge.n	801465e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014656:	140a      	asrs	r2, r1, #16
 8014658:	d401      	bmi.n	801465e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801465a:	42b2      	cmp	r2, r6
 801465c:	db07      	blt.n	801466e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801465e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014660:	4410      	add	r0, r2
 8014662:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014664:	3b01      	subs	r3, #1
 8014666:	4411      	add	r1, r2
 8014668:	3402      	adds	r4, #2
 801466a:	e7ee      	b.n	801464a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801466c:	d019      	beq.n	80146a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801466e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014670:	1e5a      	subs	r2, r3, #1
 8014672:	fb05 0502 	mla	r5, r5, r2, r0
 8014676:	142d      	asrs	r5, r5, #16
 8014678:	d409      	bmi.n	801468e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801467a:	42bd      	cmp	r5, r7
 801467c:	da07      	bge.n	801468e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801467e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014680:	fb05 1202 	mla	r2, r5, r2, r1
 8014684:	1412      	asrs	r2, r2, #16
 8014686:	d402      	bmi.n	801468e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014688:	42b2      	cmp	r2, r6
 801468a:	f2c0 80ac 	blt.w	80147e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801468e:	f04f 0e00 	mov.w	lr, #0
 8014692:	eb03 020e 	add.w	r2, r3, lr
 8014696:	2a00      	cmp	r2, #0
 8014698:	dc3e      	bgt.n	8014718 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801469a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801469e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80146a2:	f1bb 0f00 	cmp.w	fp, #0
 80146a6:	f340 80fe 	ble.w	80148a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80146aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80146b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80146bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80146c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80146c4:	eeb0 6a62 	vmov.f32	s12, s5
 80146c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80146cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80146d4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80146d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80146dc:	eeb0 6a43 	vmov.f32	s12, s6
 80146e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80146e4:	ee12 2a90 	vmov	r2, s5
 80146e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80146ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80146f0:	ee13 2a10 	vmov	r2, s6
 80146f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80146fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8014700:	9a04      	ldr	r2, [sp, #16]
 8014702:	9314      	str	r3, [sp, #80]	; 0x50
 8014704:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014708:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801470a:	eeb0 3a67 	vmov.f32	s6, s15
 801470e:	bf08      	it	eq
 8014710:	4613      	moveq	r3, r2
 8014712:	eef0 2a47 	vmov.f32	s5, s14
 8014716:	e787      	b.n	8014628 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014718:	1406      	asrs	r6, r0, #16
 801471a:	d45d      	bmi.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801471c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014720:	42b5      	cmp	r5, r6
 8014722:	dd59      	ble.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014724:	140f      	asrs	r7, r1, #16
 8014726:	d457      	bmi.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014728:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801472c:	42ba      	cmp	r2, r7
 801472e:	dd53      	ble.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014730:	9a01      	ldr	r2, [sp, #4]
 8014732:	b22d      	sxth	r5, r5
 8014734:	fb07 2505 	mla	r5, r7, r5, r2
 8014738:	5daa      	ldrb	r2, [r5, r6]
 801473a:	9d02      	ldr	r5, [sp, #8]
 801473c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014740:	0e2e      	lsrs	r6, r5, #24
 8014742:	d049      	beq.n	80147d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014744:	f06f 0201 	mvn.w	r2, #1
 8014748:	fb02 f20e 	mul.w	r2, r2, lr
 801474c:	9203      	str	r2, [sp, #12]
 801474e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014752:	9a05      	ldr	r2, [sp, #20]
 8014754:	4356      	muls	r6, r2
 8014756:	1c72      	adds	r2, r6, #1
 8014758:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801475c:	1212      	asrs	r2, r2, #8
 801475e:	fa1f f982 	uxth.w	r9, r2
 8014762:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014766:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801476a:	43d2      	mvns	r2, r2
 801476c:	b2d2      	uxtb	r2, r2
 801476e:	fb16 f609 	smulbb	r6, r6, r9
 8014772:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014776:	fb07 6702 	mla	r7, r7, r2, r6
 801477a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801477e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014782:	b2ed      	uxtb	r5, r5
 8014784:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014788:	fa5f f888 	uxtb.w	r8, r8
 801478c:	fb15 f509 	smulbb	r5, r5, r9
 8014790:	fb08 5502 	mla	r5, r8, r2, r5
 8014794:	b2bf      	uxth	r7, r7
 8014796:	fb1a fa09 	smulbb	sl, sl, r9
 801479a:	b2ad      	uxth	r5, r5
 801479c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80147a0:	fb06 a602 	mla	r6, r6, r2, sl
 80147a4:	1c7a      	adds	r2, r7, #1
 80147a6:	f105 0a01 	add.w	sl, r5, #1
 80147aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80147ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80147b2:	b2b6      	uxth	r6, r6
 80147b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80147b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80147bc:	ea4a 0707 	orr.w	r7, sl, r7
 80147c0:	f106 0a01 	add.w	sl, r6, #1
 80147c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80147c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80147cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80147d0:	9a03      	ldr	r2, [sp, #12]
 80147d2:	ea47 070a 	orr.w	r7, r7, sl
 80147d6:	52a7      	strh	r7, [r4, r2]
 80147d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80147da:	4410      	add	r0, r2
 80147dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80147de:	f10e 3eff 	add.w	lr, lr, #4294967295
 80147e2:	4411      	add	r1, r2
 80147e4:	e755      	b.n	8014692 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80147e6:	f04f 0800 	mov.w	r8, #0
 80147ea:	eba3 0208 	sub.w	r2, r3, r8
 80147ee:	2a00      	cmp	r2, #0
 80147f0:	f77f af53 	ble.w	801469a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80147f4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80147f8:	9f01      	ldr	r7, [sp, #4]
 80147fa:	140a      	asrs	r2, r1, #16
 80147fc:	1405      	asrs	r5, r0, #16
 80147fe:	fb06 7202 	mla	r2, r6, r2, r7
 8014802:	5d52      	ldrb	r2, [r2, r5]
 8014804:	9d02      	ldr	r5, [sp, #8]
 8014806:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801480a:	0e2e      	lsrs	r6, r5, #24
 801480c:	d044      	beq.n	8014898 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801480e:	9a05      	ldr	r2, [sp, #20]
 8014810:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014814:	4356      	muls	r6, r2
 8014816:	1c72      	adds	r2, r6, #1
 8014818:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801481c:	1212      	asrs	r2, r2, #8
 801481e:	fa1f f982 	uxth.w	r9, r2
 8014822:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014826:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801482a:	43d2      	mvns	r2, r2
 801482c:	b2d2      	uxtb	r2, r2
 801482e:	fb16 f609 	smulbb	r6, r6, r9
 8014832:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014836:	fb07 6702 	mla	r7, r7, r2, r6
 801483a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801483e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014842:	b2ed      	uxtb	r5, r5
 8014844:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014848:	fa5f fe8e 	uxtb.w	lr, lr
 801484c:	fb15 f509 	smulbb	r5, r5, r9
 8014850:	fb0e 5502 	mla	r5, lr, r2, r5
 8014854:	b2bf      	uxth	r7, r7
 8014856:	fb1a fa09 	smulbb	sl, sl, r9
 801485a:	b2ad      	uxth	r5, r5
 801485c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014860:	fb06 a602 	mla	r6, r6, r2, sl
 8014864:	1c7a      	adds	r2, r7, #1
 8014866:	f105 0a01 	add.w	sl, r5, #1
 801486a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801486e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014872:	b2b6      	uxth	r6, r6
 8014874:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014878:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801487c:	ea4a 0707 	orr.w	r7, sl, r7
 8014880:	f106 0a01 	add.w	sl, r6, #1
 8014884:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014888:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801488c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014890:	ea47 070a 	orr.w	r7, r7, sl
 8014894:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014898:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801489a:	4410      	add	r0, r2
 801489c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801489e:	f108 0801 	add.w	r8, r8, #1
 80148a2:	4411      	add	r1, r2
 80148a4:	e7a1      	b.n	80147ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80148a6:	b007      	add	sp, #28
 80148a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080148ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80148ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148b0:	b085      	sub	sp, #20
 80148b2:	468b      	mov	fp, r1
 80148b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80148b6:	9203      	str	r2, [sp, #12]
 80148b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80148bc:	6841      	ldr	r1, [r0, #4]
 80148be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80148c2:	fb01 2404 	mla	r4, r1, r4, r2
 80148c6:	6802      	ldr	r2, [r0, #0]
 80148c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80148cc:	f8de 2000 	ldr.w	r2, [lr]
 80148d0:	9200      	str	r2, [sp, #0]
 80148d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80148d6:	3204      	adds	r2, #4
 80148d8:	9201      	str	r2, [sp, #4]
 80148da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80148de:	f1bb 0f00 	cmp.w	fp, #0
 80148e2:	dc03      	bgt.n	80148ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80148e4:	9a03      	ldr	r2, [sp, #12]
 80148e6:	2a00      	cmp	r2, #0
 80148e8:	f340 8153 	ble.w	8014b92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80148ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80148ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80148f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80148f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80148fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80148fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014900:	2b00      	cmp	r3, #0
 8014902:	dd0e      	ble.n	8014922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014904:	1408      	asrs	r0, r1, #16
 8014906:	d405      	bmi.n	8014914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014908:	42b8      	cmp	r0, r7
 801490a:	da03      	bge.n	8014914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801490c:	1410      	asrs	r0, r2, #16
 801490e:	d401      	bmi.n	8014914 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014910:	42b0      	cmp	r0, r6
 8014912:	db07      	blt.n	8014924 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014914:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014916:	4401      	add	r1, r0
 8014918:	9812      	ldr	r0, [sp, #72]	; 0x48
 801491a:	3b01      	subs	r3, #1
 801491c:	4402      	add	r2, r0
 801491e:	3402      	adds	r4, #2
 8014920:	e7ee      	b.n	8014900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014922:	d017      	beq.n	8014954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014924:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014926:	1e58      	subs	r0, r3, #1
 8014928:	fb05 1500 	mla	r5, r5, r0, r1
 801492c:	142d      	asrs	r5, r5, #16
 801492e:	d409      	bmi.n	8014944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014930:	42bd      	cmp	r5, r7
 8014932:	da07      	bge.n	8014944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014934:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014936:	fb05 2000 	mla	r0, r5, r0, r2
 801493a:	1400      	asrs	r0, r0, #16
 801493c:	d402      	bmi.n	8014944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801493e:	42b0      	cmp	r0, r6
 8014940:	f2c0 80bc 	blt.w	8014abc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014944:	2600      	movs	r6, #0
 8014946:	1998      	adds	r0, r3, r6
 8014948:	2800      	cmp	r0, #0
 801494a:	dc3e      	bgt.n	80149ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801494c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014950:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014954:	f1bb 0f00 	cmp.w	fp, #0
 8014958:	f340 811b 	ble.w	8014b92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801495c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014960:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014964:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014968:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801496a:	f1bb 0b01 	subs.w	fp, fp, #1
 801496e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014972:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014976:	eeb0 6a62 	vmov.f32	s12, s5
 801497a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801497e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014982:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014986:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801498a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801498e:	eeb0 6a43 	vmov.f32	s12, s6
 8014992:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014996:	ee12 2a90 	vmov	r2, s5
 801499a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801499e:	fb92 f3f3 	sdiv	r3, r2, r3
 80149a2:	ee13 2a10 	vmov	r2, s6
 80149a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80149aa:	9311      	str	r3, [sp, #68]	; 0x44
 80149ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80149b2:	9a03      	ldr	r2, [sp, #12]
 80149b4:	9312      	str	r3, [sp, #72]	; 0x48
 80149b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80149ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149bc:	eeb0 3a67 	vmov.f32	s6, s15
 80149c0:	bf08      	it	eq
 80149c2:	4613      	moveq	r3, r2
 80149c4:	eef0 2a47 	vmov.f32	s5, s14
 80149c8:	e789      	b.n	80148de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80149ca:	140f      	asrs	r7, r1, #16
 80149cc:	d45e      	bmi.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80149ce:	f8de 5008 	ldr.w	r5, [lr, #8]
 80149d2:	42bd      	cmp	r5, r7
 80149d4:	dd5a      	ble.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80149d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80149da:	d457      	bmi.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80149dc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80149e0:	4560      	cmp	r0, ip
 80149e2:	dd53      	ble.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80149e4:	9800      	ldr	r0, [sp, #0]
 80149e6:	b22d      	sxth	r5, r5
 80149e8:	fb0c 0505 	mla	r5, ip, r5, r0
 80149ec:	5de8      	ldrb	r0, [r5, r7]
 80149ee:	9d01      	ldr	r5, [sp, #4]
 80149f0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80149f4:	0e07      	lsrs	r7, r0, #24
 80149f6:	2fff      	cmp	r7, #255	; 0xff
 80149f8:	d04e      	beq.n	8014a98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80149fa:	b2fd      	uxtb	r5, r7
 80149fc:	2f00      	cmp	r7, #0
 80149fe:	d045      	beq.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a00:	f06f 0701 	mvn.w	r7, #1
 8014a04:	4377      	muls	r7, r6
 8014a06:	fa1f f985 	uxth.w	r9, r5
 8014a0a:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014a0e:	9702      	str	r7, [sp, #8]
 8014a10:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014a14:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014a18:	43ed      	mvns	r5, r5
 8014a1a:	b2ed      	uxtb	r5, r5
 8014a1c:	fb17 f709 	smulbb	r7, r7, r9
 8014a20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a24:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014a28:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014a2c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014a30:	b2c0      	uxtb	r0, r0
 8014a32:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014a36:	fa5f f888 	uxtb.w	r8, r8
 8014a3a:	fb10 f009 	smulbb	r0, r0, r9
 8014a3e:	fb08 0005 	mla	r0, r8, r5, r0
 8014a42:	b280      	uxth	r0, r0
 8014a44:	fa1f fc8c 	uxth.w	ip, ip
 8014a48:	fb1a fa09 	smulbb	sl, sl, r9
 8014a4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014a50:	fb07 a705 	mla	r7, r7, r5, sl
 8014a54:	f100 0a01 	add.w	sl, r0, #1
 8014a58:	f10c 0501 	add.w	r5, ip, #1
 8014a5c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014a60:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014a64:	b2bf      	uxth	r7, r7
 8014a66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014a6e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014a72:	f107 0a01 	add.w	sl, r7, #1
 8014a76:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014a7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014a82:	9802      	ldr	r0, [sp, #8]
 8014a84:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014a88:	f824 c000 	strh.w	ip, [r4, r0]
 8014a8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014a8e:	4401      	add	r1, r0
 8014a90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014a92:	3e01      	subs	r6, #1
 8014a94:	4402      	add	r2, r0
 8014a96:	e756      	b.n	8014946 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014a98:	f06f 0501 	mvn.w	r5, #1
 8014a9c:	fb05 f706 	mul.w	r7, r5, r6
 8014aa0:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014aa4:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014aa8:	0945      	lsrs	r5, r0, #5
 8014aaa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014aae:	ea4c 0505 	orr.w	r5, ip, r5
 8014ab2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014ab6:	4305      	orrs	r5, r0
 8014ab8:	53e5      	strh	r5, [r4, r7]
 8014aba:	e7e7      	b.n	8014a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014abc:	f04f 0800 	mov.w	r8, #0
 8014ac0:	eba3 0008 	sub.w	r0, r3, r8
 8014ac4:	2800      	cmp	r0, #0
 8014ac6:	f77f af41 	ble.w	801494c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014aca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014ace:	9f00      	ldr	r7, [sp, #0]
 8014ad0:	1410      	asrs	r0, r2, #16
 8014ad2:	140d      	asrs	r5, r1, #16
 8014ad4:	fb06 7000 	mla	r0, r6, r0, r7
 8014ad8:	5d40      	ldrb	r0, [r0, r5]
 8014ada:	9d01      	ldr	r5, [sp, #4]
 8014adc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014ae0:	0e06      	lsrs	r6, r0, #24
 8014ae2:	2eff      	cmp	r6, #255	; 0xff
 8014ae4:	d048      	beq.n	8014b78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014ae6:	b2f5      	uxtb	r5, r6
 8014ae8:	2e00      	cmp	r6, #0
 8014aea:	d03e      	beq.n	8014b6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8014aec:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014af0:	fa1f f985 	uxth.w	r9, r5
 8014af4:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014af8:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8014afc:	43ed      	mvns	r5, r5
 8014afe:	b2ed      	uxtb	r5, r5
 8014b00:	fb16 f609 	smulbb	r6, r6, r9
 8014b04:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b08:	fb07 6705 	mla	r7, r7, r5, r6
 8014b0c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014b10:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014b14:	b2c0      	uxtb	r0, r0
 8014b16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014b1a:	fa5f fc8c 	uxtb.w	ip, ip
 8014b1e:	fb10 f009 	smulbb	r0, r0, r9
 8014b22:	fb0c 0005 	mla	r0, ip, r5, r0
 8014b26:	b2bf      	uxth	r7, r7
 8014b28:	fb1a fa09 	smulbb	sl, sl, r9
 8014b2c:	b280      	uxth	r0, r0
 8014b2e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b32:	fb06 a605 	mla	r6, r6, r5, sl
 8014b36:	1c7d      	adds	r5, r7, #1
 8014b38:	f100 0a01 	add.w	sl, r0, #1
 8014b3c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8014b40:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014b44:	b2b6      	uxth	r6, r6
 8014b46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014b4e:	ea4a 0707 	orr.w	r7, sl, r7
 8014b52:	f106 0a01 	add.w	sl, r6, #1
 8014b56:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014b5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014b62:	ea47 070a 	orr.w	r7, r7, sl
 8014b66:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014b6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014b6c:	4401      	add	r1, r0
 8014b6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014b70:	f108 0801 	add.w	r8, r8, #1
 8014b74:	4402      	add	r2, r0
 8014b76:	e7a3      	b.n	8014ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014b78:	4d07      	ldr	r5, [pc, #28]	; (8014b98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014b7a:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8014b7e:	0945      	lsrs	r5, r0, #5
 8014b80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014b84:	4335      	orrs	r5, r6
 8014b86:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014b8a:	4305      	orrs	r5, r0
 8014b8c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014b90:	e7eb      	b.n	8014b6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8014b92:	b005      	add	sp, #20
 8014b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b98:	fffff800 	.word	0xfffff800

08014b9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ba0:	b087      	sub	sp, #28
 8014ba2:	468b      	mov	fp, r1
 8014ba4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014ba6:	9204      	str	r2, [sp, #16]
 8014ba8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014bac:	9205      	str	r2, [sp, #20]
 8014bae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014bb2:	6861      	ldr	r1, [r4, #4]
 8014bb4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014bb8:	fb01 2000 	mla	r0, r1, r0, r2
 8014bbc:	6822      	ldr	r2, [r4, #0]
 8014bbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014bc2:	f8de 2000 	ldr.w	r2, [lr]
 8014bc6:	9201      	str	r2, [sp, #4]
 8014bc8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014bcc:	9202      	str	r2, [sp, #8]
 8014bce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014bd2:	f1bb 0f00 	cmp.w	fp, #0
 8014bd6:	dc03      	bgt.n	8014be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014bd8:	9a04      	ldr	r2, [sp, #16]
 8014bda:	2a00      	cmp	r2, #0
 8014bdc:	f340 8142 	ble.w	8014e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014be0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014be2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014be6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014bea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014bee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014bf0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014bf4:	2b00      	cmp	r3, #0
 8014bf6:	dd0e      	ble.n	8014c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014bf8:	140c      	asrs	r4, r1, #16
 8014bfa:	d405      	bmi.n	8014c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014bfc:	42bc      	cmp	r4, r7
 8014bfe:	da03      	bge.n	8014c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014c00:	1414      	asrs	r4, r2, #16
 8014c02:	d401      	bmi.n	8014c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014c04:	42b4      	cmp	r4, r6
 8014c06:	db07      	blt.n	8014c18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014c08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014c0a:	4421      	add	r1, r4
 8014c0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c0e:	3b01      	subs	r3, #1
 8014c10:	4422      	add	r2, r4
 8014c12:	3002      	adds	r0, #2
 8014c14:	e7ee      	b.n	8014bf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014c16:	d019      	beq.n	8014c4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014c18:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014c1a:	1e5c      	subs	r4, r3, #1
 8014c1c:	fb05 1504 	mla	r5, r5, r4, r1
 8014c20:	142d      	asrs	r5, r5, #16
 8014c22:	d409      	bmi.n	8014c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c24:	42bd      	cmp	r5, r7
 8014c26:	da07      	bge.n	8014c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c28:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014c2a:	fb05 2404 	mla	r4, r5, r4, r2
 8014c2e:	1424      	asrs	r4, r4, #16
 8014c30:	d402      	bmi.n	8014c38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014c32:	42b4      	cmp	r4, r6
 8014c34:	f2c0 80b1 	blt.w	8014d9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014c38:	f04f 0800 	mov.w	r8, #0
 8014c3c:	eb03 0408 	add.w	r4, r3, r8
 8014c40:	2c00      	cmp	r4, #0
 8014c42:	dc3e      	bgt.n	8014cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014c44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014c4c:	f1bb 0f00 	cmp.w	fp, #0
 8014c50:	f340 8108 	ble.w	8014e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014c54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c62:	f1bb 0b01 	subs.w	fp, fp, #1
 8014c66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c6e:	eeb0 6a62 	vmov.f32	s12, s5
 8014c72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c7e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014c82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c86:	eeb0 6a43 	vmov.f32	s12, s6
 8014c8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c8e:	ee12 2a90 	vmov	r2, s5
 8014c92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c9a:	ee13 2a10 	vmov	r2, s6
 8014c9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ca2:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ca4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ca6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014caa:	9a04      	ldr	r2, [sp, #16]
 8014cac:	9314      	str	r3, [sp, #80]	; 0x50
 8014cae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014cb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014cb4:	eeb0 3a67 	vmov.f32	s6, s15
 8014cb8:	bf08      	it	eq
 8014cba:	4613      	moveq	r3, r2
 8014cbc:	eef0 2a47 	vmov.f32	s5, s14
 8014cc0:	e787      	b.n	8014bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014cc2:	140e      	asrs	r6, r1, #16
 8014cc4:	d462      	bmi.n	8014d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014cc6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014cca:	42b5      	cmp	r5, r6
 8014ccc:	dd5e      	ble.n	8014d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014cce:	1417      	asrs	r7, r2, #16
 8014cd0:	d45c      	bmi.n	8014d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014cd2:	f8de 400c 	ldr.w	r4, [lr, #12]
 8014cd6:	42bc      	cmp	r4, r7
 8014cd8:	dd58      	ble.n	8014d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014cda:	b22d      	sxth	r5, r5
 8014cdc:	fb07 6505 	mla	r5, r7, r5, r6
 8014ce0:	9c02      	ldr	r4, [sp, #8]
 8014ce2:	5d66      	ldrb	r6, [r4, r5]
 8014ce4:	2e00      	cmp	r6, #0
 8014ce6:	d051      	beq.n	8014d8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014ce8:	9c01      	ldr	r4, [sp, #4]
 8014cea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014cee:	f06f 0401 	mvn.w	r4, #1
 8014cf2:	fb04 f408 	mul.w	r4, r4, r8
 8014cf6:	9403      	str	r4, [sp, #12]
 8014cf8:	5b05      	ldrh	r5, [r0, r4]
 8014cfa:	9c05      	ldr	r4, [sp, #20]
 8014cfc:	4366      	muls	r6, r4
 8014cfe:	1c74      	adds	r4, r6, #1
 8014d00:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014d04:	1224      	asrs	r4, r4, #8
 8014d06:	b2a7      	uxth	r7, r4
 8014d08:	122e      	asrs	r6, r5, #8
 8014d0a:	43e4      	mvns	r4, r4
 8014d0c:	b2e4      	uxtb	r4, r4
 8014d0e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8014d12:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014d16:	fb16 f604 	smulbb	r6, r6, r4
 8014d1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014d1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014d22:	00ed      	lsls	r5, r5, #3
 8014d24:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014d28:	b2ed      	uxtb	r5, r5
 8014d2a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014d2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014d32:	fb15 f504 	smulbb	r5, r5, r4
 8014d36:	fa5f f989 	uxtb.w	r9, r9
 8014d3a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014d3e:	fb09 5507 	mla	r5, r9, r7, r5
 8014d42:	fb1a fa04 	smulbb	sl, sl, r4
 8014d46:	fa1f fc8c 	uxth.w	ip, ip
 8014d4a:	b2ad      	uxth	r5, r5
 8014d4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014d50:	fb06 a607 	mla	r6, r6, r7, sl
 8014d54:	f10c 0401 	add.w	r4, ip, #1
 8014d58:	f105 0a01 	add.w	sl, r5, #1
 8014d5c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014d60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014d64:	b2b6      	uxth	r6, r6
 8014d66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014d6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014d6e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014d72:	f106 0a01 	add.w	sl, r6, #1
 8014d76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014d82:	9c03      	ldr	r4, [sp, #12]
 8014d84:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014d88:	f820 c004 	strh.w	ip, [r0, r4]
 8014d8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014d8e:	4421      	add	r1, r4
 8014d90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014d92:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d96:	4422      	add	r2, r4
 8014d98:	e750      	b.n	8014c3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014d9a:	f04f 0900 	mov.w	r9, #0
 8014d9e:	eba3 0409 	sub.w	r4, r3, r9
 8014da2:	2c00      	cmp	r4, #0
 8014da4:	f77f af4e 	ble.w	8014c44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014da8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014dac:	140d      	asrs	r5, r1, #16
 8014dae:	1414      	asrs	r4, r2, #16
 8014db0:	fb06 5404 	mla	r4, r6, r4, r5
 8014db4:	9d02      	ldr	r5, [sp, #8]
 8014db6:	5d2e      	ldrb	r6, [r5, r4]
 8014db8:	2e00      	cmp	r6, #0
 8014dba:	d04c      	beq.n	8014e56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014dbc:	9d01      	ldr	r5, [sp, #4]
 8014dbe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014dc2:	9c05      	ldr	r4, [sp, #20]
 8014dc4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014dc8:	4366      	muls	r6, r4
 8014dca:	1c74      	adds	r4, r6, #1
 8014dcc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014dd0:	1224      	asrs	r4, r4, #8
 8014dd2:	b2a7      	uxth	r7, r4
 8014dd4:	122e      	asrs	r6, r5, #8
 8014dd6:	43e4      	mvns	r4, r4
 8014dd8:	b2e4      	uxtb	r4, r4
 8014dda:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014dde:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014de2:	fb16 f604 	smulbb	r6, r6, r4
 8014de6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014dea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014dee:	00ed      	lsls	r5, r5, #3
 8014df0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014df4:	b2ed      	uxtb	r5, r5
 8014df6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014dfa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014dfe:	fb15 f504 	smulbb	r5, r5, r4
 8014e02:	fa5f f888 	uxtb.w	r8, r8
 8014e06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014e0a:	fb08 5507 	mla	r5, r8, r7, r5
 8014e0e:	fb1a fa04 	smulbb	sl, sl, r4
 8014e12:	fa1f fc8c 	uxth.w	ip, ip
 8014e16:	b2ad      	uxth	r5, r5
 8014e18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e1c:	fb06 a607 	mla	r6, r6, r7, sl
 8014e20:	f10c 0401 	add.w	r4, ip, #1
 8014e24:	f105 0a01 	add.w	sl, r5, #1
 8014e28:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014e2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014e30:	b2b6      	uxth	r6, r6
 8014e32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014e36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e3a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014e3e:	f106 0a01 	add.w	sl, r6, #1
 8014e42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014e46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014e4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014e4e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014e52:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014e56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e58:	4421      	add	r1, r4
 8014e5a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014e5c:	f109 0901 	add.w	r9, r9, #1
 8014e60:	4422      	add	r2, r4
 8014e62:	e79c      	b.n	8014d9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014e64:	b007      	add	sp, #28
 8014e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e6e:	b085      	sub	sp, #20
 8014e70:	468b      	mov	fp, r1
 8014e72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e74:	9203      	str	r2, [sp, #12]
 8014e76:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8014e7a:	6861      	ldr	r1, [r4, #4]
 8014e7c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014e80:	fb01 2000 	mla	r0, r1, r0, r2
 8014e84:	6822      	ldr	r2, [r4, #0]
 8014e86:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014e8a:	f8d8 2000 	ldr.w	r2, [r8]
 8014e8e:	9200      	str	r2, [sp, #0]
 8014e90:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014e94:	9201      	str	r2, [sp, #4]
 8014e96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e9a:	f1bb 0f00 	cmp.w	fp, #0
 8014e9e:	dc03      	bgt.n	8014ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014ea0:	9a03      	ldr	r2, [sp, #12]
 8014ea2:	2a00      	cmp	r2, #0
 8014ea4:	f340 8146 	ble.w	8015134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014ea8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014eaa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014eae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014eb2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014eb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014eb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014ebc:	2b00      	cmp	r3, #0
 8014ebe:	dd0e      	ble.n	8014ede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014ec0:	140c      	asrs	r4, r1, #16
 8014ec2:	d405      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014ec4:	42bc      	cmp	r4, r7
 8014ec6:	da03      	bge.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014ec8:	1414      	asrs	r4, r2, #16
 8014eca:	d401      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014ecc:	42b4      	cmp	r4, r6
 8014ece:	db07      	blt.n	8014ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ed0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014ed2:	4421      	add	r1, r4
 8014ed4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014ed6:	3b01      	subs	r3, #1
 8014ed8:	4422      	add	r2, r4
 8014eda:	3002      	adds	r0, #2
 8014edc:	e7ee      	b.n	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014ede:	d017      	beq.n	8014f10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014ee0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014ee2:	1e5c      	subs	r4, r3, #1
 8014ee4:	fb05 1504 	mla	r5, r5, r4, r1
 8014ee8:	142d      	asrs	r5, r5, #16
 8014eea:	d409      	bmi.n	8014f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014eec:	42bd      	cmp	r5, r7
 8014eee:	da07      	bge.n	8014f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014ef0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014ef2:	fb05 2404 	mla	r4, r5, r4, r2
 8014ef6:	1424      	asrs	r4, r4, #16
 8014ef8:	d402      	bmi.n	8014f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014efa:	42b4      	cmp	r4, r6
 8014efc:	f2c0 80b3 	blt.w	8015066 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014f00:	2600      	movs	r6, #0
 8014f02:	199c      	adds	r4, r3, r6
 8014f04:	2c00      	cmp	r4, #0
 8014f06:	dc3e      	bgt.n	8014f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014f08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014f10:	f1bb 0f00 	cmp.w	fp, #0
 8014f14:	f340 810e 	ble.w	8015134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014f18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f26:	f1bb 0b01 	subs.w	fp, fp, #1
 8014f2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f32:	eeb0 6a62 	vmov.f32	s12, s5
 8014f36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f42:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f4a:	eeb0 6a43 	vmov.f32	s12, s6
 8014f4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f52:	ee12 2a90 	vmov	r2, s5
 8014f56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f5e:	ee13 2a10 	vmov	r2, s6
 8014f62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f66:	9311      	str	r3, [sp, #68]	; 0x44
 8014f68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f6e:	9a03      	ldr	r2, [sp, #12]
 8014f70:	9312      	str	r3, [sp, #72]	; 0x48
 8014f72:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f78:	eeb0 3a67 	vmov.f32	s6, s15
 8014f7c:	bf08      	it	eq
 8014f7e:	4613      	moveq	r3, r2
 8014f80:	eef0 2a47 	vmov.f32	s5, s14
 8014f84:	e789      	b.n	8014e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014f86:	140f      	asrs	r7, r1, #16
 8014f88:	d45f      	bmi.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014f8a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014f8e:	42bd      	cmp	r5, r7
 8014f90:	dd5b      	ble.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014f92:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014f96:	d458      	bmi.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014f98:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014f9c:	4564      	cmp	r4, ip
 8014f9e:	dd54      	ble.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014fa0:	b22d      	sxth	r5, r5
 8014fa2:	fb0c 7505 	mla	r5, ip, r5, r7
 8014fa6:	9c01      	ldr	r4, [sp, #4]
 8014fa8:	5d64      	ldrb	r4, [r4, r5]
 8014faa:	2cff      	cmp	r4, #255	; 0xff
 8014fac:	d053      	beq.n	8015056 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8014fae:	2c00      	cmp	r4, #0
 8014fb0:	d04b      	beq.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014fb2:	9f00      	ldr	r7, [sp, #0]
 8014fb4:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014fb8:	f06f 0501 	mvn.w	r5, #1
 8014fbc:	4375      	muls	r5, r6
 8014fbe:	9502      	str	r5, [sp, #8]
 8014fc0:	5b45      	ldrh	r5, [r0, r5]
 8014fc2:	fa1f fc84 	uxth.w	ip, r4
 8014fc6:	122f      	asrs	r7, r5, #8
 8014fc8:	43e4      	mvns	r4, r4
 8014fca:	b2e4      	uxtb	r4, r4
 8014fcc:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014fd0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014fd4:	fb17 f704 	smulbb	r7, r7, r4
 8014fd8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014fdc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014fe0:	00ed      	lsls	r5, r5, #3
 8014fe2:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014fe6:	b2ed      	uxtb	r5, r5
 8014fe8:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014fec:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014ff0:	fb15 f504 	smulbb	r5, r5, r4
 8014ff4:	fa5f f989 	uxtb.w	r9, r9
 8014ff8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014ffc:	fb09 550c 	mla	r5, r9, ip, r5
 8015000:	fb1a fa04 	smulbb	sl, sl, r4
 8015004:	fa1f fe8e 	uxth.w	lr, lr
 8015008:	b2ad      	uxth	r5, r5
 801500a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801500e:	fb07 a70c 	mla	r7, r7, ip, sl
 8015012:	f10e 0401 	add.w	r4, lr, #1
 8015016:	f105 0a01 	add.w	sl, r5, #1
 801501a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801501e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015022:	b2bf      	uxth	r7, r7
 8015024:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015028:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801502c:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015030:	f107 0a01 	add.w	sl, r7, #1
 8015034:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015038:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801503c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015040:	9c02      	ldr	r4, [sp, #8]
 8015042:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015046:	f820 e004 	strh.w	lr, [r0, r4]
 801504a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801504c:	4421      	add	r1, r4
 801504e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015050:	3e01      	subs	r6, #1
 8015052:	4422      	add	r2, r4
 8015054:	e755      	b.n	8014f02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015056:	9c00      	ldr	r4, [sp, #0]
 8015058:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801505c:	f06f 0401 	mvn.w	r4, #1
 8015060:	4374      	muls	r4, r6
 8015062:	5305      	strh	r5, [r0, r4]
 8015064:	e7f1      	b.n	801504a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015066:	f04f 0900 	mov.w	r9, #0
 801506a:	eba3 0409 	sub.w	r4, r3, r9
 801506e:	2c00      	cmp	r4, #0
 8015070:	f77f af4a 	ble.w	8014f08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015074:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015078:	1414      	asrs	r4, r2, #16
 801507a:	140d      	asrs	r5, r1, #16
 801507c:	fb06 5504 	mla	r5, r6, r4, r5
 8015080:	9c01      	ldr	r4, [sp, #4]
 8015082:	5d64      	ldrb	r4, [r4, r5]
 8015084:	2cff      	cmp	r4, #255	; 0xff
 8015086:	d04f      	beq.n	8015128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8015088:	2c00      	cmp	r4, #0
 801508a:	d046      	beq.n	801511a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801508c:	9e00      	ldr	r6, [sp, #0]
 801508e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015092:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015096:	b2a7      	uxth	r7, r4
 8015098:	122e      	asrs	r6, r5, #8
 801509a:	43e4      	mvns	r4, r4
 801509c:	b2e4      	uxtb	r4, r4
 801509e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80150a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80150a6:	fb16 f604 	smulbb	r6, r6, r4
 80150aa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80150ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80150b2:	00ed      	lsls	r5, r5, #3
 80150b4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80150b8:	b2ed      	uxtb	r5, r5
 80150ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80150be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80150c2:	fb15 f504 	smulbb	r5, r5, r4
 80150c6:	fa5f fe8e 	uxtb.w	lr, lr
 80150ca:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80150ce:	fb0e 5507 	mla	r5, lr, r7, r5
 80150d2:	fb1a fa04 	smulbb	sl, sl, r4
 80150d6:	fa1f fc8c 	uxth.w	ip, ip
 80150da:	b2ad      	uxth	r5, r5
 80150dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150e0:	fb06 a607 	mla	r6, r6, r7, sl
 80150e4:	f10c 0401 	add.w	r4, ip, #1
 80150e8:	f105 0a01 	add.w	sl, r5, #1
 80150ec:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80150f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80150f4:	b2b6      	uxth	r6, r6
 80150f6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80150fa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80150fe:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015102:	f106 0a01 	add.w	sl, r6, #1
 8015106:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801510a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801510e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015112:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015116:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801511a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801511c:	4421      	add	r1, r4
 801511e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015120:	f109 0901 	add.w	r9, r9, #1
 8015124:	4422      	add	r2, r4
 8015126:	e7a0      	b.n	801506a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015128:	9c00      	ldr	r4, [sp, #0]
 801512a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801512e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015132:	e7f2      	b.n	801511a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015134:	b005      	add	sp, #20
 8015136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801513a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801513a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801513e:	b085      	sub	sp, #20
 8015140:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015142:	9203      	str	r2, [sp, #12]
 8015144:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015148:	9201      	str	r2, [sp, #4]
 801514a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801514e:	9100      	str	r1, [sp, #0]
 8015150:	6841      	ldr	r1, [r0, #4]
 8015152:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015156:	fb01 2404 	mla	r4, r1, r4, r2
 801515a:	6802      	ldr	r2, [r0, #0]
 801515c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015160:	f8de 2000 	ldr.w	r2, [lr]
 8015164:	9202      	str	r2, [sp, #8]
 8015166:	9a01      	ldr	r2, [sp, #4]
 8015168:	43d6      	mvns	r6, r2
 801516a:	b2f6      	uxtb	r6, r6
 801516c:	9a00      	ldr	r2, [sp, #0]
 801516e:	2a00      	cmp	r2, #0
 8015170:	dc03      	bgt.n	801517a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015172:	9a03      	ldr	r2, [sp, #12]
 8015174:	2a00      	cmp	r2, #0
 8015176:	f340 8124 	ble.w	80153c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801517a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801517c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015180:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015184:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015188:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801518a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801518e:	2b00      	cmp	r3, #0
 8015190:	dd0e      	ble.n	80151b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015192:	1408      	asrs	r0, r1, #16
 8015194:	d405      	bmi.n	80151a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015196:	4560      	cmp	r0, ip
 8015198:	da03      	bge.n	80151a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801519a:	1410      	asrs	r0, r2, #16
 801519c:	d401      	bmi.n	80151a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801519e:	42b8      	cmp	r0, r7
 80151a0:	db07      	blt.n	80151b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80151a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80151a4:	4401      	add	r1, r0
 80151a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80151a8:	3b01      	subs	r3, #1
 80151aa:	4402      	add	r2, r0
 80151ac:	3402      	adds	r4, #2
 80151ae:	e7ee      	b.n	801518e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80151b0:	d06e      	beq.n	8015290 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80151b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80151b4:	1e58      	subs	r0, r3, #1
 80151b6:	fb05 1500 	mla	r5, r5, r0, r1
 80151ba:	142d      	asrs	r5, r5, #16
 80151bc:	d45c      	bmi.n	8015278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80151be:	4565      	cmp	r5, ip
 80151c0:	da5a      	bge.n	8015278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80151c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80151c4:	fb05 2000 	mla	r0, r5, r0, r2
 80151c8:	1400      	asrs	r0, r0, #16
 80151ca:	d455      	bmi.n	8015278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80151cc:	42b8      	cmp	r0, r7
 80151ce:	da53      	bge.n	8015278 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80151d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80151d4:	4699      	mov	r9, r3
 80151d6:	46a2      	mov	sl, r4
 80151d8:	f1b9 0f00 	cmp.w	r9, #0
 80151dc:	dd54      	ble.n	8015288 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80151de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80151e2:	140d      	asrs	r5, r1, #16
 80151e4:	1410      	asrs	r0, r2, #16
 80151e6:	fb07 5000 	mla	r0, r7, r0, r5
 80151ea:	9d02      	ldr	r5, [sp, #8]
 80151ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80151f0:	f8ba 5000 	ldrh.w	r5, [sl]
 80151f4:	122f      	asrs	r7, r5, #8
 80151f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80151fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80151fe:	fb17 f706 	smulbb	r7, r7, r6
 8015202:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015206:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801520a:	00ed      	lsls	r5, r5, #3
 801520c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015210:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015214:	10c7      	asrs	r7, r0, #3
 8015216:	b2ed      	uxtb	r5, r5
 8015218:	00c0      	lsls	r0, r0, #3
 801521a:	fb18 f806 	smulbb	r8, r8, r6
 801521e:	fb15 f506 	smulbb	r5, r5, r6
 8015222:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015226:	b2c0      	uxtb	r0, r0
 8015228:	fa1f fc8c 	uxth.w	ip, ip
 801522c:	fb07 870b 	mla	r7, r7, fp, r8
 8015230:	fb00 500b 	mla	r0, r0, fp, r5
 8015234:	b280      	uxth	r0, r0
 8015236:	b2bf      	uxth	r7, r7
 8015238:	f10c 0501 	add.w	r5, ip, #1
 801523c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015240:	f107 0801 	add.w	r8, r7, #1
 8015244:	1c45      	adds	r5, r0, #1
 8015246:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801524a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801524e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015250:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015254:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015258:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801525c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015260:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015264:	4401      	add	r1, r0
 8015266:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015268:	ea4c 0c08 	orr.w	ip, ip, r8
 801526c:	f82a cb02 	strh.w	ip, [sl], #2
 8015270:	4402      	add	r2, r0
 8015272:	f109 39ff 	add.w	r9, r9, #4294967295
 8015276:	e7af      	b.n	80151d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015278:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801527c:	f04f 0800 	mov.w	r8, #0
 8015280:	eb03 0008 	add.w	r0, r3, r8
 8015284:	2800      	cmp	r0, #0
 8015286:	dc41      	bgt.n	801530c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015288:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801528c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015290:	9b00      	ldr	r3, [sp, #0]
 8015292:	2b00      	cmp	r3, #0
 8015294:	f340 8095 	ble.w	80153c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015298:	ee30 0a04 	vadd.f32	s0, s0, s8
 801529c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80152a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80152a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152b2:	eef0 6a62 	vmov.f32	s13, s5
 80152b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80152be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80152c2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80152c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80152ca:	eef0 6a43 	vmov.f32	s13, s6
 80152ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80152d2:	ee12 2a90 	vmov	r2, s5
 80152d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80152da:	fb92 f3f3 	sdiv	r3, r2, r3
 80152de:	ee13 2a10 	vmov	r2, s6
 80152e2:	9311      	str	r3, [sp, #68]	; 0x44
 80152e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80152ea:	9312      	str	r3, [sp, #72]	; 0x48
 80152ec:	9b00      	ldr	r3, [sp, #0]
 80152ee:	9a03      	ldr	r2, [sp, #12]
 80152f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80152f4:	3b01      	subs	r3, #1
 80152f6:	9300      	str	r3, [sp, #0]
 80152f8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80152fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152fe:	eeb0 3a67 	vmov.f32	s6, s15
 8015302:	bf08      	it	eq
 8015304:	4613      	moveq	r3, r2
 8015306:	eef0 2a47 	vmov.f32	s5, s14
 801530a:	e72f      	b.n	801516c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801530c:	140f      	asrs	r7, r1, #16
 801530e:	d451      	bmi.n	80153b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015310:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015314:	42bd      	cmp	r5, r7
 8015316:	dd4d      	ble.n	80153b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015318:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801531c:	d44a      	bmi.n	80153b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801531e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015322:	4560      	cmp	r0, ip
 8015324:	dd46      	ble.n	80153b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015326:	b22d      	sxth	r5, r5
 8015328:	fb0c 7505 	mla	r5, ip, r5, r7
 801532c:	9802      	ldr	r0, [sp, #8]
 801532e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015332:	f06f 0501 	mvn.w	r5, #1
 8015336:	fb05 fb08 	mul.w	fp, r5, r8
 801533a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801533e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015342:	122f      	asrs	r7, r5, #8
 8015344:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015348:	fb17 f706 	smulbb	r7, r7, r6
 801534c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015350:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015354:	00ed      	lsls	r5, r5, #3
 8015356:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801535a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801535e:	10c7      	asrs	r7, r0, #3
 8015360:	b2ed      	uxtb	r5, r5
 8015362:	00c0      	lsls	r0, r0, #3
 8015364:	fb19 f906 	smulbb	r9, r9, r6
 8015368:	fb15 f506 	smulbb	r5, r5, r6
 801536c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015370:	b2c0      	uxtb	r0, r0
 8015372:	fa1f fc8c 	uxth.w	ip, ip
 8015376:	fb07 970a 	mla	r7, r7, sl, r9
 801537a:	fb00 500a 	mla	r0, r0, sl, r5
 801537e:	b2bf      	uxth	r7, r7
 8015380:	b280      	uxth	r0, r0
 8015382:	f10c 0501 	add.w	r5, ip, #1
 8015386:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801538a:	f107 0901 	add.w	r9, r7, #1
 801538e:	1c45      	adds	r5, r0, #1
 8015390:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015394:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015398:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801539c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80153a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80153a4:	ea45 0c0c 	orr.w	ip, r5, ip
 80153a8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80153ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80153b0:	f824 c00b 	strh.w	ip, [r4, fp]
 80153b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80153b6:	4401      	add	r1, r0
 80153b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80153ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80153be:	4402      	add	r2, r0
 80153c0:	e75e      	b.n	8015280 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80153c2:	b005      	add	sp, #20
 80153c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153cc:	b085      	sub	sp, #20
 80153ce:	4693      	mov	fp, r2
 80153d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80153d2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80153d4:	6870      	ldr	r0, [r6, #4]
 80153d6:	9101      	str	r1, [sp, #4]
 80153d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80153dc:	fb00 2404 	mla	r4, r0, r4, r2
 80153e0:	6832      	ldr	r2, [r6, #0]
 80153e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80153e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80153ea:	682a      	ldr	r2, [r5, #0]
 80153ec:	9202      	str	r2, [sp, #8]
 80153ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80153f2:	9a01      	ldr	r2, [sp, #4]
 80153f4:	2a00      	cmp	r2, #0
 80153f6:	dc03      	bgt.n	8015400 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80153f8:	f1bb 0f00 	cmp.w	fp, #0
 80153fc:	f340 809a 	ble.w	8015534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015400:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015402:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015406:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801540a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801540e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015410:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015414:	2b00      	cmp	r3, #0
 8015416:	dd0c      	ble.n	8015432 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015418:	1406      	asrs	r6, r0, #16
 801541a:	d405      	bmi.n	8015428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801541c:	454e      	cmp	r6, r9
 801541e:	da03      	bge.n	8015428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015420:	1416      	asrs	r6, r2, #16
 8015422:	d401      	bmi.n	8015428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015424:	4546      	cmp	r6, r8
 8015426:	db05      	blt.n	8015434 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015428:	4470      	add	r0, lr
 801542a:	4462      	add	r2, ip
 801542c:	3b01      	subs	r3, #1
 801542e:	3402      	adds	r4, #2
 8015430:	e7f0      	b.n	8015414 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015432:	d00f      	beq.n	8015454 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015434:	1e5e      	subs	r6, r3, #1
 8015436:	fb0e 0706 	mla	r7, lr, r6, r0
 801543a:	143f      	asrs	r7, r7, #16
 801543c:	d541      	bpl.n	80154c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801543e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015442:	4698      	mov	r8, r3
 8015444:	9603      	str	r6, [sp, #12]
 8015446:	f1b8 0f00 	cmp.w	r8, #0
 801544a:	dc56      	bgt.n	80154fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801544c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015450:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015454:	9b01      	ldr	r3, [sp, #4]
 8015456:	2b00      	cmp	r3, #0
 8015458:	dd6c      	ble.n	8015534 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801545a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801545e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015462:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015466:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015468:	ee31 1a05 	vadd.f32	s2, s2, s10
 801546c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015470:	eeb0 6a62 	vmov.f32	s12, s5
 8015474:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015478:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801547c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015480:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015484:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015488:	eeb0 6a43 	vmov.f32	s12, s6
 801548c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015490:	ee12 2a90 	vmov	r2, s5
 8015494:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015498:	fb92 fef3 	sdiv	lr, r2, r3
 801549c:	ee13 2a10 	vmov	r2, s6
 80154a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80154a4:	9b01      	ldr	r3, [sp, #4]
 80154a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154aa:	3b01      	subs	r3, #1
 80154ac:	9301      	str	r3, [sp, #4]
 80154ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80154b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154b4:	eeb0 3a67 	vmov.f32	s6, s15
 80154b8:	bf08      	it	eq
 80154ba:	465b      	moveq	r3, fp
 80154bc:	eef0 2a47 	vmov.f32	s5, s14
 80154c0:	e797      	b.n	80153f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80154c2:	454f      	cmp	r7, r9
 80154c4:	dabb      	bge.n	801543e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80154c6:	fb0c 2606 	mla	r6, ip, r6, r2
 80154ca:	1436      	asrs	r6, r6, #16
 80154cc:	d4b7      	bmi.n	801543e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80154ce:	4546      	cmp	r6, r8
 80154d0:	dab5      	bge.n	801543e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80154d2:	461e      	mov	r6, r3
 80154d4:	46a0      	mov	r8, r4
 80154d6:	2e00      	cmp	r6, #0
 80154d8:	ddb8      	ble.n	801544c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80154da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80154de:	9902      	ldr	r1, [sp, #8]
 80154e0:	1417      	asrs	r7, r2, #16
 80154e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80154e6:	fb0a 9707 	mla	r7, sl, r7, r9
 80154ea:	4470      	add	r0, lr
 80154ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80154f0:	f828 7b02 	strh.w	r7, [r8], #2
 80154f4:	4462      	add	r2, ip
 80154f6:	3e01      	subs	r6, #1
 80154f8:	e7ed      	b.n	80154d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80154fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80154fe:	d414      	bmi.n	801552a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015500:	68ae      	ldr	r6, [r5, #8]
 8015502:	454e      	cmp	r6, r9
 8015504:	dd11      	ble.n	801552a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015506:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801550a:	d40e      	bmi.n	801552a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801550c:	68ef      	ldr	r7, [r5, #12]
 801550e:	4557      	cmp	r7, sl
 8015510:	dd0b      	ble.n	801552a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015512:	b236      	sxth	r6, r6
 8015514:	fb0a 9606 	mla	r6, sl, r6, r9
 8015518:	9f02      	ldr	r7, [sp, #8]
 801551a:	f06f 0101 	mvn.w	r1, #1
 801551e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015522:	fb01 f608 	mul.w	r6, r1, r8
 8015526:	9903      	ldr	r1, [sp, #12]
 8015528:	538f      	strh	r7, [r1, r6]
 801552a:	4470      	add	r0, lr
 801552c:	4462      	add	r2, ip
 801552e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015532:	e788      	b.n	8015446 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015534:	b005      	add	sp, #20
 8015536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801553a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801553a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801553e:	b085      	sub	sp, #20
 8015540:	468b      	mov	fp, r1
 8015542:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015544:	9202      	str	r2, [sp, #8]
 8015546:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801554a:	9203      	str	r2, [sp, #12]
 801554c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015550:	6841      	ldr	r1, [r0, #4]
 8015552:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015556:	fb01 2404 	mla	r4, r1, r4, r2
 801555a:	6802      	ldr	r2, [r0, #0]
 801555c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015560:	f8d8 2000 	ldr.w	r2, [r8]
 8015564:	9200      	str	r2, [sp, #0]
 8015566:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801556a:	f1bb 0f00 	cmp.w	fp, #0
 801556e:	dc03      	bgt.n	8015578 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015570:	9a02      	ldr	r2, [sp, #8]
 8015572:	2a00      	cmp	r2, #0
 8015574:	f340 8134 	ble.w	80157e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015578:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801557a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801557e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015582:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015586:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015588:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801558c:	2b00      	cmp	r3, #0
 801558e:	dd0e      	ble.n	80155ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015590:	1402      	asrs	r2, r0, #16
 8015592:	d405      	bmi.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015594:	42ba      	cmp	r2, r7
 8015596:	da03      	bge.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015598:	140a      	asrs	r2, r1, #16
 801559a:	d401      	bmi.n	80155a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801559c:	42b2      	cmp	r2, r6
 801559e:	db07      	blt.n	80155b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80155a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155a2:	4410      	add	r0, r2
 80155a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80155a6:	3b01      	subs	r3, #1
 80155a8:	4411      	add	r1, r2
 80155aa:	3402      	adds	r4, #2
 80155ac:	e7ee      	b.n	801558c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80155ae:	d019      	beq.n	80155e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80155b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80155b2:	1e5a      	subs	r2, r3, #1
 80155b4:	fb05 0502 	mla	r5, r5, r2, r0
 80155b8:	142d      	asrs	r5, r5, #16
 80155ba:	d409      	bmi.n	80155d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80155bc:	42bd      	cmp	r5, r7
 80155be:	da07      	bge.n	80155d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80155c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80155c2:	fb05 1202 	mla	r2, r5, r2, r1
 80155c6:	1412      	asrs	r2, r2, #16
 80155c8:	d402      	bmi.n	80155d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80155ca:	42b2      	cmp	r2, r6
 80155cc:	f2c0 80aa 	blt.w	8015724 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80155d0:	f04f 0c00 	mov.w	ip, #0
 80155d4:	eb03 020c 	add.w	r2, r3, ip
 80155d8:	2a00      	cmp	r2, #0
 80155da:	dc3e      	bgt.n	801565a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80155dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155e4:	f1bb 0f00 	cmp.w	fp, #0
 80155e8:	f340 80fa 	ble.w	80157e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80155ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80155fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015602:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015606:	eeb0 6a62 	vmov.f32	s12, s5
 801560a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801560e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015612:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015616:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801561a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801561e:	eeb0 6a43 	vmov.f32	s12, s6
 8015622:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015626:	ee12 2a90 	vmov	r2, s5
 801562a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801562e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015632:	ee13 2a10 	vmov	r2, s6
 8015636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801563a:	9311      	str	r3, [sp, #68]	; 0x44
 801563c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801563e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015642:	9a02      	ldr	r2, [sp, #8]
 8015644:	9312      	str	r3, [sp, #72]	; 0x48
 8015646:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801564a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801564c:	eeb0 3a67 	vmov.f32	s6, s15
 8015650:	bf08      	it	eq
 8015652:	4613      	moveq	r3, r2
 8015654:	eef0 2a47 	vmov.f32	s5, s14
 8015658:	e787      	b.n	801556a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801565a:	1406      	asrs	r6, r0, #16
 801565c:	d45b      	bmi.n	8015716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801565e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015662:	42b5      	cmp	r5, r6
 8015664:	dd57      	ble.n	8015716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8015666:	140f      	asrs	r7, r1, #16
 8015668:	d455      	bmi.n	8015716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801566a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801566e:	42ba      	cmp	r2, r7
 8015670:	dd51      	ble.n	8015716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8015672:	b22d      	sxth	r5, r5
 8015674:	fb07 6505 	mla	r5, r7, r5, r6
 8015678:	9a00      	ldr	r2, [sp, #0]
 801567a:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 801567e:	0e2e      	lsrs	r6, r5, #24
 8015680:	d049      	beq.n	8015716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8015682:	f06f 0201 	mvn.w	r2, #1
 8015686:	fb02 f20c 	mul.w	r2, r2, ip
 801568a:	9201      	str	r2, [sp, #4]
 801568c:	f834 e002 	ldrh.w	lr, [r4, r2]
 8015690:	9a03      	ldr	r2, [sp, #12]
 8015692:	4356      	muls	r6, r2
 8015694:	1c72      	adds	r2, r6, #1
 8015696:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801569a:	1212      	asrs	r2, r2, #8
 801569c:	fa1f f982 	uxth.w	r9, r2
 80156a0:	ea4f 272e 	mov.w	r7, lr, asr #8
 80156a4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80156a8:	43d2      	mvns	r2, r2
 80156aa:	b2d2      	uxtb	r2, r2
 80156ac:	fb16 f609 	smulbb	r6, r6, r9
 80156b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80156b4:	fb07 6702 	mla	r7, r7, r2, r6
 80156b8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80156bc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80156c0:	b2ed      	uxtb	r5, r5
 80156c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80156c6:	fa5f fe8e 	uxtb.w	lr, lr
 80156ca:	fb15 f509 	smulbb	r5, r5, r9
 80156ce:	fb0e 5502 	mla	r5, lr, r2, r5
 80156d2:	b2bf      	uxth	r7, r7
 80156d4:	fb1a fa09 	smulbb	sl, sl, r9
 80156d8:	b2ad      	uxth	r5, r5
 80156da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80156de:	fb06 a602 	mla	r6, r6, r2, sl
 80156e2:	1c7a      	adds	r2, r7, #1
 80156e4:	f105 0a01 	add.w	sl, r5, #1
 80156e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80156ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80156f0:	b2b6      	uxth	r6, r6
 80156f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80156f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80156fa:	ea4a 0707 	orr.w	r7, sl, r7
 80156fe:	f106 0a01 	add.w	sl, r6, #1
 8015702:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015706:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801570a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801570e:	9a01      	ldr	r2, [sp, #4]
 8015710:	ea47 070a 	orr.w	r7, r7, sl
 8015714:	52a7      	strh	r7, [r4, r2]
 8015716:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015718:	4410      	add	r0, r2
 801571a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801571c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015720:	4411      	add	r1, r2
 8015722:	e757      	b.n	80155d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015724:	f04f 0e00 	mov.w	lr, #0
 8015728:	eba3 020e 	sub.w	r2, r3, lr
 801572c:	2a00      	cmp	r2, #0
 801572e:	f77f af55 	ble.w	80155dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015732:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015736:	1405      	asrs	r5, r0, #16
 8015738:	140a      	asrs	r2, r1, #16
 801573a:	fb06 5202 	mla	r2, r6, r2, r5
 801573e:	9d00      	ldr	r5, [sp, #0]
 8015740:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015744:	0e2e      	lsrs	r6, r5, #24
 8015746:	d044      	beq.n	80157d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8015748:	9a03      	ldr	r2, [sp, #12]
 801574a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801574e:	4356      	muls	r6, r2
 8015750:	1c72      	adds	r2, r6, #1
 8015752:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015756:	1212      	asrs	r2, r2, #8
 8015758:	fa1f f982 	uxth.w	r9, r2
 801575c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015760:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015764:	43d2      	mvns	r2, r2
 8015766:	b2d2      	uxtb	r2, r2
 8015768:	fb16 f609 	smulbb	r6, r6, r9
 801576c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015770:	fb07 6702 	mla	r7, r7, r2, r6
 8015774:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015778:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801577c:	b2ed      	uxtb	r5, r5
 801577e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015782:	fa5f fc8c 	uxtb.w	ip, ip
 8015786:	fb15 f509 	smulbb	r5, r5, r9
 801578a:	fb0c 5502 	mla	r5, ip, r2, r5
 801578e:	b2bf      	uxth	r7, r7
 8015790:	fb1a fa09 	smulbb	sl, sl, r9
 8015794:	b2ad      	uxth	r5, r5
 8015796:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801579a:	fb06 a602 	mla	r6, r6, r2, sl
 801579e:	1c7a      	adds	r2, r7, #1
 80157a0:	f105 0a01 	add.w	sl, r5, #1
 80157a4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80157a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80157ac:	b2b6      	uxth	r6, r6
 80157ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80157b6:	ea4a 0707 	orr.w	r7, sl, r7
 80157ba:	f106 0a01 	add.w	sl, r6, #1
 80157be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157ca:	ea47 070a 	orr.w	r7, r7, sl
 80157ce:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80157d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80157d4:	4410      	add	r0, r2
 80157d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80157d8:	f10e 0e01 	add.w	lr, lr, #1
 80157dc:	4411      	add	r1, r2
 80157de:	e7a3      	b.n	8015728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80157e0:	b005      	add	sp, #20
 80157e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080157e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80157e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157ec:	b085      	sub	sp, #20
 80157ee:	468b      	mov	fp, r1
 80157f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80157f2:	9203      	str	r2, [sp, #12]
 80157f4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80157f8:	6861      	ldr	r1, [r4, #4]
 80157fa:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80157fe:	fb01 2000 	mla	r0, r1, r0, r2
 8015802:	6822      	ldr	r2, [r4, #0]
 8015804:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015808:	f8d9 2000 	ldr.w	r2, [r9]
 801580c:	9200      	str	r2, [sp, #0]
 801580e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015812:	f1bb 0f00 	cmp.w	fp, #0
 8015816:	dc03      	bgt.n	8015820 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015818:	9a03      	ldr	r2, [sp, #12]
 801581a:	2a00      	cmp	r2, #0
 801581c:	f340 814a 	ble.w	8015ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015820:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015822:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015826:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801582a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801582e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015830:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015834:	2b00      	cmp	r3, #0
 8015836:	dd0e      	ble.n	8015856 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015838:	140c      	asrs	r4, r1, #16
 801583a:	d405      	bmi.n	8015848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801583c:	42bc      	cmp	r4, r7
 801583e:	da03      	bge.n	8015848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015840:	1414      	asrs	r4, r2, #16
 8015842:	d401      	bmi.n	8015848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015844:	42b4      	cmp	r4, r6
 8015846:	db07      	blt.n	8015858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015848:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801584a:	4421      	add	r1, r4
 801584c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801584e:	3b01      	subs	r3, #1
 8015850:	4422      	add	r2, r4
 8015852:	3002      	adds	r0, #2
 8015854:	e7ee      	b.n	8015834 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015856:	d017      	beq.n	8015888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015858:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801585a:	1e5c      	subs	r4, r3, #1
 801585c:	fb05 1504 	mla	r5, r5, r4, r1
 8015860:	142d      	asrs	r5, r5, #16
 8015862:	d409      	bmi.n	8015878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015864:	42bd      	cmp	r5, r7
 8015866:	da07      	bge.n	8015878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015868:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801586a:	fb05 2404 	mla	r4, r5, r4, r2
 801586e:	1424      	asrs	r4, r4, #16
 8015870:	d402      	bmi.n	8015878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015872:	42b4      	cmp	r4, r6
 8015874:	f2c0 80ba 	blt.w	80159ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015878:	2700      	movs	r7, #0
 801587a:	19dc      	adds	r4, r3, r7
 801587c:	2c00      	cmp	r4, #0
 801587e:	dc3e      	bgt.n	80158fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015880:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015884:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015888:	f1bb 0f00 	cmp.w	fp, #0
 801588c:	f340 8112 	ble.w	8015ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015890:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015894:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015898:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801589c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801589e:	f1bb 0b01 	subs.w	fp, fp, #1
 80158a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80158a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80158aa:	eeb0 6a62 	vmov.f32	s12, s5
 80158ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80158ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80158be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80158c2:	eeb0 6a43 	vmov.f32	s12, s6
 80158c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80158ca:	ee12 2a90 	vmov	r2, s5
 80158ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80158d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158d6:	ee13 2a10 	vmov	r2, s6
 80158da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158de:	9311      	str	r3, [sp, #68]	; 0x44
 80158e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158e6:	9a03      	ldr	r2, [sp, #12]
 80158e8:	9312      	str	r3, [sp, #72]	; 0x48
 80158ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80158ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158f0:	eeb0 3a67 	vmov.f32	s6, s15
 80158f4:	bf08      	it	eq
 80158f6:	4613      	moveq	r3, r2
 80158f8:	eef0 2a47 	vmov.f32	s5, s14
 80158fc:	e789      	b.n	8015812 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80158fe:	140e      	asrs	r6, r1, #16
 8015900:	d45f      	bmi.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8015902:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8015906:	42b5      	cmp	r5, r6
 8015908:	dd5b      	ble.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801590a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801590e:	d458      	bmi.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8015910:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8015914:	4564      	cmp	r4, ip
 8015916:	dd54      	ble.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8015918:	b22d      	sxth	r5, r5
 801591a:	fb0c 6505 	mla	r5, ip, r5, r6
 801591e:	9c00      	ldr	r4, [sp, #0]
 8015920:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 8015924:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 8015928:	d04b      	beq.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801592a:	fa5f f48e 	uxtb.w	r4, lr
 801592e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015932:	9401      	str	r4, [sp, #4]
 8015934:	ea4f 461c 	mov.w	r6, ip, lsr #16
 8015938:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801593c:	f06f 0401 	mvn.w	r4, #1
 8015940:	fa5f fc8c 	uxtb.w	ip, ip
 8015944:	d043      	beq.n	80159ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015946:	437c      	muls	r4, r7
 8015948:	9402      	str	r4, [sp, #8]
 801594a:	f830 8004 	ldrh.w	r8, [r0, r4]
 801594e:	9c01      	ldr	r4, [sp, #4]
 8015950:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015954:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015958:	43e4      	mvns	r4, r4
 801595a:	b2f6      	uxtb	r6, r6
 801595c:	b2e4      	uxtb	r4, r4
 801595e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015962:	fb16 f60a 	smulbb	r6, r6, sl
 8015966:	fb0e 6604 	mla	r6, lr, r4, r6
 801596a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 801596e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015972:	fa5f f888 	uxtb.w	r8, r8
 8015976:	fb1c fc0a 	smulbb	ip, ip, sl
 801597a:	fb08 cc04 	mla	ip, r8, r4, ip
 801597e:	b2ed      	uxtb	r5, r5
 8015980:	b2b6      	uxth	r6, r6
 8015982:	fb15 f50a 	smulbb	r5, r5, sl
 8015986:	fa1f fc8c 	uxth.w	ip, ip
 801598a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801598e:	fb0e 5e04 	mla	lr, lr, r4, r5
 8015992:	1c74      	adds	r4, r6, #1
 8015994:	f10c 0501 	add.w	r5, ip, #1
 8015998:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801599c:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 80159a0:	fa1f fe8e 	uxth.w	lr, lr
 80159a4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80159a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80159ac:	432e      	orrs	r6, r5
 80159ae:	f10e 0501 	add.w	r5, lr, #1
 80159b2:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 80159b6:	096d      	lsrs	r5, r5, #5
 80159b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80159bc:	9c02      	ldr	r4, [sp, #8]
 80159be:	432e      	orrs	r6, r5
 80159c0:	5306      	strh	r6, [r0, r4]
 80159c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80159c4:	4421      	add	r1, r4
 80159c6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80159c8:	3f01      	subs	r7, #1
 80159ca:	4422      	add	r2, r4
 80159cc:	e755      	b.n	801587a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159ce:	fb04 fe07 	mul.w	lr, r4, r7
 80159d2:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 80159d6:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 80159da:	00ed      	lsls	r5, r5, #3
 80159dc:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 80159e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80159e4:	432e      	orrs	r6, r5
 80159e6:	f820 600e 	strh.w	r6, [r0, lr]
 80159ea:	e7ea      	b.n	80159c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80159ec:	f04f 0800 	mov.w	r8, #0
 80159f0:	eba3 0408 	sub.w	r4, r3, r8
 80159f4:	2c00      	cmp	r4, #0
 80159f6:	f77f af43 	ble.w	8015880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80159fa:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80159fe:	140d      	asrs	r5, r1, #16
 8015a00:	1414      	asrs	r4, r2, #16
 8015a02:	fb06 5404 	mla	r4, r6, r4, r5
 8015a06:	9d00      	ldr	r5, [sp, #0]
 8015a08:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 8015a0c:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 8015a10:	d042      	beq.n	8015a98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015a12:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a16:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8015a1a:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8015a1e:	fa5f f48c 	uxtb.w	r4, ip
 8015a22:	b2ff      	uxtb	r7, r7
 8015a24:	d03f      	beq.n	8015aa6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8015a26:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8015a2a:	fa1f fa84 	uxth.w	sl, r4
 8015a2e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015a32:	43e4      	mvns	r4, r4
 8015a34:	b2ed      	uxtb	r5, r5
 8015a36:	b2e4      	uxtb	r4, r4
 8015a38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a3c:	fb15 f50a 	smulbb	r5, r5, sl
 8015a40:	fb0c 5504 	mla	r5, ip, r4, r5
 8015a44:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8015a48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a4c:	fa5f fe8e 	uxtb.w	lr, lr
 8015a50:	fb17 f70a 	smulbb	r7, r7, sl
 8015a54:	fb0e 7704 	mla	r7, lr, r4, r7
 8015a58:	b2f6      	uxtb	r6, r6
 8015a5a:	b2ad      	uxth	r5, r5
 8015a5c:	fb16 f60a 	smulbb	r6, r6, sl
 8015a60:	b2bf      	uxth	r7, r7
 8015a62:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015a66:	fb0c 6c04 	mla	ip, ip, r4, r6
 8015a6a:	1c6c      	adds	r4, r5, #1
 8015a6c:	1c7e      	adds	r6, r7, #1
 8015a6e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 8015a72:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015a76:	fa1f fc8c 	uxth.w	ip, ip
 8015a7a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015a7e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8015a82:	4335      	orrs	r5, r6
 8015a84:	f10c 0601 	add.w	r6, ip, #1
 8015a88:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015a8c:	0976      	lsrs	r6, r6, #5
 8015a8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a92:	4335      	orrs	r5, r6
 8015a94:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 8015a98:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015a9a:	4421      	add	r1, r4
 8015a9c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015a9e:	f108 0801 	add.w	r8, r8, #1
 8015aa2:	4422      	add	r2, r4
 8015aa4:	e7a4      	b.n	80159f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015aa6:	4c05      	ldr	r4, [pc, #20]	; (8015abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 8015aa8:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 8015aac:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8015ab0:	00f6      	lsls	r6, r6, #3
 8015ab2:	e7ec      	b.n	8015a8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015ab4:	b005      	add	sp, #20
 8015ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015aba:	bf00      	nop
 8015abc:	fffff800 	.word	0xfffff800

08015ac0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ac4:	b087      	sub	sp, #28
 8015ac6:	468b      	mov	fp, r1
 8015ac8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015aca:	9204      	str	r2, [sp, #16]
 8015acc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015ad0:	9205      	str	r2, [sp, #20]
 8015ad2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015ad6:	6841      	ldr	r1, [r0, #4]
 8015ad8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8015adc:	fb01 2404 	mla	r4, r1, r4, r2
 8015ae0:	6802      	ldr	r2, [r0, #0]
 8015ae2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ae6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015aea:	3201      	adds	r2, #1
 8015aec:	f022 0201 	bic.w	r2, r2, #1
 8015af0:	9201      	str	r2, [sp, #4]
 8015af2:	f8d8 2000 	ldr.w	r2, [r8]
 8015af6:	9202      	str	r2, [sp, #8]
 8015af8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015afc:	f1bb 0f00 	cmp.w	fp, #0
 8015b00:	dc03      	bgt.n	8015b0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015b02:	9a04      	ldr	r2, [sp, #16]
 8015b04:	2a00      	cmp	r2, #0
 8015b06:	f340 8146 	ble.w	8015d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015b0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015b0c:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015b10:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015b14:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015b18:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015b1a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b1e:	2b00      	cmp	r3, #0
 8015b20:	dd0e      	ble.n	8015b40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015b22:	1402      	asrs	r2, r0, #16
 8015b24:	d405      	bmi.n	8015b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b26:	42ba      	cmp	r2, r7
 8015b28:	da03      	bge.n	8015b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b2a:	140a      	asrs	r2, r1, #16
 8015b2c:	d401      	bmi.n	8015b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b2e:	42b2      	cmp	r2, r6
 8015b30:	db07      	blt.n	8015b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015b32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015b34:	4410      	add	r0, r2
 8015b36:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015b38:	3b01      	subs	r3, #1
 8015b3a:	4411      	add	r1, r2
 8015b3c:	3402      	adds	r4, #2
 8015b3e:	e7ee      	b.n	8015b1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015b40:	d017      	beq.n	8015b72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015b42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015b44:	1e5a      	subs	r2, r3, #1
 8015b46:	fb05 0502 	mla	r5, r5, r2, r0
 8015b4a:	142d      	asrs	r5, r5, #16
 8015b4c:	d409      	bmi.n	8015b62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015b4e:	42bd      	cmp	r5, r7
 8015b50:	da07      	bge.n	8015b62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015b52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015b54:	fb05 1202 	mla	r2, r5, r2, r1
 8015b58:	1412      	asrs	r2, r2, #16
 8015b5a:	d402      	bmi.n	8015b62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015b5c:	42b2      	cmp	r2, r6
 8015b5e:	f2c0 80b3 	blt.w	8015cc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015b62:	2700      	movs	r7, #0
 8015b64:	19da      	adds	r2, r3, r7
 8015b66:	2a00      	cmp	r2, #0
 8015b68:	dc3e      	bgt.n	8015be8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015b6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b72:	f1bb 0f00 	cmp.w	fp, #0
 8015b76:	f340 810e 	ble.w	8015d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015b7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b88:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b94:	eeb0 6a62 	vmov.f32	s12, s5
 8015b98:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ba0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ba4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015ba8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bac:	eeb0 6a43 	vmov.f32	s12, s6
 8015bb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bb4:	ee12 2a90 	vmov	r2, s5
 8015bb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bc0:	ee13 2a10 	vmov	r2, s6
 8015bc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bc8:	9313      	str	r3, [sp, #76]	; 0x4c
 8015bca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bd0:	9a04      	ldr	r2, [sp, #16]
 8015bd2:	9314      	str	r3, [sp, #80]	; 0x50
 8015bd4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015bd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bda:	eeb0 3a67 	vmov.f32	s6, s15
 8015bde:	bf08      	it	eq
 8015be0:	4613      	moveq	r3, r2
 8015be2:	eef0 2a47 	vmov.f32	s5, s14
 8015be6:	e789      	b.n	8015afc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015be8:	1405      	asrs	r5, r0, #16
 8015bea:	d467      	bmi.n	8015cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015bec:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015bf0:	42aa      	cmp	r2, r5
 8015bf2:	dd63      	ble.n	8015cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015bf4:	140e      	asrs	r6, r1, #16
 8015bf6:	d461      	bmi.n	8015cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015bf8:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8015bfc:	42b2      	cmp	r2, r6
 8015bfe:	dd5d      	ble.n	8015cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015c00:	9a01      	ldr	r2, [sp, #4]
 8015c02:	fb06 5502 	mla	r5, r6, r2, r5
 8015c06:	086a      	lsrs	r2, r5, #1
 8015c08:	9e02      	ldr	r6, [sp, #8]
 8015c0a:	5cb2      	ldrb	r2, [r6, r2]
 8015c0c:	07ee      	lsls	r6, r5, #31
 8015c0e:	bf54      	ite	pl
 8015c10:	f002 020f 	andpl.w	r2, r2, #15
 8015c14:	1112      	asrmi	r2, r2, #4
 8015c16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015c1a:	b2d2      	uxtb	r2, r2
 8015c1c:	2a00      	cmp	r2, #0
 8015c1e:	d04d      	beq.n	8015cbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015c20:	4d5e      	ldr	r5, [pc, #376]	; (8015d9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015c22:	f8d5 c000 	ldr.w	ip, [r5]
 8015c26:	f06f 0501 	mvn.w	r5, #1
 8015c2a:	437d      	muls	r5, r7
 8015c2c:	9503      	str	r5, [sp, #12]
 8015c2e:	f834 e005 	ldrh.w	lr, [r4, r5]
 8015c32:	9d05      	ldr	r5, [sp, #20]
 8015c34:	436a      	muls	r2, r5
 8015c36:	1c55      	adds	r5, r2, #1
 8015c38:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015c3c:	1212      	asrs	r2, r2, #8
 8015c3e:	fa1f f982 	uxth.w	r9, r2
 8015c42:	ea4f 262e 	mov.w	r6, lr, asr #8
 8015c46:	f3cc 4507 	ubfx	r5, ip, #16, #8
 8015c4a:	43d2      	mvns	r2, r2
 8015c4c:	b2d2      	uxtb	r2, r2
 8015c4e:	fb15 f509 	smulbb	r5, r5, r9
 8015c52:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015c56:	fb06 5602 	mla	r6, r6, r2, r5
 8015c5a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015c5e:	ea4f 05ee 	mov.w	r5, lr, asr #3
 8015c62:	fa5f fc8c 	uxtb.w	ip, ip
 8015c66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015c6a:	fa5f fe8e 	uxtb.w	lr, lr
 8015c6e:	fb1c fc09 	smulbb	ip, ip, r9
 8015c72:	fb0e cc02 	mla	ip, lr, r2, ip
 8015c76:	b2b6      	uxth	r6, r6
 8015c78:	fb1a fa09 	smulbb	sl, sl, r9
 8015c7c:	fa1f fc8c 	uxth.w	ip, ip
 8015c80:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015c84:	fb05 a502 	mla	r5, r5, r2, sl
 8015c88:	1c72      	adds	r2, r6, #1
 8015c8a:	f10c 0a01 	add.w	sl, ip, #1
 8015c8e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015c92:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015c96:	b2ad      	uxth	r5, r5
 8015c98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c9c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015ca0:	ea4a 0606 	orr.w	r6, sl, r6
 8015ca4:	f105 0a01 	add.w	sl, r5, #1
 8015ca8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015cac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cb0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cb4:	9a03      	ldr	r2, [sp, #12]
 8015cb6:	ea46 060a 	orr.w	r6, r6, sl
 8015cba:	52a6      	strh	r6, [r4, r2]
 8015cbc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015cbe:	4410      	add	r0, r2
 8015cc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015cc2:	3f01      	subs	r7, #1
 8015cc4:	4411      	add	r1, r2
 8015cc6:	e74d      	b.n	8015b64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015cc8:	f04f 0e00 	mov.w	lr, #0
 8015ccc:	eba3 020e 	sub.w	r2, r3, lr
 8015cd0:	2a00      	cmp	r2, #0
 8015cd2:	f77f af4a 	ble.w	8015b6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015cd6:	9e01      	ldr	r6, [sp, #4]
 8015cd8:	1402      	asrs	r2, r0, #16
 8015cda:	140d      	asrs	r5, r1, #16
 8015cdc:	fb06 2505 	mla	r5, r6, r5, r2
 8015ce0:	086a      	lsrs	r2, r5, #1
 8015ce2:	9e02      	ldr	r6, [sp, #8]
 8015ce4:	5cb2      	ldrb	r2, [r6, r2]
 8015ce6:	07ed      	lsls	r5, r5, #31
 8015ce8:	bf54      	ite	pl
 8015cea:	f002 020f 	andpl.w	r2, r2, #15
 8015cee:	1112      	asrmi	r2, r2, #4
 8015cf0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015cf4:	b2d2      	uxtb	r2, r2
 8015cf6:	2a00      	cmp	r2, #0
 8015cf8:	d046      	beq.n	8015d88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015cfa:	4d28      	ldr	r5, [pc, #160]	; (8015d9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015cfc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015d00:	682f      	ldr	r7, [r5, #0]
 8015d02:	9d05      	ldr	r5, [sp, #20]
 8015d04:	436a      	muls	r2, r5
 8015d06:	1c55      	adds	r5, r2, #1
 8015d08:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015d0c:	1212      	asrs	r2, r2, #8
 8015d0e:	fa1f f982 	uxth.w	r9, r2
 8015d12:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015d16:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015d1a:	43d2      	mvns	r2, r2
 8015d1c:	b2d2      	uxtb	r2, r2
 8015d1e:	fb15 f509 	smulbb	r5, r5, r9
 8015d22:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015d26:	fb06 5602 	mla	r6, r6, r2, r5
 8015d2a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015d2e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015d32:	b2ff      	uxtb	r7, r7
 8015d34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015d38:	fa5f fc8c 	uxtb.w	ip, ip
 8015d3c:	fb17 f709 	smulbb	r7, r7, r9
 8015d40:	fb0c 7702 	mla	r7, ip, r2, r7
 8015d44:	b2b6      	uxth	r6, r6
 8015d46:	fb1a fa09 	smulbb	sl, sl, r9
 8015d4a:	b2bf      	uxth	r7, r7
 8015d4c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015d50:	fb05 a502 	mla	r5, r5, r2, sl
 8015d54:	1c72      	adds	r2, r6, #1
 8015d56:	f107 0a01 	add.w	sl, r7, #1
 8015d5a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015d5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015d62:	b2ad      	uxth	r5, r5
 8015d64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d68:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015d6c:	ea4a 0606 	orr.w	r6, sl, r6
 8015d70:	f105 0a01 	add.w	sl, r5, #1
 8015d74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d80:	ea46 060a 	orr.w	r6, r6, sl
 8015d84:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015d88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d8a:	4410      	add	r0, r2
 8015d8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015d8e:	f10e 0e01 	add.w	lr, lr, #1
 8015d92:	4411      	add	r1, r2
 8015d94:	e79a      	b.n	8015ccc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8015d96:	b007      	add	sp, #28
 8015d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d9c:	2000eb38 	.word	0x2000eb38

08015da0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015da4:	b087      	sub	sp, #28
 8015da6:	468b      	mov	fp, r1
 8015da8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015daa:	9205      	str	r2, [sp, #20]
 8015dac:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015db0:	6841      	ldr	r1, [r0, #4]
 8015db2:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8015db6:	fb01 2404 	mla	r4, r1, r4, r2
 8015dba:	6802      	ldr	r2, [r0, #0]
 8015dbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015dc0:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015dc4:	3201      	adds	r2, #1
 8015dc6:	f022 0201 	bic.w	r2, r2, #1
 8015dca:	9201      	str	r2, [sp, #4]
 8015dcc:	f8d8 2000 	ldr.w	r2, [r8]
 8015dd0:	9202      	str	r2, [sp, #8]
 8015dd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015dd6:	f1bb 0f00 	cmp.w	fp, #0
 8015dda:	dc03      	bgt.n	8015de4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015ddc:	9a05      	ldr	r2, [sp, #20]
 8015dde:	2a00      	cmp	r2, #0
 8015de0:	f340 8159 	ble.w	8016096 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8015de4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015de6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015dea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015dee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015df2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015df4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015df8:	2b00      	cmp	r3, #0
 8015dfa:	dd0e      	ble.n	8015e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015dfc:	1402      	asrs	r2, r0, #16
 8015dfe:	d405      	bmi.n	8015e0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e00:	42ba      	cmp	r2, r7
 8015e02:	da03      	bge.n	8015e0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e04:	140a      	asrs	r2, r1, #16
 8015e06:	d401      	bmi.n	8015e0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e08:	42b2      	cmp	r2, r6
 8015e0a:	db07      	blt.n	8015e1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015e0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015e0e:	4410      	add	r0, r2
 8015e10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015e12:	3b01      	subs	r3, #1
 8015e14:	4411      	add	r1, r2
 8015e16:	3402      	adds	r4, #2
 8015e18:	e7ee      	b.n	8015df8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015e1a:	d017      	beq.n	8015e4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015e1c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015e1e:	1e5a      	subs	r2, r3, #1
 8015e20:	fb05 0502 	mla	r5, r5, r2, r0
 8015e24:	142d      	asrs	r5, r5, #16
 8015e26:	d409      	bmi.n	8015e3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e28:	42bd      	cmp	r5, r7
 8015e2a:	da07      	bge.n	8015e3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e2c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015e2e:	fb05 1202 	mla	r2, r5, r2, r1
 8015e32:	1412      	asrs	r2, r2, #16
 8015e34:	d402      	bmi.n	8015e3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e36:	42b2      	cmp	r2, r6
 8015e38:	f2c0 80c3 	blt.w	8015fc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8015e3c:	2700      	movs	r7, #0
 8015e3e:	19da      	adds	r2, r3, r7
 8015e40:	2a00      	cmp	r2, #0
 8015e42:	dc3e      	bgt.n	8015ec2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015e44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e4c:	f1bb 0f00 	cmp.w	fp, #0
 8015e50:	f340 8121 	ble.w	8016096 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8015e54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e62:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e6e:	eeb0 6a62 	vmov.f32	s12, s5
 8015e72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e7e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015e82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e86:	eeb0 6a43 	vmov.f32	s12, s6
 8015e8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e8e:	ee12 2a90 	vmov	r2, s5
 8015e92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e96:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e9a:	ee13 2a10 	vmov	r2, s6
 8015e9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ea2:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ea4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ea6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015eaa:	9a05      	ldr	r2, [sp, #20]
 8015eac:	9314      	str	r3, [sp, #80]	; 0x50
 8015eae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015eb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015eb4:	eeb0 3a67 	vmov.f32	s6, s15
 8015eb8:	bf08      	it	eq
 8015eba:	4613      	moveq	r3, r2
 8015ebc:	eef0 2a47 	vmov.f32	s5, s14
 8015ec0:	e789      	b.n	8015dd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015ec2:	1405      	asrs	r5, r0, #16
 8015ec4:	d465      	bmi.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015ec6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8015eca:	42aa      	cmp	r2, r5
 8015ecc:	dd61      	ble.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015ece:	140e      	asrs	r6, r1, #16
 8015ed0:	d45f      	bmi.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015ed2:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8015ed6:	42b2      	cmp	r2, r6
 8015ed8:	dd5b      	ble.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015eda:	9a01      	ldr	r2, [sp, #4]
 8015edc:	fb06 5502 	mla	r5, r6, r2, r5
 8015ee0:	086a      	lsrs	r2, r5, #1
 8015ee2:	9e02      	ldr	r6, [sp, #8]
 8015ee4:	5cb2      	ldrb	r2, [r6, r2]
 8015ee6:	07ee      	lsls	r6, r5, #31
 8015ee8:	bf54      	ite	pl
 8015eea:	f002 020f 	andpl.w	r2, r2, #15
 8015eee:	1112      	asrmi	r2, r2, #4
 8015ef0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015ef4:	b2d2      	uxtb	r2, r2
 8015ef6:	2a00      	cmp	r2, #0
 8015ef8:	d04b      	beq.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015efa:	4d68      	ldr	r5, [pc, #416]	; (801609c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8015efc:	f8d5 9000 	ldr.w	r9, [r5]
 8015f00:	2aff      	cmp	r2, #255	; 0xff
 8015f02:	ea4f 2519 	mov.w	r5, r9, lsr #8
 8015f06:	ea4f 4619 	mov.w	r6, r9, lsr #16
 8015f0a:	9503      	str	r5, [sp, #12]
 8015f0c:	fa5f f989 	uxtb.w	r9, r9
 8015f10:	d045      	beq.n	8015f9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f12:	f06f 0501 	mvn.w	r5, #1
 8015f16:	437d      	muls	r5, r7
 8015f18:	fa1f fa82 	uxth.w	sl, r2
 8015f1c:	f834 e005 	ldrh.w	lr, [r4, r5]
 8015f20:	9504      	str	r5, [sp, #16]
 8015f22:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015f26:	43d2      	mvns	r2, r2
 8015f28:	b2f6      	uxtb	r6, r6
 8015f2a:	b2d2      	uxtb	r2, r2
 8015f2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f30:	fb16 f60a 	smulbb	r6, r6, sl
 8015f34:	fb0c 6602 	mla	r6, ip, r2, r6
 8015f38:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8015f3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f40:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8015f44:	fa5f fe8e 	uxtb.w	lr, lr
 8015f48:	fb19 f90a 	smulbb	r9, r9, sl
 8015f4c:	fb0e 9902 	mla	r9, lr, r2, r9
 8015f50:	b2b6      	uxth	r6, r6
 8015f52:	fb15 f50a 	smulbb	r5, r5, sl
 8015f56:	fa1f f989 	uxth.w	r9, r9
 8015f5a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015f5e:	fb0c 5c02 	mla	ip, ip, r2, r5
 8015f62:	1c72      	adds	r2, r6, #1
 8015f64:	f109 0501 	add.w	r5, r9, #1
 8015f68:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015f6c:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8015f70:	fa1f fc8c 	uxth.w	ip, ip
 8015f74:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015f78:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015f7c:	432e      	orrs	r6, r5
 8015f7e:	f10c 0501 	add.w	r5, ip, #1
 8015f82:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 8015f86:	096d      	lsrs	r5, r5, #5
 8015f88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015f8c:	9a04      	ldr	r2, [sp, #16]
 8015f8e:	432e      	orrs	r6, r5
 8015f90:	52a6      	strh	r6, [r4, r2]
 8015f92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f94:	4410      	add	r0, r2
 8015f96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f98:	3f01      	subs	r7, #1
 8015f9a:	4411      	add	r1, r2
 8015f9c:	e74f      	b.n	8015e3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015f9e:	f06f 0201 	mvn.w	r2, #1
 8015fa2:	fb02 fc07 	mul.w	ip, r2, r7
 8015fa6:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 8015faa:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 8015fae:	9a03      	ldr	r2, [sp, #12]
 8015fb0:	00d5      	lsls	r5, r2, #3
 8015fb2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8015fb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015fba:	432e      	orrs	r6, r5
 8015fbc:	f824 600c 	strh.w	r6, [r4, ip]
 8015fc0:	e7e7      	b.n	8015f92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015fc2:	f04f 0e00 	mov.w	lr, #0
 8015fc6:	eba3 020e 	sub.w	r2, r3, lr
 8015fca:	2a00      	cmp	r2, #0
 8015fcc:	f77f af3a 	ble.w	8015e44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015fd0:	9e01      	ldr	r6, [sp, #4]
 8015fd2:	1402      	asrs	r2, r0, #16
 8015fd4:	140d      	asrs	r5, r1, #16
 8015fd6:	fb06 2505 	mla	r5, r6, r5, r2
 8015fda:	086a      	lsrs	r2, r5, #1
 8015fdc:	9e02      	ldr	r6, [sp, #8]
 8015fde:	5cb2      	ldrb	r2, [r6, r2]
 8015fe0:	07ed      	lsls	r5, r5, #31
 8015fe2:	bf54      	ite	pl
 8015fe4:	f002 020f 	andpl.w	r2, r2, #15
 8015fe8:	1112      	asrmi	r2, r2, #4
 8015fea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015fee:	b2d2      	uxtb	r2, r2
 8015ff0:	2a00      	cmp	r2, #0
 8015ff2:	d042      	beq.n	801607a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8015ff4:	4d29      	ldr	r5, [pc, #164]	; (801609c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8015ff6:	682f      	ldr	r7, [r5, #0]
 8015ff8:	2aff      	cmp	r2, #255	; 0xff
 8015ffa:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8015ffe:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8016002:	fa5f f987 	uxtb.w	r9, r7
 8016006:	d03f      	beq.n	8016088 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8016008:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801600c:	fa1f fa82 	uxth.w	sl, r2
 8016010:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016014:	43d2      	mvns	r2, r2
 8016016:	b2ed      	uxtb	r5, r5
 8016018:	b2d2      	uxtb	r2, r2
 801601a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801601e:	fb15 f50a 	smulbb	r5, r5, sl
 8016022:	fb07 5502 	mla	r5, r7, r2, r5
 8016026:	ea4f 07ec 	mov.w	r7, ip, asr #3
 801602a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801602e:	fa5f fc8c 	uxtb.w	ip, ip
 8016032:	fb19 f90a 	smulbb	r9, r9, sl
 8016036:	fb0c 9902 	mla	r9, ip, r2, r9
 801603a:	b2f6      	uxtb	r6, r6
 801603c:	b2ad      	uxth	r5, r5
 801603e:	fb16 f60a 	smulbb	r6, r6, sl
 8016042:	fa1f f989 	uxth.w	r9, r9
 8016046:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801604a:	fb07 6702 	mla	r7, r7, r2, r6
 801604e:	1c6a      	adds	r2, r5, #1
 8016050:	f109 0601 	add.w	r6, r9, #1
 8016054:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016058:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801605c:	b2bf      	uxth	r7, r7
 801605e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016062:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016066:	4335      	orrs	r5, r6
 8016068:	1c7e      	adds	r6, r7, #1
 801606a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801606e:	0976      	lsrs	r6, r6, #5
 8016070:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016074:	4335      	orrs	r5, r6
 8016076:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 801607a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801607c:	4410      	add	r0, r2
 801607e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016080:	f10e 0e01 	add.w	lr, lr, #1
 8016084:	4411      	add	r1, r2
 8016086:	e79e      	b.n	8015fc6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016088:	4a05      	ldr	r2, [pc, #20]	; (80160a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 801608a:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 801608e:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8016092:	00f6      	lsls	r6, r6, #3
 8016094:	e7ec      	b.n	8016070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8016096:	b007      	add	sp, #28
 8016098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801609c:	2000eb38 	.word	0x2000eb38
 80160a0:	fffff800 	.word	0xfffff800

080160a4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80160a4:	4770      	bx	lr

080160a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80160a6:	4770      	bx	lr

080160a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80160a8:	4770      	bx	lr

080160aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80160aa:	4770      	bx	lr

080160ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80160ac:	4770      	bx	lr

080160ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80160ae:	4770      	bx	lr

080160b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80160b0:	4770      	bx	lr

080160b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80160b2:	4770      	bx	lr

080160b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80160b4:	4770      	bx	lr

080160b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80160b6:	4770      	bx	lr

080160b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80160b8:	4770      	bx	lr

080160ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80160ba:	4770      	bx	lr

080160bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80160bc:	4770      	bx	lr

080160be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80160be:	4770      	bx	lr

080160c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80160c0:	4770      	bx	lr

080160c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80160c2:	4770      	bx	lr

080160c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80160c4:	4770      	bx	lr

080160c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80160c6:	4770      	bx	lr

080160c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80160c8:	4770      	bx	lr

080160ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80160ca:	4770      	bx	lr

080160cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80160cc:	4770      	bx	lr

080160ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80160ce:	4770      	bx	lr

080160d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80160d0:	4770      	bx	lr

080160d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80160d2:	4770      	bx	lr

080160d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80160d4:	4770      	bx	lr

080160d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80160d6:	4770      	bx	lr

080160d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80160d8:	4770      	bx	lr

080160da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80160da:	4770      	bx	lr

080160dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80160dc:	4770      	bx	lr
	...

080160e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80160e0:	b508      	push	{r3, lr}
 80160e2:	4b06      	ldr	r3, [pc, #24]	; (80160fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80160e4:	8818      	ldrh	r0, [r3, #0]
 80160e6:	b928      	cbnz	r0, 80160f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80160e8:	4b05      	ldr	r3, [pc, #20]	; (8016100 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80160ea:	4a06      	ldr	r2, [pc, #24]	; (8016104 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80160ec:	4806      	ldr	r0, [pc, #24]	; (8016108 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80160ee:	2150      	movs	r1, #80	; 0x50
 80160f0:	f00a fea6 	bl	8020e40 <__assert_func>
 80160f4:	0040      	lsls	r0, r0, #1
 80160f6:	b280      	uxth	r0, r0
 80160f8:	bd08      	pop	{r3, pc}
 80160fa:	bf00      	nop
 80160fc:	2000eb0a 	.word	0x2000eb0a
 8016100:	080255b0 	.word	0x080255b0
 8016104:	08025ba8 	.word	0x08025ba8
 8016108:	080255f2 	.word	0x080255f2

0801610c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801610c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016110:	b08b      	sub	sp, #44	; 0x2c
 8016112:	460f      	mov	r7, r1
 8016114:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016118:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801611c:	4616      	mov	r6, r2
 801611e:	f1bb 0f00 	cmp.w	fp, #0
 8016122:	d046      	beq.n	80161b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8016124:	6810      	ldr	r0, [r2, #0]
 8016126:	6851      	ldr	r1, [r2, #4]
 8016128:	ad06      	add	r5, sp, #24
 801612a:	c503      	stmia	r5!, {r0, r1}
 801612c:	6818      	ldr	r0, [r3, #0]
 801612e:	6859      	ldr	r1, [r3, #4]
 8016130:	ad08      	add	r5, sp, #32
 8016132:	c503      	stmia	r5!, {r0, r1}
 8016134:	a806      	add	r0, sp, #24
 8016136:	f7fa f93f 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801613a:	4631      	mov	r1, r6
 801613c:	a808      	add	r0, sp, #32
 801613e:	f7fa f923 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016142:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016146:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801614a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801614e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016152:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016156:	fb16 2103 	smlabb	r1, r6, r3, r2
 801615a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801615e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016162:	4f5e      	ldr	r7, [pc, #376]	; (80162dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8016164:	440a      	add	r2, r1
 8016166:	f8ad 2020 	strh.w	r2, [sp, #32]
 801616a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801616e:	6838      	ldr	r0, [r7, #0]
 8016170:	4413      	add	r3, r2
 8016172:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016176:	6803      	ldr	r3, [r0, #0]
 8016178:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801617a:	4798      	blx	r3
 801617c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016180:	46b9      	mov	r9, r7
 8016182:	d019      	beq.n	80161b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016184:	f010 0f04 	tst.w	r0, #4
 8016188:	d01a      	beq.n	80161c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801618a:	f8d9 0000 	ldr.w	r0, [r9]
 801618e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016192:	6801      	ldr	r1, [r0, #0]
 8016194:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016198:	e9cd b403 	strd	fp, r4, [sp, #12]
 801619c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80161a0:	9402      	str	r4, [sp, #8]
 80161a2:	b2ad      	uxth	r5, r5
 80161a4:	fa1f f488 	uxth.w	r4, r8
 80161a8:	9501      	str	r5, [sp, #4]
 80161aa:	9400      	str	r4, [sp, #0]
 80161ac:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 80161ae:	4631      	mov	r1, r6
 80161b0:	47a0      	blx	r4
 80161b2:	b00b      	add	sp, #44	; 0x2c
 80161b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80161b8:	b914      	cbnz	r4, 80161c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80161ba:	f010 0f01 	tst.w	r0, #1
 80161be:	e7e3      	b.n	8016188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80161c0:	f8d9 0000 	ldr.w	r0, [r9]
 80161c4:	6803      	ldr	r3, [r0, #0]
 80161c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80161c8:	4798      	blx	r3
 80161ca:	4b45      	ldr	r3, [pc, #276]	; (80162e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80161cc:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80161d0:	881a      	ldrh	r2, [r3, #0]
 80161d2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80161d6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80161da:	fb02 1404 	mla	r4, r2, r4, r1
 80161de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80161e2:	469a      	mov	sl, r3
 80161e4:	fb05 f502 	mul.w	r5, r5, r2
 80161e8:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80161ec:	d059      	beq.n	80162a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 80161ee:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80161f2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80161f6:	fa1f f28b 	uxth.w	r2, fp
 80161fa:	fa1f f989 	uxth.w	r9, r9
 80161fe:	469e      	mov	lr, r3
 8016200:	42ac      	cmp	r4, r5
 8016202:	d264      	bcs.n	80162ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8016204:	eb04 0a07 	add.w	sl, r4, r7
 8016208:	4554      	cmp	r4, sl
 801620a:	d23d      	bcs.n	8016288 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 801620c:	8821      	ldrh	r1, [r4, #0]
 801620e:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016212:	1208      	asrs	r0, r1, #8
 8016214:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016218:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801621c:	fb10 f009 	smulbb	r0, r0, r9
 8016220:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016224:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016228:	00c9      	lsls	r1, r1, #3
 801622a:	fb0c 0c02 	mla	ip, ip, r2, r0
 801622e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016232:	10d8      	asrs	r0, r3, #3
 8016234:	b2c9      	uxtb	r1, r1
 8016236:	00db      	lsls	r3, r3, #3
 8016238:	fa1f fc8c 	uxth.w	ip, ip
 801623c:	fb1b fb09 	smulbb	fp, fp, r9
 8016240:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016244:	b2db      	uxtb	r3, r3
 8016246:	fb11 f109 	smulbb	r1, r1, r9
 801624a:	fb00 b002 	mla	r0, r0, r2, fp
 801624e:	fb03 1302 	mla	r3, r3, r2, r1
 8016252:	f10c 0b01 	add.w	fp, ip, #1
 8016256:	b29b      	uxth	r3, r3
 8016258:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801625c:	b280      	uxth	r0, r0
 801625e:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016262:	f103 0c01 	add.w	ip, r3, #1
 8016266:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801626a:	1c43      	adds	r3, r0, #1
 801626c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016270:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016274:	0940      	lsrs	r0, r0, #5
 8016276:	ea4c 0c0b 	orr.w	ip, ip, fp
 801627a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801627e:	ea4c 0c00 	orr.w	ip, ip, r0
 8016282:	f824 cb02 	strh.w	ip, [r4], #2
 8016286:	e7bf      	b.n	8016208 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8016288:	f8be 3000 	ldrh.w	r3, [lr]
 801628c:	eba3 0308 	sub.w	r3, r3, r8
 8016290:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016294:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016298:	eba3 0308 	sub.w	r3, r3, r8
 801629c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80162a0:	e7ae      	b.n	8016200 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 80162a2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80162a6:	f8d9 0000 	ldr.w	r0, [r9]
 80162aa:	42ac      	cmp	r4, r5
 80162ac:	6803      	ldr	r3, [r0, #0]
 80162ae:	d20e      	bcs.n	80162ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 80162b0:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 80162b4:	4632      	mov	r2, r6
 80162b6:	463b      	mov	r3, r7
 80162b8:	4621      	mov	r1, r4
 80162ba:	47c0      	blx	r8
 80162bc:	f8ba 3000 	ldrh.w	r3, [sl]
 80162c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162c4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80162c8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80162cc:	e7eb      	b.n	80162a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 80162ce:	4b03      	ldr	r3, [pc, #12]	; (80162dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 80162d0:	6818      	ldr	r0, [r3, #0]
 80162d2:	6803      	ldr	r3, [r0, #0]
 80162d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80162d6:	4798      	blx	r3
 80162d8:	e76b      	b.n	80161b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80162da:	bf00      	nop
 80162dc:	2000eb10 	.word	0x2000eb10
 80162e0:	2000eb0a 	.word	0x2000eb0a

080162e4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80162e4:	b510      	push	{r4, lr}
 80162e6:	2178      	movs	r1, #120	; 0x78
 80162e8:	4604      	mov	r4, r0
 80162ea:	f00a fd7a 	bl	8020de2 <_ZdlPvj>
 80162ee:	4620      	mov	r0, r4
 80162f0:	bd10      	pop	{r4, pc}

080162f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80162f2:	b510      	push	{r4, lr}
 80162f4:	2104      	movs	r1, #4
 80162f6:	4604      	mov	r4, r0
 80162f8:	f00a fd73 	bl	8020de2 <_ZdlPvj>
 80162fc:	4620      	mov	r0, r4
 80162fe:	bd10      	pop	{r4, pc}

08016300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016300:	b510      	push	{r4, lr}
 8016302:	2104      	movs	r1, #4
 8016304:	4604      	mov	r4, r0
 8016306:	f00a fd6c 	bl	8020de2 <_ZdlPvj>
 801630a:	4620      	mov	r0, r4
 801630c:	bd10      	pop	{r4, pc}

0801630e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801630e:	b510      	push	{r4, lr}
 8016310:	2104      	movs	r1, #4
 8016312:	4604      	mov	r4, r0
 8016314:	f00a fd65 	bl	8020de2 <_ZdlPvj>
 8016318:	4620      	mov	r0, r4
 801631a:	bd10      	pop	{r4, pc}

0801631c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801631c:	b510      	push	{r4, lr}
 801631e:	2104      	movs	r1, #4
 8016320:	4604      	mov	r4, r0
 8016322:	f00a fd5e 	bl	8020de2 <_ZdlPvj>
 8016326:	4620      	mov	r0, r4
 8016328:	bd10      	pop	{r4, pc}

0801632a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801632a:	b510      	push	{r4, lr}
 801632c:	2104      	movs	r1, #4
 801632e:	4604      	mov	r4, r0
 8016330:	f00a fd57 	bl	8020de2 <_ZdlPvj>
 8016334:	4620      	mov	r0, r4
 8016336:	bd10      	pop	{r4, pc}

08016338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016338:	b510      	push	{r4, lr}
 801633a:	2104      	movs	r1, #4
 801633c:	4604      	mov	r4, r0
 801633e:	f00a fd50 	bl	8020de2 <_ZdlPvj>
 8016342:	4620      	mov	r0, r4
 8016344:	bd10      	pop	{r4, pc}

08016346 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016346:	b510      	push	{r4, lr}
 8016348:	2104      	movs	r1, #4
 801634a:	4604      	mov	r4, r0
 801634c:	f00a fd49 	bl	8020de2 <_ZdlPvj>
 8016350:	4620      	mov	r0, r4
 8016352:	bd10      	pop	{r4, pc}

08016354 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016354:	b510      	push	{r4, lr}
 8016356:	2104      	movs	r1, #4
 8016358:	4604      	mov	r4, r0
 801635a:	f00a fd42 	bl	8020de2 <_ZdlPvj>
 801635e:	4620      	mov	r0, r4
 8016360:	bd10      	pop	{r4, pc}

08016362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016362:	b510      	push	{r4, lr}
 8016364:	2104      	movs	r1, #4
 8016366:	4604      	mov	r4, r0
 8016368:	f00a fd3b 	bl	8020de2 <_ZdlPvj>
 801636c:	4620      	mov	r0, r4
 801636e:	bd10      	pop	{r4, pc}

08016370 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016370:	b510      	push	{r4, lr}
 8016372:	2104      	movs	r1, #4
 8016374:	4604      	mov	r4, r0
 8016376:	f00a fd34 	bl	8020de2 <_ZdlPvj>
 801637a:	4620      	mov	r0, r4
 801637c:	bd10      	pop	{r4, pc}

0801637e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801637e:	b510      	push	{r4, lr}
 8016380:	2104      	movs	r1, #4
 8016382:	4604      	mov	r4, r0
 8016384:	f00a fd2d 	bl	8020de2 <_ZdlPvj>
 8016388:	4620      	mov	r0, r4
 801638a:	bd10      	pop	{r4, pc}

0801638c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801638c:	b510      	push	{r4, lr}
 801638e:	2104      	movs	r1, #4
 8016390:	4604      	mov	r4, r0
 8016392:	f00a fd26 	bl	8020de2 <_ZdlPvj>
 8016396:	4620      	mov	r0, r4
 8016398:	bd10      	pop	{r4, pc}

0801639a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801639a:	b510      	push	{r4, lr}
 801639c:	2104      	movs	r1, #4
 801639e:	4604      	mov	r4, r0
 80163a0:	f00a fd1f 	bl	8020de2 <_ZdlPvj>
 80163a4:	4620      	mov	r0, r4
 80163a6:	bd10      	pop	{r4, pc}

080163a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80163a8:	b510      	push	{r4, lr}
 80163aa:	2104      	movs	r1, #4
 80163ac:	4604      	mov	r4, r0
 80163ae:	f00a fd18 	bl	8020de2 <_ZdlPvj>
 80163b2:	4620      	mov	r0, r4
 80163b4:	bd10      	pop	{r4, pc}

080163b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80163b6:	b510      	push	{r4, lr}
 80163b8:	2104      	movs	r1, #4
 80163ba:	4604      	mov	r4, r0
 80163bc:	f00a fd11 	bl	8020de2 <_ZdlPvj>
 80163c0:	4620      	mov	r0, r4
 80163c2:	bd10      	pop	{r4, pc}

080163c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80163c4:	b510      	push	{r4, lr}
 80163c6:	2104      	movs	r1, #4
 80163c8:	4604      	mov	r4, r0
 80163ca:	f00a fd0a 	bl	8020de2 <_ZdlPvj>
 80163ce:	4620      	mov	r0, r4
 80163d0:	bd10      	pop	{r4, pc}

080163d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80163d2:	b510      	push	{r4, lr}
 80163d4:	2104      	movs	r1, #4
 80163d6:	4604      	mov	r4, r0
 80163d8:	f00a fd03 	bl	8020de2 <_ZdlPvj>
 80163dc:	4620      	mov	r0, r4
 80163de:	bd10      	pop	{r4, pc}

080163e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80163e0:	b510      	push	{r4, lr}
 80163e2:	2104      	movs	r1, #4
 80163e4:	4604      	mov	r4, r0
 80163e6:	f00a fcfc 	bl	8020de2 <_ZdlPvj>
 80163ea:	4620      	mov	r0, r4
 80163ec:	bd10      	pop	{r4, pc}

080163ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80163ee:	b510      	push	{r4, lr}
 80163f0:	2104      	movs	r1, #4
 80163f2:	4604      	mov	r4, r0
 80163f4:	f00a fcf5 	bl	8020de2 <_ZdlPvj>
 80163f8:	4620      	mov	r0, r4
 80163fa:	bd10      	pop	{r4, pc}

080163fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80163fc:	b510      	push	{r4, lr}
 80163fe:	2104      	movs	r1, #4
 8016400:	4604      	mov	r4, r0
 8016402:	f00a fcee 	bl	8020de2 <_ZdlPvj>
 8016406:	4620      	mov	r0, r4
 8016408:	bd10      	pop	{r4, pc}

0801640a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801640a:	b510      	push	{r4, lr}
 801640c:	2104      	movs	r1, #4
 801640e:	4604      	mov	r4, r0
 8016410:	f00a fce7 	bl	8020de2 <_ZdlPvj>
 8016414:	4620      	mov	r0, r4
 8016416:	bd10      	pop	{r4, pc}

08016418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016418:	b510      	push	{r4, lr}
 801641a:	2104      	movs	r1, #4
 801641c:	4604      	mov	r4, r0
 801641e:	f00a fce0 	bl	8020de2 <_ZdlPvj>
 8016422:	4620      	mov	r0, r4
 8016424:	bd10      	pop	{r4, pc}

08016426 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016426:	b510      	push	{r4, lr}
 8016428:	2104      	movs	r1, #4
 801642a:	4604      	mov	r4, r0
 801642c:	f00a fcd9 	bl	8020de2 <_ZdlPvj>
 8016430:	4620      	mov	r0, r4
 8016432:	bd10      	pop	{r4, pc}

08016434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016434:	b510      	push	{r4, lr}
 8016436:	2104      	movs	r1, #4
 8016438:	4604      	mov	r4, r0
 801643a:	f00a fcd2 	bl	8020de2 <_ZdlPvj>
 801643e:	4620      	mov	r0, r4
 8016440:	bd10      	pop	{r4, pc}

08016442 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016442:	b510      	push	{r4, lr}
 8016444:	2104      	movs	r1, #4
 8016446:	4604      	mov	r4, r0
 8016448:	f00a fccb 	bl	8020de2 <_ZdlPvj>
 801644c:	4620      	mov	r0, r4
 801644e:	bd10      	pop	{r4, pc}

08016450 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016450:	b510      	push	{r4, lr}
 8016452:	2104      	movs	r1, #4
 8016454:	4604      	mov	r4, r0
 8016456:	f00a fcc4 	bl	8020de2 <_ZdlPvj>
 801645a:	4620      	mov	r0, r4
 801645c:	bd10      	pop	{r4, pc}

0801645e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801645e:	b510      	push	{r4, lr}
 8016460:	2104      	movs	r1, #4
 8016462:	4604      	mov	r4, r0
 8016464:	f00a fcbd 	bl	8020de2 <_ZdlPvj>
 8016468:	4620      	mov	r0, r4
 801646a:	bd10      	pop	{r4, pc}

0801646c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801646c:	b510      	push	{r4, lr}
 801646e:	2104      	movs	r1, #4
 8016470:	4604      	mov	r4, r0
 8016472:	f00a fcb6 	bl	8020de2 <_ZdlPvj>
 8016476:	4620      	mov	r0, r4
 8016478:	bd10      	pop	{r4, pc}
	...

0801647c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801647c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016480:	4f97      	ldr	r7, [pc, #604]	; (80166e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 8016482:	4616      	mov	r6, r2
 8016484:	683a      	ldr	r2, [r7, #0]
 8016486:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801648a:	2a02      	cmp	r2, #2
 801648c:	b08f      	sub	sp, #60	; 0x3c
 801648e:	4604      	mov	r4, r0
 8016490:	4689      	mov	r9, r1
 8016492:	d106      	bne.n	80164a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8016494:	4b93      	ldr	r3, [pc, #588]	; (80166e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8016496:	4a94      	ldr	r2, [pc, #592]	; (80166e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016498:	f240 310f 	movw	r1, #783	; 0x30f
 801649c:	4893      	ldr	r0, [pc, #588]	; (80166ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801649e:	f00a fccf 	bl	8020e40 <__assert_func>
 80164a2:	ad0e      	add	r5, sp, #56	; 0x38
 80164a4:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80164a8:	4628      	mov	r0, r5
 80164aa:	f7fd fb6b 	bl	8013b84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80164ae:	6823      	ldr	r3, [r4, #0]
 80164b0:	4680      	mov	r8, r0
 80164b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80164b4:	4620      	mov	r0, r4
 80164b6:	4798      	blx	r3
 80164b8:	4580      	cmp	r8, r0
 80164ba:	d004      	beq.n	80164c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80164bc:	4b8c      	ldr	r3, [pc, #560]	; (80166f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80164be:	4a8a      	ldr	r2, [pc, #552]	; (80166e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80164c0:	f240 3111 	movw	r1, #785	; 0x311
 80164c4:	e7ea      	b.n	801649c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80164c6:	4628      	mov	r0, r5
 80164c8:	f7fd fad2 	bl	8013a70 <_ZNK8touchgfx6Bitmap7getDataEv>
 80164cc:	4680      	mov	r8, r0
 80164ce:	b920      	cbnz	r0, 80164da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80164d0:	4b88      	ldr	r3, [pc, #544]	; (80166f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80164d2:	4a85      	ldr	r2, [pc, #532]	; (80166e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80164d4:	f240 3113 	movw	r1, #787	; 0x313
 80164d8:	e7e0      	b.n	801649c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80164da:	6830      	ldr	r0, [r6, #0]
 80164dc:	6871      	ldr	r1, [r6, #4]
 80164de:	f9b6 a000 	ldrsh.w	sl, [r6]
 80164e2:	ab06      	add	r3, sp, #24
 80164e4:	c303      	stmia	r3!, {r0, r1}
 80164e6:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80164ea:	f8d9 0000 	ldr.w	r0, [r9]
 80164ee:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80164f2:	ab08      	add	r3, sp, #32
 80164f4:	c303      	stmia	r3!, {r0, r1}
 80164f6:	4628      	mov	r0, r5
 80164f8:	f7fd f9b2 	bl	8013860 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80164fc:	4606      	mov	r6, r0
 80164fe:	4628      	mov	r0, r5
 8016500:	f7fd f9e8 	bl	80138d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016504:	f10d 0b20 	add.w	fp, sp, #32
 8016508:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 801650c:	a806      	add	r0, sp, #24
 801650e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8016512:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8016516:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801651a:	f7f9 ff4d 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801651e:	4658      	mov	r0, fp
 8016520:	f7f9 ff4a 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016524:	a80a      	add	r0, sp, #40	; 0x28
 8016526:	f7f9 ff47 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801652a:	4d73      	ldr	r5, [pc, #460]	; (80166f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801652c:	4b73      	ldr	r3, [pc, #460]	; (80166fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801652e:	f9b5 2000 	ldrsh.w	r2, [r5]
 8016532:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016536:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801653a:	2100      	movs	r1, #0
 801653c:	910c      	str	r1, [sp, #48]	; 0x30
 801653e:	4658      	mov	r0, fp
 8016540:	a90c      	add	r1, sp, #48	; 0x30
 8016542:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016546:	f7f5 fe53 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 801654a:	4658      	mov	r0, fp
 801654c:	f7f5 fe93 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016550:	2800      	cmp	r0, #0
 8016552:	f040 8099 	bne.w	8016688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8016556:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801655a:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801655e:	4288      	cmp	r0, r1
 8016560:	db37      	blt.n	80165d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8016562:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8016566:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801656a:	429a      	cmp	r2, r3
 801656c:	db31      	blt.n	80165d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801656e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8016572:	4430      	add	r0, r6
 8016574:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016578:	4431      	add	r1, r6
 801657a:	b200      	sxth	r0, r0
 801657c:	b209      	sxth	r1, r1
 801657e:	4288      	cmp	r0, r1
 8016580:	dc27      	bgt.n	80165d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8016582:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016586:	440a      	add	r2, r1
 8016588:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801658c:	440b      	add	r3, r1
 801658e:	b212      	sxth	r2, r2
 8016590:	b21b      	sxth	r3, r3
 8016592:	429a      	cmp	r2, r3
 8016594:	dc1d      	bgt.n	80165d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8016596:	6823      	ldr	r3, [r4, #0]
 8016598:	4620      	mov	r0, r4
 801659a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801659c:	4798      	blx	r3
 801659e:	4682      	mov	sl, r0
 80165a0:	6838      	ldr	r0, [r7, #0]
 80165a2:	6803      	ldr	r3, [r0, #0]
 80165a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165a6:	4798      	blx	r3
 80165a8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80165ac:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80165b0:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80165b4:	1a5b      	subs	r3, r3, r1
 80165b6:	b29b      	uxth	r3, r3
 80165b8:	b21c      	sxth	r4, r3
 80165ba:	2c00      	cmp	r4, #0
 80165bc:	dc0e      	bgt.n	80165dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 80165be:	bf1f      	itttt	ne
 80165c0:	f8ad 1020 	strhne.w	r1, [sp, #32]
 80165c4:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 80165c8:	185b      	addne	r3, r3, r1
 80165ca:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80165ce:	4644      	mov	r4, r8
 80165d0:	e009      	b.n	80165e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 80165d2:	4b4b      	ldr	r3, [pc, #300]	; (8016700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80165d4:	4a44      	ldr	r2, [pc, #272]	; (80166e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80165d6:	f240 3121 	movw	r1, #801	; 0x321
 80165da:	e75f      	b.n	801649c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80165dc:	1ad3      	subs	r3, r2, r3
 80165de:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80165e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80165e6:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 80165ea:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80165ee:	1b9b      	subs	r3, r3, r6
 80165f0:	b29b      	uxth	r3, r3
 80165f2:	b219      	sxth	r1, r3
 80165f4:	2900      	cmp	r1, #0
 80165f6:	dd4b      	ble.n	8016690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80165f8:	4351      	muls	r1, r2
 80165fa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80165fe:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016602:	1acb      	subs	r3, r1, r3
 8016604:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016608:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801660c:	2e00      	cmp	r6, #0
 801660e:	dd3b      	ble.n	8016688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8016610:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016614:	2b00      	cmp	r3, #0
 8016616:	dd37      	ble.n	8016688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8016618:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801661c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016620:	fb0a f90c 	mul.w	r9, sl, ip
 8016624:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8016628:	4481      	add	r9, r0
 801662a:	8828      	ldrh	r0, [r5, #0]
 801662c:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8016630:	42ae      	cmp	r6, r5
 8016632:	bfa8      	it	ge
 8016634:	462e      	movge	r6, r5
 8016636:	1a41      	subs	r1, r0, r1
 8016638:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801663c:	428e      	cmp	r6, r1
 801663e:	bfa8      	it	ge
 8016640:	460e      	movge	r6, r1
 8016642:	429d      	cmp	r5, r3
 8016644:	bfa8      	it	ge
 8016646:	461d      	movge	r5, r3
 8016648:	4b2c      	ldr	r3, [pc, #176]	; (80166fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801664a:	881b      	ldrh	r3, [r3, #0]
 801664c:	eba3 030c 	sub.w	r3, r3, ip
 8016650:	429d      	cmp	r5, r3
 8016652:	bfa8      	it	ge
 8016654:	461d      	movge	r5, r3
 8016656:	42b0      	cmp	r0, r6
 8016658:	d12c      	bne.n	80166b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801665a:	4290      	cmp	r0, r2
 801665c:	d12a      	bne.n	80166b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801665e:	6838      	ldr	r0, [r7, #0]
 8016660:	9203      	str	r2, [sp, #12]
 8016662:	6803      	ldr	r3, [r0, #0]
 8016664:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016666:	4798      	blx	r3
 8016668:	07c3      	lsls	r3, r0, #31
 801666a:	d51a      	bpl.n	80166a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 801666c:	9a03      	ldr	r2, [sp, #12]
 801666e:	6838      	ldr	r0, [r7, #0]
 8016670:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8016674:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8016678:	6803      	ldr	r3, [r0, #0]
 801667a:	9200      	str	r2, [sp, #0]
 801667c:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 801667e:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8016682:	4623      	mov	r3, r4
 8016684:	47a8      	blx	r5
 8016686:	4680      	mov	r8, r0
 8016688:	4640      	mov	r0, r8
 801668a:	b00f      	add	sp, #60	; 0x3c
 801668c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016690:	bf1f      	itttt	ne
 8016692:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8016696:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 801669a:	185b      	addne	r3, r3, r1
 801669c:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80166a0:	e7b2      	b.n	8016608 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 80166a2:	6838      	ldr	r0, [r7, #0]
 80166a4:	6803      	ldr	r3, [r0, #0]
 80166a6:	464a      	mov	r2, r9
 80166a8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 80166aa:	4621      	mov	r1, r4
 80166ac:	fb05 f30a 	mul.w	r3, r5, sl
 80166b0:	47b0      	blx	r6
 80166b2:	e7e9      	b.n	8016688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80166b4:	4355      	muls	r5, r2
 80166b6:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80166ba:	9303      	str	r3, [sp, #12]
 80166bc:	0076      	lsls	r6, r6, #1
 80166be:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80166c2:	9b03      	ldr	r3, [sp, #12]
 80166c4:	429c      	cmp	r4, r3
 80166c6:	d2df      	bcs.n	8016688 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80166c8:	6838      	ldr	r0, [r7, #0]
 80166ca:	6803      	ldr	r3, [r0, #0]
 80166cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80166ce:	464a      	mov	r2, r9
 80166d0:	461d      	mov	r5, r3
 80166d2:	4621      	mov	r1, r4
 80166d4:	4633      	mov	r3, r6
 80166d6:	47a8      	blx	r5
 80166d8:	44d1      	add	r9, sl
 80166da:	445c      	add	r4, fp
 80166dc:	e7f1      	b.n	80166c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 80166de:	bf00      	nop
 80166e0:	2000eb10 	.word	0x2000eb10
 80166e4:	080253a8 	.word	0x080253a8
 80166e8:	08025c58 	.word	0x08025c58
 80166ec:	0802545a 	.word	0x0802545a
 80166f0:	0802548c 	.word	0x0802548c
 80166f4:	080254e1 	.word	0x080254e1
 80166f8:	2000eb0a 	.word	0x2000eb0a
 80166fc:	2000eb0c 	.word	0x2000eb0c
 8016700:	0802551f 	.word	0x0802551f

08016704 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016704:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016706:	4607      	mov	r7, r0
 8016708:	b087      	sub	sp, #28
 801670a:	460d      	mov	r5, r1
 801670c:	4614      	mov	r4, r2
 801670e:	461e      	mov	r6, r3
 8016710:	b373      	cbz	r3, 8016770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8016712:	4608      	mov	r0, r1
 8016714:	f7f5 fdaf 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016718:	bb50      	cbnz	r0, 8016770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 801671a:	6828      	ldr	r0, [r5, #0]
 801671c:	6869      	ldr	r1, [r5, #4]
 801671e:	4d1f      	ldr	r5, [pc, #124]	; (801679c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 8016720:	ab04      	add	r3, sp, #16
 8016722:	c303      	stmia	r3!, {r0, r1}
 8016724:	a804      	add	r0, sp, #16
 8016726:	f7f9 fe47 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801672a:	6828      	ldr	r0, [r5, #0]
 801672c:	6803      	ldr	r3, [r0, #0]
 801672e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016730:	4798      	blx	r3
 8016732:	2eff      	cmp	r6, #255	; 0xff
 8016734:	d01e      	beq.n	8016774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 8016736:	f010 0f08 	tst.w	r0, #8
 801673a:	6828      	ldr	r0, [r5, #0]
 801673c:	6803      	ldr	r3, [r0, #0]
 801673e:	d01c      	beq.n	801677a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 8016740:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8016742:	4b17      	ldr	r3, [pc, #92]	; (80167a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 8016744:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016748:	9602      	str	r6, [sp, #8]
 801674a:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 801674e:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 8016752:	0964      	lsrs	r4, r4, #5
 8016754:	4319      	orrs	r1, r3
 8016756:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801675a:	4321      	orrs	r1, r4
 801675c:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8016760:	9401      	str	r4, [sp, #4]
 8016762:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016766:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801676a:	9400      	str	r4, [sp, #0]
 801676c:	b289      	uxth	r1, r1
 801676e:	47a8      	blx	r5
 8016770:	b007      	add	sp, #28
 8016772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016774:	f010 0f02 	tst.w	r0, #2
 8016778:	e7df      	b.n	801673a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801677a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801677c:	4798      	blx	r3
 801677e:	4b09      	ldr	r3, [pc, #36]	; (80167a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 8016780:	881a      	ldrh	r2, [r3, #0]
 8016782:	683b      	ldr	r3, [r7, #0]
 8016784:	e9cd 4600 	strd	r4, r6, [sp]
 8016788:	4601      	mov	r1, r0
 801678a:	69dc      	ldr	r4, [r3, #28]
 801678c:	4638      	mov	r0, r7
 801678e:	ab04      	add	r3, sp, #16
 8016790:	47a0      	blx	r4
 8016792:	6828      	ldr	r0, [r5, #0]
 8016794:	6803      	ldr	r3, [r0, #0]
 8016796:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016798:	4798      	blx	r3
 801679a:	e7e9      	b.n	8016770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 801679c:	2000eb10 	.word	0x2000eb10
 80167a0:	fffff800 	.word	0xfffff800
 80167a4:	2000eb0a 	.word	0x2000eb0a

080167a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80167a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80167ac:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 80167b0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80167b4:	460f      	mov	r7, r1
 80167b6:	4614      	mov	r4, r2
 80167b8:	461d      	mov	r5, r3
 80167ba:	2e00      	cmp	r6, #0
 80167bc:	f000 80b6 	beq.w	801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80167c0:	4618      	mov	r0, r3
 80167c2:	f7f5 fd58 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167c6:	2800      	cmp	r0, #0
 80167c8:	f040 80b0 	bne.w	801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80167cc:	f9b5 1000 	ldrsh.w	r1, [r5]
 80167d0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80167d4:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80167d8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80167dc:	fb04 1303 	mla	r3, r4, r3, r1
 80167e0:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 80167e4:	4365      	muls	r5, r4
 80167e6:	2eff      	cmp	r6, #255	; 0xff
 80167e8:	eba4 0c00 	sub.w	ip, r4, r0
 80167ec:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80167f0:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 80167f4:	ea4f 2718 	mov.w	r7, r8, lsr #8
 80167f8:	fa5f f288 	uxtb.w	r2, r8
 80167fc:	d04a      	beq.n	8016894 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 80167fe:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 8016802:	fa5f fe8e 	uxtb.w	lr, lr
 8016806:	b2b6      	uxth	r6, r6
 8016808:	b2ff      	uxtb	r7, r7
 801680a:	0040      	lsls	r0, r0, #1
 801680c:	fb0e fe06 	mul.w	lr, lr, r6
 8016810:	4377      	muls	r7, r6
 8016812:	fb02 f306 	mul.w	r3, r2, r6
 8016816:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801681a:	fa1f f888 	uxth.w	r8, r8
 801681e:	42a9      	cmp	r1, r5
 8016820:	f080 8084 	bcs.w	801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8016824:	eb01 0900 	add.w	r9, r1, r0
 8016828:	4549      	cmp	r1, r9
 801682a:	d231      	bcs.n	8016890 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 801682c:	880a      	ldrh	r2, [r1, #0]
 801682e:	1214      	asrs	r4, r2, #8
 8016830:	10d6      	asrs	r6, r2, #3
 8016832:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8016836:	00d2      	lsls	r2, r2, #3
 8016838:	b2d2      	uxtb	r2, r2
 801683a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801683e:	fb14 f408 	smulbb	r4, r4, r8
 8016842:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016846:	4474      	add	r4, lr
 8016848:	fb12 f208 	smulbb	r2, r2, r8
 801684c:	b2a4      	uxth	r4, r4
 801684e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016852:	441a      	add	r2, r3
 8016854:	b292      	uxth	r2, r2
 8016856:	f104 0a01 	add.w	sl, r4, #1
 801685a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801685e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016862:	fb16 f608 	smulbb	r6, r6, r8
 8016866:	f102 0a01 	add.w	sl, r2, #1
 801686a:	443e      	add	r6, r7
 801686c:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8016870:	b2b6      	uxth	r6, r6
 8016872:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8016876:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801687a:	4322      	orrs	r2, r4
 801687c:	1c74      	adds	r4, r6, #1
 801687e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8016882:	0976      	lsrs	r6, r6, #5
 8016884:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016888:	4332      	orrs	r2, r6
 801688a:	f821 2b02 	strh.w	r2, [r1], #2
 801688e:	e7cb      	b.n	8016828 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 8016890:	4461      	add	r1, ip
 8016892:	e7c4      	b.n	801681e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8016894:	4b26      	ldr	r3, [pc, #152]	; (8016930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8016896:	00ff      	lsls	r7, r7, #3
 8016898:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 801689c:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80168a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80168a4:	433b      	orrs	r3, r7
 80168a6:	07e2      	lsls	r2, r4, #31
 80168a8:	b29b      	uxth	r3, r3
 80168aa:	d50c      	bpl.n	80168c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 80168ac:	0040      	lsls	r0, r0, #1
 80168ae:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 80168b2:	42a9      	cmp	r1, r5
 80168b4:	d23a      	bcs.n	801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80168b6:	180a      	adds	r2, r1, r0
 80168b8:	4291      	cmp	r1, r2
 80168ba:	d202      	bcs.n	80168c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 80168bc:	f821 3b02 	strh.w	r3, [r1], #2
 80168c0:	e7fa      	b.n	80168b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80168c2:	4461      	add	r1, ip
 80168c4:	e7f5      	b.n	80168b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80168c6:	078f      	lsls	r7, r1, #30
 80168c8:	d008      	beq.n	80168dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 80168ca:	0066      	lsls	r6, r4, #1
 80168cc:	460a      	mov	r2, r1
 80168ce:	42aa      	cmp	r2, r5
 80168d0:	d202      	bcs.n	80168d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 80168d2:	8013      	strh	r3, [r2, #0]
 80168d4:	4432      	add	r2, r6
 80168d6:	e7fa      	b.n	80168ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80168d8:	3102      	adds	r1, #2
 80168da:	3801      	subs	r0, #1
 80168dc:	07c6      	lsls	r6, r0, #31
 80168de:	d50b      	bpl.n	80168f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 80168e0:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80168e4:	3a01      	subs	r2, #1
 80168e6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80168ea:	0066      	lsls	r6, r4, #1
 80168ec:	42aa      	cmp	r2, r5
 80168ee:	d202      	bcs.n	80168f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 80168f0:	8013      	strh	r3, [r2, #0]
 80168f2:	4432      	add	r2, r6
 80168f4:	e7fa      	b.n	80168ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80168f6:	3801      	subs	r0, #1
 80168f8:	b1c0      	cbz	r0, 801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80168fa:	1040      	asrs	r0, r0, #1
 80168fc:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8016900:	0080      	lsls	r0, r0, #2
 8016902:	0064      	lsls	r4, r4, #1
 8016904:	42a9      	cmp	r1, r5
 8016906:	d211      	bcs.n	801692c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8016908:	078a      	lsls	r2, r1, #30
 801690a:	d006      	beq.n	801691a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 801690c:	4b09      	ldr	r3, [pc, #36]	; (8016934 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801690e:	4a0a      	ldr	r2, [pc, #40]	; (8016938 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 8016910:	480a      	ldr	r0, [pc, #40]	; (801693c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 8016912:	f240 31d6 	movw	r1, #982	; 0x3d6
 8016916:	f00a fa93 	bl	8020e40 <__assert_func>
 801691a:	180e      	adds	r6, r1, r0
 801691c:	460a      	mov	r2, r1
 801691e:	42b2      	cmp	r2, r6
 8016920:	d202      	bcs.n	8016928 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 8016922:	f842 3b04 	str.w	r3, [r2], #4
 8016926:	e7fa      	b.n	801691e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 8016928:	4421      	add	r1, r4
 801692a:	e7eb      	b.n	8016904 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 801692c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016930:	fffff800 	.word	0xfffff800
 8016934:	08025259 	.word	0x08025259
 8016938:	080258a4 	.word	0x080258a4
 801693c:	0802545a 	.word	0x0802545a

08016940 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016940:	2200      	movs	r2, #0
 8016942:	4910      	ldr	r1, [pc, #64]	; (8016984 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016944:	6042      	str	r2, [r0, #4]
 8016946:	6001      	str	r1, [r0, #0]
 8016948:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801694c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8016950:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8016954:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8016958:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801695c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8016960:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8016964:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8016968:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801696c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8016970:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8016974:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8016978:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801697c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8016980:	4770      	bx	lr
 8016982:	bf00      	nop
 8016984:	08025860 	.word	0x08025860

08016988 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8016988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801698c:	460d      	mov	r5, r1
 801698e:	b08b      	sub	sp, #44	; 0x2c
 8016990:	4604      	mov	r4, r0
 8016992:	6808      	ldr	r0, [r1, #0]
 8016994:	6849      	ldr	r1, [r1, #4]
 8016996:	4699      	mov	r9, r3
 8016998:	ab06      	add	r3, sp, #24
 801699a:	c303      	stmia	r3!, {r0, r1}
 801699c:	6810      	ldr	r0, [r2, #0]
 801699e:	6851      	ldr	r1, [r2, #4]
 80169a0:	ab08      	add	r3, sp, #32
 80169a2:	c303      	stmia	r3!, {r0, r1}
 80169a4:	a806      	add	r0, sp, #24
 80169a6:	f7f9 fd07 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169aa:	4629      	mov	r1, r5
 80169ac:	a808      	add	r0, sp, #32
 80169ae:	f7f9 fceb 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169b2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80169b6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80169ba:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80169be:	4d62      	ldr	r5, [pc, #392]	; (8016b48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 80169c0:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80169c4:	6828      	ldr	r0, [r5, #0]
 80169c6:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80169ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80169ce:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80169d2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80169d6:	440a      	add	r2, r1
 80169d8:	f8ad 2020 	strh.w	r2, [sp, #32]
 80169dc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80169e0:	4413      	add	r3, r2
 80169e2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80169e6:	6803      	ldr	r3, [r0, #0]
 80169e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80169ea:	4798      	blx	r3
 80169ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80169f0:	d118      	bne.n	8016a24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 80169f2:	f010 0f20 	tst.w	r0, #32
 80169f6:	6828      	ldr	r0, [r5, #0]
 80169f8:	d017      	beq.n	8016a2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 80169fa:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80169fe:	6801      	ldr	r1, [r0, #0]
 8016a00:	9502      	str	r5, [sp, #8]
 8016a02:	b2b6      	uxth	r6, r6
 8016a04:	fa1f f588 	uxth.w	r5, r8
 8016a08:	f8cd 900c 	str.w	r9, [sp, #12]
 8016a0c:	9601      	str	r6, [sp, #4]
 8016a0e:	9500      	str	r5, [sp, #0]
 8016a10:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 8016a12:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016a16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016a1a:	4621      	mov	r1, r4
 8016a1c:	47a8      	blx	r5
 8016a1e:	b00b      	add	sp, #44	; 0x2c
 8016a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a24:	f010 0f40 	tst.w	r0, #64	; 0x40
 8016a28:	e7e5      	b.n	80169f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016a2a:	6803      	ldr	r3, [r0, #0]
 8016a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016a2e:	4798      	blx	r3
 8016a30:	4946      	ldr	r1, [pc, #280]	; (8016b4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016a32:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8016a36:	880b      	ldrh	r3, [r1, #0]
 8016a38:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 8016a3c:	fb03 5202 	mla	r2, r3, r2, r5
 8016a40:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016a44:	4373      	muls	r3, r6
 8016a46:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016a4a:	9305      	str	r3, [sp, #20]
 8016a4c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016a50:	9304      	str	r3, [sp, #16]
 8016a52:	468a      	mov	sl, r1
 8016a54:	9b05      	ldr	r3, [sp, #20]
 8016a56:	4298      	cmp	r0, r3
 8016a58:	d26f      	bcs.n	8016b3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 8016a5a:	9b04      	ldr	r3, [sp, #16]
 8016a5c:	4621      	mov	r1, r4
 8016a5e:	eb00 0b03 	add.w	fp, r0, r3
 8016a62:	4558      	cmp	r0, fp
 8016a64:	d25c      	bcs.n	8016b20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 8016a66:	f851 2b04 	ldr.w	r2, [r1], #4
 8016a6a:	0e14      	lsrs	r4, r2, #24
 8016a6c:	d016      	beq.n	8016a9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 8016a6e:	2cff      	cmp	r4, #255	; 0xff
 8016a70:	b2d3      	uxtb	r3, r2
 8016a72:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8016a76:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8016a7a:	d111      	bne.n	8016aa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 8016a7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016a80:	d10e      	bne.n	8016aa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 8016a82:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 8016a86:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 8016a8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016a8e:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8016a92:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016a96:	ea43 030c 	orr.w	r3, r3, ip
 8016a9a:	8003      	strh	r3, [r0, #0]
 8016a9c:	3002      	adds	r0, #2
 8016a9e:	e7e0      	b.n	8016a62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8016aa0:	fb09 f404 	mul.w	r4, r9, r4
 8016aa4:	8807      	ldrh	r7, [r0, #0]
 8016aa6:	1c65      	adds	r5, r4, #1
 8016aa8:	eb05 2424 	add.w	r4, r5, r4, asr #8
 8016aac:	1224      	asrs	r4, r4, #8
 8016aae:	123e      	asrs	r6, r7, #8
 8016ab0:	fa1f fe84 	uxth.w	lr, r4
 8016ab4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016ab8:	43e4      	mvns	r4, r4
 8016aba:	b2d2      	uxtb	r2, r2
 8016abc:	b2e4      	uxtb	r4, r4
 8016abe:	10fd      	asrs	r5, r7, #3
 8016ac0:	fb12 f20e 	smulbb	r2, r2, lr
 8016ac4:	00ff      	lsls	r7, r7, #3
 8016ac6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016aca:	fb06 2604 	mla	r6, r6, r4, r2
 8016ace:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016ad2:	b2ff      	uxtb	r7, r7
 8016ad4:	fa5f fc8c 	uxtb.w	ip, ip
 8016ad8:	b2b6      	uxth	r6, r6
 8016ada:	fb1c fc0e 	smulbb	ip, ip, lr
 8016ade:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016ae2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016ae6:	fb13 f30e 	smulbb	r3, r3, lr
 8016aea:	fb05 c504 	mla	r5, r5, r4, ip
 8016aee:	1c72      	adds	r2, r6, #1
 8016af0:	fb07 3704 	mla	r7, r7, r4, r3
 8016af4:	b2ad      	uxth	r5, r5
 8016af6:	b2bf      	uxth	r7, r7
 8016af8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016afc:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 8016b00:	f105 0c01 	add.w	ip, r5, #1
 8016b04:	1c7e      	adds	r6, r7, #1
 8016b06:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016b0a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016b0e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016b12:	096d      	lsrs	r5, r5, #5
 8016b14:	4316      	orrs	r6, r2
 8016b16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016b1a:	432e      	orrs	r6, r5
 8016b1c:	8006      	strh	r6, [r0, #0]
 8016b1e:	e7bd      	b.n	8016a9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 8016b20:	f8ba 3000 	ldrh.w	r3, [sl]
 8016b24:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8016b28:	eba3 0308 	sub.w	r3, r3, r8
 8016b2c:	eba4 0408 	sub.w	r4, r4, r8
 8016b30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016b34:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016b38:	e78c      	b.n	8016a54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 8016b3a:	4b03      	ldr	r3, [pc, #12]	; (8016b48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 8016b3c:	6818      	ldr	r0, [r3, #0]
 8016b3e:	6803      	ldr	r3, [r0, #0]
 8016b40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b42:	4798      	blx	r3
 8016b44:	e76b      	b.n	8016a1e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8016b46:	bf00      	nop
 8016b48:	2000eb10 	.word	0x2000eb10
 8016b4c:	2000eb0a 	.word	0x2000eb0a

08016b50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016b50:	b570      	push	{r4, r5, r6, lr}
 8016b52:	9d04      	ldr	r5, [sp, #16]
 8016b54:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8016b58:	460c      	mov	r4, r1
 8016b5a:	4619      	mov	r1, r3
 8016b5c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016b60:	2a0d      	cmp	r2, #13
 8016b62:	d820      	bhi.n	8016ba6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8016b64:	e8df f002 	tbb	[pc, r2]
 8016b68:	18121807 	.word	0x18121807
 8016b6c:	18181818 	.word	0x18181818
 8016b70:	18181818 	.word	0x18181818
 8016b74:	1818      	.short	0x1818
 8016b76:	6802      	ldr	r2, [r0, #0]
 8016b78:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8016b7c:	68d6      	ldr	r6, [r2, #12]
 8016b7e:	462b      	mov	r3, r5
 8016b80:	460a      	mov	r2, r1
 8016b82:	46b4      	mov	ip, r6
 8016b84:	4621      	mov	r1, r4
 8016b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016b8a:	4760      	bx	ip
 8016b8c:	462a      	mov	r2, r5
 8016b8e:	4620      	mov	r0, r4
 8016b90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016b94:	f7ff bef8 	b.w	8016988 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016b98:	4b03      	ldr	r3, [pc, #12]	; (8016ba8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8016b9a:	4a04      	ldr	r2, [pc, #16]	; (8016bac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8016b9c:	4804      	ldr	r0, [pc, #16]	; (8016bb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8016b9e:	f44f 7142 	mov.w	r1, #776	; 0x308
 8016ba2:	f00a f94d 	bl	8020e40 <__assert_func>
 8016ba6:	bd70      	pop	{r4, r5, r6, pc}
 8016ba8:	0802557f 	.word	0x0802557f
 8016bac:	08025cde 	.word	0x08025cde
 8016bb0:	0802545a 	.word	0x0802545a

08016bb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016bb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016bb8:	460e      	mov	r6, r1
 8016bba:	b08c      	sub	sp, #48	; 0x30
 8016bbc:	4604      	mov	r4, r0
 8016bbe:	6808      	ldr	r0, [r1, #0]
 8016bc0:	6849      	ldr	r1, [r1, #4]
 8016bc2:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8016d94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8016bc6:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8016d98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 8016bca:	461d      	mov	r5, r3
 8016bcc:	ab08      	add	r3, sp, #32
 8016bce:	c303      	stmia	r3!, {r0, r1}
 8016bd0:	6810      	ldr	r0, [r2, #0]
 8016bd2:	6851      	ldr	r1, [r2, #4]
 8016bd4:	ab0a      	add	r3, sp, #40	; 0x28
 8016bd6:	c303      	stmia	r3!, {r0, r1}
 8016bd8:	a808      	add	r0, sp, #32
 8016bda:	f7f9 fbed 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016bde:	4631      	mov	r1, r6
 8016be0:	a80a      	add	r0, sp, #40	; 0x28
 8016be2:	f7f9 fbd1 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016be6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8016bea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8016bee:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8016bf2:	f8d8 0000 	ldr.w	r0, [r8]
 8016bf6:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 8016bfa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8016bfe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016c02:	440c      	add	r4, r1
 8016c04:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8016c08:	440a      	add	r2, r1
 8016c0a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016c0e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016c12:	4413      	add	r3, r2
 8016c14:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016c18:	6803      	ldr	r3, [r0, #0]
 8016c1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016c1c:	4798      	blx	r3
 8016c1e:	2dff      	cmp	r5, #255	; 0xff
 8016c20:	d122      	bne.n	8016c68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 8016c22:	f010 0f01 	tst.w	r0, #1
 8016c26:	f8d8 0000 	ldr.w	r0, [r8]
 8016c2a:	d020      	beq.n	8016c6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 8016c2c:	2100      	movs	r1, #0
 8016c2e:	f04f 0e01 	mov.w	lr, #1
 8016c32:	f8d0 c000 	ldr.w	ip, [r0]
 8016c36:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016c3a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8016c3e:	e9cd e106 	strd	lr, r1, [sp, #24]
 8016c42:	f8b9 e000 	ldrh.w	lr, [r9]
 8016c46:	9503      	str	r5, [sp, #12]
 8016c48:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8016c4c:	b2b6      	uxth	r6, r6
 8016c4e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8016c52:	9102      	str	r1, [sp, #8]
 8016c54:	b2bf      	uxth	r7, r7
 8016c56:	9601      	str	r6, [sp, #4]
 8016c58:	9700      	str	r7, [sp, #0]
 8016c5a:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 8016c5e:	4621      	mov	r1, r4
 8016c60:	47a8      	blx	r5
 8016c62:	b00c      	add	sp, #48	; 0x30
 8016c64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016c68:	f010 0f04 	tst.w	r0, #4
 8016c6c:	e7db      	b.n	8016c26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 8016c6e:	6803      	ldr	r3, [r0, #0]
 8016c70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016c72:	4798      	blx	r3
 8016c74:	f8b9 3000 	ldrh.w	r3, [r9]
 8016c78:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016c7c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016c80:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 8016c84:	fb03 1202 	mla	r2, r3, r2, r1
 8016c88:	ebac 0c07 	sub.w	ip, ip, r7
 8016c8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c90:	435e      	muls	r6, r3
 8016c92:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8016c96:	2dff      	cmp	r5, #255	; 0xff
 8016c98:	eba3 0707 	sub.w	r7, r3, r7
 8016c9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016ca0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016ca4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8016ca8:	d049      	beq.n	8016d3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 8016caa:	43eb      	mvns	r3, r5
 8016cac:	fa1f f985 	uxth.w	r9, r5
 8016cb0:	b2db      	uxtb	r3, r3
 8016cb2:	42b0      	cmp	r0, r6
 8016cb4:	d266      	bcs.n	8016d84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8016cb6:	eb00 0a0e 	add.w	sl, r0, lr
 8016cba:	4550      	cmp	r0, sl
 8016cbc:	4621      	mov	r1, r4
 8016cbe:	f104 0403 	add.w	r4, r4, #3
 8016cc2:	d25b      	bcs.n	8016d7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8016cc4:	8802      	ldrh	r2, [r0, #0]
 8016cc6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016cca:	ea4f 2822 	mov.w	r8, r2, asr #8
 8016cce:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8016cd2:	fb11 f109 	smulbb	r1, r1, r9
 8016cd6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8016cda:	10d5      	asrs	r5, r2, #3
 8016cdc:	fb08 1803 	mla	r8, r8, r3, r1
 8016ce0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8016ce4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016ce8:	fb11 f109 	smulbb	r1, r1, r9
 8016cec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016cf0:	fb05 1503 	mla	r5, r5, r3, r1
 8016cf4:	00d2      	lsls	r2, r2, #3
 8016cf6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016cfa:	b2d2      	uxtb	r2, r2
 8016cfc:	fb11 f109 	smulbb	r1, r1, r9
 8016d00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016d04:	fa1f f888 	uxth.w	r8, r8
 8016d08:	fb02 1203 	mla	r2, r2, r3, r1
 8016d0c:	b292      	uxth	r2, r2
 8016d0e:	f108 0101 	add.w	r1, r8, #1
 8016d12:	b2ad      	uxth	r5, r5
 8016d14:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8016d18:	1c51      	adds	r1, r2, #1
 8016d1a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016d1e:	1c69      	adds	r1, r5, #1
 8016d20:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016d24:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8016d28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016d2c:	096d      	lsrs	r5, r5, #5
 8016d2e:	ea42 0208 	orr.w	r2, r2, r8
 8016d32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016d36:	432a      	orrs	r2, r5
 8016d38:	f820 2b02 	strh.w	r2, [r0], #2
 8016d3c:	e7bd      	b.n	8016cba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8016d3e:	4a14      	ldr	r2, [pc, #80]	; (8016d90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 8016d40:	42b0      	cmp	r0, r6
 8016d42:	d21f      	bcs.n	8016d84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8016d44:	eb00 050e 	add.w	r5, r0, lr
 8016d48:	42a8      	cmp	r0, r5
 8016d4a:	4621      	mov	r1, r4
 8016d4c:	f104 0403 	add.w	r4, r4, #3
 8016d50:	d210      	bcs.n	8016d74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 8016d52:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8016d56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016d5a:	00db      	lsls	r3, r3, #3
 8016d5c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8016d60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d64:	430b      	orrs	r3, r1
 8016d66:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016d6a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8016d6e:	f820 3b02 	strh.w	r3, [r0], #2
 8016d72:	e7e9      	b.n	8016d48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8016d74:	4438      	add	r0, r7
 8016d76:	eb01 040c 	add.w	r4, r1, ip
 8016d7a:	e7e1      	b.n	8016d40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 8016d7c:	4438      	add	r0, r7
 8016d7e:	eb01 040c 	add.w	r4, r1, ip
 8016d82:	e796      	b.n	8016cb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 8016d84:	4b03      	ldr	r3, [pc, #12]	; (8016d94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 8016d86:	6818      	ldr	r0, [r3, #0]
 8016d88:	6803      	ldr	r3, [r0, #0]
 8016d8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016d8c:	4798      	blx	r3
 8016d8e:	e768      	b.n	8016c62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 8016d90:	fffff800 	.word	0xfffff800
 8016d94:	2000eb10 	.word	0x2000eb10
 8016d98:	2000eb0a 	.word	0x2000eb0a

08016d9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016da0:	b093      	sub	sp, #76	; 0x4c
 8016da2:	880e      	ldrh	r6, [r1, #0]
 8016da4:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8016da8:	4681      	mov	r9, r0
 8016daa:	4688      	mov	r8, r1
 8016dac:	4615      	mov	r5, r2
 8016dae:	b136      	cbz	r6, 8016dbe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8016db0:	4b70      	ldr	r3, [pc, #448]	; (8016f74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8016db2:	4a71      	ldr	r2, [pc, #452]	; (8016f78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8016db4:	4871      	ldr	r0, [pc, #452]	; (8016f7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8016db6:	f44f 719a 	mov.w	r1, #308	; 0x134
 8016dba:	f00a f841 	bl	8020e40 <__assert_func>
 8016dbe:	6810      	ldr	r0, [r2, #0]
 8016dc0:	6851      	ldr	r1, [r2, #4]
 8016dc2:	4f6f      	ldr	r7, [pc, #444]	; (8016f80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8016dc4:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8016f84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8016dc8:	ac0e      	add	r4, sp, #56	; 0x38
 8016dca:	c403      	stmia	r4!, {r0, r1}
 8016dcc:	6818      	ldr	r0, [r3, #0]
 8016dce:	6859      	ldr	r1, [r3, #4]
 8016dd0:	ac10      	add	r4, sp, #64	; 0x40
 8016dd2:	c403      	stmia	r4!, {r0, r1}
 8016dd4:	a80e      	add	r0, sp, #56	; 0x38
 8016dd6:	f7f9 faef 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016dda:	4629      	mov	r1, r5
 8016ddc:	a810      	add	r0, sp, #64	; 0x40
 8016dde:	f7f9 fad3 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016de2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8016de6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8016dea:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8016dee:	6838      	ldr	r0, [r7, #0]
 8016df0:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8016df4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8016df8:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016dfc:	4489      	add	r9, r1
 8016dfe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8016e02:	440a      	add	r2, r1
 8016e04:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8016e08:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016e0c:	4413      	add	r3, r2
 8016e0e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8016e12:	6803      	ldr	r3, [r0, #0]
 8016e14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8016e16:	4798      	blx	r3
 8016e18:	f010 0f80 	tst.w	r0, #128	; 0x80
 8016e1c:	6838      	ldr	r0, [r7, #0]
 8016e1e:	d01c      	beq.n	8016e5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8016e20:	210b      	movs	r1, #11
 8016e22:	6802      	ldr	r2, [r0, #0]
 8016e24:	9608      	str	r6, [sp, #32]
 8016e26:	9107      	str	r1, [sp, #28]
 8016e28:	f8bb 1000 	ldrh.w	r1, [fp]
 8016e2c:	9106      	str	r1, [sp, #24]
 8016e2e:	2101      	movs	r1, #1
 8016e30:	e9cd a104 	strd	sl, r1, [sp, #16]
 8016e34:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8016e38:	9103      	str	r1, [sp, #12]
 8016e3a:	b2a4      	uxth	r4, r4
 8016e3c:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8016e40:	9100      	str	r1, [sp, #0]
 8016e42:	b2ad      	uxth	r5, r5
 8016e44:	9502      	str	r5, [sp, #8]
 8016e46:	9401      	str	r4, [sp, #4]
 8016e48:	6b94      	ldr	r4, [r2, #56]	; 0x38
 8016e4a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016e4e:	4642      	mov	r2, r8
 8016e50:	4649      	mov	r1, r9
 8016e52:	47a0      	blx	r4
 8016e54:	b013      	add	sp, #76	; 0x4c
 8016e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e5a:	6803      	ldr	r3, [r0, #0]
 8016e5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016e5e:	4798      	blx	r3
 8016e60:	f8bb 3000 	ldrh.w	r3, [fp]
 8016e64:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016e68:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8016e6c:	fb03 1202 	mla	r2, r3, r2, r1
 8016e70:	435d      	muls	r5, r3
 8016e72:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016e76:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8016e7a:	920c      	str	r2, [sp, #48]	; 0x30
 8016e7c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8016e80:	1b12      	subs	r2, r2, r4
 8016e82:	920d      	str	r2, [sp, #52]	; 0x34
 8016e84:	0062      	lsls	r2, r4, #1
 8016e86:	1b1c      	subs	r4, r3, r4
 8016e88:	0063      	lsls	r3, r4, #1
 8016e8a:	920a      	str	r2, [sp, #40]	; 0x28
 8016e8c:	930b      	str	r3, [sp, #44]	; 0x2c
 8016e8e:	f04f 0e04 	mov.w	lr, #4
 8016e92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016e94:	4298      	cmp	r0, r3
 8016e96:	d266      	bcs.n	8016f66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 8016e98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e9a:	eb00 0b03 	add.w	fp, r0, r3
 8016e9e:	4558      	cmp	r0, fp
 8016ea0:	d25c      	bcs.n	8016f5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8016ea2:	f819 3b01 	ldrb.w	r3, [r9], #1
 8016ea6:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016eaa:	f858 2003 	ldr.w	r2, [r8, r3]
 8016eae:	0e11      	lsrs	r1, r2, #24
 8016eb0:	d012      	beq.n	8016ed8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016eb2:	29ff      	cmp	r1, #255	; 0xff
 8016eb4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8016eb8:	d110      	bne.n	8016edc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8016eba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016ebe:	d10d      	bne.n	8016edc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8016ec0:	0953      	lsrs	r3, r2, #5
 8016ec2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8016ec6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016eca:	f027 0707 	bic.w	r7, r7, #7
 8016ece:	431f      	orrs	r7, r3
 8016ed0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016ed4:	433a      	orrs	r2, r7
 8016ed6:	8002      	strh	r2, [r0, #0]
 8016ed8:	3002      	adds	r0, #2
 8016eda:	e7e0      	b.n	8016e9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 8016edc:	fb0a f101 	mul.w	r1, sl, r1
 8016ee0:	8806      	ldrh	r6, [r0, #0]
 8016ee2:	1c4b      	adds	r3, r1, #1
 8016ee4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8016ee8:	1235      	asrs	r5, r6, #8
 8016eea:	10f4      	asrs	r4, r6, #3
 8016eec:	121b      	asrs	r3, r3, #8
 8016eee:	00f6      	lsls	r6, r6, #3
 8016ef0:	b299      	uxth	r1, r3
 8016ef2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8016ef6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016efa:	b2f6      	uxtb	r6, r6
 8016efc:	43db      	mvns	r3, r3
 8016efe:	b2d2      	uxtb	r2, r2
 8016f00:	b2db      	uxtb	r3, r3
 8016f02:	fb1c fc01 	smulbb	ip, ip, r1
 8016f06:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016f0a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016f0e:	fb12 f201 	smulbb	r2, r2, r1
 8016f12:	fb05 c503 	mla	r5, r5, r3, ip
 8016f16:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8016f1a:	b2ff      	uxtb	r7, r7
 8016f1c:	fb06 2203 	mla	r2, r6, r3, r2
 8016f20:	b2ad      	uxth	r5, r5
 8016f22:	fb17 f701 	smulbb	r7, r7, r1
 8016f26:	b292      	uxth	r2, r2
 8016f28:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8016f2c:	fb04 7403 	mla	r4, r4, r3, r7
 8016f30:	f105 0c01 	add.w	ip, r5, #1
 8016f34:	1c57      	adds	r7, r2, #1
 8016f36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016f3a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8016f3e:	b2a4      	uxth	r4, r4
 8016f40:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016f44:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016f48:	433d      	orrs	r5, r7
 8016f4a:	1c67      	adds	r7, r4, #1
 8016f4c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8016f50:	0964      	lsrs	r4, r4, #5
 8016f52:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8016f56:	4325      	orrs	r5, r4
 8016f58:	8005      	strh	r5, [r0, #0]
 8016f5a:	e7bd      	b.n	8016ed8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016f5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f5e:	4418      	add	r0, r3
 8016f60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016f62:	4499      	add	r9, r3
 8016f64:	e795      	b.n	8016e92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 8016f66:	4b06      	ldr	r3, [pc, #24]	; (8016f80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8016f68:	6818      	ldr	r0, [r3, #0]
 8016f6a:	6803      	ldr	r3, [r0, #0]
 8016f6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f6e:	4798      	blx	r3
 8016f70:	e770      	b.n	8016e54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016f72:	bf00      	nop
 8016f74:	08025358 	.word	0x08025358
 8016f78:	08025aaf 	.word	0x08025aaf
 8016f7c:	0802545a 	.word	0x0802545a
 8016f80:	2000eb10 	.word	0x2000eb10
 8016f84:	2000eb0a 	.word	0x2000eb0a

08016f88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f8c:	4614      	mov	r4, r2
 8016f8e:	880a      	ldrh	r2, [r1, #0]
 8016f90:	b087      	sub	sp, #28
 8016f92:	2a02      	cmp	r2, #2
 8016f94:	4680      	mov	r8, r0
 8016f96:	460d      	mov	r5, r1
 8016f98:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8016f9c:	d006      	beq.n	8016fac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8016f9e:	4b63      	ldr	r3, [pc, #396]	; (801712c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8016fa0:	4a63      	ldr	r2, [pc, #396]	; (8017130 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8016fa2:	4864      	ldr	r0, [pc, #400]	; (8017134 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8016fa4:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8016fa8:	f009 ff4a 	bl	8020e40 <__assert_func>
 8016fac:	2e00      	cmp	r6, #0
 8016fae:	f000 80b9 	beq.w	8017124 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8016fb2:	6820      	ldr	r0, [r4, #0]
 8016fb4:	6861      	ldr	r1, [r4, #4]
 8016fb6:	af02      	add	r7, sp, #8
 8016fb8:	c703      	stmia	r7!, {r0, r1}
 8016fba:	6818      	ldr	r0, [r3, #0]
 8016fbc:	6859      	ldr	r1, [r3, #4]
 8016fbe:	af04      	add	r7, sp, #16
 8016fc0:	c703      	stmia	r7!, {r0, r1}
 8016fc2:	a802      	add	r0, sp, #8
 8016fc4:	f7f9 f9f8 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016fc8:	4621      	mov	r1, r4
 8016fca:	a804      	add	r0, sp, #16
 8016fcc:	f7f9 f9dc 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016fd0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016fd4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016fd8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8016fdc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8016fe0:	fb14 2103 	smlabb	r1, r4, r3, r2
 8016fe4:	eb08 0401 	add.w	r4, r8, r1
 8016fe8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016fec:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016ff0:	440a      	add	r2, r1
 8016ff2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016ff6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016ffa:	4413      	add	r3, r2
 8016ffc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017000:	4b4d      	ldr	r3, [pc, #308]	; (8017138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8017002:	6818      	ldr	r0, [r3, #0]
 8017004:	6803      	ldr	r3, [r0, #0]
 8017006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017008:	4798      	blx	r3
 801700a:	4b4c      	ldr	r3, [pc, #304]	; (801713c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801700c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017010:	881a      	ldrh	r2, [r3, #0]
 8017012:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017016:	2eff      	cmp	r6, #255	; 0xff
 8017018:	fb02 c101 	mla	r1, r2, r1, ip
 801701c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017020:	fb02 f207 	mul.w	r2, r2, r7
 8017024:	f105 0104 	add.w	r1, r5, #4
 8017028:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801702c:	461d      	mov	r5, r3
 801702e:	d05a      	beq.n	80170e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8017030:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017034:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017038:	b2b6      	uxth	r6, r6
 801703a:	fa1f fe8e 	uxth.w	lr, lr
 801703e:	9301      	str	r3, [sp, #4]
 8017040:	4282      	cmp	r2, r0
 8017042:	d96a      	bls.n	801711a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8017044:	eb00 0b0a 	add.w	fp, r0, sl
 8017048:	4583      	cmp	fp, r0
 801704a:	d940      	bls.n	80170ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801704c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017050:	8805      	ldrh	r5, [r0, #0]
 8017052:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017056:	122f      	asrs	r7, r5, #8
 8017058:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801705c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017060:	fb17 f70e 	smulbb	r7, r7, lr
 8017064:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017068:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801706c:	00ed      	lsls	r5, r5, #3
 801706e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017072:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017076:	10df      	asrs	r7, r3, #3
 8017078:	b2ed      	uxtb	r5, r5
 801707a:	00db      	lsls	r3, r3, #3
 801707c:	fa1f fc8c 	uxth.w	ip, ip
 8017080:	fb19 f90e 	smulbb	r9, r9, lr
 8017084:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017088:	b2db      	uxtb	r3, r3
 801708a:	fb15 f50e 	smulbb	r5, r5, lr
 801708e:	fb07 9706 	mla	r7, r7, r6, r9
 8017092:	fb03 5306 	mla	r3, r3, r6, r5
 8017096:	f10c 0901 	add.w	r9, ip, #1
 801709a:	b29b      	uxth	r3, r3
 801709c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80170a0:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80170a4:	f103 0c01 	add.w	ip, r3, #1
 80170a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80170ac:	b2bf      	uxth	r7, r7
 80170ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80170b2:	ea4c 0c09 	orr.w	ip, ip, r9
 80170b6:	f107 0901 	add.w	r9, r7, #1
 80170ba:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80170be:	097f      	lsrs	r7, r7, #5
 80170c0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80170c4:	ea4c 0c07 	orr.w	ip, ip, r7
 80170c8:	f820 cb02 	strh.w	ip, [r0], #2
 80170cc:	e7bc      	b.n	8017048 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80170ce:	9b01      	ldr	r3, [sp, #4]
 80170d0:	881b      	ldrh	r3, [r3, #0]
 80170d2:	eba3 0308 	sub.w	r3, r3, r8
 80170d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80170de:	eba3 0308 	sub.w	r3, r3, r8
 80170e2:	441c      	add	r4, r3
 80170e4:	e7ac      	b.n	8017040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80170e6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80170ea:	4282      	cmp	r2, r0
 80170ec:	d915      	bls.n	801711a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80170ee:	eb00 060a 	add.w	r6, r0, sl
 80170f2:	4286      	cmp	r6, r0
 80170f4:	d906      	bls.n	8017104 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80170f6:	f814 3b01 	ldrb.w	r3, [r4], #1
 80170fa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80170fe:	f820 3b02 	strh.w	r3, [r0], #2
 8017102:	e7f6      	b.n	80170f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8017104:	882b      	ldrh	r3, [r5, #0]
 8017106:	eba3 0308 	sub.w	r3, r3, r8
 801710a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801710e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017112:	eba3 0308 	sub.w	r3, r3, r8
 8017116:	441c      	add	r4, r3
 8017118:	e7e7      	b.n	80170ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801711a:	4b07      	ldr	r3, [pc, #28]	; (8017138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801711c:	6818      	ldr	r0, [r3, #0]
 801711e:	6803      	ldr	r3, [r0, #0]
 8017120:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017122:	4798      	blx	r3
 8017124:	b007      	add	sp, #28
 8017126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801712a:	bf00      	nop
 801712c:	08025288 	.word	0x08025288
 8017130:	08025919 	.word	0x08025919
 8017134:	0802545a 	.word	0x0802545a
 8017138:	2000eb10 	.word	0x2000eb10
 801713c:	2000eb0a 	.word	0x2000eb0a

08017140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017144:	f8b1 9000 	ldrh.w	r9, [r1]
 8017148:	b091      	sub	sp, #68	; 0x44
 801714a:	f1b9 0f01 	cmp.w	r9, #1
 801714e:	4604      	mov	r4, r0
 8017150:	460f      	mov	r7, r1
 8017152:	4690      	mov	r8, r2
 8017154:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017158:	d006      	beq.n	8017168 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801715a:	4b84      	ldr	r3, [pc, #528]	; (801736c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801715c:	4a84      	ldr	r2, [pc, #528]	; (8017370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801715e:	4885      	ldr	r0, [pc, #532]	; (8017374 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8017160:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 8017164:	f009 fe6c 	bl	8020e40 <__assert_func>
 8017168:	2d00      	cmp	r5, #0
 801716a:	d04f      	beq.n	801720c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801716c:	6810      	ldr	r0, [r2, #0]
 801716e:	6851      	ldr	r1, [r2, #4]
 8017170:	f8df b208 	ldr.w	fp, [pc, #520]	; 801737c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8017174:	ae0c      	add	r6, sp, #48	; 0x30
 8017176:	c603      	stmia	r6!, {r0, r1}
 8017178:	6818      	ldr	r0, [r3, #0]
 801717a:	6859      	ldr	r1, [r3, #4]
 801717c:	ae0e      	add	r6, sp, #56	; 0x38
 801717e:	c603      	stmia	r6!, {r0, r1}
 8017180:	a80c      	add	r0, sp, #48	; 0x30
 8017182:	f7f9 f919 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017186:	4641      	mov	r1, r8
 8017188:	a80e      	add	r0, sp, #56	; 0x38
 801718a:	f7f9 f8fd 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801718e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017192:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017196:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801719a:	f8db 0000 	ldr.w	r0, [fp]
 801719e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80171a2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80171a6:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017380 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 80171aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80171ae:	440c      	add	r4, r1
 80171b0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80171b4:	440a      	add	r2, r1
 80171b6:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80171ba:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80171be:	4413      	add	r3, r2
 80171c0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80171c4:	6803      	ldr	r3, [r0, #0]
 80171c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80171c8:	4798      	blx	r3
 80171ca:	f010 0f80 	tst.w	r0, #128	; 0x80
 80171ce:	f8db 0000 	ldr.w	r0, [fp]
 80171d2:	d01e      	beq.n	8017212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80171d4:	210b      	movs	r1, #11
 80171d6:	f04f 0c00 	mov.w	ip, #0
 80171da:	6802      	ldr	r2, [r0, #0]
 80171dc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80171e0:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 80171e4:	f8b8 1000 	ldrh.w	r1, [r8]
 80171e8:	9504      	str	r5, [sp, #16]
 80171ea:	e9cd 9105 	strd	r9, r1, [sp, #20]
 80171ee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80171f2:	9103      	str	r1, [sp, #12]
 80171f4:	fa1f f18a 	uxth.w	r1, sl
 80171f8:	9102      	str	r1, [sp, #8]
 80171fa:	b2b6      	uxth	r6, r6
 80171fc:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 8017200:	9100      	str	r1, [sp, #0]
 8017202:	9601      	str	r6, [sp, #4]
 8017204:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8017206:	4621      	mov	r1, r4
 8017208:	463a      	mov	r2, r7
 801720a:	47a8      	blx	r5
 801720c:	b011      	add	sp, #68	; 0x44
 801720e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017212:	6803      	ldr	r3, [r0, #0]
 8017214:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017216:	4798      	blx	r3
 8017218:	f8b8 2000 	ldrh.w	r2, [r8]
 801721c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017220:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017224:	2dff      	cmp	r5, #255	; 0xff
 8017226:	fb02 1303 	mla	r3, r2, r3, r1
 801722a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801722e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017232:	fb0a fa02 	mul.w	sl, sl, r2
 8017236:	d062      	beq.n	80172fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8017238:	ea6f 0c05 	mvn.w	ip, r5
 801723c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017240:	930a      	str	r3, [sp, #40]	; 0x28
 8017242:	b2ad      	uxth	r5, r5
 8017244:	fa5f fc8c 	uxtb.w	ip, ip
 8017248:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801724c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801724e:	4298      	cmp	r0, r3
 8017250:	f080 8085 	bcs.w	801735e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8017254:	eb00 0b09 	add.w	fp, r0, r9
 8017258:	4558      	cmp	r0, fp
 801725a:	d246      	bcs.n	80172ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801725c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017260:	2303      	movs	r3, #3
 8017262:	2204      	movs	r2, #4
 8017264:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017268:	eb07 0a0e 	add.w	sl, r7, lr
 801726c:	8803      	ldrh	r3, [r0, #0]
 801726e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017272:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017276:	1219      	asrs	r1, r3, #8
 8017278:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801727c:	fb18 f805 	smulbb	r8, r8, r5
 8017280:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017284:	10da      	asrs	r2, r3, #3
 8017286:	fb01 810c 	mla	r1, r1, ip, r8
 801728a:	00db      	lsls	r3, r3, #3
 801728c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017290:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017294:	b2db      	uxtb	r3, r3
 8017296:	fb18 f805 	smulbb	r8, r8, r5
 801729a:	fb1e fe05 	smulbb	lr, lr, r5
 801729e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80172a2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80172a6:	b289      	uxth	r1, r1
 80172a8:	fb02 820c 	mla	r2, r2, ip, r8
 80172ac:	fb03 e30c 	mla	r3, r3, ip, lr
 80172b0:	b292      	uxth	r2, r2
 80172b2:	b29b      	uxth	r3, r3
 80172b4:	f101 0801 	add.w	r8, r1, #1
 80172b8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80172bc:	f103 0e01 	add.w	lr, r3, #1
 80172c0:	f102 0801 	add.w	r8, r2, #1
 80172c4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80172c8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80172cc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80172d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80172d4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80172d8:	ea4e 0101 	orr.w	r1, lr, r1
 80172dc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80172e0:	ea41 0108 	orr.w	r1, r1, r8
 80172e4:	f820 1b02 	strh.w	r1, [r0], #2
 80172e8:	e7b6      	b.n	8017258 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80172ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80172ec:	881b      	ldrh	r3, [r3, #0]
 80172ee:	1b9b      	subs	r3, r3, r6
 80172f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80172f4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80172f8:	1b9b      	subs	r3, r3, r6
 80172fa:	441c      	add	r4, r3
 80172fc:	e7a6      	b.n	801724c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80172fe:	491e      	ldr	r1, [pc, #120]	; (8017378 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8017300:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017304:	2203      	movs	r2, #3
 8017306:	2504      	movs	r5, #4
 8017308:	4550      	cmp	r0, sl
 801730a:	d228      	bcs.n	801735e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801730c:	eb00 0c09 	add.w	ip, r0, r9
 8017310:	4560      	cmp	r0, ip
 8017312:	4623      	mov	r3, r4
 8017314:	d219      	bcs.n	801734a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017316:	f893 e000 	ldrb.w	lr, [r3]
 801731a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801731e:	eb07 0b0e 	add.w	fp, r7, lr
 8017322:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017326:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801732a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801732e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017332:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017336:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801733a:	ea43 030b 	orr.w	r3, r3, fp
 801733e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017342:	3401      	adds	r4, #1
 8017344:	f820 3b02 	strh.w	r3, [r0], #2
 8017348:	e7e2      	b.n	8017310 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801734a:	f8b8 3000 	ldrh.w	r3, [r8]
 801734e:	1b9b      	subs	r3, r3, r6
 8017350:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017354:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017358:	1b9b      	subs	r3, r3, r6
 801735a:	441c      	add	r4, r3
 801735c:	e7d4      	b.n	8017308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801735e:	4b07      	ldr	r3, [pc, #28]	; (801737c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8017360:	6818      	ldr	r0, [r3, #0]
 8017362:	6803      	ldr	r3, [r0, #0]
 8017364:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017366:	4798      	blx	r3
 8017368:	e750      	b.n	801720c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801736a:	bf00      	nop
 801736c:	080252d6 	.word	0x080252d6
 8017370:	080259a2 	.word	0x080259a2
 8017374:	0802545a 	.word	0x0802545a
 8017378:	fffff800 	.word	0xfffff800
 801737c:	2000eb10 	.word	0x2000eb10
 8017380:	2000eb0a 	.word	0x2000eb0a

08017384 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017384:	b430      	push	{r4, r5}
 8017386:	780d      	ldrb	r5, [r1, #0]
 8017388:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801738c:	2d01      	cmp	r5, #1
 801738e:	d00a      	beq.n	80173a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8017390:	d305      	bcc.n	801739e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8017392:	2d02      	cmp	r5, #2
 8017394:	d10b      	bne.n	80173ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8017396:	9402      	str	r4, [sp, #8]
 8017398:	bc30      	pop	{r4, r5}
 801739a:	f7ff bdf5 	b.w	8016f88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801739e:	9402      	str	r4, [sp, #8]
 80173a0:	bc30      	pop	{r4, r5}
 80173a2:	f7ff bcfb 	b.w	8016d9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80173a6:	9402      	str	r4, [sp, #8]
 80173a8:	bc30      	pop	{r4, r5}
 80173aa:	f7ff bec9 	b.w	8017140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80173ae:	bc30      	pop	{r4, r5}
 80173b0:	4770      	bx	lr
	...

080173b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80173b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173b8:	4604      	mov	r4, r0
 80173ba:	b087      	sub	sp, #28
 80173bc:	6810      	ldr	r0, [r2, #0]
 80173be:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80173c2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80175fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80173c6:	460e      	mov	r6, r1
 80173c8:	6851      	ldr	r1, [r2, #4]
 80173ca:	ad02      	add	r5, sp, #8
 80173cc:	c503      	stmia	r5!, {r0, r1}
 80173ce:	6818      	ldr	r0, [r3, #0]
 80173d0:	6859      	ldr	r1, [r3, #4]
 80173d2:	ad04      	add	r5, sp, #16
 80173d4:	4617      	mov	r7, r2
 80173d6:	c503      	stmia	r5!, {r0, r1}
 80173d8:	a802      	add	r0, sp, #8
 80173da:	f7f8 ffed 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173de:	4639      	mov	r1, r7
 80173e0:	a804      	add	r0, sp, #16
 80173e2:	f7f8 ffd1 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80173ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80173ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80173f2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80173f6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80173fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80173fe:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017402:	440e      	add	r6, r1
 8017404:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017408:	440a      	add	r2, r1
 801740a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801740e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017412:	4413      	add	r3, r2
 8017414:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017418:	4b77      	ldr	r3, [pc, #476]	; (80175f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801741a:	6818      	ldr	r0, [r3, #0]
 801741c:	6803      	ldr	r3, [r0, #0]
 801741e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017420:	4798      	blx	r3
 8017422:	f8b9 b000 	ldrh.w	fp, [r9]
 8017426:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801742a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801742e:	fb0b 2303 	mla	r3, fp, r3, r2
 8017432:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017436:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801743a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801743e:	fb05 f50b 	mul.w	r5, r5, fp
 8017442:	9300      	str	r3, [sp, #0]
 8017444:	d069      	beq.n	801751a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017446:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801744a:	4558      	cmp	r0, fp
 801744c:	f080 80cc 	bcs.w	80175e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017450:	9b00      	ldr	r3, [sp, #0]
 8017452:	18c3      	adds	r3, r0, r3
 8017454:	9301      	str	r3, [sp, #4]
 8017456:	4631      	mov	r1, r6
 8017458:	9b01      	ldr	r3, [sp, #4]
 801745a:	4298      	cmp	r0, r3
 801745c:	d24f      	bcs.n	80174fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801745e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8017462:	2a00      	cmp	r2, #0
 8017464:	d048      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017466:	fb0a f202 	mul.w	r2, sl, r2
 801746a:	1c53      	adds	r3, r2, #1
 801746c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017470:	121b      	asrs	r3, r3, #8
 8017472:	d041      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017474:	8802      	ldrh	r2, [r0, #0]
 8017476:	f8b4 c000 	ldrh.w	ip, [r4]
 801747a:	b29e      	uxth	r6, r3
 801747c:	1215      	asrs	r5, r2, #8
 801747e:	43db      	mvns	r3, r3
 8017480:	b2db      	uxtb	r3, r3
 8017482:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017486:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801748a:	fb15 f503 	smulbb	r5, r5, r3
 801748e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017492:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017496:	00d2      	lsls	r2, r2, #3
 8017498:	fb07 5706 	mla	r7, r7, r6, r5
 801749c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80174a0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80174a4:	b2d2      	uxtb	r2, r2
 80174a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80174aa:	b2bf      	uxth	r7, r7
 80174ac:	fb1e fe03 	smulbb	lr, lr, r3
 80174b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80174b4:	fa5f fc8c 	uxtb.w	ip, ip
 80174b8:	fb12 f203 	smulbb	r2, r2, r3
 80174bc:	fb05 e506 	mla	r5, r5, r6, lr
 80174c0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80174c4:	f107 0e01 	add.w	lr, r7, #1
 80174c8:	fa1f fc8c 	uxth.w	ip, ip
 80174cc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80174d0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80174d4:	f10c 0701 	add.w	r7, ip, #1
 80174d8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80174dc:	b2ad      	uxth	r5, r5
 80174de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80174e2:	ea47 070e 	orr.w	r7, r7, lr
 80174e6:	f105 0e01 	add.w	lr, r5, #1
 80174ea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80174ee:	096d      	lsrs	r5, r5, #5
 80174f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80174f4:	432f      	orrs	r7, r5
 80174f6:	8007      	strh	r7, [r0, #0]
 80174f8:	3002      	adds	r0, #2
 80174fa:	3402      	adds	r4, #2
 80174fc:	e7ac      	b.n	8017458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80174fe:	f8b9 3000 	ldrh.w	r3, [r9]
 8017502:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017506:	eba3 0308 	sub.w	r3, r3, r8
 801750a:	eba6 0608 	sub.w	r6, r6, r8
 801750e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017512:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017516:	440e      	add	r6, r1
 8017518:	e797      	b.n	801744a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801751a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801751e:	42a8      	cmp	r0, r5
 8017520:	d262      	bcs.n	80175e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017522:	9b00      	ldr	r3, [sp, #0]
 8017524:	4631      	mov	r1, r6
 8017526:	eb00 0b03 	add.w	fp, r0, r3
 801752a:	4558      	cmp	r0, fp
 801752c:	d24e      	bcs.n	80175cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801752e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017532:	b12b      	cbz	r3, 8017540 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017534:	2bff      	cmp	r3, #255	; 0xff
 8017536:	f8b4 e000 	ldrh.w	lr, [r4]
 801753a:	d104      	bne.n	8017546 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801753c:	f8a0 e000 	strh.w	lr, [r0]
 8017540:	3002      	adds	r0, #2
 8017542:	3402      	adds	r4, #2
 8017544:	e7f1      	b.n	801752a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8017546:	8802      	ldrh	r2, [r0, #0]
 8017548:	b29f      	uxth	r7, r3
 801754a:	1216      	asrs	r6, r2, #8
 801754c:	43db      	mvns	r3, r3
 801754e:	b2db      	uxtb	r3, r3
 8017550:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017554:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017558:	fb16 f603 	smulbb	r6, r6, r3
 801755c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8017560:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017564:	00d2      	lsls	r2, r2, #3
 8017566:	fb0c 6c07 	mla	ip, ip, r7, r6
 801756a:	b2d2      	uxtb	r2, r2
 801756c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017570:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8017574:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017578:	fb1a fa03 	smulbb	sl, sl, r3
 801757c:	fa1f fc8c 	uxth.w	ip, ip
 8017580:	fb12 f303 	smulbb	r3, r2, r3
 8017584:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017588:	fa5f fe8e 	uxtb.w	lr, lr
 801758c:	fb06 a607 	mla	r6, r6, r7, sl
 8017590:	f10c 0201 	add.w	r2, ip, #1
 8017594:	fb0e 3307 	mla	r3, lr, r7, r3
 8017598:	b2b6      	uxth	r6, r6
 801759a:	b29b      	uxth	r3, r3
 801759c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80175a0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80175a4:	f106 0a01 	add.w	sl, r6, #1
 80175a8:	f103 0c01 	add.w	ip, r3, #1
 80175ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80175b0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80175b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80175b8:	0976      	lsrs	r6, r6, #5
 80175ba:	ea4c 0c02 	orr.w	ip, ip, r2
 80175be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80175c2:	ea4c 0c06 	orr.w	ip, ip, r6
 80175c6:	f8a0 c000 	strh.w	ip, [r0]
 80175ca:	e7b9      	b.n	8017540 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80175cc:	f8b9 3000 	ldrh.w	r3, [r9]
 80175d0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80175d4:	eba3 0308 	sub.w	r3, r3, r8
 80175d8:	eba6 0608 	sub.w	r6, r6, r8
 80175dc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80175e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80175e4:	440e      	add	r6, r1
 80175e6:	e79a      	b.n	801751e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80175e8:	4b03      	ldr	r3, [pc, #12]	; (80175f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80175ea:	6818      	ldr	r0, [r3, #0]
 80175ec:	6803      	ldr	r3, [r0, #0]
 80175ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175f0:	4798      	blx	r3
 80175f2:	b007      	add	sp, #28
 80175f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175f8:	2000eb10 	.word	0x2000eb10
 80175fc:	2000eb0a 	.word	0x2000eb0a

08017600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017604:	b089      	sub	sp, #36	; 0x24
 8017606:	4682      	mov	sl, r0
 8017608:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801760c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801760e:	4689      	mov	r9, r1
 8017610:	4690      	mov	r8, r2
 8017612:	461f      	mov	r7, r3
 8017614:	b355      	cbz	r5, 801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8017616:	4608      	mov	r0, r1
 8017618:	f7fc f922 	bl	8013860 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801761c:	4606      	mov	r6, r0
 801761e:	4648      	mov	r0, r9
 8017620:	f7fc f958 	bl	80138d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017624:	f8ad 000e 	strh.w	r0, [sp, #14]
 8017628:	4648      	mov	r0, r9
 801762a:	f8ad 8008 	strh.w	r8, [sp, #8]
 801762e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8017632:	f8ad 700a 	strh.w	r7, [sp, #10]
 8017636:	f7fc fa1b 	bl	8013a70 <_ZNK8touchgfx6Bitmap7getDataEv>
 801763a:	4606      	mov	r6, r0
 801763c:	4648      	mov	r0, r9
 801763e:	f7fc fa49 	bl	8013ad4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017642:	4680      	mov	r8, r0
 8017644:	4648      	mov	r0, r9
 8017646:	f7fc fa9d 	bl	8013b84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801764a:	280b      	cmp	r0, #11
 801764c:	f200 80ca 	bhi.w	80177e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 8017650:	e8df f000 	tbb	[pc, r0]
 8017654:	c8060f1e 	.word	0xc8060f1e
 8017658:	c8c8c8c8 	.word	0xc8c8c8c8
 801765c:	16c8c8c8 	.word	0x16c8c8c8
 8017660:	462b      	mov	r3, r5
 8017662:	4622      	mov	r2, r4
 8017664:	a902      	add	r1, sp, #8
 8017666:	4630      	mov	r0, r6
 8017668:	f7ff f98e 	bl	8016988 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801766c:	b009      	add	sp, #36	; 0x24
 801766e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017672:	462b      	mov	r3, r5
 8017674:	4622      	mov	r2, r4
 8017676:	a902      	add	r1, sp, #8
 8017678:	4630      	mov	r0, r6
 801767a:	f7ff fa9b 	bl	8016bb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801767e:	e7f5      	b.n	801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8017680:	9500      	str	r5, [sp, #0]
 8017682:	4623      	mov	r3, r4
 8017684:	aa02      	add	r2, sp, #8
 8017686:	4641      	mov	r1, r8
 8017688:	4630      	mov	r0, r6
 801768a:	f7ff fe7b 	bl	8017384 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801768e:	e7ed      	b.n	801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8017690:	4648      	mov	r0, r9
 8017692:	f7fc f9b3 	bl	80139fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017696:	b950      	cbnz	r0, 80176ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8017698:	e9cd 5000 	strd	r5, r0, [sp]
 801769c:	f8da 3000 	ldr.w	r3, [sl]
 80176a0:	aa02      	add	r2, sp, #8
 80176a2:	68dd      	ldr	r5, [r3, #12]
 80176a4:	4631      	mov	r1, r6
 80176a6:	4623      	mov	r3, r4
 80176a8:	4650      	mov	r0, sl
 80176aa:	47a8      	blx	r5
 80176ac:	e7de      	b.n	801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80176ae:	af06      	add	r7, sp, #24
 80176b0:	4649      	mov	r1, r9
 80176b2:	4638      	mov	r0, r7
 80176b4:	f7fc f948 	bl	8013948 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80176b8:	e897 0003 	ldmia.w	r7, {r0, r1}
 80176bc:	f10d 0910 	add.w	r9, sp, #16
 80176c0:	e889 0003 	stmia.w	r9, {r0, r1}
 80176c4:	4648      	mov	r0, r9
 80176c6:	4621      	mov	r1, r4
 80176c8:	f7f4 fd92 	bl	800c1f0 <_ZN8touchgfx4RectaNERKS0_>
 80176cc:	4648      	mov	r0, r9
 80176ce:	f7f4 fdd2 	bl	800c276 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176d2:	b138      	cbz	r0, 80176e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 80176d4:	9500      	str	r5, [sp, #0]
 80176d6:	4623      	mov	r3, r4
 80176d8:	aa02      	add	r2, sp, #8
 80176da:	4641      	mov	r1, r8
 80176dc:	4630      	mov	r0, r6
 80176de:	f7ff fe69 	bl	80173b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80176e2:	e7c3      	b.n	801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80176e4:	e9cd 5000 	strd	r5, r0, [sp]
 80176e8:	f8da 3000 	ldr.w	r3, [sl]
 80176ec:	aa02      	add	r2, sp, #8
 80176ee:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80176f2:	4631      	mov	r1, r6
 80176f4:	464b      	mov	r3, r9
 80176f6:	4650      	mov	r0, sl
 80176f8:	47d8      	blx	fp
 80176fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80176fe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017702:	4293      	cmp	r3, r2
 8017704:	dd13      	ble.n	801772e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 8017706:	f9b4 0000 	ldrsh.w	r0, [r4]
 801770a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801770e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017712:	1a9b      	subs	r3, r3, r2
 8017714:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017718:	f8ad 101c 	strh.w	r1, [sp, #28]
 801771c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017720:	9500      	str	r5, [sp, #0]
 8017722:	463b      	mov	r3, r7
 8017724:	aa02      	add	r2, sp, #8
 8017726:	4641      	mov	r1, r8
 8017728:	4630      	mov	r0, r6
 801772a:	f7ff fe43 	bl	80173b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801772e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017732:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017736:	4293      	cmp	r3, r2
 8017738:	dd13      	ble.n	8017762 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 801773a:	1a9b      	subs	r3, r3, r2
 801773c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017740:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017744:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017748:	f8ad 001a 	strh.w	r0, [sp, #26]
 801774c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017750:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017754:	9500      	str	r5, [sp, #0]
 8017756:	463b      	mov	r3, r7
 8017758:	aa02      	add	r2, sp, #8
 801775a:	4641      	mov	r1, r8
 801775c:	4630      	mov	r0, r6
 801775e:	f7ff fe29 	bl	80173b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017762:	88a2      	ldrh	r2, [r4, #4]
 8017764:	8823      	ldrh	r3, [r4, #0]
 8017766:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801776a:	4413      	add	r3, r2
 801776c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017770:	440a      	add	r2, r1
 8017772:	b29b      	uxth	r3, r3
 8017774:	b292      	uxth	r2, r2
 8017776:	b211      	sxth	r1, r2
 8017778:	b218      	sxth	r0, r3
 801777a:	4288      	cmp	r0, r1
 801777c:	dd13      	ble.n	80177a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 801777e:	1a9b      	subs	r3, r3, r2
 8017780:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017784:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 8017788:	f8ad 1018 	strh.w	r1, [sp, #24]
 801778c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017790:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017794:	9500      	str	r5, [sp, #0]
 8017796:	463b      	mov	r3, r7
 8017798:	aa02      	add	r2, sp, #8
 801779a:	4641      	mov	r1, r8
 801779c:	4630      	mov	r0, r6
 801779e:	f8ad c01a 	strh.w	ip, [sp, #26]
 80177a2:	f7ff fe07 	bl	80173b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80177a6:	88e2      	ldrh	r2, [r4, #6]
 80177a8:	8863      	ldrh	r3, [r4, #2]
 80177aa:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80177ae:	4413      	add	r3, r2
 80177b0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80177b4:	440a      	add	r2, r1
 80177b6:	b29b      	uxth	r3, r3
 80177b8:	b292      	uxth	r2, r2
 80177ba:	b211      	sxth	r1, r2
 80177bc:	b218      	sxth	r0, r3
 80177be:	4288      	cmp	r0, r1
 80177c0:	f77f af54 	ble.w	801766c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80177c4:	f9b4 c000 	ldrsh.w	ip, [r4]
 80177c8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80177cc:	f8ad c018 	strh.w	ip, [sp, #24]
 80177d0:	1a9b      	subs	r3, r3, r2
 80177d2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80177d6:	f8ad 101a 	strh.w	r1, [sp, #26]
 80177da:	f8ad 001c 	strh.w	r0, [sp, #28]
 80177de:	9500      	str	r5, [sp, #0]
 80177e0:	463b      	mov	r3, r7
 80177e2:	e779      	b.n	80176d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 80177e4:	4b02      	ldr	r3, [pc, #8]	; (80177f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 80177e6:	4a03      	ldr	r2, [pc, #12]	; (80177f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 80177e8:	4803      	ldr	r0, [pc, #12]	; (80177f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80177ea:	2181      	movs	r1, #129	; 0x81
 80177ec:	f009 fb28 	bl	8020e40 <__assert_func>
 80177f0:	08025324 	.word	0x08025324
 80177f4:	08025a2b 	.word	0x08025a2b
 80177f8:	0802545a 	.word	0x0802545a

080177fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80177fc:	b508      	push	{r3, lr}
 80177fe:	b180      	cbz	r0, 8017822 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8017800:	2902      	cmp	r1, #2
 8017802:	d014      	beq.n	801782e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8017804:	2903      	cmp	r1, #3
 8017806:	d01d      	beq.n	8017844 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8017808:	2901      	cmp	r1, #1
 801780a:	d101      	bne.n	8017810 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801780c:	2001      	movs	r0, #1
 801780e:	bd08      	pop	{r3, pc}
 8017810:	4b0e      	ldr	r3, [pc, #56]	; (801784c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017812:	8818      	ldrh	r0, [r3, #0]
 8017814:	b990      	cbnz	r0, 801783c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017816:	4b0e      	ldr	r3, [pc, #56]	; (8017850 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8017818:	4a0e      	ldr	r2, [pc, #56]	; (8017854 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801781a:	480f      	ldr	r0, [pc, #60]	; (8017858 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801781c:	2150      	movs	r1, #80	; 0x50
 801781e:	f009 fb0f 	bl	8020e40 <__assert_func>
 8017822:	2902      	cmp	r1, #2
 8017824:	d00e      	beq.n	8017844 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8017826:	2903      	cmp	r1, #3
 8017828:	d0f2      	beq.n	8017810 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801782a:	2901      	cmp	r1, #1
 801782c:	d1ee      	bne.n	801780c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801782e:	4b07      	ldr	r3, [pc, #28]	; (801784c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017830:	8818      	ldrh	r0, [r3, #0]
 8017832:	2800      	cmp	r0, #0
 8017834:	d0ef      	beq.n	8017816 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8017836:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801783a:	e7e8      	b.n	801780e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801783c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017840:	4240      	negs	r0, r0
 8017842:	e7e4      	b.n	801780e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017844:	f04f 30ff 	mov.w	r0, #4294967295
 8017848:	e7e1      	b.n	801780e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801784a:	bf00      	nop
 801784c:	2000eb0a 	.word	0x2000eb0a
 8017850:	080255b0 	.word	0x080255b0
 8017854:	08025ba8 	.word	0x08025ba8
 8017858:	080255f2 	.word	0x080255f2

0801785c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801785c:	b508      	push	{r3, lr}
 801785e:	b180      	cbz	r0, 8017882 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8017860:	2902      	cmp	r1, #2
 8017862:	d014      	beq.n	801788e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8017864:	2903      	cmp	r1, #3
 8017866:	d018      	beq.n	801789a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8017868:	2901      	cmp	r1, #1
 801786a:	d001      	beq.n	8017870 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801786c:	2001      	movs	r0, #1
 801786e:	e013      	b.n	8017898 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8017870:	4b0e      	ldr	r3, [pc, #56]	; (80178ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017872:	8818      	ldrh	r0, [r3, #0]
 8017874:	b970      	cbnz	r0, 8017894 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8017876:	4b0e      	ldr	r3, [pc, #56]	; (80178b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8017878:	4a0e      	ldr	r2, [pc, #56]	; (80178b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801787a:	480f      	ldr	r0, [pc, #60]	; (80178b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801787c:	2150      	movs	r1, #80	; 0x50
 801787e:	f009 fadf 	bl	8020e40 <__assert_func>
 8017882:	2902      	cmp	r1, #2
 8017884:	d009      	beq.n	801789a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8017886:	2903      	cmp	r1, #3
 8017888:	d0f0      	beq.n	801786c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801788a:	2901      	cmp	r1, #1
 801788c:	d1f0      	bne.n	8017870 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801788e:	f04f 30ff 	mov.w	r0, #4294967295
 8017892:	e001      	b.n	8017898 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8017894:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017898:	bd08      	pop	{r3, pc}
 801789a:	4b04      	ldr	r3, [pc, #16]	; (80178ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801789c:	8818      	ldrh	r0, [r3, #0]
 801789e:	2800      	cmp	r0, #0
 80178a0:	d0e9      	beq.n	8017876 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80178a2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80178a6:	4240      	negs	r0, r0
 80178a8:	e7f6      	b.n	8017898 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80178aa:	bf00      	nop
 80178ac:	2000eb0a 	.word	0x2000eb0a
 80178b0:	080255b0 	.word	0x080255b0
 80178b4:	08025ba8 	.word	0x08025ba8
 80178b8:	080255f2 	.word	0x080255f2

080178bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80178bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178c0:	b097      	sub	sp, #92	; 0x5c
 80178c2:	9109      	str	r1, [sp, #36]	; 0x24
 80178c4:	a912      	add	r1, sp, #72	; 0x48
 80178c6:	e881 000c 	stmia.w	r1, {r2, r3}
 80178ca:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 80178ce:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 80178d2:	9308      	str	r3, [sp, #32]
 80178d4:	f891 900d 	ldrb.w	r9, [r1, #13]
 80178d8:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80178dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80178de:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 80178e2:	930a      	str	r3, [sp, #40]	; 0x28
 80178e4:	7988      	ldrb	r0, [r1, #6]
 80178e6:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 80178ea:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 80178ee:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 80178f2:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80178f6:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 80178fa:	ea4f 1349 	mov.w	r3, r9, lsl #5
 80178fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017902:	4303      	orrs	r3, r0
 8017904:	9307      	str	r3, [sp, #28]
 8017906:	f000 81b3 	beq.w	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801790a:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801790e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017912:	f891 9007 	ldrb.w	r9, [r1, #7]
 8017916:	ea59 0903 	orrs.w	r9, r9, r3
 801791a:	f000 81a9 	beq.w	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801791e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017922:	b29b      	uxth	r3, r3
 8017924:	2e00      	cmp	r6, #0
 8017926:	f000 8137 	beq.w	8017b98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801792a:	1af6      	subs	r6, r6, r3
 801792c:	b2b6      	uxth	r6, r6
 801792e:	0434      	lsls	r4, r6, #16
 8017930:	d502      	bpl.n	8017938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8017932:	1bad      	subs	r5, r5, r6
 8017934:	b22d      	sxth	r5, r5
 8017936:	2600      	movs	r6, #0
 8017938:	f9b2 1000 	ldrsh.w	r1, [r2]
 801793c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017940:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8017944:	428d      	cmp	r5, r1
 8017946:	b28b      	uxth	r3, r1
 8017948:	bfbf      	itttt	lt
 801794a:	18f6      	addlt	r6, r6, r3
 801794c:	1b75      	sublt	r5, r6, r5
 801794e:	b2ae      	uxthlt	r6, r5
 8017950:	460d      	movlt	r5, r1
 8017952:	8891      	ldrh	r1, [r2, #4]
 8017954:	440b      	add	r3, r1
 8017956:	b21b      	sxth	r3, r3
 8017958:	930e      	str	r3, [sp, #56]	; 0x38
 801795a:	88d3      	ldrh	r3, [r2, #6]
 801795c:	8852      	ldrh	r2, [r2, #2]
 801795e:	4413      	add	r3, r2
 8017960:	b21b      	sxth	r3, r3
 8017962:	930d      	str	r3, [sp, #52]	; 0x34
 8017964:	4b8e      	ldr	r3, [pc, #568]	; (8017ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 8017966:	9a08      	ldr	r2, [sp, #32]
 8017968:	f893 b000 	ldrb.w	fp, [r3]
 801796c:	f10b 30ff 	add.w	r0, fp, #4294967295
 8017970:	4243      	negs	r3, r0
 8017972:	4143      	adcs	r3, r0
 8017974:	930c      	str	r3, [sp, #48]	; 0x30
 8017976:	4629      	mov	r1, r5
 8017978:	4653      	mov	r3, sl
 801797a:	a812      	add	r0, sp, #72	; 0x48
 801797c:	f7f8 fb74 	bl	8010068 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017980:	4629      	mov	r1, r5
 8017982:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8017986:	4653      	mov	r3, sl
 8017988:	9a08      	ldr	r2, [sp, #32]
 801798a:	a812      	add	r0, sp, #72	; 0x48
 801798c:	f7f8 fb84 	bl	8010098 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017990:	a916      	add	r1, sp, #88	; 0x58
 8017992:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017996:	a815      	add	r0, sp, #84	; 0x54
 8017998:	f7f8 fce0 	bl	801035c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801799c:	f1ba 0f00 	cmp.w	sl, #0
 80179a0:	f040 8106 	bne.w	8017bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 80179a4:	f1bb 0f01 	cmp.w	fp, #1
 80179a8:	f040 810a 	bne.w	8017bc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 80179ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179ae:	b153      	cbz	r3, 80179c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 80179b0:	9a07      	ldr	r2, [sp, #28]
 80179b2:	2408      	movs	r4, #8
 80179b4:	fb94 f3f8 	sdiv	r3, r4, r8
 80179b8:	1e5c      	subs	r4, r3, #1
 80179ba:	4414      	add	r4, r2
 80179bc:	fb94 f4f3 	sdiv	r4, r4, r3
 80179c0:	fb14 f403 	smulbb	r4, r4, r3
 80179c4:	b2a4      	uxth	r4, r4
 80179c6:	b906      	cbnz	r6, 80179ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 80179c8:	b16f      	cbz	r7, 80179e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 80179ca:	fb07 6304 	mla	r3, r7, r4, r6
 80179ce:	9926      	ldr	r1, [sp, #152]	; 0x98
 80179d0:	fb08 f303 	mul.w	r3, r8, r3
 80179d4:	463a      	mov	r2, r7
 80179d6:	f003 0707 	and.w	r7, r3, #7
 80179da:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 80179de:	9326      	str	r3, [sp, #152]	; 0x98
 80179e0:	eba9 0302 	sub.w	r3, r9, r2
 80179e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80179e6:	4651      	mov	r1, sl
 80179e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80179ea:	f7ff ff07 	bl	80177fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80179ee:	4651      	mov	r1, sl
 80179f0:	4681      	mov	r9, r0
 80179f2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80179f4:	f7ff ff32 	bl	801785c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80179f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80179fa:	9a08      	ldr	r2, [sp, #32]
 80179fc:	eba3 0a02 	sub.w	sl, r3, r2
 8017a00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017a02:	459a      	cmp	sl, r3
 8017a04:	bfa8      	it	ge
 8017a06:	469a      	movge	sl, r3
 8017a08:	f1ba 0f00 	cmp.w	sl, #0
 8017a0c:	4683      	mov	fp, r0
 8017a0e:	f340 812f 	ble.w	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8017a12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a14:	1bad      	subs	r5, r5, r6
 8017a16:	1b5d      	subs	r5, r3, r5
 8017a18:	9b07      	ldr	r3, [sp, #28]
 8017a1a:	429d      	cmp	r5, r3
 8017a1c:	bfd4      	ite	le
 8017a1e:	ebc6 0605 	rsble	r6, r6, r5
 8017a22:	ebc6 0603 	rsbgt	r6, r6, r3
 8017a26:	2e00      	cmp	r6, #0
 8017a28:	f340 8122 	ble.w	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8017a2c:	1ba4      	subs	r4, r4, r6
 8017a2e:	fb08 f304 	mul.w	r3, r8, r4
 8017a32:	930d      	str	r3, [sp, #52]	; 0x34
 8017a34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017a36:	2b00      	cmp	r3, #0
 8017a38:	f040 811f 	bne.w	8017c7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8017a3c:	4b59      	ldr	r3, [pc, #356]	; (8017ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 8017a3e:	6818      	ldr	r0, [r3, #0]
 8017a40:	6803      	ldr	r3, [r0, #0]
 8017a42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017a44:	4798      	blx	r3
 8017a46:	2301      	movs	r3, #1
 8017a48:	fa03 f308 	lsl.w	r3, r3, r8
 8017a4c:	4a56      	ldr	r2, [pc, #344]	; (8017ba8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 8017a4e:	3b01      	subs	r3, #1
 8017a50:	b2db      	uxtb	r3, r3
 8017a52:	8811      	ldrh	r1, [r2, #0]
 8017a54:	930c      	str	r3, [sp, #48]	; 0x30
 8017a56:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8017a5a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8017a5e:	fb01 2303 	mla	r3, r1, r3, r2
 8017a62:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017a66:	9308      	str	r3, [sp, #32]
 8017a68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a6a:	0c1a      	lsrs	r2, r3, #16
 8017a6c:	b2d3      	uxtb	r3, r2
 8017a6e:	9311      	str	r3, [sp, #68]	; 0x44
 8017a70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a72:	0a1b      	lsrs	r3, r3, #8
 8017a74:	b2d9      	uxtb	r1, r3
 8017a76:	9110      	str	r1, [sp, #64]	; 0x40
 8017a78:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017a7a:	b2c9      	uxtb	r1, r1
 8017a7c:	910e      	str	r1, [sp, #56]	; 0x38
 8017a7e:	494b      	ldr	r1, [pc, #300]	; (8017bac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 8017a80:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 8017a84:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017a86:	00db      	lsls	r3, r3, #3
 8017a88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a8c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8017a90:	431a      	orrs	r2, r3
 8017a92:	b293      	uxth	r3, r2
 8017a94:	930f      	str	r3, [sp, #60]	; 0x3c
 8017a96:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017a98:	781a      	ldrb	r2, [r3, #0]
 8017a9a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8017a9e:	413a      	asrs	r2, r7
 8017aa0:	fb06 b919 	mls	r9, r6, r9, fp
 8017aa4:	fb03 fb06 	mul.w	fp, r3, r6
 8017aa8:	b2d2      	uxtb	r2, r2
 8017aaa:	930b      	str	r3, [sp, #44]	; 0x2c
 8017aac:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8017ab0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017ab4:	f0c0 80f6 	bcc.w	8017ca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8017ab8:	f8dd c020 	ldr.w	ip, [sp, #32]
 8017abc:	46b6      	mov	lr, r6
 8017abe:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017ac2:	f0c0 80de 	bcc.w	8017c82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8017ac6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017ac8:	4013      	ands	r3, r2
 8017aca:	d055      	beq.n	8017b78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 8017acc:	20ff      	movs	r0, #255	; 0xff
 8017ace:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017ad0:	fb90 f1f1 	sdiv	r1, r0, r1
 8017ad4:	434b      	muls	r3, r1
 8017ad6:	2bfe      	cmp	r3, #254	; 0xfe
 8017ad8:	dd03      	ble.n	8017ae2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8017ada:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017adc:	4281      	cmp	r1, r0
 8017ade:	f000 80ce 	beq.w	8017c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 8017ae2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017ae4:	f8bc 4000 	ldrh.w	r4, [ip]
 8017ae8:	fb11 f303 	smulbb	r3, r1, r3
 8017aec:	b29b      	uxth	r3, r3
 8017aee:	1c59      	adds	r1, r3, #1
 8017af0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017af4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017af8:	b29d      	uxth	r5, r3
 8017afa:	43db      	mvns	r3, r3
 8017afc:	b2db      	uxtb	r3, r3
 8017afe:	9307      	str	r3, [sp, #28]
 8017b00:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017b02:	1220      	asrs	r0, r4, #8
 8017b04:	fb13 f905 	smulbb	r9, r3, r5
 8017b08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017b0c:	9b07      	ldr	r3, [sp, #28]
 8017b0e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8017b12:	fb00 9003 	mla	r0, r0, r3, r9
 8017b16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017b18:	10e1      	asrs	r1, r4, #3
 8017b1a:	fb13 f905 	smulbb	r9, r3, r5
 8017b1e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017b22:	9b07      	ldr	r3, [sp, #28]
 8017b24:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8017b28:	fb01 9103 	mla	r1, r1, r3, r9
 8017b2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b2e:	00e4      	lsls	r4, r4, #3
 8017b30:	fb13 f505 	smulbb	r5, r3, r5
 8017b34:	b2e4      	uxtb	r4, r4
 8017b36:	9b07      	ldr	r3, [sp, #28]
 8017b38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017b3c:	fb04 5403 	mla	r4, r4, r3, r5
 8017b40:	b280      	uxth	r0, r0
 8017b42:	b2a4      	uxth	r4, r4
 8017b44:	1c43      	adds	r3, r0, #1
 8017b46:	f104 0901 	add.w	r9, r4, #1
 8017b4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017b4e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8017b52:	b289      	uxth	r1, r1
 8017b54:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8017b58:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017b5c:	ea49 0000 	orr.w	r0, r9, r0
 8017b60:	f101 0901 	add.w	r9, r1, #1
 8017b64:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8017b68:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017b6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017b70:	ea40 0009 	orr.w	r0, r0, r9
 8017b74:	f8ac 0000 	strh.w	r0, [ip]
 8017b78:	4447      	add	r7, r8
 8017b7a:	b2bf      	uxth	r7, r7
 8017b7c:	2f07      	cmp	r7, #7
 8017b7e:	bf81      	itttt	hi
 8017b80:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8017b82:	785a      	ldrbhi	r2, [r3, #1]
 8017b84:	3301      	addhi	r3, #1
 8017b86:	9326      	strhi	r3, [sp, #152]	; 0x98
 8017b88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b8a:	bf9a      	itte	ls
 8017b8c:	fa42 f208 	asrls.w	r2, r2, r8
 8017b90:	b2d2      	uxtbls	r2, r2
 8017b92:	2700      	movhi	r7, #0
 8017b94:	449c      	add	ip, r3
 8017b96:	e792      	b.n	8017abe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8017b98:	441d      	add	r5, r3
 8017b9a:	b22d      	sxth	r5, r5
 8017b9c:	e6cc      	b.n	8017938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8017b9e:	bf00      	nop
 8017ba0:	2000eb08 	.word	0x2000eb08
 8017ba4:	2000eb10 	.word	0x2000eb10
 8017ba8:	2000eb0a 	.word	0x2000eb0a
 8017bac:	fffff800 	.word	0xfffff800
 8017bb0:	f1ba 0f01 	cmp.w	sl, #1
 8017bb4:	f47f aefa 	bne.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017bb8:	f1bb 0f01 	cmp.w	fp, #1
 8017bbc:	f47f aef6 	bne.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017bc0:	f8df b104 	ldr.w	fp, [pc, #260]	; 8017cc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8017bc4:	f8db 0000 	ldr.w	r0, [fp]
 8017bc8:	6803      	ldr	r3, [r0, #0]
 8017bca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8017bcc:	4798      	blx	r3
 8017bce:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8017bd2:	465a      	mov	r2, fp
 8017bd4:	d006      	beq.n	8017be4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8017bd6:	f1b8 0f04 	cmp.w	r8, #4
 8017bda:	d14c      	bne.n	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8017bdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017bde:	3300      	adds	r3, #0
 8017be0:	bf18      	it	ne
 8017be2:	2301      	movne	r3, #1
 8017be4:	0581      	lsls	r1, r0, #22
 8017be6:	d566      	bpl.n	8017cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8017be8:	f1b8 0f08 	cmp.w	r8, #8
 8017bec:	d163      	bne.n	8017cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8017bee:	2b00      	cmp	r3, #0
 8017bf0:	bf0c      	ite	eq
 8017bf2:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 8017bf6:	f44f 7c80 	movne.w	ip, #256	; 0x100
 8017bfa:	2e00      	cmp	r6, #0
 8017bfc:	f47f aed6 	bne.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017c00:	2f00      	cmp	r7, #0
 8017c02:	f47f aed3 	bne.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017c06:	9b07      	ldr	r3, [sp, #28]
 8017c08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017c0a:	18eb      	adds	r3, r5, r3
 8017c0c:	428b      	cmp	r3, r1
 8017c0e:	f73f aecd 	bgt.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017c12:	9b08      	ldr	r3, [sp, #32]
 8017c14:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017c16:	444b      	add	r3, r9
 8017c18:	428b      	cmp	r3, r1
 8017c1a:	f73f aec7 	bgt.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017c1e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017c20:	4e28      	ldr	r6, [pc, #160]	; (8017cc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 8017c22:	6810      	ldr	r0, [r2, #0]
 8017c24:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8017c28:	6803      	ldr	r3, [r0, #0]
 8017c2a:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 8017c2e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017c32:	4331      	orrs	r1, r6
 8017c34:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8017c36:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8017c38:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8017c3c:	f8cd c014 	str.w	ip, [sp, #20]
 8017c40:	f1b8 0f08 	cmp.w	r8, #8
 8017c44:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8017c48:	bf18      	it	ne
 8017c4a:	3401      	addne	r4, #1
 8017c4c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017c50:	bf18      	it	ne
 8017c52:	f024 0401 	bicne.w	r4, r4, #1
 8017c56:	ea41 0106 	orr.w	r1, r1, r6
 8017c5a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8017c5c:	bf18      	it	ne
 8017c5e:	b2a4      	uxthne	r4, r4
 8017c60:	b289      	uxth	r1, r1
 8017c62:	e9cd 1603 	strd	r1, r6, [sp, #12]
 8017c66:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8017c6a:	9400      	str	r4, [sp, #0]
 8017c6c:	9926      	ldr	r1, [sp, #152]	; 0x98
 8017c6e:	47a8      	blx	r5
 8017c70:	b017      	add	sp, #92	; 0x5c
 8017c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c76:	2300      	movs	r3, #0
 8017c78:	e7b4      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8017c7a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017c7c:	e6e3      	b.n	8017a46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 8017c7e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017c80:	e778      	b.n	8017b74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 8017c82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c84:	b153      	cbz	r3, 8017c9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 8017c86:	441f      	add	r7, r3
 8017c88:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017c8a:	b2bf      	uxth	r7, r7
 8017c8c:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8017c90:	f007 0707 	and.w	r7, r7, #7
 8017c94:	781a      	ldrb	r2, [r3, #0]
 8017c96:	9326      	str	r3, [sp, #152]	; 0x98
 8017c98:	413a      	asrs	r2, r7
 8017c9a:	b2d2      	uxtb	r2, r2
 8017c9c:	9b08      	ldr	r3, [sp, #32]
 8017c9e:	445b      	add	r3, fp
 8017ca0:	9308      	str	r3, [sp, #32]
 8017ca2:	e705      	b.n	8017ab0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8017ca4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ca6:	2b00      	cmp	r3, #0
 8017ca8:	d1e2      	bne.n	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8017caa:	4b07      	ldr	r3, [pc, #28]	; (8017cc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 8017cac:	6818      	ldr	r0, [r3, #0]
 8017cae:	6803      	ldr	r3, [r0, #0]
 8017cb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cb2:	4798      	blx	r3
 8017cb4:	e7dc      	b.n	8017c70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8017cb6:	2b00      	cmp	r3, #0
 8017cb8:	f43f ae78 	beq.w	80179ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017cbc:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8017cc0:	e79b      	b.n	8017bfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8017cc2:	bf00      	nop
 8017cc4:	fffff800 	.word	0xfffff800
 8017cc8:	2000eb10 	.word	0x2000eb10

08017ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8017ccc:	b538      	push	{r3, r4, r5, lr}
 8017cce:	4c15      	ldr	r4, [pc, #84]	; (8017d24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8017cd0:	7823      	ldrb	r3, [r4, #0]
 8017cd2:	f3bf 8f5b 	dmb	ish
 8017cd6:	07da      	lsls	r2, r3, #31
 8017cd8:	4605      	mov	r5, r0
 8017cda:	d40b      	bmi.n	8017cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017cdc:	4620      	mov	r0, r4
 8017cde:	f009 f882 	bl	8020de6 <__cxa_guard_acquire>
 8017ce2:	b138      	cbz	r0, 8017cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017ce4:	4620      	mov	r0, r4
 8017ce6:	f009 f88a 	bl	8020dfe <__cxa_guard_release>
 8017cea:	4a0f      	ldr	r2, [pc, #60]	; (8017d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017cec:	490f      	ldr	r1, [pc, #60]	; (8017d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8017cee:	4810      	ldr	r0, [pc, #64]	; (8017d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017cf0:	f009 f872 	bl	8020dd8 <__aeabi_atexit>
 8017cf4:	4c0f      	ldr	r4, [pc, #60]	; (8017d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8017cf6:	7823      	ldrb	r3, [r4, #0]
 8017cf8:	f3bf 8f5b 	dmb	ish
 8017cfc:	07db      	lsls	r3, r3, #31
 8017cfe:	d40b      	bmi.n	8017d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017d00:	4620      	mov	r0, r4
 8017d02:	f009 f870 	bl	8020de6 <__cxa_guard_acquire>
 8017d06:	b138      	cbz	r0, 8017d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017d08:	4620      	mov	r0, r4
 8017d0a:	f009 f878 	bl	8020dfe <__cxa_guard_release>
 8017d0e:	4a06      	ldr	r2, [pc, #24]	; (8017d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017d10:	4909      	ldr	r1, [pc, #36]	; (8017d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8017d12:	480a      	ldr	r0, [pc, #40]	; (8017d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017d14:	f009 f860 	bl	8020dd8 <__aeabi_atexit>
 8017d18:	4b05      	ldr	r3, [pc, #20]	; (8017d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017d1a:	612b      	str	r3, [r5, #16]
 8017d1c:	4b07      	ldr	r3, [pc, #28]	; (8017d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017d1e:	616b      	str	r3, [r5, #20]
 8017d20:	bd38      	pop	{r3, r4, r5, pc}
 8017d22:	bf00      	nop
 8017d24:	2000ebfc 	.word	0x2000ebfc
 8017d28:	20000000 	.word	0x20000000
 8017d2c:	080160d9 	.word	0x080160d9
 8017d30:	200000c8 	.word	0x200000c8
 8017d34:	2000ec00 	.word	0x2000ec00
 8017d38:	080160d7 	.word	0x080160d7
 8017d3c:	200000cc 	.word	0x200000cc

08017d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8017d40:	b538      	push	{r3, r4, r5, lr}
 8017d42:	4c15      	ldr	r4, [pc, #84]	; (8017d98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8017d44:	7823      	ldrb	r3, [r4, #0]
 8017d46:	f3bf 8f5b 	dmb	ish
 8017d4a:	07da      	lsls	r2, r3, #31
 8017d4c:	4605      	mov	r5, r0
 8017d4e:	d40b      	bmi.n	8017d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017d50:	4620      	mov	r0, r4
 8017d52:	f009 f848 	bl	8020de6 <__cxa_guard_acquire>
 8017d56:	b138      	cbz	r0, 8017d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017d58:	4620      	mov	r0, r4
 8017d5a:	f009 f850 	bl	8020dfe <__cxa_guard_release>
 8017d5e:	4a0f      	ldr	r2, [pc, #60]	; (8017d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017d60:	490f      	ldr	r1, [pc, #60]	; (8017da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8017d62:	4810      	ldr	r0, [pc, #64]	; (8017da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017d64:	f009 f838 	bl	8020dd8 <__aeabi_atexit>
 8017d68:	4c0f      	ldr	r4, [pc, #60]	; (8017da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017d6a:	7823      	ldrb	r3, [r4, #0]
 8017d6c:	f3bf 8f5b 	dmb	ish
 8017d70:	07db      	lsls	r3, r3, #31
 8017d72:	d40b      	bmi.n	8017d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017d74:	4620      	mov	r0, r4
 8017d76:	f009 f836 	bl	8020de6 <__cxa_guard_acquire>
 8017d7a:	b138      	cbz	r0, 8017d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017d7c:	4620      	mov	r0, r4
 8017d7e:	f009 f83e 	bl	8020dfe <__cxa_guard_release>
 8017d82:	4a06      	ldr	r2, [pc, #24]	; (8017d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017d84:	4909      	ldr	r1, [pc, #36]	; (8017dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8017d86:	480a      	ldr	r0, [pc, #40]	; (8017db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017d88:	f009 f826 	bl	8020dd8 <__aeabi_atexit>
 8017d8c:	4b05      	ldr	r3, [pc, #20]	; (8017da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017d8e:	60ab      	str	r3, [r5, #8]
 8017d90:	4b07      	ldr	r3, [pc, #28]	; (8017db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017d92:	60eb      	str	r3, [r5, #12]
 8017d94:	bd38      	pop	{r3, r4, r5, pc}
 8017d96:	bf00      	nop
 8017d98:	2000ebd4 	.word	0x2000ebd4
 8017d9c:	20000000 	.word	0x20000000
 8017da0:	080160dd 	.word	0x080160dd
 8017da4:	200000a0 	.word	0x200000a0
 8017da8:	2000ebd8 	.word	0x2000ebd8
 8017dac:	080160db 	.word	0x080160db
 8017db0:	200000a4 	.word	0x200000a4

08017db4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8017db4:	b510      	push	{r4, lr}
 8017db6:	4604      	mov	r4, r0
 8017db8:	f7ff ff88 	bl	8017ccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8017dbc:	4620      	mov	r0, r4
 8017dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017dc2:	f7ff bfbd 	b.w	8017d40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08017dc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017dc8:	b538      	push	{r3, r4, r5, lr}
 8017dca:	4c15      	ldr	r4, [pc, #84]	; (8017e20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017dcc:	7823      	ldrb	r3, [r4, #0]
 8017dce:	f3bf 8f5b 	dmb	ish
 8017dd2:	07da      	lsls	r2, r3, #31
 8017dd4:	4605      	mov	r5, r0
 8017dd6:	d40b      	bmi.n	8017df0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017dd8:	4620      	mov	r0, r4
 8017dda:	f009 f804 	bl	8020de6 <__cxa_guard_acquire>
 8017dde:	b138      	cbz	r0, 8017df0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017de0:	4620      	mov	r0, r4
 8017de2:	f009 f80c 	bl	8020dfe <__cxa_guard_release>
 8017de6:	4a0f      	ldr	r2, [pc, #60]	; (8017e24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017de8:	490f      	ldr	r1, [pc, #60]	; (8017e28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017dea:	4810      	ldr	r0, [pc, #64]	; (8017e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017dec:	f008 fff4 	bl	8020dd8 <__aeabi_atexit>
 8017df0:	4c0f      	ldr	r4, [pc, #60]	; (8017e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017df2:	7823      	ldrb	r3, [r4, #0]
 8017df4:	f3bf 8f5b 	dmb	ish
 8017df8:	07db      	lsls	r3, r3, #31
 8017dfa:	d40b      	bmi.n	8017e14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017dfc:	4620      	mov	r0, r4
 8017dfe:	f008 fff2 	bl	8020de6 <__cxa_guard_acquire>
 8017e02:	b138      	cbz	r0, 8017e14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017e04:	4620      	mov	r0, r4
 8017e06:	f008 fffa 	bl	8020dfe <__cxa_guard_release>
 8017e0a:	4a06      	ldr	r2, [pc, #24]	; (8017e24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017e0c:	4909      	ldr	r1, [pc, #36]	; (8017e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017e0e:	480a      	ldr	r0, [pc, #40]	; (8017e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017e10:	f008 ffe2 	bl	8020dd8 <__aeabi_atexit>
 8017e14:	4b05      	ldr	r3, [pc, #20]	; (8017e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017e16:	622b      	str	r3, [r5, #32]
 8017e18:	4b07      	ldr	r3, [pc, #28]	; (8017e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017e1a:	626b      	str	r3, [r5, #36]	; 0x24
 8017e1c:	bd38      	pop	{r3, r4, r5, pc}
 8017e1e:	bf00      	nop
 8017e20:	2000ec04 	.word	0x2000ec04
 8017e24:	20000000 	.word	0x20000000
 8017e28:	080160d1 	.word	0x080160d1
 8017e2c:	200000d0 	.word	0x200000d0
 8017e30:	2000ec08 	.word	0x2000ec08
 8017e34:	080160cf 	.word	0x080160cf
 8017e38:	200000d4 	.word	0x200000d4

08017e3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017e3c:	b538      	push	{r3, r4, r5, lr}
 8017e3e:	4c15      	ldr	r4, [pc, #84]	; (8017e94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017e40:	7823      	ldrb	r3, [r4, #0]
 8017e42:	f3bf 8f5b 	dmb	ish
 8017e46:	07da      	lsls	r2, r3, #31
 8017e48:	4605      	mov	r5, r0
 8017e4a:	d40b      	bmi.n	8017e64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017e4c:	4620      	mov	r0, r4
 8017e4e:	f008 ffca 	bl	8020de6 <__cxa_guard_acquire>
 8017e52:	b138      	cbz	r0, 8017e64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017e54:	4620      	mov	r0, r4
 8017e56:	f008 ffd2 	bl	8020dfe <__cxa_guard_release>
 8017e5a:	4a0f      	ldr	r2, [pc, #60]	; (8017e98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017e5c:	490f      	ldr	r1, [pc, #60]	; (8017e9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017e5e:	4810      	ldr	r0, [pc, #64]	; (8017ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017e60:	f008 ffba 	bl	8020dd8 <__aeabi_atexit>
 8017e64:	4c0f      	ldr	r4, [pc, #60]	; (8017ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017e66:	7823      	ldrb	r3, [r4, #0]
 8017e68:	f3bf 8f5b 	dmb	ish
 8017e6c:	07db      	lsls	r3, r3, #31
 8017e6e:	d40b      	bmi.n	8017e88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017e70:	4620      	mov	r0, r4
 8017e72:	f008 ffb8 	bl	8020de6 <__cxa_guard_acquire>
 8017e76:	b138      	cbz	r0, 8017e88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017e78:	4620      	mov	r0, r4
 8017e7a:	f008 ffc0 	bl	8020dfe <__cxa_guard_release>
 8017e7e:	4a06      	ldr	r2, [pc, #24]	; (8017e98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017e80:	4909      	ldr	r1, [pc, #36]	; (8017ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017e82:	480a      	ldr	r0, [pc, #40]	; (8017eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017e84:	f008 ffa8 	bl	8020dd8 <__aeabi_atexit>
 8017e88:	4b05      	ldr	r3, [pc, #20]	; (8017ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017e8a:	61ab      	str	r3, [r5, #24]
 8017e8c:	4b07      	ldr	r3, [pc, #28]	; (8017eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017e8e:	61eb      	str	r3, [r5, #28]
 8017e90:	bd38      	pop	{r3, r4, r5, pc}
 8017e92:	bf00      	nop
 8017e94:	2000ebdc 	.word	0x2000ebdc
 8017e98:	20000000 	.word	0x20000000
 8017e9c:	080160d5 	.word	0x080160d5
 8017ea0:	200000a8 	.word	0x200000a8
 8017ea4:	2000ebe0 	.word	0x2000ebe0
 8017ea8:	080160d3 	.word	0x080160d3
 8017eac:	200000ac 	.word	0x200000ac

08017eb0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8017eb0:	b510      	push	{r4, lr}
 8017eb2:	4604      	mov	r4, r0
 8017eb4:	f7ff ff88 	bl	8017dc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017eb8:	4620      	mov	r0, r4
 8017eba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ebe:	f7ff bfbd 	b.w	8017e3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017ec4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017ec4:	b538      	push	{r3, r4, r5, lr}
 8017ec6:	4c15      	ldr	r4, [pc, #84]	; (8017f1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017ec8:	7823      	ldrb	r3, [r4, #0]
 8017eca:	f3bf 8f5b 	dmb	ish
 8017ece:	07da      	lsls	r2, r3, #31
 8017ed0:	4605      	mov	r5, r0
 8017ed2:	d40b      	bmi.n	8017eec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017ed4:	4620      	mov	r0, r4
 8017ed6:	f008 ff86 	bl	8020de6 <__cxa_guard_acquire>
 8017eda:	b138      	cbz	r0, 8017eec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017edc:	4620      	mov	r0, r4
 8017ede:	f008 ff8e 	bl	8020dfe <__cxa_guard_release>
 8017ee2:	4a0f      	ldr	r2, [pc, #60]	; (8017f20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017ee4:	490f      	ldr	r1, [pc, #60]	; (8017f24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017ee6:	4810      	ldr	r0, [pc, #64]	; (8017f28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017ee8:	f008 ff76 	bl	8020dd8 <__aeabi_atexit>
 8017eec:	4c0f      	ldr	r4, [pc, #60]	; (8017f2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017eee:	7823      	ldrb	r3, [r4, #0]
 8017ef0:	f3bf 8f5b 	dmb	ish
 8017ef4:	07db      	lsls	r3, r3, #31
 8017ef6:	d40b      	bmi.n	8017f10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017ef8:	4620      	mov	r0, r4
 8017efa:	f008 ff74 	bl	8020de6 <__cxa_guard_acquire>
 8017efe:	b138      	cbz	r0, 8017f10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017f00:	4620      	mov	r0, r4
 8017f02:	f008 ff7c 	bl	8020dfe <__cxa_guard_release>
 8017f06:	4a06      	ldr	r2, [pc, #24]	; (8017f20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017f08:	4909      	ldr	r1, [pc, #36]	; (8017f30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017f0a:	480a      	ldr	r0, [pc, #40]	; (8017f34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017f0c:	f008 ff64 	bl	8020dd8 <__aeabi_atexit>
 8017f10:	4b05      	ldr	r3, [pc, #20]	; (8017f28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017f12:	632b      	str	r3, [r5, #48]	; 0x30
 8017f14:	4b07      	ldr	r3, [pc, #28]	; (8017f34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017f16:	636b      	str	r3, [r5, #52]	; 0x34
 8017f18:	bd38      	pop	{r3, r4, r5, pc}
 8017f1a:	bf00      	nop
 8017f1c:	2000ec14 	.word	0x2000ec14
 8017f20:	20000000 	.word	0x20000000
 8017f24:	080160c9 	.word	0x080160c9
 8017f28:	200000e0 	.word	0x200000e0
 8017f2c:	2000ec18 	.word	0x2000ec18
 8017f30:	080160c7 	.word	0x080160c7
 8017f34:	200000e4 	.word	0x200000e4

08017f38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017f38:	b538      	push	{r3, r4, r5, lr}
 8017f3a:	4c15      	ldr	r4, [pc, #84]	; (8017f90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017f3c:	7823      	ldrb	r3, [r4, #0]
 8017f3e:	f3bf 8f5b 	dmb	ish
 8017f42:	07da      	lsls	r2, r3, #31
 8017f44:	4605      	mov	r5, r0
 8017f46:	d40b      	bmi.n	8017f60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017f48:	4620      	mov	r0, r4
 8017f4a:	f008 ff4c 	bl	8020de6 <__cxa_guard_acquire>
 8017f4e:	b138      	cbz	r0, 8017f60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017f50:	4620      	mov	r0, r4
 8017f52:	f008 ff54 	bl	8020dfe <__cxa_guard_release>
 8017f56:	4a0f      	ldr	r2, [pc, #60]	; (8017f94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017f58:	490f      	ldr	r1, [pc, #60]	; (8017f98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017f5a:	4810      	ldr	r0, [pc, #64]	; (8017f9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017f5c:	f008 ff3c 	bl	8020dd8 <__aeabi_atexit>
 8017f60:	4c0f      	ldr	r4, [pc, #60]	; (8017fa0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8017f62:	7823      	ldrb	r3, [r4, #0]
 8017f64:	f3bf 8f5b 	dmb	ish
 8017f68:	07db      	lsls	r3, r3, #31
 8017f6a:	d40b      	bmi.n	8017f84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017f6c:	4620      	mov	r0, r4
 8017f6e:	f008 ff3a 	bl	8020de6 <__cxa_guard_acquire>
 8017f72:	b138      	cbz	r0, 8017f84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017f74:	4620      	mov	r0, r4
 8017f76:	f008 ff42 	bl	8020dfe <__cxa_guard_release>
 8017f7a:	4a06      	ldr	r2, [pc, #24]	; (8017f94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017f7c:	4909      	ldr	r1, [pc, #36]	; (8017fa4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8017f7e:	480a      	ldr	r0, [pc, #40]	; (8017fa8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017f80:	f008 ff2a 	bl	8020dd8 <__aeabi_atexit>
 8017f84:	4b05      	ldr	r3, [pc, #20]	; (8017f9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017f86:	62ab      	str	r3, [r5, #40]	; 0x28
 8017f88:	4b07      	ldr	r3, [pc, #28]	; (8017fa8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017f8a:	62eb      	str	r3, [r5, #44]	; 0x2c
 8017f8c:	bd38      	pop	{r3, r4, r5, pc}
 8017f8e:	bf00      	nop
 8017f90:	2000ebe4 	.word	0x2000ebe4
 8017f94:	20000000 	.word	0x20000000
 8017f98:	080160cd 	.word	0x080160cd
 8017f9c:	200000b0 	.word	0x200000b0
 8017fa0:	2000ebe8 	.word	0x2000ebe8
 8017fa4:	080160cb 	.word	0x080160cb
 8017fa8:	200000b4 	.word	0x200000b4

08017fac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8017fac:	b510      	push	{r4, lr}
 8017fae:	4604      	mov	r4, r0
 8017fb0:	f7ff ff88 	bl	8017ec4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8017fb4:	4620      	mov	r0, r4
 8017fb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fba:	f7ff bfbd 	b.w	8017f38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08017fc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8017fc0:	b538      	push	{r3, r4, r5, lr}
 8017fc2:	4c15      	ldr	r4, [pc, #84]	; (8018018 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8017fc4:	7823      	ldrb	r3, [r4, #0]
 8017fc6:	f3bf 8f5b 	dmb	ish
 8017fca:	07da      	lsls	r2, r3, #31
 8017fcc:	4605      	mov	r5, r0
 8017fce:	d40b      	bmi.n	8017fe8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017fd0:	4620      	mov	r0, r4
 8017fd2:	f008 ff08 	bl	8020de6 <__cxa_guard_acquire>
 8017fd6:	b138      	cbz	r0, 8017fe8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017fd8:	4620      	mov	r0, r4
 8017fda:	f008 ff10 	bl	8020dfe <__cxa_guard_release>
 8017fde:	4a0f      	ldr	r2, [pc, #60]	; (801801c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017fe0:	490f      	ldr	r1, [pc, #60]	; (8018020 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8017fe2:	4810      	ldr	r0, [pc, #64]	; (8018024 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017fe4:	f008 fef8 	bl	8020dd8 <__aeabi_atexit>
 8017fe8:	4c0f      	ldr	r4, [pc, #60]	; (8018028 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8017fea:	7823      	ldrb	r3, [r4, #0]
 8017fec:	f3bf 8f5b 	dmb	ish
 8017ff0:	07db      	lsls	r3, r3, #31
 8017ff2:	d40b      	bmi.n	801800c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017ff4:	4620      	mov	r0, r4
 8017ff6:	f008 fef6 	bl	8020de6 <__cxa_guard_acquire>
 8017ffa:	b138      	cbz	r0, 801800c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017ffc:	4620      	mov	r0, r4
 8017ffe:	f008 fefe 	bl	8020dfe <__cxa_guard_release>
 8018002:	4a06      	ldr	r2, [pc, #24]	; (801801c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018004:	4909      	ldr	r1, [pc, #36]	; (801802c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018006:	480a      	ldr	r0, [pc, #40]	; (8018030 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018008:	f008 fee6 	bl	8020dd8 <__aeabi_atexit>
 801800c:	4b05      	ldr	r3, [pc, #20]	; (8018024 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801800e:	652b      	str	r3, [r5, #80]	; 0x50
 8018010:	4b07      	ldr	r3, [pc, #28]	; (8018030 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018012:	656b      	str	r3, [r5, #84]	; 0x54
 8018014:	bd38      	pop	{r3, r4, r5, pc}
 8018016:	bf00      	nop
 8018018:	2000ec1c 	.word	0x2000ec1c
 801801c:	20000000 	.word	0x20000000
 8018020:	080160b9 	.word	0x080160b9
 8018024:	200000e8 	.word	0x200000e8
 8018028:	2000ec20 	.word	0x2000ec20
 801802c:	080160b7 	.word	0x080160b7
 8018030:	200000ec 	.word	0x200000ec

08018034 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018034:	b538      	push	{r3, r4, r5, lr}
 8018036:	4c15      	ldr	r4, [pc, #84]	; (801808c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018038:	7823      	ldrb	r3, [r4, #0]
 801803a:	f3bf 8f5b 	dmb	ish
 801803e:	07da      	lsls	r2, r3, #31
 8018040:	4605      	mov	r5, r0
 8018042:	d40b      	bmi.n	801805c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018044:	4620      	mov	r0, r4
 8018046:	f008 fece 	bl	8020de6 <__cxa_guard_acquire>
 801804a:	b138      	cbz	r0, 801805c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801804c:	4620      	mov	r0, r4
 801804e:	f008 fed6 	bl	8020dfe <__cxa_guard_release>
 8018052:	4a0f      	ldr	r2, [pc, #60]	; (8018090 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018054:	490f      	ldr	r1, [pc, #60]	; (8018094 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018056:	4810      	ldr	r0, [pc, #64]	; (8018098 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018058:	f008 febe 	bl	8020dd8 <__aeabi_atexit>
 801805c:	4c0f      	ldr	r4, [pc, #60]	; (801809c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801805e:	7823      	ldrb	r3, [r4, #0]
 8018060:	f3bf 8f5b 	dmb	ish
 8018064:	07db      	lsls	r3, r3, #31
 8018066:	d40b      	bmi.n	8018080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018068:	4620      	mov	r0, r4
 801806a:	f008 febc 	bl	8020de6 <__cxa_guard_acquire>
 801806e:	b138      	cbz	r0, 8018080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018070:	4620      	mov	r0, r4
 8018072:	f008 fec4 	bl	8020dfe <__cxa_guard_release>
 8018076:	4a06      	ldr	r2, [pc, #24]	; (8018090 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018078:	4909      	ldr	r1, [pc, #36]	; (80180a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801807a:	480a      	ldr	r0, [pc, #40]	; (80180a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801807c:	f008 feac 	bl	8020dd8 <__aeabi_atexit>
 8018080:	4b05      	ldr	r3, [pc, #20]	; (8018098 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018082:	64ab      	str	r3, [r5, #72]	; 0x48
 8018084:	4b07      	ldr	r3, [pc, #28]	; (80180a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018086:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018088:	bd38      	pop	{r3, r4, r5, pc}
 801808a:	bf00      	nop
 801808c:	2000ec24 	.word	0x2000ec24
 8018090:	20000000 	.word	0x20000000
 8018094:	080160bd 	.word	0x080160bd
 8018098:	200000f0 	.word	0x200000f0
 801809c:	2000ec28 	.word	0x2000ec28
 80180a0:	080160bb 	.word	0x080160bb
 80180a4:	200000f4 	.word	0x200000f4

080180a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80180a8:	b538      	push	{r3, r4, r5, lr}
 80180aa:	4c15      	ldr	r4, [pc, #84]	; (8018100 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80180ac:	7823      	ldrb	r3, [r4, #0]
 80180ae:	f3bf 8f5b 	dmb	ish
 80180b2:	07da      	lsls	r2, r3, #31
 80180b4:	4605      	mov	r5, r0
 80180b6:	d40b      	bmi.n	80180d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80180b8:	4620      	mov	r0, r4
 80180ba:	f008 fe94 	bl	8020de6 <__cxa_guard_acquire>
 80180be:	b138      	cbz	r0, 80180d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80180c0:	4620      	mov	r0, r4
 80180c2:	f008 fe9c 	bl	8020dfe <__cxa_guard_release>
 80180c6:	4a0f      	ldr	r2, [pc, #60]	; (8018104 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80180c8:	490f      	ldr	r1, [pc, #60]	; (8018108 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80180ca:	4810      	ldr	r0, [pc, #64]	; (801810c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80180cc:	f008 fe84 	bl	8020dd8 <__aeabi_atexit>
 80180d0:	4c0f      	ldr	r4, [pc, #60]	; (8018110 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80180d2:	7823      	ldrb	r3, [r4, #0]
 80180d4:	f3bf 8f5b 	dmb	ish
 80180d8:	07db      	lsls	r3, r3, #31
 80180da:	d40b      	bmi.n	80180f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80180dc:	4620      	mov	r0, r4
 80180de:	f008 fe82 	bl	8020de6 <__cxa_guard_acquire>
 80180e2:	b138      	cbz	r0, 80180f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80180e4:	4620      	mov	r0, r4
 80180e6:	f008 fe8a 	bl	8020dfe <__cxa_guard_release>
 80180ea:	4a06      	ldr	r2, [pc, #24]	; (8018104 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80180ec:	4909      	ldr	r1, [pc, #36]	; (8018114 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80180ee:	480a      	ldr	r0, [pc, #40]	; (8018118 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80180f0:	f008 fe72 	bl	8020dd8 <__aeabi_atexit>
 80180f4:	4b05      	ldr	r3, [pc, #20]	; (801810c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80180f6:	642b      	str	r3, [r5, #64]	; 0x40
 80180f8:	4b07      	ldr	r3, [pc, #28]	; (8018118 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80180fa:	646b      	str	r3, [r5, #68]	; 0x44
 80180fc:	bd38      	pop	{r3, r4, r5, pc}
 80180fe:	bf00      	nop
 8018100:	2000ebec 	.word	0x2000ebec
 8018104:	20000000 	.word	0x20000000
 8018108:	080160c1 	.word	0x080160c1
 801810c:	200000b8 	.word	0x200000b8
 8018110:	2000ebf0 	.word	0x2000ebf0
 8018114:	080160bf 	.word	0x080160bf
 8018118:	200000bc 	.word	0x200000bc

0801811c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801811c:	b538      	push	{r3, r4, r5, lr}
 801811e:	4c15      	ldr	r4, [pc, #84]	; (8018174 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018120:	7823      	ldrb	r3, [r4, #0]
 8018122:	f3bf 8f5b 	dmb	ish
 8018126:	07da      	lsls	r2, r3, #31
 8018128:	4605      	mov	r5, r0
 801812a:	d40b      	bmi.n	8018144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801812c:	4620      	mov	r0, r4
 801812e:	f008 fe5a 	bl	8020de6 <__cxa_guard_acquire>
 8018132:	b138      	cbz	r0, 8018144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018134:	4620      	mov	r0, r4
 8018136:	f008 fe62 	bl	8020dfe <__cxa_guard_release>
 801813a:	4a0f      	ldr	r2, [pc, #60]	; (8018178 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801813c:	490f      	ldr	r1, [pc, #60]	; (801817c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801813e:	4810      	ldr	r0, [pc, #64]	; (8018180 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018140:	f008 fe4a 	bl	8020dd8 <__aeabi_atexit>
 8018144:	4c0f      	ldr	r4, [pc, #60]	; (8018184 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018146:	7823      	ldrb	r3, [r4, #0]
 8018148:	f3bf 8f5b 	dmb	ish
 801814c:	07db      	lsls	r3, r3, #31
 801814e:	d40b      	bmi.n	8018168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018150:	4620      	mov	r0, r4
 8018152:	f008 fe48 	bl	8020de6 <__cxa_guard_acquire>
 8018156:	b138      	cbz	r0, 8018168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018158:	4620      	mov	r0, r4
 801815a:	f008 fe50 	bl	8020dfe <__cxa_guard_release>
 801815e:	4a06      	ldr	r2, [pc, #24]	; (8018178 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018160:	4909      	ldr	r1, [pc, #36]	; (8018188 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018162:	480a      	ldr	r0, [pc, #40]	; (801818c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018164:	f008 fe38 	bl	8020dd8 <__aeabi_atexit>
 8018168:	4b05      	ldr	r3, [pc, #20]	; (8018180 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801816a:	63ab      	str	r3, [r5, #56]	; 0x38
 801816c:	4b07      	ldr	r3, [pc, #28]	; (801818c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801816e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018170:	bd38      	pop	{r3, r4, r5, pc}
 8018172:	bf00      	nop
 8018174:	2000ec0c 	.word	0x2000ec0c
 8018178:	20000000 	.word	0x20000000
 801817c:	080160c5 	.word	0x080160c5
 8018180:	200000d8 	.word	0x200000d8
 8018184:	2000ec10 	.word	0x2000ec10
 8018188:	080160c3 	.word	0x080160c3
 801818c:	200000dc 	.word	0x200000dc

08018190 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018190:	b510      	push	{r4, lr}
 8018192:	4604      	mov	r4, r0
 8018194:	f7ff ff14 	bl	8017fc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018198:	4620      	mov	r0, r4
 801819a:	f7ff ff85 	bl	80180a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801819e:	4620      	mov	r0, r4
 80181a0:	f7ff ff48 	bl	8018034 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80181a4:	4620      	mov	r0, r4
 80181a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80181aa:	f7ff bfb7 	b.w	801811c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080181b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80181b0:	b538      	push	{r3, r4, r5, lr}
 80181b2:	4c15      	ldr	r4, [pc, #84]	; (8018208 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80181b4:	7823      	ldrb	r3, [r4, #0]
 80181b6:	f3bf 8f5b 	dmb	ish
 80181ba:	07da      	lsls	r2, r3, #31
 80181bc:	4605      	mov	r5, r0
 80181be:	d40b      	bmi.n	80181d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80181c0:	4620      	mov	r0, r4
 80181c2:	f008 fe10 	bl	8020de6 <__cxa_guard_acquire>
 80181c6:	b138      	cbz	r0, 80181d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80181c8:	4620      	mov	r0, r4
 80181ca:	f008 fe18 	bl	8020dfe <__cxa_guard_release>
 80181ce:	4a0f      	ldr	r2, [pc, #60]	; (801820c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80181d0:	490f      	ldr	r1, [pc, #60]	; (8018210 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80181d2:	4810      	ldr	r0, [pc, #64]	; (8018214 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80181d4:	f008 fe00 	bl	8020dd8 <__aeabi_atexit>
 80181d8:	4c0f      	ldr	r4, [pc, #60]	; (8018218 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80181da:	7823      	ldrb	r3, [r4, #0]
 80181dc:	f3bf 8f5b 	dmb	ish
 80181e0:	07db      	lsls	r3, r3, #31
 80181e2:	d40b      	bmi.n	80181fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80181e4:	4620      	mov	r0, r4
 80181e6:	f008 fdfe 	bl	8020de6 <__cxa_guard_acquire>
 80181ea:	b138      	cbz	r0, 80181fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80181ec:	4620      	mov	r0, r4
 80181ee:	f008 fe06 	bl	8020dfe <__cxa_guard_release>
 80181f2:	4a06      	ldr	r2, [pc, #24]	; (801820c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80181f4:	4909      	ldr	r1, [pc, #36]	; (801821c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80181f6:	480a      	ldr	r0, [pc, #40]	; (8018220 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80181f8:	f008 fdee 	bl	8020dd8 <__aeabi_atexit>
 80181fc:	4b05      	ldr	r3, [pc, #20]	; (8018214 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80181fe:	662b      	str	r3, [r5, #96]	; 0x60
 8018200:	4b07      	ldr	r3, [pc, #28]	; (8018220 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018202:	666b      	str	r3, [r5, #100]	; 0x64
 8018204:	bd38      	pop	{r3, r4, r5, pc}
 8018206:	bf00      	nop
 8018208:	2000ebf4 	.word	0x2000ebf4
 801820c:	20000000 	.word	0x20000000
 8018210:	080160b1 	.word	0x080160b1
 8018214:	200000c0 	.word	0x200000c0
 8018218:	2000ebf8 	.word	0x2000ebf8
 801821c:	080160af 	.word	0x080160af
 8018220:	200000c4 	.word	0x200000c4

08018224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018224:	b538      	push	{r3, r4, r5, lr}
 8018226:	4c15      	ldr	r4, [pc, #84]	; (801827c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018228:	7823      	ldrb	r3, [r4, #0]
 801822a:	f3bf 8f5b 	dmb	ish
 801822e:	07da      	lsls	r2, r3, #31
 8018230:	4605      	mov	r5, r0
 8018232:	d40b      	bmi.n	801824c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018234:	4620      	mov	r0, r4
 8018236:	f008 fdd6 	bl	8020de6 <__cxa_guard_acquire>
 801823a:	b138      	cbz	r0, 801824c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801823c:	4620      	mov	r0, r4
 801823e:	f008 fdde 	bl	8020dfe <__cxa_guard_release>
 8018242:	4a0f      	ldr	r2, [pc, #60]	; (8018280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018244:	490f      	ldr	r1, [pc, #60]	; (8018284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018246:	4810      	ldr	r0, [pc, #64]	; (8018288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018248:	f008 fdc6 	bl	8020dd8 <__aeabi_atexit>
 801824c:	4c0f      	ldr	r4, [pc, #60]	; (801828c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801824e:	7823      	ldrb	r3, [r4, #0]
 8018250:	f3bf 8f5b 	dmb	ish
 8018254:	07db      	lsls	r3, r3, #31
 8018256:	d40b      	bmi.n	8018270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018258:	4620      	mov	r0, r4
 801825a:	f008 fdc4 	bl	8020de6 <__cxa_guard_acquire>
 801825e:	b138      	cbz	r0, 8018270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018260:	4620      	mov	r0, r4
 8018262:	f008 fdcc 	bl	8020dfe <__cxa_guard_release>
 8018266:	4a06      	ldr	r2, [pc, #24]	; (8018280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018268:	4909      	ldr	r1, [pc, #36]	; (8018290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801826a:	480a      	ldr	r0, [pc, #40]	; (8018294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801826c:	f008 fdb4 	bl	8020dd8 <__aeabi_atexit>
 8018270:	4b05      	ldr	r3, [pc, #20]	; (8018288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018272:	65ab      	str	r3, [r5, #88]	; 0x58
 8018274:	4b07      	ldr	r3, [pc, #28]	; (8018294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018276:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018278:	bd38      	pop	{r3, r4, r5, pc}
 801827a:	bf00      	nop
 801827c:	2000ebcc 	.word	0x2000ebcc
 8018280:	20000000 	.word	0x20000000
 8018284:	080160b5 	.word	0x080160b5
 8018288:	20000098 	.word	0x20000098
 801828c:	2000ebd0 	.word	0x2000ebd0
 8018290:	080160b3 	.word	0x080160b3
 8018294:	2000009c 	.word	0x2000009c

08018298 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018298:	b510      	push	{r4, lr}
 801829a:	4604      	mov	r4, r0
 801829c:	f7ff ff88 	bl	80181b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80182a0:	4620      	mov	r0, r4
 80182a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182a6:	f7ff bfbd 	b.w	8018224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080182ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80182ac:	b538      	push	{r3, r4, r5, lr}
 80182ae:	4c15      	ldr	r4, [pc, #84]	; (8018304 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80182b0:	7823      	ldrb	r3, [r4, #0]
 80182b2:	f3bf 8f5b 	dmb	ish
 80182b6:	07da      	lsls	r2, r3, #31
 80182b8:	4605      	mov	r5, r0
 80182ba:	d40b      	bmi.n	80182d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80182bc:	4620      	mov	r0, r4
 80182be:	f008 fd92 	bl	8020de6 <__cxa_guard_acquire>
 80182c2:	b138      	cbz	r0, 80182d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80182c4:	4620      	mov	r0, r4
 80182c6:	f008 fd9a 	bl	8020dfe <__cxa_guard_release>
 80182ca:	4a0f      	ldr	r2, [pc, #60]	; (8018308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80182cc:	490f      	ldr	r1, [pc, #60]	; (801830c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80182ce:	4810      	ldr	r0, [pc, #64]	; (8018310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80182d0:	f008 fd82 	bl	8020dd8 <__aeabi_atexit>
 80182d4:	4c0f      	ldr	r4, [pc, #60]	; (8018314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80182d6:	7823      	ldrb	r3, [r4, #0]
 80182d8:	f3bf 8f5b 	dmb	ish
 80182dc:	07db      	lsls	r3, r3, #31
 80182de:	d40b      	bmi.n	80182f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80182e0:	4620      	mov	r0, r4
 80182e2:	f008 fd80 	bl	8020de6 <__cxa_guard_acquire>
 80182e6:	b138      	cbz	r0, 80182f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80182e8:	4620      	mov	r0, r4
 80182ea:	f008 fd88 	bl	8020dfe <__cxa_guard_release>
 80182ee:	4a06      	ldr	r2, [pc, #24]	; (8018308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80182f0:	4909      	ldr	r1, [pc, #36]	; (8018318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80182f2:	480a      	ldr	r0, [pc, #40]	; (801831c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80182f4:	f008 fd70 	bl	8020dd8 <__aeabi_atexit>
 80182f8:	4b05      	ldr	r3, [pc, #20]	; (8018310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80182fa:	672b      	str	r3, [r5, #112]	; 0x70
 80182fc:	4b07      	ldr	r3, [pc, #28]	; (801831c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80182fe:	676b      	str	r3, [r5, #116]	; 0x74
 8018300:	bd38      	pop	{r3, r4, r5, pc}
 8018302:	bf00      	nop
 8018304:	2000ebc4 	.word	0x2000ebc4
 8018308:	20000000 	.word	0x20000000
 801830c:	080160a9 	.word	0x080160a9
 8018310:	20000090 	.word	0x20000090
 8018314:	2000ebc8 	.word	0x2000ebc8
 8018318:	080160a7 	.word	0x080160a7
 801831c:	20000094 	.word	0x20000094

08018320 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018320:	b538      	push	{r3, r4, r5, lr}
 8018322:	4c15      	ldr	r4, [pc, #84]	; (8018378 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018324:	7823      	ldrb	r3, [r4, #0]
 8018326:	f3bf 8f5b 	dmb	ish
 801832a:	07da      	lsls	r2, r3, #31
 801832c:	4605      	mov	r5, r0
 801832e:	d40b      	bmi.n	8018348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018330:	4620      	mov	r0, r4
 8018332:	f008 fd58 	bl	8020de6 <__cxa_guard_acquire>
 8018336:	b138      	cbz	r0, 8018348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018338:	4620      	mov	r0, r4
 801833a:	f008 fd60 	bl	8020dfe <__cxa_guard_release>
 801833e:	4a0f      	ldr	r2, [pc, #60]	; (801837c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018340:	490f      	ldr	r1, [pc, #60]	; (8018380 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8018342:	4810      	ldr	r0, [pc, #64]	; (8018384 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018344:	f008 fd48 	bl	8020dd8 <__aeabi_atexit>
 8018348:	4c0f      	ldr	r4, [pc, #60]	; (8018388 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801834a:	7823      	ldrb	r3, [r4, #0]
 801834c:	f3bf 8f5b 	dmb	ish
 8018350:	07db      	lsls	r3, r3, #31
 8018352:	d40b      	bmi.n	801836c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018354:	4620      	mov	r0, r4
 8018356:	f008 fd46 	bl	8020de6 <__cxa_guard_acquire>
 801835a:	b138      	cbz	r0, 801836c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801835c:	4620      	mov	r0, r4
 801835e:	f008 fd4e 	bl	8020dfe <__cxa_guard_release>
 8018362:	4a06      	ldr	r2, [pc, #24]	; (801837c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018364:	4909      	ldr	r1, [pc, #36]	; (801838c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018366:	480a      	ldr	r0, [pc, #40]	; (8018390 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018368:	f008 fd36 	bl	8020dd8 <__aeabi_atexit>
 801836c:	4b05      	ldr	r3, [pc, #20]	; (8018384 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801836e:	66ab      	str	r3, [r5, #104]	; 0x68
 8018370:	4b07      	ldr	r3, [pc, #28]	; (8018390 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018372:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018374:	bd38      	pop	{r3, r4, r5, pc}
 8018376:	bf00      	nop
 8018378:	2000ebbc 	.word	0x2000ebbc
 801837c:	20000000 	.word	0x20000000
 8018380:	080160ad 	.word	0x080160ad
 8018384:	20000088 	.word	0x20000088
 8018388:	2000ebc0 	.word	0x2000ebc0
 801838c:	080160ab 	.word	0x080160ab
 8018390:	2000008c 	.word	0x2000008c

08018394 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018394:	b510      	push	{r4, lr}
 8018396:	4604      	mov	r4, r0
 8018398:	f7ff ff88 	bl	80182ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801839c:	4620      	mov	r0, r4
 801839e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80183a2:	f7ff bfbd 	b.w	8018320 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080183a6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80183a6:	b510      	push	{r4, lr}
 80183a8:	4604      	mov	r4, r0
 80183aa:	f7ff fff3 	bl	8018394 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80183ae:	4620      	mov	r0, r4
 80183b0:	f7ff ff72 	bl	8018298 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80183b4:	4620      	mov	r0, r4
 80183b6:	f7ff fdf9 	bl	8017fac <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80183ba:	4620      	mov	r0, r4
 80183bc:	f7ff fcfa 	bl	8017db4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80183c0:	4620      	mov	r0, r4
 80183c2:	f7ff fd75 	bl	8017eb0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80183c6:	4620      	mov	r0, r4
 80183c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80183cc:	f7ff bee0 	b.w	8018190 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080183d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80183d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183d4:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80183d8:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80183dc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80183e0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80183e4:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80183e8:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80183ec:	8808      	ldrh	r0, [r1, #0]
 80183ee:	fb0e 4708 	mla	r7, lr, r8, r4
 80183f2:	f1be 0f00 	cmp.w	lr, #0
 80183f6:	eb02 0a07 	add.w	sl, r2, r7
 80183fa:	db37      	blt.n	801846c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80183fc:	45f3      	cmp	fp, lr
 80183fe:	dd35      	ble.n	801846c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8018400:	2c00      	cmp	r4, #0
 8018402:	db31      	blt.n	8018468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8018404:	45a0      	cmp	r8, r4
 8018406:	dd2f      	ble.n	8018468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8018408:	5dd2      	ldrb	r2, [r2, r7]
 801840a:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801840e:	1c62      	adds	r2, r4, #1
 8018410:	d42f      	bmi.n	8018472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8018412:	4590      	cmp	r8, r2
 8018414:	dd2d      	ble.n	8018472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8018416:	b366      	cbz	r6, 8018472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8018418:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801841c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018420:	f11e 0e01 	adds.w	lr, lr, #1
 8018424:	d429      	bmi.n	801847a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8018426:	45f3      	cmp	fp, lr
 8018428:	dd27      	ble.n	801847a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801842a:	f1bc 0f00 	cmp.w	ip, #0
 801842e:	f000 80a1 	beq.w	8018574 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8018432:	2c00      	cmp	r4, #0
 8018434:	db1f      	blt.n	8018476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018436:	45a0      	cmp	r8, r4
 8018438:	dd1d      	ble.n	8018476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801843a:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801843e:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8018442:	3401      	adds	r4, #1
 8018444:	d41c      	bmi.n	8018480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8018446:	45a0      	cmp	r8, r4
 8018448:	dd1a      	ble.n	8018480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801844a:	b1de      	cbz	r6, 8018484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 801844c:	44d0      	add	r8, sl
 801844e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8018452:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8018456:	2e0f      	cmp	r6, #15
 8018458:	d915      	bls.n	8018486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801845a:	4b49      	ldr	r3, [pc, #292]	; (8018580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 801845c:	4a49      	ldr	r2, [pc, #292]	; (8018584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801845e:	484a      	ldr	r0, [pc, #296]	; (8018588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8018460:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8018464:	f008 fcec 	bl	8020e40 <__assert_func>
 8018468:	4681      	mov	r9, r0
 801846a:	e7d0      	b.n	801840e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801846c:	4607      	mov	r7, r0
 801846e:	4681      	mov	r9, r0
 8018470:	e7d6      	b.n	8018420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8018472:	4607      	mov	r7, r0
 8018474:	e7d4      	b.n	8018420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8018476:	4686      	mov	lr, r0
 8018478:	e7e3      	b.n	8018442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801847a:	4603      	mov	r3, r0
 801847c:	4686      	mov	lr, r0
 801847e:	e7ea      	b.n	8018456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8018480:	4603      	mov	r3, r0
 8018482:	e7e8      	b.n	8018456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8018484:	4603      	mov	r3, r0
 8018486:	f1bc 0f0f 	cmp.w	ip, #15
 801848a:	d8e6      	bhi.n	801845a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801848c:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018490:	fb16 f80c 	smulbb	r8, r6, ip
 8018494:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018498:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801849c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80184a0:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80184a4:	ea44 0909 	orr.w	r9, r4, r9
 80184a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80184ac:	f1cc 0410 	rsb	r4, ip, #16
 80184b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80184b4:	1ba4      	subs	r4, r4, r6
 80184b6:	041a      	lsls	r2, r3, #16
 80184b8:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80184bc:	ea4a 0707 	orr.w	r7, sl, r7
 80184c0:	4377      	muls	r7, r6
 80184c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80184c6:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80184ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80184ce:	fb04 7409 	mla	r4, r4, r9, r7
 80184d2:	4313      	orrs	r3, r2
 80184d4:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80184d8:	fb08 4303 	mla	r3, r8, r3, r4
 80184dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80184e0:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80184e4:	4322      	orrs	r2, r4
 80184e6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80184ea:	fb0c 3202 	mla	r2, ip, r2, r3
 80184ee:	0d53      	lsrs	r3, r2, #21
 80184f0:	0952      	lsrs	r2, r2, #5
 80184f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80184f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80184fa:	431a      	orrs	r2, r3
 80184fc:	b293      	uxth	r3, r2
 80184fe:	b2af      	uxth	r7, r5
 8018500:	1202      	asrs	r2, r0, #8
 8018502:	43ed      	mvns	r5, r5
 8018504:	b2ed      	uxtb	r5, r5
 8018506:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801850a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801850e:	fb12 f205 	smulbb	r2, r2, r5
 8018512:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018516:	fb0c 2c07 	mla	ip, ip, r7, r2
 801851a:	00dc      	lsls	r4, r3, #3
 801851c:	10da      	asrs	r2, r3, #3
 801851e:	10c6      	asrs	r6, r0, #3
 8018520:	00c3      	lsls	r3, r0, #3
 8018522:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018526:	b2db      	uxtb	r3, r3
 8018528:	fb16 f605 	smulbb	r6, r6, r5
 801852c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018530:	b2e4      	uxtb	r4, r4
 8018532:	fb13 f305 	smulbb	r3, r3, r5
 8018536:	fa1f fc8c 	uxth.w	ip, ip
 801853a:	fb02 6207 	mla	r2, r2, r7, r6
 801853e:	fb04 3307 	mla	r3, r4, r7, r3
 8018542:	b296      	uxth	r6, r2
 8018544:	b29a      	uxth	r2, r3
 8018546:	f10c 0301 	add.w	r3, ip, #1
 801854a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801854e:	1c53      	adds	r3, r2, #1
 8018550:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018554:	1c72      	adds	r2, r6, #1
 8018556:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801855a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801855e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018562:	0952      	lsrs	r2, r2, #5
 8018564:	ea43 030c 	orr.w	r3, r3, ip
 8018568:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801856c:	4313      	orrs	r3, r2
 801856e:	800b      	strh	r3, [r1, #0]
 8018570:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018574:	2e0f      	cmp	r6, #15
 8018576:	f63f af70 	bhi.w	801845a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801857a:	4603      	mov	r3, r0
 801857c:	4686      	mov	lr, r0
 801857e:	e785      	b.n	801848c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8018580:	0802556e 	.word	0x0802556e
 8018584:	08025be3 	.word	0x08025be3
 8018588:	080255f2 	.word	0x080255f2

0801858c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801858c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018590:	ed2d 8b08 	vpush	{d8-d11}
 8018594:	b099      	sub	sp, #100	; 0x64
 8018596:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801859a:	9215      	str	r2, [sp, #84]	; 0x54
 801859c:	9309      	str	r3, [sp, #36]	; 0x24
 801859e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80185a0:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80185a4:	930d      	str	r3, [sp, #52]	; 0x34
 80185a6:	910c      	str	r1, [sp, #48]	; 0x30
 80185a8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80185ac:	9016      	str	r0, [sp, #88]	; 0x58
 80185ae:	6850      	ldr	r0, [r2, #4]
 80185b0:	6812      	ldr	r2, [r2, #0]
 80185b2:	fb00 1303 	mla	r3, r0, r3, r1
 80185b6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80185ba:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80185bc:	681b      	ldr	r3, [r3, #0]
 80185be:	930b      	str	r3, [sp, #44]	; 0x2c
 80185c0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80185c2:	685e      	ldr	r6, [r3, #4]
 80185c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185c6:	43db      	mvns	r3, r3
 80185c8:	b2db      	uxtb	r3, r3
 80185ca:	eeb0 aa40 	vmov.f32	s20, s0
 80185ce:	eef0 9a60 	vmov.f32	s19, s1
 80185d2:	eeb0 9a41 	vmov.f32	s18, s2
 80185d6:	eeb0 8a62 	vmov.f32	s16, s5
 80185da:	eef0 8a43 	vmov.f32	s17, s6
 80185de:	eef0 ba44 	vmov.f32	s23, s8
 80185e2:	eeb0 ba64 	vmov.f32	s22, s9
 80185e6:	eef0 aa45 	vmov.f32	s21, s10
 80185ea:	3604      	adds	r6, #4
 80185ec:	930a      	str	r3, [sp, #40]	; 0x28
 80185ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80185f0:	2b00      	cmp	r3, #0
 80185f2:	dc03      	bgt.n	80185fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80185f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80185f6:	2b00      	cmp	r3, #0
 80185f8:	f340 8225 	ble.w	8018a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80185fc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80185fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018602:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018606:	1e48      	subs	r0, r1, #1
 8018608:	1e57      	subs	r7, r2, #1
 801860a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801860c:	2b00      	cmp	r3, #0
 801860e:	f340 80e3 	ble.w	80187d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8018612:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8018616:	ea4f 4325 	mov.w	r3, r5, asr #16
 801861a:	d406      	bmi.n	801862a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801861c:	4584      	cmp	ip, r0
 801861e:	da04      	bge.n	801862a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018620:	2b00      	cmp	r3, #0
 8018622:	db02      	blt.n	801862a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018624:	42bb      	cmp	r3, r7
 8018626:	f2c0 80d8 	blt.w	80187da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801862a:	f11c 0c01 	adds.w	ip, ip, #1
 801862e:	f100 80c9 	bmi.w	80187c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018632:	4561      	cmp	r1, ip
 8018634:	f2c0 80c6 	blt.w	80187c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018638:	3301      	adds	r3, #1
 801863a:	f100 80c3 	bmi.w	80187c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801863e:	429a      	cmp	r2, r3
 8018640:	f2c0 80c0 	blt.w	80187c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018644:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018648:	4647      	mov	r7, r8
 801864a:	f1bb 0f00 	cmp.w	fp, #0
 801864e:	f340 80e3 	ble.w	8018818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018652:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8018654:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018656:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801865a:	689b      	ldr	r3, [r3, #8]
 801865c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8018660:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018664:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8018668:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801866c:	f100 8121 	bmi.w	80188b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8018670:	f103 39ff 	add.w	r9, r3, #4294967295
 8018674:	454a      	cmp	r2, r9
 8018676:	f280 811c 	bge.w	80188b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801867a:	f1bc 0f00 	cmp.w	ip, #0
 801867e:	f2c0 8118 	blt.w	80188b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8018682:	f10e 39ff 	add.w	r9, lr, #4294967295
 8018686:	45cc      	cmp	ip, r9
 8018688:	f280 8113 	bge.w	80188b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801868c:	b21b      	sxth	r3, r3
 801868e:	fb0c 2203 	mla	r2, ip, r3, r2
 8018692:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018694:	eb04 0902 	add.w	r9, r4, r2
 8018698:	5ca2      	ldrb	r2, [r4, r2]
 801869a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801869e:	2800      	cmp	r0, #0
 80186a0:	f000 80fe 	beq.w	80188a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80186a4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80186a8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80186ac:	9211      	str	r2, [sp, #68]	; 0x44
 80186ae:	b151      	cbz	r1, 80186c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80186b0:	eb09 0203 	add.w	r2, r9, r3
 80186b4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80186b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80186bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80186be:	7853      	ldrb	r3, [r2, #1]
 80186c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80186c4:	9312      	str	r3, [sp, #72]	; 0x48
 80186c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80186c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80186ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80186ce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80186d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80186d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80186da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80186dc:	041b      	lsls	r3, r3, #16
 80186de:	fb10 f201 	smulbb	r2, r0, r1
 80186e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80186e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80186ea:	10d2      	asrs	r2, r2, #3
 80186ec:	4323      	orrs	r3, r4
 80186ee:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80186f2:	4353      	muls	r3, r2
 80186f4:	fb09 330c 	mla	r3, r9, ip, r3
 80186f8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80186fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018700:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018704:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018708:	f1c1 0c10 	rsb	ip, r1, #16
 801870c:	ebac 0c00 	sub.w	ip, ip, r0
 8018710:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018714:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018718:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801871a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801871c:	0418      	lsls	r0, r3, #16
 801871e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018722:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018726:	4318      	orrs	r0, r3
 8018728:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801872c:	fb02 c200 	mla	r2, r2, r0, ip
 8018730:	0d53      	lsrs	r3, r2, #21
 8018732:	0952      	lsrs	r2, r2, #5
 8018734:	8838      	ldrh	r0, [r7, #0]
 8018736:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801873a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801873e:	431a      	orrs	r2, r3
 8018740:	b292      	uxth	r2, r2
 8018742:	1201      	asrs	r1, r0, #8
 8018744:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8018748:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801874c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018750:	fb11 f104 	smulbb	r1, r1, r4
 8018754:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018758:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801875c:	00c0      	lsls	r0, r0, #3
 801875e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8018762:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018766:	10d1      	asrs	r1, r2, #3
 8018768:	b2c0      	uxtb	r0, r0
 801876a:	00d2      	lsls	r2, r2, #3
 801876c:	b2d2      	uxtb	r2, r2
 801876e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018772:	fb1e fe04 	smulbb	lr, lr, r4
 8018776:	fb10 f004 	smulbb	r0, r0, r4
 801877a:	fa1f fc8c 	uxth.w	ip, ip
 801877e:	fb01 e103 	mla	r1, r1, r3, lr
 8018782:	fb02 0303 	mla	r3, r2, r3, r0
 8018786:	b29a      	uxth	r2, r3
 8018788:	f10c 0301 	add.w	r3, ip, #1
 801878c:	b289      	uxth	r1, r1
 801878e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018792:	1c53      	adds	r3, r2, #1
 8018794:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018798:	1c4a      	adds	r2, r1, #1
 801879a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801879e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80187a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80187a6:	0949      	lsrs	r1, r1, #5
 80187a8:	ea43 030c 	orr.w	r3, r3, ip
 80187ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80187b0:	430b      	orrs	r3, r1
 80187b2:	803b      	strh	r3, [r7, #0]
 80187b4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80187b6:	449a      	add	sl, r3
 80187b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80187ba:	3702      	adds	r7, #2
 80187bc:	441d      	add	r5, r3
 80187be:	f10b 3bff 	add.w	fp, fp, #4294967295
 80187c2:	e742      	b.n	801864a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80187c4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80187c6:	449a      	add	sl, r3
 80187c8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80187ca:	441d      	add	r5, r3
 80187cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187ce:	3b01      	subs	r3, #1
 80187d0:	9309      	str	r3, [sp, #36]	; 0x24
 80187d2:	f108 0802 	add.w	r8, r8, #2
 80187d6:	e718      	b.n	801860a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80187d8:	d023      	beq.n	8018822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80187da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187dc:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80187de:	3b01      	subs	r3, #1
 80187e0:	fb00 a003 	mla	r0, r0, r3, sl
 80187e4:	1400      	asrs	r0, r0, #16
 80187e6:	f53f af2d 	bmi.w	8018644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80187ea:	3901      	subs	r1, #1
 80187ec:	4288      	cmp	r0, r1
 80187ee:	f6bf af29 	bge.w	8018644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80187f2:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80187f4:	fb01 5303 	mla	r3, r1, r3, r5
 80187f8:	141b      	asrs	r3, r3, #16
 80187fa:	f53f af23 	bmi.w	8018644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80187fe:	3a01      	subs	r2, #1
 8018800:	4293      	cmp	r3, r2
 8018802:	f6bf af1f 	bge.w	8018644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018806:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801880a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801880e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8018812:	f1be 0f00 	cmp.w	lr, #0
 8018816:	dc6c      	bgt.n	80188f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8018818:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801881a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801881e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018822:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018824:	2b00      	cmp	r3, #0
 8018826:	f340 810e 	ble.w	8018a46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801882a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801882e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018832:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018836:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018838:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801883c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018840:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018844:	eef0 6a48 	vmov.f32	s13, s16
 8018848:	ee69 7a27 	vmul.f32	s15, s18, s15
 801884c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018850:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018854:	ee16 aa90 	vmov	sl, s13
 8018858:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801885c:	eef0 6a68 	vmov.f32	s13, s17
 8018860:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018864:	ee18 2a10 	vmov	r2, s16
 8018868:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801886c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018870:	ee18 2a90 	vmov	r2, s17
 8018874:	932d      	str	r3, [sp, #180]	; 0xb4
 8018876:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018878:	fb92 f3f3 	sdiv	r3, r2, r3
 801887c:	932e      	str	r3, [sp, #184]	; 0xb8
 801887e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018880:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018882:	3b01      	subs	r3, #1
 8018884:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018888:	930c      	str	r3, [sp, #48]	; 0x30
 801888a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801888c:	bf08      	it	eq
 801888e:	4613      	moveq	r3, r2
 8018890:	ee16 5a90 	vmov	r5, s13
 8018894:	9309      	str	r3, [sp, #36]	; 0x24
 8018896:	eef0 8a67 	vmov.f32	s17, s15
 801889a:	eeb0 8a47 	vmov.f32	s16, s14
 801889e:	e6a6      	b.n	80185ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80188a0:	2900      	cmp	r1, #0
 80188a2:	f43f af10 	beq.w	80186c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80188a6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80188aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80188ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80188b0:	e709      	b.n	80186c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80188b2:	f112 0901 	adds.w	r9, r2, #1
 80188b6:	f53f af7d 	bmi.w	80187b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80188ba:	454b      	cmp	r3, r9
 80188bc:	f6ff af7a 	blt.w	80187b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80188c0:	f11c 0901 	adds.w	r9, ip, #1
 80188c4:	f53f af76 	bmi.w	80187b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80188c8:	45ce      	cmp	lr, r9
 80188ca:	f6ff af73 	blt.w	80187b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80188ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188d0:	9202      	str	r2, [sp, #8]
 80188d2:	b21b      	sxth	r3, r3
 80188d4:	fa0f f28e 	sxth.w	r2, lr
 80188d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80188dc:	e9cd c003 	strd	ip, r0, [sp, #12]
 80188e0:	9201      	str	r2, [sp, #4]
 80188e2:	9300      	str	r3, [sp, #0]
 80188e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80188e6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80188e8:	4633      	mov	r3, r6
 80188ea:	4639      	mov	r1, r7
 80188ec:	f7ff fd70 	bl	80183d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80188f0:	e760      	b.n	80187b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80188f2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80188f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80188f6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80188fa:	ea4f 422a 	mov.w	r2, sl, asr #16
 80188fe:	1429      	asrs	r1, r5, #16
 8018900:	fb03 2101 	mla	r1, r3, r1, r2
 8018904:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018906:	440a      	add	r2, r1
 8018908:	5c61      	ldrb	r1, [r4, r1]
 801890a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801890e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018912:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018916:	f1bc 0f00 	cmp.w	ip, #0
 801891a:	f000 808c 	beq.w	8018a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801891e:	7857      	ldrb	r7, [r2, #1]
 8018920:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018924:	9413      	str	r4, [sp, #76]	; 0x4c
 8018926:	b140      	cbz	r0, 801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8018928:	18d7      	adds	r7, r2, r3
 801892a:	5cd3      	ldrb	r3, [r2, r3]
 801892c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018930:	9310      	str	r3, [sp, #64]	; 0x40
 8018932:	787b      	ldrb	r3, [r7, #1]
 8018934:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018938:	9314      	str	r3, [sp, #80]	; 0x50
 801893a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801893c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801893e:	fb1c f200 	smulbb	r2, ip, r0
 8018942:	041f      	lsls	r7, r3, #16
 8018944:	10d2      	asrs	r2, r2, #3
 8018946:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801894a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801894e:	431f      	orrs	r7, r3
 8018950:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018954:	9317      	str	r3, [sp, #92]	; 0x5c
 8018956:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018958:	041b      	lsls	r3, r3, #16
 801895a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801895e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018962:	ea43 030b 	orr.w	r3, r3, fp
 8018966:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018968:	4353      	muls	r3, r2
 801896a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801896e:	fb04 3707 	mla	r7, r4, r7, r3
 8018972:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018976:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801897a:	ea43 0b01 	orr.w	fp, r3, r1
 801897e:	f1c0 0110 	rsb	r1, r0, #16
 8018982:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018984:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018986:	eba1 0c0c 	sub.w	ip, r1, ip
 801898a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801898e:	fb0c 770b 	mla	r7, ip, fp, r7
 8018992:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018996:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801899a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801899e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80189a2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80189a6:	fb02 770c 	mla	r7, r2, ip, r7
 80189aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80189ac:	0d79      	lsrs	r1, r7, #21
 80189ae:	097f      	lsrs	r7, r7, #5
 80189b0:	8812      	ldrh	r2, [r2, #0]
 80189b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189b6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80189ba:	430f      	orrs	r7, r1
 80189bc:	b2bb      	uxth	r3, r7
 80189be:	1211      	asrs	r1, r2, #8
 80189c0:	1218      	asrs	r0, r3, #8
 80189c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80189c6:	fb11 f104 	smulbb	r1, r1, r4
 80189ca:	10d7      	asrs	r7, r2, #3
 80189cc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189d0:	00d2      	lsls	r2, r2, #3
 80189d2:	fb00 1009 	mla	r0, r0, r9, r1
 80189d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189da:	10d9      	asrs	r1, r3, #3
 80189dc:	b2d2      	uxtb	r2, r2
 80189de:	00db      	lsls	r3, r3, #3
 80189e0:	fb17 f704 	smulbb	r7, r7, r4
 80189e4:	fb12 f204 	smulbb	r2, r2, r4
 80189e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80189ec:	b2db      	uxtb	r3, r3
 80189ee:	b280      	uxth	r0, r0
 80189f0:	fb01 7109 	mla	r1, r1, r9, r7
 80189f4:	fb03 2309 	mla	r3, r3, r9, r2
 80189f8:	b29b      	uxth	r3, r3
 80189fa:	b289      	uxth	r1, r1
 80189fc:	1c42      	adds	r2, r0, #1
 80189fe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018a02:	1c4f      	adds	r7, r1, #1
 8018a04:	1c5a      	adds	r2, r3, #1
 8018a06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018a0a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018a0e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018a16:	0949      	lsrs	r1, r1, #5
 8018a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018a1a:	4310      	orrs	r0, r2
 8018a1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018a20:	4308      	orrs	r0, r1
 8018a22:	f823 0b02 	strh.w	r0, [r3], #2
 8018a26:	930e      	str	r3, [sp, #56]	; 0x38
 8018a28:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018a2a:	449a      	add	sl, r3
 8018a2c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a2e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018a32:	441d      	add	r5, r3
 8018a34:	e6ed      	b.n	8018812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8018a36:	2800      	cmp	r0, #0
 8018a38:	f43f af7f 	beq.w	801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8018a3c:	5cd3      	ldrb	r3, [r2, r3]
 8018a3e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018a42:	9310      	str	r3, [sp, #64]	; 0x40
 8018a44:	e779      	b.n	801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8018a46:	b019      	add	sp, #100	; 0x64
 8018a48:	ecbd 8b08 	vpop	{d8-d11}
 8018a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018a54:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8018a58:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018a5c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018a60:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8018a64:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8018a68:	8808      	ldrh	r0, [r1, #0]
 8018a6a:	fb06 570e 	mla	r7, r6, lr, r5
 8018a6e:	2e00      	cmp	r6, #0
 8018a70:	eb02 0807 	add.w	r8, r2, r7
 8018a74:	db38      	blt.n	8018ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8018a76:	45b1      	cmp	r9, r6
 8018a78:	dd36      	ble.n	8018ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8018a7a:	2d00      	cmp	r5, #0
 8018a7c:	db32      	blt.n	8018ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8018a7e:	45ae      	cmp	lr, r5
 8018a80:	dd30      	ble.n	8018ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8018a82:	5dd2      	ldrb	r2, [r2, r7]
 8018a84:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018a88:	1c6a      	adds	r2, r5, #1
 8018a8a:	d430      	bmi.n	8018aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018a8c:	4596      	cmp	lr, r2
 8018a8e:	dd2e      	ble.n	8018aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018a90:	b36c      	cbz	r4, 8018aee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8018a92:	f898 2001 	ldrb.w	r2, [r8, #1]
 8018a96:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018a9a:	3601      	adds	r6, #1
 8018a9c:	d42b      	bmi.n	8018af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8018a9e:	45b1      	cmp	r9, r6
 8018aa0:	dd29      	ble.n	8018af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8018aa2:	f1bc 0f00 	cmp.w	ip, #0
 8018aa6:	d028      	beq.n	8018afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8018aa8:	2d00      	cmp	r5, #0
 8018aaa:	db22      	blt.n	8018af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8018aac:	45ae      	cmp	lr, r5
 8018aae:	dd20      	ble.n	8018af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8018ab0:	f818 600e 	ldrb.w	r6, [r8, lr]
 8018ab4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8018ab8:	3501      	adds	r5, #1
 8018aba:	d407      	bmi.n	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8018abc:	45ae      	cmp	lr, r5
 8018abe:	dd05      	ble.n	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8018ac0:	b134      	cbz	r4, 8018ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018ac2:	44c6      	add	lr, r8
 8018ac4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018ac8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018acc:	2c0f      	cmp	r4, #15
 8018ace:	d802      	bhi.n	8018ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018ad0:	f1bc 0f0f 	cmp.w	ip, #15
 8018ad4:	d914      	bls.n	8018b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8018ad6:	4b26      	ldr	r3, [pc, #152]	; (8018b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8018ad8:	4a26      	ldr	r2, [pc, #152]	; (8018b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8018ada:	4827      	ldr	r0, [pc, #156]	; (8018b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8018adc:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8018ae0:	f008 f9ae 	bl	8020e40 <__assert_func>
 8018ae4:	4607      	mov	r7, r0
 8018ae6:	e7cf      	b.n	8018a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8018ae8:	4602      	mov	r2, r0
 8018aea:	4607      	mov	r7, r0
 8018aec:	e7d5      	b.n	8018a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8018aee:	4602      	mov	r2, r0
 8018af0:	e7d3      	b.n	8018a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8018af2:	4606      	mov	r6, r0
 8018af4:	e7e0      	b.n	8018ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8018af6:	4606      	mov	r6, r0
 8018af8:	e7e8      	b.n	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8018afa:	2c0f      	cmp	r4, #15
 8018afc:	d8eb      	bhi.n	8018ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018afe:	4606      	mov	r6, r0
 8018b00:	043d      	lsls	r5, r7, #16
 8018b02:	fb14 f30c 	smulbb	r3, r4, ip
 8018b06:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018b0a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018b0e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018b12:	10db      	asrs	r3, r3, #3
 8018b14:	432f      	orrs	r7, r5
 8018b16:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018b1a:	f1cc 0510 	rsb	r5, ip, #16
 8018b1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b22:	1b2d      	subs	r5, r5, r4
 8018b24:	ea4e 0202 	orr.w	r2, lr, r2
 8018b28:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018b2c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018b30:	4354      	muls	r4, r2
 8018b32:	fb05 4507 	mla	r5, r5, r7, r4
 8018b36:	0404      	lsls	r4, r0, #16
 8018b38:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b3c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b40:	4320      	orrs	r0, r4
 8018b42:	fb03 5400 	mla	r4, r3, r0, r5
 8018b46:	0430      	lsls	r0, r6, #16
 8018b48:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018b4c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018b50:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018b54:	4330      	orrs	r0, r6
 8018b56:	fb03 4000 	mla	r0, r3, r0, r4
 8018b5a:	0d43      	lsrs	r3, r0, #21
 8018b5c:	0940      	lsrs	r0, r0, #5
 8018b5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b62:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b66:	4318      	orrs	r0, r3
 8018b68:	8008      	strh	r0, [r1, #0]
 8018b6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018b6e:	bf00      	nop
 8018b70:	0802556e 	.word	0x0802556e
 8018b74:	08025be3 	.word	0x08025be3
 8018b78:	080255f2 	.word	0x080255f2

08018b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b80:	ed2d 8b0a 	vpush	{d8-d12}
 8018b84:	b093      	sub	sp, #76	; 0x4c
 8018b86:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018b8a:	920f      	str	r2, [sp, #60]	; 0x3c
 8018b8c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018b8e:	9108      	str	r1, [sp, #32]
 8018b90:	9306      	str	r3, [sp, #24]
 8018b92:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018b96:	9010      	str	r0, [sp, #64]	; 0x40
 8018b98:	6850      	ldr	r0, [r2, #4]
 8018b9a:	6812      	ldr	r2, [r2, #0]
 8018b9c:	fb00 1303 	mla	r3, r0, r3, r1
 8018ba0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018ba4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018ba6:	681b      	ldr	r3, [r3, #0]
 8018ba8:	9307      	str	r3, [sp, #28]
 8018baa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018bac:	685f      	ldr	r7, [r3, #4]
 8018bae:	eeb0 aa40 	vmov.f32	s20, s0
 8018bb2:	eef0 9a60 	vmov.f32	s19, s1
 8018bb6:	eeb0 9a41 	vmov.f32	s18, s2
 8018bba:	eeb0 8a62 	vmov.f32	s16, s5
 8018bbe:	eef0 8a43 	vmov.f32	s17, s6
 8018bc2:	eeb0 ca44 	vmov.f32	s24, s8
 8018bc6:	eef0 ba64 	vmov.f32	s23, s9
 8018bca:	eeb0 ba45 	vmov.f32	s22, s10
 8018bce:	3704      	adds	r7, #4
 8018bd0:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018bd4:	9b08      	ldr	r3, [sp, #32]
 8018bd6:	2b00      	cmp	r3, #0
 8018bd8:	dc03      	bgt.n	8018be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018bda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018bdc:	2b00      	cmp	r3, #0
 8018bde:	f340 81b2 	ble.w	8018f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018be2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018be4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018be8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018bec:	1e48      	subs	r0, r1, #1
 8018bee:	f102 3cff 	add.w	ip, r2, #4294967295
 8018bf2:	9b06      	ldr	r3, [sp, #24]
 8018bf4:	2b00      	cmp	r3, #0
 8018bf6:	f340 80a9 	ble.w	8018d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8018bfa:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018bfe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c02:	d406      	bmi.n	8018c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018c04:	4586      	cmp	lr, r0
 8018c06:	da04      	bge.n	8018c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018c08:	2b00      	cmp	r3, #0
 8018c0a:	db02      	blt.n	8018c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018c0c:	4563      	cmp	r3, ip
 8018c0e:	f2c0 809e 	blt.w	8018d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018c12:	f11e 0e01 	adds.w	lr, lr, #1
 8018c16:	f100 808f 	bmi.w	8018d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018c1a:	4571      	cmp	r1, lr
 8018c1c:	f2c0 808c 	blt.w	8018d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018c20:	3301      	adds	r3, #1
 8018c22:	f100 8089 	bmi.w	8018d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018c26:	429a      	cmp	r2, r3
 8018c28:	f2c0 8086 	blt.w	8018d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018c2c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018c30:	46c8      	mov	r8, r9
 8018c32:	f1bb 0f00 	cmp.w	fp, #0
 8018c36:	f340 80a6 	ble.w	8018d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8018c3a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018c3c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018c3e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018c42:	689b      	ldr	r3, [r3, #8]
 8018c44:	1422      	asrs	r2, r4, #16
 8018c46:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018c4a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018c4e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018c52:	f100 80e3 	bmi.w	8018e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018c56:	f103 3aff 	add.w	sl, r3, #4294967295
 8018c5a:	4552      	cmp	r2, sl
 8018c5c:	f280 80de 	bge.w	8018e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018c60:	f1bc 0f00 	cmp.w	ip, #0
 8018c64:	f2c0 80da 	blt.w	8018e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018c68:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018c6c:	45d4      	cmp	ip, sl
 8018c6e:	f280 80d5 	bge.w	8018e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018c72:	b21b      	sxth	r3, r3
 8018c74:	fb0c 2203 	mla	r2, ip, r3, r2
 8018c78:	9d07      	ldr	r5, [sp, #28]
 8018c7a:	eb05 0a02 	add.w	sl, r5, r2
 8018c7e:	5caa      	ldrb	r2, [r5, r2]
 8018c80:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8018c84:	2800      	cmp	r0, #0
 8018c86:	f000 80c0 	beq.w	8018e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8018c8a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018c8e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8018c92:	920b      	str	r2, [sp, #44]	; 0x2c
 8018c94:	b151      	cbz	r1, 8018cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018c96:	eb0a 0203 	add.w	r2, sl, r3
 8018c9a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018c9e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018ca2:	9309      	str	r3, [sp, #36]	; 0x24
 8018ca4:	7853      	ldrb	r3, [r2, #1]
 8018ca6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018caa:	930c      	str	r3, [sp, #48]	; 0x30
 8018cac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018cb0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018cb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018cb8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018cbc:	ea4c 0c03 	orr.w	ip, ip, r3
 8018cc0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018cc2:	041b      	lsls	r3, r3, #16
 8018cc4:	fb10 f201 	smulbb	r2, r0, r1
 8018cc8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018ccc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018cd0:	10d2      	asrs	r2, r2, #3
 8018cd2:	432b      	orrs	r3, r5
 8018cd4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8018cd8:	4353      	muls	r3, r2
 8018cda:	fb0a 330c 	mla	r3, sl, ip, r3
 8018cde:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018ce2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018ce6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018cea:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018cee:	f1c1 0c10 	rsb	ip, r1, #16
 8018cf2:	ebac 0c00 	sub.w	ip, ip, r0
 8018cf6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018cfa:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018cfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d00:	0418      	lsls	r0, r3, #16
 8018d02:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d0a:	4318      	orrs	r0, r3
 8018d0c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018d10:	fb02 c200 	mla	r2, r2, r0, ip
 8018d14:	0d53      	lsrs	r3, r2, #21
 8018d16:	0952      	lsrs	r2, r2, #5
 8018d18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018d20:	431a      	orrs	r2, r3
 8018d22:	f8a8 2000 	strh.w	r2, [r8]
 8018d26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d28:	441c      	add	r4, r3
 8018d2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d2c:	f108 0802 	add.w	r8, r8, #2
 8018d30:	441e      	add	r6, r3
 8018d32:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018d36:	e77c      	b.n	8018c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018d38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d3a:	441c      	add	r4, r3
 8018d3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d3e:	441e      	add	r6, r3
 8018d40:	9b06      	ldr	r3, [sp, #24]
 8018d42:	3b01      	subs	r3, #1
 8018d44:	9306      	str	r3, [sp, #24]
 8018d46:	f109 0902 	add.w	r9, r9, #2
 8018d4a:	e752      	b.n	8018bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018d4c:	d020      	beq.n	8018d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018d4e:	9b06      	ldr	r3, [sp, #24]
 8018d50:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8018d52:	3b01      	subs	r3, #1
 8018d54:	fb00 4003 	mla	r0, r0, r3, r4
 8018d58:	1400      	asrs	r0, r0, #16
 8018d5a:	f53f af67 	bmi.w	8018c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018d5e:	3901      	subs	r1, #1
 8018d60:	4288      	cmp	r0, r1
 8018d62:	f6bf af63 	bge.w	8018c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018d66:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018d68:	fb01 6303 	mla	r3, r1, r3, r6
 8018d6c:	141b      	asrs	r3, r3, #16
 8018d6e:	f53f af5d 	bmi.w	8018c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018d72:	3a01      	subs	r2, #1
 8018d74:	4293      	cmp	r3, r2
 8018d76:	f6bf af59 	bge.w	8018c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018d7a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018d7e:	46ca      	mov	sl, r9
 8018d80:	f1b8 0f00 	cmp.w	r8, #0
 8018d84:	dc67      	bgt.n	8018e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8018d86:	9b06      	ldr	r3, [sp, #24]
 8018d88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018d8c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018d90:	9b08      	ldr	r3, [sp, #32]
 8018d92:	2b00      	cmp	r3, #0
 8018d94:	f340 80d7 	ble.w	8018f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018d98:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018d9c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018da0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018da4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018da6:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018daa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018dae:	eef0 6a48 	vmov.f32	s13, s16
 8018db2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018db6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dba:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018dbe:	ee16 4a90 	vmov	r4, s13
 8018dc2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018dc6:	eef0 6a68 	vmov.f32	s13, s17
 8018dca:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018dce:	ee18 2a10 	vmov	r2, s16
 8018dd2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018dd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dda:	ee18 2a90 	vmov	r2, s17
 8018dde:	9329      	str	r3, [sp, #164]	; 0xa4
 8018de0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018de6:	932a      	str	r3, [sp, #168]	; 0xa8
 8018de8:	9b08      	ldr	r3, [sp, #32]
 8018dea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018dec:	3b01      	subs	r3, #1
 8018dee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018df2:	9308      	str	r3, [sp, #32]
 8018df4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018df6:	bf08      	it	eq
 8018df8:	4613      	moveq	r3, r2
 8018dfa:	ee16 6a90 	vmov	r6, s13
 8018dfe:	9306      	str	r3, [sp, #24]
 8018e00:	eef0 8a67 	vmov.f32	s17, s15
 8018e04:	eeb0 8a47 	vmov.f32	s16, s14
 8018e08:	e6e4      	b.n	8018bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018e0a:	2900      	cmp	r1, #0
 8018e0c:	f43f af4e 	beq.w	8018cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018e10:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018e14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018e18:	9309      	str	r3, [sp, #36]	; 0x24
 8018e1a:	e747      	b.n	8018cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018e1c:	f112 0a01 	adds.w	sl, r2, #1
 8018e20:	d481      	bmi.n	8018d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018e22:	4553      	cmp	r3, sl
 8018e24:	f6ff af7f 	blt.w	8018d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018e28:	f11c 0a01 	adds.w	sl, ip, #1
 8018e2c:	f53f af7b 	bmi.w	8018d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018e30:	45d6      	cmp	lr, sl
 8018e32:	f6ff af78 	blt.w	8018d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018e36:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8018e3a:	b21b      	sxth	r3, r3
 8018e3c:	fa0f f28e 	sxth.w	r2, lr
 8018e40:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018e44:	9201      	str	r2, [sp, #4]
 8018e46:	9300      	str	r3, [sp, #0]
 8018e48:	9a07      	ldr	r2, [sp, #28]
 8018e4a:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018e4c:	463b      	mov	r3, r7
 8018e4e:	4641      	mov	r1, r8
 8018e50:	f7ff fdfe 	bl	8018a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018e54:	e767      	b.n	8018d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018e56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e58:	9d07      	ldr	r5, [sp, #28]
 8018e5a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018e5e:	1422      	asrs	r2, r4, #16
 8018e60:	1431      	asrs	r1, r6, #16
 8018e62:	fb03 2101 	mla	r1, r3, r1, r2
 8018e66:	9a07      	ldr	r2, [sp, #28]
 8018e68:	440a      	add	r2, r1
 8018e6a:	5c69      	ldrb	r1, [r5, r1]
 8018e6c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018e70:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018e74:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018e78:	f1be 0f00 	cmp.w	lr, #0
 8018e7c:	d05c      	beq.n	8018f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8018e7e:	f892 c001 	ldrb.w	ip, [r2, #1]
 8018e82:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8018e86:	950d      	str	r5, [sp, #52]	; 0x34
 8018e88:	b150      	cbz	r0, 8018ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018e8a:	eb02 0c03 	add.w	ip, r2, r3
 8018e8e:	5cd3      	ldrb	r3, [r2, r3]
 8018e90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018e94:	930a      	str	r3, [sp, #40]	; 0x28
 8018e96:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8018e9a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018e9e:	930e      	str	r3, [sp, #56]	; 0x38
 8018ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ea2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018ea4:	fb1e f200 	smulbb	r2, lr, r0
 8018ea8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018eac:	10d2      	asrs	r2, r2, #3
 8018eae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018eb2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018eb6:	ea4c 0c03 	orr.w	ip, ip, r3
 8018eba:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8018ebe:	9311      	str	r3, [sp, #68]	; 0x44
 8018ec0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ec2:	041b      	lsls	r3, r3, #16
 8018ec4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8018ec8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018ecc:	ea43 030b 	orr.w	r3, r3, fp
 8018ed0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018ed2:	4353      	muls	r3, r2
 8018ed4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018ed8:	fb05 3c0c 	mla	ip, r5, ip, r3
 8018edc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018ee0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018ee4:	ea43 0b01 	orr.w	fp, r3, r1
 8018ee8:	f1c0 0110 	rsb	r1, r0, #16
 8018eec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018eee:	eba1 0e0e 	sub.w	lr, r1, lr
 8018ef2:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018ef6:	fb0e cc0b 	mla	ip, lr, fp, ip
 8018efa:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018efe:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8018f02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f06:	ea4b 0e0e 	orr.w	lr, fp, lr
 8018f0a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018f0e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018f12:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8018f16:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018f1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018f1e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f22:	ea43 0c0c 	orr.w	ip, r3, ip
 8018f26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018f28:	f82a cb02 	strh.w	ip, [sl], #2
 8018f2c:	441c      	add	r4, r3
 8018f2e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018f30:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f34:	441e      	add	r6, r3
 8018f36:	e723      	b.n	8018d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018f38:	2800      	cmp	r0, #0
 8018f3a:	d0b1      	beq.n	8018ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018f3c:	5cd3      	ldrb	r3, [r2, r3]
 8018f3e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018f42:	930a      	str	r3, [sp, #40]	; 0x28
 8018f44:	e7ac      	b.n	8018ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018f46:	b013      	add	sp, #76	; 0x4c
 8018f48:	ecbd 8b0a 	vpop	{d8-d12}
 8018f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8018f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f54:	468b      	mov	fp, r1
 8018f56:	8809      	ldrh	r1, [r1, #0]
 8018f58:	b089      	sub	sp, #36	; 0x24
 8018f5a:	10cd      	asrs	r5, r1, #3
 8018f5c:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8018f60:	ea4f 2921 	mov.w	r9, r1, asr #8
 8018f64:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018f68:	00c9      	lsls	r1, r1, #3
 8018f6a:	9500      	str	r5, [sp, #0]
 8018f6c:	b2c9      	uxtb	r1, r1
 8018f6e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8018f72:	9101      	str	r1, [sp, #4]
 8018f74:	9900      	ldr	r1, [sp, #0]
 8018f76:	9202      	str	r2, [sp, #8]
 8018f78:	fb04 650e 	mla	r5, r4, lr, r6
 8018f7c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8018f80:	eb02 0805 	add.w	r8, r2, r5
 8018f84:	0209      	lsls	r1, r1, #8
 8018f86:	9a01      	ldr	r2, [sp, #4]
 8018f88:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8018f8c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8018f90:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8018f94:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8018f98:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8018f9c:	4311      	orrs	r1, r2
 8018f9e:	2c00      	cmp	r4, #0
 8018fa0:	9107      	str	r1, [sp, #28]
 8018fa2:	db43      	blt.n	801902c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8018fa4:	45a2      	cmp	sl, r4
 8018fa6:	dd41      	ble.n	801902c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8018fa8:	2e00      	cmp	r6, #0
 8018faa:	db3d      	blt.n	8019028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8018fac:	45b6      	cmp	lr, r6
 8018fae:	dd3b      	ble.n	8019028 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8018fb0:	9a02      	ldr	r2, [sp, #8]
 8018fb2:	5d55      	ldrb	r5, [r2, r5]
 8018fb4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018fb8:	441d      	add	r5, r3
 8018fba:	1c72      	adds	r2, r6, #1
 8018fbc:	d439      	bmi.n	8019032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8018fbe:	4596      	cmp	lr, r2
 8018fc0:	dd37      	ble.n	8019032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8018fc2:	2f00      	cmp	r7, #0
 8018fc4:	d035      	beq.n	8019032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8018fc6:	f898 1001 	ldrb.w	r1, [r8, #1]
 8018fca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018fce:	4419      	add	r1, r3
 8018fd0:	3401      	adds	r4, #1
 8018fd2:	d432      	bmi.n	801903a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8018fd4:	45a2      	cmp	sl, r4
 8018fd6:	dd30      	ble.n	801903a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8018fd8:	b378      	cbz	r0, 801903a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8018fda:	2e00      	cmp	r6, #0
 8018fdc:	db2b      	blt.n	8019036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8018fde:	45b6      	cmp	lr, r6
 8018fe0:	dd29      	ble.n	8019036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8018fe2:	f818 400e 	ldrb.w	r4, [r8, lr]
 8018fe6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8018fea:	441c      	add	r4, r3
 8018fec:	3601      	adds	r6, #1
 8018fee:	d427      	bmi.n	8019040 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018ff0:	45b6      	cmp	lr, r6
 8018ff2:	dd25      	ble.n	8019040 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018ff4:	b327      	cbz	r7, 8019040 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018ff6:	44c6      	add	lr, r8
 8018ff8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018ffc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019000:	4413      	add	r3, r2
 8019002:	782a      	ldrb	r2, [r5, #0]
 8019004:	9202      	str	r2, [sp, #8]
 8019006:	780a      	ldrb	r2, [r1, #0]
 8019008:	9203      	str	r2, [sp, #12]
 801900a:	7822      	ldrb	r2, [r4, #0]
 801900c:	9204      	str	r2, [sp, #16]
 801900e:	2f0f      	cmp	r7, #15
 8019010:	781a      	ldrb	r2, [r3, #0]
 8019012:	9205      	str	r2, [sp, #20]
 8019014:	d801      	bhi.n	801901a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8019016:	280f      	cmp	r0, #15
 8019018:	d914      	bls.n	8019044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801901a:	4b3f      	ldr	r3, [pc, #252]	; (8019118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801901c:	4a3f      	ldr	r2, [pc, #252]	; (801911c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801901e:	4840      	ldr	r0, [pc, #256]	; (8019120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8019020:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019024:	f007 ff0c 	bl	8020e40 <__assert_func>
 8019028:	ad07      	add	r5, sp, #28
 801902a:	e7c6      	b.n	8018fba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801902c:	a907      	add	r1, sp, #28
 801902e:	460d      	mov	r5, r1
 8019030:	e7ce      	b.n	8018fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8019032:	a907      	add	r1, sp, #28
 8019034:	e7cc      	b.n	8018fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8019036:	ac07      	add	r4, sp, #28
 8019038:	e7d8      	b.n	8018fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801903a:	ab07      	add	r3, sp, #28
 801903c:	461c      	mov	r4, r3
 801903e:	e7e0      	b.n	8019002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8019040:	ab07      	add	r3, sp, #28
 8019042:	e7de      	b.n	8019002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8019044:	b2ba      	uxth	r2, r7
 8019046:	b280      	uxth	r0, r0
 8019048:	fb02 fa00 	mul.w	sl, r2, r0
 801904c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8019050:	0112      	lsls	r2, r2, #4
 8019052:	b280      	uxth	r0, r0
 8019054:	f891 8002 	ldrb.w	r8, [r1, #2]
 8019058:	7849      	ldrb	r1, [r1, #1]
 801905a:	78ae      	ldrb	r6, [r5, #2]
 801905c:	786d      	ldrb	r5, [r5, #1]
 801905e:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8019062:	eba2 020a 	sub.w	r2, r2, sl
 8019066:	b292      	uxth	r2, r2
 8019068:	ebae 0e00 	sub.w	lr, lr, r0
 801906c:	fa1f fe8e 	uxth.w	lr, lr
 8019070:	4351      	muls	r1, r2
 8019072:	fb02 f808 	mul.w	r8, r2, r8
 8019076:	fb0e 8806 	mla	r8, lr, r6, r8
 801907a:	fb0e 1505 	mla	r5, lr, r5, r1
 801907e:	78a6      	ldrb	r6, [r4, #2]
 8019080:	7861      	ldrb	r1, [r4, #1]
 8019082:	fa1f f78c 	uxth.w	r7, ip
 8019086:	fb00 8806 	mla	r8, r0, r6, r8
 801908a:	fb00 5501 	mla	r5, r0, r1, r5
 801908e:	789e      	ldrb	r6, [r3, #2]
 8019090:	7859      	ldrb	r1, [r3, #1]
 8019092:	9b00      	ldr	r3, [sp, #0]
 8019094:	ea6f 0c0c 	mvn.w	ip, ip
 8019098:	fa5f fc8c 	uxtb.w	ip, ip
 801909c:	fb0a 5101 	mla	r1, sl, r1, r5
 80190a0:	fb13 f50c 	smulbb	r5, r3, ip
 80190a4:	9b03      	ldr	r3, [sp, #12]
 80190a6:	435a      	muls	r2, r3
 80190a8:	9b02      	ldr	r3, [sp, #8]
 80190aa:	fb0e 2203 	mla	r2, lr, r3, r2
 80190ae:	9b04      	ldr	r3, [sp, #16]
 80190b0:	fb00 2003 	mla	r0, r0, r3, r2
 80190b4:	9b05      	ldr	r3, [sp, #20]
 80190b6:	fb0a 8606 	mla	r6, sl, r6, r8
 80190ba:	fb19 f90c 	smulbb	r9, r9, ip
 80190be:	fb0a 0a03 	mla	sl, sl, r3, r0
 80190c2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80190c6:	9b01      	ldr	r3, [sp, #4]
 80190c8:	fb06 9607 	mla	r6, r6, r7, r9
 80190cc:	b2b6      	uxth	r6, r6
 80190ce:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80190d2:	fb13 fc0c 	smulbb	ip, r3, ip
 80190d6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80190da:	fb01 5107 	mla	r1, r1, r7, r5
 80190de:	f106 0901 	add.w	r9, r6, #1
 80190e2:	fb0a c707 	mla	r7, sl, r7, ip
 80190e6:	b2bf      	uxth	r7, r7
 80190e8:	b289      	uxth	r1, r1
 80190ea:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80190ee:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80190f2:	1c4d      	adds	r5, r1, #1
 80190f4:	1c7e      	adds	r6, r7, #1
 80190f6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80190fa:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80190fe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019102:	0949      	lsrs	r1, r1, #5
 8019104:	ea46 0609 	orr.w	r6, r6, r9
 8019108:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801910c:	430e      	orrs	r6, r1
 801910e:	f8ab 6000 	strh.w	r6, [fp]
 8019112:	b009      	add	sp, #36	; 0x24
 8019114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019118:	0802556e 	.word	0x0802556e
 801911c:	08025b3a 	.word	0x08025b3a
 8019120:	080255f2 	.word	0x080255f2

08019124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019128:	ed2d 8b08 	vpush	{d8-d11}
 801912c:	b095      	sub	sp, #84	; 0x54
 801912e:	eeb0 aa40 	vmov.f32	s20, s0
 8019132:	9212      	str	r2, [sp, #72]	; 0x48
 8019134:	9309      	str	r3, [sp, #36]	; 0x24
 8019136:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019138:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801913c:	930f      	str	r3, [sp, #60]	; 0x3c
 801913e:	910e      	str	r1, [sp, #56]	; 0x38
 8019140:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8019144:	9013      	str	r0, [sp, #76]	; 0x4c
 8019146:	6850      	ldr	r0, [r2, #4]
 8019148:	6812      	ldr	r2, [r2, #0]
 801914a:	fb00 1303 	mla	r3, r0, r3, r1
 801914e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019152:	930a      	str	r3, [sp, #40]	; 0x28
 8019154:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019156:	681b      	ldr	r3, [r3, #0]
 8019158:	930d      	str	r3, [sp, #52]	; 0x34
 801915a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801915c:	685c      	ldr	r4, [r3, #4]
 801915e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019160:	43db      	mvns	r3, r3
 8019162:	b2db      	uxtb	r3, r3
 8019164:	eef0 9a60 	vmov.f32	s19, s1
 8019168:	eeb0 9a41 	vmov.f32	s18, s2
 801916c:	eeb0 8a62 	vmov.f32	s16, s5
 8019170:	eef0 8a43 	vmov.f32	s17, s6
 8019174:	eef0 ba44 	vmov.f32	s23, s8
 8019178:	eeb0 ba64 	vmov.f32	s22, s9
 801917c:	eef0 aa45 	vmov.f32	s21, s10
 8019180:	3404      	adds	r4, #4
 8019182:	930b      	str	r3, [sp, #44]	; 0x2c
 8019184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019186:	2b00      	cmp	r3, #0
 8019188:	dc03      	bgt.n	8019192 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801918a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801918c:	2b00      	cmp	r3, #0
 801918e:	f340 8255 	ble.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8019192:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019194:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019198:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801919c:	1e48      	subs	r0, r1, #1
 801919e:	1e55      	subs	r5, r2, #1
 80191a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191a2:	2b00      	cmp	r3, #0
 80191a4:	f340 80f9 	ble.w	801939a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80191a8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80191aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191ac:	1436      	asrs	r6, r6, #16
 80191ae:	ea4f 4323 	mov.w	r3, r3, asr #16
 80191b2:	d406      	bmi.n	80191c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191b4:	4286      	cmp	r6, r0
 80191b6:	da04      	bge.n	80191c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191b8:	2b00      	cmp	r3, #0
 80191ba:	db02      	blt.n	80191c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80191bc:	42ab      	cmp	r3, r5
 80191be:	f2c0 80ed 	blt.w	801939c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80191c2:	3601      	adds	r6, #1
 80191c4:	f100 80da 	bmi.w	801937c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80191c8:	42b1      	cmp	r1, r6
 80191ca:	f2c0 80d7 	blt.w	801937c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80191ce:	3301      	adds	r3, #1
 80191d0:	f100 80d4 	bmi.w	801937c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80191d4:	429a      	cmp	r2, r3
 80191d6:	f2c0 80d1 	blt.w	801937c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80191da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191dc:	9311      	str	r3, [sp, #68]	; 0x44
 80191de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80191e0:	930c      	str	r3, [sp, #48]	; 0x30
 80191e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	f340 80fa 	ble.w	80193de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80191ea:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80191ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191ee:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80191f0:	68c6      	ldr	r6, [r0, #12]
 80191f2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80191f4:	141d      	asrs	r5, r3, #16
 80191f6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80191fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80191fc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80191fe:	1400      	asrs	r0, r0, #16
 8019200:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019204:	6892      	ldr	r2, [r2, #8]
 8019206:	f100 813e 	bmi.w	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801920a:	1e57      	subs	r7, r2, #1
 801920c:	42b8      	cmp	r0, r7
 801920e:	f280 813a 	bge.w	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019212:	2d00      	cmp	r5, #0
 8019214:	f2c0 8137 	blt.w	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019218:	1e77      	subs	r7, r6, #1
 801921a:	42bd      	cmp	r5, r7
 801921c:	f280 8133 	bge.w	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019220:	b212      	sxth	r2, r2
 8019222:	fb05 0002 	mla	r0, r5, r2, r0
 8019226:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019228:	f815 a000 	ldrb.w	sl, [r5, r0]
 801922c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019230:	182e      	adds	r6, r5, r0
 8019232:	eb04 050a 	add.w	r5, r4, sl
 8019236:	2b00      	cmp	r3, #0
 8019238:	f000 8117 	beq.w	801946a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801923c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019240:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019244:	44a4      	add	ip, r4
 8019246:	2900      	cmp	r1, #0
 8019248:	f000 8117 	beq.w	801947a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801924c:	18b0      	adds	r0, r6, r2
 801924e:	5cb2      	ldrb	r2, [r6, r2]
 8019250:	7840      	ldrb	r0, [r0, #1]
 8019252:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019256:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801925a:	4422      	add	r2, r4
 801925c:	4420      	add	r0, r4
 801925e:	b29b      	uxth	r3, r3
 8019260:	b289      	uxth	r1, r1
 8019262:	fb03 f901 	mul.w	r9, r3, r1
 8019266:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801926a:	011b      	lsls	r3, r3, #4
 801926c:	b289      	uxth	r1, r1
 801926e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019272:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019276:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019278:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801927c:	f8b6 e000 	ldrh.w	lr, [r6]
 8019280:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019284:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019288:	eba3 0309 	sub.w	r3, r3, r9
 801928c:	b29b      	uxth	r3, r3
 801928e:	eba8 0801 	sub.w	r8, r8, r1
 8019292:	fa1f f888 	uxth.w	r8, r8
 8019296:	435f      	muls	r7, r3
 8019298:	fb08 770b 	mla	r7, r8, fp, r7
 801929c:	f892 b002 	ldrb.w	fp, [r2, #2]
 80192a0:	9310      	str	r3, [sp, #64]	; 0x40
 80192a2:	fb01 770b 	mla	r7, r1, fp, r7
 80192a6:	f890 b002 	ldrb.w	fp, [r0, #2]
 80192aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80192ac:	fb09 770b 	mla	r7, r9, fp, r7
 80192b0:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80192b4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80192b8:	fb1b fb03 	smulbb	fp, fp, r3
 80192bc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80192c0:	fb07 b706 	mla	r7, r7, r6, fp
 80192c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192c6:	f895 b001 	ldrb.w	fp, [r5, #1]
 80192ca:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80192ce:	f89c c000 	ldrb.w	ip, [ip]
 80192d2:	435d      	muls	r5, r3
 80192d4:	fb08 550b 	mla	r5, r8, fp, r5
 80192d8:	f892 b001 	ldrb.w	fp, [r2, #1]
 80192dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80192de:	fb01 550b 	mla	r5, r1, fp, r5
 80192e2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80192e6:	fb09 550b 	mla	r5, r9, fp, r5
 80192ea:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80192ee:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80192f2:	fb1b fb03 	smulbb	fp, fp, r3
 80192f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192f8:	fb03 f30c 	mul.w	r3, r3, ip
 80192fc:	f892 c000 	ldrb.w	ip, [r2]
 8019300:	fb08 330a 	mla	r3, r8, sl, r3
 8019304:	fb01 330c 	mla	r3, r1, ip, r3
 8019308:	f890 c000 	ldrb.w	ip, [r0]
 801930c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019310:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019314:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019316:	fa5f fe8e 	uxtb.w	lr, lr
 801931a:	b2bf      	uxth	r7, r7
 801931c:	fb1e fe03 	smulbb	lr, lr, r3
 8019320:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019324:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019328:	fb05 b506 	mla	r5, r5, r6, fp
 801932c:	1c7b      	adds	r3, r7, #1
 801932e:	fb0c e606 	mla	r6, ip, r6, lr
 8019332:	b2ad      	uxth	r5, r5
 8019334:	b2b6      	uxth	r6, r6
 8019336:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801933a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801933e:	f105 0b01 	add.w	fp, r5, #1
 8019342:	1c77      	adds	r7, r6, #1
 8019344:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019348:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801934c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019350:	096d      	lsrs	r5, r5, #5
 8019352:	431f      	orrs	r7, r3
 8019354:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019358:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801935a:	433d      	orrs	r5, r7
 801935c:	801d      	strh	r5, [r3, #0]
 801935e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019360:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019362:	3302      	adds	r3, #2
 8019364:	930c      	str	r3, [sp, #48]	; 0x30
 8019366:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019368:	4413      	add	r3, r2
 801936a:	9327      	str	r3, [sp, #156]	; 0x9c
 801936c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801936e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019370:	4413      	add	r3, r2
 8019372:	9328      	str	r3, [sp, #160]	; 0xa0
 8019374:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019376:	3b01      	subs	r3, #1
 8019378:	9311      	str	r3, [sp, #68]	; 0x44
 801937a:	e732      	b.n	80191e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801937c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801937e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8019380:	4433      	add	r3, r6
 8019382:	9327      	str	r3, [sp, #156]	; 0x9c
 8019384:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8019386:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019388:	4433      	add	r3, r6
 801938a:	9328      	str	r3, [sp, #160]	; 0xa0
 801938c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801938e:	3b01      	subs	r3, #1
 8019390:	9309      	str	r3, [sp, #36]	; 0x24
 8019392:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019394:	3302      	adds	r3, #2
 8019396:	930a      	str	r3, [sp, #40]	; 0x28
 8019398:	e702      	b.n	80191a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801939a:	d027      	beq.n	80193ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801939c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801939e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80193a0:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80193a2:	3b01      	subs	r3, #1
 80193a4:	fb00 5003 	mla	r0, r0, r3, r5
 80193a8:	1400      	asrs	r0, r0, #16
 80193aa:	f53f af16 	bmi.w	80191da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80193ae:	3901      	subs	r1, #1
 80193b0:	4288      	cmp	r0, r1
 80193b2:	f6bf af12 	bge.w	80191da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80193b6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80193b8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80193ba:	fb01 0303 	mla	r3, r1, r3, r0
 80193be:	141b      	asrs	r3, r3, #16
 80193c0:	f53f af0b 	bmi.w	80191da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80193c4:	3a01      	subs	r2, #1
 80193c6:	4293      	cmp	r3, r2
 80193c8:	f6bf af07 	bge.w	80191da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80193cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193ce:	9311      	str	r3, [sp, #68]	; 0x44
 80193d0:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80193d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80193d6:	930c      	str	r3, [sp, #48]	; 0x30
 80193d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80193da:	2b00      	cmp	r3, #0
 80193dc:	dc70      	bgt.n	80194c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80193de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80193e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80193e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193ea:	930a      	str	r3, [sp, #40]	; 0x28
 80193ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193ee:	2b00      	cmp	r3, #0
 80193f0:	f340 8124 	ble.w	801963c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80193f4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80193f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80193fc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019400:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019402:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019406:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801940a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801940e:	eef0 6a48 	vmov.f32	s13, s16
 8019412:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019416:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801941a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801941e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8019422:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019426:	eef0 6a68 	vmov.f32	s13, s17
 801942a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801942e:	ee18 2a10 	vmov	r2, s16
 8019432:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019436:	fb92 f3f3 	sdiv	r3, r2, r3
 801943a:	ee18 2a90 	vmov	r2, s17
 801943e:	9329      	str	r3, [sp, #164]	; 0xa4
 8019440:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019442:	fb92 f3f3 	sdiv	r3, r2, r3
 8019446:	932a      	str	r3, [sp, #168]	; 0xa8
 8019448:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801944a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801944c:	3b01      	subs	r3, #1
 801944e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019452:	930e      	str	r3, [sp, #56]	; 0x38
 8019454:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019456:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801945a:	bf08      	it	eq
 801945c:	4613      	moveq	r3, r2
 801945e:	9309      	str	r3, [sp, #36]	; 0x24
 8019460:	eef0 8a67 	vmov.f32	s17, s15
 8019464:	eeb0 8a47 	vmov.f32	s16, s14
 8019468:	e68c      	b.n	8019184 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801946a:	b149      	cbz	r1, 8019480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801946c:	5cb2      	ldrb	r2, [r6, r2]
 801946e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019472:	4422      	add	r2, r4
 8019474:	4628      	mov	r0, r5
 8019476:	46ac      	mov	ip, r5
 8019478:	e6f1      	b.n	801925e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801947a:	4628      	mov	r0, r5
 801947c:	462a      	mov	r2, r5
 801947e:	e6ee      	b.n	801925e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8019480:	4628      	mov	r0, r5
 8019482:	462a      	mov	r2, r5
 8019484:	e7f7      	b.n	8019476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019486:	1c47      	adds	r7, r0, #1
 8019488:	f53f af69 	bmi.w	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801948c:	42ba      	cmp	r2, r7
 801948e:	f6ff af66 	blt.w	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8019492:	1c6f      	adds	r7, r5, #1
 8019494:	f53f af63 	bmi.w	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8019498:	42be      	cmp	r6, r7
 801949a:	f6ff af60 	blt.w	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801949e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80194a0:	9002      	str	r0, [sp, #8]
 80194a2:	b236      	sxth	r6, r6
 80194a4:	b212      	sxth	r2, r2
 80194a6:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80194aa:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80194ae:	9200      	str	r2, [sp, #0]
 80194b0:	9601      	str	r6, [sp, #4]
 80194b2:	4623      	mov	r3, r4
 80194b4:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80194b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80194ba:	f7ff fd49 	bl	8018f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80194be:	e74e      	b.n	801935e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80194c0:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80194c2:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80194c4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80194c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80194c8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80194cc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80194ce:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80194d2:	142d      	asrs	r5, r5, #16
 80194d4:	1400      	asrs	r0, r0, #16
 80194d6:	fb02 5000 	mla	r0, r2, r0, r5
 80194da:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80194dc:	f815 9000 	ldrb.w	r9, [r5, r0]
 80194e0:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80194e4:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80194e8:	182e      	adds	r6, r5, r0
 80194ea:	eb04 0509 	add.w	r5, r4, r9
 80194ee:	2b00      	cmp	r3, #0
 80194f0:	f000 8096 	beq.w	8019620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80194f4:	7877      	ldrb	r7, [r6, #1]
 80194f6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80194fa:	4427      	add	r7, r4
 80194fc:	2900      	cmp	r1, #0
 80194fe:	f000 8097 	beq.w	8019630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8019502:	18b0      	adds	r0, r6, r2
 8019504:	5cb2      	ldrb	r2, [r6, r2]
 8019506:	7840      	ldrb	r0, [r0, #1]
 8019508:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801950c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019510:	4422      	add	r2, r4
 8019512:	4420      	add	r0, r4
 8019514:	b29b      	uxth	r3, r3
 8019516:	b289      	uxth	r1, r1
 8019518:	fb03 f801 	mul.w	r8, r3, r1
 801951c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801951e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019522:	f8b6 c000 	ldrh.w	ip, [r6]
 8019526:	78be      	ldrb	r6, [r7, #2]
 8019528:	f814 9009 	ldrb.w	r9, [r4, r9]
 801952c:	011b      	lsls	r3, r3, #4
 801952e:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8019532:	b289      	uxth	r1, r1
 8019534:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019538:	eba3 0308 	sub.w	r3, r3, r8
 801953c:	b29b      	uxth	r3, r3
 801953e:	ebae 0e01 	sub.w	lr, lr, r1
 8019542:	fa1f fe8e 	uxth.w	lr, lr
 8019546:	435e      	muls	r6, r3
 8019548:	fb0e 660b 	mla	r6, lr, fp, r6
 801954c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019550:	9310      	str	r3, [sp, #64]	; 0x40
 8019552:	fb01 660b 	mla	r6, r1, fp, r6
 8019556:	f890 b002 	ldrb.w	fp, [r0, #2]
 801955a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801955c:	fb08 660b 	mla	r6, r8, fp, r6
 8019560:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8019564:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019568:	fb1b fb03 	smulbb	fp, fp, r3
 801956c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019570:	fb06 b60a 	mla	r6, r6, sl, fp
 8019574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019576:	f895 b001 	ldrb.w	fp, [r5, #1]
 801957a:	787d      	ldrb	r5, [r7, #1]
 801957c:	783f      	ldrb	r7, [r7, #0]
 801957e:	435d      	muls	r5, r3
 8019580:	fb0e 550b 	mla	r5, lr, fp, r5
 8019584:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019588:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801958a:	fb01 550b 	mla	r5, r1, fp, r5
 801958e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019592:	fb08 550b 	mla	r5, r8, fp, r5
 8019596:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801959a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801959e:	fb1b fb03 	smulbb	fp, fp, r3
 80195a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195a4:	437b      	muls	r3, r7
 80195a6:	7817      	ldrb	r7, [r2, #0]
 80195a8:	fb0e 3309 	mla	r3, lr, r9, r3
 80195ac:	fb01 3307 	mla	r3, r1, r7, r3
 80195b0:	7807      	ldrb	r7, [r0, #0]
 80195b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80195b6:	fb08 3707 	mla	r7, r8, r7, r3
 80195ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80195bc:	fa5f fc8c 	uxtb.w	ip, ip
 80195c0:	fb1c fc03 	smulbb	ip, ip, r3
 80195c4:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80195c8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80195cc:	fb05 b50a 	mla	r5, r5, sl, fp
 80195d0:	fb07 c70a 	mla	r7, r7, sl, ip
 80195d4:	b2b6      	uxth	r6, r6
 80195d6:	b2ad      	uxth	r5, r5
 80195d8:	b2bf      	uxth	r7, r7
 80195da:	1c73      	adds	r3, r6, #1
 80195dc:	1c7a      	adds	r2, r7, #1
 80195de:	f105 0b01 	add.w	fp, r5, #1
 80195e2:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80195e6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80195ea:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80195ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80195f2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80195f6:	096d      	lsrs	r5, r5, #5
 80195f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195fa:	4316      	orrs	r6, r2
 80195fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019600:	432e      	orrs	r6, r5
 8019602:	f823 6b02 	strh.w	r6, [r3], #2
 8019606:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019608:	930c      	str	r3, [sp, #48]	; 0x30
 801960a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801960c:	4413      	add	r3, r2
 801960e:	9327      	str	r3, [sp, #156]	; 0x9c
 8019610:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019612:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019614:	4413      	add	r3, r2
 8019616:	9328      	str	r3, [sp, #160]	; 0xa0
 8019618:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801961a:	3b01      	subs	r3, #1
 801961c:	9311      	str	r3, [sp, #68]	; 0x44
 801961e:	e6db      	b.n	80193d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8019620:	b149      	cbz	r1, 8019636 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019622:	5cb2      	ldrb	r2, [r6, r2]
 8019624:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019628:	4422      	add	r2, r4
 801962a:	4628      	mov	r0, r5
 801962c:	462f      	mov	r7, r5
 801962e:	e771      	b.n	8019514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8019630:	4628      	mov	r0, r5
 8019632:	462a      	mov	r2, r5
 8019634:	e76e      	b.n	8019514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8019636:	4628      	mov	r0, r5
 8019638:	462a      	mov	r2, r5
 801963a:	e7f7      	b.n	801962c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801963c:	b015      	add	sp, #84	; 0x54
 801963e:	ecbd 8b08 	vpop	{d8-d11}
 8019642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8019648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801964c:	880e      	ldrh	r6, [r1, #0]
 801964e:	b085      	sub	sp, #20
 8019650:	0230      	lsls	r0, r6, #8
 8019652:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8019656:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801965a:	0170      	lsls	r0, r6, #5
 801965c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019660:	9101      	str	r1, [sp, #4]
 8019662:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8019666:	00f6      	lsls	r6, r6, #3
 8019668:	ea4b 0000 	orr.w	r0, fp, r0
 801966c:	b2f6      	uxtb	r6, r6
 801966e:	4691      	mov	r9, r2
 8019670:	fb05 7a0c 	mla	sl, r5, ip, r7
 8019674:	4306      	orrs	r6, r0
 8019676:	2d00      	cmp	r5, #0
 8019678:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801967c:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8019680:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8019684:	9603      	str	r6, [sp, #12]
 8019686:	eb09 0e0a 	add.w	lr, r9, sl
 801968a:	db42      	blt.n	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801968c:	45a8      	cmp	r8, r5
 801968e:	dd40      	ble.n	8019712 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8019690:	2f00      	cmp	r7, #0
 8019692:	db3c      	blt.n	801970e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8019694:	45bc      	cmp	ip, r7
 8019696:	dd3a      	ble.n	801970e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8019698:	f819 600a 	ldrb.w	r6, [r9, sl]
 801969c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80196a0:	441e      	add	r6, r3
 80196a2:	1c78      	adds	r0, r7, #1
 80196a4:	d438      	bmi.n	8019718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80196a6:	4584      	cmp	ip, r0
 80196a8:	dd36      	ble.n	8019718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80196aa:	b3aa      	cbz	r2, 8019718 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80196ac:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80196b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80196b4:	4418      	add	r0, r3
 80196b6:	3501      	adds	r5, #1
 80196b8:	d432      	bmi.n	8019720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80196ba:	45a8      	cmp	r8, r5
 80196bc:	dd30      	ble.n	8019720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80196be:	b37c      	cbz	r4, 8019720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80196c0:	2f00      	cmp	r7, #0
 80196c2:	db2b      	blt.n	801971c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80196c4:	45bc      	cmp	ip, r7
 80196c6:	dd29      	ble.n	801971c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 80196c8:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80196cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80196d0:	441d      	add	r5, r3
 80196d2:	3701      	adds	r7, #1
 80196d4:	d427      	bmi.n	8019726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80196d6:	45bc      	cmp	ip, r7
 80196d8:	dd25      	ble.n	8019726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80196da:	b322      	cbz	r2, 8019726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80196dc:	44f4      	add	ip, lr
 80196de:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80196e2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80196e6:	443b      	add	r3, r7
 80196e8:	781f      	ldrb	r7, [r3, #0]
 80196ea:	f896 9000 	ldrb.w	r9, [r6]
 80196ee:	f890 a000 	ldrb.w	sl, [r0]
 80196f2:	f895 8000 	ldrb.w	r8, [r5]
 80196f6:	2a0f      	cmp	r2, #15
 80196f8:	4639      	mov	r1, r7
 80196fa:	d801      	bhi.n	8019700 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 80196fc:	2c0f      	cmp	r4, #15
 80196fe:	d914      	bls.n	801972a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8019700:	4b2c      	ldr	r3, [pc, #176]	; (80197b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8019702:	4a2d      	ldr	r2, [pc, #180]	; (80197b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8019704:	482d      	ldr	r0, [pc, #180]	; (80197bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8019706:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801970a:	f007 fb99 	bl	8020e40 <__assert_func>
 801970e:	ae03      	add	r6, sp, #12
 8019710:	e7c7      	b.n	80196a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8019712:	a803      	add	r0, sp, #12
 8019714:	4606      	mov	r6, r0
 8019716:	e7ce      	b.n	80196b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019718:	a803      	add	r0, sp, #12
 801971a:	e7cc      	b.n	80196b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801971c:	ad03      	add	r5, sp, #12
 801971e:	e7d8      	b.n	80196d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8019720:	ab03      	add	r3, sp, #12
 8019722:	461d      	mov	r5, r3
 8019724:	e7e0      	b.n	80196e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8019726:	ab03      	add	r3, sp, #12
 8019728:	e7de      	b.n	80196e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801972a:	b292      	uxth	r2, r2
 801972c:	b2a4      	uxth	r4, r4
 801972e:	fb02 fe04 	mul.w	lr, r2, r4
 8019732:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8019736:	0112      	lsls	r2, r2, #4
 8019738:	b2a4      	uxth	r4, r4
 801973a:	f890 c002 	ldrb.w	ip, [r0, #2]
 801973e:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019742:	7840      	ldrb	r0, [r0, #1]
 8019744:	7876      	ldrb	r6, [r6, #1]
 8019746:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801974a:	eba2 020e 	sub.w	r2, r2, lr
 801974e:	b292      	uxth	r2, r2
 8019750:	1b3f      	subs	r7, r7, r4
 8019752:	b2bf      	uxth	r7, r7
 8019754:	fb02 fc0c 	mul.w	ip, r2, ip
 8019758:	fb07 cc0b 	mla	ip, r7, fp, ip
 801975c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019760:	fb04 cc0b 	mla	ip, r4, fp, ip
 8019764:	f893 b002 	ldrb.w	fp, [r3, #2]
 8019768:	785b      	ldrb	r3, [r3, #1]
 801976a:	fb0e cc0b 	mla	ip, lr, fp, ip
 801976e:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8019772:	fb02 fc0a 	mul.w	ip, r2, sl
 8019776:	4342      	muls	r2, r0
 8019778:	7868      	ldrb	r0, [r5, #1]
 801977a:	fb07 cc09 	mla	ip, r7, r9, ip
 801977e:	fb07 2206 	mla	r2, r7, r6, r2
 8019782:	fb04 cc08 	mla	ip, r4, r8, ip
 8019786:	fb04 2400 	mla	r4, r4, r0, r2
 801978a:	fb0e cc01 	mla	ip, lr, r1, ip
 801978e:	fb0e 4e03 	mla	lr, lr, r3, r4
 8019792:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019796:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801979a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801979e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80197a2:	9b01      	ldr	r3, [sp, #4]
 80197a4:	ea4c 0c0e 	orr.w	ip, ip, lr
 80197a8:	f8a3 c000 	strh.w	ip, [r3]
 80197ac:	b005      	add	sp, #20
 80197ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197b2:	bf00      	nop
 80197b4:	0802556e 	.word	0x0802556e
 80197b8:	08025b3a 	.word	0x08025b3a
 80197bc:	080255f2 	.word	0x080255f2

080197c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197c4:	ed2d 8b08 	vpush	{d8-d11}
 80197c8:	b08f      	sub	sp, #60	; 0x3c
 80197ca:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 80197ce:	920c      	str	r2, [sp, #48]	; 0x30
 80197d0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80197d2:	910a      	str	r1, [sp, #40]	; 0x28
 80197d4:	9306      	str	r3, [sp, #24]
 80197d6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80197da:	900d      	str	r0, [sp, #52]	; 0x34
 80197dc:	6850      	ldr	r0, [r2, #4]
 80197de:	6812      	ldr	r2, [r2, #0]
 80197e0:	fb00 1303 	mla	r3, r0, r3, r1
 80197e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197e8:	9307      	str	r3, [sp, #28]
 80197ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80197ec:	681b      	ldr	r3, [r3, #0]
 80197ee:	9308      	str	r3, [sp, #32]
 80197f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80197f2:	685c      	ldr	r4, [r3, #4]
 80197f4:	eeb0 aa40 	vmov.f32	s20, s0
 80197f8:	eef0 9a60 	vmov.f32	s19, s1
 80197fc:	eeb0 9a41 	vmov.f32	s18, s2
 8019800:	eeb0 8a62 	vmov.f32	s16, s5
 8019804:	eef0 8a43 	vmov.f32	s17, s6
 8019808:	eef0 ba44 	vmov.f32	s23, s8
 801980c:	eeb0 ba64 	vmov.f32	s22, s9
 8019810:	eef0 aa45 	vmov.f32	s21, s10
 8019814:	3404      	adds	r4, #4
 8019816:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019818:	2b00      	cmp	r3, #0
 801981a:	dc03      	bgt.n	8019824 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801981c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801981e:	2b00      	cmp	r3, #0
 8019820:	f340 81d6 	ble.w	8019bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8019824:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019826:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801982a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801982e:	1e48      	subs	r0, r1, #1
 8019830:	1e56      	subs	r6, r2, #1
 8019832:	9b06      	ldr	r3, [sp, #24]
 8019834:	2b00      	cmp	r3, #0
 8019836:	f340 80b7 	ble.w	80199a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801983a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801983e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019842:	d406      	bmi.n	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019844:	4287      	cmp	r7, r0
 8019846:	da04      	bge.n	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019848:	2b00      	cmp	r3, #0
 801984a:	db02      	blt.n	8019852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801984c:	42b3      	cmp	r3, r6
 801984e:	f2c0 80ac 	blt.w	80199aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019852:	3701      	adds	r7, #1
 8019854:	f100 809d 	bmi.w	8019992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019858:	42b9      	cmp	r1, r7
 801985a:	f2c0 809a 	blt.w	8019992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801985e:	3301      	adds	r3, #1
 8019860:	f100 8097 	bmi.w	8019992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019864:	429a      	cmp	r2, r3
 8019866:	f2c0 8094 	blt.w	8019992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801986a:	9b06      	ldr	r3, [sp, #24]
 801986c:	930b      	str	r3, [sp, #44]	; 0x2c
 801986e:	9b07      	ldr	r3, [sp, #28]
 8019870:	9309      	str	r3, [sp, #36]	; 0x24
 8019872:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019874:	2b00      	cmp	r3, #0
 8019876:	f340 80b5 	ble.w	80199e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801987a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801987c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801987e:	68c7      	ldr	r7, [r0, #12]
 8019880:	6892      	ldr	r2, [r2, #8]
 8019882:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019886:	ea4f 4625 	mov.w	r6, r5, asr #16
 801988a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801988e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019892:	f100 80fb 	bmi.w	8019a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8019896:	f102 3cff 	add.w	ip, r2, #4294967295
 801989a:	4560      	cmp	r0, ip
 801989c:	f280 80f6 	bge.w	8019a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80198a0:	2e00      	cmp	r6, #0
 80198a2:	f2c0 80f3 	blt.w	8019a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80198a6:	f107 3cff 	add.w	ip, r7, #4294967295
 80198aa:	4566      	cmp	r6, ip
 80198ac:	f280 80ee 	bge.w	8019a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80198b0:	b212      	sxth	r2, r2
 80198b2:	fb06 0002 	mla	r0, r6, r2, r0
 80198b6:	9e08      	ldr	r6, [sp, #32]
 80198b8:	1837      	adds	r7, r6, r0
 80198ba:	5c30      	ldrb	r0, [r6, r0]
 80198bc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80198c0:	eb04 0c08 	add.w	ip, r4, r8
 80198c4:	2b00      	cmp	r3, #0
 80198c6:	f000 80d3 	beq.w	8019a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80198ca:	787e      	ldrb	r6, [r7, #1]
 80198cc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80198d0:	4426      	add	r6, r4
 80198d2:	2900      	cmp	r1, #0
 80198d4:	f000 80d4 	beq.w	8019a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 80198d8:	18b8      	adds	r0, r7, r2
 80198da:	5cba      	ldrb	r2, [r7, r2]
 80198dc:	7840      	ldrb	r0, [r0, #1]
 80198de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80198e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80198e6:	4422      	add	r2, r4
 80198e8:	4420      	add	r0, r4
 80198ea:	b29b      	uxth	r3, r3
 80198ec:	b289      	uxth	r1, r1
 80198ee:	fb03 f901 	mul.w	r9, r3, r1
 80198f2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80198f6:	011b      	lsls	r3, r3, #4
 80198f8:	b289      	uxth	r1, r1
 80198fa:	78b7      	ldrb	r7, [r6, #2]
 80198fc:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019900:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019904:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019908:	eba3 0309 	sub.w	r3, r3, r9
 801990c:	b29b      	uxth	r3, r3
 801990e:	ebae 0e01 	sub.w	lr, lr, r1
 8019912:	fa1f fe8e 	uxth.w	lr, lr
 8019916:	435f      	muls	r7, r3
 8019918:	fb0e 770a 	mla	r7, lr, sl, r7
 801991c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019920:	fb01 770a 	mla	r7, r1, sl, r7
 8019924:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019928:	fb09 7a0a 	mla	sl, r9, sl, r7
 801992c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019930:	f896 8000 	ldrb.w	r8, [r6]
 8019934:	7876      	ldrb	r6, [r6, #1]
 8019936:	fb03 f808 	mul.w	r8, r3, r8
 801993a:	fb0e 8807 	mla	r8, lr, r7, r8
 801993e:	7817      	ldrb	r7, [r2, #0]
 8019940:	fb01 8807 	mla	r8, r1, r7, r8
 8019944:	7807      	ldrb	r7, [r0, #0]
 8019946:	fb09 8707 	mla	r7, r9, r7, r8
 801994a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801994e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019952:	ea47 070a 	orr.w	r7, r7, sl
 8019956:	4373      	muls	r3, r6
 8019958:	f892 a001 	ldrb.w	sl, [r2, #1]
 801995c:	fb0e 330c 	mla	r3, lr, ip, r3
 8019960:	fb01 310a 	mla	r1, r1, sl, r3
 8019964:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801996a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801996e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019972:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019976:	ea47 070a 	orr.w	r7, r7, sl
 801997a:	801f      	strh	r7, [r3, #0]
 801997c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801997e:	3302      	adds	r3, #2
 8019980:	9309      	str	r3, [sp, #36]	; 0x24
 8019982:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019984:	449b      	add	fp, r3
 8019986:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019988:	441d      	add	r5, r3
 801998a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801998c:	3b01      	subs	r3, #1
 801998e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019990:	e76f      	b.n	8019872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019992:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019994:	449b      	add	fp, r3
 8019996:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019998:	441d      	add	r5, r3
 801999a:	9b06      	ldr	r3, [sp, #24]
 801999c:	3b01      	subs	r3, #1
 801999e:	9306      	str	r3, [sp, #24]
 80199a0:	9b07      	ldr	r3, [sp, #28]
 80199a2:	3302      	adds	r3, #2
 80199a4:	9307      	str	r3, [sp, #28]
 80199a6:	e744      	b.n	8019832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80199a8:	d023      	beq.n	80199f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80199aa:	9b06      	ldr	r3, [sp, #24]
 80199ac:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80199ae:	3b01      	subs	r3, #1
 80199b0:	fb00 b003 	mla	r0, r0, r3, fp
 80199b4:	1400      	asrs	r0, r0, #16
 80199b6:	f53f af58 	bmi.w	801986a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80199ba:	3901      	subs	r1, #1
 80199bc:	4288      	cmp	r0, r1
 80199be:	f6bf af54 	bge.w	801986a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80199c2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80199c4:	fb01 5303 	mla	r3, r1, r3, r5
 80199c8:	141b      	asrs	r3, r3, #16
 80199ca:	f53f af4e 	bmi.w	801986a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80199ce:	3a01      	subs	r2, #1
 80199d0:	4293      	cmp	r3, r2
 80199d2:	f6bf af4a 	bge.w	801986a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80199d6:	9b06      	ldr	r3, [sp, #24]
 80199d8:	9309      	str	r3, [sp, #36]	; 0x24
 80199da:	9b07      	ldr	r3, [sp, #28]
 80199dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80199de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199e0:	2b00      	cmp	r3, #0
 80199e2:	dc70      	bgt.n	8019ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80199e4:	9b06      	ldr	r3, [sp, #24]
 80199e6:	9a07      	ldr	r2, [sp, #28]
 80199e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80199f0:	9307      	str	r3, [sp, #28]
 80199f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80199f4:	2b00      	cmp	r3, #0
 80199f6:	f340 80eb 	ble.w	8019bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80199fa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80199fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019a02:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019a06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a08:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019a0c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019a10:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019a14:	eef0 6a48 	vmov.f32	s13, s16
 8019a18:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019a1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a20:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019a24:	ee16 ba90 	vmov	fp, s13
 8019a28:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019a2c:	eef0 6a68 	vmov.f32	s13, s17
 8019a30:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019a34:	ee18 2a10 	vmov	r2, s16
 8019a38:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019a3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a40:	ee18 2a90 	vmov	r2, s17
 8019a44:	9323      	str	r3, [sp, #140]	; 0x8c
 8019a46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a48:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a4c:	9324      	str	r3, [sp, #144]	; 0x90
 8019a4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019a50:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019a52:	3b01      	subs	r3, #1
 8019a54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a58:	930a      	str	r3, [sp, #40]	; 0x28
 8019a5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019a5c:	bf08      	it	eq
 8019a5e:	4613      	moveq	r3, r2
 8019a60:	ee16 5a90 	vmov	r5, s13
 8019a64:	9306      	str	r3, [sp, #24]
 8019a66:	eef0 8a67 	vmov.f32	s17, s15
 8019a6a:	eeb0 8a47 	vmov.f32	s16, s14
 8019a6e:	e6d2      	b.n	8019816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019a70:	b149      	cbz	r1, 8019a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8019a72:	5cba      	ldrb	r2, [r7, r2]
 8019a74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019a78:	4422      	add	r2, r4
 8019a7a:	4660      	mov	r0, ip
 8019a7c:	4666      	mov	r6, ip
 8019a7e:	e734      	b.n	80198ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8019a80:	4660      	mov	r0, ip
 8019a82:	4662      	mov	r2, ip
 8019a84:	e731      	b.n	80198ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8019a86:	4660      	mov	r0, ip
 8019a88:	4662      	mov	r2, ip
 8019a8a:	e7f7      	b.n	8019a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8019a8c:	f110 0c01 	adds.w	ip, r0, #1
 8019a90:	f53f af74 	bmi.w	801997c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8019a94:	4562      	cmp	r2, ip
 8019a96:	f6ff af71 	blt.w	801997c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8019a9a:	f116 0c01 	adds.w	ip, r6, #1
 8019a9e:	f53f af6d 	bmi.w	801997c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8019aa2:	4567      	cmp	r7, ip
 8019aa4:	f6ff af6a 	blt.w	801997c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8019aa8:	b23f      	sxth	r7, r7
 8019aaa:	b212      	sxth	r2, r2
 8019aac:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8019ab0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019ab4:	9200      	str	r2, [sp, #0]
 8019ab6:	9701      	str	r7, [sp, #4]
 8019ab8:	4623      	mov	r3, r4
 8019aba:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019abe:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019ac0:	f7ff fdc2 	bl	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019ac4:	e75a      	b.n	801997c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8019ac6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019ac8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019acc:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019ad0:	1428      	asrs	r0, r5, #16
 8019ad2:	fb02 6000 	mla	r0, r2, r0, r6
 8019ad6:	9e08      	ldr	r6, [sp, #32]
 8019ad8:	f816 8000 	ldrb.w	r8, [r6, r0]
 8019adc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019ae0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019ae4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019ae8:	1837      	adds	r7, r6, r0
 8019aea:	eb04 0c08 	add.w	ip, r4, r8
 8019aee:	2b00      	cmp	r3, #0
 8019af0:	d060      	beq.n	8019bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019af2:	787e      	ldrb	r6, [r7, #1]
 8019af4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019af8:	4426      	add	r6, r4
 8019afa:	2900      	cmp	r1, #0
 8019afc:	d062      	beq.n	8019bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8019afe:	18b8      	adds	r0, r7, r2
 8019b00:	5cba      	ldrb	r2, [r7, r2]
 8019b02:	7840      	ldrb	r0, [r0, #1]
 8019b04:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019b08:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019b0c:	4422      	add	r2, r4
 8019b0e:	4420      	add	r0, r4
 8019b10:	b29b      	uxth	r3, r3
 8019b12:	b289      	uxth	r1, r1
 8019b14:	fb03 f901 	mul.w	r9, r3, r1
 8019b18:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019b1c:	011b      	lsls	r3, r3, #4
 8019b1e:	b289      	uxth	r1, r1
 8019b20:	78b7      	ldrb	r7, [r6, #2]
 8019b22:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019b26:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019b2a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019b2e:	eba3 0309 	sub.w	r3, r3, r9
 8019b32:	b29b      	uxth	r3, r3
 8019b34:	ebae 0e01 	sub.w	lr, lr, r1
 8019b38:	fa1f fe8e 	uxth.w	lr, lr
 8019b3c:	435f      	muls	r7, r3
 8019b3e:	fb0e 770a 	mla	r7, lr, sl, r7
 8019b42:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019b46:	fb01 770a 	mla	r7, r1, sl, r7
 8019b4a:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019b4e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019b52:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019b56:	f896 8000 	ldrb.w	r8, [r6]
 8019b5a:	7876      	ldrb	r6, [r6, #1]
 8019b5c:	fb03 f808 	mul.w	r8, r3, r8
 8019b60:	fb0e 8807 	mla	r8, lr, r7, r8
 8019b64:	7817      	ldrb	r7, [r2, #0]
 8019b66:	fb01 8807 	mla	r8, r1, r7, r8
 8019b6a:	7807      	ldrb	r7, [r0, #0]
 8019b6c:	fb09 8707 	mla	r7, r9, r7, r8
 8019b70:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019b74:	4373      	muls	r3, r6
 8019b76:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019b7a:	7856      	ldrb	r6, [r2, #1]
 8019b7c:	ea47 070a 	orr.w	r7, r7, sl
 8019b80:	fb0e 330c 	mla	r3, lr, ip, r3
 8019b84:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019b88:	fb01 3306 	mla	r3, r1, r6, r3
 8019b8c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8019b90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019b96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b9a:	ea47 070a 	orr.w	r7, r7, sl
 8019b9e:	f823 7b02 	strh.w	r7, [r3], #2
 8019ba2:	930b      	str	r3, [sp, #44]	; 0x2c
 8019ba4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019ba6:	449b      	add	fp, r3
 8019ba8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019baa:	441d      	add	r5, r3
 8019bac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bae:	3b01      	subs	r3, #1
 8019bb0:	9309      	str	r3, [sp, #36]	; 0x24
 8019bb2:	e714      	b.n	80199de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8019bb4:	b149      	cbz	r1, 8019bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8019bb6:	5cba      	ldrb	r2, [r7, r2]
 8019bb8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019bbc:	4422      	add	r2, r4
 8019bbe:	4660      	mov	r0, ip
 8019bc0:	4666      	mov	r6, ip
 8019bc2:	e7a5      	b.n	8019b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bc4:	4660      	mov	r0, ip
 8019bc6:	4662      	mov	r2, ip
 8019bc8:	e7a2      	b.n	8019b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bca:	4660      	mov	r0, ip
 8019bcc:	4662      	mov	r2, ip
 8019bce:	e7f7      	b.n	8019bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8019bd0:	b00f      	add	sp, #60	; 0x3c
 8019bd2:	ecbd 8b08 	vpop	{d8-d11}
 8019bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019bdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019be0:	880e      	ldrh	r6, [r1, #0]
 8019be2:	b085      	sub	sp, #20
 8019be4:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019be8:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8019bec:	4691      	mov	r9, r2
 8019bee:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019bf2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019bf6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019bfa:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8019bfe:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019c02:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019c06:	9200      	str	r2, [sp, #0]
 8019c08:	00f6      	lsls	r6, r6, #3
 8019c0a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8019c0e:	9201      	str	r2, [sp, #4]
 8019c10:	2c00      	cmp	r4, #0
 8019c12:	b2f2      	uxtb	r2, r6
 8019c14:	fb04 560c 	mla	r6, r4, ip, r5
 8019c18:	9202      	str	r2, [sp, #8]
 8019c1a:	eb09 0e06 	add.w	lr, r9, r6
 8019c1e:	db3e      	blt.n	8019c9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019c20:	45a0      	cmp	r8, r4
 8019c22:	dd3c      	ble.n	8019c9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019c24:	2d00      	cmp	r5, #0
 8019c26:	db38      	blt.n	8019c9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8019c28:	45ac      	cmp	ip, r5
 8019c2a:	dd36      	ble.n	8019c9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8019c2c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8019c30:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019c34:	1c6e      	adds	r6, r5, #1
 8019c36:	d435      	bmi.n	8019ca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8019c38:	45b4      	cmp	ip, r6
 8019c3a:	dd33      	ble.n	8019ca4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8019c3c:	b3a0      	cbz	r0, 8019ca8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8019c3e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8019c42:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8019c46:	3401      	adds	r4, #1
 8019c48:	d432      	bmi.n	8019cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8019c4a:	45a0      	cmp	r8, r4
 8019c4c:	dd30      	ble.n	8019cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8019c4e:	b397      	cbz	r7, 8019cb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8019c50:	2d00      	cmp	r5, #0
 8019c52:	db2b      	blt.n	8019cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019c54:	45ac      	cmp	ip, r5
 8019c56:	dd29      	ble.n	8019cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019c58:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8019c5c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8019c60:	3501      	adds	r5, #1
 8019c62:	d42b      	bmi.n	8019cbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019c64:	45ac      	cmp	ip, r5
 8019c66:	dd29      	ble.n	8019cbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019c68:	b350      	cbz	r0, 8019cc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8019c6a:	44f4      	add	ip, lr
 8019c6c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019c70:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8019c74:	280f      	cmp	r0, #15
 8019c76:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019c7a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019c7e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019c82:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019c86:	d801      	bhi.n	8019c8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8019c88:	2f0f      	cmp	r7, #15
 8019c8a:	d91b      	bls.n	8019cc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8019c8c:	4b84      	ldr	r3, [pc, #528]	; (8019ea0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8019c8e:	4a85      	ldr	r2, [pc, #532]	; (8019ea4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8019c90:	4885      	ldr	r0, [pc, #532]	; (8019ea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8019c92:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019c96:	f007 f8d3 	bl	8020e40 <__assert_func>
 8019c9a:	2200      	movs	r2, #0
 8019c9c:	e7ca      	b.n	8019c34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8019c9e:	2600      	movs	r6, #0
 8019ca0:	4632      	mov	r2, r6
 8019ca2:	e7d0      	b.n	8019c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019ca4:	2600      	movs	r6, #0
 8019ca6:	e7ce      	b.n	8019c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019ca8:	4606      	mov	r6, r0
 8019caa:	e7cc      	b.n	8019c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8019cac:	2400      	movs	r4, #0
 8019cae:	e7d7      	b.n	8019c60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8019cb0:	2300      	movs	r3, #0
 8019cb2:	461c      	mov	r4, r3
 8019cb4:	e7de      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019cb6:	463b      	mov	r3, r7
 8019cb8:	463c      	mov	r4, r7
 8019cba:	e7db      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019cbc:	2300      	movs	r3, #0
 8019cbe:	e7d9      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019cc0:	4603      	mov	r3, r0
 8019cc2:	e7d7      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8019cc4:	b280      	uxth	r0, r0
 8019cc6:	b2bf      	uxth	r7, r7
 8019cc8:	fb00 fe07 	mul.w	lr, r0, r7
 8019ccc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019cd0:	0100      	lsls	r0, r0, #4
 8019cd2:	eba0 0c0e 	sub.w	ip, r0, lr
 8019cd6:	b2bf      	uxth	r7, r7
 8019cd8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019cdc:	fa1f fc8c 	uxth.w	ip, ip
 8019ce0:	1bed      	subs	r5, r5, r7
 8019ce2:	b2ad      	uxth	r5, r5
 8019ce4:	fb0c f00a 	mul.w	r0, ip, sl
 8019ce8:	fb05 000b 	mla	r0, r5, fp, r0
 8019cec:	fb07 0009 	mla	r0, r7, r9, r0
 8019cf0:	fb0e 0008 	mla	r0, lr, r8, r0
 8019cf4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019cf8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019cfc:	9003      	str	r0, [sp, #12]
 8019cfe:	d018      	beq.n	8019d32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8019d00:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019d04:	fb0b f000 	mul.w	r0, fp, r0
 8019d08:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019d0c:	fb0b fb02 	mul.w	fp, fp, r2
 8019d10:	0a02      	lsrs	r2, r0, #8
 8019d12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019d16:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019d1a:	4402      	add	r2, r0
 8019d1c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019d20:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019d24:	0a12      	lsrs	r2, r2, #8
 8019d26:	0a00      	lsrs	r0, r0, #8
 8019d28:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019d2c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019d30:	4302      	orrs	r2, r0
 8019d32:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019d36:	d019      	beq.n	8019d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8019d38:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019d3c:	fb0a fb0b 	mul.w	fp, sl, fp
 8019d40:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d44:	fb0a fa06 	mul.w	sl, sl, r6
 8019d48:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019d4c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019d50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019d54:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019d58:	445e      	add	r6, fp
 8019d5a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019d5e:	0a36      	lsrs	r6, r6, #8
 8019d60:	0a00      	lsrs	r0, r0, #8
 8019d62:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019d66:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019d6a:	4306      	orrs	r6, r0
 8019d6c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019d70:	d019      	beq.n	8019da6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8019d72:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019d76:	fb09 fa0a 	mul.w	sl, r9, sl
 8019d7a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019d7e:	fb09 f904 	mul.w	r9, r9, r4
 8019d82:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019d86:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019d8a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019d8e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8019d92:	4454      	add	r4, sl
 8019d94:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8019d98:	0a24      	lsrs	r4, r4, #8
 8019d9a:	0a00      	lsrs	r0, r0, #8
 8019d9c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019da0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019da4:	4304      	orrs	r4, r0
 8019da6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019daa:	d019      	beq.n	8019de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8019dac:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019db0:	fb08 f909 	mul.w	r9, r8, r9
 8019db4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019db8:	fb08 f803 	mul.w	r8, r8, r3
 8019dbc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019dc0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019dc4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019dc8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8019dcc:	444b      	add	r3, r9
 8019dce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019dd2:	0a1b      	lsrs	r3, r3, #8
 8019dd4:	0a00      	lsrs	r0, r0, #8
 8019dd6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019dda:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019dde:	4303      	orrs	r3, r0
 8019de0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019de4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019de8:	fb0c f808 	mul.w	r8, ip, r8
 8019dec:	fb05 8800 	mla	r8, r5, r0, r8
 8019df0:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019df4:	fb07 8800 	mla	r8, r7, r0, r8
 8019df8:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019dfc:	fb0e 8000 	mla	r0, lr, r0, r8
 8019e00:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019e04:	fb0c f606 	mul.w	r6, ip, r6
 8019e08:	0a00      	lsrs	r0, r0, #8
 8019e0a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019e0e:	fb05 6202 	mla	r2, r5, r2, r6
 8019e12:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019e16:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8019e1a:	fb07 2700 	mla	r7, r7, r0, r2
 8019e1e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019e22:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8019e26:	9c03      	ldr	r4, [sp, #12]
 8019e28:	9e01      	ldr	r6, [sp, #4]
 8019e2a:	b29b      	uxth	r3, r3
 8019e2c:	435c      	muls	r4, r3
 8019e2e:	fb0e 7000 	mla	r0, lr, r0, r7
 8019e32:	1c62      	adds	r2, r4, #1
 8019e34:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019e38:	0a00      	lsrs	r0, r0, #8
 8019e3a:	9c00      	ldr	r4, [sp, #0]
 8019e3c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019e40:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019e44:	ea48 0000 	orr.w	r0, r8, r0
 8019e48:	b2d2      	uxtb	r2, r2
 8019e4a:	fb14 f402 	smulbb	r4, r4, r2
 8019e4e:	0c05      	lsrs	r5, r0, #16
 8019e50:	fb05 4503 	mla	r5, r5, r3, r4
 8019e54:	fb16 f602 	smulbb	r6, r6, r2
 8019e58:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8019e5c:	fb04 6403 	mla	r4, r4, r3, r6
 8019e60:	9e02      	ldr	r6, [sp, #8]
 8019e62:	b2c0      	uxtb	r0, r0
 8019e64:	fb16 f202 	smulbb	r2, r6, r2
 8019e68:	fb00 2303 	mla	r3, r0, r3, r2
 8019e6c:	b2ad      	uxth	r5, r5
 8019e6e:	b298      	uxth	r0, r3
 8019e70:	1c43      	adds	r3, r0, #1
 8019e72:	1c6a      	adds	r2, r5, #1
 8019e74:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019e78:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8019e7c:	b2a4      	uxth	r4, r4
 8019e7e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019e82:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e86:	4313      	orrs	r3, r2
 8019e88:	1c62      	adds	r2, r4, #1
 8019e8a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019e8e:	0952      	lsrs	r2, r2, #5
 8019e90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e94:	4313      	orrs	r3, r2
 8019e96:	800b      	strh	r3, [r1, #0]
 8019e98:	b005      	add	sp, #20
 8019e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e9e:	bf00      	nop
 8019ea0:	0802556e 	.word	0x0802556e
 8019ea4:	08025b3a 	.word	0x08025b3a
 8019ea8:	080255f2 	.word	0x080255f2

08019eac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019eb0:	ed2d 8b08 	vpush	{d8-d11}
 8019eb4:	b09f      	sub	sp, #124	; 0x7c
 8019eb6:	eeb0 aa40 	vmov.f32	s20, s0
 8019eba:	921b      	str	r2, [sp, #108]	; 0x6c
 8019ebc:	9309      	str	r3, [sp, #36]	; 0x24
 8019ebe:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8019ec0:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8019ec4:	931c      	str	r3, [sp, #112]	; 0x70
 8019ec6:	9119      	str	r1, [sp, #100]	; 0x64
 8019ec8:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8019ecc:	901d      	str	r0, [sp, #116]	; 0x74
 8019ece:	6850      	ldr	r0, [r2, #4]
 8019ed0:	6812      	ldr	r2, [r2, #0]
 8019ed2:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8019ed4:	fb00 1303 	mla	r3, r0, r3, r1
 8019ed8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019edc:	930c      	str	r3, [sp, #48]	; 0x30
 8019ede:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019ee0:	681b      	ldr	r3, [r3, #0]
 8019ee2:	9312      	str	r3, [sp, #72]	; 0x48
 8019ee4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019ee6:	685e      	ldr	r6, [r3, #4]
 8019ee8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019eec:	930d      	str	r3, [sp, #52]	; 0x34
 8019eee:	eef0 9a60 	vmov.f32	s19, s1
 8019ef2:	eeb0 9a41 	vmov.f32	s18, s2
 8019ef6:	eeb0 8a62 	vmov.f32	s16, s5
 8019efa:	eef0 8a43 	vmov.f32	s17, s6
 8019efe:	eef0 ba44 	vmov.f32	s23, s8
 8019f02:	eeb0 ba64 	vmov.f32	s22, s9
 8019f06:	eef0 aa45 	vmov.f32	s21, s10
 8019f0a:	3604      	adds	r6, #4
 8019f0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019f0e:	2b00      	cmp	r3, #0
 8019f10:	dc03      	bgt.n	8019f1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019f12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019f14:	2b00      	cmp	r3, #0
 8019f16:	f340 8388 	ble.w	801a62a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8019f1a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019f1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019f24:	1e48      	subs	r0, r1, #1
 8019f26:	1e57      	subs	r7, r2, #1
 8019f28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f2a:	2b00      	cmp	r3, #0
 8019f2c:	f340 8195 	ble.w	801a25a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8019f30:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019f32:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019f36:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019f3a:	d406      	bmi.n	8019f4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f3c:	4584      	cmp	ip, r0
 8019f3e:	da04      	bge.n	8019f4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f40:	2b00      	cmp	r3, #0
 8019f42:	db02      	blt.n	8019f4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019f44:	42bb      	cmp	r3, r7
 8019f46:	f2c0 8189 	blt.w	801a25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8019f4a:	f11c 0c01 	adds.w	ip, ip, #1
 8019f4e:	f100 8177 	bmi.w	801a240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019f52:	4561      	cmp	r1, ip
 8019f54:	f2c0 8174 	blt.w	801a240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019f58:	3301      	adds	r3, #1
 8019f5a:	f100 8171 	bmi.w	801a240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019f5e:	429a      	cmp	r2, r3
 8019f60:	f2c0 816e 	blt.w	801a240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019f64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f66:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019f68:	931a      	str	r3, [sp, #104]	; 0x68
 8019f6a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019f6c:	2b00      	cmp	r3, #0
 8019f6e:	f340 8193 	ble.w	801a298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019f72:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019f74:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019f78:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019f7a:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8019f7e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019f80:	141b      	asrs	r3, r3, #16
 8019f82:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019f86:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019f8a:	f100 81d6 	bmi.w	801a33a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019f8e:	f100 38ff 	add.w	r8, r0, #4294967295
 8019f92:	4543      	cmp	r3, r8
 8019f94:	f280 81d1 	bge.w	801a33a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019f98:	f1bc 0f00 	cmp.w	ip, #0
 8019f9c:	f2c0 81cd 	blt.w	801a33a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019fa0:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019fa4:	45c4      	cmp	ip, r8
 8019fa6:	f280 81c8 	bge.w	801a33a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019faa:	b200      	sxth	r0, r0
 8019fac:	fb0c 3300 	mla	r3, ip, r0, r3
 8019fb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019fb2:	eb04 0803 	add.w	r8, r4, r3
 8019fb6:	5ce3      	ldrb	r3, [r4, r3]
 8019fb8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019fbc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019fc0:	2a00      	cmp	r2, #0
 8019fc2:	f000 81af 	beq.w	801a324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8019fc6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019fca:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019fce:	940e      	str	r4, [sp, #56]	; 0x38
 8019fd0:	0e24      	lsrs	r4, r4, #24
 8019fd2:	9415      	str	r4, [sp, #84]	; 0x54
 8019fd4:	b179      	cbz	r1, 8019ff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019fd6:	eb08 0c00 	add.w	ip, r8, r0
 8019fda:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019fde:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019fe2:	900a      	str	r0, [sp, #40]	; 0x28
 8019fe4:	0e00      	lsrs	r0, r0, #24
 8019fe6:	9013      	str	r0, [sp, #76]	; 0x4c
 8019fe8:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019fec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019ff0:	900f      	str	r0, [sp, #60]	; 0x3c
 8019ff2:	0e00      	lsrs	r0, r0, #24
 8019ff4:	9016      	str	r0, [sp, #88]	; 0x58
 8019ff6:	b292      	uxth	r2, r2
 8019ff8:	b289      	uxth	r1, r1
 8019ffa:	fb02 f901 	mul.w	r9, r2, r1
 8019ffe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a002:	0112      	lsls	r2, r2, #4
 801a004:	eba2 0809 	sub.w	r8, r2, r9
 801a008:	b289      	uxth	r1, r1
 801a00a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a00e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a010:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a012:	fa1f f888 	uxth.w	r8, r8
 801a016:	1a52      	subs	r2, r2, r1
 801a018:	b292      	uxth	r2, r2
 801a01a:	fb08 f000 	mul.w	r0, r8, r0
 801a01e:	fb02 000e 	mla	r0, r2, lr, r0
 801a022:	fb01 0004 	mla	r0, r1, r4, r0
 801a026:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a028:	fb09 0004 	mla	r0, r9, r4, r0
 801a02c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a030:	2800      	cmp	r0, #0
 801a032:	f000 80fa 	beq.w	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a036:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a03a:	d01b      	beq.n	801a074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a03c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a040:	fb0e fa0a 	mul.w	sl, lr, sl
 801a044:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a048:	fb0e fe03 	mul.w	lr, lr, r3
 801a04c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a050:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a054:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a058:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a05c:	4453      	add	r3, sl
 801a05e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a062:	0a1b      	lsrs	r3, r3, #8
 801a064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a068:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a06c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a070:	ea43 030c 	orr.w	r3, r3, ip
 801a074:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a076:	2cff      	cmp	r4, #255	; 0xff
 801a078:	d021      	beq.n	801a0be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a07a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a07c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a080:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a082:	fb04 fb0b 	mul.w	fp, r4, fp
 801a086:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a088:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a08c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a08e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a092:	fb04 fa0a 	mul.w	sl, r4, sl
 801a096:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a09a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a09e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a0a2:	44de      	add	lr, fp
 801a0a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a0a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a0ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a0b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a0b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a0b8:	ea4e 040a 	orr.w	r4, lr, sl
 801a0bc:	940e      	str	r4, [sp, #56]	; 0x38
 801a0be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0c0:	2cff      	cmp	r4, #255	; 0xff
 801a0c2:	d021      	beq.n	801a108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801a0c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a0c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a0ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0cc:	fb04 fb0b 	mul.w	fp, r4, fp
 801a0d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a0d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a0d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a0dc:	fb04 fa0a 	mul.w	sl, r4, sl
 801a0e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a0e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a0e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a0ec:	44de      	add	lr, fp
 801a0ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a0f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a0f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a0fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a0fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a102:	ea4e 040a 	orr.w	r4, lr, sl
 801a106:	940a      	str	r4, [sp, #40]	; 0x28
 801a108:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a10a:	2cff      	cmp	r4, #255	; 0xff
 801a10c:	d021      	beq.n	801a152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801a10e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a110:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a114:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a116:	fb04 fb0b 	mul.w	fp, r4, fp
 801a11a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a11c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a120:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a122:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a126:	fb04 fa0a 	mul.w	sl, r4, sl
 801a12a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a12e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a132:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a136:	44de      	add	lr, fp
 801a138:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a13c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a140:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a144:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a148:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a14c:	ea4e 040a 	orr.w	r4, lr, sl
 801a150:	940f      	str	r4, [sp, #60]	; 0x3c
 801a152:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a154:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a158:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a15a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a15e:	fb08 fc0c 	mul.w	ip, r8, ip
 801a162:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a166:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a16a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a16c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a170:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a174:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a176:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a17a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a17e:	fb08 f80e 	mul.w	r8, r8, lr
 801a182:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a186:	fb02 8303 	mla	r3, r2, r3, r8
 801a18a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a18c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a18e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a192:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a194:	fb01 330a 	mla	r3, r1, sl, r3
 801a198:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801a19c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a19e:	fb09 3901 	mla	r9, r9, r1, r3
 801a1a2:	4342      	muls	r2, r0
 801a1a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a1a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a1ac:	883b      	ldrh	r3, [r7, #0]
 801a1ae:	1c50      	adds	r0, r2, #1
 801a1b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a1b8:	ea4c 0c09 	orr.w	ip, ip, r9
 801a1bc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a1c0:	1219      	asrs	r1, r3, #8
 801a1c2:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a1c6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a1ca:	b2c0      	uxtb	r0, r0
 801a1cc:	fb12 f204 	smulbb	r2, r2, r4
 801a1d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a1d4:	fb01 2100 	mla	r1, r1, r0, r2
 801a1d8:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801a1dc:	10da      	asrs	r2, r3, #3
 801a1de:	fa5f fc8c 	uxtb.w	ip, ip
 801a1e2:	00db      	lsls	r3, r3, #3
 801a1e4:	fb1c fc04 	smulbb	ip, ip, r4
 801a1e8:	b2db      	uxtb	r3, r3
 801a1ea:	b289      	uxth	r1, r1
 801a1ec:	fb03 c300 	mla	r3, r3, r0, ip
 801a1f0:	fa1f fc83 	uxth.w	ip, r3
 801a1f4:	1c4b      	adds	r3, r1, #1
 801a1f6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a1fa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a1fe:	fb1e fe04 	smulbb	lr, lr, r4
 801a202:	f10c 0301 	add.w	r3, ip, #1
 801a206:	fb02 e200 	mla	r2, r2, r0, lr
 801a20a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a20e:	b292      	uxth	r2, r2
 801a210:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a214:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a218:	430b      	orrs	r3, r1
 801a21a:	1c51      	adds	r1, r2, #1
 801a21c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a220:	0952      	lsrs	r2, r2, #5
 801a222:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a226:	4313      	orrs	r3, r2
 801a228:	803b      	strh	r3, [r7, #0]
 801a22a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a22c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a22e:	441a      	add	r2, r3
 801a230:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a232:	9231      	str	r2, [sp, #196]	; 0xc4
 801a234:	441d      	add	r5, r3
 801a236:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a238:	3b01      	subs	r3, #1
 801a23a:	3702      	adds	r7, #2
 801a23c:	931a      	str	r3, [sp, #104]	; 0x68
 801a23e:	e694      	b.n	8019f6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801a240:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a242:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a244:	441c      	add	r4, r3
 801a246:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a248:	9431      	str	r4, [sp, #196]	; 0xc4
 801a24a:	441d      	add	r5, r3
 801a24c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a24e:	3b01      	subs	r3, #1
 801a250:	9309      	str	r3, [sp, #36]	; 0x24
 801a252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a254:	3302      	adds	r3, #2
 801a256:	930c      	str	r3, [sp, #48]	; 0x30
 801a258:	e666      	b.n	8019f28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a25a:	d024      	beq.n	801a2a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 801a25c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a25e:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801a260:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a262:	3b01      	subs	r3, #1
 801a264:	fb00 4003 	mla	r0, r0, r3, r4
 801a268:	1400      	asrs	r0, r0, #16
 801a26a:	f53f ae7b 	bmi.w	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a26e:	3901      	subs	r1, #1
 801a270:	4288      	cmp	r0, r1
 801a272:	f6bf ae77 	bge.w	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a276:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801a278:	fb01 5303 	mla	r3, r1, r3, r5
 801a27c:	141b      	asrs	r3, r3, #16
 801a27e:	f53f ae71 	bmi.w	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a282:	3a01      	subs	r2, #1
 801a284:	4293      	cmp	r3, r2
 801a286:	f6bf ae6d 	bge.w	8019f64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a28a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a28e:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801a292:	f1bb 0f00 	cmp.w	fp, #0
 801a296:	dc70      	bgt.n	801a37a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801a298:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a29a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a29e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2a0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a2a4:	930c      	str	r3, [sp, #48]	; 0x30
 801a2a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a2a8:	2b00      	cmp	r3, #0
 801a2aa:	f340 81be 	ble.w	801a62a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801a2ae:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a2b2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a2b6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a2ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a2bc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a2c0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a2c4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a2c8:	eef0 6a48 	vmov.f32	s13, s16
 801a2cc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a2d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2d4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a2d8:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 801a2dc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a2e0:	eef0 6a68 	vmov.f32	s13, s17
 801a2e4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a2e8:	ee18 2a10 	vmov	r2, s16
 801a2ec:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a2f0:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2f4:	ee18 2a90 	vmov	r2, s17
 801a2f8:	9333      	str	r3, [sp, #204]	; 0xcc
 801a2fa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a2fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a300:	9334      	str	r3, [sp, #208]	; 0xd0
 801a302:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a304:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801a306:	3b01      	subs	r3, #1
 801a308:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a30c:	9319      	str	r3, [sp, #100]	; 0x64
 801a30e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a310:	bf08      	it	eq
 801a312:	4613      	moveq	r3, r2
 801a314:	ee16 5a90 	vmov	r5, s13
 801a318:	9309      	str	r3, [sp, #36]	; 0x24
 801a31a:	eef0 8a67 	vmov.f32	s17, s15
 801a31e:	eeb0 8a47 	vmov.f32	s16, s14
 801a322:	e5f3      	b.n	8019f0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a324:	2900      	cmp	r1, #0
 801a326:	f43f ae66 	beq.w	8019ff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801a32a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a32e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a332:	900a      	str	r0, [sp, #40]	; 0x28
 801a334:	0e00      	lsrs	r0, r0, #24
 801a336:	9013      	str	r0, [sp, #76]	; 0x4c
 801a338:	e65d      	b.n	8019ff6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801a33a:	f113 0801 	adds.w	r8, r3, #1
 801a33e:	f53f af74 	bmi.w	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a342:	4540      	cmp	r0, r8
 801a344:	f6ff af71 	blt.w	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a348:	f11c 0801 	adds.w	r8, ip, #1
 801a34c:	f53f af6d 	bmi.w	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a350:	45c6      	cmp	lr, r8
 801a352:	f6ff af6a 	blt.w	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a356:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801a358:	9302      	str	r3, [sp, #8]
 801a35a:	b200      	sxth	r0, r0
 801a35c:	fa0f f38e 	sxth.w	r3, lr
 801a360:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a364:	e9cd c203 	strd	ip, r2, [sp, #12]
 801a368:	9301      	str	r3, [sp, #4]
 801a36a:	9000      	str	r0, [sp, #0]
 801a36c:	4633      	mov	r3, r6
 801a36e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a370:	981d      	ldr	r0, [sp, #116]	; 0x74
 801a372:	4639      	mov	r1, r7
 801a374:	f7ff fc32 	bl	8019bdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801a378:	e757      	b.n	801a22a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a37a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a37c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801a37e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a382:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a384:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a388:	1427      	asrs	r7, r4, #16
 801a38a:	142b      	asrs	r3, r5, #16
 801a38c:	fb01 7303 	mla	r3, r1, r3, r7
 801a390:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a392:	18e7      	adds	r7, r4, r3
 801a394:	5ce3      	ldrb	r3, [r4, r3]
 801a396:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a39a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a39e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a3a2:	2a00      	cmp	r2, #0
 801a3a4:	f000 8137 	beq.w	801a616 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a3a8:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a3ac:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a3b0:	9410      	str	r4, [sp, #64]	; 0x40
 801a3b2:	0e24      	lsrs	r4, r4, #24
 801a3b4:	9417      	str	r4, [sp, #92]	; 0x5c
 801a3b6:	b170      	cbz	r0, 801a3d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801a3b8:	eb07 0e01 	add.w	lr, r7, r1
 801a3bc:	5c79      	ldrb	r1, [r7, r1]
 801a3be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a3c2:	910b      	str	r1, [sp, #44]	; 0x2c
 801a3c4:	0e09      	lsrs	r1, r1, #24
 801a3c6:	9114      	str	r1, [sp, #80]	; 0x50
 801a3c8:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a3cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a3d0:	9111      	str	r1, [sp, #68]	; 0x44
 801a3d2:	0e09      	lsrs	r1, r1, #24
 801a3d4:	9118      	str	r1, [sp, #96]	; 0x60
 801a3d6:	b292      	uxth	r2, r2
 801a3d8:	b280      	uxth	r0, r0
 801a3da:	fb02 f800 	mul.w	r8, r2, r0
 801a3de:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a3e2:	0112      	lsls	r2, r2, #4
 801a3e4:	eba2 0e08 	sub.w	lr, r2, r8
 801a3e8:	b280      	uxth	r0, r0
 801a3ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a3ee:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801a3f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a3f2:	fa1f fe8e 	uxth.w	lr, lr
 801a3f6:	1a12      	subs	r2, r2, r0
 801a3f8:	b292      	uxth	r2, r2
 801a3fa:	fb0e f101 	mul.w	r1, lr, r1
 801a3fe:	fb02 110c 	mla	r1, r2, ip, r1
 801a402:	fb00 1104 	mla	r1, r0, r4, r1
 801a406:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a408:	fb08 1104 	mla	r1, r8, r4, r1
 801a40c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a410:	2900      	cmp	r1, #0
 801a412:	f000 80f5 	beq.w	801a600 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801a416:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a41a:	d019      	beq.n	801a450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801a41c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a420:	fb0c fa0a 	mul.w	sl, ip, sl
 801a424:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a428:	fb0c fc03 	mul.w	ip, ip, r3
 801a42c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a430:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a434:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a438:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a43c:	4453      	add	r3, sl
 801a43e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a442:	0a1b      	lsrs	r3, r3, #8
 801a444:	0a3f      	lsrs	r7, r7, #8
 801a446:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a44a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a44e:	433b      	orrs	r3, r7
 801a450:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a452:	2cff      	cmp	r4, #255	; 0xff
 801a454:	d020      	beq.n	801a498 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801a456:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a458:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a45c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a45e:	4367      	muls	r7, r4
 801a460:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a462:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a466:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a468:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a46c:	fb04 fa0a 	mul.w	sl, r4, sl
 801a470:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a478:	44bc      	add	ip, r7
 801a47a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a47e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a482:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a486:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a48a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a48e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a492:	ea4c 040a 	orr.w	r4, ip, sl
 801a496:	9410      	str	r4, [sp, #64]	; 0x40
 801a498:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a49a:	2cff      	cmp	r4, #255	; 0xff
 801a49c:	d020      	beq.n	801a4e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801a49e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a4a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a4a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a4a6:	4367      	muls	r7, r4
 801a4a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a4aa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a4ae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a4b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a4b4:	fb04 fa0a 	mul.w	sl, r4, sl
 801a4b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a4bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a4c0:	44bc      	add	ip, r7
 801a4c2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a4c6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a4ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a4ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a4d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4da:	ea4c 040a 	orr.w	r4, ip, sl
 801a4de:	940b      	str	r4, [sp, #44]	; 0x2c
 801a4e0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a4e2:	2cff      	cmp	r4, #255	; 0xff
 801a4e4:	d020      	beq.n	801a528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 801a4e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a4e8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a4ec:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a4ee:	4367      	muls	r7, r4
 801a4f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a4f2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a4f6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a4f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a4fc:	fb04 fa0a 	mul.w	sl, r4, sl
 801a500:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a508:	44bc      	add	ip, r7
 801a50a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a50e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a512:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a516:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a51a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a51e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a522:	ea4c 040a 	orr.w	r4, ip, sl
 801a526:	9411      	str	r4, [sp, #68]	; 0x44
 801a528:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a52a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a52e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a530:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a534:	fb0e f707 	mul.w	r7, lr, r7
 801a538:	fb02 770c 	mla	r7, r2, ip, r7
 801a53c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a540:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a542:	fb00 770c 	mla	r7, r0, ip, r7
 801a546:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a54a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a54c:	fb08 770c 	mla	r7, r8, ip, r7
 801a550:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a554:	fb0e fe0c 	mul.w	lr, lr, ip
 801a558:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a55c:	fb02 e303 	mla	r3, r2, r3, lr
 801a560:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a562:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a564:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a568:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a56a:	fb00 330a 	mla	r3, r0, sl, r3
 801a56e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a572:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a576:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a578:	f8b9 0000 	ldrh.w	r0, [r9]
 801a57c:	434b      	muls	r3, r1
 801a57e:	0a3f      	lsrs	r7, r7, #8
 801a580:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a584:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a588:	1c59      	adds	r1, r3, #1
 801a58a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a58e:	ea47 070c 	orr.w	r7, r7, ip
 801a592:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a596:	1202      	asrs	r2, r0, #8
 801a598:	0c3b      	lsrs	r3, r7, #16
 801a59a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a59e:	b2c9      	uxtb	r1, r1
 801a5a0:	fb13 f304 	smulbb	r3, r3, r4
 801a5a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a5a8:	fb02 3201 	mla	r2, r2, r1, r3
 801a5ac:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a5b0:	10c3      	asrs	r3, r0, #3
 801a5b2:	b2ff      	uxtb	r7, r7
 801a5b4:	00c0      	lsls	r0, r0, #3
 801a5b6:	b292      	uxth	r2, r2
 801a5b8:	fb1c fc04 	smulbb	ip, ip, r4
 801a5bc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a5c0:	b2c0      	uxtb	r0, r0
 801a5c2:	fb17 f704 	smulbb	r7, r7, r4
 801a5c6:	fb03 c301 	mla	r3, r3, r1, ip
 801a5ca:	fb00 7001 	mla	r0, r0, r1, r7
 801a5ce:	f102 0c01 	add.w	ip, r2, #1
 801a5d2:	b280      	uxth	r0, r0
 801a5d4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a5d8:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801a5dc:	1c42      	adds	r2, r0, #1
 801a5de:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a5e2:	b29b      	uxth	r3, r3
 801a5e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a5e8:	ea42 020c 	orr.w	r2, r2, ip
 801a5ec:	f103 0c01 	add.w	ip, r3, #1
 801a5f0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a5f4:	095b      	lsrs	r3, r3, #5
 801a5f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5fa:	431a      	orrs	r2, r3
 801a5fc:	f8a9 2000 	strh.w	r2, [r9]
 801a600:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a602:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a604:	441a      	add	r2, r3
 801a606:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a608:	9231      	str	r2, [sp, #196]	; 0xc4
 801a60a:	f109 0902 	add.w	r9, r9, #2
 801a60e:	441d      	add	r5, r3
 801a610:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a614:	e63d      	b.n	801a292 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a616:	2800      	cmp	r0, #0
 801a618:	f43f aedd 	beq.w	801a3d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801a61c:	5c79      	ldrb	r1, [r7, r1]
 801a61e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a622:	910b      	str	r1, [sp, #44]	; 0x2c
 801a624:	0e09      	lsrs	r1, r1, #24
 801a626:	9114      	str	r1, [sp, #80]	; 0x50
 801a628:	e6d5      	b.n	801a3d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801a62a:	b01f      	add	sp, #124	; 0x7c
 801a62c:	ecbd 8b08 	vpop	{d8-d11}
 801a630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a638:	880e      	ldrh	r6, [r1, #0]
 801a63a:	b085      	sub	sp, #20
 801a63c:	ea4f 2826 	mov.w	r8, r6, asr #8
 801a640:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801a644:	4691      	mov	r9, r2
 801a646:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a64a:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 801a64e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a652:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801a656:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 801a65a:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801a65e:	9200      	str	r2, [sp, #0]
 801a660:	00f6      	lsls	r6, r6, #3
 801a662:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 801a666:	9201      	str	r2, [sp, #4]
 801a668:	2c00      	cmp	r4, #0
 801a66a:	b2f2      	uxtb	r2, r6
 801a66c:	fb04 560c 	mla	r6, r4, ip, r5
 801a670:	9202      	str	r2, [sp, #8]
 801a672:	eb09 0806 	add.w	r8, r9, r6
 801a676:	db3f      	blt.n	801a6f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801a678:	45a6      	cmp	lr, r4
 801a67a:	dd3d      	ble.n	801a6f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801a67c:	2d00      	cmp	r5, #0
 801a67e:	db39      	blt.n	801a6f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801a680:	45ac      	cmp	ip, r5
 801a682:	dd37      	ble.n	801a6f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801a684:	f819 2006 	ldrb.w	r2, [r9, r6]
 801a688:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a68c:	1c6e      	adds	r6, r5, #1
 801a68e:	d436      	bmi.n	801a6fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801a690:	45b4      	cmp	ip, r6
 801a692:	dd34      	ble.n	801a6fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801a694:	b3a8      	cbz	r0, 801a702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 801a696:	f898 6001 	ldrb.w	r6, [r8, #1]
 801a69a:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801a69e:	3401      	adds	r4, #1
 801a6a0:	d433      	bmi.n	801a70a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801a6a2:	45a6      	cmp	lr, r4
 801a6a4:	dd31      	ble.n	801a70a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801a6a6:	b39f      	cbz	r7, 801a710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 801a6a8:	2d00      	cmp	r5, #0
 801a6aa:	eb08 0e0c 	add.w	lr, r8, ip
 801a6ae:	db2a      	blt.n	801a706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801a6b0:	45ac      	cmp	ip, r5
 801a6b2:	dd28      	ble.n	801a706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801a6b4:	f818 400c 	ldrb.w	r4, [r8, ip]
 801a6b8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801a6bc:	3501      	adds	r5, #1
 801a6be:	d42a      	bmi.n	801a716 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801a6c0:	45ac      	cmp	ip, r5
 801a6c2:	dd28      	ble.n	801a716 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801a6c4:	b348      	cbz	r0, 801a71a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 801a6c6:	f89e 5001 	ldrb.w	r5, [lr, #1]
 801a6ca:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801a6ce:	280f      	cmp	r0, #15
 801a6d0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a6d4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a6d8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a6dc:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a6e0:	d801      	bhi.n	801a6e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801a6e2:	2f0f      	cmp	r7, #15
 801a6e4:	d91b      	bls.n	801a71e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 801a6e6:	4b7d      	ldr	r3, [pc, #500]	; (801a8dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801a6e8:	4a7d      	ldr	r2, [pc, #500]	; (801a8e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801a6ea:	487e      	ldr	r0, [pc, #504]	; (801a8e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801a6ec:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801a6f0:	f006 fba6 	bl	8020e40 <__assert_func>
 801a6f4:	2200      	movs	r2, #0
 801a6f6:	e7c9      	b.n	801a68c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801a6f8:	2600      	movs	r6, #0
 801a6fa:	4632      	mov	r2, r6
 801a6fc:	e7cf      	b.n	801a69e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a6fe:	2600      	movs	r6, #0
 801a700:	e7cd      	b.n	801a69e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a702:	4606      	mov	r6, r0
 801a704:	e7cb      	b.n	801a69e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a706:	2400      	movs	r4, #0
 801a708:	e7d8      	b.n	801a6bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 801a70a:	2300      	movs	r3, #0
 801a70c:	461c      	mov	r4, r3
 801a70e:	e7de      	b.n	801a6ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801a710:	463b      	mov	r3, r7
 801a712:	463c      	mov	r4, r7
 801a714:	e7db      	b.n	801a6ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801a716:	2300      	movs	r3, #0
 801a718:	e7d9      	b.n	801a6ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801a71a:	4603      	mov	r3, r0
 801a71c:	e7d7      	b.n	801a6ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801a71e:	b280      	uxth	r0, r0
 801a720:	b2bf      	uxth	r7, r7
 801a722:	fb00 fe07 	mul.w	lr, r0, r7
 801a726:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a72a:	0100      	lsls	r0, r0, #4
 801a72c:	eba0 0c0e 	sub.w	ip, r0, lr
 801a730:	b2bf      	uxth	r7, r7
 801a732:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a736:	fa1f fc8c 	uxth.w	ip, ip
 801a73a:	1bed      	subs	r5, r5, r7
 801a73c:	b2ad      	uxth	r5, r5
 801a73e:	fb0c f00a 	mul.w	r0, ip, sl
 801a742:	fb05 000b 	mla	r0, r5, fp, r0
 801a746:	fb07 0009 	mla	r0, r7, r9, r0
 801a74a:	fb0e 0008 	mla	r0, lr, r8, r0
 801a74e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a752:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a756:	9003      	str	r0, [sp, #12]
 801a758:	d018      	beq.n	801a78c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 801a75a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a75e:	fb0b f000 	mul.w	r0, fp, r0
 801a762:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a766:	fb0b fb02 	mul.w	fp, fp, r2
 801a76a:	0a02      	lsrs	r2, r0, #8
 801a76c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a770:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a774:	4402      	add	r2, r0
 801a776:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a77a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a77e:	0a12      	lsrs	r2, r2, #8
 801a780:	0a00      	lsrs	r0, r0, #8
 801a782:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a786:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a78a:	4302      	orrs	r2, r0
 801a78c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a790:	d019      	beq.n	801a7c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801a792:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a796:	fb0a fb0b 	mul.w	fp, sl, fp
 801a79a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a79e:	fb0a fa06 	mul.w	sl, sl, r6
 801a7a2:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a7a6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a7aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a7ae:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a7b2:	445e      	add	r6, fp
 801a7b4:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a7b8:	0a36      	lsrs	r6, r6, #8
 801a7ba:	0a00      	lsrs	r0, r0, #8
 801a7bc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a7c0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a7c4:	4306      	orrs	r6, r0
 801a7c6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a7ca:	d019      	beq.n	801a800 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 801a7cc:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a7d0:	fb09 fa0a 	mul.w	sl, r9, sl
 801a7d4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a7d8:	fb09 f904 	mul.w	r9, r9, r4
 801a7dc:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a7e0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a7e4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a7e8:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801a7ec:	4454      	add	r4, sl
 801a7ee:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801a7f2:	0a24      	lsrs	r4, r4, #8
 801a7f4:	0a00      	lsrs	r0, r0, #8
 801a7f6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a7fa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a7fe:	4304      	orrs	r4, r0
 801a800:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a804:	d019      	beq.n	801a83a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 801a806:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a80a:	fb08 f909 	mul.w	r9, r8, r9
 801a80e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a812:	fb08 f803 	mul.w	r8, r8, r3
 801a816:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a81a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a81e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a822:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801a826:	444b      	add	r3, r9
 801a828:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a82c:	0a1b      	lsrs	r3, r3, #8
 801a82e:	0a00      	lsrs	r0, r0, #8
 801a830:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a834:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a838:	4303      	orrs	r3, r0
 801a83a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a83e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a842:	fb0c f808 	mul.w	r8, ip, r8
 801a846:	fb05 8800 	mla	r8, r5, r0, r8
 801a84a:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801a84e:	fb07 8800 	mla	r8, r7, r0, r8
 801a852:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801a856:	fb0e 8000 	mla	r0, lr, r0, r8
 801a85a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a85e:	fb0c f606 	mul.w	r6, ip, r6
 801a862:	0a00      	lsrs	r0, r0, #8
 801a864:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a868:	fb05 6202 	mla	r2, r5, r2, r6
 801a86c:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801a870:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801a874:	fb07 2700 	mla	r7, r7, r0, r2
 801a878:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a87c:	9b03      	ldr	r3, [sp, #12]
 801a87e:	9d00      	ldr	r5, [sp, #0]
 801a880:	9a02      	ldr	r2, [sp, #8]
 801a882:	fb0e 7000 	mla	r0, lr, r0, r7
 801a886:	43dc      	mvns	r4, r3
 801a888:	9b01      	ldr	r3, [sp, #4]
 801a88a:	b2e4      	uxtb	r4, r4
 801a88c:	0a00      	lsrs	r0, r0, #8
 801a88e:	4363      	muls	r3, r4
 801a890:	4365      	muls	r5, r4
 801a892:	4362      	muls	r2, r4
 801a894:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a898:	ea48 0000 	orr.w	r0, r8, r0
 801a89c:	4614      	mov	r4, r2
 801a89e:	1c5e      	adds	r6, r3, #1
 801a8a0:	1c6a      	adds	r2, r5, #1
 801a8a2:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 801a8a6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a8aa:	0a03      	lsrs	r3, r0, #8
 801a8ac:	0c02      	lsrs	r2, r0, #16
 801a8ae:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801a8b2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a8b6:	00db      	lsls	r3, r3, #3
 801a8b8:	0212      	lsls	r2, r2, #8
 801a8ba:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a8be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a8c2:	4313      	orrs	r3, r2
 801a8c4:	1c62      	adds	r2, r4, #1
 801a8c6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a8ca:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801a8ce:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a8d2:	4318      	orrs	r0, r3
 801a8d4:	8008      	strh	r0, [r1, #0]
 801a8d6:	b005      	add	sp, #20
 801a8d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8dc:	0802556e 	.word	0x0802556e
 801a8e0:	08025b3a 	.word	0x08025b3a
 801a8e4:	080255f2 	.word	0x080255f2

0801a8e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8ec:	ed2d 8b08 	vpush	{d8-d11}
 801a8f0:	b09b      	sub	sp, #108	; 0x6c
 801a8f2:	eeb0 aa40 	vmov.f32	s20, s0
 801a8f6:	9218      	str	r2, [sp, #96]	; 0x60
 801a8f8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a8fa:	9116      	str	r1, [sp, #88]	; 0x58
 801a8fc:	9307      	str	r3, [sp, #28]
 801a8fe:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a902:	9019      	str	r0, [sp, #100]	; 0x64
 801a904:	6850      	ldr	r0, [r2, #4]
 801a906:	6812      	ldr	r2, [r2, #0]
 801a908:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801a90a:	fb00 1303 	mla	r3, r0, r3, r1
 801a90e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a912:	930a      	str	r3, [sp, #40]	; 0x28
 801a914:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a916:	681b      	ldr	r3, [r3, #0]
 801a918:	930f      	str	r3, [sp, #60]	; 0x3c
 801a91a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a91c:	685e      	ldr	r6, [r3, #4]
 801a91e:	eef0 9a60 	vmov.f32	s19, s1
 801a922:	eeb0 9a41 	vmov.f32	s18, s2
 801a926:	eeb0 8a62 	vmov.f32	s16, s5
 801a92a:	eef0 8a43 	vmov.f32	s17, s6
 801a92e:	eef0 ba44 	vmov.f32	s23, s8
 801a932:	eeb0 ba64 	vmov.f32	s22, s9
 801a936:	eef0 aa45 	vmov.f32	s21, s10
 801a93a:	3604      	adds	r6, #4
 801a93c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a93e:	2b00      	cmp	r3, #0
 801a940:	dc03      	bgt.n	801a94a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801a942:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a944:	2b00      	cmp	r3, #0
 801a946:	f340 8373 	ble.w	801b030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801a94a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a94c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a950:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a954:	1e48      	subs	r0, r1, #1
 801a956:	1e57      	subs	r7, r2, #1
 801a958:	9b07      	ldr	r3, [sp, #28]
 801a95a:	2b00      	cmp	r3, #0
 801a95c:	f340 8190 	ble.w	801ac80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a960:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a962:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a966:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a96a:	d406      	bmi.n	801a97a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a96c:	4584      	cmp	ip, r0
 801a96e:	da04      	bge.n	801a97a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a970:	2b00      	cmp	r3, #0
 801a972:	db02      	blt.n	801a97a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a974:	42bb      	cmp	r3, r7
 801a976:	f2c0 8184 	blt.w	801ac82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801a97a:	f11c 0c01 	adds.w	ip, ip, #1
 801a97e:	f100 8172 	bmi.w	801ac66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a982:	4561      	cmp	r1, ip
 801a984:	f2c0 816f 	blt.w	801ac66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a988:	3301      	adds	r3, #1
 801a98a:	f100 816c 	bmi.w	801ac66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a98e:	429a      	cmp	r2, r3
 801a990:	f2c0 8169 	blt.w	801ac66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a994:	9b07      	ldr	r3, [sp, #28]
 801a996:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a998:	9317      	str	r3, [sp, #92]	; 0x5c
 801a99a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a99c:	2b00      	cmp	r3, #0
 801a99e:	f340 818e 	ble.w	801acbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801a9a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a9a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a9a8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a9aa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a9ae:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a9b0:	141b      	asrs	r3, r3, #16
 801a9b2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a9b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a9ba:	f100 81d1 	bmi.w	801ad60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801a9be:	f101 38ff 	add.w	r8, r1, #4294967295
 801a9c2:	4543      	cmp	r3, r8
 801a9c4:	f280 81cc 	bge.w	801ad60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801a9c8:	f1bc 0f00 	cmp.w	ip, #0
 801a9cc:	f2c0 81c8 	blt.w	801ad60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801a9d0:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a9d4:	45c4      	cmp	ip, r8
 801a9d6:	f280 81c3 	bge.w	801ad60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801a9da:	b209      	sxth	r1, r1
 801a9dc:	fb0c 3301 	mla	r3, ip, r1, r3
 801a9e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a9e2:	eb04 0803 	add.w	r8, r4, r3
 801a9e6:	5ce3      	ldrb	r3, [r4, r3]
 801a9e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a9ec:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a9f0:	2a00      	cmp	r2, #0
 801a9f2:	f000 81aa 	beq.w	801ad4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801a9f6:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a9fa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a9fe:	940b      	str	r4, [sp, #44]	; 0x2c
 801aa00:	0e24      	lsrs	r4, r4, #24
 801aa02:	9412      	str	r4, [sp, #72]	; 0x48
 801aa04:	b178      	cbz	r0, 801aa26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aa06:	eb08 0c01 	add.w	ip, r8, r1
 801aa0a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801aa0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aa12:	9108      	str	r1, [sp, #32]
 801aa14:	0e09      	lsrs	r1, r1, #24
 801aa16:	9110      	str	r1, [sp, #64]	; 0x40
 801aa18:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801aa1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801aa20:	910c      	str	r1, [sp, #48]	; 0x30
 801aa22:	0e09      	lsrs	r1, r1, #24
 801aa24:	9113      	str	r1, [sp, #76]	; 0x4c
 801aa26:	b292      	uxth	r2, r2
 801aa28:	b280      	uxth	r0, r0
 801aa2a:	fb02 f900 	mul.w	r9, r2, r0
 801aa2e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801aa32:	0112      	lsls	r2, r2, #4
 801aa34:	eba2 0809 	sub.w	r8, r2, r9
 801aa38:	b280      	uxth	r0, r0
 801aa3a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801aa3e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801aa40:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801aa42:	fa1f f888 	uxth.w	r8, r8
 801aa46:	1a12      	subs	r2, r2, r0
 801aa48:	b292      	uxth	r2, r2
 801aa4a:	fb08 f101 	mul.w	r1, r8, r1
 801aa4e:	fb02 110e 	mla	r1, r2, lr, r1
 801aa52:	fb00 1104 	mla	r1, r0, r4, r1
 801aa56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa58:	fb09 1104 	mla	r1, r9, r4, r1
 801aa5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801aa60:	2900      	cmp	r1, #0
 801aa62:	f000 80f5 	beq.w	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801aa66:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801aa6a:	d01b      	beq.n	801aaa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801aa6c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aa70:	fb0e fa0a 	mul.w	sl, lr, sl
 801aa74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa78:	fb0e fe03 	mul.w	lr, lr, r3
 801aa7c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aa80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aa84:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aa88:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801aa8c:	4453      	add	r3, sl
 801aa8e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801aa92:	0a1b      	lsrs	r3, r3, #8
 801aa94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aa9c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aaa0:	ea43 030c 	orr.w	r3, r3, ip
 801aaa4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aaa6:	2cff      	cmp	r4, #255	; 0xff
 801aaa8:	d021      	beq.n	801aaee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801aaaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aaac:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aab0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aab2:	fb04 fb0b 	mul.w	fp, r4, fp
 801aab6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aab8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aabc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aabe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aac2:	fb04 fa0a 	mul.w	sl, r4, sl
 801aac6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aaca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aace:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aad2:	44de      	add	lr, fp
 801aad4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aad8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aadc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aae0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aae4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aae8:	ea4e 040a 	orr.w	r4, lr, sl
 801aaec:	940b      	str	r4, [sp, #44]	; 0x2c
 801aaee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801aaf0:	2cff      	cmp	r4, #255	; 0xff
 801aaf2:	d021      	beq.n	801ab38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801aaf4:	9c08      	ldr	r4, [sp, #32]
 801aaf6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aafa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801aafc:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab00:	9c08      	ldr	r4, [sp, #32]
 801ab02:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ab06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ab08:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab0c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ab18:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ab1c:	44de      	add	lr, fp
 801ab1e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab32:	ea4e 040a 	orr.w	r4, lr, sl
 801ab36:	9408      	str	r4, [sp, #32]
 801ab38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab3a:	2cff      	cmp	r4, #255	; 0xff
 801ab3c:	d021      	beq.n	801ab82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ab3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ab40:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ab44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab46:	fb04 fb0b 	mul.w	fp, r4, fp
 801ab4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ab4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ab50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ab52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ab56:	fb04 fa0a 	mul.w	sl, r4, sl
 801ab5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab5e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ab62:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ab66:	44de      	add	lr, fp
 801ab68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ab6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ab70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ab78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab7c:	ea4e 040a 	orr.w	r4, lr, sl
 801ab80:	940c      	str	r4, [sp, #48]	; 0x30
 801ab82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ab84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ab88:	9c08      	ldr	r4, [sp, #32]
 801ab8a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ab8e:	fb08 fc0c 	mul.w	ip, r8, ip
 801ab92:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ab96:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ab9a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ab9c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801aba0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aba4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aba6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801abaa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801abae:	fb08 f80e 	mul.w	r8, r8, lr
 801abb2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801abb6:	fb02 8303 	mla	r3, r2, r3, r8
 801abba:	9a08      	ldr	r2, [sp, #32]
 801abbc:	f8b7 8000 	ldrh.w	r8, [r7]
 801abc0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801abc4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801abc6:	fb00 330a 	mla	r3, r0, sl, r3
 801abca:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801abce:	fb09 3900 	mla	r9, r9, r0, r3
 801abd2:	43c9      	mvns	r1, r1
 801abd4:	ea4f 2228 	mov.w	r2, r8, asr #8
 801abd8:	fa5f fe81 	uxtb.w	lr, r1
 801abdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abe0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801abe4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801abe8:	fb02 f20e 	mul.w	r2, r2, lr
 801abec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801abf0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801abf4:	ea4c 0c09 	orr.w	ip, ip, r9
 801abf8:	1c53      	adds	r3, r2, #1
 801abfa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801abfe:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ac02:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ac06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ac0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ac0e:	4a63      	ldr	r2, [pc, #396]	; (801ad9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 801ac10:	fb00 f00e 	mul.w	r0, r0, lr
 801ac14:	b2db      	uxtb	r3, r3
 801ac16:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ac1a:	1c43      	adds	r3, r0, #1
 801ac1c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ac20:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ac24:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ac28:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ac2c:	b2c9      	uxtb	r1, r1
 801ac2e:	00db      	lsls	r3, r3, #3
 801ac30:	fb01 f10e 	mul.w	r1, r1, lr
 801ac34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac38:	4313      	orrs	r3, r2
 801ac3a:	1c4a      	adds	r2, r1, #1
 801ac3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ac40:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ac44:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ac48:	ea4c 0c03 	orr.w	ip, ip, r3
 801ac4c:	f8a7 c000 	strh.w	ip, [r7]
 801ac50:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801ac52:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ac54:	441a      	add	r2, r3
 801ac56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac58:	922d      	str	r2, [sp, #180]	; 0xb4
 801ac5a:	441d      	add	r5, r3
 801ac5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ac5e:	3b01      	subs	r3, #1
 801ac60:	3702      	adds	r7, #2
 801ac62:	9317      	str	r3, [sp, #92]	; 0x5c
 801ac64:	e699      	b.n	801a99a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ac66:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801ac68:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ac6a:	441c      	add	r4, r3
 801ac6c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac6e:	942d      	str	r4, [sp, #180]	; 0xb4
 801ac70:	441d      	add	r5, r3
 801ac72:	9b07      	ldr	r3, [sp, #28]
 801ac74:	3b01      	subs	r3, #1
 801ac76:	9307      	str	r3, [sp, #28]
 801ac78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac7a:	3302      	adds	r3, #2
 801ac7c:	930a      	str	r3, [sp, #40]	; 0x28
 801ac7e:	e66b      	b.n	801a958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ac80:	d024      	beq.n	801accc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801ac82:	9b07      	ldr	r3, [sp, #28]
 801ac84:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801ac86:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ac88:	3b01      	subs	r3, #1
 801ac8a:	fb00 4003 	mla	r0, r0, r3, r4
 801ac8e:	1400      	asrs	r0, r0, #16
 801ac90:	f53f ae80 	bmi.w	801a994 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801ac94:	3901      	subs	r1, #1
 801ac96:	4288      	cmp	r0, r1
 801ac98:	f6bf ae7c 	bge.w	801a994 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801ac9c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801ac9e:	fb01 5303 	mla	r3, r1, r3, r5
 801aca2:	141b      	asrs	r3, r3, #16
 801aca4:	f53f ae76 	bmi.w	801a994 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801aca8:	3a01      	subs	r2, #1
 801acaa:	4293      	cmp	r3, r2
 801acac:	f6bf ae72 	bge.w	801a994 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801acb0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801acb4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801acb8:	f1bb 0f00 	cmp.w	fp, #0
 801acbc:	dc70      	bgt.n	801ada0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801acbe:	9b07      	ldr	r3, [sp, #28]
 801acc0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801acc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acc6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801acca:	930a      	str	r3, [sp, #40]	; 0x28
 801accc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801acce:	2b00      	cmp	r3, #0
 801acd0:	f340 81ae 	ble.w	801b030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801acd4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801acd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801acdc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ace0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ace2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ace6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801acea:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801acee:	eef0 6a48 	vmov.f32	s13, s16
 801acf2:	ee69 7a27 	vmul.f32	s15, s18, s15
 801acf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801acfa:	ee37 8a48 	vsub.f32	s16, s14, s16
 801acfe:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801ad02:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ad06:	eef0 6a68 	vmov.f32	s13, s17
 801ad0a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ad0e:	ee18 2a10 	vmov	r2, s16
 801ad12:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ad16:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad1a:	ee18 2a90 	vmov	r2, s17
 801ad1e:	932f      	str	r3, [sp, #188]	; 0xbc
 801ad20:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad22:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad26:	9330      	str	r3, [sp, #192]	; 0xc0
 801ad28:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ad2a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ad2c:	3b01      	subs	r3, #1
 801ad2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad32:	9316      	str	r3, [sp, #88]	; 0x58
 801ad34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad36:	bf08      	it	eq
 801ad38:	4613      	moveq	r3, r2
 801ad3a:	ee16 5a90 	vmov	r5, s13
 801ad3e:	9307      	str	r3, [sp, #28]
 801ad40:	eef0 8a67 	vmov.f32	s17, s15
 801ad44:	eeb0 8a47 	vmov.f32	s16, s14
 801ad48:	e5f8      	b.n	801a93c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ad4a:	2800      	cmp	r0, #0
 801ad4c:	f43f ae6b 	beq.w	801aa26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad50:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ad54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ad58:	9108      	str	r1, [sp, #32]
 801ad5a:	0e09      	lsrs	r1, r1, #24
 801ad5c:	9110      	str	r1, [sp, #64]	; 0x40
 801ad5e:	e662      	b.n	801aa26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad60:	f113 0801 	adds.w	r8, r3, #1
 801ad64:	f53f af74 	bmi.w	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ad68:	4541      	cmp	r1, r8
 801ad6a:	f6ff af71 	blt.w	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ad6e:	f11c 0801 	adds.w	r8, ip, #1
 801ad72:	f53f af6d 	bmi.w	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ad76:	45c6      	cmp	lr, r8
 801ad78:	f6ff af6a 	blt.w	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ad7c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ad80:	b209      	sxth	r1, r1
 801ad82:	fa0f f38e 	sxth.w	r3, lr
 801ad86:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ad8a:	9301      	str	r3, [sp, #4]
 801ad8c:	9100      	str	r1, [sp, #0]
 801ad8e:	4633      	mov	r3, r6
 801ad90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad92:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ad94:	4639      	mov	r1, r7
 801ad96:	f7ff fc4d 	bl	801a634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ad9a:	e759      	b.n	801ac50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ad9c:	fffff800 	.word	0xfffff800
 801ada0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ada2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801ada4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ada8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801adaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adae:	1427      	asrs	r7, r4, #16
 801adb0:	142b      	asrs	r3, r5, #16
 801adb2:	fb01 7303 	mla	r3, r1, r3, r7
 801adb6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801adb8:	18e7      	adds	r7, r4, r3
 801adba:	5ce3      	ldrb	r3, [r4, r3]
 801adbc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801adc0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801adc4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801adc8:	2a00      	cmp	r2, #0
 801adca:	f000 8127 	beq.w	801b01c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801adce:	f897 e001 	ldrb.w	lr, [r7, #1]
 801add2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801add6:	940d      	str	r4, [sp, #52]	; 0x34
 801add8:	0e24      	lsrs	r4, r4, #24
 801adda:	9414      	str	r4, [sp, #80]	; 0x50
 801addc:	b170      	cbz	r0, 801adfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801adde:	eb07 0e01 	add.w	lr, r7, r1
 801ade2:	5c79      	ldrb	r1, [r7, r1]
 801ade4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ade8:	9109      	str	r1, [sp, #36]	; 0x24
 801adea:	0e09      	lsrs	r1, r1, #24
 801adec:	9111      	str	r1, [sp, #68]	; 0x44
 801adee:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801adf2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801adf6:	910e      	str	r1, [sp, #56]	; 0x38
 801adf8:	0e09      	lsrs	r1, r1, #24
 801adfa:	9115      	str	r1, [sp, #84]	; 0x54
 801adfc:	b292      	uxth	r2, r2
 801adfe:	b280      	uxth	r0, r0
 801ae00:	fb02 f800 	mul.w	r8, r2, r0
 801ae04:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ae08:	0112      	lsls	r2, r2, #4
 801ae0a:	eba2 0e08 	sub.w	lr, r2, r8
 801ae0e:	b280      	uxth	r0, r0
 801ae10:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ae14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae18:	fa1f fe8e 	uxth.w	lr, lr
 801ae1c:	1a09      	subs	r1, r1, r0
 801ae1e:	b289      	uxth	r1, r1
 801ae20:	fb0e f202 	mul.w	r2, lr, r2
 801ae24:	fb01 220c 	mla	r2, r1, ip, r2
 801ae28:	fb00 2204 	mla	r2, r0, r4, r2
 801ae2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae2e:	fb08 2204 	mla	r2, r8, r4, r2
 801ae32:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ae36:	2a00      	cmp	r2, #0
 801ae38:	f000 80e5 	beq.w	801b006 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ae3c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ae40:	d019      	beq.n	801ae76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 801ae42:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ae46:	fb0c fa0a 	mul.w	sl, ip, sl
 801ae4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae4e:	fb0c fc03 	mul.w	ip, ip, r3
 801ae52:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ae56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae5a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ae5e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ae62:	4453      	add	r3, sl
 801ae64:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ae68:	0a1b      	lsrs	r3, r3, #8
 801ae6a:	0a3f      	lsrs	r7, r7, #8
 801ae6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ae70:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ae74:	433b      	orrs	r3, r7
 801ae76:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ae78:	2cff      	cmp	r4, #255	; 0xff
 801ae7a:	d020      	beq.n	801aebe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 801ae7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae7e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ae82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ae84:	4367      	muls	r7, r4
 801ae86:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae88:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ae8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ae92:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae96:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ae9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae9e:	44bc      	add	ip, r7
 801aea0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aea4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aea8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aeac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aeb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aeb8:	ea4c 040a 	orr.w	r4, ip, sl
 801aebc:	940d      	str	r4, [sp, #52]	; 0x34
 801aebe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aec0:	2cff      	cmp	r4, #255	; 0xff
 801aec2:	d020      	beq.n	801af06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 801aec4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aec6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aeca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aecc:	4367      	muls	r7, r4
 801aece:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aed0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aed4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aed6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aeda:	fb04 fa0a 	mul.w	sl, r4, sl
 801aede:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aee2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aee6:	44bc      	add	ip, r7
 801aee8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aeec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aef0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aef4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aef8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aefc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af00:	ea4c 040a 	orr.w	r4, ip, sl
 801af04:	9409      	str	r4, [sp, #36]	; 0x24
 801af06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af08:	2cff      	cmp	r4, #255	; 0xff
 801af0a:	d020      	beq.n	801af4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 801af0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801af12:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af14:	4367      	muls	r7, r4
 801af16:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af18:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af1c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801af22:	fb04 fa0a 	mul.w	sl, r4, sl
 801af26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801af2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af2e:	44bc      	add	ip, r7
 801af30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801af34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801af38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af48:	ea4c 040a 	orr.w	r4, ip, sl
 801af4c:	940e      	str	r4, [sp, #56]	; 0x38
 801af4e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af50:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801af54:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801af56:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801af5a:	fb0e f707 	mul.w	r7, lr, r7
 801af5e:	fb01 770c 	mla	r7, r1, ip, r7
 801af62:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af66:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af68:	fb00 770c 	mla	r7, r0, ip, r7
 801af6c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801af70:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af72:	fb08 770c 	mla	r7, r8, ip, r7
 801af76:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801af7a:	fb0e fe0c 	mul.w	lr, lr, ip
 801af7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af82:	fb01 e303 	mla	r3, r1, r3, lr
 801af86:	9909      	ldr	r1, [sp, #36]	; 0x24
 801af88:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801af8c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801af8e:	fb00 330a 	mla	r3, r0, sl, r3
 801af92:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801af96:	fb08 3c0c 	mla	ip, r8, ip, r3
 801af9a:	f8b9 3000 	ldrh.w	r3, [r9]
 801af9e:	43d2      	mvns	r2, r2
 801afa0:	1218      	asrs	r0, r3, #8
 801afa2:	b2d2      	uxtb	r2, r2
 801afa4:	10d9      	asrs	r1, r3, #3
 801afa6:	0a3f      	lsrs	r7, r7, #8
 801afa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801afb0:	00db      	lsls	r3, r3, #3
 801afb2:	4350      	muls	r0, r2
 801afb4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801afb8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801afbc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801afc0:	b2db      	uxtb	r3, r3
 801afc2:	ea47 070c 	orr.w	r7, r7, ip
 801afc6:	4351      	muls	r1, r2
 801afc8:	4353      	muls	r3, r2
 801afca:	1c42      	adds	r2, r0, #1
 801afcc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801afd0:	0c3a      	lsrs	r2, r7, #16
 801afd2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801afd6:	4a19      	ldr	r2, [pc, #100]	; (801b03c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 801afd8:	b2c0      	uxtb	r0, r0
 801afda:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801afde:	1c4a      	adds	r2, r1, #1
 801afe0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801afe4:	0a3a      	lsrs	r2, r7, #8
 801afe6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801afea:	00c9      	lsls	r1, r1, #3
 801afec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aff0:	4301      	orrs	r1, r0
 801aff2:	1c58      	adds	r0, r3, #1
 801aff4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801aff8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801affc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b000:	4308      	orrs	r0, r1
 801b002:	f8a9 0000 	strh.w	r0, [r9]
 801b006:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b008:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b00a:	441a      	add	r2, r3
 801b00c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b00e:	922d      	str	r2, [sp, #180]	; 0xb4
 801b010:	f109 0902 	add.w	r9, r9, #2
 801b014:	441d      	add	r5, r3
 801b016:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b01a:	e64d      	b.n	801acb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b01c:	2800      	cmp	r0, #0
 801b01e:	f43f aeed 	beq.w	801adfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801b022:	5c79      	ldrb	r1, [r7, r1]
 801b024:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b028:	9109      	str	r1, [sp, #36]	; 0x24
 801b02a:	0e09      	lsrs	r1, r1, #24
 801b02c:	9111      	str	r1, [sp, #68]	; 0x44
 801b02e:	e6e5      	b.n	801adfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801b030:	b01b      	add	sp, #108	; 0x6c
 801b032:	ecbd 8b08 	vpop	{d8-d11}
 801b036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b03a:	bf00      	nop
 801b03c:	fffff800 	.word	0xfffff800

0801b040 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801b040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b044:	b085      	sub	sp, #20
 801b046:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801b04a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b04e:	9103      	str	r1, [sp, #12]
 801b050:	fb05 7106 	mla	r1, r5, r6, r7
 801b054:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801b058:	2d00      	cmp	r5, #0
 801b05a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801b05e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801b062:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b066:	9401      	str	r4, [sp, #4]
 801b068:	eb03 0901 	add.w	r9, r3, r1
 801b06c:	f2c0 80c0 	blt.w	801b1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801b070:	45a8      	cmp	r8, r5
 801b072:	f340 80bd 	ble.w	801b1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801b076:	2f00      	cmp	r7, #0
 801b078:	f2c0 80b6 	blt.w	801b1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801b07c:	42be      	cmp	r6, r7
 801b07e:	f340 80b3 	ble.w	801b1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801b082:	f813 c001 	ldrb.w	ip, [r3, r1]
 801b086:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801b08a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b08e:	d019      	beq.n	801b0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801b090:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801b094:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b098:	435a      	muls	r2, r3
 801b09a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801b09e:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801b0a2:	fb0c f403 	mul.w	r4, ip, r3
 801b0a6:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801b0aa:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801b0ae:	441a      	add	r2, r3
 801b0b0:	f104 0320 	add.w	r3, r4, #32
 801b0b4:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801b0b8:	0a1b      	lsrs	r3, r3, #8
 801b0ba:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801b0be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b0c2:	4319      	orrs	r1, r3
 801b0c4:	b289      	uxth	r1, r1
 801b0c6:	1c7b      	adds	r3, r7, #1
 801b0c8:	f100 8097 	bmi.w	801b1fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801b0cc:	429e      	cmp	r6, r3
 801b0ce:	f340 8094 	ble.w	801b1fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801b0d2:	2800      	cmp	r0, #0
 801b0d4:	f000 8094 	beq.w	801b200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801b0d8:	f899 4001 	ldrb.w	r4, [r9, #1]
 801b0dc:	9b01      	ldr	r3, [sp, #4]
 801b0de:	2cff      	cmp	r4, #255	; 0xff
 801b0e0:	885b      	ldrh	r3, [r3, #2]
 801b0e2:	d01b      	beq.n	801b11c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801b0e4:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801b0e8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801b0ec:	fb0a f202 	mul.w	r2, sl, r2
 801b0f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b0f4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b0f8:	fb04 fa03 	mul.w	sl, r4, r3
 801b0fc:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801b100:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801b104:	441a      	add	r2, r3
 801b106:	f10a 0320 	add.w	r3, sl, #32
 801b10a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801b10e:	0a1b      	lsrs	r3, r3, #8
 801b110:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801b114:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b118:	ea4b 0303 	orr.w	r3, fp, r3
 801b11c:	b29b      	uxth	r3, r3
 801b11e:	3501      	adds	r5, #1
 801b120:	d474      	bmi.n	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801b122:	45a8      	cmp	r8, r5
 801b124:	dd72      	ble.n	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801b126:	f1be 0f00 	cmp.w	lr, #0
 801b12a:	f000 8120 	beq.w	801b36e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801b12e:	2f00      	cmp	r7, #0
 801b130:	db69      	blt.n	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801b132:	42be      	cmp	r6, r7
 801b134:	dd67      	ble.n	801b206 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801b136:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b13a:	9a01      	ldr	r2, [sp, #4]
 801b13c:	2dff      	cmp	r5, #255	; 0xff
 801b13e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801b142:	d01c      	beq.n	801b17e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801b144:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801b148:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b14c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b150:	fb05 fa0b 	mul.w	sl, r5, fp
 801b154:	fb08 f802 	mul.w	r8, r8, r2
 801b158:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b15c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801b160:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b164:	4490      	add	r8, r2
 801b166:	f10a 0220 	add.w	r2, sl, #32
 801b16a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801b16e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b172:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801b176:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b17a:	ea4b 0b0a 	orr.w	fp, fp, sl
 801b17e:	fa1f fb8b 	uxth.w	fp, fp
 801b182:	3701      	adds	r7, #1
 801b184:	d447      	bmi.n	801b216 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801b186:	42be      	cmp	r6, r7
 801b188:	dd45      	ble.n	801b216 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801b18a:	2800      	cmp	r0, #0
 801b18c:	d046      	beq.n	801b21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801b18e:	3601      	adds	r6, #1
 801b190:	9a01      	ldr	r2, [sp, #4]
 801b192:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b196:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801b19a:	2fff      	cmp	r7, #255	; 0xff
 801b19c:	d01a      	beq.n	801b1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801b19e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801b1a2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801b1a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1aa:	fb07 f902 	mul.w	r9, r7, r2
 801b1ae:	fb08 f806 	mul.w	r8, r8, r6
 801b1b2:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b1b6:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801b1ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b1be:	44b0      	add	r8, r6
 801b1c0:	f109 0620 	add.w	r6, r9, #32
 801b1c4:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801b1c8:	0a36      	lsrs	r6, r6, #8
 801b1ca:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b1ce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b1d2:	4332      	orrs	r2, r6
 801b1d4:	b292      	uxth	r2, r2
 801b1d6:	280f      	cmp	r0, #15
 801b1d8:	d922      	bls.n	801b220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801b1da:	4b69      	ldr	r3, [pc, #420]	; (801b380 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801b1dc:	4a69      	ldr	r2, [pc, #420]	; (801b384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801b1de:	486a      	ldr	r0, [pc, #424]	; (801b388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801b1e0:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801b1e4:	f005 fe2c 	bl	8020e40 <__assert_func>
 801b1e8:	f04f 0c00 	mov.w	ip, #0
 801b1ec:	4661      	mov	r1, ip
 801b1ee:	e76a      	b.n	801b0c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801b1f0:	2400      	movs	r4, #0
 801b1f2:	46a4      	mov	ip, r4
 801b1f4:	4623      	mov	r3, r4
 801b1f6:	4621      	mov	r1, r4
 801b1f8:	e791      	b.n	801b11e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b1fa:	2400      	movs	r4, #0
 801b1fc:	4623      	mov	r3, r4
 801b1fe:	e78e      	b.n	801b11e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b200:	4604      	mov	r4, r0
 801b202:	4603      	mov	r3, r0
 801b204:	e78b      	b.n	801b11e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801b206:	2500      	movs	r5, #0
 801b208:	46ab      	mov	fp, r5
 801b20a:	e7ba      	b.n	801b182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801b20c:	2700      	movs	r7, #0
 801b20e:	463d      	mov	r5, r7
 801b210:	463a      	mov	r2, r7
 801b212:	46bb      	mov	fp, r7
 801b214:	e7df      	b.n	801b1d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801b216:	2700      	movs	r7, #0
 801b218:	463a      	mov	r2, r7
 801b21a:	e7dc      	b.n	801b1d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801b21c:	4607      	mov	r7, r0
 801b21e:	4602      	mov	r2, r0
 801b220:	f1be 0f0f 	cmp.w	lr, #15
 801b224:	d8d9      	bhi.n	801b1da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801b226:	b286      	uxth	r6, r0
 801b228:	fa1f f98e 	uxth.w	r9, lr
 801b22c:	fb06 f809 	mul.w	r8, r6, r9
 801b230:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b234:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b238:	0136      	lsls	r6, r6, #4
 801b23a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b23e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b242:	9601      	str	r6, [sp, #4]
 801b244:	ea4a 0101 	orr.w	r1, sl, r1
 801b248:	fa1f f689 	uxth.w	r6, r9
 801b24c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801b250:	fb10 f90e 	smulbb	r9, r0, lr
 801b254:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801b258:	9602      	str	r6, [sp, #8]
 801b25a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b25e:	460e      	mov	r6, r1
 801b260:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b264:	f1ce 0110 	rsb	r1, lr, #16
 801b268:	1a09      	subs	r1, r1, r0
 801b26a:	ea4a 0303 	orr.w	r3, sl, r3
 801b26e:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801b272:	4343      	muls	r3, r0
 801b274:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801b278:	9801      	ldr	r0, [sp, #4]
 801b27a:	fb01 3106 	mla	r1, r1, r6, r3
 801b27e:	9e02      	ldr	r6, [sp, #8]
 801b280:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801b284:	1b80      	subs	r0, r0, r6
 801b286:	9e01      	ldr	r6, [sp, #4]
 801b288:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b28c:	eba6 0608 	sub.w	r6, r6, r8
 801b290:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b294:	b2b6      	uxth	r6, r6
 801b296:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b29a:	ea4a 0202 	orr.w	r2, sl, r2
 801b29e:	b280      	uxth	r0, r0
 801b2a0:	4374      	muls	r4, r6
 801b2a2:	fb09 1302 	mla	r3, r9, r2, r1
 801b2a6:	fb0c 4400 	mla	r4, ip, r0, r4
 801b2aa:	9a03      	ldr	r2, [sp, #12]
 801b2ac:	9802      	ldr	r0, [sp, #8]
 801b2ae:	8811      	ldrh	r1, [r2, #0]
 801b2b0:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801b2b4:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801b2b8:	fb00 4505 	mla	r5, r0, r5, r4
 801b2bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b2c0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b2c4:	fb08 5707 	mla	r7, r8, r7, r5
 801b2c8:	ea4a 0b0b 	orr.w	fp, sl, fp
 801b2cc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b2d0:	b292      	uxth	r2, r2
 801b2d2:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801b2d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b2da:	4357      	muls	r7, r2
 801b2dc:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801b2e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b2e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b2e8:	f107 0801 	add.w	r8, r7, #1
 801b2ec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b2f0:	ea43 0e0e 	orr.w	lr, r3, lr
 801b2f4:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801b2f8:	fa1f f38e 	uxth.w	r3, lr
 801b2fc:	1208      	asrs	r0, r1, #8
 801b2fe:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801b302:	b2ff      	uxtb	r7, r7
 801b304:	121c      	asrs	r4, r3, #8
 801b306:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b30a:	fb10 f007 	smulbb	r0, r0, r7
 801b30e:	10cd      	asrs	r5, r1, #3
 801b310:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b314:	fb04 0402 	mla	r4, r4, r2, r0
 801b318:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b31c:	10d8      	asrs	r0, r3, #3
 801b31e:	fb15 f507 	smulbb	r5, r5, r7
 801b322:	00db      	lsls	r3, r3, #3
 801b324:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b328:	fb00 5002 	mla	r0, r0, r2, r5
 801b32c:	b2dd      	uxtb	r5, r3
 801b32e:	00cb      	lsls	r3, r1, #3
 801b330:	b2db      	uxtb	r3, r3
 801b332:	fb13 f307 	smulbb	r3, r3, r7
 801b336:	fb05 3202 	mla	r2, r5, r2, r3
 801b33a:	b2a4      	uxth	r4, r4
 801b33c:	b292      	uxth	r2, r2
 801b33e:	1c63      	adds	r3, r4, #1
 801b340:	b280      	uxth	r0, r0
 801b342:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b346:	1c53      	adds	r3, r2, #1
 801b348:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b34c:	1c42      	adds	r2, r0, #1
 801b34e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b352:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b356:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b35a:	0940      	lsrs	r0, r0, #5
 801b35c:	4323      	orrs	r3, r4
 801b35e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b362:	9a03      	ldr	r2, [sp, #12]
 801b364:	4303      	orrs	r3, r0
 801b366:	8013      	strh	r3, [r2, #0]
 801b368:	b005      	add	sp, #20
 801b36a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b36e:	280f      	cmp	r0, #15
 801b370:	f63f af33 	bhi.w	801b1da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801b374:	4677      	mov	r7, lr
 801b376:	4675      	mov	r5, lr
 801b378:	4672      	mov	r2, lr
 801b37a:	46f3      	mov	fp, lr
 801b37c:	e753      	b.n	801b226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801b37e:	bf00      	nop
 801b380:	0802556e 	.word	0x0802556e
 801b384:	08025b3a 	.word	0x08025b3a
 801b388:	080255f2 	.word	0x080255f2

0801b38c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b38c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b390:	ed2d 8b08 	vpush	{d8-d11}
 801b394:	b097      	sub	sp, #92	; 0x5c
 801b396:	eeb0 aa40 	vmov.f32	s20, s0
 801b39a:	9214      	str	r2, [sp, #80]	; 0x50
 801b39c:	9308      	str	r3, [sp, #32]
 801b39e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b3a0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b3a4:	9312      	str	r3, [sp, #72]	; 0x48
 801b3a6:	9111      	str	r1, [sp, #68]	; 0x44
 801b3a8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b3ac:	9015      	str	r0, [sp, #84]	; 0x54
 801b3ae:	6850      	ldr	r0, [r2, #4]
 801b3b0:	6812      	ldr	r2, [r2, #0]
 801b3b2:	fb00 1303 	mla	r3, r0, r3, r1
 801b3b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b3ba:	9309      	str	r3, [sp, #36]	; 0x24
 801b3bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b3be:	681b      	ldr	r3, [r3, #0]
 801b3c0:	930b      	str	r3, [sp, #44]	; 0x2c
 801b3c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b3c4:	685b      	ldr	r3, [r3, #4]
 801b3c6:	930c      	str	r3, [sp, #48]	; 0x30
 801b3c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801b3cc:	930a      	str	r3, [sp, #40]	; 0x28
 801b3ce:	eef0 9a60 	vmov.f32	s19, s1
 801b3d2:	eeb0 9a41 	vmov.f32	s18, s2
 801b3d6:	eeb0 8a62 	vmov.f32	s16, s5
 801b3da:	eef0 8a43 	vmov.f32	s17, s6
 801b3de:	eef0 ba44 	vmov.f32	s23, s8
 801b3e2:	eeb0 ba64 	vmov.f32	s22, s9
 801b3e6:	eef0 aa45 	vmov.f32	s21, s10
 801b3ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b3ec:	2b00      	cmp	r3, #0
 801b3ee:	dc03      	bgt.n	801b3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b3f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801b3f2:	2b00      	cmp	r3, #0
 801b3f4:	f340 83cb 	ble.w	801bb8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801b3f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b3fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b402:	1e48      	subs	r0, r1, #1
 801b404:	1e55      	subs	r5, r2, #1
 801b406:	9b08      	ldr	r3, [sp, #32]
 801b408:	2b00      	cmp	r3, #0
 801b40a:	f340 81a3 	ble.w	801b754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b40e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801b410:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b412:	1436      	asrs	r6, r6, #16
 801b414:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b418:	d406      	bmi.n	801b428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b41a:	4286      	cmp	r6, r0
 801b41c:	da04      	bge.n	801b428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b41e:	2b00      	cmp	r3, #0
 801b420:	db02      	blt.n	801b428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b422:	42ab      	cmp	r3, r5
 801b424:	f2c0 8197 	blt.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801b428:	3601      	adds	r6, #1
 801b42a:	f100 8184 	bmi.w	801b736 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b42e:	42b1      	cmp	r1, r6
 801b430:	f2c0 8181 	blt.w	801b736 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b434:	3301      	adds	r3, #1
 801b436:	f100 817e 	bmi.w	801b736 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b43a:	429a      	cmp	r2, r3
 801b43c:	f2c0 817b 	blt.w	801b736 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b440:	9b08      	ldr	r3, [sp, #32]
 801b442:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801b444:	9313      	str	r3, [sp, #76]	; 0x4c
 801b446:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b44a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b44c:	2b00      	cmp	r3, #0
 801b44e:	f340 81a4 	ble.w	801b79a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801b452:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b454:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801b456:	1418      	asrs	r0, r3, #16
 801b458:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b45a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b45e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b460:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b464:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b466:	142d      	asrs	r5, r5, #16
 801b468:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b46c:	f100 81f8 	bmi.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b470:	f102 3eff 	add.w	lr, r2, #4294967295
 801b474:	4575      	cmp	r5, lr
 801b476:	f280 81f3 	bge.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b47a:	2800      	cmp	r0, #0
 801b47c:	f2c0 81f0 	blt.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b480:	f103 3eff 	add.w	lr, r3, #4294967295
 801b484:	4570      	cmp	r0, lr
 801b486:	f280 81eb 	bge.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b48a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b48c:	b212      	sxth	r2, r2
 801b48e:	fb00 5002 	mla	r0, r0, r2, r5
 801b492:	fa1f fe81 	uxth.w	lr, r1
 801b496:	eb03 0a00 	add.w	sl, r3, r0
 801b49a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b49e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b4a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b4a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801b4aa:	b29b      	uxth	r3, r3
 801b4ac:	f1bc 0f00 	cmp.w	ip, #0
 801b4b0:	f000 81b9 	beq.w	801b826 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801b4b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b4b8:	940d      	str	r4, [sp, #52]	; 0x34
 801b4ba:	eb0a 0b02 	add.w	fp, sl, r2
 801b4be:	fa1f fa8c 	uxth.w	sl, ip
 801b4c2:	fb0a fe0e 	mul.w	lr, sl, lr
 801b4c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b4ca:	fa1f fa8a 	uxth.w	sl, sl
 801b4ce:	eba5 050e 	sub.w	r5, r5, lr
 801b4d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b4d6:	940e      	str	r4, [sp, #56]	; 0x38
 801b4d8:	eba3 030a 	sub.w	r3, r3, sl
 801b4dc:	b2ad      	uxth	r5, r5
 801b4de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b4e0:	b29b      	uxth	r3, r3
 801b4e2:	fb08 f505 	mul.w	r5, r8, r5
 801b4e6:	fb09 5303 	mla	r3, r9, r3, r5
 801b4ea:	fb0a 3304 	mla	r3, sl, r4, r3
 801b4ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b4f0:	fb0e 3304 	mla	r3, lr, r4, r3
 801b4f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b4f8:	2b00      	cmp	r3, #0
 801b4fa:	f000 810f 	beq.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b4fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b500:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b504:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b508:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b50c:	f000 8190 	beq.w	801b830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 801b510:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b514:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b518:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b51c:	fb09 f000 	mul.w	r0, r9, r0
 801b520:	fb0a fe0e 	mul.w	lr, sl, lr
 801b524:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b528:	f100 0b20 	add.w	fp, r0, #32
 801b52c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b530:	44ce      	add	lr, r9
 801b532:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b536:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b53a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b53e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b542:	ea4e 0909 	orr.w	r9, lr, r9
 801b546:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b54a:	8868      	ldrh	r0, [r5, #2]
 801b54c:	d019      	beq.n	801b582 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b54e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b552:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b556:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b55a:	fb08 f800 	mul.w	r8, r8, r0
 801b55e:	fb0a fe0e 	mul.w	lr, sl, lr
 801b562:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b566:	f108 0b20 	add.w	fp, r8, #32
 801b56a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b56e:	4486      	add	lr, r0
 801b570:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b574:	0a00      	lsrs	r0, r0, #8
 801b576:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b57a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b57e:	ea4e 0000 	orr.w	r0, lr, r0
 801b582:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b586:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b58a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b58e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b592:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b596:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b59a:	ea4e 0909 	orr.w	r9, lr, r9
 801b59e:	ea4a 0000 	orr.w	r0, sl, r0
 801b5a2:	f1bc 0f00 	cmp.w	ip, #0
 801b5a6:	f000 8145 	beq.w	801b834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801b5aa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801b5ae:	3a01      	subs	r2, #1
 801b5b0:	0052      	lsls	r2, r2, #1
 801b5b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b5b4:	3202      	adds	r2, #2
 801b5b6:	2cff      	cmp	r4, #255	; 0xff
 801b5b8:	eb05 0e02 	add.w	lr, r5, r2
 801b5bc:	5aaa      	ldrh	r2, [r5, r2]
 801b5be:	d018      	beq.n	801b5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b5c0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801b5c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5c8:	fb04 fa02 	mul.w	sl, r4, r2
 801b5cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b5d0:	fb08 f805 	mul.w	r8, r8, r5
 801b5d4:	f10a 0520 	add.w	r5, sl, #32
 801b5d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b5dc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b5e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b5e4:	4442      	add	r2, r8
 801b5e6:	0a2d      	lsrs	r5, r5, #8
 801b5e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b5ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b5f0:	432a      	orrs	r2, r5
 801b5f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b5f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b5f8:	2cff      	cmp	r4, #255	; 0xff
 801b5fa:	d01a      	beq.n	801b632 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b5fc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801b600:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b604:	fb04 fa05 	mul.w	sl, r4, r5
 801b608:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b60c:	fb08 f80e 	mul.w	r8, r8, lr
 801b610:	f10a 0e20 	add.w	lr, sl, #32
 801b614:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b618:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b61c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b620:	4445      	add	r5, r8
 801b622:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b626:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b62a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801b62e:	ea45 050e 	orr.w	r5, r5, lr
 801b632:	fb1c fe01 	smulbb	lr, ip, r1
 801b636:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b63a:	f1cc 0810 	rsb	r8, ip, #16
 801b63e:	eba8 0801 	sub.w	r8, r8, r1
 801b642:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b646:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b64a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b64e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b652:	4341      	muls	r1, r0
 801b654:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b658:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b65c:	ea4a 0202 	orr.w	r2, sl, r2
 801b660:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b664:	fb09 1108 	mla	r1, r9, r8, r1
 801b668:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b66c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b670:	fb0c 1102 	mla	r1, ip, r2, r1
 801b674:	ea4b 0505 	orr.w	r5, fp, r5
 801b678:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b67c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b680:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b684:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b688:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b68c:	ea42 0e0e 	orr.w	lr, r2, lr
 801b690:	fa1f f28e 	uxth.w	r2, lr
 801b694:	2bff      	cmp	r3, #255	; 0xff
 801b696:	d103      	bne.n	801b6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b698:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b69a:	29ff      	cmp	r1, #255	; 0xff
 801b69c:	f000 80de 	beq.w	801b85c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801b6a0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b6a2:	8838      	ldrh	r0, [r7, #0]
 801b6a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b6a6:	434b      	muls	r3, r1
 801b6a8:	f103 0c01 	add.w	ip, r3, #1
 801b6ac:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b6b0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b6b4:	fa5f fc83 	uxtb.w	ip, r3
 801b6b8:	1203      	asrs	r3, r0, #8
 801b6ba:	1215      	asrs	r5, r2, #8
 801b6bc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b6c0:	fb13 f30c 	smulbb	r3, r3, ip
 801b6c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b6c8:	fb05 3501 	mla	r5, r5, r1, r3
 801b6cc:	10c3      	asrs	r3, r0, #3
 801b6ce:	10d1      	asrs	r1, r2, #3
 801b6d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b6d4:	fb13 f30c 	smulbb	r3, r3, ip
 801b6d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b6dc:	fb01 3104 	mla	r1, r1, r4, r3
 801b6e0:	00c3      	lsls	r3, r0, #3
 801b6e2:	00d2      	lsls	r2, r2, #3
 801b6e4:	b2db      	uxtb	r3, r3
 801b6e6:	b2d2      	uxtb	r2, r2
 801b6e8:	fb13 f30c 	smulbb	r3, r3, ip
 801b6ec:	b2ad      	uxth	r5, r5
 801b6ee:	fb02 3304 	mla	r3, r2, r4, r3
 801b6f2:	b29a      	uxth	r2, r3
 801b6f4:	1c6b      	adds	r3, r5, #1
 801b6f6:	b289      	uxth	r1, r1
 801b6f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b6fc:	1c53      	adds	r3, r2, #1
 801b6fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b702:	1c4a      	adds	r2, r1, #1
 801b704:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b708:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b70c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b710:	0949      	lsrs	r1, r1, #5
 801b712:	432b      	orrs	r3, r5
 801b714:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b718:	430b      	orrs	r3, r1
 801b71a:	803b      	strh	r3, [r7, #0]
 801b71c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b71e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b720:	4413      	add	r3, r2
 801b722:	9329      	str	r3, [sp, #164]	; 0xa4
 801b724:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b726:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b728:	441a      	add	r2, r3
 801b72a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b72c:	922a      	str	r2, [sp, #168]	; 0xa8
 801b72e:	3b01      	subs	r3, #1
 801b730:	3702      	adds	r7, #2
 801b732:	9313      	str	r3, [sp, #76]	; 0x4c
 801b734:	e689      	b.n	801b44a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801b736:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b738:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801b73a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 801b73c:	4433      	add	r3, r6
 801b73e:	9329      	str	r3, [sp, #164]	; 0xa4
 801b740:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b742:	441c      	add	r4, r3
 801b744:	9b08      	ldr	r3, [sp, #32]
 801b746:	942a      	str	r4, [sp, #168]	; 0xa8
 801b748:	3b01      	subs	r3, #1
 801b74a:	9308      	str	r3, [sp, #32]
 801b74c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b74e:	3302      	adds	r3, #2
 801b750:	9309      	str	r3, [sp, #36]	; 0x24
 801b752:	e658      	b.n	801b406 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b754:	d028      	beq.n	801b7a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801b756:	9b08      	ldr	r3, [sp, #32]
 801b758:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b75a:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801b75c:	3b01      	subs	r3, #1
 801b75e:	fb00 5003 	mla	r0, r0, r3, r5
 801b762:	1400      	asrs	r0, r0, #16
 801b764:	f53f ae6c 	bmi.w	801b440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b768:	3901      	subs	r1, #1
 801b76a:	4288      	cmp	r0, r1
 801b76c:	f6bf ae68 	bge.w	801b440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b770:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b772:	982a      	ldr	r0, [sp, #168]	; 0xa8
 801b774:	fb01 0303 	mla	r3, r1, r3, r0
 801b778:	141b      	asrs	r3, r3, #16
 801b77a:	f53f ae61 	bmi.w	801b440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b77e:	3a01      	subs	r2, #1
 801b780:	4293      	cmp	r3, r2
 801b782:	f6bf ae5d 	bge.w	801b440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b786:	9b08      	ldr	r3, [sp, #32]
 801b788:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b78c:	9313      	str	r3, [sp, #76]	; 0x4c
 801b78e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b792:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b794:	2b00      	cmp	r3, #0
 801b796:	f300 8082 	bgt.w	801b89e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801b79a:	9b08      	ldr	r3, [sp, #32]
 801b79c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b7a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b7a6:	9309      	str	r3, [sp, #36]	; 0x24
 801b7a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b7aa:	2b00      	cmp	r3, #0
 801b7ac:	f340 81ef 	ble.w	801bb8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801b7b0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b7b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b7b8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b7bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b7be:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b7c2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b7c6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b7ca:	eef0 6a48 	vmov.f32	s13, s16
 801b7ce:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b7d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7d6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b7da:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b7de:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b7e2:	eef0 6a68 	vmov.f32	s13, s17
 801b7e6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b7ea:	ee18 2a10 	vmov	r2, s16
 801b7ee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b7f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7f6:	ee18 2a90 	vmov	r2, s17
 801b7fa:	932b      	str	r3, [sp, #172]	; 0xac
 801b7fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b7fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801b802:	932c      	str	r3, [sp, #176]	; 0xb0
 801b804:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b806:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b808:	3b01      	subs	r3, #1
 801b80a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b80e:	9311      	str	r3, [sp, #68]	; 0x44
 801b810:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b812:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801b816:	bf08      	it	eq
 801b818:	4613      	moveq	r3, r2
 801b81a:	9308      	str	r3, [sp, #32]
 801b81c:	eef0 8a67 	vmov.f32	s17, s15
 801b820:	eeb0 8a47 	vmov.f32	s16, s14
 801b824:	e5e1      	b.n	801b3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b826:	fb08 f505 	mul.w	r5, r8, r5
 801b82a:	fb09 5303 	mla	r3, r9, r3, r5
 801b82e:	e661      	b.n	801b4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 801b830:	4681      	mov	r9, r0
 801b832:	e688      	b.n	801b546 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b834:	f1c1 0210 	rsb	r2, r1, #16
 801b838:	4341      	muls	r1, r0
 801b83a:	fb09 1902 	mla	r9, r9, r2, r1
 801b83e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b842:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b846:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b84a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b84e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b852:	ea42 0909 	orr.w	r9, r2, r9
 801b856:	fa1f f289 	uxth.w	r2, r9
 801b85a:	e71b      	b.n	801b694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 801b85c:	803a      	strh	r2, [r7, #0]
 801b85e:	e75d      	b.n	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b860:	f115 0e01 	adds.w	lr, r5, #1
 801b864:	f53f af5a 	bmi.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b868:	4572      	cmp	r2, lr
 801b86a:	f6ff af57 	blt.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b86e:	f110 0e01 	adds.w	lr, r0, #1
 801b872:	f53f af53 	bmi.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b876:	4573      	cmp	r3, lr
 801b878:	f6ff af50 	blt.w	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b87c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b87e:	9502      	str	r5, [sp, #8]
 801b880:	b21b      	sxth	r3, r3
 801b882:	b212      	sxth	r2, r2
 801b884:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b888:	9301      	str	r3, [sp, #4]
 801b88a:	9200      	str	r2, [sp, #0]
 801b88c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b890:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801b894:	4639      	mov	r1, r7
 801b896:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b898:	f7ff fbd2 	bl	801b040 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b89c:	e73e      	b.n	801b71c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b89e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b8a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b8a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b8a6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b8aa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b8ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b8b2:	141f      	asrs	r7, r3, #16
 801b8b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b8b6:	141b      	asrs	r3, r3, #16
 801b8b8:	fb01 3707 	mla	r7, r1, r7, r3
 801b8bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b8be:	fa1f fc82 	uxth.w	ip, r2
 801b8c2:	eb03 0a07 	add.w	sl, r3, r7
 801b8c6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b8ca:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b8ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b8d2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b8d6:	b29b      	uxth	r3, r3
 801b8d8:	2d00      	cmp	r5, #0
 801b8da:	f000 813d 	beq.w	801bb58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801b8de:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b8e2:	940f      	str	r4, [sp, #60]	; 0x3c
 801b8e4:	eb0a 0b01 	add.w	fp, sl, r1
 801b8e8:	fa1f fa85 	uxth.w	sl, r5
 801b8ec:	fb0a fc0c 	mul.w	ip, sl, ip
 801b8f0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b8f4:	fa1f fa8a 	uxth.w	sl, sl
 801b8f8:	eba0 000c 	sub.w	r0, r0, ip
 801b8fc:	eba3 030a 	sub.w	r3, r3, sl
 801b900:	b280      	uxth	r0, r0
 801b902:	fb08 f000 	mul.w	r0, r8, r0
 801b906:	b29b      	uxth	r3, r3
 801b908:	fb09 0303 	mla	r3, r9, r3, r0
 801b90c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b90e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b912:	9410      	str	r4, [sp, #64]	; 0x40
 801b914:	fb0a 3300 	mla	r3, sl, r0, r3
 801b918:	fb0c 3304 	mla	r3, ip, r4, r3
 801b91c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b920:	2b00      	cmp	r3, #0
 801b922:	f000 810b 	beq.w	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801b926:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b928:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b92a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b92e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b932:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b936:	f000 8114 	beq.w	801bb62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 801b93a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b93e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b942:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b946:	fb09 f707 	mul.w	r7, r9, r7
 801b94a:	fb0a fc0c 	mul.w	ip, sl, ip
 801b94e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b952:	f107 0b20 	add.w	fp, r7, #32
 801b956:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b95a:	44cc      	add	ip, r9
 801b95c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b960:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b964:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b968:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b96c:	ea4c 0909 	orr.w	r9, ip, r9
 801b970:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b974:	8847      	ldrh	r7, [r0, #2]
 801b976:	d019      	beq.n	801b9ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 801b978:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b97c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b980:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b984:	fb08 f807 	mul.w	r8, r8, r7
 801b988:	fb0a fc0c 	mul.w	ip, sl, ip
 801b98c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b990:	f108 0b20 	add.w	fp, r8, #32
 801b994:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b998:	44bc      	add	ip, r7
 801b99a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b99e:	0a3f      	lsrs	r7, r7, #8
 801b9a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b9a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b9a8:	ea4c 0707 	orr.w	r7, ip, r7
 801b9ac:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b9b0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b9b4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b9b8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b9bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b9c0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b9c4:	ea4c 0909 	orr.w	r9, ip, r9
 801b9c8:	ea4a 0707 	orr.w	r7, sl, r7
 801b9cc:	2d00      	cmp	r5, #0
 801b9ce:	f000 80ca 	beq.w	801bb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801b9d2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b9d6:	3901      	subs	r1, #1
 801b9d8:	0049      	lsls	r1, r1, #1
 801b9da:	3102      	adds	r1, #2
 801b9dc:	eb00 0c01 	add.w	ip, r0, r1
 801b9e0:	5a41      	ldrh	r1, [r0, r1]
 801b9e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b9e4:	28ff      	cmp	r0, #255	; 0xff
 801b9e6:	d019      	beq.n	801ba1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 801b9e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b9ea:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801b9ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b9f2:	fb04 fa01 	mul.w	sl, r4, r1
 801b9f6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b9fa:	fb08 f800 	mul.w	r8, r8, r0
 801b9fe:	f10a 0020 	add.w	r0, sl, #32
 801ba02:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ba06:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ba0a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ba0e:	4441      	add	r1, r8
 801ba10:	0a00      	lsrs	r0, r0, #8
 801ba12:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ba16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba1a:	4301      	orrs	r1, r0
 801ba1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ba1e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ba22:	2cff      	cmp	r4, #255	; 0xff
 801ba24:	d01a      	beq.n	801ba5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801ba26:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801ba2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba2e:	fb04 fa00 	mul.w	sl, r4, r0
 801ba32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ba36:	fb08 f80c 	mul.w	r8, r8, ip
 801ba3a:	f10a 0c20 	add.w	ip, sl, #32
 801ba3e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ba42:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ba46:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ba4a:	4440      	add	r0, r8
 801ba4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba50:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ba54:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ba58:	ea40 000c 	orr.w	r0, r0, ip
 801ba5c:	fb15 fc02 	smulbb	ip, r5, r2
 801ba60:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ba64:	f1c5 0810 	rsb	r8, r5, #16
 801ba68:	eba8 0802 	sub.w	r8, r8, r2
 801ba6c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ba70:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ba74:	437a      	muls	r2, r7
 801ba76:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ba7a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ba7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ba82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ba86:	fb09 2208 	mla	r2, r9, r8, r2
 801ba8a:	ea4a 0101 	orr.w	r1, sl, r1
 801ba8e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ba92:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ba96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ba9a:	fb05 2201 	mla	r2, r5, r1, r2
 801ba9e:	ea4b 0000 	orr.w	r0, fp, r0
 801baa2:	fb0c 2200 	mla	r2, ip, r0, r2
 801baa6:	0d57      	lsrs	r7, r2, #21
 801baa8:	0952      	lsrs	r2, r2, #5
 801baaa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801baae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bab2:	433a      	orrs	r2, r7
 801bab4:	2bff      	cmp	r3, #255	; 0xff
 801bab6:	b292      	uxth	r2, r2
 801bab8:	d102      	bne.n	801bac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801baba:	9912      	ldr	r1, [sp, #72]	; 0x48
 801babc:	29ff      	cmp	r1, #255	; 0xff
 801babe:	d063      	beq.n	801bb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801bac0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801bac2:	f8be 1000 	ldrh.w	r1, [lr]
 801bac6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bac8:	4343      	muls	r3, r0
 801baca:	1c58      	adds	r0, r3, #1
 801bacc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801bad0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801bad4:	1208      	asrs	r0, r1, #8
 801bad6:	b2db      	uxtb	r3, r3
 801bad8:	1215      	asrs	r5, r2, #8
 801bada:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bade:	fb10 f003 	smulbb	r0, r0, r3
 801bae2:	10cf      	asrs	r7, r1, #3
 801bae4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bae8:	00c9      	lsls	r1, r1, #3
 801baea:	fb05 0504 	mla	r5, r5, r4, r0
 801baee:	b2c9      	uxtb	r1, r1
 801baf0:	10d0      	asrs	r0, r2, #3
 801baf2:	00d2      	lsls	r2, r2, #3
 801baf4:	fb11 f103 	smulbb	r1, r1, r3
 801baf8:	b2d2      	uxtb	r2, r2
 801bafa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bafe:	fb02 1204 	mla	r2, r2, r4, r1
 801bb02:	fb17 f703 	smulbb	r7, r7, r3
 801bb06:	b2ad      	uxth	r5, r5
 801bb08:	b292      	uxth	r2, r2
 801bb0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bb0e:	fb00 7004 	mla	r0, r0, r4, r7
 801bb12:	1c6b      	adds	r3, r5, #1
 801bb14:	1c57      	adds	r7, r2, #1
 801bb16:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bb1a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bb1e:	b280      	uxth	r0, r0
 801bb20:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bb24:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bb28:	433d      	orrs	r5, r7
 801bb2a:	1c47      	adds	r7, r0, #1
 801bb2c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bb30:	097f      	lsrs	r7, r7, #5
 801bb32:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bb36:	433d      	orrs	r5, r7
 801bb38:	f8ae 5000 	strh.w	r5, [lr]
 801bb3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bb3e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801bb40:	4413      	add	r3, r2
 801bb42:	9329      	str	r3, [sp, #164]	; 0xa4
 801bb44:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801bb46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb48:	441a      	add	r2, r3
 801bb4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bb4c:	922a      	str	r2, [sp, #168]	; 0xa8
 801bb4e:	3b01      	subs	r3, #1
 801bb50:	f10e 0e02 	add.w	lr, lr, #2
 801bb54:	9313      	str	r3, [sp, #76]	; 0x4c
 801bb56:	e61c      	b.n	801b792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801bb58:	fb08 f000 	mul.w	r0, r8, r0
 801bb5c:	fb09 0303 	mla	r3, r9, r3, r0
 801bb60:	e6dc      	b.n	801b91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801bb62:	46b9      	mov	r9, r7
 801bb64:	e704      	b.n	801b970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801bb66:	f1c2 0110 	rsb	r1, r2, #16
 801bb6a:	437a      	muls	r2, r7
 801bb6c:	fb09 2901 	mla	r9, r9, r1, r2
 801bb70:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bb74:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801bb78:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801bb7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb80:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bb84:	4302      	orrs	r2, r0
 801bb86:	e795      	b.n	801bab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 801bb88:	f8ae 2000 	strh.w	r2, [lr]
 801bb8c:	e7d6      	b.n	801bb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801bb8e:	b017      	add	sp, #92	; 0x5c
 801bb90:	ecbd 8b08 	vpop	{d8-d11}
 801bb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801bb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb9c:	b085      	sub	sp, #20
 801bb9e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801bba2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bba6:	9103      	str	r1, [sp, #12]
 801bba8:	fb05 7106 	mla	r1, r5, r6, r7
 801bbac:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801bbb0:	2d00      	cmp	r5, #0
 801bbb2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801bbb6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801bbba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bbbe:	9401      	str	r4, [sp, #4]
 801bbc0:	eb02 0901 	add.w	r9, r2, r1
 801bbc4:	f2c0 80c0 	blt.w	801bd48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801bbc8:	45a8      	cmp	r8, r5
 801bbca:	f340 80bd 	ble.w	801bd48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801bbce:	2f00      	cmp	r7, #0
 801bbd0:	f2c0 80b6 	blt.w	801bd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801bbd4:	42be      	cmp	r6, r7
 801bbd6:	f340 80b3 	ble.w	801bd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801bbda:	f812 c001 	ldrb.w	ip, [r2, r1]
 801bbde:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801bbe2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bbe6:	d019      	beq.n	801bc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801bbe8:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801bbec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bbf0:	435a      	muls	r2, r3
 801bbf2:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801bbf6:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801bbfa:	fb0c f403 	mul.w	r4, ip, r3
 801bbfe:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801bc02:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801bc06:	441a      	add	r2, r3
 801bc08:	f104 0320 	add.w	r3, r4, #32
 801bc0c:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801bc10:	0a1b      	lsrs	r3, r3, #8
 801bc12:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801bc16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc1a:	4319      	orrs	r1, r3
 801bc1c:	b289      	uxth	r1, r1
 801bc1e:	1c7b      	adds	r3, r7, #1
 801bc20:	f100 8097 	bmi.w	801bd52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801bc24:	429e      	cmp	r6, r3
 801bc26:	f340 8094 	ble.w	801bd52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801bc2a:	2800      	cmp	r0, #0
 801bc2c:	f000 8094 	beq.w	801bd58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801bc30:	f899 4001 	ldrb.w	r4, [r9, #1]
 801bc34:	9b01      	ldr	r3, [sp, #4]
 801bc36:	2cff      	cmp	r4, #255	; 0xff
 801bc38:	885b      	ldrh	r3, [r3, #2]
 801bc3a:	d01b      	beq.n	801bc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801bc3c:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801bc40:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801bc44:	fb0a f202 	mul.w	r2, sl, r2
 801bc48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc4c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bc50:	fb04 fa03 	mul.w	sl, r4, r3
 801bc54:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801bc58:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801bc5c:	441a      	add	r2, r3
 801bc5e:	f10a 0320 	add.w	r3, sl, #32
 801bc62:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801bc66:	0a1b      	lsrs	r3, r3, #8
 801bc68:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801bc6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc70:	ea4b 0303 	orr.w	r3, fp, r3
 801bc74:	b29b      	uxth	r3, r3
 801bc76:	3501      	adds	r5, #1
 801bc78:	d474      	bmi.n	801bd64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801bc7a:	45a8      	cmp	r8, r5
 801bc7c:	dd72      	ble.n	801bd64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801bc7e:	f1be 0f00 	cmp.w	lr, #0
 801bc82:	f000 8110 	beq.w	801bea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801bc86:	2f00      	cmp	r7, #0
 801bc88:	db69      	blt.n	801bd5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801bc8a:	42be      	cmp	r6, r7
 801bc8c:	dd67      	ble.n	801bd5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801bc8e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bc92:	9a01      	ldr	r2, [sp, #4]
 801bc94:	2dff      	cmp	r5, #255	; 0xff
 801bc96:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801bc9a:	d01c      	beq.n	801bcd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801bc9c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801bca0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bca4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801bca8:	fb05 fa0b 	mul.w	sl, r5, fp
 801bcac:	fb08 f802 	mul.w	r8, r8, r2
 801bcb0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bcb4:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801bcb8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bcbc:	4490      	add	r8, r2
 801bcbe:	f10a 0220 	add.w	r2, sl, #32
 801bcc2:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801bcc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcca:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801bcce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bcd2:	ea4b 0b0a 	orr.w	fp, fp, sl
 801bcd6:	fa1f fb8b 	uxth.w	fp, fp
 801bcda:	3701      	adds	r7, #1
 801bcdc:	d447      	bmi.n	801bd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801bcde:	42be      	cmp	r6, r7
 801bce0:	dd45      	ble.n	801bd6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801bce2:	2800      	cmp	r0, #0
 801bce4:	d046      	beq.n	801bd74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801bce6:	3601      	adds	r6, #1
 801bce8:	9a01      	ldr	r2, [sp, #4]
 801bcea:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bcee:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801bcf2:	2fff      	cmp	r7, #255	; 0xff
 801bcf4:	d01a      	beq.n	801bd2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801bcf6:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801bcfa:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801bcfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd02:	fb07 f902 	mul.w	r9, r7, r2
 801bd06:	fb08 f806 	mul.w	r8, r8, r6
 801bd0a:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bd0e:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801bd12:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bd16:	44b0      	add	r8, r6
 801bd18:	f109 0620 	add.w	r6, r9, #32
 801bd1c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801bd20:	0a36      	lsrs	r6, r6, #8
 801bd22:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bd26:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bd2a:	4332      	orrs	r2, r6
 801bd2c:	b292      	uxth	r2, r2
 801bd2e:	280f      	cmp	r0, #15
 801bd30:	d922      	bls.n	801bd78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801bd32:	4b61      	ldr	r3, [pc, #388]	; (801beb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801bd34:	4a61      	ldr	r2, [pc, #388]	; (801bebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801bd36:	4862      	ldr	r0, [pc, #392]	; (801bec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801bd38:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801bd3c:	f005 f880 	bl	8020e40 <__assert_func>
 801bd40:	f04f 0c00 	mov.w	ip, #0
 801bd44:	4661      	mov	r1, ip
 801bd46:	e76a      	b.n	801bc1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801bd48:	2400      	movs	r4, #0
 801bd4a:	46a4      	mov	ip, r4
 801bd4c:	4623      	mov	r3, r4
 801bd4e:	4621      	mov	r1, r4
 801bd50:	e791      	b.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bd52:	2400      	movs	r4, #0
 801bd54:	4623      	mov	r3, r4
 801bd56:	e78e      	b.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bd58:	4604      	mov	r4, r0
 801bd5a:	4603      	mov	r3, r0
 801bd5c:	e78b      	b.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801bd5e:	2500      	movs	r5, #0
 801bd60:	46ab      	mov	fp, r5
 801bd62:	e7ba      	b.n	801bcda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801bd64:	2700      	movs	r7, #0
 801bd66:	463d      	mov	r5, r7
 801bd68:	463a      	mov	r2, r7
 801bd6a:	46bb      	mov	fp, r7
 801bd6c:	e7df      	b.n	801bd2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801bd6e:	2700      	movs	r7, #0
 801bd70:	463a      	mov	r2, r7
 801bd72:	e7dc      	b.n	801bd2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801bd74:	4607      	mov	r7, r0
 801bd76:	4602      	mov	r2, r0
 801bd78:	f1be 0f0f 	cmp.w	lr, #15
 801bd7c:	d8d9      	bhi.n	801bd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801bd7e:	b286      	uxth	r6, r0
 801bd80:	fa1f f98e 	uxth.w	r9, lr
 801bd84:	fb06 f809 	mul.w	r8, r6, r9
 801bd88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801bd8c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bd90:	0136      	lsls	r6, r6, #4
 801bd92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bd96:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bd9a:	9601      	str	r6, [sp, #4]
 801bd9c:	ea4a 0101 	orr.w	r1, sl, r1
 801bda0:	fa1f f689 	uxth.w	r6, r9
 801bda4:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801bda8:	fb10 f90e 	smulbb	r9, r0, lr
 801bdac:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801bdb0:	9602      	str	r6, [sp, #8]
 801bdb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bdb6:	460e      	mov	r6, r1
 801bdb8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bdbc:	f1ce 0110 	rsb	r1, lr, #16
 801bdc0:	1a09      	subs	r1, r1, r0
 801bdc2:	ea4a 0303 	orr.w	r3, sl, r3
 801bdc6:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801bdca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bdce:	4343      	muls	r3, r0
 801bdd0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801bdd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bdd8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bddc:	fb01 3106 	mla	r1, r1, r6, r3
 801bde0:	ea4a 0202 	orr.w	r2, sl, r2
 801bde4:	fb09 1302 	mla	r3, r9, r2, r1
 801bde8:	9a03      	ldr	r2, [sp, #12]
 801bdea:	9802      	ldr	r0, [sp, #8]
 801bdec:	8811      	ldrh	r1, [r2, #0]
 801bdee:	9a01      	ldr	r2, [sp, #4]
 801bdf0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bdf4:	1a12      	subs	r2, r2, r0
 801bdf6:	9801      	ldr	r0, [sp, #4]
 801bdf8:	eba0 0608 	sub.w	r6, r0, r8
 801bdfc:	b2b6      	uxth	r6, r6
 801bdfe:	b292      	uxth	r2, r2
 801be00:	4374      	muls	r4, r6
 801be02:	fb0c 4402 	mla	r4, ip, r2, r4
 801be06:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801be0a:	9a02      	ldr	r2, [sp, #8]
 801be0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be10:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801be14:	fb02 4505 	mla	r5, r2, r5, r4
 801be18:	ea4a 0b0b 	orr.w	fp, sl, fp
 801be1c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801be20:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801be24:	fb08 5707 	mla	r7, r8, r7, r5
 801be28:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801be2c:	120a      	asrs	r2, r1, #8
 801be2e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801be32:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801be36:	b2ff      	uxtb	r7, r7
 801be38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be3c:	10c8      	asrs	r0, r1, #3
 801be3e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801be42:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801be46:	00c9      	lsls	r1, r1, #3
 801be48:	437a      	muls	r2, r7
 801be4a:	ea43 0e0e 	orr.w	lr, r3, lr
 801be4e:	b2c9      	uxtb	r1, r1
 801be50:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801be54:	fa1f f38e 	uxth.w	r3, lr
 801be58:	4378      	muls	r0, r7
 801be5a:	434f      	muls	r7, r1
 801be5c:	1c51      	adds	r1, r2, #1
 801be5e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801be62:	121a      	asrs	r2, r3, #8
 801be64:	f022 0207 	bic.w	r2, r2, #7
 801be68:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801be6c:	1c41      	adds	r1, r0, #1
 801be6e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801be72:	10d9      	asrs	r1, r3, #3
 801be74:	f021 0103 	bic.w	r1, r1, #3
 801be78:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801be7c:	0212      	lsls	r2, r2, #8
 801be7e:	00c9      	lsls	r1, r1, #3
 801be80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be84:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801be88:	430a      	orrs	r2, r1
 801be8a:	1c79      	adds	r1, r7, #1
 801be8c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801be90:	00db      	lsls	r3, r3, #3
 801be92:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801be96:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801be9a:	4313      	orrs	r3, r2
 801be9c:	9a03      	ldr	r2, [sp, #12]
 801be9e:	8013      	strh	r3, [r2, #0]
 801bea0:	b005      	add	sp, #20
 801bea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bea6:	280f      	cmp	r0, #15
 801bea8:	f63f af43 	bhi.w	801bd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801beac:	4677      	mov	r7, lr
 801beae:	4675      	mov	r5, lr
 801beb0:	4672      	mov	r2, lr
 801beb2:	46f3      	mov	fp, lr
 801beb4:	e763      	b.n	801bd7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801beb6:	bf00      	nop
 801beb8:	0802556e 	.word	0x0802556e
 801bebc:	08025b3a 	.word	0x08025b3a
 801bec0:	080255f2 	.word	0x080255f2

0801bec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bec8:	ed2d 8b08 	vpush	{d8-d11}
 801becc:	b093      	sub	sp, #76	; 0x4c
 801bece:	eeb0 aa40 	vmov.f32	s20, s0
 801bed2:	9210      	str	r2, [sp, #64]	; 0x40
 801bed4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bed6:	910e      	str	r1, [sp, #56]	; 0x38
 801bed8:	9306      	str	r3, [sp, #24]
 801beda:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801bede:	9011      	str	r0, [sp, #68]	; 0x44
 801bee0:	6850      	ldr	r0, [r2, #4]
 801bee2:	6812      	ldr	r2, [r2, #0]
 801bee4:	fb00 1303 	mla	r3, r0, r3, r1
 801bee8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801beec:	9307      	str	r3, [sp, #28]
 801beee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bef0:	681b      	ldr	r3, [r3, #0]
 801bef2:	9308      	str	r3, [sp, #32]
 801bef4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bef6:	685b      	ldr	r3, [r3, #4]
 801bef8:	9309      	str	r3, [sp, #36]	; 0x24
 801befa:	eef0 9a60 	vmov.f32	s19, s1
 801befe:	eeb0 9a41 	vmov.f32	s18, s2
 801bf02:	eeb0 8a62 	vmov.f32	s16, s5
 801bf06:	eef0 8a43 	vmov.f32	s17, s6
 801bf0a:	eef0 ba44 	vmov.f32	s23, s8
 801bf0e:	eeb0 ba64 	vmov.f32	s22, s9
 801bf12:	eef0 aa45 	vmov.f32	s21, s10
 801bf16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf18:	2b00      	cmp	r3, #0
 801bf1a:	dc03      	bgt.n	801bf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bf1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bf1e:	2b00      	cmp	r3, #0
 801bf20:	f340 83b7 	ble.w	801c692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 801bf24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bf26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bf2e:	1e48      	subs	r0, r1, #1
 801bf30:	1e55      	subs	r5, r2, #1
 801bf32:	9b06      	ldr	r3, [sp, #24]
 801bf34:	2b00      	cmp	r3, #0
 801bf36:	f340 819a 	ble.w	801c26e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801bf3a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801bf3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf3e:	1436      	asrs	r6, r6, #16
 801bf40:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bf44:	d406      	bmi.n	801bf54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bf46:	4286      	cmp	r6, r0
 801bf48:	da04      	bge.n	801bf54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bf4a:	2b00      	cmp	r3, #0
 801bf4c:	db02      	blt.n	801bf54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bf4e:	42ab      	cmp	r3, r5
 801bf50:	f2c0 818e 	blt.w	801c270 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bf54:	3601      	adds	r6, #1
 801bf56:	f100 817b 	bmi.w	801c250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801bf5a:	42b1      	cmp	r1, r6
 801bf5c:	f2c0 8178 	blt.w	801c250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801bf60:	3301      	adds	r3, #1
 801bf62:	f100 8175 	bmi.w	801c250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801bf66:	429a      	cmp	r2, r3
 801bf68:	f2c0 8172 	blt.w	801c250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801bf6c:	9b06      	ldr	r3, [sp, #24]
 801bf6e:	9f07      	ldr	r7, [sp, #28]
 801bf70:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf72:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bf76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf78:	2b00      	cmp	r3, #0
 801bf7a:	f340 819b 	ble.w	801c2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801bf7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf80:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801bf82:	1418      	asrs	r0, r3, #16
 801bf84:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bf86:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801bf8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bf8c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801bf90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bf92:	142d      	asrs	r5, r5, #16
 801bf94:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bf98:	f100 81ef 	bmi.w	801c37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 801bf9c:	f102 3eff 	add.w	lr, r2, #4294967295
 801bfa0:	4575      	cmp	r5, lr
 801bfa2:	f280 81ea 	bge.w	801c37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 801bfa6:	2800      	cmp	r0, #0
 801bfa8:	f2c0 81e7 	blt.w	801c37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 801bfac:	f103 3eff 	add.w	lr, r3, #4294967295
 801bfb0:	4570      	cmp	r0, lr
 801bfb2:	f280 81e2 	bge.w	801c37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 801bfb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfb8:	b212      	sxth	r2, r2
 801bfba:	fb00 5002 	mla	r0, r0, r2, r5
 801bfbe:	fa1f fe81 	uxth.w	lr, r1
 801bfc2:	eb03 0a00 	add.w	sl, r3, r0
 801bfc6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801bfca:	f813 9000 	ldrb.w	r9, [r3, r0]
 801bfce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bfd2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801bfd6:	b29b      	uxth	r3, r3
 801bfd8:	f1bc 0f00 	cmp.w	ip, #0
 801bfdc:	f000 81b0 	beq.w	801c340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 801bfe0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bfe4:	940a      	str	r4, [sp, #40]	; 0x28
 801bfe6:	eb0a 0b02 	add.w	fp, sl, r2
 801bfea:	fa1f fa8c 	uxth.w	sl, ip
 801bfee:	fb0a fe0e 	mul.w	lr, sl, lr
 801bff2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bff6:	fa1f fa8a 	uxth.w	sl, sl
 801bffa:	eba5 050e 	sub.w	r5, r5, lr
 801bffe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c002:	940b      	str	r4, [sp, #44]	; 0x2c
 801c004:	eba3 030a 	sub.w	r3, r3, sl
 801c008:	b2ad      	uxth	r5, r5
 801c00a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c00c:	b29b      	uxth	r3, r3
 801c00e:	fb08 f505 	mul.w	r5, r8, r5
 801c012:	fb09 5303 	mla	r3, r9, r3, r5
 801c016:	fb0a 3304 	mla	r3, sl, r4, r3
 801c01a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c01c:	fb0e 3304 	mla	r3, lr, r4, r3
 801c020:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c024:	2b00      	cmp	r3, #0
 801c026:	f000 8106 	beq.w	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c02a:	9c08      	ldr	r4, [sp, #32]
 801c02c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c030:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c034:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c038:	f000 8187 	beq.w	801c34a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801c03c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c040:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c044:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c048:	fb09 f000 	mul.w	r0, r9, r0
 801c04c:	fb0a fe0e 	mul.w	lr, sl, lr
 801c050:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c054:	f100 0b20 	add.w	fp, r0, #32
 801c058:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c05c:	44ce      	add	lr, r9
 801c05e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c062:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c066:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c06a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c06e:	ea4e 0909 	orr.w	r9, lr, r9
 801c072:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c076:	8868      	ldrh	r0, [r5, #2]
 801c078:	d019      	beq.n	801c0ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801c07a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c07e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c082:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c086:	fb08 f800 	mul.w	r8, r8, r0
 801c08a:	fb0a fe0e 	mul.w	lr, sl, lr
 801c08e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c092:	f108 0b20 	add.w	fp, r8, #32
 801c096:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c09a:	4486      	add	lr, r0
 801c09c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c0a0:	0a00      	lsrs	r0, r0, #8
 801c0a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c0a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c0aa:	ea4e 0000 	orr.w	r0, lr, r0
 801c0ae:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c0b2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c0b6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c0ba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c0be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c0c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c0c6:	ea4e 0909 	orr.w	r9, lr, r9
 801c0ca:	ea4a 0000 	orr.w	r0, sl, r0
 801c0ce:	f1bc 0f00 	cmp.w	ip, #0
 801c0d2:	f000 813c 	beq.w	801c34e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 801c0d6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c0da:	3a01      	subs	r2, #1
 801c0dc:	0052      	lsls	r2, r2, #1
 801c0de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c0e0:	3202      	adds	r2, #2
 801c0e2:	2cff      	cmp	r4, #255	; 0xff
 801c0e4:	eb05 0e02 	add.w	lr, r5, r2
 801c0e8:	5aaa      	ldrh	r2, [r5, r2]
 801c0ea:	d018      	beq.n	801c11e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801c0ec:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c0f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0f4:	fb04 fa02 	mul.w	sl, r4, r2
 801c0f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c0fc:	fb08 f805 	mul.w	r8, r8, r5
 801c100:	f10a 0520 	add.w	r5, sl, #32
 801c104:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c108:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c10c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c110:	4442      	add	r2, r8
 801c112:	0a2d      	lsrs	r5, r5, #8
 801c114:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c118:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c11c:	432a      	orrs	r2, r5
 801c11e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c120:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c124:	2cff      	cmp	r4, #255	; 0xff
 801c126:	d01a      	beq.n	801c15e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c128:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c12c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c130:	fb04 fa05 	mul.w	sl, r4, r5
 801c134:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c138:	fb08 f80e 	mul.w	r8, r8, lr
 801c13c:	f10a 0e20 	add.w	lr, sl, #32
 801c140:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c144:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c148:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c14c:	4445      	add	r5, r8
 801c14e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c152:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c156:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c15a:	ea45 050e 	orr.w	r5, r5, lr
 801c15e:	fb1c fe01 	smulbb	lr, ip, r1
 801c162:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c166:	f1cc 0810 	rsb	r8, ip, #16
 801c16a:	eba8 0801 	sub.w	r8, r8, r1
 801c16e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c172:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c176:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c17a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c17e:	4341      	muls	r1, r0
 801c180:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c184:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c188:	ea4a 0202 	orr.w	r2, sl, r2
 801c18c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c190:	fb09 1108 	mla	r1, r9, r8, r1
 801c194:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c198:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c19c:	fb0c 1102 	mla	r1, ip, r2, r1
 801c1a0:	ea4b 0505 	orr.w	r5, fp, r5
 801c1a4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c1a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c1ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c1b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c1b8:	ea42 0e0e 	orr.w	lr, r2, lr
 801c1bc:	fa1f f28e 	uxth.w	r2, lr
 801c1c0:	2bff      	cmp	r3, #255	; 0xff
 801c1c2:	f000 80d8 	beq.w	801c376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801c1c6:	f8b7 c000 	ldrh.w	ip, [r7]
 801c1ca:	43db      	mvns	r3, r3
 801c1cc:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c1d0:	fa5f fe83 	uxtb.w	lr, r3
 801c1d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c1d8:	fb00 f00e 	mul.w	r0, r0, lr
 801c1dc:	1c41      	adds	r1, r0, #1
 801c1de:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c1e2:	1211      	asrs	r1, r2, #8
 801c1e4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c1e8:	f021 0107 	bic.w	r1, r1, #7
 801c1ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c1f0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c1f4:	486f      	ldr	r0, [pc, #444]	; (801c3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 801c1f6:	fb05 f50e 	mul.w	r5, r5, lr
 801c1fa:	b2c9      	uxtb	r1, r1
 801c1fc:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801c200:	1c69      	adds	r1, r5, #1
 801c202:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c206:	10d1      	asrs	r1, r2, #3
 801c208:	f021 0103 	bic.w	r1, r1, #3
 801c20c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801c210:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c214:	b2db      	uxtb	r3, r3
 801c216:	00c9      	lsls	r1, r1, #3
 801c218:	fb03 f30e 	mul.w	r3, r3, lr
 801c21c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c220:	4301      	orrs	r1, r0
 801c222:	1c58      	adds	r0, r3, #1
 801c224:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c228:	00d3      	lsls	r3, r2, #3
 801c22a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c22e:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c232:	4319      	orrs	r1, r3
 801c234:	8039      	strh	r1, [r7, #0]
 801c236:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c238:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801c23a:	4413      	add	r3, r2
 801c23c:	9325      	str	r3, [sp, #148]	; 0x94
 801c23e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c240:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c242:	441a      	add	r2, r3
 801c244:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c246:	9226      	str	r2, [sp, #152]	; 0x98
 801c248:	3b01      	subs	r3, #1
 801c24a:	3702      	adds	r7, #2
 801c24c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c24e:	e692      	b.n	801bf76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c250:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c252:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801c254:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801c256:	4433      	add	r3, r6
 801c258:	9325      	str	r3, [sp, #148]	; 0x94
 801c25a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c25c:	441c      	add	r4, r3
 801c25e:	9b06      	ldr	r3, [sp, #24]
 801c260:	9426      	str	r4, [sp, #152]	; 0x98
 801c262:	3b01      	subs	r3, #1
 801c264:	9306      	str	r3, [sp, #24]
 801c266:	9b07      	ldr	r3, [sp, #28]
 801c268:	3302      	adds	r3, #2
 801c26a:	9307      	str	r3, [sp, #28]
 801c26c:	e661      	b.n	801bf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c26e:	d028      	beq.n	801c2c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 801c270:	9b06      	ldr	r3, [sp, #24]
 801c272:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c274:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801c276:	3b01      	subs	r3, #1
 801c278:	fb00 5003 	mla	r0, r0, r3, r5
 801c27c:	1400      	asrs	r0, r0, #16
 801c27e:	f53f ae75 	bmi.w	801bf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c282:	3901      	subs	r1, #1
 801c284:	4288      	cmp	r0, r1
 801c286:	f6bf ae71 	bge.w	801bf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c28a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c28c:	9826      	ldr	r0, [sp, #152]	; 0x98
 801c28e:	fb01 0303 	mla	r3, r1, r3, r0
 801c292:	141b      	asrs	r3, r3, #16
 801c294:	f53f ae6a 	bmi.w	801bf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c298:	3a01      	subs	r2, #1
 801c29a:	4293      	cmp	r3, r2
 801c29c:	f6bf ae66 	bge.w	801bf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c2a0:	9b06      	ldr	r3, [sp, #24]
 801c2a2:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801c2a6:	930f      	str	r3, [sp, #60]	; 0x3c
 801c2a8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c2ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c2ae:	2b00      	cmp	r3, #0
 801c2b0:	f300 8082 	bgt.w	801c3b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c2b4:	9b06      	ldr	r3, [sp, #24]
 801c2b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c2ba:	9b07      	ldr	r3, [sp, #28]
 801c2bc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c2c0:	9307      	str	r3, [sp, #28]
 801c2c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c2c4:	2b00      	cmp	r3, #0
 801c2c6:	f340 81e4 	ble.w	801c692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 801c2ca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c2ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c2d2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c2d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2d8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c2dc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c2e0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c2e4:	eef0 6a48 	vmov.f32	s13, s16
 801c2e8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c2ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2f0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c2f4:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801c2f8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c2fc:	eef0 6a68 	vmov.f32	s13, s17
 801c300:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c304:	ee18 2a10 	vmov	r2, s16
 801c308:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c30c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c310:	ee18 2a90 	vmov	r2, s17
 801c314:	9327      	str	r3, [sp, #156]	; 0x9c
 801c316:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c318:	fb92 f3f3 	sdiv	r3, r2, r3
 801c31c:	9328      	str	r3, [sp, #160]	; 0xa0
 801c31e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c320:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c322:	3b01      	subs	r3, #1
 801c324:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c328:	930e      	str	r3, [sp, #56]	; 0x38
 801c32a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c32c:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801c330:	bf08      	it	eq
 801c332:	4613      	moveq	r3, r2
 801c334:	9306      	str	r3, [sp, #24]
 801c336:	eef0 8a67 	vmov.f32	s17, s15
 801c33a:	eeb0 8a47 	vmov.f32	s16, s14
 801c33e:	e5ea      	b.n	801bf16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c340:	fb08 f505 	mul.w	r5, r8, r5
 801c344:	fb09 5303 	mla	r3, r9, r3, r5
 801c348:	e66a      	b.n	801c020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c34a:	4681      	mov	r9, r0
 801c34c:	e691      	b.n	801c072 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c34e:	f1c1 0210 	rsb	r2, r1, #16
 801c352:	4341      	muls	r1, r0
 801c354:	fb09 1902 	mla	r9, r9, r2, r1
 801c358:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c35c:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c360:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c364:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c368:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c36c:	ea42 0909 	orr.w	r9, r2, r9
 801c370:	fa1f f289 	uxth.w	r2, r9
 801c374:	e724      	b.n	801c1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c376:	803a      	strh	r2, [r7, #0]
 801c378:	e75d      	b.n	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c37a:	f115 0e01 	adds.w	lr, r5, #1
 801c37e:	f53f af5a 	bmi.w	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c382:	4572      	cmp	r2, lr
 801c384:	f6ff af57 	blt.w	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c388:	f110 0e01 	adds.w	lr, r0, #1
 801c38c:	f53f af53 	bmi.w	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c390:	4573      	cmp	r3, lr
 801c392:	f6ff af50 	blt.w	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c396:	b21b      	sxth	r3, r3
 801c398:	b212      	sxth	r2, r2
 801c39a:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801c39e:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801c3a2:	9301      	str	r3, [sp, #4]
 801c3a4:	9200      	str	r2, [sp, #0]
 801c3a6:	4639      	mov	r1, r7
 801c3a8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801c3ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c3ae:	f7ff fbf3 	bl	801bb98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c3b2:	e740      	b.n	801c236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c3b4:	fffff800 	.word	0xfffff800
 801c3b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c3ba:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c3be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c3c0:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c3c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c3c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c3ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c3cc:	141f      	asrs	r7, r3, #16
 801c3ce:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c3d0:	141b      	asrs	r3, r3, #16
 801c3d2:	fb01 3707 	mla	r7, r1, r7, r3
 801c3d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3d8:	fa1f fc82 	uxth.w	ip, r2
 801c3dc:	eb03 0a07 	add.w	sl, r3, r7
 801c3e0:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c3e4:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c3e8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c3ec:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c3f0:	b29b      	uxth	r3, r3
 801c3f2:	2d00      	cmp	r5, #0
 801c3f4:	f000 8132 	beq.w	801c65c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 801c3f8:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c3fc:	940c      	str	r4, [sp, #48]	; 0x30
 801c3fe:	eb0a 0b01 	add.w	fp, sl, r1
 801c402:	fa1f fa85 	uxth.w	sl, r5
 801c406:	fb0a fc0c 	mul.w	ip, sl, ip
 801c40a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c40e:	fa1f fa8a 	uxth.w	sl, sl
 801c412:	eba0 000c 	sub.w	r0, r0, ip
 801c416:	eba3 030a 	sub.w	r3, r3, sl
 801c41a:	b280      	uxth	r0, r0
 801c41c:	fb08 f000 	mul.w	r0, r8, r0
 801c420:	b29b      	uxth	r3, r3
 801c422:	fb09 0303 	mla	r3, r9, r3, r0
 801c426:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c428:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c42c:	940d      	str	r4, [sp, #52]	; 0x34
 801c42e:	fb0a 3300 	mla	r3, sl, r0, r3
 801c432:	fb0c 3304 	mla	r3, ip, r4, r3
 801c436:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c43a:	2b00      	cmp	r3, #0
 801c43c:	f000 8100 	beq.w	801c640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 801c440:	9808      	ldr	r0, [sp, #32]
 801c442:	9c08      	ldr	r4, [sp, #32]
 801c444:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c448:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c44c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c450:	f000 8109 	beq.w	801c666 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 801c454:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c458:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c45c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c460:	fb09 f707 	mul.w	r7, r9, r7
 801c464:	fb0a fc0c 	mul.w	ip, sl, ip
 801c468:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c46c:	f107 0b20 	add.w	fp, r7, #32
 801c470:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c474:	44cc      	add	ip, r9
 801c476:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c47a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c47e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c482:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c486:	ea4c 0909 	orr.w	r9, ip, r9
 801c48a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c48e:	8847      	ldrh	r7, [r0, #2]
 801c490:	d019      	beq.n	801c4c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801c492:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c496:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c49a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c49e:	fb08 f807 	mul.w	r8, r8, r7
 801c4a2:	fb0a fc0c 	mul.w	ip, sl, ip
 801c4a6:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c4aa:	f108 0b20 	add.w	fp, r8, #32
 801c4ae:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c4b2:	44bc      	add	ip, r7
 801c4b4:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c4b8:	0a3f      	lsrs	r7, r7, #8
 801c4ba:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c4be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c4c2:	ea4c 0707 	orr.w	r7, ip, r7
 801c4c6:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c4ca:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c4ce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c4d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c4d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c4da:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c4de:	ea4c 0909 	orr.w	r9, ip, r9
 801c4e2:	ea4a 0707 	orr.w	r7, sl, r7
 801c4e6:	2d00      	cmp	r5, #0
 801c4e8:	f000 80bf 	beq.w	801c66a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 801c4ec:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c4f0:	3901      	subs	r1, #1
 801c4f2:	0049      	lsls	r1, r1, #1
 801c4f4:	3102      	adds	r1, #2
 801c4f6:	eb00 0c01 	add.w	ip, r0, r1
 801c4fa:	5a41      	ldrh	r1, [r0, r1]
 801c4fc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c4fe:	28ff      	cmp	r0, #255	; 0xff
 801c500:	d019      	beq.n	801c536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801c502:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c504:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c508:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c50c:	fb04 fa01 	mul.w	sl, r4, r1
 801c510:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c514:	fb08 f800 	mul.w	r8, r8, r0
 801c518:	f10a 0020 	add.w	r0, sl, #32
 801c51c:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c520:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c524:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c528:	4441      	add	r1, r8
 801c52a:	0a00      	lsrs	r0, r0, #8
 801c52c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c530:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c534:	4301      	orrs	r1, r0
 801c536:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c538:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c53c:	2cff      	cmp	r4, #255	; 0xff
 801c53e:	d01a      	beq.n	801c576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 801c540:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c544:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c548:	fb04 fa00 	mul.w	sl, r4, r0
 801c54c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c550:	fb08 f80c 	mul.w	r8, r8, ip
 801c554:	f10a 0c20 	add.w	ip, sl, #32
 801c558:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c55c:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c560:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c564:	4440      	add	r0, r8
 801c566:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c56a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c56e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c572:	ea40 000c 	orr.w	r0, r0, ip
 801c576:	fb15 fc02 	smulbb	ip, r5, r2
 801c57a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c57e:	f1c5 0810 	rsb	r8, r5, #16
 801c582:	eba8 0802 	sub.w	r8, r8, r2
 801c586:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c58a:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c58e:	437a      	muls	r2, r7
 801c590:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c594:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c598:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c59c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c5a0:	fb09 2208 	mla	r2, r9, r8, r2
 801c5a4:	ea4a 0101 	orr.w	r1, sl, r1
 801c5a8:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c5ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c5b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c5b4:	fb05 2201 	mla	r2, r5, r1, r2
 801c5b8:	ea4b 0000 	orr.w	r0, fp, r0
 801c5bc:	fb0c 2200 	mla	r2, ip, r0, r2
 801c5c0:	0d57      	lsrs	r7, r2, #21
 801c5c2:	0952      	lsrs	r2, r2, #5
 801c5c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c5cc:	433a      	orrs	r2, r7
 801c5ce:	2bff      	cmp	r3, #255	; 0xff
 801c5d0:	b292      	uxth	r2, r2
 801c5d2:	d05b      	beq.n	801c68c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801c5d4:	f8be 7000 	ldrh.w	r7, [lr]
 801c5d8:	4c30      	ldr	r4, [pc, #192]	; (801c69c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 801c5da:	43db      	mvns	r3, r3
 801c5dc:	1238      	asrs	r0, r7, #8
 801c5de:	fa5f fc83 	uxtb.w	ip, r3
 801c5e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c5e6:	10fd      	asrs	r5, r7, #3
 801c5e8:	fb00 f00c 	mul.w	r0, r0, ip
 801c5ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c5f0:	fb05 f10c 	mul.w	r1, r5, ip
 801c5f4:	1c45      	adds	r5, r0, #1
 801c5f6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c5fa:	1215      	asrs	r5, r2, #8
 801c5fc:	f025 0507 	bic.w	r5, r5, #7
 801c600:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c604:	1c4d      	adds	r5, r1, #1
 801c606:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c60a:	10d1      	asrs	r1, r2, #3
 801c60c:	f021 0103 	bic.w	r1, r1, #3
 801c610:	00fb      	lsls	r3, r7, #3
 801c612:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c616:	b2db      	uxtb	r3, r3
 801c618:	b2c0      	uxtb	r0, r0
 801c61a:	00c9      	lsls	r1, r1, #3
 801c61c:	fb03 f30c 	mul.w	r3, r3, ip
 801c620:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c624:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c628:	4308      	orrs	r0, r1
 801c62a:	1c59      	adds	r1, r3, #1
 801c62c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c630:	00d2      	lsls	r2, r2, #3
 801c632:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c636:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c63a:	4318      	orrs	r0, r3
 801c63c:	f8ae 0000 	strh.w	r0, [lr]
 801c640:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c642:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801c644:	4413      	add	r3, r2
 801c646:	9325      	str	r3, [sp, #148]	; 0x94
 801c648:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c64a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c64c:	441a      	add	r2, r3
 801c64e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c650:	9226      	str	r2, [sp, #152]	; 0x98
 801c652:	3b01      	subs	r3, #1
 801c654:	f10e 0e02 	add.w	lr, lr, #2
 801c658:	930f      	str	r3, [sp, #60]	; 0x3c
 801c65a:	e627      	b.n	801c2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 801c65c:	fb08 f000 	mul.w	r0, r8, r0
 801c660:	fb09 0303 	mla	r3, r9, r3, r0
 801c664:	e6e7      	b.n	801c436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 801c666:	46b9      	mov	r9, r7
 801c668:	e70f      	b.n	801c48a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801c66a:	f1c2 0110 	rsb	r1, r2, #16
 801c66e:	437a      	muls	r2, r7
 801c670:	fb09 2901 	mla	r9, r9, r1, r2
 801c674:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c678:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c67c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c680:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c684:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c688:	4302      	orrs	r2, r0
 801c68a:	e7a0      	b.n	801c5ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801c68c:	f8ae 2000 	strh.w	r2, [lr]
 801c690:	e7d6      	b.n	801c640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 801c692:	b013      	add	sp, #76	; 0x4c
 801c694:	ecbd 8b08 	vpop	{d8-d11}
 801c698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c69c:	fffff800 	.word	0xfffff800

0801c6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c6a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c6a4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801c6a8:	fb0c 4e03 	mla	lr, ip, r3, r4
 801c6ac:	f1bc 0f00 	cmp.w	ip, #0
 801c6b0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c6b4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801c6b8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801c6bc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801c6c0:	8808      	ldrh	r0, [r1, #0]
 801c6c2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801c6c6:	db2f      	blt.n	801c728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801c6c8:	45e2      	cmp	sl, ip
 801c6ca:	dd2d      	ble.n	801c728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801c6cc:	2c00      	cmp	r4, #0
 801c6ce:	db29      	blt.n	801c724 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c6d0:	42a3      	cmp	r3, r4
 801c6d2:	dd27      	ble.n	801c724 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c6d4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801c6d8:	1c62      	adds	r2, r4, #1
 801c6da:	d428      	bmi.n	801c72e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c6dc:	4293      	cmp	r3, r2
 801c6de:	dd26      	ble.n	801c72e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c6e0:	b32f      	cbz	r7, 801c72e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c6e2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801c6e6:	f11c 0c01 	adds.w	ip, ip, #1
 801c6ea:	d424      	bmi.n	801c736 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c6ec:	45e2      	cmp	sl, ip
 801c6ee:	dd22      	ble.n	801c736 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c6f0:	2e00      	cmp	r6, #0
 801c6f2:	f000 809d 	beq.w	801c830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 801c6f6:	2c00      	cmp	r4, #0
 801c6f8:	db1b      	blt.n	801c732 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c6fa:	42a3      	cmp	r3, r4
 801c6fc:	dd19      	ble.n	801c732 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c6fe:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801c702:	3401      	adds	r4, #1
 801c704:	d41a      	bmi.n	801c73c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c706:	42a3      	cmp	r3, r4
 801c708:	dd18      	ble.n	801c73c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c70a:	b1cf      	cbz	r7, 801c740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801c70c:	3301      	adds	r3, #1
 801c70e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801c712:	2f0f      	cmp	r7, #15
 801c714:	d915      	bls.n	801c742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801c716:	4b49      	ldr	r3, [pc, #292]	; (801c83c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801c718:	4a49      	ldr	r2, [pc, #292]	; (801c840 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801c71a:	484a      	ldr	r0, [pc, #296]	; (801c844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801c71c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801c720:	f004 fb8e 	bl	8020e40 <__assert_func>
 801c724:	4681      	mov	r9, r0
 801c726:	e7d7      	b.n	801c6d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801c728:	4686      	mov	lr, r0
 801c72a:	4681      	mov	r9, r0
 801c72c:	e7db      	b.n	801c6e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c72e:	4686      	mov	lr, r0
 801c730:	e7d9      	b.n	801c6e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c732:	4684      	mov	ip, r0
 801c734:	e7e5      	b.n	801c702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801c736:	4603      	mov	r3, r0
 801c738:	4684      	mov	ip, r0
 801c73a:	e7ea      	b.n	801c712 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c73c:	4603      	mov	r3, r0
 801c73e:	e7e8      	b.n	801c712 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c740:	4603      	mov	r3, r0
 801c742:	2e0f      	cmp	r6, #15
 801c744:	d8e7      	bhi.n	801c716 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c746:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801c74a:	fb17 f806 	smulbb	r8, r7, r6
 801c74e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c752:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801c756:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c75a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801c75e:	ea44 0909 	orr.w	r9, r4, r9
 801c762:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c766:	f1c6 0410 	rsb	r4, r6, #16
 801c76a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c76e:	1be4      	subs	r4, r4, r7
 801c770:	041a      	lsls	r2, r3, #16
 801c772:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801c776:	ea4a 0e0e 	orr.w	lr, sl, lr
 801c77a:	fb07 fe0e 	mul.w	lr, r7, lr
 801c77e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c782:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801c786:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c78a:	fb04 e409 	mla	r4, r4, r9, lr
 801c78e:	4313      	orrs	r3, r2
 801c790:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801c794:	fb08 4303 	mla	r3, r8, r3, r4
 801c798:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c79c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801c7a0:	4322      	orrs	r2, r4
 801c7a2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801c7a6:	fb06 3202 	mla	r2, r6, r2, r3
 801c7aa:	0d53      	lsrs	r3, r2, #21
 801c7ac:	0952      	lsrs	r2, r2, #5
 801c7ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c7b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c7b6:	431a      	orrs	r2, r3
 801c7b8:	b293      	uxth	r3, r2
 801c7ba:	b2af      	uxth	r7, r5
 801c7bc:	1202      	asrs	r2, r0, #8
 801c7be:	43ed      	mvns	r5, r5
 801c7c0:	b2ed      	uxtb	r5, r5
 801c7c2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c7c6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c7ca:	fb12 f205 	smulbb	r2, r2, r5
 801c7ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c7d2:	fb0c 2c07 	mla	ip, ip, r7, r2
 801c7d6:	00dc      	lsls	r4, r3, #3
 801c7d8:	10da      	asrs	r2, r3, #3
 801c7da:	10c6      	asrs	r6, r0, #3
 801c7dc:	00c3      	lsls	r3, r0, #3
 801c7de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c7e2:	b2db      	uxtb	r3, r3
 801c7e4:	fb16 f605 	smulbb	r6, r6, r5
 801c7e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c7ec:	b2e4      	uxtb	r4, r4
 801c7ee:	fb13 f305 	smulbb	r3, r3, r5
 801c7f2:	fa1f fc8c 	uxth.w	ip, ip
 801c7f6:	fb02 6207 	mla	r2, r2, r7, r6
 801c7fa:	fb04 3307 	mla	r3, r4, r7, r3
 801c7fe:	b296      	uxth	r6, r2
 801c800:	b29a      	uxth	r2, r3
 801c802:	f10c 0301 	add.w	r3, ip, #1
 801c806:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c80a:	1c53      	adds	r3, r2, #1
 801c80c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c810:	1c72      	adds	r2, r6, #1
 801c812:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801c816:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c81a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c81e:	0952      	lsrs	r2, r2, #5
 801c820:	ea43 030c 	orr.w	r3, r3, ip
 801c824:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c828:	4313      	orrs	r3, r2
 801c82a:	800b      	strh	r3, [r1, #0]
 801c82c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c830:	2f0f      	cmp	r7, #15
 801c832:	f63f af70 	bhi.w	801c716 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c836:	4603      	mov	r3, r0
 801c838:	4684      	mov	ip, r0
 801c83a:	e784      	b.n	801c746 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801c83c:	0802556e 	.word	0x0802556e
 801c840:	08025be3 	.word	0x08025be3
 801c844:	080255f2 	.word	0x080255f2

0801c848 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c84c:	ed2d 8b08 	vpush	{d8-d11}
 801c850:	b093      	sub	sp, #76	; 0x4c
 801c852:	461d      	mov	r5, r3
 801c854:	9210      	str	r2, [sp, #64]	; 0x40
 801c856:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c858:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801c85c:	920b      	str	r2, [sp, #44]	; 0x2c
 801c85e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801c862:	910a      	str	r1, [sp, #40]	; 0x28
 801c864:	6859      	ldr	r1, [r3, #4]
 801c866:	681b      	ldr	r3, [r3, #0]
 801c868:	9011      	str	r0, [sp, #68]	; 0x44
 801c86a:	fb01 2707 	mla	r7, r1, r7, r2
 801c86e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c872:	9307      	str	r3, [sp, #28]
 801c874:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c876:	681b      	ldr	r3, [r3, #0]
 801c878:	9309      	str	r3, [sp, #36]	; 0x24
 801c87a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c87c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c880:	43db      	mvns	r3, r3
 801c882:	b2db      	uxtb	r3, r3
 801c884:	eeb0 aa40 	vmov.f32	s20, s0
 801c888:	eef0 9a60 	vmov.f32	s19, s1
 801c88c:	eeb0 9a41 	vmov.f32	s18, s2
 801c890:	eeb0 8a62 	vmov.f32	s16, s5
 801c894:	eef0 8a43 	vmov.f32	s17, s6
 801c898:	eef0 ba44 	vmov.f32	s23, s8
 801c89c:	eeb0 ba64 	vmov.f32	s22, s9
 801c8a0:	eef0 aa45 	vmov.f32	s21, s10
 801c8a4:	9308      	str	r3, [sp, #32]
 801c8a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c8a8:	2b00      	cmp	r3, #0
 801c8aa:	dc03      	bgt.n	801c8b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c8ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8ae:	2b00      	cmp	r3, #0
 801c8b0:	f340 8203 	ble.w	801ccba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c8b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c8b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c8ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c8be:	1e48      	subs	r0, r1, #1
 801c8c0:	f102 3cff 	add.w	ip, r2, #4294967295
 801c8c4:	2d00      	cmp	r5, #0
 801c8c6:	f340 80da 	ble.w	801ca7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c8ca:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c8ce:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c8d2:	d406      	bmi.n	801c8e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c8d4:	4586      	cmp	lr, r0
 801c8d6:	da04      	bge.n	801c8e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c8d8:	2b00      	cmp	r3, #0
 801c8da:	db02      	blt.n	801c8e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c8dc:	4563      	cmp	r3, ip
 801c8de:	f2c0 80cf 	blt.w	801ca80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c8e2:	f11e 0e01 	adds.w	lr, lr, #1
 801c8e6:	f100 80c1 	bmi.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c8ea:	4571      	cmp	r1, lr
 801c8ec:	f2c0 80be 	blt.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c8f0:	3301      	adds	r3, #1
 801c8f2:	f100 80bb 	bmi.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c8f6:	429a      	cmp	r2, r3
 801c8f8:	f2c0 80b8 	blt.w	801ca6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c8fc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c900:	46a9      	mov	r9, r5
 801c902:	f1b9 0f00 	cmp.w	r9, #0
 801c906:	f340 80d8 	ble.w	801caba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c90a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c90c:	1421      	asrs	r1, r4, #16
 801c90e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c912:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c916:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c91a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c91e:	f100 8111 	bmi.w	801cb44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c922:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c926:	4551      	cmp	r1, sl
 801c928:	f280 810c 	bge.w	801cb44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c92c:	2800      	cmp	r0, #0
 801c92e:	f2c0 8109 	blt.w	801cb44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c932:	f103 3aff 	add.w	sl, r3, #4294967295
 801c936:	4550      	cmp	r0, sl
 801c938:	f280 8104 	bge.w	801cb44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c93c:	fa0f f38e 	sxth.w	r3, lr
 801c940:	fb00 1103 	mla	r1, r0, r3, r1
 801c944:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c946:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c94a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c94e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c952:	f1bc 0f00 	cmp.w	ip, #0
 801c956:	d007      	beq.n	801c968 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801c958:	005b      	lsls	r3, r3, #1
 801c95a:	eb0a 0003 	add.w	r0, sl, r3
 801c95e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c962:	930c      	str	r3, [sp, #48]	; 0x30
 801c964:	8843      	ldrh	r3, [r0, #2]
 801c966:	930d      	str	r3, [sp, #52]	; 0x34
 801c968:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c96c:	fb12 f30c 	smulbb	r3, r2, ip
 801c970:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c974:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c978:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c97c:	10db      	asrs	r3, r3, #3
 801c97e:	ea40 000e 	orr.w	r0, r0, lr
 801c982:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c986:	f1cc 0e10 	rsb	lr, ip, #16
 801c98a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c98e:	ebae 0e02 	sub.w	lr, lr, r2
 801c992:	ea4a 0101 	orr.w	r1, sl, r1
 801c996:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c99a:	4351      	muls	r1, r2
 801c99c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c99e:	9f08      	ldr	r7, [sp, #32]
 801c9a0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c9a4:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c9a8:	0410      	lsls	r0, r2, #16
 801c9aa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c9ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c9b2:	4310      	orrs	r0, r2
 801c9b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c9b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c9b8:	0412      	lsls	r2, r2, #16
 801c9ba:	fb03 e000 	mla	r0, r3, r0, lr
 801c9be:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c9c2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c9c6:	ea42 020e 	orr.w	r2, r2, lr
 801c9ca:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c9ce:	fb03 0302 	mla	r3, r3, r2, r0
 801c9d2:	0d5a      	lsrs	r2, r3, #21
 801c9d4:	095b      	lsrs	r3, r3, #5
 801c9d6:	f8b8 0000 	ldrh.w	r0, [r8]
 801c9da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c9de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c9e2:	4313      	orrs	r3, r2
 801c9e4:	b29b      	uxth	r3, r3
 801c9e6:	1201      	asrs	r1, r0, #8
 801c9e8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801c9ec:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c9f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c9f4:	fb11 f107 	smulbb	r1, r1, r7
 801c9f8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c9fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca00:	00c0      	lsls	r0, r0, #3
 801ca02:	fb0c 1c02 	mla	ip, ip, r2, r1
 801ca06:	b2c0      	uxtb	r0, r0
 801ca08:	10d9      	asrs	r1, r3, #3
 801ca0a:	00db      	lsls	r3, r3, #3
 801ca0c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ca10:	b2db      	uxtb	r3, r3
 801ca12:	fb10 f007 	smulbb	r0, r0, r7
 801ca16:	fa1f fc8c 	uxth.w	ip, ip
 801ca1a:	fb03 0302 	mla	r3, r3, r2, r0
 801ca1e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ca22:	fb1e fe07 	smulbb	lr, lr, r7
 801ca26:	fb01 e102 	mla	r1, r1, r2, lr
 801ca2a:	b29a      	uxth	r2, r3
 801ca2c:	f10c 0301 	add.w	r3, ip, #1
 801ca30:	b289      	uxth	r1, r1
 801ca32:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ca36:	1c53      	adds	r3, r2, #1
 801ca38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca3c:	1c4a      	adds	r2, r1, #1
 801ca3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ca42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ca46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca4a:	0949      	lsrs	r1, r1, #5
 801ca4c:	ea43 030c 	orr.w	r3, r3, ip
 801ca50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ca54:	430b      	orrs	r3, r1
 801ca56:	f8a8 3000 	strh.w	r3, [r8]
 801ca5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca5c:	441c      	add	r4, r3
 801ca5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca60:	f108 0802 	add.w	r8, r8, #2
 801ca64:	441e      	add	r6, r3
 801ca66:	f109 39ff 	add.w	r9, r9, #4294967295
 801ca6a:	e74a      	b.n	801c902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801ca6c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca6e:	441c      	add	r4, r3
 801ca70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca72:	441e      	add	r6, r3
 801ca74:	9b07      	ldr	r3, [sp, #28]
 801ca76:	3302      	adds	r3, #2
 801ca78:	3d01      	subs	r5, #1
 801ca7a:	9307      	str	r3, [sp, #28]
 801ca7c:	e722      	b.n	801c8c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca7e:	d022      	beq.n	801cac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801ca80:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ca82:	1e6b      	subs	r3, r5, #1
 801ca84:	fb00 4003 	mla	r0, r0, r3, r4
 801ca88:	1400      	asrs	r0, r0, #16
 801ca8a:	f53f af37 	bmi.w	801c8fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ca8e:	3901      	subs	r1, #1
 801ca90:	4288      	cmp	r0, r1
 801ca92:	f6bf af33 	bge.w	801c8fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ca96:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ca98:	fb01 6303 	mla	r3, r1, r3, r6
 801ca9c:	141b      	asrs	r3, r3, #16
 801ca9e:	f53f af2d 	bmi.w	801c8fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801caa2:	3a01      	subs	r2, #1
 801caa4:	4293      	cmp	r3, r2
 801caa6:	f6bf af29 	bge.w	801c8fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801caaa:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801caae:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801cab2:	46a8      	mov	r8, r5
 801cab4:	f1b8 0f00 	cmp.w	r8, #0
 801cab8:	dc5e      	bgt.n	801cb78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801caba:	9b07      	ldr	r3, [sp, #28]
 801cabc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801cac0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801cac4:	9307      	str	r3, [sp, #28]
 801cac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cac8:	2b00      	cmp	r3, #0
 801caca:	f340 80f6 	ble.w	801ccba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801cace:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cad2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cad6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cada:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cadc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cae0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cae4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cae8:	eef0 6a48 	vmov.f32	s13, s16
 801caec:	ee69 7a27 	vmul.f32	s15, s18, s15
 801caf0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801caf4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801caf8:	ee16 4a90 	vmov	r4, s13
 801cafc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cb00:	eef0 6a68 	vmov.f32	s13, s17
 801cb04:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cb08:	ee18 2a10 	vmov	r2, s16
 801cb0c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cb10:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb14:	ee18 2a90 	vmov	r2, s17
 801cb18:	9327      	str	r3, [sp, #156]	; 0x9c
 801cb1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb20:	9328      	str	r3, [sp, #160]	; 0xa0
 801cb22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cb24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cb26:	3b01      	subs	r3, #1
 801cb28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb2c:	930a      	str	r3, [sp, #40]	; 0x28
 801cb2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb30:	ee16 6a90 	vmov	r6, s13
 801cb34:	bf14      	ite	ne
 801cb36:	461d      	movne	r5, r3
 801cb38:	4615      	moveq	r5, r2
 801cb3a:	eef0 8a67 	vmov.f32	s17, s15
 801cb3e:	eeb0 8a47 	vmov.f32	s16, s14
 801cb42:	e6b0      	b.n	801c8a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cb44:	f111 0a01 	adds.w	sl, r1, #1
 801cb48:	d487      	bmi.n	801ca5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cb4a:	45d6      	cmp	lr, sl
 801cb4c:	db85      	blt.n	801ca5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cb4e:	f110 0a01 	adds.w	sl, r0, #1
 801cb52:	d482      	bmi.n	801ca5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cb54:	4553      	cmp	r3, sl
 801cb56:	db80      	blt.n	801ca5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cb58:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cb5a:	9101      	str	r1, [sp, #4]
 801cb5c:	b21b      	sxth	r3, r3
 801cb5e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801cb62:	9300      	str	r3, [sp, #0]
 801cb64:	e9cd c704 	strd	ip, r7, [sp, #16]
 801cb68:	fa0f f38e 	sxth.w	r3, lr
 801cb6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cb6e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cb70:	4641      	mov	r1, r8
 801cb72:	f7ff fd95 	bl	801c6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801cb76:	e770      	b.n	801ca5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801cb78:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cb7a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801cb7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb80:	1430      	asrs	r0, r6, #16
 801cb82:	1423      	asrs	r3, r4, #16
 801cb84:	fb01 3000 	mla	r0, r1, r0, r3
 801cb88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb8a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801cb8e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801cb92:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cb96:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cb9a:	8858      	ldrh	r0, [r3, #2]
 801cb9c:	f1be 0f00 	cmp.w	lr, #0
 801cba0:	d00b      	beq.n	801cbba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801cba2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cba6:	3901      	subs	r1, #1
 801cba8:	0049      	lsls	r1, r1, #1
 801cbaa:	3102      	adds	r1, #2
 801cbac:	eb03 0b01 	add.w	fp, r3, r1
 801cbb0:	5a5b      	ldrh	r3, [r3, r1]
 801cbb2:	930e      	str	r3, [sp, #56]	; 0x38
 801cbb4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cbb8:	930f      	str	r3, [sp, #60]	; 0x3c
 801cbba:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801cbbe:	fb12 f30e 	smulbb	r3, r2, lr
 801cbc2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cbc6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cbca:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801cbce:	10db      	asrs	r3, r3, #3
 801cbd0:	ea41 010c 	orr.w	r1, r1, ip
 801cbd4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cbd8:	f1ce 0c10 	rsb	ip, lr, #16
 801cbdc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cbe0:	ebac 0c02 	sub.w	ip, ip, r2
 801cbe4:	ea4b 0000 	orr.w	r0, fp, r0
 801cbe8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cbec:	4350      	muls	r0, r2
 801cbee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cbf0:	9f08      	ldr	r7, [sp, #32]
 801cbf2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cbf6:	fb0c 0c01 	mla	ip, ip, r1, r0
 801cbfa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cbfe:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801cc02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cc04:	980e      	ldr	r0, [sp, #56]	; 0x38
 801cc06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cc0a:	0412      	lsls	r2, r2, #16
 801cc0c:	ea4b 0101 	orr.w	r1, fp, r1
 801cc10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cc14:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cc18:	fb03 c101 	mla	r1, r3, r1, ip
 801cc1c:	4302      	orrs	r2, r0
 801cc1e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cc22:	fb03 1202 	mla	r2, r3, r2, r1
 801cc26:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801cc2a:	0952      	lsrs	r2, r2, #5
 801cc2c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801cc30:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc34:	f8b9 2000 	ldrh.w	r2, [r9]
 801cc38:	ea4b 0303 	orr.w	r3, fp, r3
 801cc3c:	b29b      	uxth	r3, r3
 801cc3e:	1211      	asrs	r1, r2, #8
 801cc40:	1218      	asrs	r0, r3, #8
 801cc42:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cc46:	fb11 f107 	smulbb	r1, r1, r7
 801cc4a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801cc4e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cc52:	00d2      	lsls	r2, r2, #3
 801cc54:	fb00 100a 	mla	r0, r0, sl, r1
 801cc58:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801cc5c:	10d9      	asrs	r1, r3, #3
 801cc5e:	b2d2      	uxtb	r2, r2
 801cc60:	00db      	lsls	r3, r3, #3
 801cc62:	fb1c fc07 	smulbb	ip, ip, r7
 801cc66:	fb12 f207 	smulbb	r2, r2, r7
 801cc6a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cc6e:	b2db      	uxtb	r3, r3
 801cc70:	b280      	uxth	r0, r0
 801cc72:	fb01 c10a 	mla	r1, r1, sl, ip
 801cc76:	fb03 230a 	mla	r3, r3, sl, r2
 801cc7a:	b29b      	uxth	r3, r3
 801cc7c:	b289      	uxth	r1, r1
 801cc7e:	1c42      	adds	r2, r0, #1
 801cc80:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cc84:	f101 0c01 	add.w	ip, r1, #1
 801cc88:	1c5a      	adds	r2, r3, #1
 801cc8a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cc8e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cc92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cc94:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cc98:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801cca0:	4310      	orrs	r0, r2
 801cca2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cca6:	441c      	add	r4, r3
 801cca8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ccaa:	ea40 000c 	orr.w	r0, r0, ip
 801ccae:	f829 0b02 	strh.w	r0, [r9], #2
 801ccb2:	441e      	add	r6, r3
 801ccb4:	f108 38ff 	add.w	r8, r8, #4294967295
 801ccb8:	e6fc      	b.n	801cab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ccba:	b013      	add	sp, #76	; 0x4c
 801ccbc:	ecbd 8b08 	vpop	{d8-d11}
 801ccc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ccc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ccc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ccc8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801cccc:	fb06 5c03 	mla	ip, r6, r3, r5
 801ccd0:	2e00      	cmp	r6, #0
 801ccd2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801ccd6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801ccda:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801ccde:	8808      	ldrh	r0, [r1, #0]
 801cce0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801cce4:	db2e      	blt.n	801cd44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801cce6:	45b0      	cmp	r8, r6
 801cce8:	dd2c      	ble.n	801cd44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801ccea:	2d00      	cmp	r5, #0
 801ccec:	db28      	blt.n	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801ccee:	42ab      	cmp	r3, r5
 801ccf0:	dd26      	ble.n	801cd40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801ccf2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801ccf6:	1c6a      	adds	r2, r5, #1
 801ccf8:	d427      	bmi.n	801cd4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801ccfa:	4293      	cmp	r3, r2
 801ccfc:	dd25      	ble.n	801cd4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801ccfe:	b324      	cbz	r4, 801cd4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801cd00:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801cd04:	3601      	adds	r6, #1
 801cd06:	d424      	bmi.n	801cd52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801cd08:	45b0      	cmp	r8, r6
 801cd0a:	dd22      	ble.n	801cd52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801cd0c:	b31f      	cbz	r7, 801cd56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801cd0e:	2d00      	cmp	r5, #0
 801cd10:	db1d      	blt.n	801cd4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801cd12:	42ab      	cmp	r3, r5
 801cd14:	dd1b      	ble.n	801cd4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801cd16:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801cd1a:	3501      	adds	r5, #1
 801cd1c:	d405      	bmi.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cd1e:	42ab      	cmp	r3, r5
 801cd20:	dd03      	ble.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cd22:	b124      	cbz	r4, 801cd2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801cd24:	3301      	adds	r3, #1
 801cd26:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801cd2a:	2c0f      	cmp	r4, #15
 801cd2c:	d801      	bhi.n	801cd32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cd2e:	2f0f      	cmp	r7, #15
 801cd30:	d914      	bls.n	801cd5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801cd32:	4b27      	ldr	r3, [pc, #156]	; (801cdd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801cd34:	4a27      	ldr	r2, [pc, #156]	; (801cdd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801cd36:	4828      	ldr	r0, [pc, #160]	; (801cdd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801cd38:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801cd3c:	f004 f880 	bl	8020e40 <__assert_func>
 801cd40:	4684      	mov	ip, r0
 801cd42:	e7d8      	b.n	801ccf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801cd44:	4602      	mov	r2, r0
 801cd46:	4684      	mov	ip, r0
 801cd48:	e7dc      	b.n	801cd04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801cd4a:	4602      	mov	r2, r0
 801cd4c:	e7da      	b.n	801cd04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801cd4e:	4606      	mov	r6, r0
 801cd50:	e7e3      	b.n	801cd1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801cd52:	4606      	mov	r6, r0
 801cd54:	e7e9      	b.n	801cd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801cd56:	2c0f      	cmp	r4, #15
 801cd58:	d8eb      	bhi.n	801cd32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cd5a:	4606      	mov	r6, r0
 801cd5c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801cd60:	fb14 f307 	smulbb	r3, r4, r7
 801cd64:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801cd68:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801cd6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cd70:	10db      	asrs	r3, r3, #3
 801cd72:	ea45 0c0c 	orr.w	ip, r5, ip
 801cd76:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cd7a:	f1c7 0510 	rsb	r5, r7, #16
 801cd7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cd82:	1b2d      	subs	r5, r5, r4
 801cd84:	ea4e 0202 	orr.w	r2, lr, r2
 801cd88:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801cd8c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801cd90:	4354      	muls	r4, r2
 801cd92:	fb05 450c 	mla	r5, r5, ip, r4
 801cd96:	0404      	lsls	r4, r0, #16
 801cd98:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cd9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cda0:	4320      	orrs	r0, r4
 801cda2:	fb03 5400 	mla	r4, r3, r0, r5
 801cda6:	0430      	lsls	r0, r6, #16
 801cda8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cdac:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801cdb0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801cdb4:	4330      	orrs	r0, r6
 801cdb6:	fb07 4000 	mla	r0, r7, r0, r4
 801cdba:	0d43      	lsrs	r3, r0, #21
 801cdbc:	0940      	lsrs	r0, r0, #5
 801cdbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cdc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cdc6:	4318      	orrs	r0, r3
 801cdc8:	8008      	strh	r0, [r1, #0]
 801cdca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cdce:	bf00      	nop
 801cdd0:	0802556e 	.word	0x0802556e
 801cdd4:	08025be3 	.word	0x08025be3
 801cdd8:	080255f2 	.word	0x080255f2

0801cddc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cde0:	ed2d 8b08 	vpush	{d8-d11}
 801cde4:	b08f      	sub	sp, #60	; 0x3c
 801cde6:	461d      	mov	r5, r3
 801cde8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801cdea:	920c      	str	r2, [sp, #48]	; 0x30
 801cdec:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801cdf0:	9107      	str	r1, [sp, #28]
 801cdf2:	6859      	ldr	r1, [r3, #4]
 801cdf4:	681b      	ldr	r3, [r3, #0]
 801cdf6:	900d      	str	r0, [sp, #52]	; 0x34
 801cdf8:	fb01 2707 	mla	r7, r1, r7, r2
 801cdfc:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801ce00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ce02:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801ce06:	f8d3 8000 	ldr.w	r8, [r3]
 801ce0a:	eeb0 aa40 	vmov.f32	s20, s0
 801ce0e:	eef0 9a60 	vmov.f32	s19, s1
 801ce12:	eeb0 9a41 	vmov.f32	s18, s2
 801ce16:	eeb0 8a62 	vmov.f32	s16, s5
 801ce1a:	eef0 8a43 	vmov.f32	s17, s6
 801ce1e:	eef0 ba44 	vmov.f32	s23, s8
 801ce22:	eeb0 ba64 	vmov.f32	s22, s9
 801ce26:	eef0 aa45 	vmov.f32	s21, s10
 801ce2a:	9b07      	ldr	r3, [sp, #28]
 801ce2c:	2b00      	cmp	r3, #0
 801ce2e:	dc03      	bgt.n	801ce38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ce30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ce32:	2b00      	cmp	r3, #0
 801ce34:	f340 8181 	ble.w	801d13a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ce38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ce3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ce3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ce42:	1e48      	subs	r0, r1, #1
 801ce44:	f102 3cff 	add.w	ip, r2, #4294967295
 801ce48:	2d00      	cmp	r5, #0
 801ce4a:	f340 809b 	ble.w	801cf84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801ce4e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ce52:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ce56:	d406      	bmi.n	801ce66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ce58:	4586      	cmp	lr, r0
 801ce5a:	da04      	bge.n	801ce66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ce5c:	2b00      	cmp	r3, #0
 801ce5e:	db02      	blt.n	801ce66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ce60:	4563      	cmp	r3, ip
 801ce62:	f2c0 8090 	blt.w	801cf86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801ce66:	f11e 0e01 	adds.w	lr, lr, #1
 801ce6a:	f100 8084 	bmi.w	801cf76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ce6e:	4571      	cmp	r1, lr
 801ce70:	f2c0 8081 	blt.w	801cf76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ce74:	3301      	adds	r3, #1
 801ce76:	d47e      	bmi.n	801cf76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ce78:	429a      	cmp	r2, r3
 801ce7a:	db7c      	blt.n	801cf76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ce7c:	46aa      	mov	sl, r5
 801ce7e:	46b9      	mov	r9, r7
 801ce80:	f1ba 0f00 	cmp.w	sl, #0
 801ce84:	f340 8099 	ble.w	801cfba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801ce88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ce8a:	1421      	asrs	r1, r4, #16
 801ce8c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ce90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ce94:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ce98:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ce9c:	f100 80d0 	bmi.w	801d040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801cea0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cea4:	4559      	cmp	r1, fp
 801cea6:	f280 80cb 	bge.w	801d040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801ceaa:	2800      	cmp	r0, #0
 801ceac:	f2c0 80c8 	blt.w	801d040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801ceb0:	f103 3bff 	add.w	fp, r3, #4294967295
 801ceb4:	4558      	cmp	r0, fp
 801ceb6:	f280 80c3 	bge.w	801d040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801ceba:	fa0f fe8e 	sxth.w	lr, lr
 801cebe:	fb00 110e 	mla	r1, r0, lr, r1
 801cec2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801cec6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801ceca:	8841      	ldrh	r1, [r0, #2]
 801cecc:	f1bc 0f00 	cmp.w	ip, #0
 801ced0:	d00b      	beq.n	801ceea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801ced2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801ced6:	3b01      	subs	r3, #1
 801ced8:	005b      	lsls	r3, r3, #1
 801ceda:	3302      	adds	r3, #2
 801cedc:	eb00 0e03 	add.w	lr, r0, r3
 801cee0:	5ac3      	ldrh	r3, [r0, r3]
 801cee2:	9308      	str	r3, [sp, #32]
 801cee4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801cee8:	9309      	str	r3, [sp, #36]	; 0x24
 801ceea:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ceee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cef2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cef6:	ea40 000b 	orr.w	r0, r0, fp
 801cefa:	fb12 f30c 	smulbb	r3, r2, ip
 801cefe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cf02:	10db      	asrs	r3, r3, #3
 801cf04:	f1cc 0e10 	rsb	lr, ip, #16
 801cf08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cf0c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cf10:	ebae 0e02 	sub.w	lr, lr, r2
 801cf14:	ea4b 0101 	orr.w	r1, fp, r1
 801cf18:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cf1c:	4351      	muls	r1, r2
 801cf1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cf20:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801cf24:	fb0e 1e00 	mla	lr, lr, r0, r1
 801cf28:	0410      	lsls	r0, r2, #16
 801cf2a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801cf2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cf32:	4310      	orrs	r0, r2
 801cf34:	9a08      	ldr	r2, [sp, #32]
 801cf36:	9908      	ldr	r1, [sp, #32]
 801cf38:	0412      	lsls	r2, r2, #16
 801cf3a:	fb03 e000 	mla	r0, r3, r0, lr
 801cf3e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cf42:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801cf46:	ea42 020e 	orr.w	r2, r2, lr
 801cf4a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801cf4e:	fb03 0302 	mla	r3, r3, r2, r0
 801cf52:	0d5a      	lsrs	r2, r3, #21
 801cf54:	095b      	lsrs	r3, r3, #5
 801cf56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801cf5e:	4313      	orrs	r3, r2
 801cf60:	f8a9 3000 	strh.w	r3, [r9]
 801cf64:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801cf66:	441c      	add	r4, r3
 801cf68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cf6a:	f109 0902 	add.w	r9, r9, #2
 801cf6e:	441e      	add	r6, r3
 801cf70:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cf74:	e784      	b.n	801ce80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801cf76:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801cf78:	441c      	add	r4, r3
 801cf7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cf7c:	3d01      	subs	r5, #1
 801cf7e:	441e      	add	r6, r3
 801cf80:	3702      	adds	r7, #2
 801cf82:	e761      	b.n	801ce48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cf84:	d01d      	beq.n	801cfc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cf86:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801cf88:	1e6b      	subs	r3, r5, #1
 801cf8a:	fb00 4003 	mla	r0, r0, r3, r4
 801cf8e:	1400      	asrs	r0, r0, #16
 801cf90:	f53f af74 	bmi.w	801ce7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cf94:	3901      	subs	r1, #1
 801cf96:	4288      	cmp	r0, r1
 801cf98:	f6bf af70 	bge.w	801ce7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cf9c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801cf9e:	fb01 6303 	mla	r3, r1, r3, r6
 801cfa2:	141b      	asrs	r3, r3, #16
 801cfa4:	f53f af6a 	bmi.w	801ce7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cfa8:	3a01      	subs	r2, #1
 801cfaa:	4293      	cmp	r3, r2
 801cfac:	f6bf af66 	bge.w	801ce7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cfb0:	46a9      	mov	r9, r5
 801cfb2:	46ba      	mov	sl, r7
 801cfb4:	f1b9 0f00 	cmp.w	r9, #0
 801cfb8:	dc5a      	bgt.n	801d070 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cfba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801cfbe:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801cfc2:	9b07      	ldr	r3, [sp, #28]
 801cfc4:	2b00      	cmp	r3, #0
 801cfc6:	f340 80b8 	ble.w	801d13a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cfca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cfce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cfd2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cfd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cfd8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cfdc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cfe0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cfe4:	eef0 6a48 	vmov.f32	s13, s16
 801cfe8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cfec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cff0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cff4:	ee16 4a90 	vmov	r4, s13
 801cff8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cffc:	eef0 6a68 	vmov.f32	s13, s17
 801d000:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d004:	ee18 2a10 	vmov	r2, s16
 801d008:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d00c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d010:	ee18 2a90 	vmov	r2, s17
 801d014:	9323      	str	r3, [sp, #140]	; 0x8c
 801d016:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d018:	fb92 f3f3 	sdiv	r3, r2, r3
 801d01c:	9324      	str	r3, [sp, #144]	; 0x90
 801d01e:	9b07      	ldr	r3, [sp, #28]
 801d020:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d022:	3b01      	subs	r3, #1
 801d024:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d028:	9307      	str	r3, [sp, #28]
 801d02a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d02c:	ee16 6a90 	vmov	r6, s13
 801d030:	bf14      	ite	ne
 801d032:	461d      	movne	r5, r3
 801d034:	4615      	moveq	r5, r2
 801d036:	eef0 8a67 	vmov.f32	s17, s15
 801d03a:	eeb0 8a47 	vmov.f32	s16, s14
 801d03e:	e6f4      	b.n	801ce2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801d040:	f111 0b01 	adds.w	fp, r1, #1
 801d044:	d48e      	bmi.n	801cf64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d046:	45de      	cmp	lr, fp
 801d048:	db8c      	blt.n	801cf64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d04a:	f110 0b01 	adds.w	fp, r0, #1
 801d04e:	d489      	bmi.n	801cf64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d050:	455b      	cmp	r3, fp
 801d052:	db87      	blt.n	801cf64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d054:	b21b      	sxth	r3, r3
 801d056:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d05a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d05e:	9300      	str	r3, [sp, #0]
 801d060:	4642      	mov	r2, r8
 801d062:	fa0f f38e 	sxth.w	r3, lr
 801d066:	4649      	mov	r1, r9
 801d068:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d06a:	f7ff fe2b 	bl	801ccc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801d06e:	e779      	b.n	801cf64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d070:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d072:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d076:	1420      	asrs	r0, r4, #16
 801d078:	1431      	asrs	r1, r6, #16
 801d07a:	fb03 0101 	mla	r1, r3, r1, r0
 801d07e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d082:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d086:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801d08a:	8841      	ldrh	r1, [r0, #2]
 801d08c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d090:	f1be 0f00 	cmp.w	lr, #0
 801d094:	d00b      	beq.n	801d0ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801d096:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801d09a:	3b01      	subs	r3, #1
 801d09c:	005b      	lsls	r3, r3, #1
 801d09e:	3302      	adds	r3, #2
 801d0a0:	eb00 0b03 	add.w	fp, r0, r3
 801d0a4:	5ac3      	ldrh	r3, [r0, r3]
 801d0a6:	930a      	str	r3, [sp, #40]	; 0x28
 801d0a8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d0ac:	930b      	str	r3, [sp, #44]	; 0x2c
 801d0ae:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801d0b2:	fb12 f30e 	smulbb	r3, r2, lr
 801d0b6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d0ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d0be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d0c2:	10db      	asrs	r3, r3, #3
 801d0c4:	ea40 000c 	orr.w	r0, r0, ip
 801d0c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d0cc:	f1ce 0c10 	rsb	ip, lr, #16
 801d0d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d0d4:	ebac 0c02 	sub.w	ip, ip, r2
 801d0d8:	ea4b 0101 	orr.w	r1, fp, r1
 801d0dc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d0e0:	4351      	muls	r1, r2
 801d0e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d0e4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d0e8:	fb0c 1c00 	mla	ip, ip, r0, r1
 801d0ec:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d0f0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801d0f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d0f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d0f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d0fc:	0412      	lsls	r2, r2, #16
 801d0fe:	ea4b 0000 	orr.w	r0, fp, r0
 801d102:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d106:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801d10a:	fb03 c000 	mla	r0, r3, r0, ip
 801d10e:	ea42 0b0b 	orr.w	fp, r2, fp
 801d112:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d116:	fb03 000b 	mla	r0, r3, fp, r0
 801d11a:	0d43      	lsrs	r3, r0, #21
 801d11c:	0940      	lsrs	r0, r0, #5
 801d11e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d122:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d126:	4318      	orrs	r0, r3
 801d128:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801d12a:	f82a 0b02 	strh.w	r0, [sl], #2
 801d12e:	441c      	add	r4, r3
 801d130:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d132:	f109 39ff 	add.w	r9, r9, #4294967295
 801d136:	441e      	add	r6, r3
 801d138:	e73c      	b.n	801cfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801d13a:	b00f      	add	sp, #60	; 0x3c
 801d13c:	ecbd 8b08 	vpop	{d8-d11}
 801d140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d148:	880e      	ldrh	r6, [r1, #0]
 801d14a:	b085      	sub	sp, #20
 801d14c:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801d150:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801d154:	4690      	mov	r8, r2
 801d156:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801d15a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801d15e:	9200      	str	r2, [sp, #0]
 801d160:	00f6      	lsls	r6, r6, #3
 801d162:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801d166:	9201      	str	r2, [sp, #4]
 801d168:	2c00      	cmp	r4, #0
 801d16a:	b2f2      	uxtb	r2, r6
 801d16c:	fb04 5603 	mla	r6, r4, r3, r5
 801d170:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d174:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801d178:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801d17c:	9202      	str	r2, [sp, #8]
 801d17e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801d182:	db36      	blt.n	801d1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801d184:	45a6      	cmp	lr, r4
 801d186:	dd34      	ble.n	801d1f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801d188:	2d00      	cmp	r5, #0
 801d18a:	db30      	blt.n	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801d18c:	42ab      	cmp	r3, r5
 801d18e:	dd2e      	ble.n	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801d190:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801d194:	1c6e      	adds	r6, r5, #1
 801d196:	d42f      	bmi.n	801d1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801d198:	42b3      	cmp	r3, r6
 801d19a:	dd2d      	ble.n	801d1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801d19c:	b370      	cbz	r0, 801d1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801d19e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801d1a2:	3401      	adds	r4, #1
 801d1a4:	d42e      	bmi.n	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801d1a6:	45a6      	cmp	lr, r4
 801d1a8:	dd2c      	ble.n	801d204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801d1aa:	b377      	cbz	r7, 801d20a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801d1ac:	2d00      	cmp	r5, #0
 801d1ae:	db27      	blt.n	801d200 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801d1b0:	42ab      	cmp	r3, r5
 801d1b2:	dd25      	ble.n	801d200 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801d1b4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d1b8:	3501      	adds	r5, #1
 801d1ba:	d429      	bmi.n	801d210 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801d1bc:	42ab      	cmp	r3, r5
 801d1be:	dd27      	ble.n	801d210 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801d1c0:	b340      	cbz	r0, 801d214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801d1c2:	3301      	adds	r3, #1
 801d1c4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801d1c8:	280f      	cmp	r0, #15
 801d1ca:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801d1ce:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801d1d2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d1d6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801d1da:	d801      	bhi.n	801d1e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801d1dc:	2f0f      	cmp	r7, #15
 801d1de:	d91b      	bls.n	801d218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801d1e0:	4b84      	ldr	r3, [pc, #528]	; (801d3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801d1e2:	4a85      	ldr	r2, [pc, #532]	; (801d3f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801d1e4:	4885      	ldr	r0, [pc, #532]	; (801d3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801d1e6:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801d1ea:	f003 fe29 	bl	8020e40 <__assert_func>
 801d1ee:	2200      	movs	r2, #0
 801d1f0:	e7d0      	b.n	801d194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801d1f2:	2600      	movs	r6, #0
 801d1f4:	4632      	mov	r2, r6
 801d1f6:	e7d4      	b.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d1f8:	2600      	movs	r6, #0
 801d1fa:	e7d2      	b.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d1fc:	4606      	mov	r6, r0
 801d1fe:	e7d0      	b.n	801d1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801d200:	2400      	movs	r4, #0
 801d202:	e7d9      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801d204:	2300      	movs	r3, #0
 801d206:	461c      	mov	r4, r3
 801d208:	e7de      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d20a:	463b      	mov	r3, r7
 801d20c:	463c      	mov	r4, r7
 801d20e:	e7db      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d210:	2300      	movs	r3, #0
 801d212:	e7d9      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d214:	4603      	mov	r3, r0
 801d216:	e7d7      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801d218:	b280      	uxth	r0, r0
 801d21a:	b2bf      	uxth	r7, r7
 801d21c:	fb00 fe07 	mul.w	lr, r0, r7
 801d220:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801d224:	0100      	lsls	r0, r0, #4
 801d226:	eba0 0c0e 	sub.w	ip, r0, lr
 801d22a:	b2bf      	uxth	r7, r7
 801d22c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801d230:	fa1f fc8c 	uxth.w	ip, ip
 801d234:	1bed      	subs	r5, r5, r7
 801d236:	b2ad      	uxth	r5, r5
 801d238:	fb0c f00a 	mul.w	r0, ip, sl
 801d23c:	fb05 000b 	mla	r0, r5, fp, r0
 801d240:	fb07 0009 	mla	r0, r7, r9, r0
 801d244:	fb0e 0008 	mla	r0, lr, r8, r0
 801d248:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d24c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d250:	9003      	str	r0, [sp, #12]
 801d252:	d018      	beq.n	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801d254:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d258:	fb0b f000 	mul.w	r0, fp, r0
 801d25c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d260:	fb0b fb02 	mul.w	fp, fp, r2
 801d264:	0a02      	lsrs	r2, r0, #8
 801d266:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d26a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801d26e:	4402      	add	r2, r0
 801d270:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801d274:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d278:	0a12      	lsrs	r2, r2, #8
 801d27a:	0a00      	lsrs	r0, r0, #8
 801d27c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d280:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d284:	4302      	orrs	r2, r0
 801d286:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d28a:	d019      	beq.n	801d2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801d28c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801d290:	fb0a fb0b 	mul.w	fp, sl, fp
 801d294:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d298:	fb0a fa06 	mul.w	sl, sl, r6
 801d29c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801d2a0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d2a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d2a8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801d2ac:	445e      	add	r6, fp
 801d2ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d2b2:	0a36      	lsrs	r6, r6, #8
 801d2b4:	0a00      	lsrs	r0, r0, #8
 801d2b6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d2ba:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d2be:	4306      	orrs	r6, r0
 801d2c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d2c4:	d019      	beq.n	801d2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801d2c6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801d2ca:	fb09 fa0a 	mul.w	sl, r9, sl
 801d2ce:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d2d2:	fb09 f904 	mul.w	r9, r9, r4
 801d2d6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801d2da:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d2de:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d2e2:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801d2e6:	4454      	add	r4, sl
 801d2e8:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801d2ec:	0a24      	lsrs	r4, r4, #8
 801d2ee:	0a00      	lsrs	r0, r0, #8
 801d2f0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d2f4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d2f8:	4304      	orrs	r4, r0
 801d2fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d2fe:	d019      	beq.n	801d334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801d300:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801d304:	fb08 f909 	mul.w	r9, r8, r9
 801d308:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d30c:	fb08 f803 	mul.w	r8, r8, r3
 801d310:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801d314:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d318:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801d31c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801d320:	444b      	add	r3, r9
 801d322:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d326:	0a1b      	lsrs	r3, r3, #8
 801d328:	0a00      	lsrs	r0, r0, #8
 801d32a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d32e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d332:	4303      	orrs	r3, r0
 801d334:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801d338:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d33c:	fb0c f808 	mul.w	r8, ip, r8
 801d340:	fb05 8800 	mla	r8, r5, r0, r8
 801d344:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801d348:	fb07 8800 	mla	r8, r7, r0, r8
 801d34c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801d350:	fb0e 8000 	mla	r0, lr, r0, r8
 801d354:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d358:	fb0c f606 	mul.w	r6, ip, r6
 801d35c:	0a00      	lsrs	r0, r0, #8
 801d35e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d362:	fb05 6202 	mla	r2, r5, r2, r6
 801d366:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801d36a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801d36e:	fb07 2700 	mla	r7, r7, r0, r2
 801d372:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801d376:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801d37a:	9c03      	ldr	r4, [sp, #12]
 801d37c:	9e01      	ldr	r6, [sp, #4]
 801d37e:	b29b      	uxth	r3, r3
 801d380:	435c      	muls	r4, r3
 801d382:	fb0e 7000 	mla	r0, lr, r0, r7
 801d386:	1c62      	adds	r2, r4, #1
 801d388:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d38c:	0a00      	lsrs	r0, r0, #8
 801d38e:	9c00      	ldr	r4, [sp, #0]
 801d390:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d394:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801d398:	ea48 0000 	orr.w	r0, r8, r0
 801d39c:	b2d2      	uxtb	r2, r2
 801d39e:	fb14 f402 	smulbb	r4, r4, r2
 801d3a2:	0c05      	lsrs	r5, r0, #16
 801d3a4:	fb05 4503 	mla	r5, r5, r3, r4
 801d3a8:	fb16 f602 	smulbb	r6, r6, r2
 801d3ac:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801d3b0:	fb04 6403 	mla	r4, r4, r3, r6
 801d3b4:	9e02      	ldr	r6, [sp, #8]
 801d3b6:	b2c0      	uxtb	r0, r0
 801d3b8:	fb16 f202 	smulbb	r2, r6, r2
 801d3bc:	fb00 2303 	mla	r3, r0, r3, r2
 801d3c0:	b2ad      	uxth	r5, r5
 801d3c2:	b298      	uxth	r0, r3
 801d3c4:	1c43      	adds	r3, r0, #1
 801d3c6:	1c6a      	adds	r2, r5, #1
 801d3c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d3cc:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801d3d0:	b2a4      	uxth	r4, r4
 801d3d2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d3d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d3da:	4313      	orrs	r3, r2
 801d3dc:	1c62      	adds	r2, r4, #1
 801d3de:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d3e2:	0952      	lsrs	r2, r2, #5
 801d3e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d3e8:	4313      	orrs	r3, r2
 801d3ea:	800b      	strh	r3, [r1, #0]
 801d3ec:	b005      	add	sp, #20
 801d3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3f2:	bf00      	nop
 801d3f4:	0802556e 	.word	0x0802556e
 801d3f8:	08025b3a 	.word	0x08025b3a
 801d3fc:	080255f2 	.word	0x080255f2

0801d400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d404:	ed2d 8b08 	vpush	{d8-d11}
 801d408:	b09d      	sub	sp, #116	; 0x74
 801d40a:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801d40e:	9219      	str	r2, [sp, #100]	; 0x64
 801d410:	9307      	str	r3, [sp, #28]
 801d412:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801d414:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801d418:	931a      	str	r3, [sp, #104]	; 0x68
 801d41a:	9117      	str	r1, [sp, #92]	; 0x5c
 801d41c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801d420:	901b      	str	r0, [sp, #108]	; 0x6c
 801d422:	6850      	ldr	r0, [r2, #4]
 801d424:	6812      	ldr	r2, [r2, #0]
 801d426:	fb00 1303 	mla	r3, r0, r3, r1
 801d42a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d42e:	930a      	str	r3, [sp, #40]	; 0x28
 801d430:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d432:	681b      	ldr	r3, [r3, #0]
 801d434:	9310      	str	r3, [sp, #64]	; 0x40
 801d436:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d43a:	930b      	str	r3, [sp, #44]	; 0x2c
 801d43c:	eeb0 aa40 	vmov.f32	s20, s0
 801d440:	eef0 9a60 	vmov.f32	s19, s1
 801d444:	eeb0 9a41 	vmov.f32	s18, s2
 801d448:	eeb0 8a62 	vmov.f32	s16, s5
 801d44c:	eef0 8a43 	vmov.f32	s17, s6
 801d450:	eef0 ba44 	vmov.f32	s23, s8
 801d454:	eeb0 ba64 	vmov.f32	s22, s9
 801d458:	eef0 aa45 	vmov.f32	s21, s10
 801d45c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d45e:	2b00      	cmp	r3, #0
 801d460:	dc03      	bgt.n	801d46a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801d462:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d464:	2b00      	cmp	r3, #0
 801d466:	f340 8375 	ble.w	801db54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801d46a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d46c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d470:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d474:	1e48      	subs	r0, r1, #1
 801d476:	1e57      	subs	r7, r2, #1
 801d478:	9b07      	ldr	r3, [sp, #28]
 801d47a:	2b00      	cmp	r3, #0
 801d47c:	f340 818e 	ble.w	801d79c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801d480:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d484:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d488:	d406      	bmi.n	801d498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d48a:	4584      	cmp	ip, r0
 801d48c:	da04      	bge.n	801d498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d48e:	2b00      	cmp	r3, #0
 801d490:	db02      	blt.n	801d498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d492:	42bb      	cmp	r3, r7
 801d494:	f2c0 8183 	blt.w	801d79e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801d498:	f11c 0c01 	adds.w	ip, ip, #1
 801d49c:	f100 8173 	bmi.w	801d786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d4a0:	4561      	cmp	r1, ip
 801d4a2:	f2c0 8170 	blt.w	801d786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d4a6:	3301      	adds	r3, #1
 801d4a8:	f100 816d 	bmi.w	801d786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d4ac:	429a      	cmp	r2, r3
 801d4ae:	f2c0 816a 	blt.w	801d786 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d4b2:	9b07      	ldr	r3, [sp, #28]
 801d4b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d4b6:	9318      	str	r3, [sp, #96]	; 0x60
 801d4b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d4ba:	2b00      	cmp	r3, #0
 801d4bc:	f340 818c 	ble.w	801d7d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801d4c0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801d4c2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d4c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d4c8:	689b      	ldr	r3, [r3, #8]
 801d4ca:	1422      	asrs	r2, r4, #16
 801d4cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d4d0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d4d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d4d8:	f100 81cd 	bmi.w	801d876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d4dc:	f103 38ff 	add.w	r8, r3, #4294967295
 801d4e0:	4542      	cmp	r2, r8
 801d4e2:	f280 81c8 	bge.w	801d876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d4e6:	f1bc 0f00 	cmp.w	ip, #0
 801d4ea:	f2c0 81c4 	blt.w	801d876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d4ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d4f2:	45c4      	cmp	ip, r8
 801d4f4:	f280 81bf 	bge.w	801d876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d4f8:	b21b      	sxth	r3, r3
 801d4fa:	fb0c 2203 	mla	r2, ip, r3, r2
 801d4fe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d500:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d504:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d508:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d50c:	2800      	cmp	r0, #0
 801d50e:	f000 81a9 	beq.w	801d864 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801d512:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d516:	950c      	str	r5, [sp, #48]	; 0x30
 801d518:	0e2d      	lsrs	r5, r5, #24
 801d51a:	9513      	str	r5, [sp, #76]	; 0x4c
 801d51c:	b181      	cbz	r1, 801d540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d51e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d522:	3b01      	subs	r3, #1
 801d524:	009b      	lsls	r3, r3, #2
 801d526:	3304      	adds	r3, #4
 801d528:	eb08 0c03 	add.w	ip, r8, r3
 801d52c:	f858 3003 	ldr.w	r3, [r8, r3]
 801d530:	9308      	str	r3, [sp, #32]
 801d532:	0e1b      	lsrs	r3, r3, #24
 801d534:	9311      	str	r3, [sp, #68]	; 0x44
 801d536:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d53a:	930d      	str	r3, [sp, #52]	; 0x34
 801d53c:	0e1b      	lsrs	r3, r3, #24
 801d53e:	9314      	str	r3, [sp, #80]	; 0x50
 801d540:	b280      	uxth	r0, r0
 801d542:	b289      	uxth	r1, r1
 801d544:	fb00 f901 	mul.w	r9, r0, r1
 801d548:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d54c:	0100      	lsls	r0, r0, #4
 801d54e:	eba0 0809 	sub.w	r8, r0, r9
 801d552:	b289      	uxth	r1, r1
 801d554:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d558:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d55a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d55c:	fa1f f888 	uxth.w	r8, r8
 801d560:	1a5b      	subs	r3, r3, r1
 801d562:	b29b      	uxth	r3, r3
 801d564:	fb08 f000 	mul.w	r0, r8, r0
 801d568:	fb03 000e 	mla	r0, r3, lr, r0
 801d56c:	fb01 0005 	mla	r0, r1, r5, r0
 801d570:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d572:	fb09 0005 	mla	r0, r9, r5, r0
 801d576:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d57a:	2800      	cmp	r0, #0
 801d57c:	f000 80fa 	beq.w	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d580:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d584:	d01b      	beq.n	801d5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801d586:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d58a:	fb0e fa0a 	mul.w	sl, lr, sl
 801d58e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d592:	fb0e fe02 	mul.w	lr, lr, r2
 801d596:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d59a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d59e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d5a2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d5a6:	4452      	add	r2, sl
 801d5a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d5ac:	0a12      	lsrs	r2, r2, #8
 801d5ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d5b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d5b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d5ba:	ea42 020c 	orr.w	r2, r2, ip
 801d5be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5c0:	2dff      	cmp	r5, #255	; 0xff
 801d5c2:	d021      	beq.n	801d608 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801d5c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d5c6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d5ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5cc:	fb05 fb0b 	mul.w	fp, r5, fp
 801d5d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d5d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d5d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d5dc:	fb05 fa0a 	mul.w	sl, r5, sl
 801d5e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d5e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d5e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d5ec:	44de      	add	lr, fp
 801d5ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d5f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d5f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d5fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d5fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d602:	ea4e 050a 	orr.w	r5, lr, sl
 801d606:	950c      	str	r5, [sp, #48]	; 0x30
 801d608:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d60a:	2dff      	cmp	r5, #255	; 0xff
 801d60c:	d021      	beq.n	801d652 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d60e:	9d08      	ldr	r5, [sp, #32]
 801d610:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d614:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d616:	fb05 fb0b 	mul.w	fp, r5, fp
 801d61a:	9d08      	ldr	r5, [sp, #32]
 801d61c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d620:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d622:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d626:	fb05 fa0a 	mul.w	sl, r5, sl
 801d62a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d62e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d632:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d636:	44de      	add	lr, fp
 801d638:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d63c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d644:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d648:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d64c:	ea4e 050a 	orr.w	r5, lr, sl
 801d650:	9508      	str	r5, [sp, #32]
 801d652:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d654:	2dff      	cmp	r5, #255	; 0xff
 801d656:	d021      	beq.n	801d69c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801d658:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d65a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d65e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d660:	fb05 fb0b 	mul.w	fp, r5, fp
 801d664:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d666:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d66a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d66c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d670:	fb05 fa0a 	mul.w	sl, r5, sl
 801d674:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d678:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d67c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d680:	44de      	add	lr, fp
 801d682:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d686:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d68a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d68e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d692:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d696:	ea4e 050a 	orr.w	r5, lr, sl
 801d69a:	950d      	str	r5, [sp, #52]	; 0x34
 801d69c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d69e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d6a2:	9d08      	ldr	r5, [sp, #32]
 801d6a4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d6a8:	fb08 fc0c 	mul.w	ip, r8, ip
 801d6ac:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d6b0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d6b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801d6b6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d6ba:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d6be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d6c0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d6c4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d6c8:	fb08 f80e 	mul.w	r8, r8, lr
 801d6cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d6d0:	fb03 8202 	mla	r2, r3, r2, r8
 801d6d4:	9b08      	ldr	r3, [sp, #32]
 801d6d6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d6d8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d6dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d6de:	fb01 220a 	mla	r2, r1, sl, r2
 801d6e2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d6e6:	fb09 2901 	mla	r9, r9, r1, r2
 801d6ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d6ec:	883b      	ldrh	r3, [r7, #0]
 801d6ee:	4342      	muls	r2, r0
 801d6f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d6f4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6f8:	1c50      	adds	r0, r2, #1
 801d6fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d6fe:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d702:	ea4c 0c09 	orr.w	ip, ip, r9
 801d706:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d70a:	1219      	asrs	r1, r3, #8
 801d70c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d710:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d714:	b2c0      	uxtb	r0, r0
 801d716:	fb12 f205 	smulbb	r2, r2, r5
 801d71a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d71e:	fb01 2100 	mla	r1, r1, r0, r2
 801d722:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d726:	10da      	asrs	r2, r3, #3
 801d728:	fa5f fc8c 	uxtb.w	ip, ip
 801d72c:	00db      	lsls	r3, r3, #3
 801d72e:	fb1c fc05 	smulbb	ip, ip, r5
 801d732:	b2db      	uxtb	r3, r3
 801d734:	b289      	uxth	r1, r1
 801d736:	fb03 c300 	mla	r3, r3, r0, ip
 801d73a:	fa1f fc83 	uxth.w	ip, r3
 801d73e:	1c4b      	adds	r3, r1, #1
 801d740:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d744:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d748:	fb1e fe05 	smulbb	lr, lr, r5
 801d74c:	f10c 0301 	add.w	r3, ip, #1
 801d750:	fb02 e200 	mla	r2, r2, r0, lr
 801d754:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d758:	b292      	uxth	r2, r2
 801d75a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d75e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d762:	430b      	orrs	r3, r1
 801d764:	1c51      	adds	r1, r2, #1
 801d766:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d76a:	0952      	lsrs	r2, r2, #5
 801d76c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d770:	4313      	orrs	r3, r2
 801d772:	803b      	strh	r3, [r7, #0]
 801d774:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d776:	441c      	add	r4, r3
 801d778:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d77a:	441e      	add	r6, r3
 801d77c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d77e:	3b01      	subs	r3, #1
 801d780:	3702      	adds	r7, #2
 801d782:	9318      	str	r3, [sp, #96]	; 0x60
 801d784:	e698      	b.n	801d4b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d786:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d788:	441c      	add	r4, r3
 801d78a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d78c:	441e      	add	r6, r3
 801d78e:	9b07      	ldr	r3, [sp, #28]
 801d790:	3b01      	subs	r3, #1
 801d792:	9307      	str	r3, [sp, #28]
 801d794:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d796:	3302      	adds	r3, #2
 801d798:	930a      	str	r3, [sp, #40]	; 0x28
 801d79a:	e66d      	b.n	801d478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d79c:	d023      	beq.n	801d7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801d79e:	9b07      	ldr	r3, [sp, #28]
 801d7a0:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801d7a2:	3b01      	subs	r3, #1
 801d7a4:	fb00 4003 	mla	r0, r0, r3, r4
 801d7a8:	1400      	asrs	r0, r0, #16
 801d7aa:	f53f ae82 	bmi.w	801d4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d7ae:	3901      	subs	r1, #1
 801d7b0:	4288      	cmp	r0, r1
 801d7b2:	f6bf ae7e 	bge.w	801d4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d7b6:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801d7b8:	fb01 6303 	mla	r3, r1, r3, r6
 801d7bc:	141b      	asrs	r3, r3, #16
 801d7be:	f53f ae78 	bmi.w	801d4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d7c2:	3a01      	subs	r2, #1
 801d7c4:	4293      	cmp	r3, r2
 801d7c6:	f6bf ae74 	bge.w	801d4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d7ca:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d7ce:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d7d2:	f1bb 0f00 	cmp.w	fp, #0
 801d7d6:	dc6c      	bgt.n	801d8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801d7d8:	9b07      	ldr	r3, [sp, #28]
 801d7da:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d7de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d7e0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d7e4:	930a      	str	r3, [sp, #40]	; 0x28
 801d7e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d7e8:	2b00      	cmp	r3, #0
 801d7ea:	f340 81b3 	ble.w	801db54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801d7ee:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d7f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d7f6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d7fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d7fc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d800:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d804:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d808:	eef0 6a48 	vmov.f32	s13, s16
 801d80c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d810:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d814:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d818:	ee16 4a90 	vmov	r4, s13
 801d81c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d820:	eef0 6a68 	vmov.f32	s13, s17
 801d824:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d828:	ee18 2a10 	vmov	r2, s16
 801d82c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d830:	fb92 f3f3 	sdiv	r3, r2, r3
 801d834:	ee18 2a90 	vmov	r2, s17
 801d838:	9331      	str	r3, [sp, #196]	; 0xc4
 801d83a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d83c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d840:	9332      	str	r3, [sp, #200]	; 0xc8
 801d842:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d844:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d846:	3b01      	subs	r3, #1
 801d848:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d84c:	9317      	str	r3, [sp, #92]	; 0x5c
 801d84e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d850:	bf08      	it	eq
 801d852:	4613      	moveq	r3, r2
 801d854:	ee16 6a90 	vmov	r6, s13
 801d858:	9307      	str	r3, [sp, #28]
 801d85a:	eef0 8a67 	vmov.f32	s17, s15
 801d85e:	eeb0 8a47 	vmov.f32	s16, s14
 801d862:	e5fb      	b.n	801d45c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801d864:	2900      	cmp	r1, #0
 801d866:	f43f ae6b 	beq.w	801d540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d86a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d86e:	9308      	str	r3, [sp, #32]
 801d870:	0e1b      	lsrs	r3, r3, #24
 801d872:	9311      	str	r3, [sp, #68]	; 0x44
 801d874:	e664      	b.n	801d540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d876:	f112 0801 	adds.w	r8, r2, #1
 801d87a:	f53f af7b 	bmi.w	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d87e:	4543      	cmp	r3, r8
 801d880:	f6ff af78 	blt.w	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d884:	f11c 0801 	adds.w	r8, ip, #1
 801d888:	f53f af74 	bmi.w	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d88c:	45c6      	cmp	lr, r8
 801d88e:	f6ff af71 	blt.w	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d892:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d894:	9201      	str	r2, [sp, #4]
 801d896:	fa0f f28e 	sxth.w	r2, lr
 801d89a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d89e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d8a2:	9200      	str	r2, [sp, #0]
 801d8a4:	b21b      	sxth	r3, r3
 801d8a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d8a8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d8aa:	4639      	mov	r1, r7
 801d8ac:	f7ff fc4a 	bl	801d144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d8b0:	e760      	b.n	801d774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d8b2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d8b4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d8ba:	1427      	asrs	r7, r4, #16
 801d8bc:	1433      	asrs	r3, r6, #16
 801d8be:	fb01 7303 	mla	r3, r1, r3, r7
 801d8c2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d8c6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d8ca:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d8ce:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d8d2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d8d6:	2a00      	cmp	r2, #0
 801d8d8:	f000 8133 	beq.w	801db42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801d8dc:	687d      	ldr	r5, [r7, #4]
 801d8de:	950e      	str	r5, [sp, #56]	; 0x38
 801d8e0:	0e2d      	lsrs	r5, r5, #24
 801d8e2:	9515      	str	r5, [sp, #84]	; 0x54
 801d8e4:	b178      	cbz	r0, 801d906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d8e6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d8ea:	3901      	subs	r1, #1
 801d8ec:	0089      	lsls	r1, r1, #2
 801d8ee:	3104      	adds	r1, #4
 801d8f0:	eb07 0e01 	add.w	lr, r7, r1
 801d8f4:	5879      	ldr	r1, [r7, r1]
 801d8f6:	9109      	str	r1, [sp, #36]	; 0x24
 801d8f8:	0e09      	lsrs	r1, r1, #24
 801d8fa:	9112      	str	r1, [sp, #72]	; 0x48
 801d8fc:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d900:	910f      	str	r1, [sp, #60]	; 0x3c
 801d902:	0e09      	lsrs	r1, r1, #24
 801d904:	9116      	str	r1, [sp, #88]	; 0x58
 801d906:	b292      	uxth	r2, r2
 801d908:	b280      	uxth	r0, r0
 801d90a:	fb02 f800 	mul.w	r8, r2, r0
 801d90e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d912:	0112      	lsls	r2, r2, #4
 801d914:	eba2 0e08 	sub.w	lr, r2, r8
 801d918:	b280      	uxth	r0, r0
 801d91a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d91e:	9915      	ldr	r1, [sp, #84]	; 0x54
 801d920:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d922:	fa1f fe8e 	uxth.w	lr, lr
 801d926:	1a12      	subs	r2, r2, r0
 801d928:	b292      	uxth	r2, r2
 801d92a:	fb0e f101 	mul.w	r1, lr, r1
 801d92e:	fb02 110c 	mla	r1, r2, ip, r1
 801d932:	fb00 1105 	mla	r1, r0, r5, r1
 801d936:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d938:	fb08 1105 	mla	r1, r8, r5, r1
 801d93c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d940:	2900      	cmp	r1, #0
 801d942:	f000 80f5 	beq.w	801db30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d946:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d94a:	d019      	beq.n	801d980 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801d94c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d950:	fb0c fa0a 	mul.w	sl, ip, sl
 801d954:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d958:	fb0c fc03 	mul.w	ip, ip, r3
 801d95c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d960:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d964:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d968:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d96c:	4453      	add	r3, sl
 801d96e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d972:	0a1b      	lsrs	r3, r3, #8
 801d974:	0a3f      	lsrs	r7, r7, #8
 801d976:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d97a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d97e:	433b      	orrs	r3, r7
 801d980:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d982:	2dff      	cmp	r5, #255	; 0xff
 801d984:	d020      	beq.n	801d9c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801d986:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d988:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d98c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d98e:	436f      	muls	r7, r5
 801d990:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d992:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d996:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d998:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d99c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d9a0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d9a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d9a8:	44bc      	add	ip, r7
 801d9aa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d9ae:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d9b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d9b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d9be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9c2:	ea4c 050a 	orr.w	r5, ip, sl
 801d9c6:	950e      	str	r5, [sp, #56]	; 0x38
 801d9c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9ca:	2dff      	cmp	r5, #255	; 0xff
 801d9cc:	d020      	beq.n	801da10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801d9ce:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d9d0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d9d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9d6:	436f      	muls	r7, r5
 801d9d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d9da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d9de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d9e4:	fb05 fa0a 	mul.w	sl, r5, sl
 801d9e8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d9ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d9f0:	44bc      	add	ip, r7
 801d9f2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d9f6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d9fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d9fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da0a:	ea4c 050a 	orr.w	r5, ip, sl
 801da0e:	9509      	str	r5, [sp, #36]	; 0x24
 801da10:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801da12:	2dff      	cmp	r5, #255	; 0xff
 801da14:	d020      	beq.n	801da58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801da16:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801da18:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801da1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801da1e:	436f      	muls	r7, r5
 801da20:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801da22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801da26:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801da28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801da2c:	fb05 fa0a 	mul.w	sl, r5, sl
 801da30:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801da34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da38:	44bc      	add	ip, r7
 801da3a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801da3e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801da42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801da46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da52:	ea4c 050a 	orr.w	r5, ip, sl
 801da56:	950f      	str	r5, [sp, #60]	; 0x3c
 801da58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801da5a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801da5e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801da60:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801da64:	fb0e f707 	mul.w	r7, lr, r7
 801da68:	fb02 770c 	mla	r7, r2, ip, r7
 801da6c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801da70:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801da72:	fb00 770c 	mla	r7, r0, ip, r7
 801da76:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801da7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801da7c:	fb08 770c 	mla	r7, r8, ip, r7
 801da80:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801da84:	fb0e fe0c 	mul.w	lr, lr, ip
 801da88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801da8c:	fb02 e303 	mla	r3, r2, r3, lr
 801da90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801da92:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801da94:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801da98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da9a:	fb00 330a 	mla	r3, r0, sl, r3
 801da9e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801daa2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801daa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801daa8:	f8b9 0000 	ldrh.w	r0, [r9]
 801daac:	4359      	muls	r1, r3
 801daae:	0a3f      	lsrs	r7, r7, #8
 801dab0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dab4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dab8:	1c4b      	adds	r3, r1, #1
 801daba:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801dabe:	ea47 070c 	orr.w	r7, r7, ip
 801dac2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801dac6:	1202      	asrs	r2, r0, #8
 801dac8:	0c3b      	lsrs	r3, r7, #16
 801daca:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801dace:	b2c9      	uxtb	r1, r1
 801dad0:	fb13 f305 	smulbb	r3, r3, r5
 801dad4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801dad8:	fb02 3201 	mla	r2, r2, r1, r3
 801dadc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801dae0:	10c3      	asrs	r3, r0, #3
 801dae2:	b2ff      	uxtb	r7, r7
 801dae4:	00c0      	lsls	r0, r0, #3
 801dae6:	b2c0      	uxtb	r0, r0
 801dae8:	fb17 f705 	smulbb	r7, r7, r5
 801daec:	fb00 7001 	mla	r0, r0, r1, r7
 801daf0:	b292      	uxth	r2, r2
 801daf2:	fb1c fc05 	smulbb	ip, ip, r5
 801daf6:	b280      	uxth	r0, r0
 801daf8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801dafc:	fb03 c301 	mla	r3, r3, r1, ip
 801db00:	1c51      	adds	r1, r2, #1
 801db02:	f100 0c01 	add.w	ip, r0, #1
 801db06:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801db0a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801db0e:	b29b      	uxth	r3, r3
 801db10:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801db14:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801db18:	ea4c 0202 	orr.w	r2, ip, r2
 801db1c:	f103 0c01 	add.w	ip, r3, #1
 801db20:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801db24:	095b      	lsrs	r3, r3, #5
 801db26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801db2a:	431a      	orrs	r2, r3
 801db2c:	f8a9 2000 	strh.w	r2, [r9]
 801db30:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801db32:	441c      	add	r4, r3
 801db34:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801db36:	f109 0902 	add.w	r9, r9, #2
 801db3a:	441e      	add	r6, r3
 801db3c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801db40:	e647      	b.n	801d7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801db42:	2800      	cmp	r0, #0
 801db44:	f43f aedf 	beq.w	801d906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801db48:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801db4c:	9109      	str	r1, [sp, #36]	; 0x24
 801db4e:	0e09      	lsrs	r1, r1, #24
 801db50:	9112      	str	r1, [sp, #72]	; 0x48
 801db52:	e6d8      	b.n	801d906 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801db54:	b01d      	add	sp, #116	; 0x74
 801db56:	ecbd 8b08 	vpop	{d8-d11}
 801db5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801db60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801db60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db64:	880e      	ldrh	r6, [r1, #0]
 801db66:	b085      	sub	sp, #20
 801db68:	ea4f 2e26 	mov.w	lr, r6, asr #8
 801db6c:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801db70:	4690      	mov	r8, r2
 801db72:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 801db76:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 801db7a:	9200      	str	r2, [sp, #0]
 801db7c:	00f6      	lsls	r6, r6, #3
 801db7e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801db82:	9201      	str	r2, [sp, #4]
 801db84:	2c00      	cmp	r4, #0
 801db86:	b2f2      	uxtb	r2, r6
 801db88:	fb04 5603 	mla	r6, r4, r3, r5
 801db8c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801db90:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801db94:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801db98:	9202      	str	r2, [sp, #8]
 801db9a:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 801db9e:	db37      	blt.n	801dc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801dba0:	45a4      	cmp	ip, r4
 801dba2:	dd35      	ble.n	801dc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801dba4:	2d00      	cmp	r5, #0
 801dba6:	db31      	blt.n	801dc0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 801dba8:	42ab      	cmp	r3, r5
 801dbaa:	dd2f      	ble.n	801dc0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 801dbac:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801dbb0:	1c6e      	adds	r6, r5, #1
 801dbb2:	d430      	bmi.n	801dc16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801dbb4:	42b3      	cmp	r3, r6
 801dbb6:	dd2e      	ble.n	801dc16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801dbb8:	b378      	cbz	r0, 801dc1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 801dbba:	f8de 6004 	ldr.w	r6, [lr, #4]
 801dbbe:	3401      	adds	r4, #1
 801dbc0:	d42f      	bmi.n	801dc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801dbc2:	45a4      	cmp	ip, r4
 801dbc4:	dd2d      	ble.n	801dc22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801dbc6:	b37f      	cbz	r7, 801dc28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801dbc8:	2d00      	cmp	r5, #0
 801dbca:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 801dbce:	db26      	blt.n	801dc1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801dbd0:	42ab      	cmp	r3, r5
 801dbd2:	dd24      	ble.n	801dc1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801dbd4:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801dbd8:	3501      	adds	r5, #1
 801dbda:	d428      	bmi.n	801dc2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 801dbdc:	42ab      	cmp	r3, r5
 801dbde:	dd26      	ble.n	801dc2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 801dbe0:	b338      	cbz	r0, 801dc32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 801dbe2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dbe6:	280f      	cmp	r0, #15
 801dbe8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801dbec:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801dbf0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dbf4:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801dbf8:	d801      	bhi.n	801dbfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801dbfa:	2f0f      	cmp	r7, #15
 801dbfc:	d91b      	bls.n	801dc36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 801dbfe:	4b7d      	ldr	r3, [pc, #500]	; (801ddf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801dc00:	4a7d      	ldr	r2, [pc, #500]	; (801ddf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801dc02:	487e      	ldr	r0, [pc, #504]	; (801ddfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801dc04:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801dc08:	f003 f91a 	bl	8020e40 <__assert_func>
 801dc0c:	2200      	movs	r2, #0
 801dc0e:	e7cf      	b.n	801dbb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801dc10:	2600      	movs	r6, #0
 801dc12:	4632      	mov	r2, r6
 801dc14:	e7d3      	b.n	801dbbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801dc16:	2600      	movs	r6, #0
 801dc18:	e7d1      	b.n	801dbbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801dc1a:	4606      	mov	r6, r0
 801dc1c:	e7cf      	b.n	801dbbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801dc1e:	2400      	movs	r4, #0
 801dc20:	e7da      	b.n	801dbd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801dc22:	2300      	movs	r3, #0
 801dc24:	461c      	mov	r4, r3
 801dc26:	e7de      	b.n	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801dc28:	463b      	mov	r3, r7
 801dc2a:	463c      	mov	r4, r7
 801dc2c:	e7db      	b.n	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801dc2e:	2300      	movs	r3, #0
 801dc30:	e7d9      	b.n	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801dc32:	4603      	mov	r3, r0
 801dc34:	e7d7      	b.n	801dbe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801dc36:	b280      	uxth	r0, r0
 801dc38:	b2bf      	uxth	r7, r7
 801dc3a:	fb00 fe07 	mul.w	lr, r0, r7
 801dc3e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801dc42:	0100      	lsls	r0, r0, #4
 801dc44:	eba0 0c0e 	sub.w	ip, r0, lr
 801dc48:	b2bf      	uxth	r7, r7
 801dc4a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801dc4e:	fa1f fc8c 	uxth.w	ip, ip
 801dc52:	1bed      	subs	r5, r5, r7
 801dc54:	b2ad      	uxth	r5, r5
 801dc56:	fb0c f00a 	mul.w	r0, ip, sl
 801dc5a:	fb05 000b 	mla	r0, r5, fp, r0
 801dc5e:	fb07 0009 	mla	r0, r7, r9, r0
 801dc62:	fb0e 0008 	mla	r0, lr, r8, r0
 801dc66:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dc6a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801dc6e:	9003      	str	r0, [sp, #12]
 801dc70:	d018      	beq.n	801dca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 801dc72:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801dc76:	fb0b f000 	mul.w	r0, fp, r0
 801dc7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc7e:	fb0b fb02 	mul.w	fp, fp, r2
 801dc82:	0a02      	lsrs	r2, r0, #8
 801dc84:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dc88:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801dc8c:	4402      	add	r2, r0
 801dc8e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801dc92:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801dc96:	0a12      	lsrs	r2, r2, #8
 801dc98:	0a00      	lsrs	r0, r0, #8
 801dc9a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dc9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dca2:	4302      	orrs	r2, r0
 801dca4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dca8:	d019      	beq.n	801dcde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 801dcaa:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801dcae:	fb0a fb0b 	mul.w	fp, sl, fp
 801dcb2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801dcb6:	fb0a fa06 	mul.w	sl, sl, r6
 801dcba:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801dcbe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801dcc2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dcc6:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801dcca:	445e      	add	r6, fp
 801dccc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801dcd0:	0a36      	lsrs	r6, r6, #8
 801dcd2:	0a00      	lsrs	r0, r0, #8
 801dcd4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801dcd8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dcdc:	4306      	orrs	r6, r0
 801dcde:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dce2:	d019      	beq.n	801dd18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 801dce4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801dce8:	fb09 fa0a 	mul.w	sl, r9, sl
 801dcec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801dcf0:	fb09 f904 	mul.w	r9, r9, r4
 801dcf4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801dcf8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dcfc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dd00:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801dd04:	4454      	add	r4, sl
 801dd06:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801dd0a:	0a24      	lsrs	r4, r4, #8
 801dd0c:	0a00      	lsrs	r0, r0, #8
 801dd0e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dd12:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dd16:	4304      	orrs	r4, r0
 801dd18:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801dd1c:	d019      	beq.n	801dd52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 801dd1e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801dd22:	fb08 f909 	mul.w	r9, r8, r9
 801dd26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dd2a:	fb08 f803 	mul.w	r8, r8, r3
 801dd2e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801dd32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dd36:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801dd3a:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801dd3e:	444b      	add	r3, r9
 801dd40:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dd44:	0a1b      	lsrs	r3, r3, #8
 801dd46:	0a00      	lsrs	r0, r0, #8
 801dd48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dd4c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801dd50:	4303      	orrs	r3, r0
 801dd52:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801dd56:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801dd5a:	fb0c f808 	mul.w	r8, ip, r8
 801dd5e:	fb05 8800 	mla	r8, r5, r0, r8
 801dd62:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801dd66:	fb07 8800 	mla	r8, r7, r0, r8
 801dd6a:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801dd6e:	fb0e 8000 	mla	r0, lr, r0, r8
 801dd72:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801dd76:	fb0c f606 	mul.w	r6, ip, r6
 801dd7a:	0a00      	lsrs	r0, r0, #8
 801dd7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dd80:	fb05 6202 	mla	r2, r5, r2, r6
 801dd84:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801dd88:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801dd8c:	fb07 2700 	mla	r7, r7, r0, r2
 801dd90:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801dd94:	9b03      	ldr	r3, [sp, #12]
 801dd96:	9d00      	ldr	r5, [sp, #0]
 801dd98:	9a02      	ldr	r2, [sp, #8]
 801dd9a:	fb0e 7000 	mla	r0, lr, r0, r7
 801dd9e:	43dc      	mvns	r4, r3
 801dda0:	9b01      	ldr	r3, [sp, #4]
 801dda2:	b2e4      	uxtb	r4, r4
 801dda4:	0a00      	lsrs	r0, r0, #8
 801dda6:	4363      	muls	r3, r4
 801dda8:	4365      	muls	r5, r4
 801ddaa:	4362      	muls	r2, r4
 801ddac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ddb0:	ea48 0000 	orr.w	r0, r8, r0
 801ddb4:	4614      	mov	r4, r2
 801ddb6:	1c5e      	adds	r6, r3, #1
 801ddb8:	1c6a      	adds	r2, r5, #1
 801ddba:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 801ddbe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ddc2:	0a03      	lsrs	r3, r0, #8
 801ddc4:	0c02      	lsrs	r2, r0, #16
 801ddc6:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801ddca:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801ddce:	00db      	lsls	r3, r3, #3
 801ddd0:	0212      	lsls	r2, r2, #8
 801ddd2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ddd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ddda:	4313      	orrs	r3, r2
 801dddc:	1c62      	adds	r2, r4, #1
 801ddde:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801dde2:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801dde6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ddea:	4318      	orrs	r0, r3
 801ddec:	8008      	strh	r0, [r1, #0]
 801ddee:	b005      	add	sp, #20
 801ddf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddf4:	0802556e 	.word	0x0802556e
 801ddf8:	08025b3a 	.word	0x08025b3a
 801ddfc:	080255f2 	.word	0x080255f2

0801de00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de04:	ed2d 8b08 	vpush	{d8-d11}
 801de08:	b09b      	sub	sp, #108	; 0x6c
 801de0a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801de0e:	9218      	str	r2, [sp, #96]	; 0x60
 801de10:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801de12:	9116      	str	r1, [sp, #88]	; 0x58
 801de14:	9307      	str	r3, [sp, #28]
 801de16:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801de1a:	9019      	str	r0, [sp, #100]	; 0x64
 801de1c:	6850      	ldr	r0, [r2, #4]
 801de1e:	6812      	ldr	r2, [r2, #0]
 801de20:	fb00 1303 	mla	r3, r0, r3, r1
 801de24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801de28:	930a      	str	r3, [sp, #40]	; 0x28
 801de2a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801de2c:	681b      	ldr	r3, [r3, #0]
 801de2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801de30:	eeb0 aa40 	vmov.f32	s20, s0
 801de34:	eef0 9a60 	vmov.f32	s19, s1
 801de38:	eeb0 9a41 	vmov.f32	s18, s2
 801de3c:	eeb0 8a62 	vmov.f32	s16, s5
 801de40:	eef0 8a43 	vmov.f32	s17, s6
 801de44:	eef0 ba44 	vmov.f32	s23, s8
 801de48:	eeb0 ba64 	vmov.f32	s22, s9
 801de4c:	eef0 aa45 	vmov.f32	s21, s10
 801de50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801de52:	2b00      	cmp	r3, #0
 801de54:	dc03      	bgt.n	801de5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801de56:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801de58:	2b00      	cmp	r3, #0
 801de5a:	f340 8389 	ble.w	801e570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801de5e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801de60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801de68:	1e48      	subs	r0, r1, #1
 801de6a:	1e57      	subs	r7, r2, #1
 801de6c:	9b07      	ldr	r3, [sp, #28]
 801de6e:	2b00      	cmp	r3, #0
 801de70:	f340 818b 	ble.w	801e18a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801de74:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801de78:	ea4f 4326 	mov.w	r3, r6, asr #16
 801de7c:	d406      	bmi.n	801de8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de7e:	4584      	cmp	ip, r0
 801de80:	da04      	bge.n	801de8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de82:	2b00      	cmp	r3, #0
 801de84:	db02      	blt.n	801de8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801de86:	42bb      	cmp	r3, r7
 801de88:	f2c0 8180 	blt.w	801e18c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801de8c:	f11c 0c01 	adds.w	ip, ip, #1
 801de90:	f100 8170 	bmi.w	801e174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801de94:	4561      	cmp	r1, ip
 801de96:	f2c0 816d 	blt.w	801e174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801de9a:	3301      	adds	r3, #1
 801de9c:	f100 816a 	bmi.w	801e174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dea0:	429a      	cmp	r2, r3
 801dea2:	f2c0 8167 	blt.w	801e174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801dea6:	9b07      	ldr	r3, [sp, #28]
 801dea8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801deaa:	9317      	str	r3, [sp, #92]	; 0x5c
 801deac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801deae:	2b00      	cmp	r3, #0
 801deb0:	f340 8189 	ble.w	801e1c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801deb4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801deb6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801deb8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801debc:	689b      	ldr	r3, [r3, #8]
 801debe:	1422      	asrs	r2, r4, #16
 801dec0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dec4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801dec8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801decc:	f100 81d4 	bmi.w	801e278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801ded0:	f103 38ff 	add.w	r8, r3, #4294967295
 801ded4:	4542      	cmp	r2, r8
 801ded6:	f280 81cf 	bge.w	801e278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801deda:	f1bc 0f00 	cmp.w	ip, #0
 801dede:	f2c0 81cb 	blt.w	801e278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801dee2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801dee6:	45c4      	cmp	ip, r8
 801dee8:	f280 81c6 	bge.w	801e278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801deec:	b21b      	sxth	r3, r3
 801deee:	fb0c 2203 	mla	r2, ip, r3, r2
 801def2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801def4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801def8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801defc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801df00:	2900      	cmp	r1, #0
 801df02:	f000 81a6 	beq.w	801e252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801df06:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801df0a:	950b      	str	r5, [sp, #44]	; 0x2c
 801df0c:	0e2d      	lsrs	r5, r5, #24
 801df0e:	9512      	str	r5, [sp, #72]	; 0x48
 801df10:	b180      	cbz	r0, 801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801df12:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801df16:	3b01      	subs	r3, #1
 801df18:	009b      	lsls	r3, r3, #2
 801df1a:	3304      	adds	r3, #4
 801df1c:	eb08 0c03 	add.w	ip, r8, r3
 801df20:	f858 3003 	ldr.w	r3, [r8, r3]
 801df24:	9308      	str	r3, [sp, #32]
 801df26:	0e1b      	lsrs	r3, r3, #24
 801df28:	9310      	str	r3, [sp, #64]	; 0x40
 801df2a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801df2e:	930c      	str	r3, [sp, #48]	; 0x30
 801df30:	0e1b      	lsrs	r3, r3, #24
 801df32:	9313      	str	r3, [sp, #76]	; 0x4c
 801df34:	b289      	uxth	r1, r1
 801df36:	b280      	uxth	r0, r0
 801df38:	fb01 f900 	mul.w	r9, r1, r0
 801df3c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801df40:	0109      	lsls	r1, r1, #4
 801df42:	eba1 0809 	sub.w	r8, r1, r9
 801df46:	b280      	uxth	r0, r0
 801df48:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801df4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801df4e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801df50:	fa1f f888 	uxth.w	r8, r8
 801df54:	1a09      	subs	r1, r1, r0
 801df56:	b289      	uxth	r1, r1
 801df58:	fb08 f303 	mul.w	r3, r8, r3
 801df5c:	fb01 330e 	mla	r3, r1, lr, r3
 801df60:	fb00 3305 	mla	r3, r0, r5, r3
 801df64:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801df66:	fb09 3305 	mla	r3, r9, r5, r3
 801df6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801df6e:	2b00      	cmp	r3, #0
 801df70:	f000 80f7 	beq.w	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801df74:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801df78:	d01b      	beq.n	801dfb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801df7a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801df7e:	fb0e fa0a 	mul.w	sl, lr, sl
 801df82:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801df86:	fb0e fe02 	mul.w	lr, lr, r2
 801df8a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801df8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801df92:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801df96:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801df9a:	4452      	add	r2, sl
 801df9c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dfa0:	0a12      	lsrs	r2, r2, #8
 801dfa2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dfa6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dfaa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dfae:	ea42 020c 	orr.w	r2, r2, ip
 801dfb2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dfb4:	2dff      	cmp	r5, #255	; 0xff
 801dfb6:	d021      	beq.n	801dffc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801dfb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801dfba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dfbe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dfc0:	fb05 fb0b 	mul.w	fp, r5, fp
 801dfc4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801dfc6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dfca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dfcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dfd0:	fb05 fa0a 	mul.w	sl, r5, sl
 801dfd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dfd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dfdc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dfe0:	44de      	add	lr, fp
 801dfe2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dfe6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dff2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dff6:	ea4e 050a 	orr.w	r5, lr, sl
 801dffa:	950b      	str	r5, [sp, #44]	; 0x2c
 801dffc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dffe:	2dff      	cmp	r5, #255	; 0xff
 801e000:	d021      	beq.n	801e046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e002:	9d08      	ldr	r5, [sp, #32]
 801e004:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e008:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e00a:	fb05 fb0b 	mul.w	fp, r5, fp
 801e00e:	9d08      	ldr	r5, [sp, #32]
 801e010:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e014:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e016:	fb05 fa0e 	mul.w	sl, r5, lr
 801e01a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e01e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e022:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e026:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e02a:	44de      	add	lr, fp
 801e02c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e030:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e034:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e038:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e03c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e040:	ea4e 050a 	orr.w	r5, lr, sl
 801e044:	9508      	str	r5, [sp, #32]
 801e046:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e048:	2dff      	cmp	r5, #255	; 0xff
 801e04a:	d021      	beq.n	801e090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801e04c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e04e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e052:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e054:	fb05 fb0b 	mul.w	fp, r5, fp
 801e058:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e05a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e05e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e060:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e064:	fb05 fa0a 	mul.w	sl, r5, sl
 801e068:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e06c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e070:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e074:	44de      	add	lr, fp
 801e076:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e07a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e07e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e082:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e086:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e08a:	ea4e 050a 	orr.w	r5, lr, sl
 801e08e:	950c      	str	r5, [sp, #48]	; 0x30
 801e090:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e092:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e096:	9d08      	ldr	r5, [sp, #32]
 801e098:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e09c:	fb08 fc0c 	mul.w	ip, r8, ip
 801e0a0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e0a4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e0a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e0aa:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e0ae:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e0b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e0b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e0b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e0bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e0c0:	fb08 f80e 	mul.w	r8, r8, lr
 801e0c4:	fb01 8202 	mla	r2, r1, r2, r8
 801e0c8:	9908      	ldr	r1, [sp, #32]
 801e0ca:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e0ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e0d0:	fb00 220a 	mla	r2, r0, sl, r2
 801e0d4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e0d8:	fb09 2900 	mla	r9, r9, r0, r2
 801e0dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e0e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e0ec:	ea4c 0c09 	orr.w	ip, ip, r9
 801e0f0:	2bff      	cmp	r3, #255	; 0xff
 801e0f2:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801e0f6:	f000 80b5 	beq.w	801e264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801e0fa:	8839      	ldrh	r1, [r7, #0]
 801e0fc:	43db      	mvns	r3, r3
 801e0fe:	ea4f 2821 	mov.w	r8, r1, asr #8
 801e102:	fa5f f983 	uxtb.w	r9, r3
 801e106:	10ca      	asrs	r2, r1, #3
 801e108:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e10c:	fb08 f809 	mul.w	r8, r8, r9
 801e110:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e114:	fb02 fe09 	mul.w	lr, r2, r9
 801e118:	f108 0201 	add.w	r2, r8, #1
 801e11c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e120:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e124:	00cb      	lsls	r3, r1, #3
 801e126:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 801e12a:	4961      	ldr	r1, [pc, #388]	; (801e2b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801e12c:	b2d2      	uxtb	r2, r2
 801e12e:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 801e132:	f10e 0201 	add.w	r2, lr, #1
 801e136:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 801e13a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e13e:	b2db      	uxtb	r3, r3
 801e140:	00d2      	lsls	r2, r2, #3
 801e142:	fb03 f309 	mul.w	r3, r3, r9
 801e146:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e14a:	430a      	orrs	r2, r1
 801e14c:	1c59      	adds	r1, r3, #1
 801e14e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e152:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e156:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e15a:	ea42 0c0c 	orr.w	ip, r2, ip
 801e15e:	f8a7 c000 	strh.w	ip, [r7]
 801e162:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e164:	441c      	add	r4, r3
 801e166:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e168:	441e      	add	r6, r3
 801e16a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e16c:	3b01      	subs	r3, #1
 801e16e:	3702      	adds	r7, #2
 801e170:	9317      	str	r3, [sp, #92]	; 0x5c
 801e172:	e69b      	b.n	801deac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801e174:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e176:	441c      	add	r4, r3
 801e178:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e17a:	441e      	add	r6, r3
 801e17c:	9b07      	ldr	r3, [sp, #28]
 801e17e:	3b01      	subs	r3, #1
 801e180:	9307      	str	r3, [sp, #28]
 801e182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e184:	3302      	adds	r3, #2
 801e186:	930a      	str	r3, [sp, #40]	; 0x28
 801e188:	e670      	b.n	801de6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e18a:	d023      	beq.n	801e1d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801e18c:	9b07      	ldr	r3, [sp, #28]
 801e18e:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801e190:	3b01      	subs	r3, #1
 801e192:	fb00 4003 	mla	r0, r0, r3, r4
 801e196:	1400      	asrs	r0, r0, #16
 801e198:	f53f ae85 	bmi.w	801dea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e19c:	3901      	subs	r1, #1
 801e19e:	4288      	cmp	r0, r1
 801e1a0:	f6bf ae81 	bge.w	801dea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e1a4:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801e1a6:	fb01 6303 	mla	r3, r1, r3, r6
 801e1aa:	141b      	asrs	r3, r3, #16
 801e1ac:	f53f ae7b 	bmi.w	801dea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e1b0:	3a01      	subs	r2, #1
 801e1b2:	4293      	cmp	r3, r2
 801e1b4:	f6bf ae77 	bge.w	801dea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e1b8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e1bc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801e1c0:	f1bb 0f00 	cmp.w	fp, #0
 801e1c4:	dc76      	bgt.n	801e2b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e1c6:	9b07      	ldr	r3, [sp, #28]
 801e1c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e1cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e1ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e1d2:	930a      	str	r3, [sp, #40]	; 0x28
 801e1d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e1d6:	2b00      	cmp	r3, #0
 801e1d8:	f340 81ca 	ble.w	801e570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801e1dc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e1e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e1e4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e1e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e1ea:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e1ee:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e1f2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e1f6:	eef0 6a48 	vmov.f32	s13, s16
 801e1fa:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e1fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e202:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e206:	ee16 4a90 	vmov	r4, s13
 801e20a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e20e:	eef0 6a68 	vmov.f32	s13, s17
 801e212:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e216:	ee18 2a10 	vmov	r2, s16
 801e21a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e21e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e222:	ee18 2a90 	vmov	r2, s17
 801e226:	932f      	str	r3, [sp, #188]	; 0xbc
 801e228:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e22a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e22e:	9330      	str	r3, [sp, #192]	; 0xc0
 801e230:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e232:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e234:	3b01      	subs	r3, #1
 801e236:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e23a:	9316      	str	r3, [sp, #88]	; 0x58
 801e23c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e23e:	bf08      	it	eq
 801e240:	4613      	moveq	r3, r2
 801e242:	ee16 6a90 	vmov	r6, s13
 801e246:	9307      	str	r3, [sp, #28]
 801e248:	eef0 8a67 	vmov.f32	s17, s15
 801e24c:	eeb0 8a47 	vmov.f32	s16, s14
 801e250:	e5fe      	b.n	801de50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801e252:	2800      	cmp	r0, #0
 801e254:	f43f ae6e 	beq.w	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801e258:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e25c:	9308      	str	r3, [sp, #32]
 801e25e:	0e1b      	lsrs	r3, r3, #24
 801e260:	9310      	str	r3, [sp, #64]	; 0x40
 801e262:	e667      	b.n	801df34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801e264:	ea4f 125c 	mov.w	r2, ip, lsr #5
 801e268:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 801e26c:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 801e270:	f022 0207 	bic.w	r2, r2, #7
 801e274:	431a      	orrs	r2, r3
 801e276:	e76e      	b.n	801e156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e278:	f112 0801 	adds.w	r8, r2, #1
 801e27c:	f53f af71 	bmi.w	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e280:	4543      	cmp	r3, r8
 801e282:	f6ff af6e 	blt.w	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e286:	f11c 0801 	adds.w	r8, ip, #1
 801e28a:	f53f af6a 	bmi.w	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e28e:	45c6      	cmp	lr, r8
 801e290:	f6ff af67 	blt.w	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e294:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e298:	fa0f f28e 	sxth.w	r2, lr
 801e29c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e2a0:	9200      	str	r2, [sp, #0]
 801e2a2:	b21b      	sxth	r3, r3
 801e2a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e2a6:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e2a8:	4639      	mov	r1, r7
 801e2aa:	f7ff fc59 	bl	801db60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e2ae:	e758      	b.n	801e162 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e2b0:	fffff800 	.word	0xfffff800
 801e2b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801e2b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e2b8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e2bc:	1421      	asrs	r1, r4, #16
 801e2be:	1433      	asrs	r3, r6, #16
 801e2c0:	fb07 1303 	mla	r3, r7, r3, r1
 801e2c4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e2c6:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e2ca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e2ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e2d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e2d6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e2da:	2a00      	cmp	r2, #0
 801e2dc:	f000 8131 	beq.w	801e542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801e2e0:	684d      	ldr	r5, [r1, #4]
 801e2e2:	950d      	str	r5, [sp, #52]	; 0x34
 801e2e4:	0e2d      	lsrs	r5, r5, #24
 801e2e6:	9514      	str	r5, [sp, #80]	; 0x50
 801e2e8:	b178      	cbz	r0, 801e30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801e2ea:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801e2ee:	3f01      	subs	r7, #1
 801e2f0:	00bf      	lsls	r7, r7, #2
 801e2f2:	3704      	adds	r7, #4
 801e2f4:	eb01 0e07 	add.w	lr, r1, r7
 801e2f8:	59c9      	ldr	r1, [r1, r7]
 801e2fa:	9109      	str	r1, [sp, #36]	; 0x24
 801e2fc:	0e09      	lsrs	r1, r1, #24
 801e2fe:	9111      	str	r1, [sp, #68]	; 0x44
 801e300:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e304:	910e      	str	r1, [sp, #56]	; 0x38
 801e306:	0e09      	lsrs	r1, r1, #24
 801e308:	9115      	str	r1, [sp, #84]	; 0x54
 801e30a:	b292      	uxth	r2, r2
 801e30c:	b280      	uxth	r0, r0
 801e30e:	fb02 f900 	mul.w	r9, r2, r0
 801e312:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e316:	0112      	lsls	r2, r2, #4
 801e318:	eba2 0e09 	sub.w	lr, r2, r9
 801e31c:	b280      	uxth	r0, r0
 801e31e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e322:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e324:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e326:	fa1f fe8e 	uxth.w	lr, lr
 801e32a:	1a09      	subs	r1, r1, r0
 801e32c:	b289      	uxth	r1, r1
 801e32e:	fb0e f202 	mul.w	r2, lr, r2
 801e332:	fb01 220c 	mla	r2, r1, ip, r2
 801e336:	fb00 2205 	mla	r2, r0, r5, r2
 801e33a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e33c:	fb09 2205 	mla	r2, r9, r5, r2
 801e340:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e344:	2a00      	cmp	r2, #0
 801e346:	f000 80f3 	beq.w	801e530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e34a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e34e:	d019      	beq.n	801e384 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 801e350:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e354:	fb0c fa0a 	mul.w	sl, ip, sl
 801e358:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e35c:	fb0c fc03 	mul.w	ip, ip, r3
 801e360:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e364:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e368:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e36c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e370:	4453      	add	r3, sl
 801e372:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e376:	0a1b      	lsrs	r3, r3, #8
 801e378:	0a3f      	lsrs	r7, r7, #8
 801e37a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e37e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e382:	433b      	orrs	r3, r7
 801e384:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e386:	2dff      	cmp	r5, #255	; 0xff
 801e388:	d020      	beq.n	801e3cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 801e38a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e38c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e390:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e392:	436f      	muls	r7, r5
 801e394:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e396:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e39a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e39c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e3a0:	fb05 fa0a 	mul.w	sl, r5, sl
 801e3a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e3a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e3ac:	44bc      	add	ip, r7
 801e3ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e3b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e3b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e3c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3c6:	ea4c 050a 	orr.w	r5, ip, sl
 801e3ca:	950d      	str	r5, [sp, #52]	; 0x34
 801e3cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3ce:	2dff      	cmp	r5, #255	; 0xff
 801e3d0:	d020      	beq.n	801e414 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 801e3d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e3d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e3d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3da:	436f      	muls	r7, r5
 801e3dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e3de:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e3e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e3e4:	fb05 fa0c 	mul.w	sl, r5, ip
 801e3e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e3ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e3f0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e3f4:	44bc      	add	ip, r7
 801e3f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e3fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e3fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e406:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e40a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e40e:	ea4c 050a 	orr.w	r5, ip, sl
 801e412:	9509      	str	r5, [sp, #36]	; 0x24
 801e414:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e416:	2dff      	cmp	r5, #255	; 0xff
 801e418:	d020      	beq.n	801e45c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 801e41a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e41c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e420:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e422:	436f      	muls	r7, r5
 801e424:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e426:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e42a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e42c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e430:	fb05 fa0a 	mul.w	sl, r5, sl
 801e434:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e438:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e43c:	44bc      	add	ip, r7
 801e43e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e442:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e446:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e44a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e44e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e452:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e456:	ea4c 050a 	orr.w	r5, ip, sl
 801e45a:	950e      	str	r5, [sp, #56]	; 0x38
 801e45c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e45e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e462:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e464:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e468:	fb0e f707 	mul.w	r7, lr, r7
 801e46c:	fb01 770c 	mla	r7, r1, ip, r7
 801e470:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e474:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e476:	fb00 770c 	mla	r7, r0, ip, r7
 801e47a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e47e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e480:	fb09 770c 	mla	r7, r9, ip, r7
 801e484:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e488:	fb0e fe0c 	mul.w	lr, lr, ip
 801e48c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e490:	fb01 e303 	mla	r3, r1, r3, lr
 801e494:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e496:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e49a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e49c:	fb00 330a 	mla	r3, r0, sl, r3
 801e4a0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801e4a4:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e4a8:	0a3f      	lsrs	r7, r7, #8
 801e4aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4ae:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e4b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e4b6:	ea47 070c 	orr.w	r7, r7, ip
 801e4ba:	2aff      	cmp	r2, #255	; 0xff
 801e4bc:	ea4f 2017 	mov.w	r0, r7, lsr #8
 801e4c0:	d048      	beq.n	801e554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801e4c2:	f8b8 1000 	ldrh.w	r1, [r8]
 801e4c6:	43d2      	mvns	r2, r2
 801e4c8:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e4cc:	fa5f f982 	uxtb.w	r9, r2
 801e4d0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e4d4:	fb0e fe09 	mul.w	lr, lr, r9
 801e4d8:	f10e 0301 	add.w	r3, lr, #1
 801e4dc:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 801e4e0:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801e4e4:	0c3b      	lsrs	r3, r7, #16
 801e4e6:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801e4ea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e4ee:	4b23      	ldr	r3, [pc, #140]	; (801e57c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801e4f0:	fb0c fc09 	mul.w	ip, ip, r9
 801e4f4:	00ca      	lsls	r2, r1, #3
 801e4f6:	fa5f fe8e 	uxtb.w	lr, lr
 801e4fa:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 801e4fe:	b2d2      	uxtb	r2, r2
 801e500:	f10c 0301 	add.w	r3, ip, #1
 801e504:	fb02 f209 	mul.w	r2, r2, r9
 801e508:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e50c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e510:	1c51      	adds	r1, r2, #1
 801e512:	00db      	lsls	r3, r3, #3
 801e514:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e518:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e51c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e520:	ea4e 0e03 	orr.w	lr, lr, r3
 801e524:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e528:	ea47 0e0e 	orr.w	lr, r7, lr
 801e52c:	f8a8 e000 	strh.w	lr, [r8]
 801e530:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801e532:	441c      	add	r4, r3
 801e534:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e536:	f108 0802 	add.w	r8, r8, #2
 801e53a:	441e      	add	r6, r3
 801e53c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e540:	e63e      	b.n	801e1c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801e542:	2800      	cmp	r0, #0
 801e544:	f43f aee1 	beq.w	801e30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801e548:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801e54c:	9109      	str	r1, [sp, #36]	; 0x24
 801e54e:	0e09      	lsrs	r1, r1, #24
 801e550:	9111      	str	r1, [sp, #68]	; 0x44
 801e552:	e6da      	b.n	801e30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801e554:	097a      	lsrs	r2, r7, #5
 801e556:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 801e55a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e55e:	f020 0007 	bic.w	r0, r0, #7
 801e562:	4310      	orrs	r0, r2
 801e564:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e568:	4307      	orrs	r7, r0
 801e56a:	f8a8 7000 	strh.w	r7, [r8]
 801e56e:	e7df      	b.n	801e530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e570:	b01b      	add	sp, #108	; 0x6c
 801e572:	ecbd 8b08 	vpop	{d8-d11}
 801e576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e57a:	bf00      	nop
 801e57c:	fffff800 	.word	0xfffff800

0801e580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801e580:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e584:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801e588:	2c00      	cmp	r4, #0
 801e58a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e58e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e592:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e596:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801e59a:	fb04 ce03 	mla	lr, r4, r3, ip
 801e59e:	db60      	blt.n	801e662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801e5a0:	45a1      	cmp	r9, r4
 801e5a2:	dd5e      	ble.n	801e662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801e5a4:	f1bc 0f00 	cmp.w	ip, #0
 801e5a8:	db59      	blt.n	801e65e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801e5aa:	45e0      	cmp	r8, ip
 801e5ac:	dd57      	ble.n	801e65e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801e5ae:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801e5b2:	f01e 0f01 	tst.w	lr, #1
 801e5b6:	5c16      	ldrb	r6, [r2, r0]
 801e5b8:	bf0c      	ite	eq
 801e5ba:	f006 060f 	andeq.w	r6, r6, #15
 801e5be:	1136      	asrne	r6, r6, #4
 801e5c0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e5c4:	b2f6      	uxtb	r6, r6
 801e5c6:	f11c 0001 	adds.w	r0, ip, #1
 801e5ca:	d44d      	bmi.n	801e668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801e5cc:	4580      	cmp	r8, r0
 801e5ce:	dd4b      	ble.n	801e668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801e5d0:	2d00      	cmp	r5, #0
 801e5d2:	d04b      	beq.n	801e66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801e5d4:	f10e 0a01 	add.w	sl, lr, #1
 801e5d8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801e5dc:	f01a 0f01 	tst.w	sl, #1
 801e5e0:	5c10      	ldrb	r0, [r2, r0]
 801e5e2:	bf0c      	ite	eq
 801e5e4:	f000 000f 	andeq.w	r0, r0, #15
 801e5e8:	1100      	asrne	r0, r0, #4
 801e5ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e5ee:	b2c0      	uxtb	r0, r0
 801e5f0:	3401      	adds	r4, #1
 801e5f2:	d43f      	bmi.n	801e674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801e5f4:	45a1      	cmp	r9, r4
 801e5f6:	dd3d      	ble.n	801e674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801e5f8:	2f00      	cmp	r7, #0
 801e5fa:	f000 809b 	beq.w	801e734 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 801e5fe:	f1bc 0f00 	cmp.w	ip, #0
 801e602:	db35      	blt.n	801e670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801e604:	45e0      	cmp	r8, ip
 801e606:	dd33      	ble.n	801e670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801e608:	eb03 090e 	add.w	r9, r3, lr
 801e60c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801e610:	f019 0f01 	tst.w	r9, #1
 801e614:	5d14      	ldrb	r4, [r2, r4]
 801e616:	bf0c      	ite	eq
 801e618:	f004 040f 	andeq.w	r4, r4, #15
 801e61c:	1124      	asrne	r4, r4, #4
 801e61e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e622:	b2e4      	uxtb	r4, r4
 801e624:	f11c 0c01 	adds.w	ip, ip, #1
 801e628:	d427      	bmi.n	801e67a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801e62a:	45e0      	cmp	r8, ip
 801e62c:	dd25      	ble.n	801e67a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801e62e:	b335      	cbz	r5, 801e67e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801e630:	3301      	adds	r3, #1
 801e632:	449e      	add	lr, r3
 801e634:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e638:	f01e 0f01 	tst.w	lr, #1
 801e63c:	5cd2      	ldrb	r2, [r2, r3]
 801e63e:	bf0c      	ite	eq
 801e640:	f002 020f 	andeq.w	r2, r2, #15
 801e644:	1112      	asrne	r2, r2, #4
 801e646:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e64a:	b2d3      	uxtb	r3, r2
 801e64c:	2d0f      	cmp	r5, #15
 801e64e:	d917      	bls.n	801e680 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801e650:	4b3b      	ldr	r3, [pc, #236]	; (801e740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 801e652:	4a3c      	ldr	r2, [pc, #240]	; (801e744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801e654:	483c      	ldr	r0, [pc, #240]	; (801e748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801e656:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801e65a:	f002 fbf1 	bl	8020e40 <__assert_func>
 801e65e:	2600      	movs	r6, #0
 801e660:	e7b1      	b.n	801e5c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801e662:	2000      	movs	r0, #0
 801e664:	4606      	mov	r6, r0
 801e666:	e7c3      	b.n	801e5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e668:	2000      	movs	r0, #0
 801e66a:	e7c1      	b.n	801e5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e66c:	4628      	mov	r0, r5
 801e66e:	e7bf      	b.n	801e5f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801e670:	2400      	movs	r4, #0
 801e672:	e7d7      	b.n	801e624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801e674:	2300      	movs	r3, #0
 801e676:	461c      	mov	r4, r3
 801e678:	e7e8      	b.n	801e64c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801e67a:	2300      	movs	r3, #0
 801e67c:	e7e6      	b.n	801e64c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801e67e:	462b      	mov	r3, r5
 801e680:	2f0f      	cmp	r7, #15
 801e682:	d8e5      	bhi.n	801e650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801e684:	b2ad      	uxth	r5, r5
 801e686:	b2bf      	uxth	r7, r7
 801e688:	fb05 fc07 	mul.w	ip, r5, r7
 801e68c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801e690:	012d      	lsls	r5, r5, #4
 801e692:	b2bf      	uxth	r7, r7
 801e694:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801e698:	eba5 050c 	sub.w	r5, r5, ip
 801e69c:	1bd2      	subs	r2, r2, r7
 801e69e:	b2ad      	uxth	r5, r5
 801e6a0:	b292      	uxth	r2, r2
 801e6a2:	4368      	muls	r0, r5
 801e6a4:	fb06 0002 	mla	r0, r6, r2, r0
 801e6a8:	fb07 0404 	mla	r4, r7, r4, r0
 801e6ac:	fb0c 4303 	mla	r3, ip, r3, r4
 801e6b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e6b4:	2b00      	cmp	r3, #0
 801e6b6:	d03b      	beq.n	801e730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 801e6b8:	4a24      	ldr	r2, [pc, #144]	; (801e74c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e6ba:	880e      	ldrh	r6, [r1, #0]
 801e6bc:	6815      	ldr	r5, [r2, #0]
 801e6be:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801e6c2:	435a      	muls	r2, r3
 801e6c4:	1c53      	adds	r3, r2, #1
 801e6c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6ca:	121b      	asrs	r3, r3, #8
 801e6cc:	b29a      	uxth	r2, r3
 801e6ce:	1234      	asrs	r4, r6, #8
 801e6d0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801e6d4:	43db      	mvns	r3, r3
 801e6d6:	b2db      	uxtb	r3, r3
 801e6d8:	fb10 f002 	smulbb	r0, r0, r2
 801e6dc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e6e0:	fb04 0403 	mla	r4, r4, r3, r0
 801e6e4:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801e6e8:	10f0      	asrs	r0, r6, #3
 801e6ea:	b2ed      	uxtb	r5, r5
 801e6ec:	00f6      	lsls	r6, r6, #3
 801e6ee:	fb17 f702 	smulbb	r7, r7, r2
 801e6f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e6f6:	fb15 f202 	smulbb	r2, r5, r2
 801e6fa:	b2f6      	uxtb	r6, r6
 801e6fc:	b2a4      	uxth	r4, r4
 801e6fe:	fb00 7003 	mla	r0, r0, r3, r7
 801e702:	fb06 2303 	mla	r3, r6, r3, r2
 801e706:	b29a      	uxth	r2, r3
 801e708:	1c63      	adds	r3, r4, #1
 801e70a:	b280      	uxth	r0, r0
 801e70c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e710:	1c53      	adds	r3, r2, #1
 801e712:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e716:	1c42      	adds	r2, r0, #1
 801e718:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e71c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e720:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e724:	0940      	lsrs	r0, r0, #5
 801e726:	4323      	orrs	r3, r4
 801e728:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e72c:	4303      	orrs	r3, r0
 801e72e:	800b      	strh	r3, [r1, #0]
 801e730:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e734:	2d0f      	cmp	r5, #15
 801e736:	d88b      	bhi.n	801e650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801e738:	463b      	mov	r3, r7
 801e73a:	463c      	mov	r4, r7
 801e73c:	e7a2      	b.n	801e684 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801e73e:	bf00      	nop
 801e740:	0802556e 	.word	0x0802556e
 801e744:	08025b3a 	.word	0x08025b3a
 801e748:	080255f2 	.word	0x080255f2
 801e74c:	2000eb38 	.word	0x2000eb38

0801e750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e754:	ed2d 8b08 	vpush	{d8-d11}
 801e758:	b097      	sub	sp, #92	; 0x5c
 801e75a:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801e75e:	9214      	str	r2, [sp, #80]	; 0x50
 801e760:	9309      	str	r3, [sp, #36]	; 0x24
 801e762:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801e764:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801e768:	910e      	str	r1, [sp, #56]	; 0x38
 801e76a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e76c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801e770:	9015      	str	r0, [sp, #84]	; 0x54
 801e772:	6850      	ldr	r0, [r2, #4]
 801e774:	6812      	ldr	r2, [r2, #0]
 801e776:	fb00 1303 	mla	r3, r0, r3, r1
 801e77a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e77e:	930a      	str	r3, [sp, #40]	; 0x28
 801e780:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e782:	689b      	ldr	r3, [r3, #8]
 801e784:	3301      	adds	r3, #1
 801e786:	f023 0301 	bic.w	r3, r3, #1
 801e78a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e78c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e78e:	681f      	ldr	r7, [r3, #0]
 801e790:	eeb0 aa40 	vmov.f32	s20, s0
 801e794:	eef0 9a60 	vmov.f32	s19, s1
 801e798:	eeb0 9a41 	vmov.f32	s18, s2
 801e79c:	eeb0 8a62 	vmov.f32	s16, s5
 801e7a0:	eef0 8a43 	vmov.f32	s17, s6
 801e7a4:	eef0 ba44 	vmov.f32	s23, s8
 801e7a8:	eeb0 ba64 	vmov.f32	s22, s9
 801e7ac:	eef0 aa45 	vmov.f32	s21, s10
 801e7b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7b2:	2b00      	cmp	r3, #0
 801e7b4:	dc03      	bgt.n	801e7be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e7b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e7b8:	2b00      	cmp	r3, #0
 801e7ba:	f340 8257 	ble.w	801ec6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801e7be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e7c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e7c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e7c8:	1e48      	subs	r0, r1, #1
 801e7ca:	f102 3cff 	add.w	ip, r2, #4294967295
 801e7ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7d0:	2b00      	cmp	r3, #0
 801e7d2:	f340 80eb 	ble.w	801e9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801e7d6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e7da:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e7de:	d406      	bmi.n	801e7ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e7e0:	4586      	cmp	lr, r0
 801e7e2:	da04      	bge.n	801e7ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e7e4:	2b00      	cmp	r3, #0
 801e7e6:	db02      	blt.n	801e7ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e7e8:	4563      	cmp	r3, ip
 801e7ea:	f2c0 80e0 	blt.w	801e9ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801e7ee:	f11e 0e01 	adds.w	lr, lr, #1
 801e7f2:	f100 80d0 	bmi.w	801e996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e7f6:	4571      	cmp	r1, lr
 801e7f8:	f2c0 80cd 	blt.w	801e996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e7fc:	3301      	adds	r3, #1
 801e7fe:	f100 80ca 	bmi.w	801e996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e802:	429a      	cmp	r2, r3
 801e804:	f2c0 80c7 	blt.w	801e996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e808:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 801e80c:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 801e810:	f1b9 0f00 	cmp.w	r9, #0
 801e814:	f340 80e8 	ble.w	801e9e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801e818:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e81a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e81e:	1423      	asrs	r3, r4, #16
 801e820:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e824:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e828:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e82c:	f100 8133 	bmi.w	801ea96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801e830:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e834:	455b      	cmp	r3, fp
 801e836:	f280 812e 	bge.w	801ea96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801e83a:	2800      	cmp	r0, #0
 801e83c:	f2c0 812b 	blt.w	801ea96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801e840:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e844:	4558      	cmp	r0, fp
 801e846:	f280 8126 	bge.w	801ea96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801e84a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e84c:	fb00 3305 	mla	r3, r0, r5, r3
 801e850:	0858      	lsrs	r0, r3, #1
 801e852:	07dd      	lsls	r5, r3, #31
 801e854:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e858:	bf54      	ite	pl
 801e85a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e85e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e862:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e866:	fa5f fc8c 	uxtb.w	ip, ip
 801e86a:	2a00      	cmp	r2, #0
 801e86c:	f000 8102 	beq.w	801ea74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801e870:	1c58      	adds	r0, r3, #1
 801e872:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e876:	07c0      	lsls	r0, r0, #31
 801e878:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e87c:	bf54      	ite	pl
 801e87e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e882:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e886:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e88a:	fa5f f08e 	uxtb.w	r0, lr
 801e88e:	9010      	str	r0, [sp, #64]	; 0x40
 801e890:	b1c9      	cbz	r1, 801e8c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e892:	4453      	add	r3, sl
 801e894:	0858      	lsrs	r0, r3, #1
 801e896:	07dd      	lsls	r5, r3, #31
 801e898:	5c38      	ldrb	r0, [r7, r0]
 801e89a:	bf54      	ite	pl
 801e89c:	f000 000f 	andpl.w	r0, r0, #15
 801e8a0:	1100      	asrmi	r0, r0, #4
 801e8a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e8a6:	3301      	adds	r3, #1
 801e8a8:	b2c0      	uxtb	r0, r0
 801e8aa:	900c      	str	r0, [sp, #48]	; 0x30
 801e8ac:	0858      	lsrs	r0, r3, #1
 801e8ae:	07dd      	lsls	r5, r3, #31
 801e8b0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e8b4:	bf54      	ite	pl
 801e8b6:	f00e 030f 	andpl.w	r3, lr, #15
 801e8ba:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e8be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e8c2:	b2db      	uxtb	r3, r3
 801e8c4:	9311      	str	r3, [sp, #68]	; 0x44
 801e8c6:	b292      	uxth	r2, r2
 801e8c8:	b289      	uxth	r1, r1
 801e8ca:	fb02 f301 	mul.w	r3, r2, r1
 801e8ce:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e8d2:	0112      	lsls	r2, r2, #4
 801e8d4:	b289      	uxth	r1, r1
 801e8d6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e8da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e8dc:	1ad2      	subs	r2, r2, r3
 801e8de:	1a40      	subs	r0, r0, r1
 801e8e0:	b292      	uxth	r2, r2
 801e8e2:	436a      	muls	r2, r5
 801e8e4:	b280      	uxth	r0, r0
 801e8e6:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e8ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e8ec:	fb01 c102 	mla	r1, r1, r2, ip
 801e8f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e8f2:	fb03 1302 	mla	r3, r3, r2, r1
 801e8f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e8fa:	2b00      	cmp	r3, #0
 801e8fc:	d042      	beq.n	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e8fe:	4a76      	ldr	r2, [pc, #472]	; (801ead8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 801e900:	f8b8 c000 	ldrh.w	ip, [r8]
 801e904:	6810      	ldr	r0, [r2, #0]
 801e906:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e908:	4353      	muls	r3, r2
 801e90a:	1c5a      	adds	r2, r3, #1
 801e90c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e910:	121b      	asrs	r3, r3, #8
 801e912:	fa1f fe83 	uxth.w	lr, r3
 801e916:	ea4f 212c 	mov.w	r1, ip, asr #8
 801e91a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801e91e:	43db      	mvns	r3, r3
 801e920:	b2db      	uxtb	r3, r3
 801e922:	fb12 f20e 	smulbb	r2, r2, lr
 801e926:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e92a:	fb01 2103 	mla	r1, r1, r3, r2
 801e92e:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801e932:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e936:	b2c0      	uxtb	r0, r0
 801e938:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e93c:	fb1b fb0e 	smulbb	fp, fp, lr
 801e940:	b289      	uxth	r1, r1
 801e942:	fb10 fe0e 	smulbb	lr, r0, lr
 801e946:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e94a:	fa5f fc8c 	uxtb.w	ip, ip
 801e94e:	fb02 b203 	mla	r2, r2, r3, fp
 801e952:	1c48      	adds	r0, r1, #1
 801e954:	fb0c e303 	mla	r3, ip, r3, lr
 801e958:	b292      	uxth	r2, r2
 801e95a:	b29b      	uxth	r3, r3
 801e95c:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801e960:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801e964:	f102 0b01 	add.w	fp, r2, #1
 801e968:	1c59      	adds	r1, r3, #1
 801e96a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e96e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801e972:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801e976:	0952      	lsrs	r2, r2, #5
 801e978:	4301      	orrs	r1, r0
 801e97a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e97e:	4311      	orrs	r1, r2
 801e980:	f8a8 1000 	strh.w	r1, [r8]
 801e984:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e986:	441c      	add	r4, r3
 801e988:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e98a:	f108 0802 	add.w	r8, r8, #2
 801e98e:	441e      	add	r6, r3
 801e990:	f109 39ff 	add.w	r9, r9, #4294967295
 801e994:	e73c      	b.n	801e810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801e996:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e998:	441c      	add	r4, r3
 801e99a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e99c:	441e      	add	r6, r3
 801e99e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9a0:	3b01      	subs	r3, #1
 801e9a2:	9309      	str	r3, [sp, #36]	; 0x24
 801e9a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9a6:	3302      	adds	r3, #2
 801e9a8:	930a      	str	r3, [sp, #40]	; 0x28
 801e9aa:	e710      	b.n	801e7ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e9ac:	d023      	beq.n	801e9f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801e9ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9b0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801e9b2:	3b01      	subs	r3, #1
 801e9b4:	fb00 4003 	mla	r0, r0, r3, r4
 801e9b8:	1400      	asrs	r0, r0, #16
 801e9ba:	f53f af25 	bmi.w	801e808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e9be:	3901      	subs	r1, #1
 801e9c0:	4288      	cmp	r0, r1
 801e9c2:	f6bf af21 	bge.w	801e808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e9c6:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801e9c8:	fb01 6303 	mla	r3, r1, r3, r6
 801e9cc:	141b      	asrs	r3, r3, #16
 801e9ce:	f53f af1b 	bmi.w	801e808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e9d2:	3a01      	subs	r2, #1
 801e9d4:	4293      	cmp	r3, r2
 801e9d6:	f6bf af17 	bge.w	801e808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801e9da:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 801e9de:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801e9e2:	f1b8 0f00 	cmp.w	r8, #0
 801e9e6:	dc79      	bgt.n	801eadc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801e9e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9ea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e9ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e9f0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e9f4:	930a      	str	r3, [sp, #40]	; 0x28
 801e9f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e9f8:	2b00      	cmp	r3, #0
 801e9fa:	f340 8137 	ble.w	801ec6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801e9fe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ea02:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ea06:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ea0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea0c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ea10:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ea14:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ea18:	eef0 6a48 	vmov.f32	s13, s16
 801ea1c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ea20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea24:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ea28:	ee16 4a90 	vmov	r4, s13
 801ea2c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ea30:	eef0 6a68 	vmov.f32	s13, s17
 801ea34:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ea38:	ee18 2a10 	vmov	r2, s16
 801ea3c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ea40:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea44:	ee18 2a90 	vmov	r2, s17
 801ea48:	932b      	str	r3, [sp, #172]	; 0xac
 801ea4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea4c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea50:	932c      	str	r3, [sp, #176]	; 0xb0
 801ea52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ea54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea56:	3b01      	subs	r3, #1
 801ea58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea5c:	930e      	str	r3, [sp, #56]	; 0x38
 801ea5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ea60:	bf08      	it	eq
 801ea62:	4613      	moveq	r3, r2
 801ea64:	ee16 6a90 	vmov	r6, s13
 801ea68:	9309      	str	r3, [sp, #36]	; 0x24
 801ea6a:	eef0 8a67 	vmov.f32	s17, s15
 801ea6e:	eeb0 8a47 	vmov.f32	s16, s14
 801ea72:	e69d      	b.n	801e7b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ea74:	2900      	cmp	r1, #0
 801ea76:	f43f af26 	beq.w	801e8c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ea7a:	eb0a 0003 	add.w	r0, sl, r3
 801ea7e:	0843      	lsrs	r3, r0, #1
 801ea80:	07c0      	lsls	r0, r0, #31
 801ea82:	5cfb      	ldrb	r3, [r7, r3]
 801ea84:	bf54      	ite	pl
 801ea86:	f003 030f 	andpl.w	r3, r3, #15
 801ea8a:	111b      	asrmi	r3, r3, #4
 801ea8c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ea90:	b2db      	uxtb	r3, r3
 801ea92:	930c      	str	r3, [sp, #48]	; 0x30
 801ea94:	e717      	b.n	801e8c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ea96:	f113 0b01 	adds.w	fp, r3, #1
 801ea9a:	f53f af73 	bmi.w	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ea9e:	45dc      	cmp	ip, fp
 801eaa0:	f6ff af70 	blt.w	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801eaa4:	f110 0b01 	adds.w	fp, r0, #1
 801eaa8:	f53f af6c 	bmi.w	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801eaac:	45de      	cmp	lr, fp
 801eaae:	f6ff af69 	blt.w	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801eab2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eab4:	9302      	str	r3, [sp, #8]
 801eab6:	fa0f f38e 	sxth.w	r3, lr
 801eaba:	9301      	str	r3, [sp, #4]
 801eabc:	fa0f f38c 	sxth.w	r3, ip
 801eac0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801eac4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801eac8:	9300      	str	r3, [sp, #0]
 801eaca:	463a      	mov	r2, r7
 801eacc:	4653      	mov	r3, sl
 801eace:	4641      	mov	r1, r8
 801ead0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ead2:	f7ff fd55 	bl	801e580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ead6:	e755      	b.n	801e984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ead8:	2000eb38 	.word	0x2000eb38
 801eadc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eade:	1422      	asrs	r2, r4, #16
 801eae0:	1433      	asrs	r3, r6, #16
 801eae2:	fb05 2303 	mla	r3, r5, r3, r2
 801eae6:	085a      	lsrs	r2, r3, #1
 801eae8:	07dd      	lsls	r5, r3, #31
 801eaea:	5cba      	ldrb	r2, [r7, r2]
 801eaec:	bf54      	ite	pl
 801eaee:	f002 020f 	andpl.w	r2, r2, #15
 801eaf2:	1112      	asrmi	r2, r2, #4
 801eaf4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eaf8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801eafc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eb00:	b2d2      	uxtb	r2, r2
 801eb02:	2900      	cmp	r1, #0
 801eb04:	f000 809f 	beq.w	801ec46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801eb08:	f103 0901 	add.w	r9, r3, #1
 801eb0c:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 801eb10:	f019 0f01 	tst.w	r9, #1
 801eb14:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801eb18:	bf0c      	ite	eq
 801eb1a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801eb1e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801eb22:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801eb26:	fa5f f58c 	uxtb.w	r5, ip
 801eb2a:	9512      	str	r5, [sp, #72]	; 0x48
 801eb2c:	b1f8      	cbz	r0, 801eb6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801eb2e:	445b      	add	r3, fp
 801eb30:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801eb34:	07dd      	lsls	r5, r3, #31
 801eb36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801eb3a:	bf54      	ite	pl
 801eb3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801eb40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801eb44:	3301      	adds	r3, #1
 801eb46:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801eb4a:	fa5f f58c 	uxtb.w	r5, ip
 801eb4e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801eb52:	950d      	str	r5, [sp, #52]	; 0x34
 801eb54:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801eb58:	07dd      	lsls	r5, r3, #31
 801eb5a:	bf54      	ite	pl
 801eb5c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801eb60:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801eb64:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801eb68:	fa5f f38c 	uxtb.w	r3, ip
 801eb6c:	9313      	str	r3, [sp, #76]	; 0x4c
 801eb6e:	b289      	uxth	r1, r1
 801eb70:	b280      	uxth	r0, r0
 801eb72:	fb01 f300 	mul.w	r3, r1, r0
 801eb76:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801eb7a:	0109      	lsls	r1, r1, #4
 801eb7c:	b280      	uxth	r0, r0
 801eb7e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801eb82:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb84:	1ac9      	subs	r1, r1, r3
 801eb86:	ebac 0c00 	sub.w	ip, ip, r0
 801eb8a:	b289      	uxth	r1, r1
 801eb8c:	4369      	muls	r1, r5
 801eb8e:	fa1f fc8c 	uxth.w	ip, ip
 801eb92:	fb02 120c 	mla	r2, r2, ip, r1
 801eb96:	990d      	ldr	r1, [sp, #52]	; 0x34
 801eb98:	fb00 2001 	mla	r0, r0, r1, r2
 801eb9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb9e:	fb03 0302 	mla	r3, r3, r2, r0
 801eba2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eba6:	2b00      	cmp	r3, #0
 801eba8:	d044      	beq.n	801ec34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ebaa:	4a33      	ldr	r2, [pc, #204]	; (801ec78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 801ebac:	f8be c000 	ldrh.w	ip, [lr]
 801ebb0:	6810      	ldr	r0, [r2, #0]
 801ebb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ebb4:	4353      	muls	r3, r2
 801ebb6:	1c5a      	adds	r2, r3, #1
 801ebb8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ebbc:	121b      	asrs	r3, r3, #8
 801ebbe:	fa1f f983 	uxth.w	r9, r3
 801ebc2:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ebc6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ebca:	43db      	mvns	r3, r3
 801ebcc:	b2db      	uxtb	r3, r3
 801ebce:	fb12 f209 	smulbb	r2, r2, r9
 801ebd2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ebd6:	fb01 2103 	mla	r1, r1, r3, r2
 801ebda:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ebde:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ebe2:	b2c0      	uxtb	r0, r0
 801ebe4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ebe8:	fa5f fc8c 	uxtb.w	ip, ip
 801ebec:	fb10 f009 	smulbb	r0, r0, r9
 801ebf0:	fb0c 0003 	mla	r0, ip, r3, r0
 801ebf4:	b289      	uxth	r1, r1
 801ebf6:	fb1a fa09 	smulbb	sl, sl, r9
 801ebfa:	b280      	uxth	r0, r0
 801ebfc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ec00:	fb02 a203 	mla	r2, r2, r3, sl
 801ec04:	1c4b      	adds	r3, r1, #1
 801ec06:	f100 0a01 	add.w	sl, r0, #1
 801ec0a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ec0e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ec12:	b292      	uxth	r2, r2
 801ec14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ec18:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ec1c:	ea4a 0101 	orr.w	r1, sl, r1
 801ec20:	f102 0a01 	add.w	sl, r2, #1
 801ec24:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ec28:	0952      	lsrs	r2, r2, #5
 801ec2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec2e:	4311      	orrs	r1, r2
 801ec30:	f8ae 1000 	strh.w	r1, [lr]
 801ec34:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ec36:	441c      	add	r4, r3
 801ec38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ec3a:	f10e 0e02 	add.w	lr, lr, #2
 801ec3e:	441e      	add	r6, r3
 801ec40:	f108 38ff 	add.w	r8, r8, #4294967295
 801ec44:	e6cd      	b.n	801e9e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ec46:	2800      	cmp	r0, #0
 801ec48:	d091      	beq.n	801eb6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801ec4a:	445b      	add	r3, fp
 801ec4c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ec50:	07db      	lsls	r3, r3, #31
 801ec52:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ec56:	bf54      	ite	pl
 801ec58:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ec5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ec60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ec64:	fa5f f38c 	uxtb.w	r3, ip
 801ec68:	930d      	str	r3, [sp, #52]	; 0x34
 801ec6a:	e780      	b.n	801eb6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801ec6c:	b017      	add	sp, #92	; 0x5c
 801ec6e:	ecbd 8b08 	vpop	{d8-d11}
 801ec72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec76:	bf00      	nop
 801ec78:	2000eb38 	.word	0x2000eb38

0801ec7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ec7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec80:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801ec84:	2c00      	cmp	r4, #0
 801ec86:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ec8a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ec8e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ec92:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801ec96:	fb04 ce03 	mla	lr, r4, r3, ip
 801ec9a:	db60      	blt.n	801ed5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801ec9c:	45a1      	cmp	r9, r4
 801ec9e:	dd5e      	ble.n	801ed5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801eca0:	f1bc 0f00 	cmp.w	ip, #0
 801eca4:	db59      	blt.n	801ed5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801eca6:	45e0      	cmp	r8, ip
 801eca8:	dd57      	ble.n	801ed5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801ecaa:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ecae:	f01e 0f01 	tst.w	lr, #1
 801ecb2:	5c16      	ldrb	r6, [r2, r0]
 801ecb4:	bf0c      	ite	eq
 801ecb6:	f006 060f 	andeq.w	r6, r6, #15
 801ecba:	1136      	asrne	r6, r6, #4
 801ecbc:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ecc0:	b2f6      	uxtb	r6, r6
 801ecc2:	f11c 0001 	adds.w	r0, ip, #1
 801ecc6:	d44d      	bmi.n	801ed64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801ecc8:	4580      	cmp	r8, r0
 801ecca:	dd4b      	ble.n	801ed64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801eccc:	2d00      	cmp	r5, #0
 801ecce:	d04b      	beq.n	801ed68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801ecd0:	f10e 0a01 	add.w	sl, lr, #1
 801ecd4:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ecd8:	f01a 0f01 	tst.w	sl, #1
 801ecdc:	5c10      	ldrb	r0, [r2, r0]
 801ecde:	bf0c      	ite	eq
 801ece0:	f000 000f 	andeq.w	r0, r0, #15
 801ece4:	1100      	asrne	r0, r0, #4
 801ece6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ecea:	b2c0      	uxtb	r0, r0
 801ecec:	3401      	adds	r4, #1
 801ecee:	d43f      	bmi.n	801ed70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ecf0:	45a1      	cmp	r9, r4
 801ecf2:	dd3d      	ble.n	801ed70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ecf4:	2f00      	cmp	r7, #0
 801ecf6:	f000 8093 	beq.w	801ee20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ecfa:	f1bc 0f00 	cmp.w	ip, #0
 801ecfe:	db35      	blt.n	801ed6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ed00:	45e0      	cmp	r8, ip
 801ed02:	dd33      	ble.n	801ed6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ed04:	eb03 090e 	add.w	r9, r3, lr
 801ed08:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ed0c:	f019 0f01 	tst.w	r9, #1
 801ed10:	5d14      	ldrb	r4, [r2, r4]
 801ed12:	bf0c      	ite	eq
 801ed14:	f004 040f 	andeq.w	r4, r4, #15
 801ed18:	1124      	asrne	r4, r4, #4
 801ed1a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ed1e:	b2e4      	uxtb	r4, r4
 801ed20:	f11c 0c01 	adds.w	ip, ip, #1
 801ed24:	d427      	bmi.n	801ed76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ed26:	45e0      	cmp	r8, ip
 801ed28:	dd25      	ble.n	801ed76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ed2a:	b335      	cbz	r5, 801ed7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801ed2c:	3301      	adds	r3, #1
 801ed2e:	449e      	add	lr, r3
 801ed30:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ed34:	f01e 0f01 	tst.w	lr, #1
 801ed38:	5cd2      	ldrb	r2, [r2, r3]
 801ed3a:	bf0c      	ite	eq
 801ed3c:	f002 020f 	andeq.w	r2, r2, #15
 801ed40:	1112      	asrne	r2, r2, #4
 801ed42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ed46:	b2d3      	uxtb	r3, r2
 801ed48:	2d0f      	cmp	r5, #15
 801ed4a:	d917      	bls.n	801ed7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801ed4c:	4b37      	ldr	r3, [pc, #220]	; (801ee2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801ed4e:	4a38      	ldr	r2, [pc, #224]	; (801ee30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801ed50:	4838      	ldr	r0, [pc, #224]	; (801ee34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801ed52:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801ed56:	f002 f873 	bl	8020e40 <__assert_func>
 801ed5a:	2600      	movs	r6, #0
 801ed5c:	e7b1      	b.n	801ecc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ed5e:	2000      	movs	r0, #0
 801ed60:	4606      	mov	r6, r0
 801ed62:	e7c3      	b.n	801ecec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ed64:	2000      	movs	r0, #0
 801ed66:	e7c1      	b.n	801ecec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ed68:	4628      	mov	r0, r5
 801ed6a:	e7bf      	b.n	801ecec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ed6c:	2400      	movs	r4, #0
 801ed6e:	e7d7      	b.n	801ed20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ed70:	2300      	movs	r3, #0
 801ed72:	461c      	mov	r4, r3
 801ed74:	e7e8      	b.n	801ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ed76:	2300      	movs	r3, #0
 801ed78:	e7e6      	b.n	801ed48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ed7a:	462b      	mov	r3, r5
 801ed7c:	2f0f      	cmp	r7, #15
 801ed7e:	d8e5      	bhi.n	801ed4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ed80:	b2ad      	uxth	r5, r5
 801ed82:	b2bf      	uxth	r7, r7
 801ed84:	fb05 fc07 	mul.w	ip, r5, r7
 801ed88:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ed8c:	012d      	lsls	r5, r5, #4
 801ed8e:	b2bf      	uxth	r7, r7
 801ed90:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ed94:	eba5 050c 	sub.w	r5, r5, ip
 801ed98:	1bd2      	subs	r2, r2, r7
 801ed9a:	b2ad      	uxth	r5, r5
 801ed9c:	b292      	uxth	r2, r2
 801ed9e:	4368      	muls	r0, r5
 801eda0:	fb06 0002 	mla	r0, r6, r2, r0
 801eda4:	fb07 0404 	mla	r4, r7, r4, r0
 801eda8:	fb0c 4303 	mla	r3, ip, r3, r4
 801edac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801edb0:	b3a3      	cbz	r3, 801ee1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801edb2:	4a21      	ldr	r2, [pc, #132]	; (801ee38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801edb4:	880e      	ldrh	r6, [r1, #0]
 801edb6:	6815      	ldr	r5, [r2, #0]
 801edb8:	1234      	asrs	r4, r6, #8
 801edba:	b29a      	uxth	r2, r3
 801edbc:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801edc0:	43db      	mvns	r3, r3
 801edc2:	b2db      	uxtb	r3, r3
 801edc4:	fb10 f002 	smulbb	r0, r0, r2
 801edc8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801edcc:	fb04 0403 	mla	r4, r4, r3, r0
 801edd0:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801edd4:	10f0      	asrs	r0, r6, #3
 801edd6:	b2ed      	uxtb	r5, r5
 801edd8:	00f6      	lsls	r6, r6, #3
 801edda:	fb17 f702 	smulbb	r7, r7, r2
 801edde:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ede2:	fb15 f202 	smulbb	r2, r5, r2
 801ede6:	b2f6      	uxtb	r6, r6
 801ede8:	b2a4      	uxth	r4, r4
 801edea:	fb00 7003 	mla	r0, r0, r3, r7
 801edee:	fb06 2303 	mla	r3, r6, r3, r2
 801edf2:	b29a      	uxth	r2, r3
 801edf4:	1c63      	adds	r3, r4, #1
 801edf6:	b280      	uxth	r0, r0
 801edf8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801edfc:	1c53      	adds	r3, r2, #1
 801edfe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ee02:	1c42      	adds	r2, r0, #1
 801ee04:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ee08:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ee0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ee10:	0940      	lsrs	r0, r0, #5
 801ee12:	4323      	orrs	r3, r4
 801ee14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee18:	4303      	orrs	r3, r0
 801ee1a:	800b      	strh	r3, [r1, #0]
 801ee1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee20:	2d0f      	cmp	r5, #15
 801ee22:	d893      	bhi.n	801ed4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ee24:	463b      	mov	r3, r7
 801ee26:	463c      	mov	r4, r7
 801ee28:	e7aa      	b.n	801ed80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801ee2a:	bf00      	nop
 801ee2c:	0802556e 	.word	0x0802556e
 801ee30:	08025b3a 	.word	0x08025b3a
 801ee34:	080255f2 	.word	0x080255f2
 801ee38:	2000eb38 	.word	0x2000eb38

0801ee3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee40:	ed2d 8b08 	vpush	{d8-d11}
 801ee44:	b093      	sub	sp, #76	; 0x4c
 801ee46:	461d      	mov	r5, r3
 801ee48:	920c      	str	r2, [sp, #48]	; 0x30
 801ee4a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ee4c:	9107      	str	r1, [sp, #28]
 801ee4e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ee52:	9011      	str	r0, [sp, #68]	; 0x44
 801ee54:	6850      	ldr	r0, [r2, #4]
 801ee56:	6812      	ldr	r2, [r2, #0]
 801ee58:	fb00 1303 	mla	r3, r0, r3, r1
 801ee5c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ee60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee62:	689b      	ldr	r3, [r3, #8]
 801ee64:	3301      	adds	r3, #1
 801ee66:	f023 0301 	bic.w	r3, r3, #1
 801ee6a:	9306      	str	r3, [sp, #24]
 801ee6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ee6e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ee72:	681f      	ldr	r7, [r3, #0]
 801ee74:	eeb0 aa40 	vmov.f32	s20, s0
 801ee78:	eef0 9a60 	vmov.f32	s19, s1
 801ee7c:	eeb0 9a41 	vmov.f32	s18, s2
 801ee80:	eeb0 8a62 	vmov.f32	s16, s5
 801ee84:	eef0 8a43 	vmov.f32	s17, s6
 801ee88:	eef0 ba44 	vmov.f32	s23, s8
 801ee8c:	eeb0 ba64 	vmov.f32	s22, s9
 801ee90:	eef0 aa45 	vmov.f32	s21, s10
 801ee94:	9b07      	ldr	r3, [sp, #28]
 801ee96:	2b00      	cmp	r3, #0
 801ee98:	dc03      	bgt.n	801eea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ee9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee9c:	2b00      	cmp	r3, #0
 801ee9e:	f340 8267 	ble.w	801f370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801eea2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eea4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eea8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eeac:	1e48      	subs	r0, r1, #1
 801eeae:	f102 3cff 	add.w	ip, r2, #4294967295
 801eeb2:	2d00      	cmp	r5, #0
 801eeb4:	f340 80eb 	ble.w	801f08e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801eeb8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eebc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eec0:	d406      	bmi.n	801eed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eec2:	4586      	cmp	lr, r0
 801eec4:	da04      	bge.n	801eed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eec6:	2b00      	cmp	r3, #0
 801eec8:	db02      	blt.n	801eed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eeca:	4563      	cmp	r3, ip
 801eecc:	f2c0 80e0 	blt.w	801f090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801eed0:	f11e 0e01 	adds.w	lr, lr, #1
 801eed4:	f100 80d3 	bmi.w	801f07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eed8:	4571      	cmp	r1, lr
 801eeda:	f2c0 80d0 	blt.w	801f07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eede:	3301      	adds	r3, #1
 801eee0:	f100 80cd 	bmi.w	801f07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eee4:	429a      	cmp	r2, r3
 801eee6:	f2c0 80ca 	blt.w	801f07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eeea:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801eeee:	9509      	str	r5, [sp, #36]	; 0x24
 801eef0:	46c8      	mov	r8, r9
 801eef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eef4:	2b00      	cmp	r3, #0
 801eef6:	f340 80e9 	ble.w	801f0cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801eefa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801eefe:	9308      	str	r3, [sp, #32]
 801ef00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ef02:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ef06:	1423      	asrs	r3, r4, #16
 801ef08:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ef0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ef10:	f100 813d 	bmi.w	801f18e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef14:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ef18:	455b      	cmp	r3, fp
 801ef1a:	f280 8138 	bge.w	801f18e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef1e:	2800      	cmp	r0, #0
 801ef20:	f2c0 8135 	blt.w	801f18e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef24:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ef28:	4558      	cmp	r0, fp
 801ef2a:	f280 8130 	bge.w	801f18e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ef2e:	9a06      	ldr	r2, [sp, #24]
 801ef30:	fb00 3302 	mla	r3, r0, r2, r3
 801ef34:	0858      	lsrs	r0, r3, #1
 801ef36:	07da      	lsls	r2, r3, #31
 801ef38:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ef3c:	9a08      	ldr	r2, [sp, #32]
 801ef3e:	bf54      	ite	pl
 801ef40:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ef44:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ef48:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ef4c:	fa5f fc8c 	uxtb.w	ip, ip
 801ef50:	2a00      	cmp	r2, #0
 801ef52:	f000 80fe 	beq.w	801f152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801ef56:	1c58      	adds	r0, r3, #1
 801ef58:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ef5c:	07c0      	lsls	r0, r0, #31
 801ef5e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ef62:	bf54      	ite	pl
 801ef64:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ef68:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ef6c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ef70:	fa5f fe8e 	uxtb.w	lr, lr
 801ef74:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801ef78:	b1b9      	cbz	r1, 801efaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ef7a:	4453      	add	r3, sl
 801ef7c:	0858      	lsrs	r0, r3, #1
 801ef7e:	07da      	lsls	r2, r3, #31
 801ef80:	5c38      	ldrb	r0, [r7, r0]
 801ef82:	bf54      	ite	pl
 801ef84:	f000 000f 	andpl.w	r0, r0, #15
 801ef88:	1100      	asrmi	r0, r0, #4
 801ef8a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ef8e:	b2c0      	uxtb	r0, r0
 801ef90:	900a      	str	r0, [sp, #40]	; 0x28
 801ef92:	1c58      	adds	r0, r3, #1
 801ef94:	0843      	lsrs	r3, r0, #1
 801ef96:	07c2      	lsls	r2, r0, #31
 801ef98:	5cfb      	ldrb	r3, [r7, r3]
 801ef9a:	bf54      	ite	pl
 801ef9c:	f003 030f 	andpl.w	r3, r3, #15
 801efa0:	111b      	asrmi	r3, r3, #4
 801efa2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801efa6:	b2db      	uxtb	r3, r3
 801efa8:	930e      	str	r3, [sp, #56]	; 0x38
 801efaa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801efae:	b289      	uxth	r1, r1
 801efb0:	fb02 f301 	mul.w	r3, r2, r1
 801efb4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801efb8:	0112      	lsls	r2, r2, #4
 801efba:	b289      	uxth	r1, r1
 801efbc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801efc0:	1a40      	subs	r0, r0, r1
 801efc2:	fa1f fe80 	uxth.w	lr, r0
 801efc6:	1ad2      	subs	r2, r2, r3
 801efc8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801efca:	b292      	uxth	r2, r2
 801efcc:	4342      	muls	r2, r0
 801efce:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801efd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801efd4:	fb01 c102 	mla	r1, r1, r2, ip
 801efd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801efda:	fb03 1302 	mla	r3, r3, r2, r1
 801efde:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801efe2:	2b00      	cmp	r3, #0
 801efe4:	d041      	beq.n	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801efe6:	4a7a      	ldr	r2, [pc, #488]	; (801f1d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 801efe8:	6810      	ldr	r0, [r2, #0]
 801efea:	2bff      	cmp	r3, #255	; 0xff
 801efec:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801eff0:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801eff4:	fa5f fe80 	uxtb.w	lr, r0
 801eff8:	f000 80bc 	beq.w	801f174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801effc:	f8b8 c000 	ldrh.w	ip, [r8]
 801f000:	fa1f fb83 	uxth.w	fp, r3
 801f004:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f008:	43db      	mvns	r3, r3
 801f00a:	b2d2      	uxtb	r2, r2
 801f00c:	b2db      	uxtb	r3, r3
 801f00e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f012:	fb12 f20b 	smulbb	r2, r2, fp
 801f016:	fb00 2203 	mla	r2, r0, r3, r2
 801f01a:	b2c9      	uxtb	r1, r1
 801f01c:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801f020:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f024:	b292      	uxth	r2, r2
 801f026:	fb11 f10b 	smulbb	r1, r1, fp
 801f02a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f02e:	fa5f fc8c 	uxtb.w	ip, ip
 801f032:	fb1e fe0b 	smulbb	lr, lr, fp
 801f036:	fb00 1003 	mla	r0, r0, r3, r1
 801f03a:	1c51      	adds	r1, r2, #1
 801f03c:	fb0c e303 	mla	r3, ip, r3, lr
 801f040:	b29b      	uxth	r3, r3
 801f042:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f046:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 801f04a:	1c5a      	adds	r2, r3, #1
 801f04c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f050:	b280      	uxth	r0, r0
 801f052:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f056:	430a      	orrs	r2, r1
 801f058:	1c41      	adds	r1, r0, #1
 801f05a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f05e:	0940      	lsrs	r0, r0, #5
 801f060:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f064:	4302      	orrs	r2, r0
 801f066:	f8a8 2000 	strh.w	r2, [r8]
 801f06a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f06c:	441c      	add	r4, r3
 801f06e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f070:	441e      	add	r6, r3
 801f072:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f074:	3b01      	subs	r3, #1
 801f076:	f108 0802 	add.w	r8, r8, #2
 801f07a:	9309      	str	r3, [sp, #36]	; 0x24
 801f07c:	e739      	b.n	801eef2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801f07e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f080:	441c      	add	r4, r3
 801f082:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f084:	3d01      	subs	r5, #1
 801f086:	441e      	add	r6, r3
 801f088:	f109 0902 	add.w	r9, r9, #2
 801f08c:	e711      	b.n	801eeb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f08e:	d021      	beq.n	801f0d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801f090:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f092:	1e6b      	subs	r3, r5, #1
 801f094:	fb00 4003 	mla	r0, r0, r3, r4
 801f098:	1400      	asrs	r0, r0, #16
 801f09a:	f53f af26 	bmi.w	801eeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f09e:	3901      	subs	r1, #1
 801f0a0:	4288      	cmp	r0, r1
 801f0a2:	f6bf af22 	bge.w	801eeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f0a6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f0a8:	fb01 6303 	mla	r3, r1, r3, r6
 801f0ac:	141b      	asrs	r3, r3, #16
 801f0ae:	f53f af1c 	bmi.w	801eeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f0b2:	3a01      	subs	r2, #1
 801f0b4:	4293      	cmp	r3, r2
 801f0b6:	f6bf af18 	bge.w	801eeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f0ba:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f0be:	9308      	str	r3, [sp, #32]
 801f0c0:	46aa      	mov	sl, r5
 801f0c2:	46c8      	mov	r8, r9
 801f0c4:	f1ba 0f00 	cmp.w	sl, #0
 801f0c8:	f300 8086 	bgt.w	801f1d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801f0cc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f0d0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f0d4:	9b07      	ldr	r3, [sp, #28]
 801f0d6:	2b00      	cmp	r3, #0
 801f0d8:	f340 814a 	ble.w	801f370 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801f0dc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f0e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f0e4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f0e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0ea:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f0ee:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f0f2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f0f6:	eef0 6a48 	vmov.f32	s13, s16
 801f0fa:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f0fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f102:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f106:	ee16 4a90 	vmov	r4, s13
 801f10a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f10e:	eef0 6a68 	vmov.f32	s13, s17
 801f112:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f116:	ee18 2a10 	vmov	r2, s16
 801f11a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f11e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f122:	ee18 2a90 	vmov	r2, s17
 801f126:	9327      	str	r3, [sp, #156]	; 0x9c
 801f128:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f12a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f12e:	9328      	str	r3, [sp, #160]	; 0xa0
 801f130:	9b07      	ldr	r3, [sp, #28]
 801f132:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f134:	3b01      	subs	r3, #1
 801f136:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f13a:	9307      	str	r3, [sp, #28]
 801f13c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f13e:	ee16 6a90 	vmov	r6, s13
 801f142:	bf14      	ite	ne
 801f144:	461d      	movne	r5, r3
 801f146:	4615      	moveq	r5, r2
 801f148:	eef0 8a67 	vmov.f32	s17, s15
 801f14c:	eeb0 8a47 	vmov.f32	s16, s14
 801f150:	e6a0      	b.n	801ee94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f152:	2900      	cmp	r1, #0
 801f154:	f43f af29 	beq.w	801efaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801f158:	eb0a 0003 	add.w	r0, sl, r3
 801f15c:	0843      	lsrs	r3, r0, #1
 801f15e:	07c0      	lsls	r0, r0, #31
 801f160:	5cfb      	ldrb	r3, [r7, r3]
 801f162:	bf54      	ite	pl
 801f164:	f003 030f 	andpl.w	r3, r3, #15
 801f168:	111b      	asrmi	r3, r3, #4
 801f16a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f16e:	b2db      	uxtb	r3, r3
 801f170:	930a      	str	r3, [sp, #40]	; 0x28
 801f172:	e71a      	b.n	801efaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801f174:	4b17      	ldr	r3, [pc, #92]	; (801f1d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801f176:	00c9      	lsls	r1, r1, #3
 801f178:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801f17c:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801f180:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f184:	ea4e 0e01 	orr.w	lr, lr, r1
 801f188:	f8a8 e000 	strh.w	lr, [r8]
 801f18c:	e76d      	b.n	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f18e:	f113 0b01 	adds.w	fp, r3, #1
 801f192:	f53f af6a 	bmi.w	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f196:	45dc      	cmp	ip, fp
 801f198:	f6ff af67 	blt.w	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f19c:	f110 0b01 	adds.w	fp, r0, #1
 801f1a0:	f53f af63 	bmi.w	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f1a4:	45de      	cmp	lr, fp
 801f1a6:	f6ff af60 	blt.w	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f1aa:	9a08      	ldr	r2, [sp, #32]
 801f1ac:	9302      	str	r3, [sp, #8]
 801f1ae:	fa0f f38e 	sxth.w	r3, lr
 801f1b2:	9301      	str	r3, [sp, #4]
 801f1b4:	fa0f f38c 	sxth.w	r3, ip
 801f1b8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f1bc:	9105      	str	r1, [sp, #20]
 801f1be:	9300      	str	r3, [sp, #0]
 801f1c0:	463a      	mov	r2, r7
 801f1c2:	4653      	mov	r3, sl
 801f1c4:	4641      	mov	r1, r8
 801f1c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f1c8:	f7ff fd58 	bl	801ec7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f1cc:	e74d      	b.n	801f06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f1ce:	bf00      	nop
 801f1d0:	2000eb38 	.word	0x2000eb38
 801f1d4:	fffff800 	.word	0xfffff800
 801f1d8:	9906      	ldr	r1, [sp, #24]
 801f1da:	1422      	asrs	r2, r4, #16
 801f1dc:	1433      	asrs	r3, r6, #16
 801f1de:	fb01 2303 	mla	r3, r1, r3, r2
 801f1e2:	085a      	lsrs	r2, r3, #1
 801f1e4:	07d9      	lsls	r1, r3, #31
 801f1e6:	5cba      	ldrb	r2, [r7, r2]
 801f1e8:	bf54      	ite	pl
 801f1ea:	f002 020f 	andpl.w	r2, r2, #15
 801f1ee:	1112      	asrmi	r2, r2, #4
 801f1f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f1f4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f1f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f1fc:	b2d2      	uxtb	r2, r2
 801f1fe:	2800      	cmp	r0, #0
 801f200:	f000 8098 	beq.w	801f334 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801f204:	f103 0e01 	add.w	lr, r3, #1
 801f208:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801f20c:	f01e 0f01 	tst.w	lr, #1
 801f210:	5c79      	ldrb	r1, [r7, r1]
 801f212:	bf0c      	ite	eq
 801f214:	f001 010f 	andeq.w	r1, r1, #15
 801f218:	1109      	asrne	r1, r1, #4
 801f21a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f21e:	b2c9      	uxtb	r1, r1
 801f220:	910f      	str	r1, [sp, #60]	; 0x3c
 801f222:	f1bc 0f00 	cmp.w	ip, #0
 801f226:	d019      	beq.n	801f25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801f228:	9908      	ldr	r1, [sp, #32]
 801f22a:	440b      	add	r3, r1
 801f22c:	0859      	lsrs	r1, r3, #1
 801f22e:	f013 0f01 	tst.w	r3, #1
 801f232:	5c79      	ldrb	r1, [r7, r1]
 801f234:	bf0c      	ite	eq
 801f236:	f001 010f 	andeq.w	r1, r1, #15
 801f23a:	1109      	asrne	r1, r1, #4
 801f23c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f240:	b2c9      	uxtb	r1, r1
 801f242:	3301      	adds	r3, #1
 801f244:	910b      	str	r1, [sp, #44]	; 0x2c
 801f246:	0859      	lsrs	r1, r3, #1
 801f248:	07db      	lsls	r3, r3, #31
 801f24a:	5c79      	ldrb	r1, [r7, r1]
 801f24c:	bf54      	ite	pl
 801f24e:	f001 010f 	andpl.w	r1, r1, #15
 801f252:	1109      	asrmi	r1, r1, #4
 801f254:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f258:	b2c9      	uxtb	r1, r1
 801f25a:	9110      	str	r1, [sp, #64]	; 0x40
 801f25c:	b280      	uxth	r0, r0
 801f25e:	fa1f fc8c 	uxth.w	ip, ip
 801f262:	fb00 f30c 	mul.w	r3, r0, ip
 801f266:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f26a:	0100      	lsls	r0, r0, #4
 801f26c:	fa1f fc8c 	uxth.w	ip, ip
 801f270:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801f274:	eba1 010c 	sub.w	r1, r1, ip
 801f278:	fa1f fe81 	uxth.w	lr, r1
 801f27c:	1ac0      	subs	r0, r0, r3
 801f27e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f280:	b280      	uxth	r0, r0
 801f282:	4348      	muls	r0, r1
 801f284:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f286:	fb02 020e 	mla	r2, r2, lr, r0
 801f28a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f28e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f290:	fb03 c302 	mla	r3, r3, r2, ip
 801f294:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f298:	2b00      	cmp	r3, #0
 801f29a:	d042      	beq.n	801f322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801f29c:	4a37      	ldr	r2, [pc, #220]	; (801f37c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801f29e:	6810      	ldr	r0, [r2, #0]
 801f2a0:	2bff      	cmp	r3, #255	; 0xff
 801f2a2:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801f2a6:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801f2aa:	fa5f fe80 	uxtb.w	lr, r0
 801f2ae:	d052      	beq.n	801f356 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801f2b0:	f8b8 c000 	ldrh.w	ip, [r8]
 801f2b4:	fa1f fb83 	uxth.w	fp, r3
 801f2b8:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f2bc:	43db      	mvns	r3, r3
 801f2be:	b2d2      	uxtb	r2, r2
 801f2c0:	b2db      	uxtb	r3, r3
 801f2c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f2c6:	fb12 f20b 	smulbb	r2, r2, fp
 801f2ca:	fb00 2203 	mla	r2, r0, r3, r2
 801f2ce:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801f2d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f2d6:	fa5f fc8c 	uxtb.w	ip, ip
 801f2da:	fb1e fe0b 	smulbb	lr, lr, fp
 801f2de:	fb0c ee03 	mla	lr, ip, r3, lr
 801f2e2:	b2c9      	uxtb	r1, r1
 801f2e4:	b292      	uxth	r2, r2
 801f2e6:	fb11 f10b 	smulbb	r1, r1, fp
 801f2ea:	fa1f fe8e 	uxth.w	lr, lr
 801f2ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f2f2:	fb00 1003 	mla	r0, r0, r3, r1
 801f2f6:	1c53      	adds	r3, r2, #1
 801f2f8:	f10e 0101 	add.w	r1, lr, #1
 801f2fc:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801f300:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f304:	b280      	uxth	r0, r0
 801f306:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f30a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f30e:	430a      	orrs	r2, r1
 801f310:	1c41      	adds	r1, r0, #1
 801f312:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f316:	0940      	lsrs	r0, r0, #5
 801f318:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f31c:	4302      	orrs	r2, r0
 801f31e:	f8a8 2000 	strh.w	r2, [r8]
 801f322:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f324:	441c      	add	r4, r3
 801f326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f328:	f108 0802 	add.w	r8, r8, #2
 801f32c:	441e      	add	r6, r3
 801f32e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f332:	e6c7      	b.n	801f0c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801f334:	f1bc 0f00 	cmp.w	ip, #0
 801f338:	d090      	beq.n	801f25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801f33a:	9908      	ldr	r1, [sp, #32]
 801f33c:	440b      	add	r3, r1
 801f33e:	0859      	lsrs	r1, r3, #1
 801f340:	07db      	lsls	r3, r3, #31
 801f342:	5c79      	ldrb	r1, [r7, r1]
 801f344:	bf54      	ite	pl
 801f346:	f001 010f 	andpl.w	r1, r1, #15
 801f34a:	1109      	asrmi	r1, r1, #4
 801f34c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f350:	b2c9      	uxtb	r1, r1
 801f352:	910b      	str	r1, [sp, #44]	; 0x2c
 801f354:	e782      	b.n	801f25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801f356:	4b0a      	ldr	r3, [pc, #40]	; (801f380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801f358:	00c9      	lsls	r1, r1, #3
 801f35a:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801f35e:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801f362:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f366:	ea4e 0e01 	orr.w	lr, lr, r1
 801f36a:	f8a8 e000 	strh.w	lr, [r8]
 801f36e:	e7d8      	b.n	801f322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801f370:	b013      	add	sp, #76	; 0x4c
 801f372:	ecbd 8b08 	vpop	{d8-d11}
 801f376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f37a:	bf00      	nop
 801f37c:	2000eb38 	.word	0x2000eb38
 801f380:	fffff800 	.word	0xfffff800

0801f384 <CRC_Lock>:
 801f384:	b530      	push	{r4, r5, lr}
 801f386:	4a20      	ldr	r2, [pc, #128]	; (801f408 <CRC_Lock+0x84>)
 801f388:	6813      	ldr	r3, [r2, #0]
 801f38a:	f023 0301 	bic.w	r3, r3, #1
 801f38e:	6013      	str	r3, [r2, #0]
 801f390:	4b1e      	ldr	r3, [pc, #120]	; (801f40c <CRC_Lock+0x88>)
 801f392:	681a      	ldr	r2, [r3, #0]
 801f394:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801f398:	4022      	ands	r2, r4
 801f39a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801f39e:	42aa      	cmp	r2, r5
 801f3a0:	d005      	beq.n	801f3ae <CRC_Lock+0x2a>
 801f3a2:	681b      	ldr	r3, [r3, #0]
 801f3a4:	f24c 2270 	movw	r2, #49776	; 0xc270
 801f3a8:	4023      	ands	r3, r4
 801f3aa:	4293      	cmp	r3, r2
 801f3ac:	d124      	bne.n	801f3f8 <CRC_Lock+0x74>
 801f3ae:	4b18      	ldr	r3, [pc, #96]	; (801f410 <CRC_Lock+0x8c>)
 801f3b0:	681b      	ldr	r3, [r3, #0]
 801f3b2:	bb0b      	cbnz	r3, 801f3f8 <CRC_Lock+0x74>
 801f3b4:	4b17      	ldr	r3, [pc, #92]	; (801f414 <CRC_Lock+0x90>)
 801f3b6:	681a      	ldr	r2, [r3, #0]
 801f3b8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f3bc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801f3c0:	d00d      	beq.n	801f3de <CRC_Lock+0x5a>
 801f3c2:	681a      	ldr	r2, [r3, #0]
 801f3c4:	f240 4483 	movw	r4, #1155	; 0x483
 801f3c8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801f3cc:	42a2      	cmp	r2, r4
 801f3ce:	d006      	beq.n	801f3de <CRC_Lock+0x5a>
 801f3d0:	681b      	ldr	r3, [r3, #0]
 801f3d2:	f240 4285 	movw	r2, #1157	; 0x485
 801f3d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801f3da:	4293      	cmp	r3, r2
 801f3dc:	d10c      	bne.n	801f3f8 <CRC_Lock+0x74>
 801f3de:	4b0e      	ldr	r3, [pc, #56]	; (801f418 <CRC_Lock+0x94>)
 801f3e0:	2201      	movs	r2, #1
 801f3e2:	601a      	str	r2, [r3, #0]
 801f3e4:	681a      	ldr	r2, [r3, #0]
 801f3e6:	2a00      	cmp	r2, #0
 801f3e8:	d1fc      	bne.n	801f3e4 <CRC_Lock+0x60>
 801f3ea:	4b0c      	ldr	r3, [pc, #48]	; (801f41c <CRC_Lock+0x98>)
 801f3ec:	6018      	str	r0, [r3, #0]
 801f3ee:	6818      	ldr	r0, [r3, #0]
 801f3f0:	1a43      	subs	r3, r0, r1
 801f3f2:	4258      	negs	r0, r3
 801f3f4:	4158      	adcs	r0, r3
 801f3f6:	bd30      	pop	{r4, r5, pc}
 801f3f8:	4b09      	ldr	r3, [pc, #36]	; (801f420 <CRC_Lock+0x9c>)
 801f3fa:	2201      	movs	r2, #1
 801f3fc:	601a      	str	r2, [r3, #0]
 801f3fe:	681a      	ldr	r2, [r3, #0]
 801f400:	2a00      	cmp	r2, #0
 801f402:	d1fc      	bne.n	801f3fe <CRC_Lock+0x7a>
 801f404:	4b07      	ldr	r3, [pc, #28]	; (801f424 <CRC_Lock+0xa0>)
 801f406:	e7f1      	b.n	801f3ec <CRC_Lock+0x68>
 801f408:	e0002000 	.word	0xe0002000
 801f40c:	e000ed00 	.word	0xe000ed00
 801f410:	e0042000 	.word	0xe0042000
 801f414:	5c001000 	.word	0x5c001000
 801f418:	58024c08 	.word	0x58024c08
 801f41c:	58024c00 	.word	0x58024c00
 801f420:	40023008 	.word	0x40023008
 801f424:	40023000 	.word	0x40023000

0801f428 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801f428:	6101      	str	r1, [r0, #16]
 801f42a:	4770      	bx	lr

0801f42c <_ZN8touchgfx8Gestures4tickEv>:
 801f42c:	7b83      	ldrb	r3, [r0, #14]
 801f42e:	b14b      	cbz	r3, 801f444 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801f430:	8903      	ldrh	r3, [r0, #8]
 801f432:	3301      	adds	r3, #1
 801f434:	b29b      	uxth	r3, r3
 801f436:	2b07      	cmp	r3, #7
 801f438:	8103      	strh	r3, [r0, #8]
 801f43a:	bf81      	itttt	hi
 801f43c:	2300      	movhi	r3, #0
 801f43e:	8143      	strhhi	r3, [r0, #10]
 801f440:	8183      	strhhi	r3, [r0, #12]
 801f442:	7383      	strbhi	r3, [r0, #14]
 801f444:	4770      	bx	lr
	...

0801f448 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801f448:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801f44c:	4604      	mov	r4, r0
 801f44e:	8880      	ldrh	r0, [r0, #4]
 801f450:	f8ad 0006 	strh.w	r0, [sp, #6]
 801f454:	4698      	mov	r8, r3
 801f456:	eba8 0000 	sub.w	r0, r8, r0
 801f45a:	4b1c      	ldr	r3, [pc, #112]	; (801f4cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801f45c:	9300      	str	r3, [sp, #0]
 801f45e:	b280      	uxth	r0, r0
 801f460:	2300      	movs	r3, #0
 801f462:	f88d 3004 	strb.w	r3, [sp, #4]
 801f466:	b203      	sxth	r3, r0
 801f468:	2b00      	cmp	r3, #0
 801f46a:	bfb8      	it	lt
 801f46c:	4240      	neglt	r0, r0
 801f46e:	4617      	mov	r7, r2
 801f470:	8aa2      	ldrh	r2, [r4, #20]
 801f472:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801f476:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f47a:	bfb8      	it	lt
 801f47c:	b203      	sxthlt	r3, r0
 801f47e:	460e      	mov	r6, r1
 801f480:	4293      	cmp	r3, r2
 801f482:	88e1      	ldrh	r1, [r4, #6]
 801f484:	f8ad 1008 	strh.w	r1, [sp, #8]
 801f488:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f48c:	dc08      	bgt.n	801f4a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801f48e:	1a69      	subs	r1, r5, r1
 801f490:	b289      	uxth	r1, r1
 801f492:	b20b      	sxth	r3, r1
 801f494:	2b00      	cmp	r3, #0
 801f496:	bfbc      	itt	lt
 801f498:	4249      	neglt	r1, r1
 801f49a:	b20b      	sxthlt	r3, r1
 801f49c:	429a      	cmp	r2, r3
 801f49e:	da13      	bge.n	801f4c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801f4a0:	6920      	ldr	r0, [r4, #16]
 801f4a2:	6803      	ldr	r3, [r0, #0]
 801f4a4:	4669      	mov	r1, sp
 801f4a6:	685b      	ldr	r3, [r3, #4]
 801f4a8:	4798      	blx	r3
 801f4aa:	eba8 0606 	sub.w	r6, r8, r6
 801f4ae:	2300      	movs	r3, #0
 801f4b0:	1bef      	subs	r7, r5, r7
 801f4b2:	2001      	movs	r0, #1
 801f4b4:	8123      	strh	r3, [r4, #8]
 801f4b6:	8166      	strh	r6, [r4, #10]
 801f4b8:	81a7      	strh	r7, [r4, #12]
 801f4ba:	f8a4 8004 	strh.w	r8, [r4, #4]
 801f4be:	80e5      	strh	r5, [r4, #6]
 801f4c0:	73a0      	strb	r0, [r4, #14]
 801f4c2:	b004      	add	sp, #16
 801f4c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f4c8:	2000      	movs	r0, #0
 801f4ca:	e7fa      	b.n	801f4c2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801f4cc:	08024a04 	.word	0x08024a04

0801f4d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801f4d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f4d2:	461e      	mov	r6, r3
 801f4d4:	1e4b      	subs	r3, r1, #1
 801f4d6:	2b01      	cmp	r3, #1
 801f4d8:	b085      	sub	sp, #20
 801f4da:	4604      	mov	r4, r0
 801f4dc:	460d      	mov	r5, r1
 801f4de:	4617      	mov	r7, r2
 801f4e0:	d84b      	bhi.n	801f57a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801f4e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801f4e6:	1cd3      	adds	r3, r2, #3
 801f4e8:	b29b      	uxth	r3, r3
 801f4ea:	2b06      	cmp	r3, #6
 801f4ec:	d916      	bls.n	801f51c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801f4ee:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801f590 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f4f2:	f8cd c004 	str.w	ip, [sp, #4]
 801f4f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f4fa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f4fe:	6900      	ldr	r0, [r0, #16]
 801f500:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f504:	f04f 0c00 	mov.w	ip, #0
 801f508:	f88d c008 	strb.w	ip, [sp, #8]
 801f50c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f510:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f514:	6803      	ldr	r3, [r0, #0]
 801f516:	a901      	add	r1, sp, #4
 801f518:	689b      	ldr	r3, [r3, #8]
 801f51a:	4798      	blx	r3
 801f51c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801f520:	1cd3      	adds	r3, r2, #3
 801f522:	b29b      	uxth	r3, r3
 801f524:	2b06      	cmp	r3, #6
 801f526:	d916      	bls.n	801f556 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f528:	f8df c064 	ldr.w	ip, [pc, #100]	; 801f590 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801f52c:	f8cd c004 	str.w	ip, [sp, #4]
 801f530:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f534:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f538:	6920      	ldr	r0, [r4, #16]
 801f53a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801f53e:	f04f 0c01 	mov.w	ip, #1
 801f542:	f88d c008 	strb.w	ip, [sp, #8]
 801f546:	f8ad 200a 	strh.w	r2, [sp, #10]
 801f54a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f54e:	6803      	ldr	r3, [r0, #0]
 801f550:	a901      	add	r1, sp, #4
 801f552:	689b      	ldr	r3, [r3, #8]
 801f554:	4798      	blx	r3
 801f556:	4b0d      	ldr	r3, [pc, #52]	; (801f58c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801f558:	9301      	str	r3, [sp, #4]
 801f55a:	6920      	ldr	r0, [r4, #16]
 801f55c:	f88d 5008 	strb.w	r5, [sp, #8]
 801f560:	2300      	movs	r3, #0
 801f562:	f8ad 700a 	strh.w	r7, [sp, #10]
 801f566:	f8ad 600c 	strh.w	r6, [sp, #12]
 801f56a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f56e:	6803      	ldr	r3, [r0, #0]
 801f570:	a901      	add	r1, sp, #4
 801f572:	681b      	ldr	r3, [r3, #0]
 801f574:	4798      	blx	r3
 801f576:	b005      	add	sp, #20
 801f578:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f57a:	2900      	cmp	r1, #0
 801f57c:	d1eb      	bne.n	801f556 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f57e:	80a2      	strh	r2, [r4, #4]
 801f580:	80c6      	strh	r6, [r0, #6]
 801f582:	60a1      	str	r1, [r4, #8]
 801f584:	81a1      	strh	r1, [r4, #12]
 801f586:	73a1      	strb	r1, [r4, #14]
 801f588:	e7e5      	b.n	801f556 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801f58a:	bf00      	nop
 801f58c:	080249f0 	.word	0x080249f0
 801f590:	08024a18 	.word	0x08024a18

0801f594 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 801f594:	10c9      	asrs	r1, r1, #3
 801f596:	2900      	cmp	r1, #0
 801f598:	bfb8      	it	lt
 801f59a:	4249      	neglt	r1, r1
 801f59c:	2801      	cmp	r0, #1
 801f59e:	d108      	bne.n	801f5b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801f5a0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801f5a4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801f5a8:	4601      	mov	r1, r0
 801f5aa:	dd02      	ble.n	801f5b2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801f5ac:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801f5b0:	4770      	bx	lr
 801f5b2:	29ff      	cmp	r1, #255	; 0xff
 801f5b4:	bfa8      	it	ge
 801f5b6:	21ff      	movge	r1, #255	; 0xff
 801f5b8:	4608      	mov	r0, r1
 801f5ba:	4770      	bx	lr

0801f5bc <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801f5bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5c0:	688c      	ldr	r4, [r1, #8]
 801f5c2:	2c00      	cmp	r4, #0
 801f5c4:	b087      	sub	sp, #28
 801f5c6:	4607      	mov	r7, r0
 801f5c8:	db2b      	blt.n	801f622 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801f5ca:	6803      	ldr	r3, [r0, #0]
 801f5cc:	691a      	ldr	r2, [r3, #16]
 801f5ce:	42a2      	cmp	r2, r4
 801f5d0:	dd27      	ble.n	801f622 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801f5d2:	685a      	ldr	r2, [r3, #4]
 801f5d4:	695e      	ldr	r6, [r3, #20]
 801f5d6:	68cd      	ldr	r5, [r1, #12]
 801f5d8:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801f5dc:	f893 a008 	ldrb.w	sl, [r3, #8]
 801f5e0:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801f5e4:	fb06 2604 	mla	r6, r6, r4, r2
 801f5e8:	698a      	ldr	r2, [r1, #24]
 801f5ea:	9205      	str	r2, [sp, #20]
 801f5ec:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801f5f0:	9b05      	ldr	r3, [sp, #20]
 801f5f2:	6839      	ldr	r1, [r7, #0]
 801f5f4:	eb03 0c02 	add.w	ip, r3, r2
 801f5f8:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801f5fc:	68c9      	ldr	r1, [r1, #12]
 801f5fe:	1898      	adds	r0, r3, r2
 801f600:	4288      	cmp	r0, r1
 801f602:	db02      	blt.n	801f60a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801f604:	1a8b      	subs	r3, r1, r2
 801f606:	2b00      	cmp	r3, #0
 801f608:	dd09      	ble.n	801f61e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801f60a:	6878      	ldr	r0, [r7, #4]
 801f60c:	6801      	ldr	r1, [r0, #0]
 801f60e:	9400      	str	r4, [sp, #0]
 801f610:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801f614:	4653      	mov	r3, sl
 801f616:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801f61a:	4631      	mov	r1, r6
 801f61c:	47d8      	blx	fp
 801f61e:	3d01      	subs	r5, #1
 801f620:	d1e4      	bne.n	801f5ec <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801f622:	b007      	add	sp, #28
 801f624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f628 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801f628:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801f62c:	b90b      	cbnz	r3, 801f632 <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801f62e:	f001 b999 	b.w	8020964 <_ZN8touchgfx7Outline6lineToEii>
 801f632:	4770      	bx	lr

0801f634 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801f634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f638:	4b90      	ldr	r3, [pc, #576]	; (801f87c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801f63a:	4604      	mov	r4, r0
 801f63c:	2600      	movs	r6, #0
 801f63e:	f100 0518 	add.w	r5, r0, #24
 801f642:	e9c0 3100 	strd	r3, r1, [r0]
 801f646:	b086      	sub	sp, #24
 801f648:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801f64c:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801f650:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801f654:	4628      	mov	r0, r5
 801f656:	4690      	mov	r8, r2
 801f658:	f001 fbaa 	bl	8020db0 <_ZN8touchgfx15RenderingBufferC1Ev>
 801f65c:	4638      	mov	r0, r7
 801f65e:	f000 fb45 	bl	801fcec <_ZN8touchgfx7OutlineC1Ev>
 801f662:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801f666:	f001 fb4b 	bl	8020d00 <_ZN8touchgfx8ScanlineC1Ev>
 801f66a:	2301      	movs	r3, #1
 801f66c:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801f670:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 801f674:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801f678:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f67c:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801f680:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801f684:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801f688:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801f68c:	f7ef fb62 	bl	800ed54 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801f690:	b928      	cbnz	r0, 801f69e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 801f692:	4b7b      	ldr	r3, [pc, #492]	; (801f880 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801f694:	4a7b      	ldr	r2, [pc, #492]	; (801f884 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801f696:	212d      	movs	r1, #45	; 0x2d
 801f698:	487b      	ldr	r0, [pc, #492]	; (801f888 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801f69a:	f001 fbd1 	bl	8020e40 <__assert_func>
 801f69e:	f9b8 2000 	ldrsh.w	r2, [r8]
 801f6a2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801f6a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801f6aa:	9602      	str	r6, [sp, #8]
 801f6ac:	4410      	add	r0, r2
 801f6ae:	b280      	uxth	r0, r0
 801f6b0:	fa0f fa80 	sxth.w	sl, r0
 801f6b4:	f1ba 0f00 	cmp.w	sl, #0
 801f6b8:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801f6bc:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801f6c0:	dd70      	ble.n	801f7a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801f6c2:	4591      	cmp	r9, r2
 801f6c4:	dd6e      	ble.n	801f7a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801f6c6:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801f6ca:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801f6ce:	440b      	add	r3, r1
 801f6d0:	b29b      	uxth	r3, r3
 801f6d2:	b21e      	sxth	r6, r3
 801f6d4:	2e00      	cmp	r6, #0
 801f6d6:	dd65      	ble.n	801f7a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801f6d8:	458e      	cmp	lr, r1
 801f6da:	dd63      	ble.n	801f7a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801f6dc:	45d1      	cmp	r9, sl
 801f6de:	bfb8      	it	lt
 801f6e0:	fa1f f089 	uxthlt.w	r0, r9
 801f6e4:	45b6      	cmp	lr, r6
 801f6e6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801f6ea:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801f6ee:	bfb8      	it	lt
 801f6f0:	fa1f f38e 	uxthlt.w	r3, lr
 801f6f4:	1a80      	subs	r0, r0, r2
 801f6f6:	1a5b      	subs	r3, r3, r1
 801f6f8:	f8ad 000c 	strh.w	r0, [sp, #12]
 801f6fc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f700:	f8ad 2008 	strh.w	r2, [sp, #8]
 801f704:	f8ad 100a 	strh.w	r1, [sp, #10]
 801f708:	f10d 0808 	add.w	r8, sp, #8
 801f70c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f710:	ae04      	add	r6, sp, #16
 801f712:	e886 0003 	stmia.w	r6, {r0, r1}
 801f716:	f8dc 3000 	ldr.w	r3, [ip]
 801f71a:	4660      	mov	r0, ip
 801f71c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f71e:	4631      	mov	r1, r6
 801f720:	4798      	blx	r3
 801f722:	6861      	ldr	r1, [r4, #4]
 801f724:	4640      	mov	r0, r8
 801f726:	3104      	adds	r1, #4
 801f728:	f7f0 fe2e 	bl	8010388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f72c:	4630      	mov	r0, r6
 801f72e:	f7f0 fe43 	bl	80103b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f732:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801f736:	f7ef fa9d 	bl	800ec74 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801f73a:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801f73e:	4638      	mov	r0, r7
 801f740:	f000 fab0 	bl	801fca4 <_ZN8touchgfx7Outline5resetEv>
 801f744:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801f748:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801f74c:	015b      	lsls	r3, r3, #5
 801f74e:	60e3      	str	r3, [r4, #12]
 801f750:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f754:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801f758:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801f75c:	015b      	lsls	r3, r3, #5
 801f75e:	6123      	str	r3, [r4, #16]
 801f760:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801f764:	015b      	lsls	r3, r3, #5
 801f766:	6163      	str	r3, [r4, #20]
 801f768:	4b48      	ldr	r3, [pc, #288]	; (801f88c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801f76a:	0152      	lsls	r2, r2, #5
 801f76c:	6818      	ldr	r0, [r3, #0]
 801f76e:	60a2      	str	r2, [r4, #8]
 801f770:	6803      	ldr	r3, [r0, #0]
 801f772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f774:	4798      	blx	r3
 801f776:	4606      	mov	r6, r0
 801f778:	f7ed f812 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 801f77c:	6803      	ldr	r3, [r0, #0]
 801f77e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f780:	4798      	blx	r3
 801f782:	4607      	mov	r7, r0
 801f784:	f7ed f80c 	bl	800c7a0 <_ZN8touchgfx3HAL3lcdEv>
 801f788:	6803      	ldr	r3, [r0, #0]
 801f78a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f78c:	4798      	blx	r3
 801f78e:	280d      	cmp	r0, #13
 801f790:	d855      	bhi.n	801f83e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x20a>
 801f792:	e8df f000 	tbb	[pc, r0]
 801f796:	564c      	.short	0x564c
 801f798:	2b6f0a67 	.word	0x2b6f0a67
 801f79c:	6060603b 	.word	0x6060603b
 801f7a0:	6f6f6060 	.word	0x6f6f6060
 801f7a4:	2300      	movs	r3, #0
 801f7a6:	9303      	str	r3, [sp, #12]
 801f7a8:	e7ae      	b.n	801f708 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 801f7aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f7ae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f7b2:	2108      	movs	r1, #8
 801f7b4:	fb92 f1f1 	sdiv	r1, r2, r1
 801f7b8:	fb07 1303 	mla	r3, r7, r3, r1
 801f7bc:	441e      	add	r6, r3
 801f7be:	4253      	negs	r3, r2
 801f7c0:	f003 0307 	and.w	r3, r3, #7
 801f7c4:	f002 0207 	and.w	r2, r2, #7
 801f7c8:	bf58      	it	pl
 801f7ca:	425a      	negpl	r2, r3
 801f7cc:	b2d2      	uxtb	r2, r2
 801f7ce:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f7d2:	6721      	str	r1, [r4, #112]	; 0x70
 801f7d4:	e9cd 1700 	strd	r1, r7, [sp]
 801f7d8:	4628      	mov	r0, r5
 801f7da:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801f7de:	4631      	mov	r1, r6
 801f7e0:	f001 faf2 	bl	8020dc8 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801f7e4:	4620      	mov	r0, r4
 801f7e6:	b006      	add	sp, #24
 801f7e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f7ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f7f0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f7f4:	2104      	movs	r1, #4
 801f7f6:	fb92 f1f1 	sdiv	r1, r2, r1
 801f7fa:	fb07 1303 	mla	r3, r7, r3, r1
 801f7fe:	441e      	add	r6, r3
 801f800:	4253      	negs	r3, r2
 801f802:	f003 0303 	and.w	r3, r3, #3
 801f806:	f002 0203 	and.w	r2, r2, #3
 801f80a:	e7dd      	b.n	801f7c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801f80c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f810:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f814:	2a00      	cmp	r2, #0
 801f816:	f04f 0102 	mov.w	r1, #2
 801f81a:	fb92 f1f1 	sdiv	r1, r2, r1
 801f81e:	f002 0201 	and.w	r2, r2, #1
 801f822:	fb07 1303 	mla	r3, r7, r3, r1
 801f826:	441e      	add	r6, r3
 801f828:	bfb8      	it	lt
 801f82a:	4252      	neglt	r2, r2
 801f82c:	e7ce      	b.n	801f7cc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 801f82e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f832:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f836:	437b      	muls	r3, r7
 801f838:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801f83c:	441e      	add	r6, r3
 801f83e:	2200      	movs	r2, #0
 801f840:	e7c5      	b.n	801f7ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 801f842:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f846:	fb07 f203 	mul.w	r2, r7, r3
 801f84a:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801f84e:	2103      	movs	r1, #3
 801f850:	fb13 2301 	smlabb	r3, r3, r1, r2
 801f854:	e7f2      	b.n	801f83c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 801f856:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f85a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f85e:	fb07 2303 	mla	r3, r7, r3, r2
 801f862:	e7eb      	b.n	801f83c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 801f864:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f868:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f86c:	437b      	muls	r3, r7
 801f86e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801f872:	e7e3      	b.n	801f83c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 801f874:	4b06      	ldr	r3, [pc, #24]	; (801f890 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 801f876:	4a03      	ldr	r2, [pc, #12]	; (801f884 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801f878:	216c      	movs	r1, #108	; 0x6c
 801f87a:	e70d      	b.n	801f698 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 801f87c:	08025e2c 	.word	0x08025e2c
 801f880:	08025d75 	.word	0x08025d75
 801f884:	08025e34 	.word	0x08025e34
 801f888:	08025dd1 	.word	0x08025dd1
 801f88c:	2000eb10 	.word	0x2000eb10
 801f890:	08025e05 	.word	0x08025e05

0801f894 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801f894:	6812      	ldr	r2, [r2, #0]
 801f896:	2a00      	cmp	r2, #0
 801f898:	db0b      	blt.n	801f8b2 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801f89a:	9800      	ldr	r0, [sp, #0]
 801f89c:	6800      	ldr	r0, [r0, #0]
 801f89e:	4290      	cmp	r0, r2
 801f8a0:	bfd4      	ite	le
 801f8a2:	2002      	movle	r0, #2
 801f8a4:	2000      	movgt	r0, #0
 801f8a6:	680a      	ldr	r2, [r1, #0]
 801f8a8:	2a00      	cmp	r2, #0
 801f8aa:	da04      	bge.n	801f8b6 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801f8ac:	f040 0004 	orr.w	r0, r0, #4
 801f8b0:	4770      	bx	lr
 801f8b2:	2001      	movs	r0, #1
 801f8b4:	e7f7      	b.n	801f8a6 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801f8b6:	681b      	ldr	r3, [r3, #0]
 801f8b8:	4293      	cmp	r3, r2
 801f8ba:	bfd8      	it	le
 801f8bc:	f040 0008 	orrle.w	r0, r0, #8
 801f8c0:	4770      	bx	lr
	...

0801f8c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801f8c4:	b510      	push	{r4, lr}
 801f8c6:	4b07      	ldr	r3, [pc, #28]	; (801f8e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801f8c8:	781b      	ldrb	r3, [r3, #0]
 801f8ca:	2b01      	cmp	r3, #1
 801f8cc:	d108      	bne.n	801f8e0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801f8ce:	6843      	ldr	r3, [r0, #4]
 801f8d0:	6814      	ldr	r4, [r2, #0]
 801f8d2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801f8d6:	680b      	ldr	r3, [r1, #0]
 801f8d8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801f8dc:	6013      	str	r3, [r2, #0]
 801f8de:	600c      	str	r4, [r1, #0]
 801f8e0:	bd10      	pop	{r4, pc}
 801f8e2:	bf00      	nop
 801f8e4:	2000eb08 	.word	0x2000eb08

0801f8e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801f8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f8ea:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801f8ee:	b085      	sub	sp, #20
 801f8f0:	4604      	mov	r4, r0
 801f8f2:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801f8f6:	b33b      	cbz	r3, 801f948 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801f8f8:	aa02      	add	r2, sp, #8
 801f8fa:	a903      	add	r1, sp, #12
 801f8fc:	f7ff ffe2 	bl	801f8c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f900:	68a3      	ldr	r3, [r4, #8]
 801f902:	9e03      	ldr	r6, [sp, #12]
 801f904:	9f02      	ldr	r7, [sp, #8]
 801f906:	1af6      	subs	r6, r6, r3
 801f908:	68e3      	ldr	r3, [r4, #12]
 801f90a:	9603      	str	r6, [sp, #12]
 801f90c:	1aff      	subs	r7, r7, r3
 801f90e:	f104 0314 	add.w	r3, r4, #20
 801f912:	9300      	str	r3, [sp, #0]
 801f914:	aa02      	add	r2, sp, #8
 801f916:	f104 0310 	add.w	r3, r4, #16
 801f91a:	a903      	add	r1, sp, #12
 801f91c:	4620      	mov	r0, r4
 801f91e:	9702      	str	r7, [sp, #8]
 801f920:	f7ff ffb8 	bl	801f894 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801f924:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801f928:	4605      	mov	r5, r0
 801f92a:	b97b      	cbnz	r3, 801f94c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801f92c:	463a      	mov	r2, r7
 801f92e:	4631      	mov	r1, r6
 801f930:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801f934:	f7ff fe78 	bl	801f628 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f938:	9b03      	ldr	r3, [sp, #12]
 801f93a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801f93e:	9b02      	ldr	r3, [sp, #8]
 801f940:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801f944:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801f948:	b005      	add	sp, #20
 801f94a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f94c:	b110      	cbz	r0, 801f954 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801f94e:	ea13 0200 	ands.w	r2, r3, r0
 801f952:	d11c      	bne.n	801f98e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801f954:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801f958:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801f95c:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801f960:	b188      	cbz	r0, 801f986 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801f962:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801f966:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801f96a:	b913      	cbnz	r3, 801f972 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801f96c:	4630      	mov	r0, r6
 801f96e:	f001 f829 	bl	80209c4 <_ZN8touchgfx7Outline6moveToEii>
 801f972:	2300      	movs	r3, #0
 801f974:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f978:	2301      	movs	r3, #1
 801f97a:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801f97e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801f982:	4630      	mov	r0, r6
 801f984:	e7d6      	b.n	801f934 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801f986:	4630      	mov	r0, r6
 801f988:	f7ff fe4e 	bl	801f628 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f98c:	e7f7      	b.n	801f97e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801f98e:	4615      	mov	r5, r2
 801f990:	e7d2      	b.n	801f938 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801f992 <_ZN8touchgfx6Canvas5closeEv>:
 801f992:	b538      	push	{r3, r4, r5, lr}
 801f994:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801f998:	4604      	mov	r4, r0
 801f99a:	b993      	cbnz	r3, 801f9c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f99c:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801f9a0:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801f9a4:	4213      	tst	r3, r2
 801f9a6:	d10c      	bne.n	801f9c2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f9a8:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801f9ac:	b123      	cbz	r3, 801f9b8 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801f9ae:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801f9b2:	4628      	mov	r0, r5
 801f9b4:	f7ff fe38 	bl	801f628 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f9b8:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801f9bc:	4628      	mov	r0, r5
 801f9be:	f7ff fe33 	bl	801f628 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f9c2:	2300      	movs	r3, #0
 801f9c4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f9c8:	bd38      	pop	{r3, r4, r5, pc}

0801f9ca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801f9ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f9cc:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801f9d0:	b085      	sub	sp, #20
 801f9d2:	4604      	mov	r4, r0
 801f9d4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801f9d8:	b353      	cbz	r3, 801fa30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801f9da:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801f9de:	b90b      	cbnz	r3, 801f9e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801f9e0:	f7ff ffd7 	bl	801f992 <_ZN8touchgfx6Canvas5closeEv>
 801f9e4:	aa02      	add	r2, sp, #8
 801f9e6:	a903      	add	r1, sp, #12
 801f9e8:	4620      	mov	r0, r4
 801f9ea:	f7ff ff6b 	bl	801f8c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f9ee:	68a3      	ldr	r3, [r4, #8]
 801f9f0:	9d03      	ldr	r5, [sp, #12]
 801f9f2:	9e02      	ldr	r6, [sp, #8]
 801f9f4:	1aed      	subs	r5, r5, r3
 801f9f6:	68e3      	ldr	r3, [r4, #12]
 801f9f8:	9503      	str	r5, [sp, #12]
 801f9fa:	1af6      	subs	r6, r6, r3
 801f9fc:	f104 0314 	add.w	r3, r4, #20
 801fa00:	9300      	str	r3, [sp, #0]
 801fa02:	aa02      	add	r2, sp, #8
 801fa04:	f104 0310 	add.w	r3, r4, #16
 801fa08:	a903      	add	r1, sp, #12
 801fa0a:	4620      	mov	r0, r4
 801fa0c:	9602      	str	r6, [sp, #8]
 801fa0e:	f7ff ff41 	bl	801f894 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801fa12:	4607      	mov	r7, r0
 801fa14:	b170      	cbz	r0, 801fa34 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801fa16:	2301      	movs	r3, #1
 801fa18:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801fa1c:	9a03      	ldr	r2, [sp, #12]
 801fa1e:	9b02      	ldr	r3, [sp, #8]
 801fa20:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801fa24:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801fa28:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801fa2c:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801fa30:	b005      	add	sp, #20
 801fa32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fa34:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801fa38:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801fa3c:	b92b      	cbnz	r3, 801fa4a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801fa3e:	4632      	mov	r2, r6
 801fa40:	4629      	mov	r1, r5
 801fa42:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801fa46:	f000 ffbd 	bl	80209c4 <_ZN8touchgfx7Outline6moveToEii>
 801fa4a:	2300      	movs	r3, #0
 801fa4c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801fa50:	2301      	movs	r3, #1
 801fa52:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801fa56:	e7e1      	b.n	801fa1c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801fa58 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801fa58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa5c:	b087      	sub	sp, #28
 801fa5e:	4604      	mov	r4, r0
 801fa60:	9105      	str	r1, [sp, #20]
 801fa62:	f001 f8f6 	bl	8020c52 <_ZN8touchgfx7Outline8getCellsEv>
 801fa66:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801fa6a:	4605      	mov	r5, r0
 801fa6c:	f1b9 0f00 	cmp.w	r9, #0
 801fa70:	d103      	bne.n	801fa7a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801fa72:	2001      	movs	r0, #1
 801fa74:	b007      	add	sp, #28
 801fa76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa7a:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801fa7e:	2e00      	cmp	r6, #0
 801fa80:	d139      	bne.n	801faf6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801fa82:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801fa86:	4640      	mov	r0, r8
 801fa88:	f001 f925 	bl	8020cd6 <_ZN8touchgfx8Scanline5resetEv>
 801fa8c:	f109 33ff 	add.w	r3, r9, #4294967295
 801fa90:	f105 0708 	add.w	r7, r5, #8
 801fa94:	9303      	str	r3, [sp, #12]
 801fa96:	f9b5 b000 	ldrsh.w	fp, [r5]
 801fa9a:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801fa9e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801faa2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801faa6:	46da      	mov	sl, fp
 801faa8:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801faac:	9b03      	ldr	r3, [sp, #12]
 801faae:	9504      	str	r5, [sp, #16]
 801fab0:	3b01      	subs	r3, #1
 801fab2:	9303      	str	r3, [sp, #12]
 801fab4:	3301      	adds	r3, #1
 801fab6:	4416      	add	r6, r2
 801fab8:	463d      	mov	r5, r7
 801faba:	d01e      	beq.n	801fafa <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801fabc:	3708      	adds	r7, #8
 801fabe:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801fac2:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801fac6:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801faca:	4290      	cmp	r0, r2
 801facc:	d11e      	bne.n	801fb0c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801face:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801fad2:	4411      	add	r1, r2
 801fad4:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801fad8:	e7e8      	b.n	801faac <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801fada:	1c91      	adds	r1, r2, #2
 801fadc:	f04f 0301 	mov.w	r3, #1
 801fae0:	65e1      	str	r1, [r4, #92]	; 0x5c
 801fae2:	8053      	strh	r3, [r2, #2]
 801fae4:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801fae6:	1c91      	adds	r1, r2, #2
 801fae8:	65a1      	str	r1, [r4, #88]	; 0x58
 801faea:	f8a2 b002 	strh.w	fp, [r2, #2]
 801faee:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801faf0:	3201      	adds	r2, #1
 801faf2:	6562      	str	r2, [r4, #84]	; 0x54
 801faf4:	e03a      	b.n	801fb6c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801faf6:	2000      	movs	r0, #0
 801faf8:	e7bc      	b.n	801fa74 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801fafa:	b951      	cbnz	r1, 801fb12 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801fafc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801fafe:	2b00      	cmp	r3, #0
 801fb00:	d0b7      	beq.n	801fa72 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801fb02:	4641      	mov	r1, r8
 801fb04:	9805      	ldr	r0, [sp, #20]
 801fb06:	f7ff fd59 	bl	801f5bc <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801fb0a:	e7b2      	b.n	801fa72 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801fb0c:	2900      	cmp	r1, #0
 801fb0e:	d035      	beq.n	801fb7c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801fb10:	9504      	str	r5, [sp, #16]
 801fb12:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801fb16:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801fb1a:	f7ff fd3b 	bl	801f594 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801fb1e:	4605      	mov	r5, r0
 801fb20:	b330      	cbz	r0, 801fb70 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801fb22:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801fb24:	b182      	cbz	r2, 801fb48 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801fb26:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801fb28:	4591      	cmp	r9, r2
 801fb2a:	d00d      	beq.n	801fb48 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801fb2c:	4641      	mov	r1, r8
 801fb2e:	9805      	ldr	r0, [sp, #20]
 801fb30:	f7ff fd44 	bl	801f5bc <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801fb34:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801fb38:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801fb3a:	65e2      	str	r2, [r4, #92]	; 0x5c
 801fb3c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801fb40:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801fb42:	65a2      	str	r2, [r4, #88]	; 0x58
 801fb44:	2300      	movs	r3, #0
 801fb46:	6563      	str	r3, [r4, #84]	; 0x54
 801fb48:	f1bb 0f00 	cmp.w	fp, #0
 801fb4c:	db10      	blt.n	801fb70 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801fb4e:	f7ef f90f 	bl	800ed70 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801fb52:	4583      	cmp	fp, r0
 801fb54:	da0c      	bge.n	801fb70 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801fb56:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801fb58:	f802 500b 	strb.w	r5, [r2, fp]
 801fb5c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801fb5e:	3201      	adds	r2, #1
 801fb60:	4593      	cmp	fp, r2
 801fb62:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801fb64:	d1b9      	bne.n	801fada <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801fb66:	8811      	ldrh	r1, [r2, #0]
 801fb68:	3101      	adds	r1, #1
 801fb6a:	8011      	strh	r1, [r2, #0]
 801fb6c:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801fb70:	9b03      	ldr	r3, [sp, #12]
 801fb72:	3301      	adds	r3, #1
 801fb74:	d0c2      	beq.n	801fafc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801fb76:	9d04      	ldr	r5, [sp, #16]
 801fb78:	f10b 0a01 	add.w	sl, fp, #1
 801fb7c:	f9b5 3000 	ldrsh.w	r3, [r5]
 801fb80:	4553      	cmp	r3, sl
 801fb82:	dd88      	ble.n	801fa96 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801fb84:	01b1      	lsls	r1, r6, #6
 801fb86:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801fb8a:	f7ff fd03 	bl	801f594 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801fb8e:	4683      	mov	fp, r0
 801fb90:	2800      	cmp	r0, #0
 801fb92:	d080      	beq.n	801fa96 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801fb94:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801fb96:	b183      	cbz	r3, 801fbba <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801fb98:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801fb9a:	4599      	cmp	r9, r3
 801fb9c:	d00d      	beq.n	801fbba <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801fb9e:	4641      	mov	r1, r8
 801fba0:	9805      	ldr	r0, [sp, #20]
 801fba2:	f7ff fd0b 	bl	801f5bc <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801fba6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801fbaa:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801fbae:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801fbb0:	65e3      	str	r3, [r4, #92]	; 0x5c
 801fbb2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801fbb4:	65a3      	str	r3, [r4, #88]	; 0x58
 801fbb6:	2300      	movs	r3, #0
 801fbb8:	6563      	str	r3, [r4, #84]	; 0x54
 801fbba:	f9b5 3000 	ldrsh.w	r3, [r5]
 801fbbe:	f8cd b000 	str.w	fp, [sp]
 801fbc2:	eba3 030a 	sub.w	r3, r3, sl
 801fbc6:	464a      	mov	r2, r9
 801fbc8:	4651      	mov	r1, sl
 801fbca:	4640      	mov	r0, r8
 801fbcc:	f001 f8ae 	bl	8020d2c <_ZN8touchgfx8Scanline7addSpanEiijj>
 801fbd0:	e761      	b.n	801fa96 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801fbd2 <_ZN8touchgfx6Canvas6renderEh>:
 801fbd2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fbd4:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801fbd8:	4604      	mov	r4, r0
 801fbda:	460d      	mov	r5, r1
 801fbdc:	b913      	cbnz	r3, 801fbe4 <_ZN8touchgfx6Canvas6renderEh+0x12>
 801fbde:	2001      	movs	r0, #1
 801fbe0:	b003      	add	sp, #12
 801fbe2:	bd30      	pop	{r4, r5, pc}
 801fbe4:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801fbe8:	2b00      	cmp	r3, #0
 801fbea:	d12f      	bne.n	801fc4c <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801fbec:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801fbf0:	2b00      	cmp	r3, #0
 801fbf2:	d0f4      	beq.n	801fbde <_ZN8touchgfx6Canvas6renderEh+0xc>
 801fbf4:	6840      	ldr	r0, [r0, #4]
 801fbf6:	6803      	ldr	r3, [r0, #0]
 801fbf8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801fbfa:	4798      	blx	r3
 801fbfc:	fb10 f105 	smulbb	r1, r0, r5
 801fc00:	b288      	uxth	r0, r1
 801fc02:	1c41      	adds	r1, r0, #1
 801fc04:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fc08:	120d      	asrs	r5, r1, #8
 801fc0a:	d0e8      	beq.n	801fbde <_ZN8touchgfx6Canvas6renderEh+0xc>
 801fc0c:	4620      	mov	r0, r4
 801fc0e:	f7ff fec0 	bl	801f992 <_ZN8touchgfx6Canvas5closeEv>
 801fc12:	6860      	ldr	r0, [r4, #4]
 801fc14:	6803      	ldr	r3, [r0, #0]
 801fc16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801fc18:	4798      	blx	r3
 801fc1a:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801fc1e:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801fc22:	80c3      	strh	r3, [r0, #6]
 801fc24:	8082      	strh	r2, [r0, #4]
 801fc26:	6860      	ldr	r0, [r4, #4]
 801fc28:	6803      	ldr	r3, [r0, #0]
 801fc2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801fc2c:	4798      	blx	r3
 801fc2e:	7205      	strb	r5, [r0, #8]
 801fc30:	6860      	ldr	r0, [r4, #4]
 801fc32:	6803      	ldr	r3, [r0, #0]
 801fc34:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801fc36:	4798      	blx	r3
 801fc38:	f104 0318 	add.w	r3, r4, #24
 801fc3c:	e9cd 3000 	strd	r3, r0, [sp]
 801fc40:	4669      	mov	r1, sp
 801fc42:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801fc46:	f7ff ff07 	bl	801fa58 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801fc4a:	e7c9      	b.n	801fbe0 <_ZN8touchgfx6Canvas6renderEh+0xe>
 801fc4c:	2000      	movs	r0, #0
 801fc4e:	e7c7      	b.n	801fbe0 <_ZN8touchgfx6Canvas6renderEh+0xe>

0801fc50 <_ZN8touchgfx6CanvasD1Ev>:
 801fc50:	b538      	push	{r3, r4, r5, lr}
 801fc52:	4605      	mov	r5, r0
 801fc54:	4b08      	ldr	r3, [pc, #32]	; (801fc78 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801fc56:	f845 3b30 	str.w	r3, [r5], #48
 801fc5a:	4b08      	ldr	r3, [pc, #32]	; (801fc7c <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801fc5c:	4604      	mov	r4, r0
 801fc5e:	6818      	ldr	r0, [r3, #0]
 801fc60:	6803      	ldr	r3, [r0, #0]
 801fc62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc64:	4798      	blx	r3
 801fc66:	4628      	mov	r0, r5
 801fc68:	f000 f814 	bl	801fc94 <_ZN8touchgfx7OutlineD1Ev>
 801fc6c:	f104 0018 	add.w	r0, r4, #24
 801fc70:	f001 f895 	bl	8020d9e <_ZN8touchgfx15RenderingBufferD1Ev>
 801fc74:	4620      	mov	r0, r4
 801fc76:	bd38      	pop	{r3, r4, r5, pc}
 801fc78:	08025e2c 	.word	0x08025e2c
 801fc7c:	2000eb10 	.word	0x2000eb10

0801fc80 <_ZN8touchgfx6CanvasD0Ev>:
 801fc80:	b510      	push	{r4, lr}
 801fc82:	4604      	mov	r4, r0
 801fc84:	f7ff ffe4 	bl	801fc50 <_ZN8touchgfx6CanvasD1Ev>
 801fc88:	4620      	mov	r0, r4
 801fc8a:	21bc      	movs	r1, #188	; 0xbc
 801fc8c:	f001 f8a9 	bl	8020de2 <_ZdlPvj>
 801fc90:	4620      	mov	r0, r4
 801fc92:	bd10      	pop	{r4, pc}

0801fc94 <_ZN8touchgfx7OutlineD1Ev>:
 801fc94:	4770      	bx	lr

0801fc96 <_ZN8touchgfx7OutlineD0Ev>:
 801fc96:	b510      	push	{r4, lr}
 801fc98:	2148      	movs	r1, #72	; 0x48
 801fc9a:	4604      	mov	r4, r0
 801fc9c:	f001 f8a1 	bl	8020de2 <_ZdlPvj>
 801fca0:	4620      	mov	r0, r4
 801fca2:	bd10      	pop	{r4, pc}

0801fca4 <_ZN8touchgfx7Outline5resetEv>:
 801fca4:	b510      	push	{r4, lr}
 801fca6:	4604      	mov	r4, r0
 801fca8:	f7ef f87a 	bl	800eda0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801fcac:	60e0      	str	r0, [r4, #12]
 801fcae:	f7ef f87d 	bl	800edac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801fcb2:	68e3      	ldr	r3, [r4, #12]
 801fcb4:	6123      	str	r3, [r4, #16]
 801fcb6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801fcba:	82a3      	strh	r3, [r4, #20]
 801fcbc:	82e3      	strh	r3, [r4, #22]
 801fcbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801fcc0:	f023 0301 	bic.w	r3, r3, #1
 801fcc4:	f043 0302 	orr.w	r3, r3, #2
 801fcc8:	63e3      	str	r3, [r4, #60]	; 0x3c
 801fcca:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801fcce:	2200      	movs	r2, #0
 801fcd0:	08c0      	lsrs	r0, r0, #3
 801fcd2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801fcd6:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801fcda:	6060      	str	r0, [r4, #4]
 801fcdc:	60a2      	str	r2, [r4, #8]
 801fcde:	8322      	strh	r2, [r4, #24]
 801fce0:	8362      	strh	r2, [r4, #26]
 801fce2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801fce6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801fcea:	bd10      	pop	{r4, pc}

0801fcec <_ZN8touchgfx7OutlineC1Ev>:
 801fcec:	b510      	push	{r4, lr}
 801fcee:	4b0f      	ldr	r3, [pc, #60]	; (801fd2c <_ZN8touchgfx7OutlineC1Ev+0x40>)
 801fcf0:	6003      	str	r3, [r0, #0]
 801fcf2:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801fcf6:	2300      	movs	r3, #0
 801fcf8:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801fcfc:	4604      	mov	r4, r0
 801fcfe:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801fd02:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801fd06:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801fd0a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801fd0e:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 801fd12:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801fd16:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 801fd1a:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 801fd1e:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 801fd22:	f7ff ffbf 	bl	801fca4 <_ZN8touchgfx7Outline5resetEv>
 801fd26:	4620      	mov	r0, r4
 801fd28:	bd10      	pop	{r4, pc}
 801fd2a:	bf00      	nop
 801fd2c:	08025efc 	.word	0x08025efc

0801fd30 <_ZN8touchgfx7Outline10renderLineEiiii>:
 801fd30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd34:	b095      	sub	sp, #84	; 0x54
 801fd36:	4604      	mov	r4, r0
 801fd38:	981e      	ldr	r0, [sp, #120]	; 0x78
 801fd3a:	9304      	str	r3, [sp, #16]
 801fd3c:	1153      	asrs	r3, r2, #5
 801fd3e:	9300      	str	r3, [sp, #0]
 801fd40:	1143      	asrs	r3, r0, #5
 801fd42:	930c      	str	r3, [sp, #48]	; 0x30
 801fd44:	f000 031f 	and.w	r3, r0, #31
 801fd48:	9303      	str	r3, [sp, #12]
 801fd4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801fd4c:	1155      	asrs	r5, r2, #5
 801fd4e:	42ab      	cmp	r3, r5
 801fd50:	bfc4      	itt	gt
 801fd52:	462b      	movgt	r3, r5
 801fd54:	6323      	strgt	r3, [r4, #48]	; 0x30
 801fd56:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801fd58:	1155      	asrs	r5, r2, #5
 801fd5a:	42ab      	cmp	r3, r5
 801fd5c:	bfde      	ittt	le
 801fd5e:	462b      	movle	r3, r5
 801fd60:	3301      	addle	r3, #1
 801fd62:	63a3      	strle	r3, [r4, #56]	; 0x38
 801fd64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801fd66:	1145      	asrs	r5, r0, #5
 801fd68:	42ab      	cmp	r3, r5
 801fd6a:	bfc4      	itt	gt
 801fd6c:	462b      	movgt	r3, r5
 801fd6e:	6323      	strgt	r3, [r4, #48]	; 0x30
 801fd70:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801fd72:	1145      	asrs	r5, r0, #5
 801fd74:	42ab      	cmp	r3, r5
 801fd76:	bfde      	ittt	le
 801fd78:	462b      	movle	r3, r5
 801fd7a:	3301      	addle	r3, #1
 801fd7c:	63a3      	strle	r3, [r4, #56]	; 0x38
 801fd7e:	9b04      	ldr	r3, [sp, #16]
 801fd80:	1157      	asrs	r7, r2, #5
 801fd82:	eba3 0a01 	sub.w	sl, r3, r1
 801fd86:	1143      	asrs	r3, r0, #5
 801fd88:	429f      	cmp	r7, r3
 801fd8a:	f002 061f 	and.w	r6, r2, #31
 801fd8e:	ea4f 1561 	mov.w	r5, r1, asr #5
 801fd92:	f040 8122 	bne.w	801ffda <_ZN8touchgfx7Outline10renderLineEiiii+0x2aa>
 801fd96:	9b04      	ldr	r3, [sp, #16]
 801fd98:	ea4f 1b63 	mov.w	fp, r3, asr #5
 801fd9c:	9b03      	ldr	r3, [sp, #12]
 801fd9e:	429e      	cmp	r6, r3
 801fda0:	d131      	bne.n	801fe06 <_ZN8touchgfx7Outline10renderLineEiiii+0xd6>
 801fda2:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801fda6:	f9bd 2000 	ldrsh.w	r2, [sp]
 801fdaa:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801fdae:	fa0f fb8b 	sxth.w	fp, fp
 801fdb2:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801fdb6:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 801fdba:	4281      	cmp	r1, r0
 801fdbc:	f000 80eb 	beq.w	801ff96 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 801fdc0:	8b60      	ldrh	r0, [r4, #26]
 801fdc2:	8b21      	ldrh	r1, [r4, #24]
 801fdc4:	4301      	orrs	r1, r0
 801fdc6:	d00b      	beq.n	801fde0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801fdc8:	2b00      	cmp	r3, #0
 801fdca:	db09      	blt.n	801fde0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801fdcc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801fdce:	428b      	cmp	r3, r1
 801fdd0:	da06      	bge.n	801fde0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801fdd2:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801fdd6:	4299      	cmp	r1, r3
 801fdd8:	d308      	bcc.n	801fdec <_ZN8touchgfx7Outline10renderLineEiiii+0xbc>
 801fdda:	2301      	movs	r3, #1
 801fddc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801fde0:	f8a4 b014 	strh.w	fp, [r4, #20]
 801fde4:	2300      	movs	r3, #0
 801fde6:	82e2      	strh	r2, [r4, #22]
 801fde8:	8323      	strh	r3, [r4, #24]
 801fdea:	e01f      	b.n	801fe2c <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 801fdec:	f104 0314 	add.w	r3, r4, #20
 801fdf0:	cb03      	ldmia	r3!, {r0, r1}
 801fdf2:	6925      	ldr	r5, [r4, #16]
 801fdf4:	6028      	str	r0, [r5, #0]
 801fdf6:	6069      	str	r1, [r5, #4]
 801fdf8:	6923      	ldr	r3, [r4, #16]
 801fdfa:	3308      	adds	r3, #8
 801fdfc:	6123      	str	r3, [r4, #16]
 801fdfe:	68a3      	ldr	r3, [r4, #8]
 801fe00:	3301      	adds	r3, #1
 801fe02:	60a3      	str	r3, [r4, #8]
 801fe04:	e7ec      	b.n	801fde0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801fe06:	9b04      	ldr	r3, [sp, #16]
 801fe08:	8b20      	ldrh	r0, [r4, #24]
 801fe0a:	8b62      	ldrh	r2, [r4, #26]
 801fe0c:	f003 031f 	and.w	r3, r3, #31
 801fe10:	9305      	str	r3, [sp, #20]
 801fe12:	9b03      	ldr	r3, [sp, #12]
 801fe14:	45ab      	cmp	fp, r5
 801fe16:	f001 011f 	and.w	r1, r1, #31
 801fe1a:	eba3 0306 	sub.w	r3, r3, r6
 801fe1e:	d107      	bne.n	801fe30 <_ZN8touchgfx7Outline10renderLineEiiii+0x100>
 801fe20:	4418      	add	r0, r3
 801fe22:	8320      	strh	r0, [r4, #24]
 801fe24:	9805      	ldr	r0, [sp, #20]
 801fe26:	4401      	add	r1, r0
 801fe28:	fb03 2301 	mla	r3, r3, r1, r2
 801fe2c:	8363      	strh	r3, [r4, #26]
 801fe2e:	e0b2      	b.n	801ff96 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 801fe30:	f1ba 0f00 	cmp.w	sl, #0
 801fe34:	db35      	blt.n	801fea2 <_ZN8touchgfx7Outline10renderLineEiiii+0x172>
 801fe36:	2701      	movs	r7, #1
 801fe38:	f1c1 0c20 	rsb	ip, r1, #32
 801fe3c:	9702      	str	r7, [sp, #8]
 801fe3e:	fb03 f30c 	mul.w	r3, r3, ip
 801fe42:	2720      	movs	r7, #32
 801fe44:	9701      	str	r7, [sp, #4]
 801fe46:	fb93 fcfa 	sdiv	ip, r3, sl
 801fe4a:	9f01      	ldr	r7, [sp, #4]
 801fe4c:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801fe50:	fb0a 331c 	mls	r3, sl, ip, r3
 801fe54:	2b00      	cmp	r3, #0
 801fe56:	bfb8      	it	lt
 801fe58:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801fe5c:	4439      	add	r1, r7
 801fe5e:	fb0c 2101 	mla	r1, ip, r1, r2
 801fe62:	9a02      	ldr	r2, [sp, #8]
 801fe64:	4415      	add	r5, r2
 801fe66:	f9bd 2000 	ldrsh.w	r2, [sp]
 801fe6a:	9200      	str	r2, [sp, #0]
 801fe6c:	ea4f 4702 	mov.w	r7, r2, lsl #16
 801fe70:	9704      	str	r7, [sp, #16]
 801fe72:	9a04      	ldr	r2, [sp, #16]
 801fe74:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 801fe78:	fa0f fe85 	sxth.w	lr, r5
 801fe7c:	4460      	add	r0, ip
 801fe7e:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 801fe82:	eb0e 0902 	add.w	r9, lr, r2
 801fe86:	bfb8      	it	lt
 801fe88:	4453      	addlt	r3, sl
 801fe8a:	b200      	sxth	r0, r0
 801fe8c:	b209      	sxth	r1, r1
 801fe8e:	454f      	cmp	r7, r9
 801fe90:	8320      	strh	r0, [r4, #24]
 801fe92:	8361      	strh	r1, [r4, #26]
 801fe94:	d10d      	bne.n	801feb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801fe96:	4ba1      	ldr	r3, [pc, #644]	; (802011c <_ZN8touchgfx7Outline10renderLineEiiii+0x3ec>)
 801fe98:	4aa1      	ldr	r2, [pc, #644]	; (8020120 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f0>)
 801fe9a:	48a2      	ldr	r0, [pc, #648]	; (8020124 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 801fe9c:	2177      	movs	r1, #119	; 0x77
 801fe9e:	f000 ffcf 	bl	8020e40 <__assert_func>
 801fea2:	f04f 37ff 	mov.w	r7, #4294967295
 801fea6:	9702      	str	r7, [sp, #8]
 801fea8:	434b      	muls	r3, r1
 801feaa:	f1ca 0a00 	rsb	sl, sl, #0
 801feae:	2700      	movs	r7, #0
 801feb0:	e7c8      	b.n	801fe44 <_ZN8touchgfx7Outline10renderLineEiiii+0x114>
 801feb2:	ea50 0201 	orrs.w	r2, r0, r1
 801feb6:	d00c      	beq.n	801fed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 801feb8:	f1b8 0f00 	cmp.w	r8, #0
 801febc:	db09      	blt.n	801fed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 801febe:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801fec0:	4588      	cmp	r8, r1
 801fec2:	da06      	bge.n	801fed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 801fec4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801fec8:	4288      	cmp	r0, r1
 801feca:	d367      	bcc.n	801ff9c <_ZN8touchgfx7Outline10renderLineEiiii+0x26c>
 801fecc:	2101      	movs	r1, #1
 801fece:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801fed2:	2100      	movs	r1, #0
 801fed4:	9a00      	ldr	r2, [sp, #0]
 801fed6:	f8a4 e014 	strh.w	lr, [r4, #20]
 801feda:	45ab      	cmp	fp, r5
 801fedc:	82e2      	strh	r2, [r4, #22]
 801fede:	8321      	strh	r1, [r4, #24]
 801fee0:	8361      	strh	r1, [r4, #26]
 801fee2:	4466      	add	r6, ip
 801fee4:	d04e      	beq.n	801ff84 <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 801fee6:	9a03      	ldr	r2, [sp, #12]
 801fee8:	1b91      	subs	r1, r2, r6
 801feea:	448c      	add	ip, r1
 801feec:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 801fef0:	fb9c f7fa 	sdiv	r7, ip, sl
 801fef4:	fb0a cc17 	mls	ip, sl, r7, ip
 801fef8:	f1bc 0f00 	cmp.w	ip, #0
 801fefc:	bfb8      	it	lt
 801fefe:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801ff02:	f107 0201 	add.w	r2, r7, #1
 801ff06:	bfb8      	it	lt
 801ff08:	44d4      	addlt	ip, sl
 801ff0a:	eba3 030a 	sub.w	r3, r3, sl
 801ff0e:	9207      	str	r2, [sp, #28]
 801ff10:	f04f 0800 	mov.w	r8, #0
 801ff14:	eb13 030c 	adds.w	r3, r3, ip
 801ff18:	bf58      	it	pl
 801ff1a:	9807      	ldrpl	r0, [sp, #28]
 801ff1c:	9a02      	ldr	r2, [sp, #8]
 801ff1e:	bf48      	it	mi
 801ff20:	4638      	movmi	r0, r7
 801ff22:	fa0f fe80 	sxth.w	lr, r0
 801ff26:	ea4f 1140 	mov.w	r1, r0, lsl #5
 801ff2a:	4415      	add	r5, r2
 801ff2c:	4406      	add	r6, r0
 801ff2e:	9a04      	ldr	r2, [sp, #16]
 801ff30:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801ff34:	f8a4 e018 	strh.w	lr, [r4, #24]
 801ff38:	fa0f f985 	sxth.w	r9, r5
 801ff3c:	4410      	add	r0, r2
 801ff3e:	444a      	add	r2, r9
 801ff40:	bf58      	it	pl
 801ff42:	eba3 030a 	subpl.w	r3, r3, sl
 801ff46:	b209      	sxth	r1, r1
 801ff48:	4290      	cmp	r0, r2
 801ff4a:	8361      	strh	r1, [r4, #26]
 801ff4c:	d0a3      	beq.n	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 801ff4e:	ea5e 0201 	orrs.w	r2, lr, r1
 801ff52:	d00d      	beq.n	801ff70 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 801ff54:	9a00      	ldr	r2, [sp, #0]
 801ff56:	2a00      	cmp	r2, #0
 801ff58:	db0a      	blt.n	801ff70 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 801ff5a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ff5c:	428a      	cmp	r2, r1
 801ff5e:	da07      	bge.n	801ff70 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 801ff60:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ff64:	4288      	cmp	r0, r1
 801ff66:	d329      	bcc.n	801ffbc <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801ff68:	f04f 0201 	mov.w	r2, #1
 801ff6c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ff70:	9a00      	ldr	r2, [sp, #0]
 801ff72:	f8a4 9014 	strh.w	r9, [r4, #20]
 801ff76:	45ab      	cmp	fp, r5
 801ff78:	82e2      	strh	r2, [r4, #22]
 801ff7a:	f8a4 8018 	strh.w	r8, [r4, #24]
 801ff7e:	f8a4 801a 	strh.w	r8, [r4, #26]
 801ff82:	d1c7      	bne.n	801ff14 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801ff84:	9b03      	ldr	r3, [sp, #12]
 801ff86:	9a01      	ldr	r2, [sp, #4]
 801ff88:	1b9e      	subs	r6, r3, r6
 801ff8a:	9b05      	ldr	r3, [sp, #20]
 801ff8c:	8326      	strh	r6, [r4, #24]
 801ff8e:	3320      	adds	r3, #32
 801ff90:	1a9b      	subs	r3, r3, r2
 801ff92:	435e      	muls	r6, r3
 801ff94:	8366      	strh	r6, [r4, #26]
 801ff96:	b015      	add	sp, #84	; 0x54
 801ff98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff9c:	f104 0714 	add.w	r7, r4, #20
 801ffa0:	cf03      	ldmia	r7!, {r0, r1}
 801ffa2:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801ffa6:	f8c8 0000 	str.w	r0, [r8]
 801ffaa:	f8c8 1004 	str.w	r1, [r8, #4]
 801ffae:	6921      	ldr	r1, [r4, #16]
 801ffb0:	3108      	adds	r1, #8
 801ffb2:	6121      	str	r1, [r4, #16]
 801ffb4:	68a1      	ldr	r1, [r4, #8]
 801ffb6:	3101      	adds	r1, #1
 801ffb8:	60a1      	str	r1, [r4, #8]
 801ffba:	e78a      	b.n	801fed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a2>
 801ffbc:	f104 0e14 	add.w	lr, r4, #20
 801ffc0:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801ffc4:	6922      	ldr	r2, [r4, #16]
 801ffc6:	9206      	str	r2, [sp, #24]
 801ffc8:	6010      	str	r0, [r2, #0]
 801ffca:	6051      	str	r1, [r2, #4]
 801ffcc:	6921      	ldr	r1, [r4, #16]
 801ffce:	3108      	adds	r1, #8
 801ffd0:	6121      	str	r1, [r4, #16]
 801ffd2:	68a1      	ldr	r1, [r4, #8]
 801ffd4:	3101      	adds	r1, #1
 801ffd6:	60a1      	str	r1, [r4, #8]
 801ffd8:	e7ca      	b.n	801ff70 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 801ffda:	eba0 0b02 	sub.w	fp, r0, r2
 801ffde:	f1ba 0f00 	cmp.w	sl, #0
 801ffe2:	f040 80a1 	bne.w	8020128 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>
 801ffe6:	f1bb 0f00 	cmp.w	fp, #0
 801ffea:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801ffee:	8b62      	ldrh	r2, [r4, #26]
 801fff0:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 801fff4:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 801fff8:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 801fffc:	bfa8      	it	ge
 801fffe:	f04f 0a20 	movge.w	sl, #32
 8020002:	8b21      	ldrh	r1, [r4, #24]
 8020004:	ebaa 0606 	sub.w	r6, sl, r6
 8020008:	4431      	add	r1, r6
 802000a:	fb06 2603 	mla	r6, r6, r3, r2
 802000e:	9a00      	ldr	r2, [sp, #0]
 8020010:	bfb4      	ite	lt
 8020012:	f04f 39ff 	movlt.w	r9, #4294967295
 8020016:	f04f 0901 	movge.w	r9, #1
 802001a:	444a      	add	r2, r9
 802001c:	b22d      	sxth	r5, r5
 802001e:	b217      	sxth	r7, r2
 8020020:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 8020024:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 8020028:	b209      	sxth	r1, r1
 802002a:	b236      	sxth	r6, r6
 802002c:	45f4      	cmp	ip, lr
 802002e:	8321      	strh	r1, [r4, #24]
 8020030:	8366      	strh	r6, [r4, #26]
 8020032:	f43f af30 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8020036:	4331      	orrs	r1, r6
 8020038:	d00b      	beq.n	8020052 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 802003a:	2800      	cmp	r0, #0
 802003c:	db09      	blt.n	8020052 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 802003e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020040:	4288      	cmp	r0, r1
 8020042:	da06      	bge.n	8020052 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 8020044:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020048:	4288      	cmp	r0, r1
 802004a:	d33b      	bcc.n	80200c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x394>
 802004c:	2101      	movs	r1, #1
 802004e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8020052:	f1aa 0610 	sub.w	r6, sl, #16
 8020056:	0076      	lsls	r6, r6, #1
 8020058:	fb06 fc03 	mul.w	ip, r6, r3
 802005c:	fa0f fc8c 	sxth.w	ip, ip
 8020060:	b236      	sxth	r6, r6
 8020062:	82e7      	strh	r7, [r4, #22]
 8020064:	ea46 010c 	orr.w	r1, r6, ip
 8020068:	2700      	movs	r7, #0
 802006a:	82a5      	strh	r5, [r4, #20]
 802006c:	8327      	strh	r7, [r4, #24]
 802006e:	8367      	strh	r7, [r4, #26]
 8020070:	9100      	str	r1, [sp, #0]
 8020072:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020074:	428a      	cmp	r2, r1
 8020076:	d046      	beq.n	8020106 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d6>
 8020078:	444a      	add	r2, r9
 802007a:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 802007e:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 8020082:	8326      	strh	r6, [r4, #24]
 8020084:	fa0f f882 	sxth.w	r8, r2
 8020088:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 802008c:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 8020090:	4570      	cmp	r0, lr
 8020092:	f8a4 c01a 	strh.w	ip, [r4, #26]
 8020096:	f43f aefe 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 802009a:	9800      	ldr	r0, [sp, #0]
 802009c:	b160      	cbz	r0, 80200b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 802009e:	2900      	cmp	r1, #0
 80200a0:	db0a      	blt.n	80200b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 80200a2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80200a4:	4281      	cmp	r1, r0
 80200a6:	da07      	bge.n	80200b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 80200a8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80200ac:	4288      	cmp	r0, r1
 80200ae:	d319      	bcc.n	80200e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3b4>
 80200b0:	f04f 0101 	mov.w	r1, #1
 80200b4:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80200b8:	82a5      	strh	r5, [r4, #20]
 80200ba:	f8a4 8016 	strh.w	r8, [r4, #22]
 80200be:	8327      	strh	r7, [r4, #24]
 80200c0:	8367      	strh	r7, [r4, #26]
 80200c2:	e7d6      	b.n	8020072 <_ZN8touchgfx7Outline10renderLineEiiii+0x342>
 80200c4:	f104 0614 	add.w	r6, r4, #20
 80200c8:	ce03      	ldmia	r6!, {r0, r1}
 80200ca:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80200ce:	f8cc 0000 	str.w	r0, [ip]
 80200d2:	f8cc 1004 	str.w	r1, [ip, #4]
 80200d6:	6921      	ldr	r1, [r4, #16]
 80200d8:	3108      	adds	r1, #8
 80200da:	6121      	str	r1, [r4, #16]
 80200dc:	68a1      	ldr	r1, [r4, #8]
 80200de:	3101      	adds	r1, #1
 80200e0:	60a1      	str	r1, [r4, #8]
 80200e2:	e7b6      	b.n	8020052 <_ZN8touchgfx7Outline10renderLineEiiii+0x322>
 80200e4:	f104 0e14 	add.w	lr, r4, #20
 80200e8:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 80200ec:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80200f0:	f8cb 0000 	str.w	r0, [fp]
 80200f4:	f8cb 1004 	str.w	r1, [fp, #4]
 80200f8:	6921      	ldr	r1, [r4, #16]
 80200fa:	3108      	adds	r1, #8
 80200fc:	6121      	str	r1, [r4, #16]
 80200fe:	68a1      	ldr	r1, [r4, #8]
 8020100:	3101      	adds	r1, #1
 8020102:	60a1      	str	r1, [r4, #8]
 8020104:	e7d8      	b.n	80200b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x388>
 8020106:	9a03      	ldr	r2, [sp, #12]
 8020108:	8b61      	ldrh	r1, [r4, #26]
 802010a:	f1a2 0e20 	sub.w	lr, r2, #32
 802010e:	8b22      	ldrh	r2, [r4, #24]
 8020110:	44d6      	add	lr, sl
 8020112:	4472      	add	r2, lr
 8020114:	8322      	strh	r2, [r4, #24]
 8020116:	fb0e 1303 	mla	r3, lr, r3, r1
 802011a:	e687      	b.n	801fe2c <_ZN8touchgfx7Outline10renderLineEiiii+0xfc>
 802011c:	08025e83 	.word	0x08025e83
 8020120:	08025f04 	.word	0x08025f04
 8020124:	08025eb4 	.word	0x08025eb4
 8020128:	f1bb 0f00 	cmp.w	fp, #0
 802012c:	f2c0 8124 	blt.w	8020378 <_ZN8touchgfx7Outline10renderLineEiiii+0x648>
 8020130:	2201      	movs	r2, #1
 8020132:	f1c6 0320 	rsb	r3, r6, #32
 8020136:	920b      	str	r2, [sp, #44]	; 0x2c
 8020138:	fb0a f303 	mul.w	r3, sl, r3
 802013c:	2220      	movs	r2, #32
 802013e:	fb93 fcfb 	sdiv	ip, r3, fp
 8020142:	fb0b 331c 	mls	r3, fp, ip, r3
 8020146:	2b00      	cmp	r3, #0
 8020148:	9308      	str	r3, [sp, #32]
 802014a:	bfbe      	ittt	lt
 802014c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8020150:	445b      	addlt	r3, fp
 8020152:	9308      	strlt	r3, [sp, #32]
 8020154:	eb0c 0301 	add.w	r3, ip, r1
 8020158:	9301      	str	r3, [sp, #4]
 802015a:	115b      	asrs	r3, r3, #5
 802015c:	9305      	str	r3, [sp, #20]
 802015e:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 8020162:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8020166:	9202      	str	r2, [sp, #8]
 8020168:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 802016c:	461f      	mov	r7, r3
 802016e:	9b02      	ldr	r3, [sp, #8]
 8020170:	42b3      	cmp	r3, r6
 8020172:	f040 8117 	bne.w	80203a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 8020176:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 802017a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802017e:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 8020182:	42b9      	cmp	r1, r7
 8020184:	d016      	beq.n	80201b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 8020186:	8b60      	ldrh	r0, [r4, #26]
 8020188:	8b21      	ldrh	r1, [r4, #24]
 802018a:	4301      	orrs	r1, r0
 802018c:	d00d      	beq.n	80201aa <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802018e:	f1b8 0f00 	cmp.w	r8, #0
 8020192:	db0a      	blt.n	80201aa <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 8020194:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020196:	4541      	cmp	r1, r8
 8020198:	dd07      	ble.n	80201aa <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802019a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802019e:	4288      	cmp	r0, r1
 80201a0:	f0c0 80f3 	bcc.w	802038a <_ZN8touchgfx7Outline10renderLineEiiii+0x65a>
 80201a4:	2101      	movs	r1, #1
 80201a6:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80201aa:	82e3      	strh	r3, [r4, #22]
 80201ac:	2300      	movs	r3, #0
 80201ae:	82a2      	strh	r2, [r4, #20]
 80201b0:	8323      	strh	r3, [r4, #24]
 80201b2:	8363      	strh	r3, [r4, #26]
 80201b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201b6:	9a00      	ldr	r2, [sp, #0]
 80201b8:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80201bc:	441a      	add	r2, r3
 80201be:	4691      	mov	r9, r2
 80201c0:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80201c4:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 80201c8:	fa0f f589 	sxth.w	r5, r9
 80201cc:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 80201d0:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 80201d4:	4281      	cmp	r1, r0
 80201d6:	d015      	beq.n	8020204 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d4>
 80201d8:	8b60      	ldrh	r0, [r4, #26]
 80201da:	8b21      	ldrh	r1, [r4, #24]
 80201dc:	4301      	orrs	r1, r0
 80201de:	d00c      	beq.n	80201fa <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 80201e0:	2a00      	cmp	r2, #0
 80201e2:	db0a      	blt.n	80201fa <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 80201e4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80201e6:	428a      	cmp	r2, r1
 80201e8:	da07      	bge.n	80201fa <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 80201ea:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 80201ee:	4291      	cmp	r1, r2
 80201f0:	f0c0 81b4 	bcc.w	802055c <_ZN8touchgfx7Outline10renderLineEiiii+0x82c>
 80201f4:	2201      	movs	r2, #1
 80201f6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80201fa:	82a3      	strh	r3, [r4, #20]
 80201fc:	2300      	movs	r3, #0
 80201fe:	82e5      	strh	r5, [r4, #22]
 8020200:	8323      	strh	r3, [r4, #24]
 8020202:	8363      	strh	r3, [r4, #26]
 8020204:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020206:	454b      	cmp	r3, r9
 8020208:	f000 808a 	beq.w	8020320 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f0>
 802020c:	ea4f 134a 	mov.w	r3, sl, lsl #5
 8020210:	fb93 f2fb 	sdiv	r2, r3, fp
 8020214:	fb0b 3312 	mls	r3, fp, r2, r3
 8020218:	2b00      	cmp	r3, #0
 802021a:	9205      	str	r2, [sp, #20]
 802021c:	9307      	str	r3, [sp, #28]
 802021e:	da04      	bge.n	802022a <_ZN8touchgfx7Outline10renderLineEiiii+0x4fa>
 8020220:	1e53      	subs	r3, r2, #1
 8020222:	9305      	str	r3, [sp, #20]
 8020224:	9b07      	ldr	r3, [sp, #28]
 8020226:	445b      	add	r3, fp
 8020228:	9307      	str	r3, [sp, #28]
 802022a:	9b08      	ldr	r3, [sp, #32]
 802022c:	eba3 030b 	sub.w	r3, r3, fp
 8020230:	9308      	str	r3, [sp, #32]
 8020232:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 8020236:	f1c3 0320 	rsb	r3, r3, #32
 802023a:	930a      	str	r3, [sp, #40]	; 0x28
 802023c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802023e:	9b02      	ldr	r3, [sp, #8]
 8020240:	1a9b      	subs	r3, r3, r2
 8020242:	9309      	str	r3, [sp, #36]	; 0x24
 8020244:	f04f 0a00 	mov.w	sl, #0
 8020248:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 802024c:	189b      	adds	r3, r3, r2
 802024e:	9308      	str	r3, [sp, #32]
 8020250:	bf5d      	ittte	pl
 8020252:	eba3 030b 	subpl.w	r3, r3, fp
 8020256:	9308      	strpl	r3, [sp, #32]
 8020258:	9b05      	ldrpl	r3, [sp, #20]
 802025a:	9b05      	ldrmi	r3, [sp, #20]
 802025c:	9902      	ldr	r1, [sp, #8]
 802025e:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 8020262:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 8020266:	bf58      	it	pl
 8020268:	3301      	addpl	r3, #1
 802026a:	9300      	str	r3, [sp, #0]
 802026c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8020270:	4413      	add	r3, r2
 8020272:	9301      	str	r3, [sp, #4]
 8020274:	115b      	asrs	r3, r3, #5
 8020276:	9306      	str	r3, [sp, #24]
 8020278:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802027a:	428b      	cmp	r3, r1
 802027c:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 8020280:	f040 8186 	bne.w	8020590 <_ZN8touchgfx7Outline10renderLineEiiii+0x860>
 8020284:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8020288:	fa0f f389 	sxth.w	r3, r9
 802028c:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 8020290:	4541      	cmp	r1, r8
 8020292:	d017      	beq.n	80202c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 8020294:	8b60      	ldrh	r0, [r4, #26]
 8020296:	8b21      	ldrh	r1, [r4, #24]
 8020298:	4301      	orrs	r1, r0
 802029a:	d00d      	beq.n	80202b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 802029c:	2e00      	cmp	r6, #0
 802029e:	db0b      	blt.n	80202b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 80202a0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80202a2:	42b1      	cmp	r1, r6
 80202a4:	dd08      	ble.n	80202b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 80202a6:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80202aa:	4288      	cmp	r0, r1
 80202ac:	f0c0 8163 	bcc.w	8020576 <_ZN8touchgfx7Outline10renderLineEiiii+0x846>
 80202b0:	f04f 0101 	mov.w	r1, #1
 80202b4:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80202b8:	82a2      	strh	r2, [r4, #20]
 80202ba:	82e3      	strh	r3, [r4, #22]
 80202bc:	f8a4 a018 	strh.w	sl, [r4, #24]
 80202c0:	f8a4 a01a 	strh.w	sl, [r4, #26]
 80202c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80202c6:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 80202ca:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80202ce:	4499      	add	r9, r3
 80202d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80202d4:	fa0f f589 	sxth.w	r5, r9
 80202d8:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 80202dc:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 80202e0:	4281      	cmp	r1, r0
 80202e2:	f43f add8 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80202e6:	8b60      	ldrh	r0, [r4, #26]
 80202e8:	8b21      	ldrh	r1, [r4, #24]
 80202ea:	4301      	orrs	r1, r0
 80202ec:	d00d      	beq.n	802030a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80202ee:	2a00      	cmp	r2, #0
 80202f0:	db0b      	blt.n	802030a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80202f2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80202f4:	428a      	cmp	r2, r1
 80202f6:	da08      	bge.n	802030a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 80202f8:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 80202fc:	4291      	cmp	r1, r2
 80202fe:	f0c0 8230 	bcc.w	8020762 <_ZN8touchgfx7Outline10renderLineEiiii+0xa32>
 8020302:	f04f 0201 	mov.w	r2, #1
 8020306:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802030a:	82a3      	strh	r3, [r4, #20]
 802030c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802030e:	82e5      	strh	r5, [r4, #22]
 8020310:	454b      	cmp	r3, r9
 8020312:	f8a4 a018 	strh.w	sl, [r4, #24]
 8020316:	f8a4 a01a 	strh.w	sl, [r4, #26]
 802031a:	f8dd c004 	ldr.w	ip, [sp, #4]
 802031e:	d193      	bne.n	8020248 <_ZN8touchgfx7Outline10renderLineEiiii+0x518>
 8020320:	9b02      	ldr	r3, [sp, #8]
 8020322:	f1c3 0e20 	rsb	lr, r3, #32
 8020326:	9b04      	ldr	r3, [sp, #16]
 8020328:	ea4f 1b63 	mov.w	fp, r3, asr #5
 802032c:	9b03      	ldr	r3, [sp, #12]
 802032e:	459e      	cmp	lr, r3
 8020330:	f040 8231 	bne.w	8020796 <_ZN8touchgfx7Outline10renderLineEiiii+0xa66>
 8020334:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8020338:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802033c:	fa0f f58b 	sxth.w	r5, fp
 8020340:	fa0f f289 	sxth.w	r2, r9
 8020344:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8020348:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 802034c:	4281      	cmp	r1, r0
 802034e:	f43f ae22 	beq.w	801ff96 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8020352:	8b60      	ldrh	r0, [r4, #26]
 8020354:	8b21      	ldrh	r1, [r4, #24]
 8020356:	4301      	orrs	r1, r0
 8020358:	d00c      	beq.n	8020374 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 802035a:	2b00      	cmp	r3, #0
 802035c:	db0a      	blt.n	8020374 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 802035e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020360:	428b      	cmp	r3, r1
 8020362:	da07      	bge.n	8020374 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8020364:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8020368:	4299      	cmp	r1, r3
 802036a:	f0c0 8207 	bcc.w	802077c <_ZN8touchgfx7Outline10renderLineEiiii+0xa4c>
 802036e:	2301      	movs	r3, #1
 8020370:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020374:	82a5      	strh	r5, [r4, #20]
 8020376:	e535      	b.n	801fde4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb4>
 8020378:	f04f 32ff 	mov.w	r2, #4294967295
 802037c:	920b      	str	r2, [sp, #44]	; 0x2c
 802037e:	fb0a f306 	mul.w	r3, sl, r6
 8020382:	f1cb 0b00 	rsb	fp, fp, #0
 8020386:	2200      	movs	r2, #0
 8020388:	e6d9      	b.n	802013e <_ZN8touchgfx7Outline10renderLineEiiii+0x40e>
 802038a:	f104 0514 	add.w	r5, r4, #20
 802038e:	cd03      	ldmia	r5!, {r0, r1}
 8020390:	6926      	ldr	r6, [r4, #16]
 8020392:	6030      	str	r0, [r6, #0]
 8020394:	6071      	str	r1, [r6, #4]
 8020396:	6921      	ldr	r1, [r4, #16]
 8020398:	3108      	adds	r1, #8
 802039a:	6121      	str	r1, [r4, #16]
 802039c:	68a1      	ldr	r1, [r4, #8]
 802039e:	3101      	adds	r1, #1
 80203a0:	60a1      	str	r1, [r4, #8]
 80203a2:	e702      	b.n	80201aa <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 80203a4:	9b01      	ldr	r3, [sp, #4]
 80203a6:	8b20      	ldrh	r0, [r4, #24]
 80203a8:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 80203ac:	f003 031f 	and.w	r3, r3, #31
 80203b0:	930d      	str	r3, [sp, #52]	; 0x34
 80203b2:	9b02      	ldr	r3, [sp, #8]
 80203b4:	1b9a      	subs	r2, r3, r6
 80203b6:	9b05      	ldr	r3, [sp, #20]
 80203b8:	42ab      	cmp	r3, r5
 80203ba:	f001 011f 	and.w	r1, r1, #31
 80203be:	d107      	bne.n	80203d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a0>
 80203c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80203c2:	4419      	add	r1, r3
 80203c4:	4410      	add	r0, r2
 80203c6:	fb02 9201 	mla	r2, r2, r1, r9
 80203ca:	8320      	strh	r0, [r4, #24]
 80203cc:	8362      	strh	r2, [r4, #26]
 80203ce:	e6f1      	b.n	80201b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 80203d0:	f1bc 0f00 	cmp.w	ip, #0
 80203d4:	f2c0 8099 	blt.w	802050a <_ZN8touchgfx7Outline10renderLineEiiii+0x7da>
 80203d8:	f1c1 0320 	rsb	r3, r1, #32
 80203dc:	435a      	muls	r2, r3
 80203de:	2301      	movs	r3, #1
 80203e0:	9309      	str	r3, [sp, #36]	; 0x24
 80203e2:	2320      	movs	r3, #32
 80203e4:	9307      	str	r3, [sp, #28]
 80203e6:	fb92 fefc 	sdiv	lr, r2, ip
 80203ea:	9b07      	ldr	r3, [sp, #28]
 80203ec:	fb0c 221e 	mls	r2, ip, lr, r2
 80203f0:	2a00      	cmp	r2, #0
 80203f2:	bfb8      	it	lt
 80203f4:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80203f8:	4419      	add	r1, r3
 80203fa:	fb0e 9101 	mla	r1, lr, r1, r9
 80203fe:	b20b      	sxth	r3, r1
 8020400:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020402:	8363      	strh	r3, [r4, #26]
 8020404:	440d      	add	r5, r1
 8020406:	f9bd 1000 	ldrsh.w	r1, [sp]
 802040a:	9106      	str	r1, [sp, #24]
 802040c:	fa0f f985 	sxth.w	r9, r5
 8020410:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8020414:	4470      	add	r0, lr
 8020416:	910a      	str	r1, [sp, #40]	; 0x28
 8020418:	4449      	add	r1, r9
 802041a:	bfb8      	it	lt
 802041c:	4462      	addlt	r2, ip
 802041e:	b200      	sxth	r0, r0
 8020420:	42b9      	cmp	r1, r7
 8020422:	8320      	strh	r0, [r4, #24]
 8020424:	f43f ad37 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8020428:	4303      	orrs	r3, r0
 802042a:	d00c      	beq.n	8020446 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 802042c:	f1b8 0f00 	cmp.w	r8, #0
 8020430:	db09      	blt.n	8020446 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8020432:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020434:	4543      	cmp	r3, r8
 8020436:	dd06      	ble.n	8020446 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 8020438:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802043c:	4299      	cmp	r1, r3
 802043e:	d36c      	bcc.n	802051a <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 8020440:	2301      	movs	r3, #1
 8020442:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020446:	9b06      	ldr	r3, [sp, #24]
 8020448:	82e3      	strh	r3, [r4, #22]
 802044a:	2300      	movs	r3, #0
 802044c:	8323      	strh	r3, [r4, #24]
 802044e:	8363      	strh	r3, [r4, #26]
 8020450:	9b05      	ldr	r3, [sp, #20]
 8020452:	f8a4 9014 	strh.w	r9, [r4, #20]
 8020456:	42ab      	cmp	r3, r5
 8020458:	4476      	add	r6, lr
 802045a:	d04c      	beq.n	80204f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x7c6>
 802045c:	9b02      	ldr	r3, [sp, #8]
 802045e:	1b9b      	subs	r3, r3, r6
 8020460:	4473      	add	r3, lr
 8020462:	015b      	lsls	r3, r3, #5
 8020464:	fb93 f8fc 	sdiv	r8, r3, ip
 8020468:	fb0c 3318 	mls	r3, ip, r8, r3
 802046c:	2b00      	cmp	r3, #0
 802046e:	bfb8      	it	lt
 8020470:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8020474:	f108 0101 	add.w	r1, r8, #1
 8020478:	bfb8      	it	lt
 802047a:	4463      	addlt	r3, ip
 802047c:	eba2 020c 	sub.w	r2, r2, ip
 8020480:	910f      	str	r1, [sp, #60]	; 0x3c
 8020482:	18d2      	adds	r2, r2, r3
 8020484:	bf58      	it	pl
 8020486:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 8020488:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802048a:	bf48      	it	mi
 802048c:	4640      	movmi	r0, r8
 802048e:	fa0f fe80 	sxth.w	lr, r0
 8020492:	ea4f 1140 	mov.w	r1, r0, lsl #5
 8020496:	4406      	add	r6, r0
 8020498:	9809      	ldr	r0, [sp, #36]	; 0x24
 802049a:	f8a4 e018 	strh.w	lr, [r4, #24]
 802049e:	4405      	add	r5, r0
 80204a0:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80204a4:	fa0f f985 	sxth.w	r9, r5
 80204a8:	4438      	add	r0, r7
 80204aa:	444f      	add	r7, r9
 80204ac:	bf58      	it	pl
 80204ae:	eba2 020c 	subpl.w	r2, r2, ip
 80204b2:	b209      	sxth	r1, r1
 80204b4:	42b8      	cmp	r0, r7
 80204b6:	8361      	strh	r1, [r4, #26]
 80204b8:	f43f aced 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80204bc:	ea5e 0101 	orrs.w	r1, lr, r1
 80204c0:	d00e      	beq.n	80204e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 80204c2:	9906      	ldr	r1, [sp, #24]
 80204c4:	2900      	cmp	r1, #0
 80204c6:	db0b      	blt.n	80204e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 80204c8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80204ca:	9806      	ldr	r0, [sp, #24]
 80204cc:	4288      	cmp	r0, r1
 80204ce:	da07      	bge.n	80204e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 80204d0:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80204d4:	4288      	cmp	r0, r1
 80204d6:	d330      	bcc.n	802053a <_ZN8touchgfx7Outline10renderLineEiiii+0x80a>
 80204d8:	f04f 0101 	mov.w	r1, #1
 80204dc:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80204e0:	9906      	ldr	r1, [sp, #24]
 80204e2:	82e1      	strh	r1, [r4, #22]
 80204e4:	f04f 0100 	mov.w	r1, #0
 80204e8:	8321      	strh	r1, [r4, #24]
 80204ea:	8361      	strh	r1, [r4, #26]
 80204ec:	9905      	ldr	r1, [sp, #20]
 80204ee:	f8a4 9014 	strh.w	r9, [r4, #20]
 80204f2:	42a9      	cmp	r1, r5
 80204f4:	d1c5      	bne.n	8020482 <_ZN8touchgfx7Outline10renderLineEiiii+0x752>
 80204f6:	9b02      	ldr	r3, [sp, #8]
 80204f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80204fa:	1b9e      	subs	r6, r3, r6
 80204fc:	9b07      	ldr	r3, [sp, #28]
 80204fe:	8326      	strh	r6, [r4, #24]
 8020500:	3120      	adds	r1, #32
 8020502:	1ac9      	subs	r1, r1, r3
 8020504:	434e      	muls	r6, r1
 8020506:	8366      	strh	r6, [r4, #26]
 8020508:	e654      	b.n	80201b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x484>
 802050a:	f04f 33ff 	mov.w	r3, #4294967295
 802050e:	9309      	str	r3, [sp, #36]	; 0x24
 8020510:	434a      	muls	r2, r1
 8020512:	f1cc 0c00 	rsb	ip, ip, #0
 8020516:	2300      	movs	r3, #0
 8020518:	e764      	b.n	80203e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6b4>
 802051a:	f104 0314 	add.w	r3, r4, #20
 802051e:	cb03      	ldmia	r3!, {r0, r1}
 8020520:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8020524:	f8c8 0000 	str.w	r0, [r8]
 8020528:	f8c8 1004 	str.w	r1, [r8, #4]
 802052c:	6923      	ldr	r3, [r4, #16]
 802052e:	3308      	adds	r3, #8
 8020530:	6123      	str	r3, [r4, #16]
 8020532:	68a3      	ldr	r3, [r4, #8]
 8020534:	3301      	adds	r3, #1
 8020536:	60a3      	str	r3, [r4, #8]
 8020538:	e785      	b.n	8020446 <_ZN8touchgfx7Outline10renderLineEiiii+0x716>
 802053a:	6921      	ldr	r1, [r4, #16]
 802053c:	910e      	str	r1, [sp, #56]	; 0x38
 802053e:	f104 0e14 	add.w	lr, r4, #20
 8020542:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 8020546:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020548:	6038      	str	r0, [r7, #0]
 802054a:	6079      	str	r1, [r7, #4]
 802054c:	6921      	ldr	r1, [r4, #16]
 802054e:	3108      	adds	r1, #8
 8020550:	6121      	str	r1, [r4, #16]
 8020552:	68a1      	ldr	r1, [r4, #8]
 8020554:	3101      	adds	r1, #1
 8020556:	4638      	mov	r0, r7
 8020558:	60a1      	str	r1, [r4, #8]
 802055a:	e7c1      	b.n	80204e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b0>
 802055c:	f104 0214 	add.w	r2, r4, #20
 8020560:	ca03      	ldmia	r2!, {r0, r1}
 8020562:	6926      	ldr	r6, [r4, #16]
 8020564:	6030      	str	r0, [r6, #0]
 8020566:	6071      	str	r1, [r6, #4]
 8020568:	6922      	ldr	r2, [r4, #16]
 802056a:	3208      	adds	r2, #8
 802056c:	6122      	str	r2, [r4, #16]
 802056e:	68a2      	ldr	r2, [r4, #8]
 8020570:	3201      	adds	r2, #1
 8020572:	60a2      	str	r2, [r4, #8]
 8020574:	e641      	b.n	80201fa <_ZN8touchgfx7Outline10renderLineEiiii+0x4ca>
 8020576:	f104 0514 	add.w	r5, r4, #20
 802057a:	cd03      	ldmia	r5!, {r0, r1}
 802057c:	6926      	ldr	r6, [r4, #16]
 802057e:	6030      	str	r0, [r6, #0]
 8020580:	6071      	str	r1, [r6, #4]
 8020582:	6921      	ldr	r1, [r4, #16]
 8020584:	3108      	adds	r1, #8
 8020586:	6121      	str	r1, [r4, #16]
 8020588:	68a1      	ldr	r1, [r4, #8]
 802058a:	3101      	adds	r1, #1
 802058c:	60a1      	str	r1, [r4, #8]
 802058e:	e693      	b.n	80202b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x588>
 8020590:	9b01      	ldr	r3, [sp, #4]
 8020592:	8b20      	ldrh	r0, [r4, #24]
 8020594:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 8020598:	f003 031f 	and.w	r3, r3, #31
 802059c:	9310      	str	r3, [sp, #64]	; 0x40
 802059e:	9b06      	ldr	r3, [sp, #24]
 80205a0:	ea4f 176c 	mov.w	r7, ip, asr #5
 80205a4:	429f      	cmp	r7, r3
 80205a6:	f00c 0c1f 	and.w	ip, ip, #31
 80205aa:	d10a      	bne.n	80205c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x892>
 80205ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205ae:	4418      	add	r0, r3
 80205b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80205b2:	8320      	strh	r0, [r4, #24]
 80205b4:	449c      	add	ip, r3
 80205b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205b8:	fb03 ee0c 	mla	lr, r3, ip, lr
 80205bc:	f8a4 e01a 	strh.w	lr, [r4, #26]
 80205c0:	e680      	b.n	80202c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 80205c2:	9b00      	ldr	r3, [sp, #0]
 80205c4:	2b00      	cmp	r3, #0
 80205c6:	f2c0 80a2 	blt.w	802070e <_ZN8touchgfx7Outline10renderLineEiiii+0x9de>
 80205ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 80205cc:	f1cc 0320 	rsb	r3, ip, #32
 80205d0:	434b      	muls	r3, r1
 80205d2:	2101      	movs	r1, #1
 80205d4:	910e      	str	r1, [sp, #56]	; 0x38
 80205d6:	2120      	movs	r1, #32
 80205d8:	9a00      	ldr	r2, [sp, #0]
 80205da:	910d      	str	r1, [sp, #52]	; 0x34
 80205dc:	fb93 f5f2 	sdiv	r5, r3, r2
 80205e0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80205e2:	fb02 3315 	mls	r3, r2, r5, r3
 80205e6:	2b00      	cmp	r3, #0
 80205e8:	bfbc      	itt	lt
 80205ea:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80205ee:	189b      	addlt	r3, r3, r2
 80205f0:	448c      	add	ip, r1
 80205f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80205f4:	fb05 ec0c 	mla	ip, r5, ip, lr
 80205f8:	fa0f f18c 	sxth.w	r1, ip
 80205fc:	4417      	add	r7, r2
 80205fe:	fa0f fc89 	sxth.w	ip, r9
 8020602:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8020606:	fa0f fe87 	sxth.w	lr, r7
 802060a:	4428      	add	r0, r5
 802060c:	920f      	str	r2, [sp, #60]	; 0x3c
 802060e:	4472      	add	r2, lr
 8020610:	b200      	sxth	r0, r0
 8020612:	4542      	cmp	r2, r8
 8020614:	8320      	strh	r0, [r4, #24]
 8020616:	8361      	strh	r1, [r4, #26]
 8020618:	f43f ac3d 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 802061c:	ea50 0201 	orrs.w	r2, r0, r1
 8020620:	d00c      	beq.n	802063c <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8020622:	2e00      	cmp	r6, #0
 8020624:	db0a      	blt.n	802063c <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8020626:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020628:	42b1      	cmp	r1, r6
 802062a:	dd07      	ble.n	802063c <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 802062c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020630:	4288      	cmp	r0, r1
 8020632:	d377      	bcc.n	8020724 <_ZN8touchgfx7Outline10renderLineEiiii+0x9f4>
 8020634:	f04f 0201 	mov.w	r2, #1
 8020638:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802063c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802063e:	f8a4 e014 	strh.w	lr, [r4, #20]
 8020642:	1956      	adds	r6, r2, r5
 8020644:	9a06      	ldr	r2, [sp, #24]
 8020646:	f8a4 c016 	strh.w	ip, [r4, #22]
 802064a:	42ba      	cmp	r2, r7
 802064c:	f8a4 a018 	strh.w	sl, [r4, #24]
 8020650:	f8a4 a01a 	strh.w	sl, [r4, #26]
 8020654:	d04e      	beq.n	80206f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x9c4>
 8020656:	9a02      	ldr	r2, [sp, #8]
 8020658:	1b91      	subs	r1, r2, r6
 802065a:	440d      	add	r5, r1
 802065c:	9a00      	ldr	r2, [sp, #0]
 802065e:	016d      	lsls	r5, r5, #5
 8020660:	fb95 fef2 	sdiv	lr, r5, r2
 8020664:	fb02 551e 	mls	r5, r2, lr, r5
 8020668:	2d00      	cmp	r5, #0
 802066a:	bfb8      	it	lt
 802066c:	18ad      	addlt	r5, r5, r2
 802066e:	9a00      	ldr	r2, [sp, #0]
 8020670:	bfb8      	it	lt
 8020672:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8020676:	1a9b      	subs	r3, r3, r2
 8020678:	f10e 0201 	add.w	r2, lr, #1
 802067c:	9213      	str	r2, [sp, #76]	; 0x4c
 802067e:	195b      	adds	r3, r3, r5
 8020680:	bf5e      	ittt	pl
 8020682:	9a00      	ldrpl	r2, [sp, #0]
 8020684:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 8020686:	1a9b      	subpl	r3, r3, r2
 8020688:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802068a:	4417      	add	r7, r2
 802068c:	bf48      	it	mi
 802068e:	4670      	movmi	r0, lr
 8020690:	b23a      	sxth	r2, r7
 8020692:	fa0f f880 	sxth.w	r8, r0
 8020696:	0141      	lsls	r1, r0, #5
 8020698:	9211      	str	r2, [sp, #68]	; 0x44
 802069a:	4406      	add	r6, r0
 802069c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802069e:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80206a2:	f8a4 8018 	strh.w	r8, [r4, #24]
 80206a6:	1882      	adds	r2, r0, r2
 80206a8:	9212      	str	r2, [sp, #72]	; 0x48
 80206aa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80206ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80206ae:	4402      	add	r2, r0
 80206b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80206b2:	b209      	sxth	r1, r1
 80206b4:	4290      	cmp	r0, r2
 80206b6:	8361      	strh	r1, [r4, #26]
 80206b8:	f43f abed 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80206bc:	ea58 0201 	orrs.w	r2, r8, r1
 80206c0:	d00d      	beq.n	80206de <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 80206c2:	f1bc 0f00 	cmp.w	ip, #0
 80206c6:	db0a      	blt.n	80206de <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 80206c8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80206ca:	458c      	cmp	ip, r1
 80206cc:	da07      	bge.n	80206de <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 80206ce:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80206d2:	4288      	cmp	r0, r1
 80206d4:	d336      	bcc.n	8020744 <_ZN8touchgfx7Outline10renderLineEiiii+0xa14>
 80206d6:	f04f 0201 	mov.w	r2, #1
 80206da:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 80206de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80206e0:	82a2      	strh	r2, [r4, #20]
 80206e2:	9a06      	ldr	r2, [sp, #24]
 80206e4:	f8a4 c016 	strh.w	ip, [r4, #22]
 80206e8:	42ba      	cmp	r2, r7
 80206ea:	f8a4 a018 	strh.w	sl, [r4, #24]
 80206ee:	f8a4 a01a 	strh.w	sl, [r4, #26]
 80206f2:	d1c4      	bne.n	802067e <_ZN8touchgfx7Outline10renderLineEiiii+0x94e>
 80206f4:	9b02      	ldr	r3, [sp, #8]
 80206f6:	1b9e      	subs	r6, r3, r6
 80206f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80206fa:	8326      	strh	r6, [r4, #24]
 80206fc:	f103 0c20 	add.w	ip, r3, #32
 8020700:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020702:	ebac 0c03 	sub.w	ip, ip, r3
 8020706:	fb06 f60c 	mul.w	r6, r6, ip
 802070a:	8366      	strh	r6, [r4, #26]
 802070c:	e5da      	b.n	80202c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x594>
 802070e:	9a00      	ldr	r2, [sp, #0]
 8020710:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020712:	f04f 31ff 	mov.w	r1, #4294967295
 8020716:	4252      	negs	r2, r2
 8020718:	910e      	str	r1, [sp, #56]	; 0x38
 802071a:	fb03 f30c 	mul.w	r3, r3, ip
 802071e:	9200      	str	r2, [sp, #0]
 8020720:	2100      	movs	r1, #0
 8020722:	e759      	b.n	80205d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a8>
 8020724:	f104 0614 	add.w	r6, r4, #20
 8020728:	ce03      	ldmia	r6!, {r0, r1}
 802072a:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802072e:	f8c8 0000 	str.w	r0, [r8]
 8020732:	f8c8 1004 	str.w	r1, [r8, #4]
 8020736:	6921      	ldr	r1, [r4, #16]
 8020738:	3108      	adds	r1, #8
 802073a:	6121      	str	r1, [r4, #16]
 802073c:	68a1      	ldr	r1, [r4, #8]
 802073e:	3101      	adds	r1, #1
 8020740:	60a1      	str	r1, [r4, #8]
 8020742:	e77b      	b.n	802063c <_ZN8touchgfx7Outline10renderLineEiiii+0x90c>
 8020744:	f104 0814 	add.w	r8, r4, #20
 8020748:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802074c:	6922      	ldr	r2, [r4, #16]
 802074e:	9212      	str	r2, [sp, #72]	; 0x48
 8020750:	6010      	str	r0, [r2, #0]
 8020752:	6051      	str	r1, [r2, #4]
 8020754:	6921      	ldr	r1, [r4, #16]
 8020756:	3108      	adds	r1, #8
 8020758:	6121      	str	r1, [r4, #16]
 802075a:	68a1      	ldr	r1, [r4, #8]
 802075c:	3101      	adds	r1, #1
 802075e:	60a1      	str	r1, [r4, #8]
 8020760:	e7bd      	b.n	80206de <_ZN8touchgfx7Outline10renderLineEiiii+0x9ae>
 8020762:	f104 0214 	add.w	r2, r4, #20
 8020766:	ca03      	ldmia	r2!, {r0, r1}
 8020768:	6926      	ldr	r6, [r4, #16]
 802076a:	6030      	str	r0, [r6, #0]
 802076c:	6071      	str	r1, [r6, #4]
 802076e:	6922      	ldr	r2, [r4, #16]
 8020770:	3208      	adds	r2, #8
 8020772:	6122      	str	r2, [r4, #16]
 8020774:	68a2      	ldr	r2, [r4, #8]
 8020776:	3201      	adds	r2, #1
 8020778:	60a2      	str	r2, [r4, #8]
 802077a:	e5c6      	b.n	802030a <_ZN8touchgfx7Outline10renderLineEiiii+0x5da>
 802077c:	f104 0314 	add.w	r3, r4, #20
 8020780:	cb03      	ldmia	r3!, {r0, r1}
 8020782:	6926      	ldr	r6, [r4, #16]
 8020784:	6030      	str	r0, [r6, #0]
 8020786:	6071      	str	r1, [r6, #4]
 8020788:	6923      	ldr	r3, [r4, #16]
 802078a:	3308      	adds	r3, #8
 802078c:	6123      	str	r3, [r4, #16]
 802078e:	68a3      	ldr	r3, [r4, #8]
 8020790:	3301      	adds	r3, #1
 8020792:	60a3      	str	r3, [r4, #8]
 8020794:	e5ee      	b.n	8020374 <_ZN8touchgfx7Outline10renderLineEiiii+0x644>
 8020796:	9b01      	ldr	r3, [sp, #4]
 8020798:	8b20      	ldrh	r0, [r4, #24]
 802079a:	8b66      	ldrh	r6, [r4, #26]
 802079c:	ea4f 1c63 	mov.w	ip, r3, asr #5
 80207a0:	f003 021f 	and.w	r2, r3, #31
 80207a4:	9b04      	ldr	r3, [sp, #16]
 80207a6:	f003 031f 	and.w	r3, r3, #31
 80207aa:	9305      	str	r3, [sp, #20]
 80207ac:	9b03      	ldr	r3, [sp, #12]
 80207ae:	45dc      	cmp	ip, fp
 80207b0:	eba3 050e 	sub.w	r5, r3, lr
 80207b4:	d108      	bne.n	80207c8 <_ZN8touchgfx7Outline10renderLineEiiii+0xa98>
 80207b6:	9b05      	ldr	r3, [sp, #20]
 80207b8:	441a      	add	r2, r3
 80207ba:	4428      	add	r0, r5
 80207bc:	fb05 6502 	mla	r5, r5, r2, r6
 80207c0:	8320      	strh	r0, [r4, #24]
 80207c2:	8365      	strh	r5, [r4, #26]
 80207c4:	f7ff bbe7 	b.w	801ff96 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 80207c8:	9b04      	ldr	r3, [sp, #16]
 80207ca:	9901      	ldr	r1, [sp, #4]
 80207cc:	1a5b      	subs	r3, r3, r1
 80207ce:	9300      	str	r3, [sp, #0]
 80207d0:	f100 809f 	bmi.w	8020912 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe2>
 80207d4:	f1c2 0120 	rsb	r1, r2, #32
 80207d8:	434d      	muls	r5, r1
 80207da:	2101      	movs	r1, #1
 80207dc:	9102      	str	r1, [sp, #8]
 80207de:	2120      	movs	r1, #32
 80207e0:	9b00      	ldr	r3, [sp, #0]
 80207e2:	9101      	str	r1, [sp, #4]
 80207e4:	fb95 f7f3 	sdiv	r7, r5, r3
 80207e8:	9901      	ldr	r1, [sp, #4]
 80207ea:	fb03 5517 	mls	r5, r3, r7, r5
 80207ee:	2d00      	cmp	r5, #0
 80207f0:	bfb8      	it	lt
 80207f2:	f107 37ff 	addlt.w	r7, r7, #4294967295
 80207f6:	440a      	add	r2, r1
 80207f8:	fb07 6202 	mla	r2, r7, r2, r6
 80207fc:	b211      	sxth	r1, r2
 80207fe:	9a02      	ldr	r2, [sp, #8]
 8020800:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 8020804:	8361      	strh	r1, [r4, #26]
 8020806:	4494      	add	ip, r2
 8020808:	fa0f f289 	sxth.w	r2, r9
 802080c:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 8020810:	bfb8      	it	lt
 8020812:	18ed      	addlt	r5, r5, r3
 8020814:	fa0f f88c 	sxth.w	r8, ip
 8020818:	0413      	lsls	r3, r2, #16
 802081a:	4438      	add	r0, r7
 802081c:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 8020820:	eb08 0a03 	add.w	sl, r8, r3
 8020824:	b200      	sxth	r0, r0
 8020826:	45d1      	cmp	r9, sl
 8020828:	8320      	strh	r0, [r4, #24]
 802082a:	9304      	str	r3, [sp, #16]
 802082c:	f43f ab33 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 8020830:	ea50 0301 	orrs.w	r3, r0, r1
 8020834:	d00b      	beq.n	802084e <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8020836:	2e00      	cmp	r6, #0
 8020838:	db09      	blt.n	802084e <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 802083a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802083c:	428e      	cmp	r6, r1
 802083e:	da06      	bge.n	802084e <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8020840:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020844:	4288      	cmp	r0, r1
 8020846:	d36d      	bcc.n	8020924 <_ZN8touchgfx7Outline10renderLineEiiii+0xbf4>
 8020848:	2101      	movs	r1, #1
 802084a:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802084e:	2100      	movs	r1, #0
 8020850:	45e3      	cmp	fp, ip
 8020852:	f8a4 8014 	strh.w	r8, [r4, #20]
 8020856:	82e2      	strh	r2, [r4, #22]
 8020858:	8321      	strh	r1, [r4, #24]
 802085a:	8361      	strh	r1, [r4, #26]
 802085c:	44be      	add	lr, r7
 802085e:	d049      	beq.n	80208f4 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc4>
 8020860:	9b03      	ldr	r3, [sp, #12]
 8020862:	eba3 060e 	sub.w	r6, r3, lr
 8020866:	443e      	add	r6, r7
 8020868:	9b00      	ldr	r3, [sp, #0]
 802086a:	0176      	lsls	r6, r6, #5
 802086c:	fb96 f7f3 	sdiv	r7, r6, r3
 8020870:	fb03 6617 	mls	r6, r3, r7, r6
 8020874:	428e      	cmp	r6, r1
 8020876:	bfb8      	it	lt
 8020878:	18f6      	addlt	r6, r6, r3
 802087a:	9b00      	ldr	r3, [sp, #0]
 802087c:	bfb8      	it	lt
 802087e:	f107 37ff 	addlt.w	r7, r7, #4294967295
 8020882:	1aed      	subs	r5, r5, r3
 8020884:	1c7b      	adds	r3, r7, #1
 8020886:	9307      	str	r3, [sp, #28]
 8020888:	f04f 0900 	mov.w	r9, #0
 802088c:	19ad      	adds	r5, r5, r6
 802088e:	bf5e      	ittt	pl
 8020890:	9b00      	ldrpl	r3, [sp, #0]
 8020892:	9807      	ldrpl	r0, [sp, #28]
 8020894:	1aed      	subpl	r5, r5, r3
 8020896:	9b02      	ldr	r3, [sp, #8]
 8020898:	bf48      	it	mi
 802089a:	4638      	movmi	r0, r7
 802089c:	fa0f f880 	sxth.w	r8, r0
 80208a0:	0141      	lsls	r1, r0, #5
 80208a2:	449c      	add	ip, r3
 80208a4:	4486      	add	lr, r0
 80208a6:	9b04      	ldr	r3, [sp, #16]
 80208a8:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80208ac:	f8a4 8018 	strh.w	r8, [r4, #24]
 80208b0:	fa0f fa8c 	sxth.w	sl, ip
 80208b4:	4418      	add	r0, r3
 80208b6:	4453      	add	r3, sl
 80208b8:	b209      	sxth	r1, r1
 80208ba:	4298      	cmp	r0, r3
 80208bc:	8361      	strh	r1, [r4, #26]
 80208be:	f43f aaea 	beq.w	801fe96 <_ZN8touchgfx7Outline10renderLineEiiii+0x166>
 80208c2:	ea58 0301 	orrs.w	r3, r8, r1
 80208c6:	d00c      	beq.n	80208e2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 80208c8:	2a00      	cmp	r2, #0
 80208ca:	db0a      	blt.n	80208e2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 80208cc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80208ce:	428a      	cmp	r2, r1
 80208d0:	da07      	bge.n	80208e2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 80208d2:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80208d6:	4288      	cmp	r0, r1
 80208d8:	d334      	bcc.n	8020944 <_ZN8touchgfx7Outline10renderLineEiiii+0xc14>
 80208da:	f04f 0301 	mov.w	r3, #1
 80208de:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80208e2:	45e3      	cmp	fp, ip
 80208e4:	f8a4 a014 	strh.w	sl, [r4, #20]
 80208e8:	82e2      	strh	r2, [r4, #22]
 80208ea:	f8a4 9018 	strh.w	r9, [r4, #24]
 80208ee:	f8a4 901a 	strh.w	r9, [r4, #26]
 80208f2:	d1cb      	bne.n	802088c <_ZN8touchgfx7Outline10renderLineEiiii+0xb5c>
 80208f4:	9b03      	ldr	r3, [sp, #12]
 80208f6:	9e05      	ldr	r6, [sp, #20]
 80208f8:	eba3 0e0e 	sub.w	lr, r3, lr
 80208fc:	9b01      	ldr	r3, [sp, #4]
 80208fe:	f8a4 e018 	strh.w	lr, [r4, #24]
 8020902:	3620      	adds	r6, #32
 8020904:	1af6      	subs	r6, r6, r3
 8020906:	fb0e fe06 	mul.w	lr, lr, r6
 802090a:	f8a4 e01a 	strh.w	lr, [r4, #26]
 802090e:	f7ff bb42 	b.w	801ff96 <_ZN8touchgfx7Outline10renderLineEiiii+0x266>
 8020912:	9b00      	ldr	r3, [sp, #0]
 8020914:	f04f 31ff 	mov.w	r1, #4294967295
 8020918:	425b      	negs	r3, r3
 802091a:	9102      	str	r1, [sp, #8]
 802091c:	4355      	muls	r5, r2
 802091e:	9300      	str	r3, [sp, #0]
 8020920:	2100      	movs	r1, #0
 8020922:	e75d      	b.n	80207e0 <_ZN8touchgfx7Outline10renderLineEiiii+0xab0>
 8020924:	f104 0614 	add.w	r6, r4, #20
 8020928:	ce03      	ldmia	r6!, {r0, r1}
 802092a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802092e:	f8c9 0000 	str.w	r0, [r9]
 8020932:	f8c9 1004 	str.w	r1, [r9, #4]
 8020936:	6921      	ldr	r1, [r4, #16]
 8020938:	3108      	adds	r1, #8
 802093a:	6121      	str	r1, [r4, #16]
 802093c:	68a1      	ldr	r1, [r4, #8]
 802093e:	3101      	adds	r1, #1
 8020940:	60a1      	str	r1, [r4, #8]
 8020942:	e784      	b.n	802084e <_ZN8touchgfx7Outline10renderLineEiiii+0xb1e>
 8020944:	f104 0814 	add.w	r8, r4, #20
 8020948:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802094c:	6923      	ldr	r3, [r4, #16]
 802094e:	9306      	str	r3, [sp, #24]
 8020950:	6018      	str	r0, [r3, #0]
 8020952:	6059      	str	r1, [r3, #4]
 8020954:	6921      	ldr	r1, [r4, #16]
 8020956:	3108      	adds	r1, #8
 8020958:	6121      	str	r1, [r4, #16]
 802095a:	68a1      	ldr	r1, [r4, #8]
 802095c:	3101      	adds	r1, #1
 802095e:	60a1      	str	r1, [r4, #8]
 8020960:	e7bf      	b.n	80208e2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb2>
 8020962:	bf00      	nop

08020964 <_ZN8touchgfx7Outline6lineToEii>:
 8020964:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020966:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8020968:	079b      	lsls	r3, r3, #30
 802096a:	4604      	mov	r4, r0
 802096c:	460d      	mov	r5, r1
 802096e:	4616      	mov	r6, r2
 8020970:	d526      	bpl.n	80209c0 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8020972:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8020976:	ea85 0001 	eor.w	r0, r5, r1
 802097a:	ea86 0302 	eor.w	r3, r6, r2
 802097e:	4303      	orrs	r3, r0
 8020980:	d01e      	beq.n	80209c0 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8020982:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8020984:	9600      	str	r6, [sp, #0]
 8020986:	114b      	asrs	r3, r1, #5
 8020988:	4283      	cmp	r3, r0
 802098a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802098c:	bfb8      	it	lt
 802098e:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8020990:	3301      	adds	r3, #1
 8020992:	4283      	cmp	r3, r0
 8020994:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8020996:	bfc8      	it	gt
 8020998:	6363      	strgt	r3, [r4, #52]	; 0x34
 802099a:	116b      	asrs	r3, r5, #5
 802099c:	4283      	cmp	r3, r0
 802099e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80209a0:	bfb8      	it	lt
 80209a2:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 80209a4:	3301      	adds	r3, #1
 80209a6:	4283      	cmp	r3, r0
 80209a8:	bfc8      	it	gt
 80209aa:	6363      	strgt	r3, [r4, #52]	; 0x34
 80209ac:	4620      	mov	r0, r4
 80209ae:	462b      	mov	r3, r5
 80209b0:	f7ff f9be 	bl	801fd30 <_ZN8touchgfx7Outline10renderLineEiiii>
 80209b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80209b6:	e9c4 5607 	strd	r5, r6, [r4, #28]
 80209ba:	f043 0301 	orr.w	r3, r3, #1
 80209be:	63e3      	str	r3, [r4, #60]	; 0x3c
 80209c0:	b002      	add	sp, #8
 80209c2:	bd70      	pop	{r4, r5, r6, pc}

080209c4 <_ZN8touchgfx7Outline6moveToEii>:
 80209c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80209c6:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80209c8:	4615      	mov	r5, r2
 80209ca:	079a      	lsls	r2, r3, #30
 80209cc:	4604      	mov	r4, r0
 80209ce:	460e      	mov	r6, r1
 80209d0:	d401      	bmi.n	80209d6 <_ZN8touchgfx7Outline6moveToEii+0x12>
 80209d2:	f7ff f967 	bl	801fca4 <_ZN8touchgfx7Outline5resetEv>
 80209d6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80209d8:	07db      	lsls	r3, r3, #31
 80209da:	d504      	bpl.n	80209e6 <_ZN8touchgfx7Outline6moveToEii+0x22>
 80209dc:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 80209e0:	4620      	mov	r0, r4
 80209e2:	f7ff ffbf 	bl	8020964 <_ZN8touchgfx7Outline6lineToEii>
 80209e6:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80209ea:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 80209ee:	f346 1c4f 	sbfx	ip, r6, #5, #16
 80209f2:	f345 174f 	sbfx	r7, r5, #5, #16
 80209f6:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 80209fa:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 80209fe:	428a      	cmp	r2, r1
 8020a00:	d015      	beq.n	8020a2e <_ZN8touchgfx7Outline6moveToEii+0x6a>
 8020a02:	8b61      	ldrh	r1, [r4, #26]
 8020a04:	8b22      	ldrh	r2, [r4, #24]
 8020a06:	430a      	orrs	r2, r1
 8020a08:	d00b      	beq.n	8020a22 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8020a0a:	2b00      	cmp	r3, #0
 8020a0c:	db09      	blt.n	8020a22 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8020a0e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8020a10:	4293      	cmp	r3, r2
 8020a12:	da06      	bge.n	8020a22 <_ZN8touchgfx7Outline6moveToEii+0x5e>
 8020a14:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8020a18:	429a      	cmp	r2, r3
 8020a1a:	d30d      	bcc.n	8020a38 <_ZN8touchgfx7Outline6moveToEii+0x74>
 8020a1c:	2301      	movs	r3, #1
 8020a1e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020a22:	2300      	movs	r3, #0
 8020a24:	f8a4 c014 	strh.w	ip, [r4, #20]
 8020a28:	82e7      	strh	r7, [r4, #22]
 8020a2a:	8323      	strh	r3, [r4, #24]
 8020a2c:	8363      	strh	r3, [r4, #26]
 8020a2e:	61e6      	str	r6, [r4, #28]
 8020a30:	e9c4 5608 	strd	r5, r6, [r4, #32]
 8020a34:	62a5      	str	r5, [r4, #40]	; 0x28
 8020a36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020a38:	f104 0314 	add.w	r3, r4, #20
 8020a3c:	cb03      	ldmia	r3!, {r0, r1}
 8020a3e:	6922      	ldr	r2, [r4, #16]
 8020a40:	6010      	str	r0, [r2, #0]
 8020a42:	6051      	str	r1, [r2, #4]
 8020a44:	6923      	ldr	r3, [r4, #16]
 8020a46:	3308      	adds	r3, #8
 8020a48:	6123      	str	r3, [r4, #16]
 8020a4a:	68a3      	ldr	r3, [r4, #8]
 8020a4c:	3301      	adds	r3, #1
 8020a4e:	60a3      	str	r3, [r4, #8]
 8020a50:	e7e7      	b.n	8020a22 <_ZN8touchgfx7Outline6moveToEii+0x5e>

08020a52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8020a52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a56:	b0d1      	sub	sp, #324	; 0x144
 8020a58:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8020a5c:	466c      	mov	r4, sp
 8020a5e:	1a0d      	subs	r5, r1, r0
 8020a60:	2d48      	cmp	r5, #72	; 0x48
 8020a62:	f100 0208 	add.w	r2, r0, #8
 8020a66:	f340 80bb 	ble.w	8020be0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8020a6a:	112d      	asrs	r5, r5, #4
 8020a6c:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 8020a70:	f9b0 8000 	ldrsh.w	r8, [r0]
 8020a74:	681e      	ldr	r6, [r3, #0]
 8020a76:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 8020a7a:	6006      	str	r6, [r0, #0]
 8020a7c:	685e      	ldr	r6, [r3, #4]
 8020a7e:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 8020a82:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 8020a86:	6046      	str	r6, [r0, #4]
 8020a88:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 8020a8c:	f8a3 e002 	strh.w	lr, [r3, #2]
 8020a90:	f8a3 c004 	strh.w	ip, [r3, #4]
 8020a94:	80df      	strh	r7, [r3, #6]
 8020a96:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8020a9a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8020a9e:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 8020aa2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8020aa6:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8020aaa:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020aae:	4565      	cmp	r5, ip
 8020ab0:	f1a1 0308 	sub.w	r3, r1, #8
 8020ab4:	da0f      	bge.n	8020ad6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 8020ab6:	681d      	ldr	r5, [r3, #0]
 8020ab8:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 8020abc:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8020ac0:	6015      	str	r5, [r2, #0]
 8020ac2:	685d      	ldr	r5, [r3, #4]
 8020ac4:	6055      	str	r5, [r2, #4]
 8020ac6:	f821 7c08 	strh.w	r7, [r1, #-8]
 8020aca:	f821 6c06 	strh.w	r6, [r1, #-6]
 8020ace:	f821 ec04 	strh.w	lr, [r1, #-4]
 8020ad2:	f821 cc02 	strh.w	ip, [r1, #-2]
 8020ad6:	f9b0 7000 	ldrsh.w	r7, [r0]
 8020ada:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8020ade:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8020ae2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8020ae6:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020aea:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8020aee:	45ac      	cmp	ip, r5
 8020af0:	da0d      	bge.n	8020b0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 8020af2:	6815      	ldr	r5, [r2, #0]
 8020af4:	6005      	str	r5, [r0, #0]
 8020af6:	6855      	ldr	r5, [r2, #4]
 8020af8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8020afc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8020b00:	8107      	strh	r7, [r0, #8]
 8020b02:	6045      	str	r5, [r0, #4]
 8020b04:	8146      	strh	r6, [r0, #10]
 8020b06:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8020b0a:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8020b0e:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 8020b12:	f9b0 7000 	ldrsh.w	r7, [r0]
 8020b16:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8020b1a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8020b1e:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8020b22:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020b26:	4565      	cmp	r5, ip
 8020b28:	da0f      	bge.n	8020b4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8020b2a:	681d      	ldr	r5, [r3, #0]
 8020b2c:	6005      	str	r5, [r0, #0]
 8020b2e:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8020b32:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8020b36:	685d      	ldr	r5, [r3, #4]
 8020b38:	6045      	str	r5, [r0, #4]
 8020b3a:	f821 7c08 	strh.w	r7, [r1, #-8]
 8020b3e:	f821 6c06 	strh.w	r6, [r1, #-6]
 8020b42:	f821 ec04 	strh.w	lr, [r1, #-4]
 8020b46:	f821 cc02 	strh.w	ip, [r1, #-2]
 8020b4a:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 8020b4e:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 8020b52:	f9b0 e000 	ldrsh.w	lr, [r0]
 8020b56:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8020b5a:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 8020b5e:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 8020b62:	f102 0508 	add.w	r5, r2, #8
 8020b66:	4556      	cmp	r6, sl
 8020b68:	462f      	mov	r7, r5
 8020b6a:	db18      	blt.n	8020b9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 8020b6c:	3b08      	subs	r3, #8
 8020b6e:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 8020b72:	f9b3 6000 	ldrsh.w	r6, [r3]
 8020b76:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 8020b7a:	45b2      	cmp	sl, r6
 8020b7c:	dbf6      	blt.n	8020b6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 8020b7e:	42ab      	cmp	r3, r5
 8020b80:	681e      	ldr	r6, [r3, #0]
 8020b82:	d30e      	bcc.n	8020ba2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 8020b84:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 8020b88:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 8020b8c:	602e      	str	r6, [r5, #0]
 8020b8e:	685e      	ldr	r6, [r3, #4]
 8020b90:	606e      	str	r6, [r5, #4]
 8020b92:	f8a3 9000 	strh.w	r9, [r3]
 8020b96:	f8a3 8002 	strh.w	r8, [r3, #2]
 8020b9a:	809f      	strh	r7, [r3, #4]
 8020b9c:	80da      	strh	r2, [r3, #6]
 8020b9e:	462a      	mov	r2, r5
 8020ba0:	e7d3      	b.n	8020b4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8020ba2:	6006      	str	r6, [r0, #0]
 8020ba4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8020ba8:	685e      	ldr	r6, [r3, #4]
 8020baa:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8020bae:	6046      	str	r6, [r0, #4]
 8020bb0:	80da      	strh	r2, [r3, #6]
 8020bb2:	1b4a      	subs	r2, r1, r5
 8020bb4:	1a1e      	subs	r6, r3, r0
 8020bb6:	10d2      	asrs	r2, r2, #3
 8020bb8:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 8020bbc:	bfb8      	it	lt
 8020bbe:	e9c4 0300 	strdlt	r0, r3, [r4]
 8020bc2:	f8a3 e000 	strh.w	lr, [r3]
 8020bc6:	f8a3 c002 	strh.w	ip, [r3, #2]
 8020bca:	f8a3 8004 	strh.w	r8, [r3, #4]
 8020bce:	bfaa      	itet	ge
 8020bd0:	4607      	movge	r7, r0
 8020bd2:	460b      	movlt	r3, r1
 8020bd4:	e9c4 5100 	strdge	r5, r1, [r4]
 8020bd8:	4638      	mov	r0, r7
 8020bda:	3408      	adds	r4, #8
 8020bdc:	4619      	mov	r1, r3
 8020bde:	e73e      	b.n	8020a5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8020be0:	4291      	cmp	r1, r2
 8020be2:	d926      	bls.n	8020c32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 8020be4:	f1a2 0310 	sub.w	r3, r2, #16
 8020be8:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 8020bec:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 8020bf0:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 8020bf4:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8020bf8:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 8020bfc:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8020c00:	42ae      	cmp	r6, r5
 8020c02:	da14      	bge.n	8020c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 8020c04:	461d      	mov	r5, r3
 8020c06:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 8020c0a:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8020c0e:	611e      	str	r6, [r3, #16]
 8020c10:	686e      	ldr	r6, [r5, #4]
 8020c12:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 8020c16:	f8a3 c008 	strh.w	ip, [r3, #8]
 8020c1a:	42a8      	cmp	r0, r5
 8020c1c:	615e      	str	r6, [r3, #20]
 8020c1e:	815f      	strh	r7, [r3, #10]
 8020c20:	f8a3 800c 	strh.w	r8, [r3, #12]
 8020c24:	f8a3 e00e 	strh.w	lr, [r3, #14]
 8020c28:	f1a3 0308 	sub.w	r3, r3, #8
 8020c2c:	d1dc      	bne.n	8020be8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 8020c2e:	3208      	adds	r2, #8
 8020c30:	e7d6      	b.n	8020be0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8020c32:	466b      	mov	r3, sp
 8020c34:	429c      	cmp	r4, r3
 8020c36:	d903      	bls.n	8020c40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 8020c38:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8020c3c:	3c08      	subs	r4, #8
 8020c3e:	e70e      	b.n	8020a5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 8020c40:	b051      	add	sp, #324	; 0x144
 8020c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020c46 <_ZN8touchgfx7Outline9sortCellsEv>:
 8020c46:	6881      	ldr	r1, [r0, #8]
 8020c48:	b111      	cbz	r1, 8020c50 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 8020c4a:	68c0      	ldr	r0, [r0, #12]
 8020c4c:	f7ff bf01 	b.w	8020a52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8020c50:	4770      	bx	lr

08020c52 <_ZN8touchgfx7Outline8getCellsEv>:
 8020c52:	b510      	push	{r4, lr}
 8020c54:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8020c56:	07da      	lsls	r2, r3, #31
 8020c58:	4604      	mov	r4, r0
 8020c5a:	d507      	bpl.n	8020c6c <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 8020c5c:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 8020c60:	f7ff fe80 	bl	8020964 <_ZN8touchgfx7Outline6lineToEii>
 8020c64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020c66:	f023 0301 	bic.w	r3, r3, #1
 8020c6a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8020c6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020c6e:	079b      	lsls	r3, r3, #30
 8020c70:	d51a      	bpl.n	8020ca8 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 8020c72:	8b62      	ldrh	r2, [r4, #26]
 8020c74:	8b23      	ldrh	r3, [r4, #24]
 8020c76:	4313      	orrs	r3, r2
 8020c78:	d00d      	beq.n	8020c96 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 8020c7a:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8020c7e:	2b00      	cmp	r3, #0
 8020c80:	db09      	blt.n	8020c96 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 8020c82:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8020c84:	4293      	cmp	r3, r2
 8020c86:	da06      	bge.n	8020c96 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 8020c88:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8020c8c:	429a      	cmp	r2, r3
 8020c8e:	d80d      	bhi.n	8020cac <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 8020c90:	2301      	movs	r3, #1
 8020c92:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020c96:	68a0      	ldr	r0, [r4, #8]
 8020c98:	b138      	cbz	r0, 8020caa <_ZN8touchgfx7Outline8getCellsEv+0x58>
 8020c9a:	4620      	mov	r0, r4
 8020c9c:	f7ff ffd3 	bl	8020c46 <_ZN8touchgfx7Outline9sortCellsEv>
 8020ca0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020ca2:	f023 0302 	bic.w	r3, r3, #2
 8020ca6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8020ca8:	68e0      	ldr	r0, [r4, #12]
 8020caa:	bd10      	pop	{r4, pc}
 8020cac:	f104 0314 	add.w	r3, r4, #20
 8020cb0:	cb03      	ldmia	r3!, {r0, r1}
 8020cb2:	6922      	ldr	r2, [r4, #16]
 8020cb4:	6010      	str	r0, [r2, #0]
 8020cb6:	6051      	str	r1, [r2, #4]
 8020cb8:	6923      	ldr	r3, [r4, #16]
 8020cba:	3308      	adds	r3, #8
 8020cbc:	6123      	str	r3, [r4, #16]
 8020cbe:	68a3      	ldr	r3, [r4, #8]
 8020cc0:	3301      	adds	r3, #1
 8020cc2:	60a3      	str	r3, [r4, #8]
 8020cc4:	e7e7      	b.n	8020c96 <_ZN8touchgfx7Outline8getCellsEv+0x44>

08020cc6 <_ZN8touchgfx8ScanlineD1Ev>:
 8020cc6:	4770      	bx	lr

08020cc8 <_ZN8touchgfx8ScanlineD0Ev>:
 8020cc8:	b510      	push	{r4, lr}
 8020cca:	2124      	movs	r1, #36	; 0x24
 8020ccc:	4604      	mov	r4, r0
 8020cce:	f000 f888 	bl	8020de2 <_ZdlPvj>
 8020cd2:	4620      	mov	r0, r4
 8020cd4:	bd10      	pop	{r4, pc}

08020cd6 <_ZN8touchgfx8Scanline5resetEv>:
 8020cd6:	b510      	push	{r4, lr}
 8020cd8:	4604      	mov	r4, r0
 8020cda:	f7ee f84f 	bl	800ed7c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 8020cde:	61a0      	str	r0, [r4, #24]
 8020ce0:	f7ee f852 	bl	800ed88 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 8020ce4:	61e0      	str	r0, [r4, #28]
 8020ce6:	f7ee f855 	bl	800ed94 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 8020cea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8020cee:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8020cf2:	69e3      	ldr	r3, [r4, #28]
 8020cf4:	6123      	str	r3, [r4, #16]
 8020cf6:	2300      	movs	r3, #0
 8020cf8:	6220      	str	r0, [r4, #32]
 8020cfa:	6160      	str	r0, [r4, #20]
 8020cfc:	60e3      	str	r3, [r4, #12]
 8020cfe:	bd10      	pop	{r4, pc}

08020d00 <_ZN8touchgfx8ScanlineC1Ev>:
 8020d00:	b510      	push	{r4, lr}
 8020d02:	4b09      	ldr	r3, [pc, #36]	; (8020d28 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 8020d04:	6003      	str	r3, [r0, #0]
 8020d06:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8020d0a:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8020d0e:	2300      	movs	r3, #0
 8020d10:	4604      	mov	r4, r0
 8020d12:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8020d16:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8020d1a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8020d1e:	f7ff ffda 	bl	8020cd6 <_ZN8touchgfx8Scanline5resetEv>
 8020d22:	4620      	mov	r0, r4
 8020d24:	bd10      	pop	{r4, pc}
 8020d26:	bf00      	nop
 8020d28:	08025f3c 	.word	0x08025f3c

08020d2c <_ZN8touchgfx8Scanline7addSpanEiijj>:
 8020d2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020d30:	1e0c      	subs	r4, r1, #0
 8020d32:	4605      	mov	r5, r0
 8020d34:	4617      	mov	r7, r2
 8020d36:	461e      	mov	r6, r3
 8020d38:	da03      	bge.n	8020d42 <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 8020d3a:	4426      	add	r6, r4
 8020d3c:	2e01      	cmp	r6, #1
 8020d3e:	d421      	bmi.n	8020d84 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 8020d40:	2400      	movs	r4, #0
 8020d42:	f7ee f815 	bl	800ed70 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8020d46:	42a0      	cmp	r0, r4
 8020d48:	dd1c      	ble.n	8020d84 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 8020d4a:	f7ee f811 	bl	800ed70 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8020d4e:	eb04 0806 	add.w	r8, r4, r6
 8020d52:	4580      	cmp	r8, r0
 8020d54:	d902      	bls.n	8020d5c <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 8020d56:	f7ee f80b 	bl	800ed70 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8020d5a:	1b06      	subs	r6, r0, r4
 8020d5c:	69a8      	ldr	r0, [r5, #24]
 8020d5e:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8020d62:	4632      	mov	r2, r6
 8020d64:	4420      	add	r0, r4
 8020d66:	f7f0 fd5d 	bl	8011824 <_ZN8touchgfx6memsetEPvhm>
 8020d6a:	686b      	ldr	r3, [r5, #4]
 8020d6c:	3301      	adds	r3, #1
 8020d6e:	42a3      	cmp	r3, r4
 8020d70:	b2b2      	uxth	r2, r6
 8020d72:	696b      	ldr	r3, [r5, #20]
 8020d74:	d108      	bne.n	8020d88 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 8020d76:	8819      	ldrh	r1, [r3, #0]
 8020d78:	440a      	add	r2, r1
 8020d7a:	801a      	strh	r2, [r3, #0]
 8020d7c:	3c01      	subs	r4, #1
 8020d7e:	4434      	add	r4, r6
 8020d80:	e9c5 4701 	strd	r4, r7, [r5, #4]
 8020d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020d88:	1c99      	adds	r1, r3, #2
 8020d8a:	6169      	str	r1, [r5, #20]
 8020d8c:	805a      	strh	r2, [r3, #2]
 8020d8e:	692b      	ldr	r3, [r5, #16]
 8020d90:	1c9a      	adds	r2, r3, #2
 8020d92:	612a      	str	r2, [r5, #16]
 8020d94:	805c      	strh	r4, [r3, #2]
 8020d96:	68eb      	ldr	r3, [r5, #12]
 8020d98:	3301      	adds	r3, #1
 8020d9a:	60eb      	str	r3, [r5, #12]
 8020d9c:	e7ee      	b.n	8020d7c <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

08020d9e <_ZN8touchgfx15RenderingBufferD1Ev>:
 8020d9e:	4770      	bx	lr

08020da0 <_ZN8touchgfx15RenderingBufferD0Ev>:
 8020da0:	b510      	push	{r4, lr}
 8020da2:	2118      	movs	r1, #24
 8020da4:	4604      	mov	r4, r0
 8020da6:	f000 f81c 	bl	8020de2 <_ZdlPvj>
 8020daa:	4620      	mov	r0, r4
 8020dac:	bd10      	pop	{r4, pc}
	...

08020db0 <_ZN8touchgfx15RenderingBufferC1Ev>:
 8020db0:	4a04      	ldr	r2, [pc, #16]	; (8020dc4 <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 8020db2:	6002      	str	r2, [r0, #0]
 8020db4:	2200      	movs	r2, #0
 8020db6:	6042      	str	r2, [r0, #4]
 8020db8:	7202      	strb	r2, [r0, #8]
 8020dba:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8020dbe:	6142      	str	r2, [r0, #20]
 8020dc0:	4770      	bx	lr
 8020dc2:	bf00      	nop
 8020dc4:	08025f4c 	.word	0x08025f4c

08020dc8 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 8020dc8:	60c3      	str	r3, [r0, #12]
 8020dca:	9b00      	ldr	r3, [sp, #0]
 8020dcc:	6103      	str	r3, [r0, #16]
 8020dce:	9b01      	ldr	r3, [sp, #4]
 8020dd0:	6041      	str	r1, [r0, #4]
 8020dd2:	7202      	strb	r2, [r0, #8]
 8020dd4:	6143      	str	r3, [r0, #20]
 8020dd6:	4770      	bx	lr

08020dd8 <__aeabi_atexit>:
 8020dd8:	460b      	mov	r3, r1
 8020dda:	4601      	mov	r1, r0
 8020ddc:	4618      	mov	r0, r3
 8020dde:	f000 b853 	b.w	8020e88 <__cxa_atexit>

08020de2 <_ZdlPvj>:
 8020de2:	f000 b812 	b.w	8020e0a <_ZdlPv>

08020de6 <__cxa_guard_acquire>:
 8020de6:	6803      	ldr	r3, [r0, #0]
 8020de8:	07db      	lsls	r3, r3, #31
 8020dea:	d406      	bmi.n	8020dfa <__cxa_guard_acquire+0x14>
 8020dec:	7843      	ldrb	r3, [r0, #1]
 8020dee:	b103      	cbz	r3, 8020df2 <__cxa_guard_acquire+0xc>
 8020df0:	deff      	udf	#255	; 0xff
 8020df2:	2301      	movs	r3, #1
 8020df4:	7043      	strb	r3, [r0, #1]
 8020df6:	4618      	mov	r0, r3
 8020df8:	4770      	bx	lr
 8020dfa:	2000      	movs	r0, #0
 8020dfc:	4770      	bx	lr

08020dfe <__cxa_guard_release>:
 8020dfe:	2301      	movs	r3, #1
 8020e00:	6003      	str	r3, [r0, #0]
 8020e02:	4770      	bx	lr

08020e04 <__cxa_pure_virtual>:
 8020e04:	b508      	push	{r3, lr}
 8020e06:	f000 f80f 	bl	8020e28 <_ZSt9terminatev>

08020e0a <_ZdlPv>:
 8020e0a:	f000 b989 	b.w	8021120 <free>

08020e0e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020e0e:	b508      	push	{r3, lr}
 8020e10:	4780      	blx	r0
 8020e12:	f000 f80e 	bl	8020e32 <abort>
	...

08020e18 <_ZSt13get_terminatev>:
 8020e18:	4b02      	ldr	r3, [pc, #8]	; (8020e24 <_ZSt13get_terminatev+0xc>)
 8020e1a:	6818      	ldr	r0, [r3, #0]
 8020e1c:	f3bf 8f5b 	dmb	ish
 8020e20:	4770      	bx	lr
 8020e22:	bf00      	nop
 8020e24:	200000f8 	.word	0x200000f8

08020e28 <_ZSt9terminatev>:
 8020e28:	b508      	push	{r3, lr}
 8020e2a:	f7ff fff5 	bl	8020e18 <_ZSt13get_terminatev>
 8020e2e:	f7ff ffee 	bl	8020e0e <_ZN10__cxxabiv111__terminateEPFvvE>

08020e32 <abort>:
 8020e32:	b508      	push	{r3, lr}
 8020e34:	2006      	movs	r0, #6
 8020e36:	f000 fdcb 	bl	80219d0 <raise>
 8020e3a:	2001      	movs	r0, #1
 8020e3c:	f7e1 f8d6 	bl	8001fec <_exit>

08020e40 <__assert_func>:
 8020e40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020e42:	4614      	mov	r4, r2
 8020e44:	461a      	mov	r2, r3
 8020e46:	4b09      	ldr	r3, [pc, #36]	; (8020e6c <__assert_func+0x2c>)
 8020e48:	681b      	ldr	r3, [r3, #0]
 8020e4a:	4605      	mov	r5, r0
 8020e4c:	68d8      	ldr	r0, [r3, #12]
 8020e4e:	b14c      	cbz	r4, 8020e64 <__assert_func+0x24>
 8020e50:	4b07      	ldr	r3, [pc, #28]	; (8020e70 <__assert_func+0x30>)
 8020e52:	9100      	str	r1, [sp, #0]
 8020e54:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020e58:	4906      	ldr	r1, [pc, #24]	; (8020e74 <__assert_func+0x34>)
 8020e5a:	462b      	mov	r3, r5
 8020e5c:	f000 f8fe 	bl	802105c <fiprintf>
 8020e60:	f7ff ffe7 	bl	8020e32 <abort>
 8020e64:	4b04      	ldr	r3, [pc, #16]	; (8020e78 <__assert_func+0x38>)
 8020e66:	461c      	mov	r4, r3
 8020e68:	e7f3      	b.n	8020e52 <__assert_func+0x12>
 8020e6a:	bf00      	nop
 8020e6c:	200000fc 	.word	0x200000fc
 8020e70:	08025f54 	.word	0x08025f54
 8020e74:	08025f61 	.word	0x08025f61
 8020e78:	08025f8f 	.word	0x08025f8f

08020e7c <atexit>:
 8020e7c:	2300      	movs	r3, #0
 8020e7e:	4601      	mov	r1, r0
 8020e80:	461a      	mov	r2, r3
 8020e82:	4618      	mov	r0, r3
 8020e84:	f000 bed6 	b.w	8021c34 <__register_exitproc>

08020e88 <__cxa_atexit>:
 8020e88:	b510      	push	{r4, lr}
 8020e8a:	4c05      	ldr	r4, [pc, #20]	; (8020ea0 <__cxa_atexit+0x18>)
 8020e8c:	4613      	mov	r3, r2
 8020e8e:	b12c      	cbz	r4, 8020e9c <__cxa_atexit+0x14>
 8020e90:	460a      	mov	r2, r1
 8020e92:	4601      	mov	r1, r0
 8020e94:	2002      	movs	r0, #2
 8020e96:	f000 fecd 	bl	8021c34 <__register_exitproc>
 8020e9a:	bd10      	pop	{r4, pc}
 8020e9c:	4620      	mov	r0, r4
 8020e9e:	e7fc      	b.n	8020e9a <__cxa_atexit+0x12>
 8020ea0:	08021c35 	.word	0x08021c35

08020ea4 <__errno>:
 8020ea4:	4b01      	ldr	r3, [pc, #4]	; (8020eac <__errno+0x8>)
 8020ea6:	6818      	ldr	r0, [r3, #0]
 8020ea8:	4770      	bx	lr
 8020eaa:	bf00      	nop
 8020eac:	200000fc 	.word	0x200000fc

08020eb0 <std>:
 8020eb0:	2300      	movs	r3, #0
 8020eb2:	b510      	push	{r4, lr}
 8020eb4:	4604      	mov	r4, r0
 8020eb6:	e9c0 3300 	strd	r3, r3, [r0]
 8020eba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020ebe:	6083      	str	r3, [r0, #8]
 8020ec0:	8181      	strh	r1, [r0, #12]
 8020ec2:	6643      	str	r3, [r0, #100]	; 0x64
 8020ec4:	81c2      	strh	r2, [r0, #14]
 8020ec6:	6183      	str	r3, [r0, #24]
 8020ec8:	4619      	mov	r1, r3
 8020eca:	2208      	movs	r2, #8
 8020ecc:	305c      	adds	r0, #92	; 0x5c
 8020ece:	f000 f93d 	bl	802114c <memset>
 8020ed2:	4b05      	ldr	r3, [pc, #20]	; (8020ee8 <std+0x38>)
 8020ed4:	6263      	str	r3, [r4, #36]	; 0x24
 8020ed6:	4b05      	ldr	r3, [pc, #20]	; (8020eec <std+0x3c>)
 8020ed8:	62a3      	str	r3, [r4, #40]	; 0x28
 8020eda:	4b05      	ldr	r3, [pc, #20]	; (8020ef0 <std+0x40>)
 8020edc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020ede:	4b05      	ldr	r3, [pc, #20]	; (8020ef4 <std+0x44>)
 8020ee0:	6224      	str	r4, [r4, #32]
 8020ee2:	6323      	str	r3, [r4, #48]	; 0x30
 8020ee4:	bd10      	pop	{r4, pc}
 8020ee6:	bf00      	nop
 8020ee8:	08021a09 	.word	0x08021a09
 8020eec:	08021a2b 	.word	0x08021a2b
 8020ef0:	08021a63 	.word	0x08021a63
 8020ef4:	08021a87 	.word	0x08021a87

08020ef8 <_cleanup_r>:
 8020ef8:	4901      	ldr	r1, [pc, #4]	; (8020f00 <_cleanup_r+0x8>)
 8020efa:	f000 b8c1 	b.w	8021080 <_fwalk_reent>
 8020efe:	bf00      	nop
 8020f00:	08021e25 	.word	0x08021e25

08020f04 <__sfmoreglue>:
 8020f04:	b570      	push	{r4, r5, r6, lr}
 8020f06:	1e4a      	subs	r2, r1, #1
 8020f08:	2568      	movs	r5, #104	; 0x68
 8020f0a:	4355      	muls	r5, r2
 8020f0c:	460e      	mov	r6, r1
 8020f0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020f12:	f000 f973 	bl	80211fc <_malloc_r>
 8020f16:	4604      	mov	r4, r0
 8020f18:	b140      	cbz	r0, 8020f2c <__sfmoreglue+0x28>
 8020f1a:	2100      	movs	r1, #0
 8020f1c:	e9c0 1600 	strd	r1, r6, [r0]
 8020f20:	300c      	adds	r0, #12
 8020f22:	60a0      	str	r0, [r4, #8]
 8020f24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020f28:	f000 f910 	bl	802114c <memset>
 8020f2c:	4620      	mov	r0, r4
 8020f2e:	bd70      	pop	{r4, r5, r6, pc}

08020f30 <__sfp_lock_acquire>:
 8020f30:	4801      	ldr	r0, [pc, #4]	; (8020f38 <__sfp_lock_acquire+0x8>)
 8020f32:	f000 b8ea 	b.w	802110a <__retarget_lock_acquire_recursive>
 8020f36:	bf00      	nop
 8020f38:	2000f0bc 	.word	0x2000f0bc

08020f3c <__sfp_lock_release>:
 8020f3c:	4801      	ldr	r0, [pc, #4]	; (8020f44 <__sfp_lock_release+0x8>)
 8020f3e:	f000 b8e6 	b.w	802110e <__retarget_lock_release_recursive>
 8020f42:	bf00      	nop
 8020f44:	2000f0bc 	.word	0x2000f0bc

08020f48 <__sinit_lock_acquire>:
 8020f48:	4801      	ldr	r0, [pc, #4]	; (8020f50 <__sinit_lock_acquire+0x8>)
 8020f4a:	f000 b8de 	b.w	802110a <__retarget_lock_acquire_recursive>
 8020f4e:	bf00      	nop
 8020f50:	2000f0b7 	.word	0x2000f0b7

08020f54 <__sinit_lock_release>:
 8020f54:	4801      	ldr	r0, [pc, #4]	; (8020f5c <__sinit_lock_release+0x8>)
 8020f56:	f000 b8da 	b.w	802110e <__retarget_lock_release_recursive>
 8020f5a:	bf00      	nop
 8020f5c:	2000f0b7 	.word	0x2000f0b7

08020f60 <__sinit>:
 8020f60:	b510      	push	{r4, lr}
 8020f62:	4604      	mov	r4, r0
 8020f64:	f7ff fff0 	bl	8020f48 <__sinit_lock_acquire>
 8020f68:	69a3      	ldr	r3, [r4, #24]
 8020f6a:	b11b      	cbz	r3, 8020f74 <__sinit+0x14>
 8020f6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f70:	f7ff bff0 	b.w	8020f54 <__sinit_lock_release>
 8020f74:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020f78:	6523      	str	r3, [r4, #80]	; 0x50
 8020f7a:	4b13      	ldr	r3, [pc, #76]	; (8020fc8 <__sinit+0x68>)
 8020f7c:	4a13      	ldr	r2, [pc, #76]	; (8020fcc <__sinit+0x6c>)
 8020f7e:	681b      	ldr	r3, [r3, #0]
 8020f80:	62a2      	str	r2, [r4, #40]	; 0x28
 8020f82:	42a3      	cmp	r3, r4
 8020f84:	bf04      	itt	eq
 8020f86:	2301      	moveq	r3, #1
 8020f88:	61a3      	streq	r3, [r4, #24]
 8020f8a:	4620      	mov	r0, r4
 8020f8c:	f000 f820 	bl	8020fd0 <__sfp>
 8020f90:	6060      	str	r0, [r4, #4]
 8020f92:	4620      	mov	r0, r4
 8020f94:	f000 f81c 	bl	8020fd0 <__sfp>
 8020f98:	60a0      	str	r0, [r4, #8]
 8020f9a:	4620      	mov	r0, r4
 8020f9c:	f000 f818 	bl	8020fd0 <__sfp>
 8020fa0:	2200      	movs	r2, #0
 8020fa2:	60e0      	str	r0, [r4, #12]
 8020fa4:	2104      	movs	r1, #4
 8020fa6:	6860      	ldr	r0, [r4, #4]
 8020fa8:	f7ff ff82 	bl	8020eb0 <std>
 8020fac:	68a0      	ldr	r0, [r4, #8]
 8020fae:	2201      	movs	r2, #1
 8020fb0:	2109      	movs	r1, #9
 8020fb2:	f7ff ff7d 	bl	8020eb0 <std>
 8020fb6:	68e0      	ldr	r0, [r4, #12]
 8020fb8:	2202      	movs	r2, #2
 8020fba:	2112      	movs	r1, #18
 8020fbc:	f7ff ff78 	bl	8020eb0 <std>
 8020fc0:	2301      	movs	r3, #1
 8020fc2:	61a3      	str	r3, [r4, #24]
 8020fc4:	e7d2      	b.n	8020f6c <__sinit+0xc>
 8020fc6:	bf00      	nop
 8020fc8:	08025ff0 	.word	0x08025ff0
 8020fcc:	08020ef9 	.word	0x08020ef9

08020fd0 <__sfp>:
 8020fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020fd2:	4607      	mov	r7, r0
 8020fd4:	f7ff ffac 	bl	8020f30 <__sfp_lock_acquire>
 8020fd8:	4b1e      	ldr	r3, [pc, #120]	; (8021054 <__sfp+0x84>)
 8020fda:	681e      	ldr	r6, [r3, #0]
 8020fdc:	69b3      	ldr	r3, [r6, #24]
 8020fde:	b913      	cbnz	r3, 8020fe6 <__sfp+0x16>
 8020fe0:	4630      	mov	r0, r6
 8020fe2:	f7ff ffbd 	bl	8020f60 <__sinit>
 8020fe6:	3648      	adds	r6, #72	; 0x48
 8020fe8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020fec:	3b01      	subs	r3, #1
 8020fee:	d503      	bpl.n	8020ff8 <__sfp+0x28>
 8020ff0:	6833      	ldr	r3, [r6, #0]
 8020ff2:	b30b      	cbz	r3, 8021038 <__sfp+0x68>
 8020ff4:	6836      	ldr	r6, [r6, #0]
 8020ff6:	e7f7      	b.n	8020fe8 <__sfp+0x18>
 8020ff8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020ffc:	b9d5      	cbnz	r5, 8021034 <__sfp+0x64>
 8020ffe:	4b16      	ldr	r3, [pc, #88]	; (8021058 <__sfp+0x88>)
 8021000:	60e3      	str	r3, [r4, #12]
 8021002:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8021006:	6665      	str	r5, [r4, #100]	; 0x64
 8021008:	f000 f87e 	bl	8021108 <__retarget_lock_init_recursive>
 802100c:	f7ff ff96 	bl	8020f3c <__sfp_lock_release>
 8021010:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8021014:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8021018:	6025      	str	r5, [r4, #0]
 802101a:	61a5      	str	r5, [r4, #24]
 802101c:	2208      	movs	r2, #8
 802101e:	4629      	mov	r1, r5
 8021020:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8021024:	f000 f892 	bl	802114c <memset>
 8021028:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802102c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8021030:	4620      	mov	r0, r4
 8021032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021034:	3468      	adds	r4, #104	; 0x68
 8021036:	e7d9      	b.n	8020fec <__sfp+0x1c>
 8021038:	2104      	movs	r1, #4
 802103a:	4638      	mov	r0, r7
 802103c:	f7ff ff62 	bl	8020f04 <__sfmoreglue>
 8021040:	4604      	mov	r4, r0
 8021042:	6030      	str	r0, [r6, #0]
 8021044:	2800      	cmp	r0, #0
 8021046:	d1d5      	bne.n	8020ff4 <__sfp+0x24>
 8021048:	f7ff ff78 	bl	8020f3c <__sfp_lock_release>
 802104c:	230c      	movs	r3, #12
 802104e:	603b      	str	r3, [r7, #0]
 8021050:	e7ee      	b.n	8021030 <__sfp+0x60>
 8021052:	bf00      	nop
 8021054:	08025ff0 	.word	0x08025ff0
 8021058:	ffff0001 	.word	0xffff0001

0802105c <fiprintf>:
 802105c:	b40e      	push	{r1, r2, r3}
 802105e:	b503      	push	{r0, r1, lr}
 8021060:	4601      	mov	r1, r0
 8021062:	ab03      	add	r3, sp, #12
 8021064:	4805      	ldr	r0, [pc, #20]	; (802107c <fiprintf+0x20>)
 8021066:	f853 2b04 	ldr.w	r2, [r3], #4
 802106a:	6800      	ldr	r0, [r0, #0]
 802106c:	9301      	str	r3, [sp, #4]
 802106e:	f000 f949 	bl	8021304 <_vfiprintf_r>
 8021072:	b002      	add	sp, #8
 8021074:	f85d eb04 	ldr.w	lr, [sp], #4
 8021078:	b003      	add	sp, #12
 802107a:	4770      	bx	lr
 802107c:	200000fc 	.word	0x200000fc

08021080 <_fwalk_reent>:
 8021080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021084:	4606      	mov	r6, r0
 8021086:	4688      	mov	r8, r1
 8021088:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802108c:	2700      	movs	r7, #0
 802108e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021092:	f1b9 0901 	subs.w	r9, r9, #1
 8021096:	d505      	bpl.n	80210a4 <_fwalk_reent+0x24>
 8021098:	6824      	ldr	r4, [r4, #0]
 802109a:	2c00      	cmp	r4, #0
 802109c:	d1f7      	bne.n	802108e <_fwalk_reent+0xe>
 802109e:	4638      	mov	r0, r7
 80210a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80210a4:	89ab      	ldrh	r3, [r5, #12]
 80210a6:	2b01      	cmp	r3, #1
 80210a8:	d907      	bls.n	80210ba <_fwalk_reent+0x3a>
 80210aa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80210ae:	3301      	adds	r3, #1
 80210b0:	d003      	beq.n	80210ba <_fwalk_reent+0x3a>
 80210b2:	4629      	mov	r1, r5
 80210b4:	4630      	mov	r0, r6
 80210b6:	47c0      	blx	r8
 80210b8:	4307      	orrs	r7, r0
 80210ba:	3568      	adds	r5, #104	; 0x68
 80210bc:	e7e9      	b.n	8021092 <_fwalk_reent+0x12>
	...

080210c0 <__libc_init_array>:
 80210c0:	b570      	push	{r4, r5, r6, lr}
 80210c2:	4d0d      	ldr	r5, [pc, #52]	; (80210f8 <__libc_init_array+0x38>)
 80210c4:	4c0d      	ldr	r4, [pc, #52]	; (80210fc <__libc_init_array+0x3c>)
 80210c6:	1b64      	subs	r4, r4, r5
 80210c8:	10a4      	asrs	r4, r4, #2
 80210ca:	2600      	movs	r6, #0
 80210cc:	42a6      	cmp	r6, r4
 80210ce:	d109      	bne.n	80210e4 <__libc_init_array+0x24>
 80210d0:	4d0b      	ldr	r5, [pc, #44]	; (8021100 <__libc_init_array+0x40>)
 80210d2:	4c0c      	ldr	r4, [pc, #48]	; (8021104 <__libc_init_array+0x44>)
 80210d4:	f000 ff98 	bl	8022008 <_init>
 80210d8:	1b64      	subs	r4, r4, r5
 80210da:	10a4      	asrs	r4, r4, #2
 80210dc:	2600      	movs	r6, #0
 80210de:	42a6      	cmp	r6, r4
 80210e0:	d105      	bne.n	80210ee <__libc_init_array+0x2e>
 80210e2:	bd70      	pop	{r4, r5, r6, pc}
 80210e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80210e8:	4798      	blx	r3
 80210ea:	3601      	adds	r6, #1
 80210ec:	e7ee      	b.n	80210cc <__libc_init_array+0xc>
 80210ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80210f2:	4798      	blx	r3
 80210f4:	3601      	adds	r6, #1
 80210f6:	e7f2      	b.n	80210de <__libc_init_array+0x1e>
 80210f8:	080261c8 	.word	0x080261c8
 80210fc:	080261c8 	.word	0x080261c8
 8021100:	080261c8 	.word	0x080261c8
 8021104:	080261e0 	.word	0x080261e0

08021108 <__retarget_lock_init_recursive>:
 8021108:	4770      	bx	lr

0802110a <__retarget_lock_acquire_recursive>:
 802110a:	4770      	bx	lr

0802110c <__retarget_lock_release>:
 802110c:	4770      	bx	lr

0802110e <__retarget_lock_release_recursive>:
 802110e:	4770      	bx	lr

08021110 <malloc>:
 8021110:	4b02      	ldr	r3, [pc, #8]	; (802111c <malloc+0xc>)
 8021112:	4601      	mov	r1, r0
 8021114:	6818      	ldr	r0, [r3, #0]
 8021116:	f000 b871 	b.w	80211fc <_malloc_r>
 802111a:	bf00      	nop
 802111c:	200000fc 	.word	0x200000fc

08021120 <free>:
 8021120:	4b02      	ldr	r3, [pc, #8]	; (802112c <free+0xc>)
 8021122:	4601      	mov	r1, r0
 8021124:	6818      	ldr	r0, [r3, #0]
 8021126:	f000 b819 	b.w	802115c <_free_r>
 802112a:	bf00      	nop
 802112c:	200000fc 	.word	0x200000fc

08021130 <memcpy>:
 8021130:	440a      	add	r2, r1
 8021132:	4291      	cmp	r1, r2
 8021134:	f100 33ff 	add.w	r3, r0, #4294967295
 8021138:	d100      	bne.n	802113c <memcpy+0xc>
 802113a:	4770      	bx	lr
 802113c:	b510      	push	{r4, lr}
 802113e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021142:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021146:	4291      	cmp	r1, r2
 8021148:	d1f9      	bne.n	802113e <memcpy+0xe>
 802114a:	bd10      	pop	{r4, pc}

0802114c <memset>:
 802114c:	4402      	add	r2, r0
 802114e:	4603      	mov	r3, r0
 8021150:	4293      	cmp	r3, r2
 8021152:	d100      	bne.n	8021156 <memset+0xa>
 8021154:	4770      	bx	lr
 8021156:	f803 1b01 	strb.w	r1, [r3], #1
 802115a:	e7f9      	b.n	8021150 <memset+0x4>

0802115c <_free_r>:
 802115c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802115e:	2900      	cmp	r1, #0
 8021160:	d048      	beq.n	80211f4 <_free_r+0x98>
 8021162:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021166:	9001      	str	r0, [sp, #4]
 8021168:	2b00      	cmp	r3, #0
 802116a:	f1a1 0404 	sub.w	r4, r1, #4
 802116e:	bfb8      	it	lt
 8021170:	18e4      	addlt	r4, r4, r3
 8021172:	f000 ff09 	bl	8021f88 <__malloc_lock>
 8021176:	4a20      	ldr	r2, [pc, #128]	; (80211f8 <_free_r+0x9c>)
 8021178:	9801      	ldr	r0, [sp, #4]
 802117a:	6813      	ldr	r3, [r2, #0]
 802117c:	4615      	mov	r5, r2
 802117e:	b933      	cbnz	r3, 802118e <_free_r+0x32>
 8021180:	6063      	str	r3, [r4, #4]
 8021182:	6014      	str	r4, [r2, #0]
 8021184:	b003      	add	sp, #12
 8021186:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802118a:	f000 bf03 	b.w	8021f94 <__malloc_unlock>
 802118e:	42a3      	cmp	r3, r4
 8021190:	d90b      	bls.n	80211aa <_free_r+0x4e>
 8021192:	6821      	ldr	r1, [r4, #0]
 8021194:	1862      	adds	r2, r4, r1
 8021196:	4293      	cmp	r3, r2
 8021198:	bf04      	itt	eq
 802119a:	681a      	ldreq	r2, [r3, #0]
 802119c:	685b      	ldreq	r3, [r3, #4]
 802119e:	6063      	str	r3, [r4, #4]
 80211a0:	bf04      	itt	eq
 80211a2:	1852      	addeq	r2, r2, r1
 80211a4:	6022      	streq	r2, [r4, #0]
 80211a6:	602c      	str	r4, [r5, #0]
 80211a8:	e7ec      	b.n	8021184 <_free_r+0x28>
 80211aa:	461a      	mov	r2, r3
 80211ac:	685b      	ldr	r3, [r3, #4]
 80211ae:	b10b      	cbz	r3, 80211b4 <_free_r+0x58>
 80211b0:	42a3      	cmp	r3, r4
 80211b2:	d9fa      	bls.n	80211aa <_free_r+0x4e>
 80211b4:	6811      	ldr	r1, [r2, #0]
 80211b6:	1855      	adds	r5, r2, r1
 80211b8:	42a5      	cmp	r5, r4
 80211ba:	d10b      	bne.n	80211d4 <_free_r+0x78>
 80211bc:	6824      	ldr	r4, [r4, #0]
 80211be:	4421      	add	r1, r4
 80211c0:	1854      	adds	r4, r2, r1
 80211c2:	42a3      	cmp	r3, r4
 80211c4:	6011      	str	r1, [r2, #0]
 80211c6:	d1dd      	bne.n	8021184 <_free_r+0x28>
 80211c8:	681c      	ldr	r4, [r3, #0]
 80211ca:	685b      	ldr	r3, [r3, #4]
 80211cc:	6053      	str	r3, [r2, #4]
 80211ce:	4421      	add	r1, r4
 80211d0:	6011      	str	r1, [r2, #0]
 80211d2:	e7d7      	b.n	8021184 <_free_r+0x28>
 80211d4:	d902      	bls.n	80211dc <_free_r+0x80>
 80211d6:	230c      	movs	r3, #12
 80211d8:	6003      	str	r3, [r0, #0]
 80211da:	e7d3      	b.n	8021184 <_free_r+0x28>
 80211dc:	6825      	ldr	r5, [r4, #0]
 80211de:	1961      	adds	r1, r4, r5
 80211e0:	428b      	cmp	r3, r1
 80211e2:	bf04      	itt	eq
 80211e4:	6819      	ldreq	r1, [r3, #0]
 80211e6:	685b      	ldreq	r3, [r3, #4]
 80211e8:	6063      	str	r3, [r4, #4]
 80211ea:	bf04      	itt	eq
 80211ec:	1949      	addeq	r1, r1, r5
 80211ee:	6021      	streq	r1, [r4, #0]
 80211f0:	6054      	str	r4, [r2, #4]
 80211f2:	e7c7      	b.n	8021184 <_free_r+0x28>
 80211f4:	b003      	add	sp, #12
 80211f6:	bd30      	pop	{r4, r5, pc}
 80211f8:	2000ec2c 	.word	0x2000ec2c

080211fc <_malloc_r>:
 80211fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80211fe:	1ccd      	adds	r5, r1, #3
 8021200:	f025 0503 	bic.w	r5, r5, #3
 8021204:	3508      	adds	r5, #8
 8021206:	2d0c      	cmp	r5, #12
 8021208:	bf38      	it	cc
 802120a:	250c      	movcc	r5, #12
 802120c:	2d00      	cmp	r5, #0
 802120e:	4606      	mov	r6, r0
 8021210:	db01      	blt.n	8021216 <_malloc_r+0x1a>
 8021212:	42a9      	cmp	r1, r5
 8021214:	d903      	bls.n	802121e <_malloc_r+0x22>
 8021216:	230c      	movs	r3, #12
 8021218:	6033      	str	r3, [r6, #0]
 802121a:	2000      	movs	r0, #0
 802121c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802121e:	f000 feb3 	bl	8021f88 <__malloc_lock>
 8021222:	4921      	ldr	r1, [pc, #132]	; (80212a8 <_malloc_r+0xac>)
 8021224:	680a      	ldr	r2, [r1, #0]
 8021226:	4614      	mov	r4, r2
 8021228:	b99c      	cbnz	r4, 8021252 <_malloc_r+0x56>
 802122a:	4f20      	ldr	r7, [pc, #128]	; (80212ac <_malloc_r+0xb0>)
 802122c:	683b      	ldr	r3, [r7, #0]
 802122e:	b923      	cbnz	r3, 802123a <_malloc_r+0x3e>
 8021230:	4621      	mov	r1, r4
 8021232:	4630      	mov	r0, r6
 8021234:	f000 fb94 	bl	8021960 <_sbrk_r>
 8021238:	6038      	str	r0, [r7, #0]
 802123a:	4629      	mov	r1, r5
 802123c:	4630      	mov	r0, r6
 802123e:	f000 fb8f 	bl	8021960 <_sbrk_r>
 8021242:	1c43      	adds	r3, r0, #1
 8021244:	d123      	bne.n	802128e <_malloc_r+0x92>
 8021246:	230c      	movs	r3, #12
 8021248:	6033      	str	r3, [r6, #0]
 802124a:	4630      	mov	r0, r6
 802124c:	f000 fea2 	bl	8021f94 <__malloc_unlock>
 8021250:	e7e3      	b.n	802121a <_malloc_r+0x1e>
 8021252:	6823      	ldr	r3, [r4, #0]
 8021254:	1b5b      	subs	r3, r3, r5
 8021256:	d417      	bmi.n	8021288 <_malloc_r+0x8c>
 8021258:	2b0b      	cmp	r3, #11
 802125a:	d903      	bls.n	8021264 <_malloc_r+0x68>
 802125c:	6023      	str	r3, [r4, #0]
 802125e:	441c      	add	r4, r3
 8021260:	6025      	str	r5, [r4, #0]
 8021262:	e004      	b.n	802126e <_malloc_r+0x72>
 8021264:	6863      	ldr	r3, [r4, #4]
 8021266:	42a2      	cmp	r2, r4
 8021268:	bf0c      	ite	eq
 802126a:	600b      	streq	r3, [r1, #0]
 802126c:	6053      	strne	r3, [r2, #4]
 802126e:	4630      	mov	r0, r6
 8021270:	f000 fe90 	bl	8021f94 <__malloc_unlock>
 8021274:	f104 000b 	add.w	r0, r4, #11
 8021278:	1d23      	adds	r3, r4, #4
 802127a:	f020 0007 	bic.w	r0, r0, #7
 802127e:	1ac2      	subs	r2, r0, r3
 8021280:	d0cc      	beq.n	802121c <_malloc_r+0x20>
 8021282:	1a1b      	subs	r3, r3, r0
 8021284:	50a3      	str	r3, [r4, r2]
 8021286:	e7c9      	b.n	802121c <_malloc_r+0x20>
 8021288:	4622      	mov	r2, r4
 802128a:	6864      	ldr	r4, [r4, #4]
 802128c:	e7cc      	b.n	8021228 <_malloc_r+0x2c>
 802128e:	1cc4      	adds	r4, r0, #3
 8021290:	f024 0403 	bic.w	r4, r4, #3
 8021294:	42a0      	cmp	r0, r4
 8021296:	d0e3      	beq.n	8021260 <_malloc_r+0x64>
 8021298:	1a21      	subs	r1, r4, r0
 802129a:	4630      	mov	r0, r6
 802129c:	f000 fb60 	bl	8021960 <_sbrk_r>
 80212a0:	3001      	adds	r0, #1
 80212a2:	d1dd      	bne.n	8021260 <_malloc_r+0x64>
 80212a4:	e7cf      	b.n	8021246 <_malloc_r+0x4a>
 80212a6:	bf00      	nop
 80212a8:	2000ec2c 	.word	0x2000ec2c
 80212ac:	2000ec30 	.word	0x2000ec30

080212b0 <__sfputc_r>:
 80212b0:	6893      	ldr	r3, [r2, #8]
 80212b2:	3b01      	subs	r3, #1
 80212b4:	2b00      	cmp	r3, #0
 80212b6:	b410      	push	{r4}
 80212b8:	6093      	str	r3, [r2, #8]
 80212ba:	da08      	bge.n	80212ce <__sfputc_r+0x1e>
 80212bc:	6994      	ldr	r4, [r2, #24]
 80212be:	42a3      	cmp	r3, r4
 80212c0:	db01      	blt.n	80212c6 <__sfputc_r+0x16>
 80212c2:	290a      	cmp	r1, #10
 80212c4:	d103      	bne.n	80212ce <__sfputc_r+0x1e>
 80212c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80212ca:	f000 bbe1 	b.w	8021a90 <__swbuf_r>
 80212ce:	6813      	ldr	r3, [r2, #0]
 80212d0:	1c58      	adds	r0, r3, #1
 80212d2:	6010      	str	r0, [r2, #0]
 80212d4:	7019      	strb	r1, [r3, #0]
 80212d6:	4608      	mov	r0, r1
 80212d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80212dc:	4770      	bx	lr

080212de <__sfputs_r>:
 80212de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80212e0:	4606      	mov	r6, r0
 80212e2:	460f      	mov	r7, r1
 80212e4:	4614      	mov	r4, r2
 80212e6:	18d5      	adds	r5, r2, r3
 80212e8:	42ac      	cmp	r4, r5
 80212ea:	d101      	bne.n	80212f0 <__sfputs_r+0x12>
 80212ec:	2000      	movs	r0, #0
 80212ee:	e007      	b.n	8021300 <__sfputs_r+0x22>
 80212f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80212f4:	463a      	mov	r2, r7
 80212f6:	4630      	mov	r0, r6
 80212f8:	f7ff ffda 	bl	80212b0 <__sfputc_r>
 80212fc:	1c43      	adds	r3, r0, #1
 80212fe:	d1f3      	bne.n	80212e8 <__sfputs_r+0xa>
 8021300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021304 <_vfiprintf_r>:
 8021304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021308:	460d      	mov	r5, r1
 802130a:	b09d      	sub	sp, #116	; 0x74
 802130c:	4614      	mov	r4, r2
 802130e:	4698      	mov	r8, r3
 8021310:	4606      	mov	r6, r0
 8021312:	b118      	cbz	r0, 802131c <_vfiprintf_r+0x18>
 8021314:	6983      	ldr	r3, [r0, #24]
 8021316:	b90b      	cbnz	r3, 802131c <_vfiprintf_r+0x18>
 8021318:	f7ff fe22 	bl	8020f60 <__sinit>
 802131c:	4b89      	ldr	r3, [pc, #548]	; (8021544 <_vfiprintf_r+0x240>)
 802131e:	429d      	cmp	r5, r3
 8021320:	d11b      	bne.n	802135a <_vfiprintf_r+0x56>
 8021322:	6875      	ldr	r5, [r6, #4]
 8021324:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021326:	07d9      	lsls	r1, r3, #31
 8021328:	d405      	bmi.n	8021336 <_vfiprintf_r+0x32>
 802132a:	89ab      	ldrh	r3, [r5, #12]
 802132c:	059a      	lsls	r2, r3, #22
 802132e:	d402      	bmi.n	8021336 <_vfiprintf_r+0x32>
 8021330:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021332:	f7ff feea 	bl	802110a <__retarget_lock_acquire_recursive>
 8021336:	89ab      	ldrh	r3, [r5, #12]
 8021338:	071b      	lsls	r3, r3, #28
 802133a:	d501      	bpl.n	8021340 <_vfiprintf_r+0x3c>
 802133c:	692b      	ldr	r3, [r5, #16]
 802133e:	b9eb      	cbnz	r3, 802137c <_vfiprintf_r+0x78>
 8021340:	4629      	mov	r1, r5
 8021342:	4630      	mov	r0, r6
 8021344:	f000 fc08 	bl	8021b58 <__swsetup_r>
 8021348:	b1c0      	cbz	r0, 802137c <_vfiprintf_r+0x78>
 802134a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802134c:	07dc      	lsls	r4, r3, #31
 802134e:	d50e      	bpl.n	802136e <_vfiprintf_r+0x6a>
 8021350:	f04f 30ff 	mov.w	r0, #4294967295
 8021354:	b01d      	add	sp, #116	; 0x74
 8021356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802135a:	4b7b      	ldr	r3, [pc, #492]	; (8021548 <_vfiprintf_r+0x244>)
 802135c:	429d      	cmp	r5, r3
 802135e:	d101      	bne.n	8021364 <_vfiprintf_r+0x60>
 8021360:	68b5      	ldr	r5, [r6, #8]
 8021362:	e7df      	b.n	8021324 <_vfiprintf_r+0x20>
 8021364:	4b79      	ldr	r3, [pc, #484]	; (802154c <_vfiprintf_r+0x248>)
 8021366:	429d      	cmp	r5, r3
 8021368:	bf08      	it	eq
 802136a:	68f5      	ldreq	r5, [r6, #12]
 802136c:	e7da      	b.n	8021324 <_vfiprintf_r+0x20>
 802136e:	89ab      	ldrh	r3, [r5, #12]
 8021370:	0598      	lsls	r0, r3, #22
 8021372:	d4ed      	bmi.n	8021350 <_vfiprintf_r+0x4c>
 8021374:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021376:	f7ff feca 	bl	802110e <__retarget_lock_release_recursive>
 802137a:	e7e9      	b.n	8021350 <_vfiprintf_r+0x4c>
 802137c:	2300      	movs	r3, #0
 802137e:	9309      	str	r3, [sp, #36]	; 0x24
 8021380:	2320      	movs	r3, #32
 8021382:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8021386:	f8cd 800c 	str.w	r8, [sp, #12]
 802138a:	2330      	movs	r3, #48	; 0x30
 802138c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8021550 <_vfiprintf_r+0x24c>
 8021390:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8021394:	f04f 0901 	mov.w	r9, #1
 8021398:	4623      	mov	r3, r4
 802139a:	469a      	mov	sl, r3
 802139c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80213a0:	b10a      	cbz	r2, 80213a6 <_vfiprintf_r+0xa2>
 80213a2:	2a25      	cmp	r2, #37	; 0x25
 80213a4:	d1f9      	bne.n	802139a <_vfiprintf_r+0x96>
 80213a6:	ebba 0b04 	subs.w	fp, sl, r4
 80213aa:	d00b      	beq.n	80213c4 <_vfiprintf_r+0xc0>
 80213ac:	465b      	mov	r3, fp
 80213ae:	4622      	mov	r2, r4
 80213b0:	4629      	mov	r1, r5
 80213b2:	4630      	mov	r0, r6
 80213b4:	f7ff ff93 	bl	80212de <__sfputs_r>
 80213b8:	3001      	adds	r0, #1
 80213ba:	f000 80aa 	beq.w	8021512 <_vfiprintf_r+0x20e>
 80213be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80213c0:	445a      	add	r2, fp
 80213c2:	9209      	str	r2, [sp, #36]	; 0x24
 80213c4:	f89a 3000 	ldrb.w	r3, [sl]
 80213c8:	2b00      	cmp	r3, #0
 80213ca:	f000 80a2 	beq.w	8021512 <_vfiprintf_r+0x20e>
 80213ce:	2300      	movs	r3, #0
 80213d0:	f04f 32ff 	mov.w	r2, #4294967295
 80213d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80213d8:	f10a 0a01 	add.w	sl, sl, #1
 80213dc:	9304      	str	r3, [sp, #16]
 80213de:	9307      	str	r3, [sp, #28]
 80213e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80213e4:	931a      	str	r3, [sp, #104]	; 0x68
 80213e6:	4654      	mov	r4, sl
 80213e8:	2205      	movs	r2, #5
 80213ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80213ee:	4858      	ldr	r0, [pc, #352]	; (8021550 <_vfiprintf_r+0x24c>)
 80213f0:	f7de ff06 	bl	8000200 <memchr>
 80213f4:	9a04      	ldr	r2, [sp, #16]
 80213f6:	b9d8      	cbnz	r0, 8021430 <_vfiprintf_r+0x12c>
 80213f8:	06d1      	lsls	r1, r2, #27
 80213fa:	bf44      	itt	mi
 80213fc:	2320      	movmi	r3, #32
 80213fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021402:	0713      	lsls	r3, r2, #28
 8021404:	bf44      	itt	mi
 8021406:	232b      	movmi	r3, #43	; 0x2b
 8021408:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802140c:	f89a 3000 	ldrb.w	r3, [sl]
 8021410:	2b2a      	cmp	r3, #42	; 0x2a
 8021412:	d015      	beq.n	8021440 <_vfiprintf_r+0x13c>
 8021414:	9a07      	ldr	r2, [sp, #28]
 8021416:	4654      	mov	r4, sl
 8021418:	2000      	movs	r0, #0
 802141a:	f04f 0c0a 	mov.w	ip, #10
 802141e:	4621      	mov	r1, r4
 8021420:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021424:	3b30      	subs	r3, #48	; 0x30
 8021426:	2b09      	cmp	r3, #9
 8021428:	d94e      	bls.n	80214c8 <_vfiprintf_r+0x1c4>
 802142a:	b1b0      	cbz	r0, 802145a <_vfiprintf_r+0x156>
 802142c:	9207      	str	r2, [sp, #28]
 802142e:	e014      	b.n	802145a <_vfiprintf_r+0x156>
 8021430:	eba0 0308 	sub.w	r3, r0, r8
 8021434:	fa09 f303 	lsl.w	r3, r9, r3
 8021438:	4313      	orrs	r3, r2
 802143a:	9304      	str	r3, [sp, #16]
 802143c:	46a2      	mov	sl, r4
 802143e:	e7d2      	b.n	80213e6 <_vfiprintf_r+0xe2>
 8021440:	9b03      	ldr	r3, [sp, #12]
 8021442:	1d19      	adds	r1, r3, #4
 8021444:	681b      	ldr	r3, [r3, #0]
 8021446:	9103      	str	r1, [sp, #12]
 8021448:	2b00      	cmp	r3, #0
 802144a:	bfbb      	ittet	lt
 802144c:	425b      	neglt	r3, r3
 802144e:	f042 0202 	orrlt.w	r2, r2, #2
 8021452:	9307      	strge	r3, [sp, #28]
 8021454:	9307      	strlt	r3, [sp, #28]
 8021456:	bfb8      	it	lt
 8021458:	9204      	strlt	r2, [sp, #16]
 802145a:	7823      	ldrb	r3, [r4, #0]
 802145c:	2b2e      	cmp	r3, #46	; 0x2e
 802145e:	d10c      	bne.n	802147a <_vfiprintf_r+0x176>
 8021460:	7863      	ldrb	r3, [r4, #1]
 8021462:	2b2a      	cmp	r3, #42	; 0x2a
 8021464:	d135      	bne.n	80214d2 <_vfiprintf_r+0x1ce>
 8021466:	9b03      	ldr	r3, [sp, #12]
 8021468:	1d1a      	adds	r2, r3, #4
 802146a:	681b      	ldr	r3, [r3, #0]
 802146c:	9203      	str	r2, [sp, #12]
 802146e:	2b00      	cmp	r3, #0
 8021470:	bfb8      	it	lt
 8021472:	f04f 33ff 	movlt.w	r3, #4294967295
 8021476:	3402      	adds	r4, #2
 8021478:	9305      	str	r3, [sp, #20]
 802147a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8021560 <_vfiprintf_r+0x25c>
 802147e:	7821      	ldrb	r1, [r4, #0]
 8021480:	2203      	movs	r2, #3
 8021482:	4650      	mov	r0, sl
 8021484:	f7de febc 	bl	8000200 <memchr>
 8021488:	b140      	cbz	r0, 802149c <_vfiprintf_r+0x198>
 802148a:	2340      	movs	r3, #64	; 0x40
 802148c:	eba0 000a 	sub.w	r0, r0, sl
 8021490:	fa03 f000 	lsl.w	r0, r3, r0
 8021494:	9b04      	ldr	r3, [sp, #16]
 8021496:	4303      	orrs	r3, r0
 8021498:	3401      	adds	r4, #1
 802149a:	9304      	str	r3, [sp, #16]
 802149c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80214a0:	482c      	ldr	r0, [pc, #176]	; (8021554 <_vfiprintf_r+0x250>)
 80214a2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80214a6:	2206      	movs	r2, #6
 80214a8:	f7de feaa 	bl	8000200 <memchr>
 80214ac:	2800      	cmp	r0, #0
 80214ae:	d03f      	beq.n	8021530 <_vfiprintf_r+0x22c>
 80214b0:	4b29      	ldr	r3, [pc, #164]	; (8021558 <_vfiprintf_r+0x254>)
 80214b2:	bb1b      	cbnz	r3, 80214fc <_vfiprintf_r+0x1f8>
 80214b4:	9b03      	ldr	r3, [sp, #12]
 80214b6:	3307      	adds	r3, #7
 80214b8:	f023 0307 	bic.w	r3, r3, #7
 80214bc:	3308      	adds	r3, #8
 80214be:	9303      	str	r3, [sp, #12]
 80214c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214c2:	443b      	add	r3, r7
 80214c4:	9309      	str	r3, [sp, #36]	; 0x24
 80214c6:	e767      	b.n	8021398 <_vfiprintf_r+0x94>
 80214c8:	fb0c 3202 	mla	r2, ip, r2, r3
 80214cc:	460c      	mov	r4, r1
 80214ce:	2001      	movs	r0, #1
 80214d0:	e7a5      	b.n	802141e <_vfiprintf_r+0x11a>
 80214d2:	2300      	movs	r3, #0
 80214d4:	3401      	adds	r4, #1
 80214d6:	9305      	str	r3, [sp, #20]
 80214d8:	4619      	mov	r1, r3
 80214da:	f04f 0c0a 	mov.w	ip, #10
 80214de:	4620      	mov	r0, r4
 80214e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80214e4:	3a30      	subs	r2, #48	; 0x30
 80214e6:	2a09      	cmp	r2, #9
 80214e8:	d903      	bls.n	80214f2 <_vfiprintf_r+0x1ee>
 80214ea:	2b00      	cmp	r3, #0
 80214ec:	d0c5      	beq.n	802147a <_vfiprintf_r+0x176>
 80214ee:	9105      	str	r1, [sp, #20]
 80214f0:	e7c3      	b.n	802147a <_vfiprintf_r+0x176>
 80214f2:	fb0c 2101 	mla	r1, ip, r1, r2
 80214f6:	4604      	mov	r4, r0
 80214f8:	2301      	movs	r3, #1
 80214fa:	e7f0      	b.n	80214de <_vfiprintf_r+0x1da>
 80214fc:	ab03      	add	r3, sp, #12
 80214fe:	9300      	str	r3, [sp, #0]
 8021500:	462a      	mov	r2, r5
 8021502:	4b16      	ldr	r3, [pc, #88]	; (802155c <_vfiprintf_r+0x258>)
 8021504:	a904      	add	r1, sp, #16
 8021506:	4630      	mov	r0, r6
 8021508:	f3af 8000 	nop.w
 802150c:	4607      	mov	r7, r0
 802150e:	1c78      	adds	r0, r7, #1
 8021510:	d1d6      	bne.n	80214c0 <_vfiprintf_r+0x1bc>
 8021512:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021514:	07d9      	lsls	r1, r3, #31
 8021516:	d405      	bmi.n	8021524 <_vfiprintf_r+0x220>
 8021518:	89ab      	ldrh	r3, [r5, #12]
 802151a:	059a      	lsls	r2, r3, #22
 802151c:	d402      	bmi.n	8021524 <_vfiprintf_r+0x220>
 802151e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021520:	f7ff fdf5 	bl	802110e <__retarget_lock_release_recursive>
 8021524:	89ab      	ldrh	r3, [r5, #12]
 8021526:	065b      	lsls	r3, r3, #25
 8021528:	f53f af12 	bmi.w	8021350 <_vfiprintf_r+0x4c>
 802152c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802152e:	e711      	b.n	8021354 <_vfiprintf_r+0x50>
 8021530:	ab03      	add	r3, sp, #12
 8021532:	9300      	str	r3, [sp, #0]
 8021534:	462a      	mov	r2, r5
 8021536:	4b09      	ldr	r3, [pc, #36]	; (802155c <_vfiprintf_r+0x258>)
 8021538:	a904      	add	r1, sp, #16
 802153a:	4630      	mov	r0, r6
 802153c:	f000 f880 	bl	8021640 <_printf_i>
 8021540:	e7e4      	b.n	802150c <_vfiprintf_r+0x208>
 8021542:	bf00      	nop
 8021544:	08025fb0 	.word	0x08025fb0
 8021548:	08025fd0 	.word	0x08025fd0
 802154c:	08025f90 	.word	0x08025f90
 8021550:	08025ff4 	.word	0x08025ff4
 8021554:	08025ffe 	.word	0x08025ffe
 8021558:	00000000 	.word	0x00000000
 802155c:	080212df 	.word	0x080212df
 8021560:	08025ffa 	.word	0x08025ffa

08021564 <_printf_common>:
 8021564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021568:	4616      	mov	r6, r2
 802156a:	4699      	mov	r9, r3
 802156c:	688a      	ldr	r2, [r1, #8]
 802156e:	690b      	ldr	r3, [r1, #16]
 8021570:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8021574:	4293      	cmp	r3, r2
 8021576:	bfb8      	it	lt
 8021578:	4613      	movlt	r3, r2
 802157a:	6033      	str	r3, [r6, #0]
 802157c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8021580:	4607      	mov	r7, r0
 8021582:	460c      	mov	r4, r1
 8021584:	b10a      	cbz	r2, 802158a <_printf_common+0x26>
 8021586:	3301      	adds	r3, #1
 8021588:	6033      	str	r3, [r6, #0]
 802158a:	6823      	ldr	r3, [r4, #0]
 802158c:	0699      	lsls	r1, r3, #26
 802158e:	bf42      	ittt	mi
 8021590:	6833      	ldrmi	r3, [r6, #0]
 8021592:	3302      	addmi	r3, #2
 8021594:	6033      	strmi	r3, [r6, #0]
 8021596:	6825      	ldr	r5, [r4, #0]
 8021598:	f015 0506 	ands.w	r5, r5, #6
 802159c:	d106      	bne.n	80215ac <_printf_common+0x48>
 802159e:	f104 0a19 	add.w	sl, r4, #25
 80215a2:	68e3      	ldr	r3, [r4, #12]
 80215a4:	6832      	ldr	r2, [r6, #0]
 80215a6:	1a9b      	subs	r3, r3, r2
 80215a8:	42ab      	cmp	r3, r5
 80215aa:	dc26      	bgt.n	80215fa <_printf_common+0x96>
 80215ac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80215b0:	1e13      	subs	r3, r2, #0
 80215b2:	6822      	ldr	r2, [r4, #0]
 80215b4:	bf18      	it	ne
 80215b6:	2301      	movne	r3, #1
 80215b8:	0692      	lsls	r2, r2, #26
 80215ba:	d42b      	bmi.n	8021614 <_printf_common+0xb0>
 80215bc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80215c0:	4649      	mov	r1, r9
 80215c2:	4638      	mov	r0, r7
 80215c4:	47c0      	blx	r8
 80215c6:	3001      	adds	r0, #1
 80215c8:	d01e      	beq.n	8021608 <_printf_common+0xa4>
 80215ca:	6823      	ldr	r3, [r4, #0]
 80215cc:	68e5      	ldr	r5, [r4, #12]
 80215ce:	6832      	ldr	r2, [r6, #0]
 80215d0:	f003 0306 	and.w	r3, r3, #6
 80215d4:	2b04      	cmp	r3, #4
 80215d6:	bf08      	it	eq
 80215d8:	1aad      	subeq	r5, r5, r2
 80215da:	68a3      	ldr	r3, [r4, #8]
 80215dc:	6922      	ldr	r2, [r4, #16]
 80215de:	bf0c      	ite	eq
 80215e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80215e4:	2500      	movne	r5, #0
 80215e6:	4293      	cmp	r3, r2
 80215e8:	bfc4      	itt	gt
 80215ea:	1a9b      	subgt	r3, r3, r2
 80215ec:	18ed      	addgt	r5, r5, r3
 80215ee:	2600      	movs	r6, #0
 80215f0:	341a      	adds	r4, #26
 80215f2:	42b5      	cmp	r5, r6
 80215f4:	d11a      	bne.n	802162c <_printf_common+0xc8>
 80215f6:	2000      	movs	r0, #0
 80215f8:	e008      	b.n	802160c <_printf_common+0xa8>
 80215fa:	2301      	movs	r3, #1
 80215fc:	4652      	mov	r2, sl
 80215fe:	4649      	mov	r1, r9
 8021600:	4638      	mov	r0, r7
 8021602:	47c0      	blx	r8
 8021604:	3001      	adds	r0, #1
 8021606:	d103      	bne.n	8021610 <_printf_common+0xac>
 8021608:	f04f 30ff 	mov.w	r0, #4294967295
 802160c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021610:	3501      	adds	r5, #1
 8021612:	e7c6      	b.n	80215a2 <_printf_common+0x3e>
 8021614:	18e1      	adds	r1, r4, r3
 8021616:	1c5a      	adds	r2, r3, #1
 8021618:	2030      	movs	r0, #48	; 0x30
 802161a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802161e:	4422      	add	r2, r4
 8021620:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021624:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021628:	3302      	adds	r3, #2
 802162a:	e7c7      	b.n	80215bc <_printf_common+0x58>
 802162c:	2301      	movs	r3, #1
 802162e:	4622      	mov	r2, r4
 8021630:	4649      	mov	r1, r9
 8021632:	4638      	mov	r0, r7
 8021634:	47c0      	blx	r8
 8021636:	3001      	adds	r0, #1
 8021638:	d0e6      	beq.n	8021608 <_printf_common+0xa4>
 802163a:	3601      	adds	r6, #1
 802163c:	e7d9      	b.n	80215f2 <_printf_common+0x8e>
	...

08021640 <_printf_i>:
 8021640:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021644:	460c      	mov	r4, r1
 8021646:	4691      	mov	r9, r2
 8021648:	7e27      	ldrb	r7, [r4, #24]
 802164a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802164c:	2f78      	cmp	r7, #120	; 0x78
 802164e:	4680      	mov	r8, r0
 8021650:	469a      	mov	sl, r3
 8021652:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8021656:	d807      	bhi.n	8021668 <_printf_i+0x28>
 8021658:	2f62      	cmp	r7, #98	; 0x62
 802165a:	d80a      	bhi.n	8021672 <_printf_i+0x32>
 802165c:	2f00      	cmp	r7, #0
 802165e:	f000 80d8 	beq.w	8021812 <_printf_i+0x1d2>
 8021662:	2f58      	cmp	r7, #88	; 0x58
 8021664:	f000 80a3 	beq.w	80217ae <_printf_i+0x16e>
 8021668:	f104 0642 	add.w	r6, r4, #66	; 0x42
 802166c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8021670:	e03a      	b.n	80216e8 <_printf_i+0xa8>
 8021672:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8021676:	2b15      	cmp	r3, #21
 8021678:	d8f6      	bhi.n	8021668 <_printf_i+0x28>
 802167a:	a001      	add	r0, pc, #4	; (adr r0, 8021680 <_printf_i+0x40>)
 802167c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8021680:	080216d9 	.word	0x080216d9
 8021684:	080216ed 	.word	0x080216ed
 8021688:	08021669 	.word	0x08021669
 802168c:	08021669 	.word	0x08021669
 8021690:	08021669 	.word	0x08021669
 8021694:	08021669 	.word	0x08021669
 8021698:	080216ed 	.word	0x080216ed
 802169c:	08021669 	.word	0x08021669
 80216a0:	08021669 	.word	0x08021669
 80216a4:	08021669 	.word	0x08021669
 80216a8:	08021669 	.word	0x08021669
 80216ac:	080217f9 	.word	0x080217f9
 80216b0:	0802171d 	.word	0x0802171d
 80216b4:	080217db 	.word	0x080217db
 80216b8:	08021669 	.word	0x08021669
 80216bc:	08021669 	.word	0x08021669
 80216c0:	0802181b 	.word	0x0802181b
 80216c4:	08021669 	.word	0x08021669
 80216c8:	0802171d 	.word	0x0802171d
 80216cc:	08021669 	.word	0x08021669
 80216d0:	08021669 	.word	0x08021669
 80216d4:	080217e3 	.word	0x080217e3
 80216d8:	680b      	ldr	r3, [r1, #0]
 80216da:	1d1a      	adds	r2, r3, #4
 80216dc:	681b      	ldr	r3, [r3, #0]
 80216de:	600a      	str	r2, [r1, #0]
 80216e0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80216e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80216e8:	2301      	movs	r3, #1
 80216ea:	e0a3      	b.n	8021834 <_printf_i+0x1f4>
 80216ec:	6825      	ldr	r5, [r4, #0]
 80216ee:	6808      	ldr	r0, [r1, #0]
 80216f0:	062e      	lsls	r6, r5, #24
 80216f2:	f100 0304 	add.w	r3, r0, #4
 80216f6:	d50a      	bpl.n	802170e <_printf_i+0xce>
 80216f8:	6805      	ldr	r5, [r0, #0]
 80216fa:	600b      	str	r3, [r1, #0]
 80216fc:	2d00      	cmp	r5, #0
 80216fe:	da03      	bge.n	8021708 <_printf_i+0xc8>
 8021700:	232d      	movs	r3, #45	; 0x2d
 8021702:	426d      	negs	r5, r5
 8021704:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021708:	485e      	ldr	r0, [pc, #376]	; (8021884 <_printf_i+0x244>)
 802170a:	230a      	movs	r3, #10
 802170c:	e019      	b.n	8021742 <_printf_i+0x102>
 802170e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8021712:	6805      	ldr	r5, [r0, #0]
 8021714:	600b      	str	r3, [r1, #0]
 8021716:	bf18      	it	ne
 8021718:	b22d      	sxthne	r5, r5
 802171a:	e7ef      	b.n	80216fc <_printf_i+0xbc>
 802171c:	680b      	ldr	r3, [r1, #0]
 802171e:	6825      	ldr	r5, [r4, #0]
 8021720:	1d18      	adds	r0, r3, #4
 8021722:	6008      	str	r0, [r1, #0]
 8021724:	0628      	lsls	r0, r5, #24
 8021726:	d501      	bpl.n	802172c <_printf_i+0xec>
 8021728:	681d      	ldr	r5, [r3, #0]
 802172a:	e002      	b.n	8021732 <_printf_i+0xf2>
 802172c:	0669      	lsls	r1, r5, #25
 802172e:	d5fb      	bpl.n	8021728 <_printf_i+0xe8>
 8021730:	881d      	ldrh	r5, [r3, #0]
 8021732:	4854      	ldr	r0, [pc, #336]	; (8021884 <_printf_i+0x244>)
 8021734:	2f6f      	cmp	r7, #111	; 0x6f
 8021736:	bf0c      	ite	eq
 8021738:	2308      	moveq	r3, #8
 802173a:	230a      	movne	r3, #10
 802173c:	2100      	movs	r1, #0
 802173e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8021742:	6866      	ldr	r6, [r4, #4]
 8021744:	60a6      	str	r6, [r4, #8]
 8021746:	2e00      	cmp	r6, #0
 8021748:	bfa2      	ittt	ge
 802174a:	6821      	ldrge	r1, [r4, #0]
 802174c:	f021 0104 	bicge.w	r1, r1, #4
 8021750:	6021      	strge	r1, [r4, #0]
 8021752:	b90d      	cbnz	r5, 8021758 <_printf_i+0x118>
 8021754:	2e00      	cmp	r6, #0
 8021756:	d04d      	beq.n	80217f4 <_printf_i+0x1b4>
 8021758:	4616      	mov	r6, r2
 802175a:	fbb5 f1f3 	udiv	r1, r5, r3
 802175e:	fb03 5711 	mls	r7, r3, r1, r5
 8021762:	5dc7      	ldrb	r7, [r0, r7]
 8021764:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8021768:	462f      	mov	r7, r5
 802176a:	42bb      	cmp	r3, r7
 802176c:	460d      	mov	r5, r1
 802176e:	d9f4      	bls.n	802175a <_printf_i+0x11a>
 8021770:	2b08      	cmp	r3, #8
 8021772:	d10b      	bne.n	802178c <_printf_i+0x14c>
 8021774:	6823      	ldr	r3, [r4, #0]
 8021776:	07df      	lsls	r7, r3, #31
 8021778:	d508      	bpl.n	802178c <_printf_i+0x14c>
 802177a:	6923      	ldr	r3, [r4, #16]
 802177c:	6861      	ldr	r1, [r4, #4]
 802177e:	4299      	cmp	r1, r3
 8021780:	bfde      	ittt	le
 8021782:	2330      	movle	r3, #48	; 0x30
 8021784:	f806 3c01 	strble.w	r3, [r6, #-1]
 8021788:	f106 36ff 	addle.w	r6, r6, #4294967295
 802178c:	1b92      	subs	r2, r2, r6
 802178e:	6122      	str	r2, [r4, #16]
 8021790:	f8cd a000 	str.w	sl, [sp]
 8021794:	464b      	mov	r3, r9
 8021796:	aa03      	add	r2, sp, #12
 8021798:	4621      	mov	r1, r4
 802179a:	4640      	mov	r0, r8
 802179c:	f7ff fee2 	bl	8021564 <_printf_common>
 80217a0:	3001      	adds	r0, #1
 80217a2:	d14c      	bne.n	802183e <_printf_i+0x1fe>
 80217a4:	f04f 30ff 	mov.w	r0, #4294967295
 80217a8:	b004      	add	sp, #16
 80217aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80217ae:	4835      	ldr	r0, [pc, #212]	; (8021884 <_printf_i+0x244>)
 80217b0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80217b4:	6823      	ldr	r3, [r4, #0]
 80217b6:	680e      	ldr	r6, [r1, #0]
 80217b8:	061f      	lsls	r7, r3, #24
 80217ba:	f856 5b04 	ldr.w	r5, [r6], #4
 80217be:	600e      	str	r6, [r1, #0]
 80217c0:	d514      	bpl.n	80217ec <_printf_i+0x1ac>
 80217c2:	07d9      	lsls	r1, r3, #31
 80217c4:	bf44      	itt	mi
 80217c6:	f043 0320 	orrmi.w	r3, r3, #32
 80217ca:	6023      	strmi	r3, [r4, #0]
 80217cc:	b91d      	cbnz	r5, 80217d6 <_printf_i+0x196>
 80217ce:	6823      	ldr	r3, [r4, #0]
 80217d0:	f023 0320 	bic.w	r3, r3, #32
 80217d4:	6023      	str	r3, [r4, #0]
 80217d6:	2310      	movs	r3, #16
 80217d8:	e7b0      	b.n	802173c <_printf_i+0xfc>
 80217da:	6823      	ldr	r3, [r4, #0]
 80217dc:	f043 0320 	orr.w	r3, r3, #32
 80217e0:	6023      	str	r3, [r4, #0]
 80217e2:	2378      	movs	r3, #120	; 0x78
 80217e4:	4828      	ldr	r0, [pc, #160]	; (8021888 <_printf_i+0x248>)
 80217e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80217ea:	e7e3      	b.n	80217b4 <_printf_i+0x174>
 80217ec:	065e      	lsls	r6, r3, #25
 80217ee:	bf48      	it	mi
 80217f0:	b2ad      	uxthmi	r5, r5
 80217f2:	e7e6      	b.n	80217c2 <_printf_i+0x182>
 80217f4:	4616      	mov	r6, r2
 80217f6:	e7bb      	b.n	8021770 <_printf_i+0x130>
 80217f8:	680b      	ldr	r3, [r1, #0]
 80217fa:	6826      	ldr	r6, [r4, #0]
 80217fc:	6960      	ldr	r0, [r4, #20]
 80217fe:	1d1d      	adds	r5, r3, #4
 8021800:	600d      	str	r5, [r1, #0]
 8021802:	0635      	lsls	r5, r6, #24
 8021804:	681b      	ldr	r3, [r3, #0]
 8021806:	d501      	bpl.n	802180c <_printf_i+0x1cc>
 8021808:	6018      	str	r0, [r3, #0]
 802180a:	e002      	b.n	8021812 <_printf_i+0x1d2>
 802180c:	0671      	lsls	r1, r6, #25
 802180e:	d5fb      	bpl.n	8021808 <_printf_i+0x1c8>
 8021810:	8018      	strh	r0, [r3, #0]
 8021812:	2300      	movs	r3, #0
 8021814:	6123      	str	r3, [r4, #16]
 8021816:	4616      	mov	r6, r2
 8021818:	e7ba      	b.n	8021790 <_printf_i+0x150>
 802181a:	680b      	ldr	r3, [r1, #0]
 802181c:	1d1a      	adds	r2, r3, #4
 802181e:	600a      	str	r2, [r1, #0]
 8021820:	681e      	ldr	r6, [r3, #0]
 8021822:	6862      	ldr	r2, [r4, #4]
 8021824:	2100      	movs	r1, #0
 8021826:	4630      	mov	r0, r6
 8021828:	f7de fcea 	bl	8000200 <memchr>
 802182c:	b108      	cbz	r0, 8021832 <_printf_i+0x1f2>
 802182e:	1b80      	subs	r0, r0, r6
 8021830:	6060      	str	r0, [r4, #4]
 8021832:	6863      	ldr	r3, [r4, #4]
 8021834:	6123      	str	r3, [r4, #16]
 8021836:	2300      	movs	r3, #0
 8021838:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802183c:	e7a8      	b.n	8021790 <_printf_i+0x150>
 802183e:	6923      	ldr	r3, [r4, #16]
 8021840:	4632      	mov	r2, r6
 8021842:	4649      	mov	r1, r9
 8021844:	4640      	mov	r0, r8
 8021846:	47d0      	blx	sl
 8021848:	3001      	adds	r0, #1
 802184a:	d0ab      	beq.n	80217a4 <_printf_i+0x164>
 802184c:	6823      	ldr	r3, [r4, #0]
 802184e:	079b      	lsls	r3, r3, #30
 8021850:	d413      	bmi.n	802187a <_printf_i+0x23a>
 8021852:	68e0      	ldr	r0, [r4, #12]
 8021854:	9b03      	ldr	r3, [sp, #12]
 8021856:	4298      	cmp	r0, r3
 8021858:	bfb8      	it	lt
 802185a:	4618      	movlt	r0, r3
 802185c:	e7a4      	b.n	80217a8 <_printf_i+0x168>
 802185e:	2301      	movs	r3, #1
 8021860:	4632      	mov	r2, r6
 8021862:	4649      	mov	r1, r9
 8021864:	4640      	mov	r0, r8
 8021866:	47d0      	blx	sl
 8021868:	3001      	adds	r0, #1
 802186a:	d09b      	beq.n	80217a4 <_printf_i+0x164>
 802186c:	3501      	adds	r5, #1
 802186e:	68e3      	ldr	r3, [r4, #12]
 8021870:	9903      	ldr	r1, [sp, #12]
 8021872:	1a5b      	subs	r3, r3, r1
 8021874:	42ab      	cmp	r3, r5
 8021876:	dcf2      	bgt.n	802185e <_printf_i+0x21e>
 8021878:	e7eb      	b.n	8021852 <_printf_i+0x212>
 802187a:	2500      	movs	r5, #0
 802187c:	f104 0619 	add.w	r6, r4, #25
 8021880:	e7f5      	b.n	802186e <_printf_i+0x22e>
 8021882:	bf00      	nop
 8021884:	08026005 	.word	0x08026005
 8021888:	08026016 	.word	0x08026016

0802188c <cleanup_glue>:
 802188c:	b538      	push	{r3, r4, r5, lr}
 802188e:	460c      	mov	r4, r1
 8021890:	6809      	ldr	r1, [r1, #0]
 8021892:	4605      	mov	r5, r0
 8021894:	b109      	cbz	r1, 802189a <cleanup_glue+0xe>
 8021896:	f7ff fff9 	bl	802188c <cleanup_glue>
 802189a:	4621      	mov	r1, r4
 802189c:	4628      	mov	r0, r5
 802189e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80218a2:	f7ff bc5b 	b.w	802115c <_free_r>
	...

080218a8 <_reclaim_reent>:
 80218a8:	4b2c      	ldr	r3, [pc, #176]	; (802195c <_reclaim_reent+0xb4>)
 80218aa:	681b      	ldr	r3, [r3, #0]
 80218ac:	4283      	cmp	r3, r0
 80218ae:	b570      	push	{r4, r5, r6, lr}
 80218b0:	4604      	mov	r4, r0
 80218b2:	d051      	beq.n	8021958 <_reclaim_reent+0xb0>
 80218b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80218b6:	b143      	cbz	r3, 80218ca <_reclaim_reent+0x22>
 80218b8:	68db      	ldr	r3, [r3, #12]
 80218ba:	2b00      	cmp	r3, #0
 80218bc:	d14a      	bne.n	8021954 <_reclaim_reent+0xac>
 80218be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80218c0:	6819      	ldr	r1, [r3, #0]
 80218c2:	b111      	cbz	r1, 80218ca <_reclaim_reent+0x22>
 80218c4:	4620      	mov	r0, r4
 80218c6:	f7ff fc49 	bl	802115c <_free_r>
 80218ca:	6961      	ldr	r1, [r4, #20]
 80218cc:	b111      	cbz	r1, 80218d4 <_reclaim_reent+0x2c>
 80218ce:	4620      	mov	r0, r4
 80218d0:	f7ff fc44 	bl	802115c <_free_r>
 80218d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80218d6:	b111      	cbz	r1, 80218de <_reclaim_reent+0x36>
 80218d8:	4620      	mov	r0, r4
 80218da:	f7ff fc3f 	bl	802115c <_free_r>
 80218de:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80218e0:	b111      	cbz	r1, 80218e8 <_reclaim_reent+0x40>
 80218e2:	4620      	mov	r0, r4
 80218e4:	f7ff fc3a 	bl	802115c <_free_r>
 80218e8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80218ea:	b111      	cbz	r1, 80218f2 <_reclaim_reent+0x4a>
 80218ec:	4620      	mov	r0, r4
 80218ee:	f7ff fc35 	bl	802115c <_free_r>
 80218f2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80218f4:	b111      	cbz	r1, 80218fc <_reclaim_reent+0x54>
 80218f6:	4620      	mov	r0, r4
 80218f8:	f7ff fc30 	bl	802115c <_free_r>
 80218fc:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80218fe:	b111      	cbz	r1, 8021906 <_reclaim_reent+0x5e>
 8021900:	4620      	mov	r0, r4
 8021902:	f7ff fc2b 	bl	802115c <_free_r>
 8021906:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021908:	b111      	cbz	r1, 8021910 <_reclaim_reent+0x68>
 802190a:	4620      	mov	r0, r4
 802190c:	f7ff fc26 	bl	802115c <_free_r>
 8021910:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021912:	b111      	cbz	r1, 802191a <_reclaim_reent+0x72>
 8021914:	4620      	mov	r0, r4
 8021916:	f7ff fc21 	bl	802115c <_free_r>
 802191a:	69a3      	ldr	r3, [r4, #24]
 802191c:	b1e3      	cbz	r3, 8021958 <_reclaim_reent+0xb0>
 802191e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8021920:	4620      	mov	r0, r4
 8021922:	4798      	blx	r3
 8021924:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021926:	b1b9      	cbz	r1, 8021958 <_reclaim_reent+0xb0>
 8021928:	4620      	mov	r0, r4
 802192a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802192e:	f7ff bfad 	b.w	802188c <cleanup_glue>
 8021932:	5949      	ldr	r1, [r1, r5]
 8021934:	b941      	cbnz	r1, 8021948 <_reclaim_reent+0xa0>
 8021936:	3504      	adds	r5, #4
 8021938:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802193a:	2d80      	cmp	r5, #128	; 0x80
 802193c:	68d9      	ldr	r1, [r3, #12]
 802193e:	d1f8      	bne.n	8021932 <_reclaim_reent+0x8a>
 8021940:	4620      	mov	r0, r4
 8021942:	f7ff fc0b 	bl	802115c <_free_r>
 8021946:	e7ba      	b.n	80218be <_reclaim_reent+0x16>
 8021948:	680e      	ldr	r6, [r1, #0]
 802194a:	4620      	mov	r0, r4
 802194c:	f7ff fc06 	bl	802115c <_free_r>
 8021950:	4631      	mov	r1, r6
 8021952:	e7ef      	b.n	8021934 <_reclaim_reent+0x8c>
 8021954:	2500      	movs	r5, #0
 8021956:	e7ef      	b.n	8021938 <_reclaim_reent+0x90>
 8021958:	bd70      	pop	{r4, r5, r6, pc}
 802195a:	bf00      	nop
 802195c:	200000fc 	.word	0x200000fc

08021960 <_sbrk_r>:
 8021960:	b538      	push	{r3, r4, r5, lr}
 8021962:	4d06      	ldr	r5, [pc, #24]	; (802197c <_sbrk_r+0x1c>)
 8021964:	2300      	movs	r3, #0
 8021966:	4604      	mov	r4, r0
 8021968:	4608      	mov	r0, r1
 802196a:	602b      	str	r3, [r5, #0]
 802196c:	f7e0 fb6a 	bl	8002044 <_sbrk>
 8021970:	1c43      	adds	r3, r0, #1
 8021972:	d102      	bne.n	802197a <_sbrk_r+0x1a>
 8021974:	682b      	ldr	r3, [r5, #0]
 8021976:	b103      	cbz	r3, 802197a <_sbrk_r+0x1a>
 8021978:	6023      	str	r3, [r4, #0]
 802197a:	bd38      	pop	{r3, r4, r5, pc}
 802197c:	2000f0c0 	.word	0x2000f0c0

08021980 <_raise_r>:
 8021980:	291f      	cmp	r1, #31
 8021982:	b538      	push	{r3, r4, r5, lr}
 8021984:	4604      	mov	r4, r0
 8021986:	460d      	mov	r5, r1
 8021988:	d904      	bls.n	8021994 <_raise_r+0x14>
 802198a:	2316      	movs	r3, #22
 802198c:	6003      	str	r3, [r0, #0]
 802198e:	f04f 30ff 	mov.w	r0, #4294967295
 8021992:	bd38      	pop	{r3, r4, r5, pc}
 8021994:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021996:	b112      	cbz	r2, 802199e <_raise_r+0x1e>
 8021998:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802199c:	b94b      	cbnz	r3, 80219b2 <_raise_r+0x32>
 802199e:	4620      	mov	r0, r4
 80219a0:	f000 f830 	bl	8021a04 <_getpid_r>
 80219a4:	462a      	mov	r2, r5
 80219a6:	4601      	mov	r1, r0
 80219a8:	4620      	mov	r0, r4
 80219aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80219ae:	f000 b817 	b.w	80219e0 <_kill_r>
 80219b2:	2b01      	cmp	r3, #1
 80219b4:	d00a      	beq.n	80219cc <_raise_r+0x4c>
 80219b6:	1c59      	adds	r1, r3, #1
 80219b8:	d103      	bne.n	80219c2 <_raise_r+0x42>
 80219ba:	2316      	movs	r3, #22
 80219bc:	6003      	str	r3, [r0, #0]
 80219be:	2001      	movs	r0, #1
 80219c0:	e7e7      	b.n	8021992 <_raise_r+0x12>
 80219c2:	2400      	movs	r4, #0
 80219c4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80219c8:	4628      	mov	r0, r5
 80219ca:	4798      	blx	r3
 80219cc:	2000      	movs	r0, #0
 80219ce:	e7e0      	b.n	8021992 <_raise_r+0x12>

080219d0 <raise>:
 80219d0:	4b02      	ldr	r3, [pc, #8]	; (80219dc <raise+0xc>)
 80219d2:	4601      	mov	r1, r0
 80219d4:	6818      	ldr	r0, [r3, #0]
 80219d6:	f7ff bfd3 	b.w	8021980 <_raise_r>
 80219da:	bf00      	nop
 80219dc:	200000fc 	.word	0x200000fc

080219e0 <_kill_r>:
 80219e0:	b538      	push	{r3, r4, r5, lr}
 80219e2:	4d07      	ldr	r5, [pc, #28]	; (8021a00 <_kill_r+0x20>)
 80219e4:	2300      	movs	r3, #0
 80219e6:	4604      	mov	r4, r0
 80219e8:	4608      	mov	r0, r1
 80219ea:	4611      	mov	r1, r2
 80219ec:	602b      	str	r3, [r5, #0]
 80219ee:	f7e0 faf5 	bl	8001fdc <_kill>
 80219f2:	1c43      	adds	r3, r0, #1
 80219f4:	d102      	bne.n	80219fc <_kill_r+0x1c>
 80219f6:	682b      	ldr	r3, [r5, #0]
 80219f8:	b103      	cbz	r3, 80219fc <_kill_r+0x1c>
 80219fa:	6023      	str	r3, [r4, #0]
 80219fc:	bd38      	pop	{r3, r4, r5, pc}
 80219fe:	bf00      	nop
 8021a00:	2000f0c0 	.word	0x2000f0c0

08021a04 <_getpid_r>:
 8021a04:	f7e0 bae8 	b.w	8001fd8 <_getpid>

08021a08 <__sread>:
 8021a08:	b510      	push	{r4, lr}
 8021a0a:	460c      	mov	r4, r1
 8021a0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a10:	f000 fac6 	bl	8021fa0 <_read_r>
 8021a14:	2800      	cmp	r0, #0
 8021a16:	bfab      	itete	ge
 8021a18:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021a1a:	89a3      	ldrhlt	r3, [r4, #12]
 8021a1c:	181b      	addge	r3, r3, r0
 8021a1e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021a22:	bfac      	ite	ge
 8021a24:	6563      	strge	r3, [r4, #84]	; 0x54
 8021a26:	81a3      	strhlt	r3, [r4, #12]
 8021a28:	bd10      	pop	{r4, pc}

08021a2a <__swrite>:
 8021a2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021a2e:	461f      	mov	r7, r3
 8021a30:	898b      	ldrh	r3, [r1, #12]
 8021a32:	05db      	lsls	r3, r3, #23
 8021a34:	4605      	mov	r5, r0
 8021a36:	460c      	mov	r4, r1
 8021a38:	4616      	mov	r6, r2
 8021a3a:	d505      	bpl.n	8021a48 <__swrite+0x1e>
 8021a3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a40:	2302      	movs	r3, #2
 8021a42:	2200      	movs	r2, #0
 8021a44:	f000 fa2a 	bl	8021e9c <_lseek_r>
 8021a48:	89a3      	ldrh	r3, [r4, #12]
 8021a4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021a4e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021a52:	81a3      	strh	r3, [r4, #12]
 8021a54:	4632      	mov	r2, r6
 8021a56:	463b      	mov	r3, r7
 8021a58:	4628      	mov	r0, r5
 8021a5a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021a5e:	f000 b869 	b.w	8021b34 <_write_r>

08021a62 <__sseek>:
 8021a62:	b510      	push	{r4, lr}
 8021a64:	460c      	mov	r4, r1
 8021a66:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a6a:	f000 fa17 	bl	8021e9c <_lseek_r>
 8021a6e:	1c43      	adds	r3, r0, #1
 8021a70:	89a3      	ldrh	r3, [r4, #12]
 8021a72:	bf15      	itete	ne
 8021a74:	6560      	strne	r0, [r4, #84]	; 0x54
 8021a76:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021a7a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021a7e:	81a3      	strheq	r3, [r4, #12]
 8021a80:	bf18      	it	ne
 8021a82:	81a3      	strhne	r3, [r4, #12]
 8021a84:	bd10      	pop	{r4, pc}

08021a86 <__sclose>:
 8021a86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a8a:	f000 b935 	b.w	8021cf8 <_close_r>
	...

08021a90 <__swbuf_r>:
 8021a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a92:	460e      	mov	r6, r1
 8021a94:	4614      	mov	r4, r2
 8021a96:	4605      	mov	r5, r0
 8021a98:	b118      	cbz	r0, 8021aa2 <__swbuf_r+0x12>
 8021a9a:	6983      	ldr	r3, [r0, #24]
 8021a9c:	b90b      	cbnz	r3, 8021aa2 <__swbuf_r+0x12>
 8021a9e:	f7ff fa5f 	bl	8020f60 <__sinit>
 8021aa2:	4b21      	ldr	r3, [pc, #132]	; (8021b28 <__swbuf_r+0x98>)
 8021aa4:	429c      	cmp	r4, r3
 8021aa6:	d12b      	bne.n	8021b00 <__swbuf_r+0x70>
 8021aa8:	686c      	ldr	r4, [r5, #4]
 8021aaa:	69a3      	ldr	r3, [r4, #24]
 8021aac:	60a3      	str	r3, [r4, #8]
 8021aae:	89a3      	ldrh	r3, [r4, #12]
 8021ab0:	071a      	lsls	r2, r3, #28
 8021ab2:	d52f      	bpl.n	8021b14 <__swbuf_r+0x84>
 8021ab4:	6923      	ldr	r3, [r4, #16]
 8021ab6:	b36b      	cbz	r3, 8021b14 <__swbuf_r+0x84>
 8021ab8:	6923      	ldr	r3, [r4, #16]
 8021aba:	6820      	ldr	r0, [r4, #0]
 8021abc:	1ac0      	subs	r0, r0, r3
 8021abe:	6963      	ldr	r3, [r4, #20]
 8021ac0:	b2f6      	uxtb	r6, r6
 8021ac2:	4283      	cmp	r3, r0
 8021ac4:	4637      	mov	r7, r6
 8021ac6:	dc04      	bgt.n	8021ad2 <__swbuf_r+0x42>
 8021ac8:	4621      	mov	r1, r4
 8021aca:	4628      	mov	r0, r5
 8021acc:	f000 f9aa 	bl	8021e24 <_fflush_r>
 8021ad0:	bb30      	cbnz	r0, 8021b20 <__swbuf_r+0x90>
 8021ad2:	68a3      	ldr	r3, [r4, #8]
 8021ad4:	3b01      	subs	r3, #1
 8021ad6:	60a3      	str	r3, [r4, #8]
 8021ad8:	6823      	ldr	r3, [r4, #0]
 8021ada:	1c5a      	adds	r2, r3, #1
 8021adc:	6022      	str	r2, [r4, #0]
 8021ade:	701e      	strb	r6, [r3, #0]
 8021ae0:	6963      	ldr	r3, [r4, #20]
 8021ae2:	3001      	adds	r0, #1
 8021ae4:	4283      	cmp	r3, r0
 8021ae6:	d004      	beq.n	8021af2 <__swbuf_r+0x62>
 8021ae8:	89a3      	ldrh	r3, [r4, #12]
 8021aea:	07db      	lsls	r3, r3, #31
 8021aec:	d506      	bpl.n	8021afc <__swbuf_r+0x6c>
 8021aee:	2e0a      	cmp	r6, #10
 8021af0:	d104      	bne.n	8021afc <__swbuf_r+0x6c>
 8021af2:	4621      	mov	r1, r4
 8021af4:	4628      	mov	r0, r5
 8021af6:	f000 f995 	bl	8021e24 <_fflush_r>
 8021afa:	b988      	cbnz	r0, 8021b20 <__swbuf_r+0x90>
 8021afc:	4638      	mov	r0, r7
 8021afe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021b00:	4b0a      	ldr	r3, [pc, #40]	; (8021b2c <__swbuf_r+0x9c>)
 8021b02:	429c      	cmp	r4, r3
 8021b04:	d101      	bne.n	8021b0a <__swbuf_r+0x7a>
 8021b06:	68ac      	ldr	r4, [r5, #8]
 8021b08:	e7cf      	b.n	8021aaa <__swbuf_r+0x1a>
 8021b0a:	4b09      	ldr	r3, [pc, #36]	; (8021b30 <__swbuf_r+0xa0>)
 8021b0c:	429c      	cmp	r4, r3
 8021b0e:	bf08      	it	eq
 8021b10:	68ec      	ldreq	r4, [r5, #12]
 8021b12:	e7ca      	b.n	8021aaa <__swbuf_r+0x1a>
 8021b14:	4621      	mov	r1, r4
 8021b16:	4628      	mov	r0, r5
 8021b18:	f000 f81e 	bl	8021b58 <__swsetup_r>
 8021b1c:	2800      	cmp	r0, #0
 8021b1e:	d0cb      	beq.n	8021ab8 <__swbuf_r+0x28>
 8021b20:	f04f 37ff 	mov.w	r7, #4294967295
 8021b24:	e7ea      	b.n	8021afc <__swbuf_r+0x6c>
 8021b26:	bf00      	nop
 8021b28:	08025fb0 	.word	0x08025fb0
 8021b2c:	08025fd0 	.word	0x08025fd0
 8021b30:	08025f90 	.word	0x08025f90

08021b34 <_write_r>:
 8021b34:	b538      	push	{r3, r4, r5, lr}
 8021b36:	4d07      	ldr	r5, [pc, #28]	; (8021b54 <_write_r+0x20>)
 8021b38:	4604      	mov	r4, r0
 8021b3a:	4608      	mov	r0, r1
 8021b3c:	4611      	mov	r1, r2
 8021b3e:	2200      	movs	r2, #0
 8021b40:	602a      	str	r2, [r5, #0]
 8021b42:	461a      	mov	r2, r3
 8021b44:	f7e0 fa65 	bl	8002012 <_write>
 8021b48:	1c43      	adds	r3, r0, #1
 8021b4a:	d102      	bne.n	8021b52 <_write_r+0x1e>
 8021b4c:	682b      	ldr	r3, [r5, #0]
 8021b4e:	b103      	cbz	r3, 8021b52 <_write_r+0x1e>
 8021b50:	6023      	str	r3, [r4, #0]
 8021b52:	bd38      	pop	{r3, r4, r5, pc}
 8021b54:	2000f0c0 	.word	0x2000f0c0

08021b58 <__swsetup_r>:
 8021b58:	4b32      	ldr	r3, [pc, #200]	; (8021c24 <__swsetup_r+0xcc>)
 8021b5a:	b570      	push	{r4, r5, r6, lr}
 8021b5c:	681d      	ldr	r5, [r3, #0]
 8021b5e:	4606      	mov	r6, r0
 8021b60:	460c      	mov	r4, r1
 8021b62:	b125      	cbz	r5, 8021b6e <__swsetup_r+0x16>
 8021b64:	69ab      	ldr	r3, [r5, #24]
 8021b66:	b913      	cbnz	r3, 8021b6e <__swsetup_r+0x16>
 8021b68:	4628      	mov	r0, r5
 8021b6a:	f7ff f9f9 	bl	8020f60 <__sinit>
 8021b6e:	4b2e      	ldr	r3, [pc, #184]	; (8021c28 <__swsetup_r+0xd0>)
 8021b70:	429c      	cmp	r4, r3
 8021b72:	d10f      	bne.n	8021b94 <__swsetup_r+0x3c>
 8021b74:	686c      	ldr	r4, [r5, #4]
 8021b76:	89a3      	ldrh	r3, [r4, #12]
 8021b78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021b7c:	0719      	lsls	r1, r3, #28
 8021b7e:	d42c      	bmi.n	8021bda <__swsetup_r+0x82>
 8021b80:	06dd      	lsls	r5, r3, #27
 8021b82:	d411      	bmi.n	8021ba8 <__swsetup_r+0x50>
 8021b84:	2309      	movs	r3, #9
 8021b86:	6033      	str	r3, [r6, #0]
 8021b88:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021b8c:	81a3      	strh	r3, [r4, #12]
 8021b8e:	f04f 30ff 	mov.w	r0, #4294967295
 8021b92:	e03e      	b.n	8021c12 <__swsetup_r+0xba>
 8021b94:	4b25      	ldr	r3, [pc, #148]	; (8021c2c <__swsetup_r+0xd4>)
 8021b96:	429c      	cmp	r4, r3
 8021b98:	d101      	bne.n	8021b9e <__swsetup_r+0x46>
 8021b9a:	68ac      	ldr	r4, [r5, #8]
 8021b9c:	e7eb      	b.n	8021b76 <__swsetup_r+0x1e>
 8021b9e:	4b24      	ldr	r3, [pc, #144]	; (8021c30 <__swsetup_r+0xd8>)
 8021ba0:	429c      	cmp	r4, r3
 8021ba2:	bf08      	it	eq
 8021ba4:	68ec      	ldreq	r4, [r5, #12]
 8021ba6:	e7e6      	b.n	8021b76 <__swsetup_r+0x1e>
 8021ba8:	0758      	lsls	r0, r3, #29
 8021baa:	d512      	bpl.n	8021bd2 <__swsetup_r+0x7a>
 8021bac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021bae:	b141      	cbz	r1, 8021bc2 <__swsetup_r+0x6a>
 8021bb0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021bb4:	4299      	cmp	r1, r3
 8021bb6:	d002      	beq.n	8021bbe <__swsetup_r+0x66>
 8021bb8:	4630      	mov	r0, r6
 8021bba:	f7ff facf 	bl	802115c <_free_r>
 8021bbe:	2300      	movs	r3, #0
 8021bc0:	6363      	str	r3, [r4, #52]	; 0x34
 8021bc2:	89a3      	ldrh	r3, [r4, #12]
 8021bc4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021bc8:	81a3      	strh	r3, [r4, #12]
 8021bca:	2300      	movs	r3, #0
 8021bcc:	6063      	str	r3, [r4, #4]
 8021bce:	6923      	ldr	r3, [r4, #16]
 8021bd0:	6023      	str	r3, [r4, #0]
 8021bd2:	89a3      	ldrh	r3, [r4, #12]
 8021bd4:	f043 0308 	orr.w	r3, r3, #8
 8021bd8:	81a3      	strh	r3, [r4, #12]
 8021bda:	6923      	ldr	r3, [r4, #16]
 8021bdc:	b94b      	cbnz	r3, 8021bf2 <__swsetup_r+0x9a>
 8021bde:	89a3      	ldrh	r3, [r4, #12]
 8021be0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021be4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021be8:	d003      	beq.n	8021bf2 <__swsetup_r+0x9a>
 8021bea:	4621      	mov	r1, r4
 8021bec:	4630      	mov	r0, r6
 8021bee:	f000 f98b 	bl	8021f08 <__smakebuf_r>
 8021bf2:	89a0      	ldrh	r0, [r4, #12]
 8021bf4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021bf8:	f010 0301 	ands.w	r3, r0, #1
 8021bfc:	d00a      	beq.n	8021c14 <__swsetup_r+0xbc>
 8021bfe:	2300      	movs	r3, #0
 8021c00:	60a3      	str	r3, [r4, #8]
 8021c02:	6963      	ldr	r3, [r4, #20]
 8021c04:	425b      	negs	r3, r3
 8021c06:	61a3      	str	r3, [r4, #24]
 8021c08:	6923      	ldr	r3, [r4, #16]
 8021c0a:	b943      	cbnz	r3, 8021c1e <__swsetup_r+0xc6>
 8021c0c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021c10:	d1ba      	bne.n	8021b88 <__swsetup_r+0x30>
 8021c12:	bd70      	pop	{r4, r5, r6, pc}
 8021c14:	0781      	lsls	r1, r0, #30
 8021c16:	bf58      	it	pl
 8021c18:	6963      	ldrpl	r3, [r4, #20]
 8021c1a:	60a3      	str	r3, [r4, #8]
 8021c1c:	e7f4      	b.n	8021c08 <__swsetup_r+0xb0>
 8021c1e:	2000      	movs	r0, #0
 8021c20:	e7f7      	b.n	8021c12 <__swsetup_r+0xba>
 8021c22:	bf00      	nop
 8021c24:	200000fc 	.word	0x200000fc
 8021c28:	08025fb0 	.word	0x08025fb0
 8021c2c:	08025fd0 	.word	0x08025fd0
 8021c30:	08025f90 	.word	0x08025f90

08021c34 <__register_exitproc>:
 8021c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021c38:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021cf4 <__register_exitproc+0xc0>
 8021c3c:	4606      	mov	r6, r0
 8021c3e:	f8d8 0000 	ldr.w	r0, [r8]
 8021c42:	461f      	mov	r7, r3
 8021c44:	460d      	mov	r5, r1
 8021c46:	4691      	mov	r9, r2
 8021c48:	f7ff fa5f 	bl	802110a <__retarget_lock_acquire_recursive>
 8021c4c:	4b25      	ldr	r3, [pc, #148]	; (8021ce4 <__register_exitproc+0xb0>)
 8021c4e:	681c      	ldr	r4, [r3, #0]
 8021c50:	b934      	cbnz	r4, 8021c60 <__register_exitproc+0x2c>
 8021c52:	4c25      	ldr	r4, [pc, #148]	; (8021ce8 <__register_exitproc+0xb4>)
 8021c54:	601c      	str	r4, [r3, #0]
 8021c56:	4b25      	ldr	r3, [pc, #148]	; (8021cec <__register_exitproc+0xb8>)
 8021c58:	b113      	cbz	r3, 8021c60 <__register_exitproc+0x2c>
 8021c5a:	681b      	ldr	r3, [r3, #0]
 8021c5c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021c60:	6863      	ldr	r3, [r4, #4]
 8021c62:	2b1f      	cmp	r3, #31
 8021c64:	dd07      	ble.n	8021c76 <__register_exitproc+0x42>
 8021c66:	f8d8 0000 	ldr.w	r0, [r8]
 8021c6a:	f7ff fa50 	bl	802110e <__retarget_lock_release_recursive>
 8021c6e:	f04f 30ff 	mov.w	r0, #4294967295
 8021c72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021c76:	b34e      	cbz	r6, 8021ccc <__register_exitproc+0x98>
 8021c78:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021c7c:	b988      	cbnz	r0, 8021ca2 <__register_exitproc+0x6e>
 8021c7e:	4b1c      	ldr	r3, [pc, #112]	; (8021cf0 <__register_exitproc+0xbc>)
 8021c80:	b923      	cbnz	r3, 8021c8c <__register_exitproc+0x58>
 8021c82:	f8d8 0000 	ldr.w	r0, [r8]
 8021c86:	f7ff fa41 	bl	802110c <__retarget_lock_release>
 8021c8a:	e7f0      	b.n	8021c6e <__register_exitproc+0x3a>
 8021c8c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021c90:	f7ff fa3e 	bl	8021110 <malloc>
 8021c94:	2800      	cmp	r0, #0
 8021c96:	d0f4      	beq.n	8021c82 <__register_exitproc+0x4e>
 8021c98:	2300      	movs	r3, #0
 8021c9a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021c9e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021ca2:	6863      	ldr	r3, [r4, #4]
 8021ca4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021ca8:	2201      	movs	r2, #1
 8021caa:	409a      	lsls	r2, r3
 8021cac:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021cb0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021cb4:	4313      	orrs	r3, r2
 8021cb6:	2e02      	cmp	r6, #2
 8021cb8:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021cbc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021cc0:	bf02      	ittt	eq
 8021cc2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021cc6:	431a      	orreq	r2, r3
 8021cc8:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8021ccc:	6863      	ldr	r3, [r4, #4]
 8021cce:	f8d8 0000 	ldr.w	r0, [r8]
 8021cd2:	1c5a      	adds	r2, r3, #1
 8021cd4:	3302      	adds	r3, #2
 8021cd6:	6062      	str	r2, [r4, #4]
 8021cd8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021cdc:	f7ff fa17 	bl	802110e <__retarget_lock_release_recursive>
 8021ce0:	2000      	movs	r0, #0
 8021ce2:	e7c6      	b.n	8021c72 <__register_exitproc+0x3e>
 8021ce4:	2000edc8 	.word	0x2000edc8
 8021ce8:	2000ed3c 	.word	0x2000ed3c
 8021cec:	08026028 	.word	0x08026028
 8021cf0:	08021111 	.word	0x08021111
 8021cf4:	20000160 	.word	0x20000160

08021cf8 <_close_r>:
 8021cf8:	b538      	push	{r3, r4, r5, lr}
 8021cfa:	4d06      	ldr	r5, [pc, #24]	; (8021d14 <_close_r+0x1c>)
 8021cfc:	2300      	movs	r3, #0
 8021cfe:	4604      	mov	r4, r0
 8021d00:	4608      	mov	r0, r1
 8021d02:	602b      	str	r3, [r5, #0]
 8021d04:	f7e0 f992 	bl	800202c <_close>
 8021d08:	1c43      	adds	r3, r0, #1
 8021d0a:	d102      	bne.n	8021d12 <_close_r+0x1a>
 8021d0c:	682b      	ldr	r3, [r5, #0]
 8021d0e:	b103      	cbz	r3, 8021d12 <_close_r+0x1a>
 8021d10:	6023      	str	r3, [r4, #0]
 8021d12:	bd38      	pop	{r3, r4, r5, pc}
 8021d14:	2000f0c0 	.word	0x2000f0c0

08021d18 <__sflush_r>:
 8021d18:	898a      	ldrh	r2, [r1, #12]
 8021d1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021d1e:	4605      	mov	r5, r0
 8021d20:	0710      	lsls	r0, r2, #28
 8021d22:	460c      	mov	r4, r1
 8021d24:	d458      	bmi.n	8021dd8 <__sflush_r+0xc0>
 8021d26:	684b      	ldr	r3, [r1, #4]
 8021d28:	2b00      	cmp	r3, #0
 8021d2a:	dc05      	bgt.n	8021d38 <__sflush_r+0x20>
 8021d2c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021d2e:	2b00      	cmp	r3, #0
 8021d30:	dc02      	bgt.n	8021d38 <__sflush_r+0x20>
 8021d32:	2000      	movs	r0, #0
 8021d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021d38:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021d3a:	2e00      	cmp	r6, #0
 8021d3c:	d0f9      	beq.n	8021d32 <__sflush_r+0x1a>
 8021d3e:	2300      	movs	r3, #0
 8021d40:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021d44:	682f      	ldr	r7, [r5, #0]
 8021d46:	602b      	str	r3, [r5, #0]
 8021d48:	d032      	beq.n	8021db0 <__sflush_r+0x98>
 8021d4a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021d4c:	89a3      	ldrh	r3, [r4, #12]
 8021d4e:	075a      	lsls	r2, r3, #29
 8021d50:	d505      	bpl.n	8021d5e <__sflush_r+0x46>
 8021d52:	6863      	ldr	r3, [r4, #4]
 8021d54:	1ac0      	subs	r0, r0, r3
 8021d56:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021d58:	b10b      	cbz	r3, 8021d5e <__sflush_r+0x46>
 8021d5a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021d5c:	1ac0      	subs	r0, r0, r3
 8021d5e:	2300      	movs	r3, #0
 8021d60:	4602      	mov	r2, r0
 8021d62:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021d64:	6a21      	ldr	r1, [r4, #32]
 8021d66:	4628      	mov	r0, r5
 8021d68:	47b0      	blx	r6
 8021d6a:	1c43      	adds	r3, r0, #1
 8021d6c:	89a3      	ldrh	r3, [r4, #12]
 8021d6e:	d106      	bne.n	8021d7e <__sflush_r+0x66>
 8021d70:	6829      	ldr	r1, [r5, #0]
 8021d72:	291d      	cmp	r1, #29
 8021d74:	d82c      	bhi.n	8021dd0 <__sflush_r+0xb8>
 8021d76:	4a2a      	ldr	r2, [pc, #168]	; (8021e20 <__sflush_r+0x108>)
 8021d78:	40ca      	lsrs	r2, r1
 8021d7a:	07d6      	lsls	r6, r2, #31
 8021d7c:	d528      	bpl.n	8021dd0 <__sflush_r+0xb8>
 8021d7e:	2200      	movs	r2, #0
 8021d80:	6062      	str	r2, [r4, #4]
 8021d82:	04d9      	lsls	r1, r3, #19
 8021d84:	6922      	ldr	r2, [r4, #16]
 8021d86:	6022      	str	r2, [r4, #0]
 8021d88:	d504      	bpl.n	8021d94 <__sflush_r+0x7c>
 8021d8a:	1c42      	adds	r2, r0, #1
 8021d8c:	d101      	bne.n	8021d92 <__sflush_r+0x7a>
 8021d8e:	682b      	ldr	r3, [r5, #0]
 8021d90:	b903      	cbnz	r3, 8021d94 <__sflush_r+0x7c>
 8021d92:	6560      	str	r0, [r4, #84]	; 0x54
 8021d94:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021d96:	602f      	str	r7, [r5, #0]
 8021d98:	2900      	cmp	r1, #0
 8021d9a:	d0ca      	beq.n	8021d32 <__sflush_r+0x1a>
 8021d9c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021da0:	4299      	cmp	r1, r3
 8021da2:	d002      	beq.n	8021daa <__sflush_r+0x92>
 8021da4:	4628      	mov	r0, r5
 8021da6:	f7ff f9d9 	bl	802115c <_free_r>
 8021daa:	2000      	movs	r0, #0
 8021dac:	6360      	str	r0, [r4, #52]	; 0x34
 8021dae:	e7c1      	b.n	8021d34 <__sflush_r+0x1c>
 8021db0:	6a21      	ldr	r1, [r4, #32]
 8021db2:	2301      	movs	r3, #1
 8021db4:	4628      	mov	r0, r5
 8021db6:	47b0      	blx	r6
 8021db8:	1c41      	adds	r1, r0, #1
 8021dba:	d1c7      	bne.n	8021d4c <__sflush_r+0x34>
 8021dbc:	682b      	ldr	r3, [r5, #0]
 8021dbe:	2b00      	cmp	r3, #0
 8021dc0:	d0c4      	beq.n	8021d4c <__sflush_r+0x34>
 8021dc2:	2b1d      	cmp	r3, #29
 8021dc4:	d001      	beq.n	8021dca <__sflush_r+0xb2>
 8021dc6:	2b16      	cmp	r3, #22
 8021dc8:	d101      	bne.n	8021dce <__sflush_r+0xb6>
 8021dca:	602f      	str	r7, [r5, #0]
 8021dcc:	e7b1      	b.n	8021d32 <__sflush_r+0x1a>
 8021dce:	89a3      	ldrh	r3, [r4, #12]
 8021dd0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021dd4:	81a3      	strh	r3, [r4, #12]
 8021dd6:	e7ad      	b.n	8021d34 <__sflush_r+0x1c>
 8021dd8:	690f      	ldr	r7, [r1, #16]
 8021dda:	2f00      	cmp	r7, #0
 8021ddc:	d0a9      	beq.n	8021d32 <__sflush_r+0x1a>
 8021dde:	0793      	lsls	r3, r2, #30
 8021de0:	680e      	ldr	r6, [r1, #0]
 8021de2:	bf08      	it	eq
 8021de4:	694b      	ldreq	r3, [r1, #20]
 8021de6:	600f      	str	r7, [r1, #0]
 8021de8:	bf18      	it	ne
 8021dea:	2300      	movne	r3, #0
 8021dec:	eba6 0807 	sub.w	r8, r6, r7
 8021df0:	608b      	str	r3, [r1, #8]
 8021df2:	f1b8 0f00 	cmp.w	r8, #0
 8021df6:	dd9c      	ble.n	8021d32 <__sflush_r+0x1a>
 8021df8:	6a21      	ldr	r1, [r4, #32]
 8021dfa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021dfc:	4643      	mov	r3, r8
 8021dfe:	463a      	mov	r2, r7
 8021e00:	4628      	mov	r0, r5
 8021e02:	47b0      	blx	r6
 8021e04:	2800      	cmp	r0, #0
 8021e06:	dc06      	bgt.n	8021e16 <__sflush_r+0xfe>
 8021e08:	89a3      	ldrh	r3, [r4, #12]
 8021e0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021e0e:	81a3      	strh	r3, [r4, #12]
 8021e10:	f04f 30ff 	mov.w	r0, #4294967295
 8021e14:	e78e      	b.n	8021d34 <__sflush_r+0x1c>
 8021e16:	4407      	add	r7, r0
 8021e18:	eba8 0800 	sub.w	r8, r8, r0
 8021e1c:	e7e9      	b.n	8021df2 <__sflush_r+0xda>
 8021e1e:	bf00      	nop
 8021e20:	20400001 	.word	0x20400001

08021e24 <_fflush_r>:
 8021e24:	b538      	push	{r3, r4, r5, lr}
 8021e26:	690b      	ldr	r3, [r1, #16]
 8021e28:	4605      	mov	r5, r0
 8021e2a:	460c      	mov	r4, r1
 8021e2c:	b913      	cbnz	r3, 8021e34 <_fflush_r+0x10>
 8021e2e:	2500      	movs	r5, #0
 8021e30:	4628      	mov	r0, r5
 8021e32:	bd38      	pop	{r3, r4, r5, pc}
 8021e34:	b118      	cbz	r0, 8021e3e <_fflush_r+0x1a>
 8021e36:	6983      	ldr	r3, [r0, #24]
 8021e38:	b90b      	cbnz	r3, 8021e3e <_fflush_r+0x1a>
 8021e3a:	f7ff f891 	bl	8020f60 <__sinit>
 8021e3e:	4b14      	ldr	r3, [pc, #80]	; (8021e90 <_fflush_r+0x6c>)
 8021e40:	429c      	cmp	r4, r3
 8021e42:	d11b      	bne.n	8021e7c <_fflush_r+0x58>
 8021e44:	686c      	ldr	r4, [r5, #4]
 8021e46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e4a:	2b00      	cmp	r3, #0
 8021e4c:	d0ef      	beq.n	8021e2e <_fflush_r+0xa>
 8021e4e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8021e50:	07d0      	lsls	r0, r2, #31
 8021e52:	d404      	bmi.n	8021e5e <_fflush_r+0x3a>
 8021e54:	0599      	lsls	r1, r3, #22
 8021e56:	d402      	bmi.n	8021e5e <_fflush_r+0x3a>
 8021e58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021e5a:	f7ff f956 	bl	802110a <__retarget_lock_acquire_recursive>
 8021e5e:	4628      	mov	r0, r5
 8021e60:	4621      	mov	r1, r4
 8021e62:	f7ff ff59 	bl	8021d18 <__sflush_r>
 8021e66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021e68:	07da      	lsls	r2, r3, #31
 8021e6a:	4605      	mov	r5, r0
 8021e6c:	d4e0      	bmi.n	8021e30 <_fflush_r+0xc>
 8021e6e:	89a3      	ldrh	r3, [r4, #12]
 8021e70:	059b      	lsls	r3, r3, #22
 8021e72:	d4dd      	bmi.n	8021e30 <_fflush_r+0xc>
 8021e74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021e76:	f7ff f94a 	bl	802110e <__retarget_lock_release_recursive>
 8021e7a:	e7d9      	b.n	8021e30 <_fflush_r+0xc>
 8021e7c:	4b05      	ldr	r3, [pc, #20]	; (8021e94 <_fflush_r+0x70>)
 8021e7e:	429c      	cmp	r4, r3
 8021e80:	d101      	bne.n	8021e86 <_fflush_r+0x62>
 8021e82:	68ac      	ldr	r4, [r5, #8]
 8021e84:	e7df      	b.n	8021e46 <_fflush_r+0x22>
 8021e86:	4b04      	ldr	r3, [pc, #16]	; (8021e98 <_fflush_r+0x74>)
 8021e88:	429c      	cmp	r4, r3
 8021e8a:	bf08      	it	eq
 8021e8c:	68ec      	ldreq	r4, [r5, #12]
 8021e8e:	e7da      	b.n	8021e46 <_fflush_r+0x22>
 8021e90:	08025fb0 	.word	0x08025fb0
 8021e94:	08025fd0 	.word	0x08025fd0
 8021e98:	08025f90 	.word	0x08025f90

08021e9c <_lseek_r>:
 8021e9c:	b538      	push	{r3, r4, r5, lr}
 8021e9e:	4d07      	ldr	r5, [pc, #28]	; (8021ebc <_lseek_r+0x20>)
 8021ea0:	4604      	mov	r4, r0
 8021ea2:	4608      	mov	r0, r1
 8021ea4:	4611      	mov	r1, r2
 8021ea6:	2200      	movs	r2, #0
 8021ea8:	602a      	str	r2, [r5, #0]
 8021eaa:	461a      	mov	r2, r3
 8021eac:	f7e0 f8c8 	bl	8002040 <_lseek>
 8021eb0:	1c43      	adds	r3, r0, #1
 8021eb2:	d102      	bne.n	8021eba <_lseek_r+0x1e>
 8021eb4:	682b      	ldr	r3, [r5, #0]
 8021eb6:	b103      	cbz	r3, 8021eba <_lseek_r+0x1e>
 8021eb8:	6023      	str	r3, [r4, #0]
 8021eba:	bd38      	pop	{r3, r4, r5, pc}
 8021ebc:	2000f0c0 	.word	0x2000f0c0

08021ec0 <__swhatbuf_r>:
 8021ec0:	b570      	push	{r4, r5, r6, lr}
 8021ec2:	460e      	mov	r6, r1
 8021ec4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021ec8:	2900      	cmp	r1, #0
 8021eca:	b096      	sub	sp, #88	; 0x58
 8021ecc:	4614      	mov	r4, r2
 8021ece:	461d      	mov	r5, r3
 8021ed0:	da07      	bge.n	8021ee2 <__swhatbuf_r+0x22>
 8021ed2:	2300      	movs	r3, #0
 8021ed4:	602b      	str	r3, [r5, #0]
 8021ed6:	89b3      	ldrh	r3, [r6, #12]
 8021ed8:	061a      	lsls	r2, r3, #24
 8021eda:	d410      	bmi.n	8021efe <__swhatbuf_r+0x3e>
 8021edc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021ee0:	e00e      	b.n	8021f00 <__swhatbuf_r+0x40>
 8021ee2:	466a      	mov	r2, sp
 8021ee4:	f000 f86e 	bl	8021fc4 <_fstat_r>
 8021ee8:	2800      	cmp	r0, #0
 8021eea:	dbf2      	blt.n	8021ed2 <__swhatbuf_r+0x12>
 8021eec:	9a01      	ldr	r2, [sp, #4]
 8021eee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021ef2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021ef6:	425a      	negs	r2, r3
 8021ef8:	415a      	adcs	r2, r3
 8021efa:	602a      	str	r2, [r5, #0]
 8021efc:	e7ee      	b.n	8021edc <__swhatbuf_r+0x1c>
 8021efe:	2340      	movs	r3, #64	; 0x40
 8021f00:	2000      	movs	r0, #0
 8021f02:	6023      	str	r3, [r4, #0]
 8021f04:	b016      	add	sp, #88	; 0x58
 8021f06:	bd70      	pop	{r4, r5, r6, pc}

08021f08 <__smakebuf_r>:
 8021f08:	898b      	ldrh	r3, [r1, #12]
 8021f0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021f0c:	079d      	lsls	r5, r3, #30
 8021f0e:	4606      	mov	r6, r0
 8021f10:	460c      	mov	r4, r1
 8021f12:	d507      	bpl.n	8021f24 <__smakebuf_r+0x1c>
 8021f14:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021f18:	6023      	str	r3, [r4, #0]
 8021f1a:	6123      	str	r3, [r4, #16]
 8021f1c:	2301      	movs	r3, #1
 8021f1e:	6163      	str	r3, [r4, #20]
 8021f20:	b002      	add	sp, #8
 8021f22:	bd70      	pop	{r4, r5, r6, pc}
 8021f24:	ab01      	add	r3, sp, #4
 8021f26:	466a      	mov	r2, sp
 8021f28:	f7ff ffca 	bl	8021ec0 <__swhatbuf_r>
 8021f2c:	9900      	ldr	r1, [sp, #0]
 8021f2e:	4605      	mov	r5, r0
 8021f30:	4630      	mov	r0, r6
 8021f32:	f7ff f963 	bl	80211fc <_malloc_r>
 8021f36:	b948      	cbnz	r0, 8021f4c <__smakebuf_r+0x44>
 8021f38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021f3c:	059a      	lsls	r2, r3, #22
 8021f3e:	d4ef      	bmi.n	8021f20 <__smakebuf_r+0x18>
 8021f40:	f023 0303 	bic.w	r3, r3, #3
 8021f44:	f043 0302 	orr.w	r3, r3, #2
 8021f48:	81a3      	strh	r3, [r4, #12]
 8021f4a:	e7e3      	b.n	8021f14 <__smakebuf_r+0xc>
 8021f4c:	4b0d      	ldr	r3, [pc, #52]	; (8021f84 <__smakebuf_r+0x7c>)
 8021f4e:	62b3      	str	r3, [r6, #40]	; 0x28
 8021f50:	89a3      	ldrh	r3, [r4, #12]
 8021f52:	6020      	str	r0, [r4, #0]
 8021f54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021f58:	81a3      	strh	r3, [r4, #12]
 8021f5a:	9b00      	ldr	r3, [sp, #0]
 8021f5c:	6163      	str	r3, [r4, #20]
 8021f5e:	9b01      	ldr	r3, [sp, #4]
 8021f60:	6120      	str	r0, [r4, #16]
 8021f62:	b15b      	cbz	r3, 8021f7c <__smakebuf_r+0x74>
 8021f64:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021f68:	4630      	mov	r0, r6
 8021f6a:	f000 f83d 	bl	8021fe8 <_isatty_r>
 8021f6e:	b128      	cbz	r0, 8021f7c <__smakebuf_r+0x74>
 8021f70:	89a3      	ldrh	r3, [r4, #12]
 8021f72:	f023 0303 	bic.w	r3, r3, #3
 8021f76:	f043 0301 	orr.w	r3, r3, #1
 8021f7a:	81a3      	strh	r3, [r4, #12]
 8021f7c:	89a0      	ldrh	r0, [r4, #12]
 8021f7e:	4305      	orrs	r5, r0
 8021f80:	81a5      	strh	r5, [r4, #12]
 8021f82:	e7cd      	b.n	8021f20 <__smakebuf_r+0x18>
 8021f84:	08020ef9 	.word	0x08020ef9

08021f88 <__malloc_lock>:
 8021f88:	4801      	ldr	r0, [pc, #4]	; (8021f90 <__malloc_lock+0x8>)
 8021f8a:	f7ff b8be 	b.w	802110a <__retarget_lock_acquire_recursive>
 8021f8e:	bf00      	nop
 8021f90:	2000f0b8 	.word	0x2000f0b8

08021f94 <__malloc_unlock>:
 8021f94:	4801      	ldr	r0, [pc, #4]	; (8021f9c <__malloc_unlock+0x8>)
 8021f96:	f7ff b8ba 	b.w	802110e <__retarget_lock_release_recursive>
 8021f9a:	bf00      	nop
 8021f9c:	2000f0b8 	.word	0x2000f0b8

08021fa0 <_read_r>:
 8021fa0:	b538      	push	{r3, r4, r5, lr}
 8021fa2:	4d07      	ldr	r5, [pc, #28]	; (8021fc0 <_read_r+0x20>)
 8021fa4:	4604      	mov	r4, r0
 8021fa6:	4608      	mov	r0, r1
 8021fa8:	4611      	mov	r1, r2
 8021faa:	2200      	movs	r2, #0
 8021fac:	602a      	str	r2, [r5, #0]
 8021fae:	461a      	mov	r2, r3
 8021fb0:	f7e0 f822 	bl	8001ff8 <_read>
 8021fb4:	1c43      	adds	r3, r0, #1
 8021fb6:	d102      	bne.n	8021fbe <_read_r+0x1e>
 8021fb8:	682b      	ldr	r3, [r5, #0]
 8021fba:	b103      	cbz	r3, 8021fbe <_read_r+0x1e>
 8021fbc:	6023      	str	r3, [r4, #0]
 8021fbe:	bd38      	pop	{r3, r4, r5, pc}
 8021fc0:	2000f0c0 	.word	0x2000f0c0

08021fc4 <_fstat_r>:
 8021fc4:	b538      	push	{r3, r4, r5, lr}
 8021fc6:	4d07      	ldr	r5, [pc, #28]	; (8021fe4 <_fstat_r+0x20>)
 8021fc8:	2300      	movs	r3, #0
 8021fca:	4604      	mov	r4, r0
 8021fcc:	4608      	mov	r0, r1
 8021fce:	4611      	mov	r1, r2
 8021fd0:	602b      	str	r3, [r5, #0]
 8021fd2:	f7e0 f82e 	bl	8002032 <_fstat>
 8021fd6:	1c43      	adds	r3, r0, #1
 8021fd8:	d102      	bne.n	8021fe0 <_fstat_r+0x1c>
 8021fda:	682b      	ldr	r3, [r5, #0]
 8021fdc:	b103      	cbz	r3, 8021fe0 <_fstat_r+0x1c>
 8021fde:	6023      	str	r3, [r4, #0]
 8021fe0:	bd38      	pop	{r3, r4, r5, pc}
 8021fe2:	bf00      	nop
 8021fe4:	2000f0c0 	.word	0x2000f0c0

08021fe8 <_isatty_r>:
 8021fe8:	b538      	push	{r3, r4, r5, lr}
 8021fea:	4d06      	ldr	r5, [pc, #24]	; (8022004 <_isatty_r+0x1c>)
 8021fec:	2300      	movs	r3, #0
 8021fee:	4604      	mov	r4, r0
 8021ff0:	4608      	mov	r0, r1
 8021ff2:	602b      	str	r3, [r5, #0]
 8021ff4:	f7e0 f822 	bl	800203c <_isatty>
 8021ff8:	1c43      	adds	r3, r0, #1
 8021ffa:	d102      	bne.n	8022002 <_isatty_r+0x1a>
 8021ffc:	682b      	ldr	r3, [r5, #0]
 8021ffe:	b103      	cbz	r3, 8022002 <_isatty_r+0x1a>
 8022000:	6023      	str	r3, [r4, #0]
 8022002:	bd38      	pop	{r3, r4, r5, pc}
 8022004:	2000f0c0 	.word	0x2000f0c0

08022008 <_init>:
 8022008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802200a:	bf00      	nop
 802200c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802200e:	bc08      	pop	{r3}
 8022010:	469e      	mov	lr, r3
 8022012:	4770      	bx	lr

08022014 <_fini>:
 8022014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022016:	bf00      	nop
 8022018:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802201a:	bc08      	pop	{r3}
 802201c:	469e      	mov	lr, r3
 802201e:	4770      	bx	lr
