
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b304  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000329c  0801b4c4  0801b4c4  0002b4c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0801e760  0801e760  0002e760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801e778  0801e778  000403f4  2**0
                  CONTENTS
  5 .ARM          00000008  0801e778  0801e778  0002e778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801e780  0801e780  000403f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801e780  0801e780  0002e780  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801e798  0801e798  0002e798  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801e7a0  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a4c0  20000140  0801e8e0  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a600  0801e8e0  0003a600  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000403f4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  00040424  2**0
                  CONTENTS
 14 FontFlashSection 000003d4  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000020  900003d4  900003d4  000403d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   000494fd  00000000  00000000  00040424  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000991e0  00000000  00000000  00089921  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000133bd  00000000  00000000  00122b01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000028c0  00000000  00000000  00135ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012a875  00000000  00000000  00138780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 000040b8  00000000  00000000  00262ff8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0002506f  00000000  00000000  002670b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037b3e  00000000  00000000  0028c11f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  002c3c5d  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007bf8  00000000  00000000  002c3d30  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801b4ac 	.word	0x0801b4ac

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801b4ac 	.word	0x0801b4ac

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f003 f971 	bl	80038a8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f019 ff41 	bl	801a44c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff67 	bl	800149c <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0801e7a0 	.word	0x0801e7a0
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000a600 	.word	0x2000a600

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bde1 	b.w	80011b0 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be4f 	b.w	8001290 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f002 bcbf 	b.w	8002f78 <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f002 bcf6 	b.w	8002fec <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f019 fe87 	bl	801a35a <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f019 fe46 	bl	801a35a <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f019 fe3e 	bl	801a35a <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f003 f827 	bl	8003740 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f019 fe55 	bl	801a3b8 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	0801b550 	.word	0x0801b550
 8000718:	0801b563 	.word	0x0801b563
 800071c:	0801b58d 	.word	0x0801b58d

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f003 f845 	bl	80037bc <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f004 b8bf 	b.w	80048ec <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f004 b8a3 	b.w	80048ec <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f004 b891 	b.w	80048f6 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f004 f871 	bl	80048e0 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd86 	bl	8001394 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa17 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f003 fdf3 	bl	80044be <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa0a 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000a390 	.word	0x2000a390

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f009 f9c6 	bl	8009c80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd46 	b.w	8001392 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd5d 	b.w	80013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd5d 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd2f 	b.w	8001370 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd35 	b.w	8001380 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd59 	b.w	80013cc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800091c:	4b02      	ldr	r3, [pc, #8]	; (8000928 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000922:	f008 bb9f 	b.w	8009064 <_ZN8touchgfx3HAL10beginFrameEv>
 8000926:	bf00      	nop
 8000928:	20000014 	.word	0x20000014

0800092c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800092c:	b510      	push	{r4, lr}
 800092e:	4604      	mov	r4, r0
    HAL::endFrame();
 8000930:	f008 fba4 	bl	800907c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000934:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000938:	b113      	cbz	r3, 8000940 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800093a:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800093c:	2201      	movs	r2, #1
 800093e:	701a      	strb	r2, [r3, #0]
    }
}
 8000940:	bd10      	pop	{r4, pc}
 8000942:	bf00      	nop
 8000944:	20000014 	.word	0x20000014

08000948 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000948:	f008 bb52 	b.w	8008ff0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094c <_ZN11TouchGFXHALD0Ev>:
 800094c:	b510      	push	{r4, lr}
 800094e:	217c      	movs	r1, #124	; 0x7c
 8000950:	4604      	mov	r4, r0
 8000952:	f019 fd02 	bl	801a35a <_ZdlPvj>
 8000956:	4620      	mov	r0, r4
 8000958:	bd10      	pop	{r4, pc}

0800095a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800095e:	b11b      	cbz	r3, 8000968 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000960:	6840      	ldr	r0, [r0, #4]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4718      	bx	r3
    }
 8000968:	4618      	mov	r0, r3
 800096a:	4770      	bx	lr

0800096c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800096c:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800096e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000972:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000976:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000978:	428c      	cmp	r4, r1
 800097a:	781a      	ldrb	r2, [r3, #0]
 800097c:	d00d      	beq.n	800099a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800097e:	b95a      	cbnz	r2, 8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000980:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000982:	490f      	ldr	r1, [pc, #60]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000984:	480f      	ldr	r0, [pc, #60]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000986:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000988:	4d0f      	ldr	r5, [pc, #60]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800098a:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800098c:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800098e:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000990:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8000992:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000994:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000996:	701a      	strb	r2, [r3, #0]
    }
 8000998:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800099a:	2a00      	cmp	r2, #0
 800099c:	d0fc      	beq.n	8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800099e:	4809      	ldr	r0, [pc, #36]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80009a0:	4a07      	ldr	r2, [pc, #28]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80009a2:	8801      	ldrh	r1, [r0, #0]
 80009a4:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80009a6:	4a05      	ldr	r2, [pc, #20]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80009a8:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80009aa:	8814      	ldrh	r4, [r2, #0]
 80009ac:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80009ae:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80009b0:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80009b2:	2200      	movs	r2, #0
 80009b4:	e7ef      	b.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80009b6:	bf00      	nop
 80009b8:	2000a08c 	.word	0x2000a08c
 80009bc:	2000a088 	.word	0x2000a088
 80009c0:	2000a08e 	.word	0x2000a08e
 80009c4:	2000a08a 	.word	0x2000a08a
 80009c8:	2000a090 	.word	0x2000a090

080009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009cc:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009ce:	4c0c      	ldr	r4, [pc, #48]	; (8000a00 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009d0:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009d2:	b931      	cbnz	r1, 80009e2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009d4:	4b0b      	ldr	r3, [pc, #44]	; (8000a04 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009d6:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009da:	f44f 7125 	mov.w	r1, #660	; 0x294
 80009de:	f019 fceb 	bl	801a3b8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009e6:	3a00      	subs	r2, #0
 80009e8:	4909      	ldr	r1, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ec:	bf18      	it	ne
 80009ee:	2201      	movne	r2, #1
 80009f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009f2:	3b00      	subs	r3, #0
 80009f4:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009f6:	bf18      	it	ne
 80009f8:	2301      	movne	r3, #1
 80009fa:	7013      	strb	r3, [r2, #0]
}
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000174 	.word	0x20000174
 8000a04:	0801b604 	.word	0x0801b604
 8000a08:	0801b63c 	.word	0x0801b63c
 8000a0c:	0801b68a 	.word	0x0801b68a
 8000a10:	2000a092 	.word	0x2000a092
 8000a14:	2000a093 	.word	0x2000a093

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f003 fd48 	bl	80044be <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f003 fd4d 	bl	80044e0 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000a390 	.word	0x2000a390

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f003 fd3b 	bl	80044e0 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f003 fd23 	bl	80044be <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	2000018c 	.word	0x2000018c
 8000a80:	2000a390 	.word	0x2000a390

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc7c 	b.w	8001390 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f003 fd17 	bl	80044e0 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000a390 	.word	0x2000a390

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f009 f8bf 	bl	8009c80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f003 fcc6 	bl	800449e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000a094 	.word	0x2000a094
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	2000018e 	.word	0x2000018e
 8000b24:	20000178 	.word	0x20000178

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f003 bc84 	b.w	800449e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	69db      	ldr	r3, [r3, #28]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	20000178 	.word	0x20000178
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000174 	.word	0x20000174
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	2000018e 	.word	0x2000018e
 8000c14:	2000a094 	.word	0x2000a094

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f009 f846 	bl	8009cb4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000a094 	.word	0x2000a094

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	20000180 	.word	0x20000180
 8000c4c:	2000017c 	.word	0x2000017c
 8000c50:	0801b514 	.word	0x0801b514
 8000c54:	0801b53c 	.word	0x0801b53c

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f005 feb5 	bl	80069ce <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f019 fba1 	bl	801a3b8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f005 ff46 	bl	8006b0c <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	212b      	movs	r1, #43	; 0x2b
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	20000194 	.word	0x20000194
 8000c94:	0801b79c 	.word	0x0801b79c
 8000c98:	0801b7e5 	.word	0x0801b7e5
 8000c9c:	0801b814 	.word	0x0801b814
 8000ca0:	20000190 	.word	0x20000190
 8000ca4:	0801b872 	.word	0x0801b872

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f005 bed8 	b.w	8006a64 <osSemaphoreAcquire>
 8000cb4:	20000194 	.word	0x20000194

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f005 befe 	b.w	8006abc <osSemaphoreRelease>
 8000cc0:	20000194 	.word	0x20000194

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f005 becb 	b.w	8006a64 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	20000194 	.word	0x20000194

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f005 bf4f 	b.w	8006b84 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	20000190 	.word	0x20000190
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f005 ff72 	bl	8006be4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f005 ff6b 	bl	8006be4 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190

08000d18 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d18:	6803      	ldr	r3, [r0, #0]
 8000d1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d1c:	4718      	bx	r3

08000d1e <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d1e:	2001      	movs	r0, #1
 8000d20:	4770      	bx	lr

08000d22 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d22:	6803      	ldr	r3, [r0, #0]
 8000d24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d26:	4718      	bx	r3

08000d28 <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d28:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	9301      	str	r3, [sp, #4]
 8000d2e:	4b0d      	ldr	r3, [pc, #52]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d32:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d36:	631a      	str	r2, [r3, #48]	; 0x30
 8000d38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d3e:	9201      	str	r2, [sp, #4]
 8000d40:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d42:	691a      	ldr	r2, [r3, #16]
 8000d44:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d48:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4a:	691a      	ldr	r2, [r3, #16]
 8000d4c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d50:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b05      	ldr	r3, [pc, #20]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d54:	4a05      	ldr	r2, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d56:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d58:	4b05      	ldr	r3, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d5e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d60:	b002      	add	sp, #8
 8000d62:	4770      	bx	lr
 8000d64:	40023800 	.word	0x40023800
 8000d68:	2000a458 	.word	0x2000a458
 8000d6c:	08000d7d 	.word	0x08000d7d
 8000d70:	e000e100 	.word	0xe000e100

08000d74 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d74:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000d78:	4770      	bx	lr
	...

08000d7c <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000d7c:	4b02      	ldr	r3, [pc, #8]	; (8000d88 <DMA2D_XferCpltCallback+0xc>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d82:	6803      	ldr	r3, [r0, #0]
 8000d84:	695b      	ldr	r3, [r3, #20]
 8000d86:	4718      	bx	r3
 8000d88:	2000a094 	.word	0x2000a094

08000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d8c:	b508      	push	{r3, lr}
 8000d8e:	280b      	cmp	r0, #11
 8000d90:	d80b      	bhi.n	8000daa <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d92:	e8df f000 	tbb	[pc, r0]
 8000d96:	0612      	.short	0x0612
 8000d98:	0a0a0a10 	.word	0x0a0a0a10
 8000d9c:	0808080a 	.word	0x0808080a
 8000da0:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da2:	2001      	movs	r0, #1
}
 8000da4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000da6:	2005      	movs	r0, #5
        break;
 8000da8:	e7fc      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000daa:	4b05      	ldr	r3, [pc, #20]	; (8000dc0 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dac:	4a05      	ldr	r2, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dae:	4806      	ldr	r0, [pc, #24]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db0:	2165      	movs	r1, #101	; 0x65
 8000db2:	f019 fb01 	bl	801a3b8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000db6:	2000      	movs	r0, #0
 8000db8:	e7f4      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dbc:	e7f2      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dbe:	bf00      	nop
 8000dc0:	0801b8b4 	.word	0x0801b8b4
 8000dc4:	0801b8cf 	.word	0x0801b8cf
 8000dc8:	0801b91b 	.word	0x0801b91b

08000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dcc:	b508      	push	{r3, lr}
 8000dce:	280a      	cmp	r0, #10
 8000dd0:	d809      	bhi.n	8000de6 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd2:	e8df f000 	tbb	[pc, r0]
 8000dd6:	0610      	.short	0x0610
 8000dd8:	0808080e 	.word	0x0808080e
 8000ddc:	06060608 	.word	0x06060608
 8000de0:	06          	.byte	0x06
 8000de1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de2:	2001      	movs	r0, #1
}
 8000de4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000de6:	4b05      	ldr	r3, [pc, #20]	; (8000dfc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000de8:	4a05      	ldr	r2, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dea:	4806      	ldr	r0, [pc, #24]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dec:	2186      	movs	r1, #134	; 0x86
 8000dee:	f019 fae3 	bl	801a3b8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df2:	2000      	movs	r0, #0
 8000df4:	e7f6      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000df6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000df8:	e7f4      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfa:	bf00      	nop
 8000dfc:	0801b8b4 	.word	0x0801b8b4
 8000e00:	0801b977 	.word	0x0801b977
 8000e04:	0801b91b 	.word	0x0801b91b

08000e08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e12:	4640      	mov	r0, r8
 8000e14:	f7ff ffba 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e18:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	4638      	mov	r0, r7
 8000e1e:	f7ff ffb5 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e22:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e24:	4638      	mov	r0, r7
 8000e26:	f7ff ffd1 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2a:	8aa1      	ldrh	r1, [r4, #20]
 8000e2c:	8b62      	ldrh	r2, [r4, #26]
 8000e2e:	4b50      	ldr	r3, [pc, #320]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000e30:	1a52      	subs	r2, r2, r1
 8000e32:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e34:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e36:	8b22      	ldrh	r2, [r4, #24]
 8000e38:	1a52      	subs	r2, r2, r1
 8000e3a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e3c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e3e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e44:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e46:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e48:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e4e:	f8d4 c000 	ldr.w	ip, [r4]
 8000e52:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e56:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e5a:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e5e:	469e      	mov	lr, r3
 8000e60:	d03a      	beq.n	8000ed8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000e62:	d814      	bhi.n	8000e8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000e64:	f1bc 0f20 	cmp.w	ip, #32
 8000e68:	ea45 0002 	orr.w	r0, r5, r2
 8000e6c:	d072      	beq.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
 8000e6e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e72:	d06f      	beq.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
 8000e74:	f1bc 0f04 	cmp.w	ip, #4
 8000e78:	d02a      	beq.n	8000ed0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e7a:	4b3d      	ldr	r3, [pc, #244]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000e7c:	432a      	orrs	r2, r5
 8000e7e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e82:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e84:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e86:	d152      	bne.n	8000f2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000e88:	f240 2201 	movw	r2, #513	; 0x201
 8000e8c:	e01e      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
    switch (blitOp.operation)
 8000e8e:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000e92:	d007      	beq.n	8000ea4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000e94:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000e98:	d1ef      	bne.n	8000e7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e9a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000e9e:	f042 0209 	orr.w	r2, r2, #9
 8000ea2:	e003      	b.n	8000eac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ea8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eac:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000eae:	68e0      	ldr	r0, [r4, #12]
 8000eb0:	0202      	lsls	r2, r0, #8
 8000eb2:	0144      	lsls	r4, r0, #5
 8000eb4:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000eb8:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ebc:	00c0      	lsls	r0, r0, #3
 8000ebe:	4322      	orrs	r2, r4
 8000ec0:	b2c0      	uxtb	r0, r0
 8000ec2:	4302      	orrs	r2, r0
 8000ec4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ec6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ec8:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000eca:	4a2a      	ldr	r2, [pc, #168]	; (8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ecc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ece:	e04c      	b.n	8000f6a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed0:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000ed4:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ed6:	e7f6      	b.n	8000ec6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ed8:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eda:	432a      	orrs	r2, r5
 8000edc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ee0:	1d04      	adds	r4, r0, #4
 8000ee2:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee4:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000ee6:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ee8:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000eea:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000eec:	b142      	cbz	r2, 8000f00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
 8000eee:	2a01      	cmp	r2, #1
 8000ef0:	d01f      	beq.n	8000f32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
                assert(0 && "Unsupported format");
 8000ef2:	4b21      	ldr	r3, [pc, #132]	; (8000f78 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>)
 8000ef4:	4a21      	ldr	r2, [pc, #132]	; (8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000ef6:	4822      	ldr	r0, [pc, #136]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000ef8:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000efc:	f019 fa5c 	bl	801a3b8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f00:	8842      	ldrh	r2, [r0, #2]
 8000f02:	69d9      	ldr	r1, [r3, #28]
 8000f04:	1e50      	subs	r0, r2, #1
 8000f06:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f0a:	f022 0210 	bic.w	r2, r2, #16
 8000f0e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f12:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f14:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f16:	4b16      	ldr	r3, [pc, #88]	; (8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f18:	69da      	ldr	r2, [r3, #28]
 8000f1a:	f042 0220 	orr.w	r2, r2, #32
 8000f1e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f20:	69da      	ldr	r2, [r3, #28]
 8000f22:	0692      	lsls	r2, r2, #26
 8000f24:	d4fc      	bmi.n	8000f20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x118>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f26:	2210      	movs	r2, #16
 8000f28:	609a      	str	r2, [r3, #8]
            if (blend)
 8000f2a:	2c00      	cmp	r4, #0
 8000f2c:	d1cd      	bne.n	8000eca <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f2e:	4a15      	ldr	r2, [pc, #84]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
 8000f30:	e7cc      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f32:	8842      	ldrh	r2, [r0, #2]
 8000f34:	69d9      	ldr	r1, [r3, #28]
 8000f36:	1e50      	subs	r0, r2, #1
 8000f38:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f3c:	f022 0210 	bic.w	r2, r2, #16
 8000f40:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000f44:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f48:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000f4c:	bf18      	it	ne
 8000f4e:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f50:	61da      	str	r2, [r3, #28]
                break;
 8000f52:	e7e0      	b.n	8000f16 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f54:	4b07      	ldr	r3, [pc, #28]	; (8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f56:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f5a:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f5e:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f62:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f66:	f8ce 3000 	str.w	r3, [lr]
}
 8000f6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f6e:	bf00      	nop
 8000f70:	4002b000 	.word	0x4002b000
 8000f74:	00020201 	.word	0x00020201
 8000f78:	0801b9c4 	.word	0x0801b9c4
 8000f7c:	0801b9de 	.word	0x0801b9de
 8000f80:	0801b91b 	.word	0x0801b91b
 8000f84:	00010201 	.word	0x00010201

08000f88 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f8a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000f8c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f8e:	4630      	mov	r0, r6
 8000f90:	f7ff ff1c 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f94:	8aa7      	ldrh	r7, [r4, #20]
 8000f96:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f98:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f9a:	4b1e      	ldr	r3, [pc, #120]	; (8001014 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f9c:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f9e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa0:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fa4:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa6:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa8:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000faa:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fac:	6821      	ldr	r1, [r4, #0]
 8000fae:	2908      	cmp	r1, #8
 8000fb0:	d118      	bne.n	8000fe4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fb8:	7f21      	ldrb	r1, [r4, #28]
 8000fba:	4a17      	ldr	r2, [pc, #92]	; (8001018 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fbc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fc0:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fc2:	68e1      	ldr	r1, [r4, #12]
 8000fc4:	020a      	lsls	r2, r1, #8
 8000fc6:	0148      	lsls	r0, r1, #5
 8000fc8:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fcc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fd0:	00c9      	lsls	r1, r1, #3
 8000fd2:	4302      	orrs	r2, r0
 8000fd4:	b2c9      	uxtb	r1, r1
 8000fd6:	430a      	orrs	r2, r1
 8000fd8:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fda:	4a10      	ldr	r2, [pc, #64]	; (800101c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fdc:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fde:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000fe0:	601a      	str	r2, [r3, #0]
    }
}
 8000fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe4:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fe6:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe8:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000fea:	68e1      	ldr	r1, [r4, #12]
 8000fec:	b91e      	cbnz	r6, 8000ff6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000fee:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff0:	4b08      	ldr	r3, [pc, #32]	; (8001014 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8000ff2:	4a0b      	ldr	r2, [pc, #44]	; (8001020 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8000ff4:	e7f4      	b.n	8000fe0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000ff6:	020a      	lsls	r2, r1, #8
 8000ff8:	0148      	lsls	r0, r1, #5
 8000ffa:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000ffe:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001002:	00c9      	lsls	r1, r1, #3
 8001004:	b2c9      	uxtb	r1, r1
 8001006:	4302      	orrs	r2, r0
 8001008:	430a      	orrs	r2, r1
 800100a:	7f21      	ldrb	r1, [r4, #28]
 800100c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001010:	639a      	str	r2, [r3, #56]	; 0x38
 8001012:	e7ed      	b.n	8000ff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001014:	4002b000 	.word	0x4002b000
 8001018:	00010009 	.word	0x00010009
 800101c:	00020201 	.word	0x00020201
 8001020:	00030201 	.word	0x00030201

08001024 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001024:	4b05      	ldr	r3, [pc, #20]	; (800103c <_ZN10STM32F4DMAD1Ev+0x18>)
 8001026:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001028:	4b05      	ldr	r3, [pc, #20]	; (8001040 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800102a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800102e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001032:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001036:	f3bf 8f6f 	isb	sy
}
 800103a:	4770      	bx	lr
 800103c:	0801ba28 	.word	0x0801ba28
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001044:	b510      	push	{r4, lr}
 8001046:	4604      	mov	r4, r0
}
 8001048:	f7ff ffec 	bl	8001024 <_ZN10STM32F4DMAD1Ev>
 800104c:	4620      	mov	r0, r4
 800104e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001052:	f019 f982 	bl	801a35a <_ZdlPvj>
 8001056:	4620      	mov	r0, r4
 8001058:	bd10      	pop	{r4, pc}
	...

0800105c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800105c:	b570      	push	{r4, r5, r6, lr}
 800105e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001060:	4625      	mov	r5, r4
 8001062:	4b0a      	ldr	r3, [pc, #40]	; (800108c <_ZN10STM32F4DMAC1Ev+0x30>)
 8001064:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001066:	2600      	movs	r6, #0
 8001068:	6060      	str	r0, [r4, #4]
 800106a:	7226      	strb	r6, [r4, #8]
 800106c:	7266      	strb	r6, [r4, #9]
 800106e:	f845 3b20 	str.w	r3, [r5], #32
 8001072:	2260      	movs	r2, #96	; 0x60
 8001074:	4629      	mov	r1, r5
 8001076:	f008 ff55 	bl	8009f24 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800107a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800107e:	60ee      	str	r6, [r5, #12]
 8001080:	3520      	adds	r5, #32
 8001082:	42ab      	cmp	r3, r5
 8001084:	d1fb      	bne.n	800107e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8001086:	4620      	mov	r0, r4
 8001088:	bd70      	pop	{r4, r5, r6, pc}
 800108a:	bf00      	nop
 800108c:	0801ba28 	.word	0x0801ba28

08001090 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001090:	2001      	movs	r0, #1
 8001092:	4770      	bx	lr

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001094:	200c      	movs	r0, #12
 8001096:	4770      	bx	lr

08001098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001098:	230c      	movs	r3, #12
 800109a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800109e:	3008      	adds	r0, #8
 80010a0:	4770      	bx	lr

080010a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010a2:	230c      	movs	r3, #12
 80010a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010a8:	3008      	adds	r0, #8
 80010aa:	4770      	bx	lr

080010ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010ac:	2001      	movs	r0, #1
 80010ae:	4770      	bx	lr

080010b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010b0:	20d4      	movs	r0, #212	; 0xd4
 80010b2:	4770      	bx	lr

080010b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010b4:	23d4      	movs	r3, #212	; 0xd4
 80010b6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ba:	3008      	adds	r0, #8
 80010bc:	4770      	bx	lr

080010be <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010be:	23d4      	movs	r3, #212	; 0xd4
 80010c0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c4:	3008      	adds	r0, #8
 80010c6:	4770      	bx	lr

080010c8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010c8:	2001      	movs	r0, #1
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010cc:	2010      	movs	r0, #16
 80010ce:	4770      	bx	lr

080010d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010d4:	3008      	adds	r0, #8
 80010d6:	4770      	bx	lr

080010d8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010e0:	4608      	mov	r0, r1
 80010e2:	f001 b82b 	b.w	800213c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4b03      	ldr	r3, [pc, #12]	; (80010f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ec:	6003      	str	r3, [r0, #0]
 80010ee:	4604      	mov	r4, r0
 80010f0:	f007 fd92 	bl	8008c18 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010f4:	4620      	mov	r0, r4
 80010f6:	bd10      	pop	{r4, pc}
 80010f8:	0801bae0 	.word	0x0801bae0

080010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4604      	mov	r4, r0
 8001100:	f7ff fff2 	bl	80010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001104:	4620      	mov	r0, r4
 8001106:	2114      	movs	r1, #20
 8001108:	f019 f927 	bl	801a35a <_ZdlPvj>
 800110c:	4620      	mov	r0, r4
 800110e:	bd10      	pop	{r4, pc}

08001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001110:	b510      	push	{r4, lr}
 8001112:	4b03      	ldr	r3, [pc, #12]	; (8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001114:	6003      	str	r3, [r0, #0]
 8001116:	4604      	mov	r4, r0
 8001118:	f007 fd7e 	bl	8008c18 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}
 8001120:	0801baac 	.word	0x0801baac

08001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001124:	b510      	push	{r4, lr}
 8001126:	4604      	mov	r4, r0
 8001128:	f7ff fff2 	bl	8001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	21dc      	movs	r1, #220	; 0xdc
 8001130:	f019 f913 	bl	801a35a <_ZdlPvj>
 8001134:	4620      	mov	r0, r4
 8001136:	bd10      	pop	{r4, pc}

08001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001138:	b510      	push	{r4, lr}
 800113a:	4b03      	ldr	r3, [pc, #12]	; (8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800113c:	6003      	str	r3, [r0, #0]
 800113e:	4604      	mov	r4, r0
 8001140:	f007 fd6a 	bl	8008c18 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001144:	4620      	mov	r0, r4
 8001146:	bd10      	pop	{r4, pc}
 8001148:	0801ba78 	.word	0x0801ba78

0800114c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800114c:	b510      	push	{r4, lr}
 800114e:	4604      	mov	r4, r0
 8001150:	f7ff fff2 	bl	8001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001154:	4620      	mov	r0, r4
 8001156:	2118      	movs	r1, #24
 8001158:	f019 f8ff 	bl	801a35a <_ZdlPvj>
 800115c:	4620      	mov	r0, r4
 800115e:	bd10      	pop	{r4, pc}

08001160 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001160:	b510      	push	{r4, lr}
 8001162:	4b08      	ldr	r3, [pc, #32]	; (8001184 <_ZN12FrontendHeapD1Ev+0x24>)
 8001164:	6003      	str	r3, [r0, #0]
 8001166:	4604      	mov	r4, r0
 8001168:	f500 7084 	add.w	r0, r0, #264	; 0x108
 800116c:	f7ff ffbc 	bl	80010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001170:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001174:	f7ff ffcc 	bl	8001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001178:	f104 0014 	add.w	r0, r4, #20
 800117c:	f7ff ffdc 	bl	8001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001180:	4620      	mov	r0, r4
 8001182:	bd10      	pop	{r4, pc}
 8001184:	0801bb14 	.word	0x0801bb14

08001188 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001188:	b508      	push	{r3, lr}
 800118a:	4802      	ldr	r0, [pc, #8]	; (8001194 <__tcf_0+0xc>)
 800118c:	f7ff ffe8 	bl	8001160 <_ZN12FrontendHeapD1Ev>
 8001190:	bd08      	pop	{r3, pc}
 8001192:	bf00      	nop
 8001194:	2000019c 	.word	0x2000019c

08001198 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001198:	b510      	push	{r4, lr}
 800119a:	4604      	mov	r4, r0
 800119c:	f7ff ffe0 	bl	8001160 <_ZN12FrontendHeapD1Ev>
 80011a0:	4620      	mov	r0, r4
 80011a2:	f44f 711e 	mov.w	r1, #632	; 0x278
 80011a6:	f019 f8d8 	bl	801a35a <_ZdlPvj>
 80011aa:	4620      	mov	r0, r4
 80011ac:	bd10      	pop	{r4, pc}
	...

080011b0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011b4:	f000 ff04 	bl	8001fc0 <_ZN14BitmapDatabase11getInstanceEv>
 80011b8:	4605      	mov	r5, r0
 80011ba:	f000 ff05 	bl	8001fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011be:	2400      	movs	r4, #0
 80011c0:	4601      	mov	r1, r0
 80011c2:	4623      	mov	r3, r4
 80011c4:	4628      	mov	r0, r5
 80011c6:	4622      	mov	r2, r4
 80011c8:	9400      	str	r4, [sp, #0]
 80011ca:	f00d fa13 	bl	800e5f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011ce:	4b25      	ldr	r3, [pc, #148]	; (8001264 <touchgfx_init+0xb4>)
 80011d0:	4a25      	ldr	r2, [pc, #148]	; (8001268 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011d2:	4d26      	ldr	r5, [pc, #152]	; (800126c <touchgfx_init+0xbc>)
 80011d4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011d6:	4620      	mov	r0, r4
 80011d8:	f001 fadc 	bl	8002794 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011dc:	4824      	ldr	r0, [pc, #144]	; (8001270 <touchgfx_init+0xc0>)
 80011de:	f00d f94b 	bl	800e478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011e2:	782b      	ldrb	r3, [r5, #0]
 80011e4:	f3bf 8f5b 	dmb	ish
 80011e8:	07db      	lsls	r3, r3, #31
 80011ea:	d435      	bmi.n	8001258 <touchgfx_init+0xa8>
 80011ec:	4628      	mov	r0, r5
 80011ee:	f019 f8b6 	bl	801a35e <__cxa_guard_acquire>
 80011f2:	b388      	cbz	r0, 8001258 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80011f4:	4c1f      	ldr	r4, [pc, #124]	; (8001274 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80011f6:	4b20      	ldr	r3, [pc, #128]	; (8001278 <touchgfx_init+0xc8>)
 80011f8:	6023      	str	r3, [r4, #0]
 80011fa:	f504 7690 	add.w	r6, r4, #288	; 0x120
 80011fe:	f104 0014 	add.w	r0, r4, #20
 8001202:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001206:	f504 7784 	add.w	r7, r4, #264	; 0x108
 800120a:	6060      	str	r0, [r4, #4]
 800120c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001210:	60e7      	str	r7, [r4, #12]
 8001212:	6126      	str	r6, [r4, #16]
 8001214:	f007 fd02 	bl	8008c1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001218:	4b18      	ldr	r3, [pc, #96]	; (800127c <touchgfx_init+0xcc>)
 800121a:	6163      	str	r3, [r4, #20]
 800121c:	4640      	mov	r0, r8
 800121e:	f007 fcfd 	bl	8008c1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001222:	4b17      	ldr	r3, [pc, #92]	; (8001280 <touchgfx_init+0xd0>)
 8001224:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001226:	4638      	mov	r0, r7
 8001228:	f007 fcf8 	bl	8008c1c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800122c:	4b15      	ldr	r3, [pc, #84]	; (8001284 <touchgfx_init+0xd4>)
 800122e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8001232:	f504 708e 	add.w	r0, r4, #284	; 0x11c
 8001236:	f001 fb29 	bl	800288c <_ZN5ModelC1Ev>
 800123a:	4622      	mov	r2, r4
 800123c:	f504 718e 	add.w	r1, r4, #284	; 0x11c
 8001240:	4630      	mov	r0, r6
 8001242:	f001 fb19 	bl	8002878 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001246:	4630      	mov	r0, r6
 8001248:	f000 ff78 	bl	800213c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800124c:	4628      	mov	r0, r5
 800124e:	f019 f892 	bl	801a376 <__cxa_guard_release>
 8001252:	480d      	ldr	r0, [pc, #52]	; (8001288 <touchgfx_init+0xd8>)
 8001254:	f019 f8ce 	bl	801a3f4 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001258:	480c      	ldr	r0, [pc, #48]	; (800128c <touchgfx_init+0xdc>)
}
 800125a:	b002      	add	sp, #8
 800125c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001260:	f7ff bb0a 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001264:	2000a0f0 	.word	0x2000a0f0
 8001268:	200010b4 	.word	0x200010b4
 800126c:	20000198 	.word	0x20000198
 8001270:	2000001c 	.word	0x2000001c
 8001274:	2000019c 	.word	0x2000019c
 8001278:	0801bb14 	.word	0x0801bb14
 800127c:	0801ba78 	.word	0x0801ba78
 8001280:	0801baac 	.word	0x0801baac
 8001284:	0801bae0 	.word	0x0801bae0
 8001288:	08001189 	.word	0x08001189
 800128c:	20001038 	.word	0x20001038

08001290 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001290:	4801      	ldr	r0, [pc, #4]	; (8001298 <touchgfx_taskEntry+0x8>)
 8001292:	f7ff bb0b 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 8001296:	bf00      	nop
 8001298:	20001038 	.word	0x20001038

0800129c <_GLOBAL__sub_I_touchgfx_init>:
}
 800129c:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 800129e:	4c24      	ldr	r4, [pc, #144]	; (8001330 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012a0:	4e24      	ldr	r6, [pc, #144]	; (8001334 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012a2:	4b25      	ldr	r3, [pc, #148]	; (8001338 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012a4:	4d25      	ldr	r5, [pc, #148]	; (800133c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012a6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012a8:	4630      	mov	r0, r6
 80012aa:	f7ff fed7 	bl	800105c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012ae:	4628      	mov	r0, r5
 80012b0:	f010 fa24 	bl	80116fc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012b4:	4b22      	ldr	r3, [pc, #136]	; (8001340 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012bc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012c0:	4920      	ldr	r1, [pc, #128]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012c2:	60dc      	str	r4, [r3, #12]
 80012c4:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012c8:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012cc:	6759      	str	r1, [r3, #116]	; 0x74
 80012ce:	2101      	movs	r1, #1
 80012d0:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012d4:	491c      	ldr	r1, [pc, #112]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012d6:	4c1d      	ldr	r4, [pc, #116]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 80012d8:	600b      	str	r3, [r1, #0]
        DISPLAY_WIDTH = width;
 80012da:	491d      	ldr	r1, [pc, #116]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012dc:	851a      	strh	r2, [r3, #40]	; 0x28
 80012de:	f44f 7050 	mov.w	r0, #832	; 0x340
 80012e2:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 80012e4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 80012e8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80012ec:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012f0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012f4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 80012f8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012fc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001300:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001304:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001308:	62da      	str	r2, [r3, #44]	; 0x2c
 800130a:	861a      	strh	r2, [r3, #48]	; 0x30
 800130c:	661a      	str	r2, [r3, #96]	; 0x60
 800130e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001312:	671a      	str	r2, [r3, #112]	; 0x70
 8001314:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_HEIGHT = height;
 8001318:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 800131a:	4c0e      	ldr	r4, [pc, #56]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800131c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8001320:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001322:	4c0d      	ldr	r4, [pc, #52]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001324:	4a0d      	ldr	r2, [pc, #52]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001326:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001328:	480d      	ldr	r0, [pc, #52]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 800132a:	601a      	str	r2, [r3, #0]
 800132c:	8001      	strh	r1, [r0, #0]
}
 800132e:	bd70      	pop	{r4, r5, r6, pc}
 8001330:	20000414 	.word	0x20000414
 8001334:	20000418 	.word	0x20000418
 8001338:	0801b5f4 	.word	0x0801b5f4
 800133c:	200010b8 	.word	0x200010b8
 8001340:	20001038 	.word	0x20001038
 8001344:	01000001 	.word	0x01000001
 8001348:	2000a094 	.word	0x2000a094
 800134c:	2000a08a 	.word	0x2000a08a
 8001350:	2000a088 	.word	0x2000a088
 8001354:	2000a08c 	.word	0x2000a08c
 8001358:	2000a08e 	.word	0x2000a08e
 800135c:	0801b6d8 	.word	0x0801b6d8
 8001360:	2000a090 	.word	0x2000a090

08001364 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001364:	4801      	ldr	r0, [pc, #4]	; (800136c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001366:	f7ff be5d 	b.w	8001024 <_ZN10STM32F4DMAD1Ev>
 800136a:	bf00      	nop
 800136c:	20000418 	.word	0x20000418

08001370 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001370:	4b02      	ldr	r3, [pc, #8]	; (800137c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001372:	2290      	movs	r2, #144	; 0x90
 8001374:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	e000e100 	.word	0xe000e100

08001380 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001380:	4b02      	ldr	r3, [pc, #8]	; (800138c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001382:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001386:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000e100 	.word	0xe000e100

08001390 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001390:	4770      	bx	lr

08001392 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001392:	4770      	bx	lr

08001394 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001394:	b538      	push	{r3, r4, r5, lr}
 8001396:	4604      	mov	r4, r0
    HAL::initialize();
 8001398:	f007 fe7d 	bl	8009096 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800139c:	6823      	ldr	r3, [r4, #0]
 800139e:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 80013a0:	f00a fc8c 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 80013a4:	4601      	mov	r1, r0
 80013a6:	4620      	mov	r0, r4
 80013a8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013aa:	6823      	ldr	r3, [r4, #0]
 80013ac:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 80013b0:	2300      	movs	r3, #0
 80013b2:	461a      	mov	r2, r3
 80013b4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013b8:	4620      	mov	r0, r4
 80013ba:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013bc:	2301      	movs	r3, #1
 80013be:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013c2:	bd38      	pop	{r3, r4, r5, pc}

080013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013c4:	f007 be1a 	b.w	8008ffc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013c8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013c8:	f007 bf73 	b.w	80092b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013cc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013cc:	4b04      	ldr	r3, [pc, #16]	; (80013e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013d2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013da:	f3bf 8f6f 	isb	sy
}
 80013de:	4770      	bx	lr
 80013e0:	e000e100 	.word	0xe000e100

080013e4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013e4:	4901      	ldr	r1, [pc, #4]	; (80013ec <vApplicationIdleHook+0x8>)
 80013e6:	2000      	movs	r0, #0
 80013e8:	f006 bf3e 	b.w	8008268 <vTaskSetApplicationTaskTag>
 80013ec:	08000c19 	.word	0x08000c19

080013f0 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80013f0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80013f2:	2064      	movs	r0, #100	; 0x64
 80013f4:	f005 fadf 	bl	80069b6 <osDelay>
  for(;;)
 80013f8:	e7fb      	b.n	80013f2 <StartDefaultTask+0x2>
	...

080013fc <SystemClock_Config>:
{
 80013fc:	b530      	push	{r4, r5, lr}
 80013fe:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001400:	2210      	movs	r2, #16
 8001402:	2100      	movs	r1, #0
 8001404:	a809      	add	r0, sp, #36	; 0x24
 8001406:	f019 f863 	bl	801a4d0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800140a:	2214      	movs	r2, #20
 800140c:	2100      	movs	r1, #0
 800140e:	a802      	add	r0, sp, #8
 8001410:	f019 f85e 	bl	801a4d0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001414:	2400      	movs	r4, #0
 8001416:	4b1f      	ldr	r3, [pc, #124]	; (8001494 <SystemClock_Config+0x98>)
 8001418:	9400      	str	r4, [sp, #0]
 800141a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800141c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001420:	641a      	str	r2, [r3, #64]	; 0x40
 8001422:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001424:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001428:	9300      	str	r3, [sp, #0]
 800142a:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800142c:	4b1a      	ldr	r3, [pc, #104]	; (8001498 <SystemClock_Config+0x9c>)
 800142e:	9401      	str	r4, [sp, #4]
 8001430:	681a      	ldr	r2, [r3, #0]
 8001432:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001436:	601a      	str	r2, [r3, #0]
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800143e:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001440:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001442:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001444:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001448:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800144c:	2502      	movs	r5, #2
 800144e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001452:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001454:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001458:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800145c:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001460:	2004      	movs	r0, #4
 8001462:	2306      	movs	r3, #6
 8001464:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001468:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800146a:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800146c:	f004 fdf0 	bl	8006050 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001470:	f004 f840 	bl	80054f4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001474:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001476:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800147a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800147c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001480:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001484:	2105      	movs	r1, #5
 8001486:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001488:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800148c:	f004 fbb4 	bl	8005bf8 <HAL_RCC_ClockConfig>
}
 8001490:	b015      	add	sp, #84	; 0x54
 8001492:	bd30      	pop	{r4, r5, pc}
 8001494:	40023800 	.word	0x40023800
 8001498:	40007000 	.word	0x40007000

0800149c <main>:
{
 800149c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014a0:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014a2:	f002 fa0f 	bl	80038c4 <HAL_Init>
  SystemClock_Config();
 80014a6:	f7ff ffa9 	bl	80013fc <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014aa:	2214      	movs	r2, #20
 80014ac:	2100      	movs	r1, #0
 80014ae:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014b2:	f019 f80d 	bl	801a4d0 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b6:	4bc9      	ldr	r3, [pc, #804]	; (80017dc <main+0x340>)
 80014b8:	9402      	str	r4, [sp, #8]
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014bc:	48c8      	ldr	r0, [pc, #800]	; (80017e0 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014be:	f042 0210 	orr.w	r2, r2, #16
 80014c2:	631a      	str	r2, [r3, #48]	; 0x30
 80014c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c6:	f002 0210 	and.w	r2, r2, #16
 80014ca:	9202      	str	r2, [sp, #8]
 80014cc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014ce:	9403      	str	r4, [sp, #12]
 80014d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d2:	f042 0202 	orr.w	r2, r2, #2
 80014d6:	631a      	str	r2, [r3, #48]	; 0x30
 80014d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014da:	f002 0202 	and.w	r2, r2, #2
 80014de:	9203      	str	r2, [sp, #12]
 80014e0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014e2:	9404      	str	r4, [sp, #16]
 80014e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014ea:	631a      	str	r2, [r3, #48]	; 0x30
 80014ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ee:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80014f2:	9204      	str	r2, [sp, #16]
 80014f4:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f6:	9405      	str	r4, [sp, #20]
 80014f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fa:	f042 0208 	orr.w	r2, r2, #8
 80014fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f002 0208 	and.w	r2, r2, #8
 8001506:	9205      	str	r2, [sp, #20]
 8001508:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800150a:	9406      	str	r4, [sp, #24]
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001512:	631a      	str	r2, [r3, #48]	; 0x30
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800151a:	9206      	str	r2, [sp, #24]
 800151c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800151e:	9407      	str	r4, [sp, #28]
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f042 0220 	orr.w	r2, r2, #32
 8001526:	631a      	str	r2, [r3, #48]	; 0x30
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f002 0220 	and.w	r2, r2, #32
 800152e:	9207      	str	r2, [sp, #28]
 8001530:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001532:	9408      	str	r4, [sp, #32]
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800153a:	631a      	str	r2, [r3, #48]	; 0x30
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001542:	9208      	str	r2, [sp, #32]
 8001544:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001546:	9409      	str	r4, [sp, #36]	; 0x24
 8001548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800154e:	631a      	str	r2, [r3, #48]	; 0x30
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001556:	9209      	str	r2, [sp, #36]	; 0x24
 8001558:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800155a:	940a      	str	r4, [sp, #40]	; 0x28
 800155c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155e:	f042 0204 	orr.w	r2, r2, #4
 8001562:	631a      	str	r2, [r3, #48]	; 0x30
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f002 0204 	and.w	r2, r2, #4
 800156a:	920a      	str	r2, [sp, #40]	; 0x28
 800156c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800156e:	940b      	str	r4, [sp, #44]	; 0x2c
 8001570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001572:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001576:	631a      	str	r2, [r3, #48]	; 0x30
 8001578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800157a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800157e:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001580:	2201      	movs	r2, #1
 8001582:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001584:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001586:	f003 f9b1 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800158a:	4896      	ldr	r0, [pc, #600]	; (80017e4 <main+0x348>)
 800158c:	4622      	mov	r2, r4
 800158e:	2110      	movs	r1, #16
 8001590:	f003 f9ac 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 8001594:	4894      	ldr	r0, [pc, #592]	; (80017e8 <main+0x34c>)
 8001596:	4622      	mov	r2, r4
 8001598:	2140      	movs	r1, #64	; 0x40
 800159a:	f003 f9a7 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800159e:	4622      	mov	r2, r4
 80015a0:	4892      	ldr	r0, [pc, #584]	; (80017ec <main+0x350>)
 80015a2:	2180      	movs	r1, #128	; 0x80
 80015a4:	f003 f9a2 	bl	80048ec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015a8:	2611      	movs	r6, #17
 80015aa:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015ac:	488c      	ldr	r0, [pc, #560]	; (80017e0 <main+0x344>)
 80015ae:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015b0:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b2:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015b6:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ba:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015be:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015c2:	f003 f805 	bl	80045d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015c6:	4887      	ldr	r0, [pc, #540]	; (80017e4 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c8:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ca:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015cc:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d0:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015d4:	f002 fffc 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015d8:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015da:	4883      	ldr	r0, [pc, #524]	; (80017e8 <main+0x34c>)
 80015dc:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015de:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e0:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e4:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015e8:	f002 fff2 	bl	80045d0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015ec:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ee:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015f0:	487e      	ldr	r0, [pc, #504]	; (80017ec <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f2:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015f4:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f8:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015fa:	f002 ffe9 	bl	80045d0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015fe:	487c      	ldr	r0, [pc, #496]	; (80017f0 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001600:	4e7c      	ldr	r6, [pc, #496]	; (80017f4 <main+0x358>)
  hcrc.Instance = CRC;
 8001602:	4b7d      	ldr	r3, [pc, #500]	; (80017f8 <main+0x35c>)
 8001604:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001606:	f002 fa03 	bl	8003a10 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800160a:	4b7c      	ldr	r3, [pc, #496]	; (80017fc <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800160c:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001610:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001614:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001616:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800161a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800161e:	f002 fb0b 	bl	8003c38 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001622:	4639      	mov	r1, r7
 8001624:	4630      	mov	r0, r6
 8001626:	f002 fbbf 	bl	8003da8 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800162a:	4629      	mov	r1, r5
 800162c:	4622      	mov	r2, r4
 800162e:	486f      	ldr	r0, [pc, #444]	; (80017ec <main+0x350>)
  hdsi.Instance = DSI;
 8001630:	4e73      	ldr	r6, [pc, #460]	; (8001800 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001632:	f003 f95b 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001636:	2014      	movs	r0, #20
 8001638:	f002 f970 	bl	800391c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 800163c:	4629      	mov	r1, r5
 800163e:	463a      	mov	r2, r7
 8001640:	486a      	ldr	r0, [pc, #424]	; (80017ec <main+0x350>)
 8001642:	f003 f953 	bl	80048ec <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001646:	200a      	movs	r0, #10
 8001648:	f002 f968 	bl	800391c <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800164c:	2224      	movs	r2, #36	; 0x24
 800164e:	4621      	mov	r1, r4
 8001650:	a815      	add	r0, sp, #84	; 0x54
 8001652:	f018 ff3d 	bl	801a4d0 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001656:	2218      	movs	r2, #24
 8001658:	4621      	mov	r1, r4
 800165a:	a80f      	add	r0, sp, #60	; 0x3c
 800165c:	f018 ff38 	bl	801a4d0 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001660:	2234      	movs	r2, #52	; 0x34
 8001662:	4621      	mov	r1, r4
 8001664:	a82b      	add	r0, sp, #172	; 0xac
 8001666:	f018 ff33 	bl	801a4d0 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800166a:	222c      	movs	r2, #44	; 0x2c
 800166c:	4621      	mov	r1, r4
 800166e:	a81e      	add	r0, sp, #120	; 0x78
 8001670:	f018 ff2e 	bl	801a4d0 <memset>
  hdsi.Instance = DSI;
 8001674:	4b63      	ldr	r3, [pc, #396]	; (8001804 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 8001676:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001678:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800167a:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800167e:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001680:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001682:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001684:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001688:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800168c:	f002 fc54 	bl	8003f38 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001690:	a915      	add	r1, sp, #84	; 0x54
 8001692:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001694:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001698:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 800169c:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016a0:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016a4:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016a6:	f002 fe71 	bl	800438c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016aa:	221c      	movs	r2, #28
 80016ac:	2321      	movs	r3, #33	; 0x21
 80016ae:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016b2:	210f      	movs	r1, #15
 80016b4:	2319      	movs	r3, #25
 80016b6:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016ba:	4630      	mov	r0, r6
 80016bc:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016be:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016c2:	f002 fe26 	bl	8004312 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016c6:	4629      	mov	r1, r5
 80016c8:	4630      	mov	r0, r6
 80016ca:	f002 fe11 	bl	80042f0 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016ce:	f242 7110 	movw	r1, #10000	; 0x2710
 80016d2:	4630      	mov	r0, r6
 80016d4:	f002 ff65 	bl	80045a2 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016d8:	4621      	mov	r1, r4
 80016da:	4630      	mov	r0, r6
 80016dc:	f002 fbc9 	bl	8003e72 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016e0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016e4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016e8:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80016ec:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 80016f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80016f4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80016f8:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80016fc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001700:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001704:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 8001708:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800170c:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001710:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001714:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001718:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800171c:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001720:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001724:	a92b      	add	r1, sp, #172	; 0xac
 8001726:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001728:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800172c:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001730:	f002 fdaa 	bl	8004288 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001734:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001736:	a91e      	add	r1, sp, #120	; 0x78
 8001738:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800173a:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800173e:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001742:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001746:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800174a:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800174e:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001750:	f002 fd28 	bl	80041a4 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001754:	4621      	mov	r1, r4
 8001756:	4630      	mov	r0, r6
 8001758:	f002 fd13 	bl	8004182 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800175c:	482a      	ldr	r0, [pc, #168]	; (8001808 <main+0x36c>)
 800175e:	492b      	ldr	r1, [pc, #172]	; (800180c <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001760:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001762:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001766:	2340      	movs	r3, #64	; 0x40
 8001768:	2120      	movs	r1, #32
 800176a:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800176e:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001772:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001776:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001778:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800177a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 800177e:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 8001782:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001784:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 8001786:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800178a:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800178e:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 8001792:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 8001796:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800179a:	f004 fe0f 	bl	80063bc <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 800179e:	f001 ffb9 	bl	8003714 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017a2:	f001 ff69 	bl	8003678 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017a6:	2234      	movs	r2, #52	; 0x34
 80017a8:	4621      	mov	r1, r4
 80017aa:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017ac:	4d18      	ldr	r5, [pc, #96]	; (8001810 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ae:	f018 fe8f 	bl	801a4d0 <memset>
  hltdc.Instance = LTDC;
 80017b2:	4a18      	ldr	r2, [pc, #96]	; (8001814 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017b4:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017b6:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017ba:	23ca      	movs	r3, #202	; 0xca
 80017bc:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017c0:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017c4:	21cb      	movs	r1, #203	; 0xcb
 80017c6:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017cc:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017d0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017d4:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017d8:	e01e      	b.n	8001818 <main+0x37c>
 80017da:	bf00      	nop
 80017dc:	40023800 	.word	0x40023800
 80017e0:	40022800 	.word	0x40022800
 80017e4:	40020c00 	.word	0x40020c00
 80017e8:	40021800 	.word	0x40021800
 80017ec:	40021c00 	.word	0x40021c00
 80017f0:	2000a388 	.word	0x2000a388
 80017f4:	2000a458 	.word	0x2000a458
 80017f8:	40023000 	.word	0x40023000
 80017fc:	4002b000 	.word	0x4002b000
 8001800:	2000a390 	.word	0x2000a390
 8001804:	40016c00 	.word	0x40016c00
 8001808:	2000a498 	.word	0x2000a498
 800180c:	a0000140 	.word	0xa0000140
 8001810:	2000a3ac 	.word	0x2000a3ac
 8001814:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001818:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 800181c:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001820:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001824:	f003 fd30 	bl	8005288 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001828:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800182a:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 800182c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001830:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001834:	2005      	movs	r0, #5
 8001836:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800183a:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 800183e:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001842:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001844:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001848:	4628      	mov	r0, r5
 800184a:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 800184c:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001850:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001852:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 8001856:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800185a:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800185e:	f003 fddf 	bl	8005420 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001862:	682a      	ldr	r2, [r5, #0]
 8001864:	6993      	ldr	r3, [r2, #24]
 8001866:	f023 0301 	bic.w	r3, r3, #1
 800186a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800186c:	4630      	mov	r0, r6
 800186e:	f002 fdf3 	bl	8004458 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001872:	4639      	mov	r1, r7
 8001874:	4640      	mov	r0, r8
 8001876:	f001 f8c1 	bl	80029fc <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800187a:	2328      	movs	r3, #40	; 0x28
 800187c:	2215      	movs	r2, #21
 800187e:	4621      	mov	r1, r4
 8001880:	4630      	mov	r0, r6
 8001882:	9400      	str	r4, [sp, #0]
 8001884:	f002 fe1b 	bl	80044be <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001888:	a92b      	add	r1, sp, #172	; 0xac
 800188a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800188c:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001890:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001894:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001898:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800189c:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018a0:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018a2:	f002 fcf1 	bl	8004288 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018a6:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018aa:	4622      	mov	r2, r4
 80018ac:	4628      	mov	r0, r5
 80018ae:	f003 fde5 	bl	800547c <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018b2:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018b4:	481e      	ldr	r0, [pc, #120]	; (8001930 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018b6:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018b8:	4d1e      	ldr	r5, [pc, #120]	; (8001934 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018ba:	4e1f      	ldr	r6, [pc, #124]	; (8001938 <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018bc:	433b      	orrs	r3, r7
 80018be:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018c0:	4b1e      	ldr	r3, [pc, #120]	; (800193c <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018c2:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018c4:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018c8:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018ca:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018ce:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018d2:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018d6:	f003 ff25 	bl	8005724 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018da:	f001 fd93 	bl	8003404 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018de:	f001 fcc7 	bl	8003270 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018e2:	f001 fc3d 	bl	8003160 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018e6:	4b16      	ldr	r3, [pc, #88]	; (8001940 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018e8:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018ea:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80018ec:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 80018f0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80018f4:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80018f8:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018fc:	f003 f9e0 	bl	8004cc0 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001900:	4628      	mov	r0, r5
 8001902:	f003 fa85 	bl	8004e10 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001906:	f7fe fe70 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800190a:	f004 ffdf 	bl	80068cc <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800190e:	4a0d      	ldr	r2, [pc, #52]	; (8001944 <main+0x4a8>)
 8001910:	480d      	ldr	r0, [pc, #52]	; (8001948 <main+0x4ac>)
 8001912:	4621      	mov	r1, r4
 8001914:	f005 f806 	bl	8006924 <osThreadNew>
 8001918:	4b0c      	ldr	r3, [pc, #48]	; (800194c <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800191a:	4a0d      	ldr	r2, [pc, #52]	; (8001950 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800191c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800191e:	4621      	mov	r1, r4
 8001920:	480c      	ldr	r0, [pc, #48]	; (8001954 <main+0x4b8>)
 8001922:	f004 ffff 	bl	8006924 <osThreadNew>
 8001926:	4b0c      	ldr	r3, [pc, #48]	; (8001958 <main+0x4bc>)
 8001928:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800192a:	f004 ffe1 	bl	80068f0 <osKernelStart>
  while (1)
 800192e:	e7fe      	b.n	800192e <main+0x492>
 8001930:	2000a4cc 	.word	0x2000a4cc
 8001934:	2000a334 	.word	0x2000a334
 8001938:	40005400 	.word	0x40005400
 800193c:	a0001000 	.word	0xa0001000
 8001940:	00061a80 	.word	0x00061a80
 8001944:	0801bb60 	.word	0x0801bb60
 8001948:	080013f1 	.word	0x080013f1
 800194c:	2000a330 	.word	0x2000a330
 8001950:	0801bb3c 	.word	0x0801bb3c
 8001954:	080005ef 	.word	0x080005ef
 8001958:	2000a454 	.word	0x2000a454

0800195c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800195c:	6802      	ldr	r2, [r0, #0]
 800195e:	4b03      	ldr	r3, [pc, #12]	; (800196c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001960:	429a      	cmp	r2, r3
 8001962:	d101      	bne.n	8001968 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001964:	f001 bfc8 	b.w	80038f8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001968:	4770      	bx	lr
 800196a:	bf00      	nop
 800196c:	40001000 	.word	0x40001000

08001970 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001970:	4770      	bx	lr
	...

08001974 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001974:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001976:	4b0e      	ldr	r3, [pc, #56]	; (80019b0 <HAL_MspInit+0x3c>)
 8001978:	2200      	movs	r2, #0
 800197a:	9200      	str	r2, [sp, #0]
 800197c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800197e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001982:	6459      	str	r1, [r3, #68]	; 0x44
 8001984:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001986:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800198a:	9100      	str	r1, [sp, #0]
 800198c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800198e:	9201      	str	r2, [sp, #4]
 8001990:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001992:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001996:	6419      	str	r1, [r3, #64]	; 0x40
 8001998:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800199a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800199e:	9301      	str	r3, [sp, #4]
 80019a0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019a2:	210f      	movs	r1, #15
 80019a4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019a8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019aa:	f001 bfdd 	b.w	8003968 <HAL_NVIC_SetPriority>
 80019ae:	bf00      	nop
 80019b0:	40023800 	.word	0x40023800

080019b4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019b4:	6802      	ldr	r2, [r0, #0]
 80019b6:	4b09      	ldr	r3, [pc, #36]	; (80019dc <HAL_CRC_MspInit+0x28>)
 80019b8:	429a      	cmp	r2, r3
{
 80019ba:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019bc:	d10b      	bne.n	80019d6 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019be:	2300      	movs	r3, #0
 80019c0:	9301      	str	r3, [sp, #4]
 80019c2:	4b07      	ldr	r3, [pc, #28]	; (80019e0 <HAL_CRC_MspInit+0x2c>)
 80019c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019c6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019ca:	631a      	str	r2, [r3, #48]	; 0x30
 80019cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ce:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019d2:	9301      	str	r3, [sp, #4]
 80019d4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019d6:	b002      	add	sp, #8
 80019d8:	4770      	bx	lr
 80019da:	bf00      	nop
 80019dc:	40023000 	.word	0x40023000
 80019e0:	40023800 	.word	0x40023800

080019e4 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80019e4:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80019e6:	4b0f      	ldr	r3, [pc, #60]	; (8001a24 <HAL_DMA2D_MspInit+0x40>)
 80019e8:	6802      	ldr	r2, [r0, #0]
 80019ea:	429a      	cmp	r2, r3
 80019ec:	d116      	bne.n	8001a1c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019ee:	2200      	movs	r2, #0
 80019f0:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80019f4:	9201      	str	r2, [sp, #4]
 80019f6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80019f8:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80019fc:	6319      	str	r1, [r3, #48]	; 0x30
 80019fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a00:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a04:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a06:	2105      	movs	r1, #5
 8001a08:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a0a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a0c:	f001 ffac 	bl	8003968 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a10:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a12:	b003      	add	sp, #12
 8001a14:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a18:	f001 bfd8 	b.w	80039cc <HAL_NVIC_EnableIRQ>
}
 8001a1c:	b003      	add	sp, #12
 8001a1e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a22:	bf00      	nop
 8001a24:	4002b000 	.word	0x4002b000

08001a28 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a28:	b510      	push	{r4, lr}
 8001a2a:	4604      	mov	r4, r0
 8001a2c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a2e:	2214      	movs	r2, #20
 8001a30:	2100      	movs	r1, #0
 8001a32:	a803      	add	r0, sp, #12
 8001a34:	f018 fd4c 	bl	801a4d0 <memset>
  if(hdsi->Instance==DSI)
 8001a38:	6822      	ldr	r2, [r4, #0]
 8001a3a:	4b18      	ldr	r3, [pc, #96]	; (8001a9c <HAL_DSI_MspInit+0x74>)
 8001a3c:	429a      	cmp	r2, r3
 8001a3e:	d12a      	bne.n	8001a96 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a40:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a44:	2400      	movs	r4, #0
 8001a46:	9401      	str	r4, [sp, #4]
 8001a48:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a4a:	4815      	ldr	r0, [pc, #84]	; (8001aa0 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a4c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a50:	645a      	str	r2, [r3, #68]	; 0x44
 8001a52:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a54:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a58:	9201      	str	r2, [sp, #4]
 8001a5a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a5c:	9402      	str	r4, [sp, #8]
 8001a5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a60:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a64:	631a      	str	r2, [r3, #48]	; 0x30
 8001a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a68:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a6e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a70:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a72:	2302      	movs	r3, #2
 8001a74:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a78:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001a7a:	230d      	movs	r3, #13
 8001a7c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a7e:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a82:	f002 fda5 	bl	80045d0 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001a86:	205c      	movs	r0, #92	; 0x5c
 8001a88:	4622      	mov	r2, r4
 8001a8a:	2105      	movs	r1, #5
 8001a8c:	f001 ff6c 	bl	8003968 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001a90:	205c      	movs	r0, #92	; 0x5c
 8001a92:	f001 ff9b 	bl	80039cc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001a96:	b008      	add	sp, #32
 8001a98:	bd10      	pop	{r4, pc}
 8001a9a:	bf00      	nop
 8001a9c:	40016c00 	.word	0x40016c00
 8001aa0:	40022400 	.word	0x40022400

08001aa4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001aa4:	b530      	push	{r4, r5, lr}
 8001aa6:	4604      	mov	r4, r0
 8001aa8:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aaa:	2214      	movs	r2, #20
 8001aac:	2100      	movs	r1, #0
 8001aae:	a803      	add	r0, sp, #12
 8001ab0:	f018 fd0e 	bl	801a4d0 <memset>
  if(hi2c->Instance==I2C1)
 8001ab4:	6822      	ldr	r2, [r4, #0]
 8001ab6:	4b1a      	ldr	r3, [pc, #104]	; (8001b20 <HAL_I2C_MspInit+0x7c>)
 8001ab8:	429a      	cmp	r2, r3
 8001aba:	d12f      	bne.n	8001b1c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001abc:	4c19      	ldr	r4, [pc, #100]	; (8001b24 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001abe:	481a      	ldr	r0, [pc, #104]	; (8001b28 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ac0:	2500      	movs	r5, #0
 8001ac2:	9501      	str	r5, [sp, #4]
 8001ac4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ac6:	f043 0302 	orr.w	r3, r3, #2
 8001aca:	6323      	str	r3, [r4, #48]	; 0x30
 8001acc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ace:	f003 0302 	and.w	r3, r3, #2
 8001ad2:	9301      	str	r3, [sp, #4]
 8001ad4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ad6:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001ada:	2312      	movs	r3, #18
 8001adc:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ae0:	2101      	movs	r1, #1
 8001ae2:	2303      	movs	r3, #3
 8001ae4:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001ae8:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aea:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001aec:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aee:	f002 fd6f 	bl	80045d0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001af2:	9502      	str	r5, [sp, #8]
 8001af4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001af6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001afa:	6423      	str	r3, [r4, #64]	; 0x40
 8001afc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001afe:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b02:	9302      	str	r3, [sp, #8]
 8001b04:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b06:	6a23      	ldr	r3, [r4, #32]
 8001b08:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b0c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b0e:	6a23      	ldr	r3, [r4, #32]
 8001b10:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b14:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b16:	2064      	movs	r0, #100	; 0x64
 8001b18:	f001 ff00 	bl	800391c <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b1c:	b009      	add	sp, #36	; 0x24
 8001b1e:	bd30      	pop	{r4, r5, pc}
 8001b20:	40005400 	.word	0x40005400
 8001b24:	40023800 	.word	0x40023800
 8001b28:	40020400 	.word	0x40020400

08001b2c <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b2c:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b2e:	6802      	ldr	r2, [r0, #0]
 8001b30:	4b0a      	ldr	r3, [pc, #40]	; (8001b5c <HAL_I2C_MspDeInit+0x30>)
 8001b32:	429a      	cmp	r2, r3
 8001b34:	d110      	bne.n	8001b58 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b36:	4a0a      	ldr	r2, [pc, #40]	; (8001b60 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b38:	480a      	ldr	r0, [pc, #40]	; (8001b64 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b3a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b3c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b40:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b42:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b46:	f002 fe29 	bl	800479c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b4e:	4805      	ldr	r0, [pc, #20]	; (8001b64 <HAL_I2C_MspDeInit+0x38>)
 8001b50:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b54:	f002 be22 	b.w	800479c <HAL_GPIO_DeInit>
}
 8001b58:	bd08      	pop	{r3, pc}
 8001b5a:	bf00      	nop
 8001b5c:	40005400 	.word	0x40005400
 8001b60:	40023800 	.word	0x40023800
 8001b64:	40020400 	.word	0x40020400

08001b68 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b68:	b510      	push	{r4, lr}
 8001b6a:	4604      	mov	r4, r0
 8001b6c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b6e:	223c      	movs	r2, #60	; 0x3c
 8001b70:	2100      	movs	r1, #0
 8001b72:	a801      	add	r0, sp, #4
 8001b74:	f018 fcac 	bl	801a4d0 <memset>
  if(hltdc->Instance==LTDC)
 8001b78:	6822      	ldr	r2, [r4, #0]
 8001b7a:	4b13      	ldr	r3, [pc, #76]	; (8001bc8 <HAL_LTDC_MspInit+0x60>)
 8001b7c:	429a      	cmp	r2, r3
 8001b7e:	d121      	bne.n	8001bc4 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001b80:	2308      	movs	r3, #8
 8001b82:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001b84:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001b88:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b8a:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b8c:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b8e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b90:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b92:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b94:	f004 f8fa 	bl	8005d8c <HAL_RCCEx_PeriphCLKConfig>
 8001b98:	b108      	cbz	r0, 8001b9e <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001b9a:	f7ff fee9 	bl	8001970 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b9e:	4b0b      	ldr	r3, [pc, #44]	; (8001bcc <HAL_LTDC_MspInit+0x64>)
 8001ba0:	9400      	str	r4, [sp, #0]
 8001ba2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ba4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ba8:	645a      	str	r2, [r3, #68]	; 0x44
 8001baa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bac:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001bb0:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bb2:	2058      	movs	r0, #88	; 0x58
 8001bb4:	2200      	movs	r2, #0
 8001bb6:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bb8:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bba:	f001 fed5 	bl	8003968 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bbe:	2058      	movs	r0, #88	; 0x58
 8001bc0:	f001 ff04 	bl	80039cc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bc4:	b010      	add	sp, #64	; 0x40
 8001bc6:	bd10      	pop	{r4, pc}
 8001bc8:	40016800 	.word	0x40016800
 8001bcc:	40023800 	.word	0x40023800

08001bd0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bd2:	4604      	mov	r4, r0
 8001bd4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bd6:	2214      	movs	r2, #20
 8001bd8:	2100      	movs	r1, #0
 8001bda:	a803      	add	r0, sp, #12
 8001bdc:	f018 fc78 	bl	801a4d0 <memset>
  if(hqspi->Instance==QUADSPI)
 8001be0:	6822      	ldr	r2, [r4, #0]
 8001be2:	4b24      	ldr	r3, [pc, #144]	; (8001c74 <HAL_QSPI_MspInit+0xa4>)
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d143      	bne.n	8001c70 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001be8:	4b23      	ldr	r3, [pc, #140]	; (8001c78 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bea:	4824      	ldr	r0, [pc, #144]	; (8001c7c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001bec:	2400      	movs	r4, #0
 8001bee:	9400      	str	r4, [sp, #0]
 8001bf0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001bf2:	f042 0202 	orr.w	r2, r2, #2
 8001bf6:	639a      	str	r2, [r3, #56]	; 0x38
 8001bf8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001bfa:	f002 0202 	and.w	r2, r2, #2
 8001bfe:	9200      	str	r2, [sp, #0]
 8001c00:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c02:	9401      	str	r4, [sp, #4]
 8001c04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c06:	f042 0202 	orr.w	r2, r2, #2
 8001c0a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c0e:	f002 0202 	and.w	r2, r2, #2
 8001c12:	9201      	str	r2, [sp, #4]
 8001c14:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c16:	9402      	str	r4, [sp, #8]
 8001c18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c1a:	f042 0220 	orr.w	r2, r2, #32
 8001c1e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c22:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c24:	f003 0320 	and.w	r3, r3, #32
 8001c28:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2a:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c2c:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c30:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c32:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c34:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c36:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c3a:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3e:	f002 fcc7 	bl	80045d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c42:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c46:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c4a:	480d      	ldr	r0, [pc, #52]	; (8001c80 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c4c:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c4e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c50:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c52:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c56:	f002 fcbb 	bl	80045d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c5a:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c5e:	4808      	ldr	r0, [pc, #32]	; (8001c80 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c60:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c62:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c64:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c68:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6c:	f002 fcb0 	bl	80045d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001c70:	b009      	add	sp, #36	; 0x24
 8001c72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c74:	a0001000 	.word	0xa0001000
 8001c78:	40023800 	.word	0x40023800
 8001c7c:	40020400 	.word	0x40020400
 8001c80:	40021400 	.word	0x40021400

08001c84 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001c84:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001c86:	6802      	ldr	r2, [r0, #0]
 8001c88:	4b09      	ldr	r3, [pc, #36]	; (8001cb0 <HAL_QSPI_MspDeInit+0x2c>)
 8001c8a:	429a      	cmp	r2, r3
 8001c8c:	d10f      	bne.n	8001cae <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c8e:	4a09      	ldr	r2, [pc, #36]	; (8001cb4 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001c90:	4809      	ldr	r0, [pc, #36]	; (8001cb8 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c92:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001c94:	f023 0302 	bic.w	r3, r3, #2
 8001c98:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001c9a:	2140      	movs	r1, #64	; 0x40
 8001c9c:	f002 fd7e 	bl	800479c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001ca0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001ca4:	4805      	ldr	r0, [pc, #20]	; (8001cbc <HAL_QSPI_MspDeInit+0x38>)
 8001ca6:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001caa:	f002 bd77 	b.w	800479c <HAL_GPIO_DeInit>
}
 8001cae:	bd08      	pop	{r3, pc}
 8001cb0:	a0001000 	.word	0xa0001000
 8001cb4:	40023800 	.word	0x40023800
 8001cb8:	40020400 	.word	0x40020400
 8001cbc:	40021400 	.word	0x40021400

08001cc0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cc2:	4b31      	ldr	r3, [pc, #196]	; (8001d88 <HAL_SDRAM_MspInit+0xc8>)
 8001cc4:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cc6:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001cc8:	2c00      	cmp	r4, #0
 8001cca:	d15b      	bne.n	8001d84 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001ccc:	2201      	movs	r2, #1
 8001cce:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cd0:	4b2e      	ldr	r3, [pc, #184]	; (8001d8c <HAL_SDRAM_MspInit+0xcc>)
 8001cd2:	9400      	str	r4, [sp, #0]
 8001cd4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cd6:	482e      	ldr	r0, [pc, #184]	; (8001d90 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cd8:	f042 0201 	orr.w	r2, r2, #1
 8001cdc:	639a      	str	r2, [r3, #56]	; 0x38
 8001cde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ce0:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ce2:	f003 0301 	and.w	r3, r3, #1
 8001ce6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cea:	2603      	movs	r6, #3
 8001cec:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cee:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cf0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf2:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001cf6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cfa:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cfe:	f002 fc67 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d02:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d06:	4823      	ldr	r0, [pc, #140]	; (8001d94 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d08:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d0a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d10:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d14:	f002 fc5c 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d18:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d1c:	481e      	ldr	r0, [pc, #120]	; (8001d98 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d1e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d20:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d22:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d26:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2a:	f002 fc51 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d2e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d32:	481a      	ldr	r0, [pc, #104]	; (8001d9c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d34:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d36:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d38:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d3c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d40:	f002 fc46 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d44:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d48:	4815      	ldr	r0, [pc, #84]	; (8001da0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d4a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d4c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d52:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d56:	f002 fc3b 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d5a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d5e:	4811      	ldr	r0, [pc, #68]	; (8001da4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d60:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d62:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d64:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d68:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d6c:	f002 fc30 	bl	80045d0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001d70:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d72:	480d      	ldr	r0, [pc, #52]	; (8001da8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d74:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d76:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d78:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d7c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d80:	f002 fc26 	bl	80045d0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d84:	b007      	add	sp, #28
 8001d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d88:	20001134 	.word	0x20001134
 8001d8c:	40023800 	.word	0x40023800
 8001d90:	40021000 	.word	0x40021000
 8001d94:	40021800 	.word	0x40021800
 8001d98:	40020c00 	.word	0x40020c00
 8001d9c:	40022000 	.word	0x40022000
 8001da0:	40021400 	.word	0x40021400
 8001da4:	40021c00 	.word	0x40021c00
 8001da8:	40020800 	.word	0x40020800

08001dac <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001dac:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001dae:	4b17      	ldr	r3, [pc, #92]	; (8001e0c <HAL_SDRAM_MspDeInit+0x60>)
 8001db0:	681a      	ldr	r2, [r3, #0]
 8001db2:	bb52      	cbnz	r2, 8001e0a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001db4:	2201      	movs	r2, #1
 8001db6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001db8:	4a15      	ldr	r2, [pc, #84]	; (8001e10 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dba:	4816      	ldr	r0, [pc, #88]	; (8001e14 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dbc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dbe:	f023 0301 	bic.w	r3, r3, #1
 8001dc2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dc4:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001dc8:	f002 fce8 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dcc:	4812      	ldr	r0, [pc, #72]	; (8001e18 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dce:	f248 1133 	movw	r1, #33075	; 0x8133
 8001dd2:	f002 fce3 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001dd6:	4811      	ldr	r0, [pc, #68]	; (8001e1c <HAL_SDRAM_MspDeInit+0x70>)
 8001dd8:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001ddc:	f002 fcde 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001de0:	480f      	ldr	r0, [pc, #60]	; (8001e20 <HAL_SDRAM_MspDeInit+0x74>)
 8001de2:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001de6:	f002 fcd9 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001dea:	480e      	ldr	r0, [pc, #56]	; (8001e24 <HAL_SDRAM_MspDeInit+0x78>)
 8001dec:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001df0:	f002 fcd4 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001df4:	480c      	ldr	r0, [pc, #48]	; (8001e28 <HAL_SDRAM_MspDeInit+0x7c>)
 8001df6:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001dfa:	f002 fccf 	bl	800479c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001dfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e02:	480a      	ldr	r0, [pc, #40]	; (8001e2c <HAL_SDRAM_MspDeInit+0x80>)
 8001e04:	210d      	movs	r1, #13
 8001e06:	f002 bcc9 	b.w	800479c <HAL_GPIO_DeInit>
}
 8001e0a:	bd08      	pop	{r3, pc}
 8001e0c:	20001130 	.word	0x20001130
 8001e10:	40023800 	.word	0x40023800
 8001e14:	40021000 	.word	0x40021000
 8001e18:	40021800 	.word	0x40021800
 8001e1c:	40020c00 	.word	0x40020c00
 8001e20:	40022000 	.word	0x40022000
 8001e24:	40021400 	.word	0x40021400
 8001e28:	40021c00 	.word	0x40021c00
 8001e2c:	40020800 	.word	0x40020800

08001e30 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e30:	b530      	push	{r4, r5, lr}
 8001e32:	4601      	mov	r1, r0
 8001e34:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e36:	2200      	movs	r2, #0
 8001e38:	2036      	movs	r0, #54	; 0x36
 8001e3a:	f001 fd95 	bl	8003968 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e3e:	2036      	movs	r0, #54	; 0x36
 8001e40:	f001 fdc4 	bl	80039cc <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e44:	2500      	movs	r5, #0
 8001e46:	4b15      	ldr	r3, [pc, #84]	; (8001e9c <HAL_InitTick+0x6c>)
 8001e48:	9502      	str	r5, [sp, #8]
 8001e4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e4c:	4c14      	ldr	r4, [pc, #80]	; (8001ea0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e4e:	f042 0210 	orr.w	r2, r2, #16
 8001e52:	641a      	str	r2, [r3, #64]	; 0x40
 8001e54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e56:	f003 0310 	and.w	r3, r3, #16
 8001e5a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e5c:	a901      	add	r1, sp, #4
 8001e5e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e60:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e62:	f003 ff75 	bl	8005d50 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e66:	f003 ff63 	bl	8005d30 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e6a:	4b0e      	ldr	r3, [pc, #56]	; (8001ea4 <HAL_InitTick+0x74>)
 8001e6c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e6e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e72:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e74:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e76:	4b0c      	ldr	r3, [pc, #48]	; (8001ea8 <HAL_InitTick+0x78>)
 8001e78:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e7c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e7e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e80:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e82:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e84:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e86:	f004 fc37 	bl	80066f8 <HAL_TIM_Base_Init>
 8001e8a:	b920      	cbnz	r0, 8001e96 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e8c:	4620      	mov	r0, r4
 8001e8e:	f004 faed 	bl	800646c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001e92:	b009      	add	sp, #36	; 0x24
 8001e94:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001e96:	2001      	movs	r0, #1
 8001e98:	e7fb      	b.n	8001e92 <HAL_InitTick+0x62>
 8001e9a:	bf00      	nop
 8001e9c:	40023800 	.word	0x40023800
 8001ea0:	2000a518 	.word	0x2000a518
 8001ea4:	40001000 	.word	0x40001000
 8001ea8:	000f4240 	.word	0x000f4240

08001eac <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001eac:	4770      	bx	lr

08001eae <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eae:	e7fe      	b.n	8001eae <HardFault_Handler>

08001eb0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001eb0:	e7fe      	b.n	8001eb0 <MemManage_Handler>

08001eb2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001eb2:	e7fe      	b.n	8001eb2 <BusFault_Handler>

08001eb4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001eb4:	e7fe      	b.n	8001eb4 <UsageFault_Handler>

08001eb6 <DebugMon_Handler>:
 8001eb6:	4770      	bx	lr

08001eb8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001eb8:	4801      	ldr	r0, [pc, #4]	; (8001ec0 <TIM6_DAC_IRQHandler+0x8>)
 8001eba:	f004 bb15 	b.w	80064e8 <HAL_TIM_IRQHandler>
 8001ebe:	bf00      	nop
 8001ec0:	2000a518 	.word	0x2000a518

08001ec4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ec4:	4801      	ldr	r0, [pc, #4]	; (8001ecc <LTDC_IRQHandler+0x8>)
 8001ec6:	f003 ba4e 	b.w	8005366 <HAL_LTDC_IRQHandler>
 8001eca:	bf00      	nop
 8001ecc:	2000a3ac 	.word	0x2000a3ac

08001ed0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ed0:	4801      	ldr	r0, [pc, #4]	; (8001ed8 <DMA2D_IRQHandler+0x8>)
 8001ed2:	f001 bedf 	b.w	8003c94 <HAL_DMA2D_IRQHandler>
 8001ed6:	bf00      	nop
 8001ed8:	2000a458 	.word	0x2000a458

08001edc <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001edc:	4801      	ldr	r0, [pc, #4]	; (8001ee4 <DSI_IRQHandler+0x8>)
 8001ede:	f002 b8de 	b.w	800409e <HAL_DSI_IRQHandler>
 8001ee2:	bf00      	nop
 8001ee4:	2000a390 	.word	0x2000a390

08001ee8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001ee8:	2001      	movs	r0, #1
 8001eea:	4770      	bx	lr

08001eec <_kill>:

int _kill(int pid, int sig)
{
 8001eec:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001eee:	f018 fa95 	bl	801a41c <__errno>
 8001ef2:	2316      	movs	r3, #22
 8001ef4:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001ef6:	f04f 30ff 	mov.w	r0, #4294967295
 8001efa:	bd08      	pop	{r3, pc}

08001efc <_exit>:

void _exit (int status)
{
 8001efc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001efe:	f018 fa8d 	bl	801a41c <__errno>
 8001f02:	2316      	movs	r3, #22
 8001f04:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f06:	e7fe      	b.n	8001f06 <_exit+0xa>

08001f08 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f08:	b570      	push	{r4, r5, r6, lr}
 8001f0a:	460e      	mov	r6, r1
 8001f0c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f0e:	2500      	movs	r5, #0
 8001f10:	42a5      	cmp	r5, r4
 8001f12:	db01      	blt.n	8001f18 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f14:	4620      	mov	r0, r4
 8001f16:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f18:	f3af 8000 	nop.w
 8001f1c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f1e:	3501      	adds	r5, #1
 8001f20:	e7f6      	b.n	8001f10 <_read+0x8>

08001f22 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f22:	b570      	push	{r4, r5, r6, lr}
 8001f24:	460e      	mov	r6, r1
 8001f26:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f28:	2500      	movs	r5, #0
 8001f2a:	42a5      	cmp	r5, r4
 8001f2c:	db01      	blt.n	8001f32 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f2e:	4620      	mov	r0, r4
 8001f30:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f32:	5d70      	ldrb	r0, [r6, r5]
 8001f34:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f38:	3501      	adds	r5, #1
 8001f3a:	e7f6      	b.n	8001f2a <_write+0x8>

08001f3c <_close>:

int _close(int file)
{
	return -1;
}
 8001f3c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f40:	4770      	bx	lr

08001f42 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f42:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f46:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f48:	2000      	movs	r0, #0
 8001f4a:	4770      	bx	lr

08001f4c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f4c:	2001      	movs	r0, #1
 8001f4e:	4770      	bx	lr

08001f50 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f50:	2000      	movs	r0, #0
 8001f52:	4770      	bx	lr

08001f54 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f54:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f56:	4b0a      	ldr	r3, [pc, #40]	; (8001f80 <_sbrk+0x2c>)
 8001f58:	6819      	ldr	r1, [r3, #0]
{
 8001f5a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f5c:	b909      	cbnz	r1, 8001f62 <_sbrk+0xe>
		heap_end = &end;
 8001f5e:	4909      	ldr	r1, [pc, #36]	; (8001f84 <_sbrk+0x30>)
 8001f60:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f62:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f64:	4669      	mov	r1, sp
 8001f66:	4402      	add	r2, r0
 8001f68:	428a      	cmp	r2, r1
 8001f6a:	d906      	bls.n	8001f7a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f6c:	f018 fa56 	bl	801a41c <__errno>
 8001f70:	230c      	movs	r3, #12
 8001f72:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f74:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f78:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f7a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f7c:	e7fc      	b.n	8001f78 <_sbrk+0x24>
 8001f7e:	bf00      	nop
 8001f80:	20001138 	.word	0x20001138
 8001f84:	2000a600 	.word	0x2000a600

08001f88 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f88:	4770      	bx	lr

08001f8a <_ZN23ApplicationFontProviderD0Ev>:
 8001f8a:	b510      	push	{r4, lr}
 8001f8c:	2104      	movs	r1, #4
 8001f8e:	4604      	mov	r4, r0
 8001f90:	f018 f9e3 	bl	801a35a <_ZdlPvj>
 8001f94:	4620      	mov	r0, r4
 8001f96:	bd10      	pop	{r4, pc}

08001f98 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f98:	2901      	cmp	r1, #1
{
 8001f9a:	b508      	push	{r3, lr}
    switch (typography)
 8001f9c:	d006      	beq.n	8001fac <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f9e:	2902      	cmp	r1, #2
 8001fa0:	d008      	beq.n	8001fb4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fa2:	b959      	cbnz	r1, 8001fbc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fa4:	f000 fc42 	bl	800282c <_ZN17TypedTextDatabase8getFontsEv>
 8001fa8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001faa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fac:	f000 fc3e 	bl	800282c <_ZN17TypedTextDatabase8getFontsEv>
 8001fb0:	6840      	ldr	r0, [r0, #4]
 8001fb2:	e7fa      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fb4:	f000 fc3a 	bl	800282c <_ZN17TypedTextDatabase8getFontsEv>
 8001fb8:	6880      	ldr	r0, [r0, #8]
 8001fba:	e7f6      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	e7f4      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fc0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fc0:	4800      	ldr	r0, [pc, #0]	; (8001fc4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fc2:	4770      	bx	lr
 8001fc4:	0801bb98 	.word	0x0801bb98

08001fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fc8:	2001      	movs	r0, #1
 8001fca:	4770      	bx	lr

08001fcc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fcc:	b513      	push	{r0, r1, r4, lr}
 8001fce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001fd0:	b151      	cbz	r1, 8001fe8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fd2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001fd4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001fd6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fda:	aa01      	add	r2, sp, #4
 8001fdc:	689c      	ldr	r4, [r3, #8]
 8001fde:	f10d 0303 	add.w	r3, sp, #3
 8001fe2:	47a0      	blx	r4
        return glyph;
    }
 8001fe4:	b002      	add	sp, #8
 8001fe6:	bd10      	pop	{r4, pc}
            return 0;
 8001fe8:	4608      	mov	r0, r1
 8001fea:	e7fb      	b.n	8001fe4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001fec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001fec:	8940      	ldrh	r0, [r0, #10]
 8001fee:	4770      	bx	lr

08001ff0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001ff0:	8980      	ldrh	r0, [r0, #12]
 8001ff2:	4770      	bx	lr

08001ff4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001ff4:	8880      	ldrh	r0, [r0, #4]
 8001ff6:	4770      	bx	lr

08001ff8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001ff8:	7983      	ldrb	r3, [r0, #6]
 8001ffa:	8880      	ldrh	r0, [r0, #4]
 8001ffc:	4418      	add	r0, r3
    }
 8001ffe:	b280      	uxth	r0, r0
 8002000:	4770      	bx	lr

08002002 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002002:	79c0      	ldrb	r0, [r0, #7]
    }
 8002004:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002008:	4770      	bx	lr

0800200a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800200a:	79c0      	ldrb	r0, [r0, #7]
    }
 800200c:	09c0      	lsrs	r0, r0, #7
 800200e:	4770      	bx	lr

08002010 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002010:	4770      	bx	lr

08002012 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002012:	b510      	push	{r4, lr}
    }
 8002014:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002016:	4604      	mov	r4, r0
    }
 8002018:	f018 f99f 	bl	801a35a <_ZdlPvj>
 800201c:	4620      	mov	r0, r4
 800201e:	bd10      	pop	{r4, pc}

08002020 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002020:	4770      	bx	lr

08002022 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002022:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002026:	6808      	ldr	r0, [r1, #0]
 8002028:	6849      	ldr	r1, [r1, #4]
 800202a:	c303      	stmia	r3!, {r0, r1}
    }
 800202c:	4770      	bx	lr

0800202e <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800202e:	4770      	bx	lr

08002030 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002030:	4770      	bx	lr

08002032 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002032:	6041      	str	r1, [r0, #4]
    }
 8002034:	4770      	bx	lr

08002036 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002036:	4770      	bx	lr

08002038 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002038:	2301      	movs	r3, #1
 800203a:	7203      	strb	r3, [r0, #8]
    }
 800203c:	4770      	bx	lr

0800203e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002040:	4770      	bx	lr

08002042 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002042:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002044:	68c2      	ldr	r2, [r0, #12]
 8002046:	6841      	ldr	r1, [r0, #4]
 8002048:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800204a:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800204c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002050:	07d2      	lsls	r2, r2, #31
 8002052:	bf48      	it	mi
 8002054:	590a      	ldrmi	r2, [r1, r4]
 8002056:	689b      	ldr	r3, [r3, #8]
    }
 8002058:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800205c:	bf48      	it	mi
 800205e:	58d3      	ldrmi	r3, [r2, r3]
 8002060:	4718      	bx	r3

08002062 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002062:	6843      	ldr	r3, [r0, #4]
 8002064:	b12b      	cbz	r3, 8002072 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002066:	6883      	ldr	r3, [r0, #8]
 8002068:	b92b      	cbnz	r3, 8002076 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800206a:	68c0      	ldr	r0, [r0, #12]
 800206c:	f000 0001 	and.w	r0, r0, #1
 8002070:	4770      	bx	lr
 8002072:	4618      	mov	r0, r3
 8002074:	4770      	bx	lr
 8002076:	2001      	movs	r0, #1
    }
 8002078:	4770      	bx	lr

0800207a <_ZN8touchgfx12NoTransitionD0Ev>:
 800207a:	b510      	push	{r4, lr}
 800207c:	210c      	movs	r1, #12
 800207e:	4604      	mov	r4, r0
 8002080:	f018 f96b 	bl	801a35a <_ZdlPvj>
 8002084:	4620      	mov	r0, r4
 8002086:	bd10      	pop	{r4, pc}

08002088 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002088:	b510      	push	{r4, lr}
 800208a:	2110      	movs	r1, #16
 800208c:	4604      	mov	r4, r0
 800208e:	f018 f964 	bl	801a35a <_ZdlPvj>
 8002092:	4620      	mov	r0, r4
 8002094:	bd10      	pop	{r4, pc}

08002096 <_ZN23FrontendApplicationBaseD0Ev>:
 8002096:	b510      	push	{r4, lr}
 8002098:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800209c:	4604      	mov	r4, r0
 800209e:	f018 f95c 	bl	801a35a <_ZdlPvj>
 80020a2:	4620      	mov	r0, r4
 80020a4:	bd10      	pop	{r4, pc}

080020a6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80020a6:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80020a8:	f009 fe08 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 80020ac:	6803      	ldr	r3, [r0, #0]
    }
 80020ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80020b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020b4:	4718      	bx	r3

080020b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80020b6:	b510      	push	{r4, lr}
 80020b8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80020ba:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80020be:	b158      	cbz	r0, 80020d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80020c0:	6803      	ldr	r3, [r0, #0]
 80020c2:	68db      	ldr	r3, [r3, #12]
 80020c4:	4798      	blx	r3
 80020c6:	b138      	cbz	r0, 80020d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80020c8:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80020cc:	6803      	ldr	r3, [r0, #0]
 80020ce:	689b      	ldr	r3, [r3, #8]
 80020d0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80020d2:	2300      	movs	r3, #0
 80020d4:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80020d8:	bd10      	pop	{r4, pc}
	...

080020dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80020dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020de:	4604      	mov	r4, r0
 80020e0:	4617      	mov	r7, r2
 80020e2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80020e4:	f009 fe0a 	bl	800bcfc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80020e8:	4b10      	ldr	r3, [pc, #64]	; (800212c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80020ea:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80020ec:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80020f0:	4e0f      	ldr	r6, [pc, #60]	; (8002130 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80020f2:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80020f4:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80020f8:	4b0e      	ldr	r3, [pc, #56]	; (8002134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80020fa:	6830      	ldr	r0, [r6, #0]
 80020fc:	6023      	str	r3, [r4, #0]
 80020fe:	4b0e      	ldr	r3, [pc, #56]	; (8002138 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002100:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002104:	6803      	ldr	r3, [r0, #0]
 8002106:	4629      	mov	r1, r5
 8002108:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800210a:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 800210e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002110:	4628      	mov	r0, r5
 8002112:	f000 fb3f 	bl	8002794 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002116:	6833      	ldr	r3, [r6, #0]
 8002118:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800211c:	b10a      	cbz	r2, 8002122 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 800211e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002120:	b900      	cbnz	r0, 8002124 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002122:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002124:	f011 f81d 	bl	8013162 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002128:	4620      	mov	r0, r4
 800212a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800212c:	2000a0e0 	.word	0x2000a0e0
 8002130:	2000a094 	.word	0x2000a094
 8002134:	0801befc 	.word	0x0801befc
 8002138:	0801bee4 	.word	0x0801bee4

0800213c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800213c:	4b06      	ldr	r3, [pc, #24]	; (8002158 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800213e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002142:	2300      	movs	r3, #0
 8002144:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002148:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800214c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002150:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002154:	4770      	bx	lr
 8002156:	bf00      	nop
 8002158:	08002299 	.word	0x08002299

0800215c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800215c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002160:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002162:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002164:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002168:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800216a:	6803      	ldr	r3, [r0, #0]
 800216c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800216e:	4688      	mov	r8, r1
 8002170:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002172:	4798      	blx	r3
 8002174:	28d3      	cmp	r0, #211	; 0xd3
 8002176:	d805      	bhi.n	8002184 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 8002178:	4b41      	ldr	r3, [pc, #260]	; (8002280 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 800217a:	4a42      	ldr	r2, [pc, #264]	; (8002284 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800217c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800217e:	4842      	ldr	r0, [pc, #264]	; (8002288 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002180:	f018 f91a 	bl	801a3b8 <__assert_func>
 8002184:	6860      	ldr	r0, [r4, #4]
 8002186:	6803      	ldr	r3, [r0, #0]
 8002188:	6a1b      	ldr	r3, [r3, #32]
 800218a:	4798      	blx	r3
 800218c:	280f      	cmp	r0, #15
 800218e:	d803      	bhi.n	8002198 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 8002190:	4b3e      	ldr	r3, [pc, #248]	; (800228c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002192:	4a3c      	ldr	r2, [pc, #240]	; (8002284 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002194:	21a4      	movs	r1, #164	; 0xa4
 8002196:	e7f2      	b.n	800217e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002198:	68e0      	ldr	r0, [r4, #12]
 800219a:	6803      	ldr	r3, [r0, #0]
 800219c:	6a1b      	ldr	r3, [r3, #32]
 800219e:	4798      	blx	r3
 80021a0:	280b      	cmp	r0, #11
 80021a2:	d803      	bhi.n	80021ac <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 80021a4:	4b3a      	ldr	r3, [pc, #232]	; (8002290 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80021a6:	4a37      	ldr	r2, [pc, #220]	; (8002284 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80021a8:	21a5      	movs	r1, #165	; 0xa5
 80021aa:	e7e8      	b.n	800217e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80021ac:	f009 fd86 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 80021b0:	f009 fd8a 	bl	800bcc8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021b4:	f8d9 0000 	ldr.w	r0, [r9]
 80021b8:	b110      	cbz	r0, 80021c0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 80021ba:	6803      	ldr	r3, [r0, #0]
 80021bc:	68db      	ldr	r3, [r3, #12]
 80021be:	4798      	blx	r3
    if (*currentTrans)
 80021c0:	f8d9 0000 	ldr.w	r0, [r9]
 80021c4:	b110      	cbz	r0, 80021cc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 80021c6:	6803      	ldr	r3, [r0, #0]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	4798      	blx	r3
    if (*currentScreen)
 80021cc:	6838      	ldr	r0, [r7, #0]
 80021ce:	b110      	cbz	r0, 80021d6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 80021d0:	6803      	ldr	r3, [r0, #0]
 80021d2:	695b      	ldr	r3, [r3, #20]
 80021d4:	4798      	blx	r3
    if (*currentPresenter)
 80021d6:	f8d8 0000 	ldr.w	r0, [r8]
 80021da:	b110      	cbz	r0, 80021e2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 80021dc:	6803      	ldr	r3, [r0, #0]
 80021de:	685b      	ldr	r3, [r3, #4]
 80021e0:	4798      	blx	r3
    if (*currentScreen)
 80021e2:	6838      	ldr	r0, [r7, #0]
 80021e4:	b110      	cbz	r0, 80021ec <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 80021e6:	6803      	ldr	r3, [r0, #0]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	4798      	blx	r3
    if (*currentPresenter)
 80021ec:	f8d8 0000 	ldr.w	r0, [r8]
 80021f0:	b110      	cbz	r0, 80021f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	689b      	ldr	r3, [r3, #8]
 80021f6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80021f8:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80021fa:	6803      	ldr	r3, [r0, #0]
 80021fc:	2100      	movs	r1, #0
 80021fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002200:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002202:	f04f 0b00 	mov.w	fp, #0
 8002206:	4b23      	ldr	r3, [pc, #140]	; (8002294 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002208:	6003      	str	r3, [r0, #0]
 800220a:	4605      	mov	r5, r0
 800220c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002210:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002214:	68a0      	ldr	r0, [r4, #8]
 8002216:	6803      	ldr	r3, [r0, #0]
 8002218:	4659      	mov	r1, fp
 800221a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800221c:	4798      	blx	r3
 800221e:	4606      	mov	r6, r0
 8002220:	f000 fb60 	bl	80028e4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002224:	6860      	ldr	r0, [r4, #4]
 8002226:	6803      	ldr	r3, [r0, #0]
 8002228:	4659      	mov	r1, fp
 800222a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800222c:	4798      	blx	r3
 800222e:	4631      	mov	r1, r6
 8002230:	4604      	mov	r4, r0
 8002232:	f000 fb3d 	bl	80028b0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002236:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800223a:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800223e:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002240:	b1e4      	cbz	r4, 800227c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 8002242:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002244:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002248:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800224a:	f8c4 a008 	str.w	sl, [r4, #8]
 800224e:	4630      	mov	r0, r6
 8002250:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002252:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002254:	4798      	blx	r3
    newPresenter->activate();
 8002256:	6823      	ldr	r3, [r4, #0]
 8002258:	4620      	mov	r0, r4
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800225e:	4629      	mov	r1, r5
 8002260:	4630      	mov	r0, r6
 8002262:	f00b f960 	bl	800d526 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002266:	682b      	ldr	r3, [r5, #0]
 8002268:	4628      	mov	r0, r5
 800226a:	691b      	ldr	r3, [r3, #16]
 800226c:	4798      	blx	r3
    newTransition->invalidate();
 800226e:	682b      	ldr	r3, [r5, #0]
 8002270:	4628      	mov	r0, r5
 8002272:	695b      	ldr	r3, [r3, #20]
 8002274:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002276:	4620      	mov	r0, r4
 8002278:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 800227c:	4623      	mov	r3, r4
 800227e:	e7e1      	b.n	8002244 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 8002280:	0801bbbc 	.word	0x0801bbbc
 8002284:	0801bc4a 	.word	0x0801bc4a
 8002288:	0801bd4e 	.word	0x0801bd4e
 800228c:	0801bd95 	.word	0x0801bd95
 8002290:	0801be38 	.word	0x0801be38
 8002294:	0801bf40 	.word	0x0801bf40

08002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002298:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800229a:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800229e:	9300      	str	r3, [sp, #0]
 80022a0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80022a4:	4b04      	ldr	r3, [pc, #16]	; (80022b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80022a6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80022aa:	4804      	ldr	r0, [pc, #16]	; (80022bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80022ac:	f7ff ff56 	bl	800215c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80022b0:	b003      	add	sp, #12
 80022b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80022b6:	bf00      	nop
 80022b8:	2000a0d4 	.word	0x2000a0d4
 80022bc:	2000a0d0 	.word	0x2000a0d0

080022c0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80022c0:	6a00      	ldr	r0, [r0, #32]
 80022c2:	4770      	bx	lr

080022c4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80022c4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80022c6:	4770      	bx	lr

080022c8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80022c8:	4770      	bx	lr

080022ca <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80022ca:	888b      	ldrh	r3, [r1, #4]
 80022cc:	6980      	ldr	r0, [r0, #24]
 80022ce:	680a      	ldr	r2, [r1, #0]
 80022d0:	0adb      	lsrs	r3, r3, #11
 80022d2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80022d6:	4410      	add	r0, r2
 80022d8:	4770      	bx	lr

080022da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80022da:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80022dc:	b1c2      	cbz	r2, 8002310 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80022de:	7b13      	ldrb	r3, [r2, #12]
 80022e0:	b1b3      	cbz	r3, 8002310 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80022e2:	7b54      	ldrb	r4, [r2, #13]
 80022e4:	7ad2      	ldrb	r2, [r2, #11]
 80022e6:	0224      	lsls	r4, r4, #8
 80022e8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022ec:	4314      	orrs	r4, r2
 80022ee:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80022f0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022f2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80022f6:	8813      	ldrh	r3, [r2, #0]
 80022f8:	428b      	cmp	r3, r1
 80022fa:	d102      	bne.n	8002302 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80022fc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002300:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002302:	d805      	bhi.n	8002310 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002304:	3801      	subs	r0, #1
 8002306:	b280      	uxth	r0, r0
 8002308:	3204      	adds	r2, #4
 800230a:	2800      	cmp	r0, #0
 800230c:	d1f3      	bne.n	80022f6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800230e:	e7f7      	b.n	8002300 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002310:	2000      	movs	r0, #0
 8002312:	e7f5      	b.n	8002300 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002314 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002314:	b510      	push	{r4, lr}
 8002316:	2128      	movs	r1, #40	; 0x28
 8002318:	4604      	mov	r4, r0
 800231a:	f018 f81e 	bl	801a35a <_ZdlPvj>
 800231e:	4620      	mov	r0, r4
 8002320:	bd10      	pop	{r4, pc}
	...

08002324 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002324:	b530      	push	{r4, r5, lr}
 8002326:	b089      	sub	sp, #36	; 0x24
 8002328:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800232a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800232e:	9506      	str	r5, [sp, #24]
 8002330:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002334:	9505      	str	r5, [sp, #20]
 8002336:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800233a:	9504      	str	r5, [sp, #16]
 800233c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002340:	9503      	str	r5, [sp, #12]
 8002342:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002346:	9502      	str	r5, [sp, #8]
 8002348:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800234c:	9501      	str	r5, [sp, #4]
 800234e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002352:	9500      	str	r5, [sp, #0]
 8002354:	f00a fcea 	bl	800cd2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002358:	4b06      	ldr	r3, [pc, #24]	; (8002374 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800235a:	6023      	str	r3, [r4, #0]
 800235c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800235e:	61a3      	str	r3, [r4, #24]
 8002360:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002362:	61e3      	str	r3, [r4, #28]
 8002364:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002366:	6223      	str	r3, [r4, #32]
 8002368:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800236a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800236c:	4620      	mov	r0, r4
 800236e:	b009      	add	sp, #36	; 0x24
 8002370:	bd30      	pop	{r4, r5, pc}
 8002372:	bf00      	nop
 8002374:	0801bf64 	.word	0x0801bf64

08002378 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002378:	2000      	movs	r0, #0
 800237a:	4770      	bx	lr

0800237c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800237c:	8081      	strh	r1, [r0, #4]
    }
 800237e:	4770      	bx	lr

08002380 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002380:	80c1      	strh	r1, [r0, #6]
    }
 8002382:	4770      	bx	lr

08002384 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002384:	8101      	strh	r1, [r0, #8]
    }
 8002386:	4770      	bx	lr

08002388 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002388:	8141      	strh	r1, [r0, #10]
    }
 800238a:	4770      	bx	lr

0800238c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800238e:	4770      	bx	lr

08002390 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002390:	4770      	bx	lr

08002392 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002392:	4770      	bx	lr

08002394 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002394:	4770      	bx	lr

08002396 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002396:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002398:	88c4      	ldrh	r4, [r0, #6]
 800239a:	6803      	ldr	r3, [r0, #0]
 800239c:	1b12      	subs	r2, r2, r4
 800239e:	8884      	ldrh	r4, [r0, #4]
 80023a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80023a2:	1b09      	subs	r1, r1, r4
 80023a4:	b212      	sxth	r2, r2
    }
 80023a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80023aa:	b209      	sxth	r1, r1
 80023ac:	4718      	bx	r3

080023ae <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80023ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023b2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80023b4:	f04f 33ff 	mov.w	r3, #4294967295
 80023b8:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80023ba:	6813      	ldr	r3, [r2, #0]
 80023bc:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80023be:	6010      	str	r0, [r2, #0]
    }
 80023c0:	4770      	bx	lr

080023c2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80023c2:	4770      	bx	lr

080023c4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80023c4:	4770      	bx	lr

080023c6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80023c6:	4770      	bx	lr

080023c8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80023c8:	4770      	bx	lr

080023ca <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80023ca:	4770      	bx	lr

080023cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80023cc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023d0:	b11a      	cbz	r2, 80023da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80023d2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80023d6:	b102      	cbz	r2, 80023da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80023d8:	6018      	str	r0, [r3, #0]
        }
    }
 80023da:	4770      	bx	lr

080023dc <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80023dc:	4770      	bx	lr

080023de <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80023de:	4770      	bx	lr

080023e0 <_ZN15Screen1ViewBaseD0Ev>:
 80023e0:	b510      	push	{r4, lr}
 80023e2:	21d4      	movs	r1, #212	; 0xd4
 80023e4:	4604      	mov	r4, r0
 80023e6:	f017 ffb8 	bl	801a35a <_ZdlPvj>
 80023ea:	4620      	mov	r0, r4
 80023ec:	bd10      	pop	{r4, pc}

080023ee <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80023ee:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80023f0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80023f2:	4604      	mov	r4, r0
        setX(x);
 80023f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 80023f6:	4615      	mov	r5, r2
        setX(x);
 80023f8:	4798      	blx	r3
        setY(y);
 80023fa:	6823      	ldr	r3, [r4, #0]
 80023fc:	4629      	mov	r1, r5
 80023fe:	4620      	mov	r0, r4
 8002400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002402:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002406:	4718      	bx	r3

08002408 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8002408:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 800240a:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 800240c:	4604      	mov	r4, r0
        setWidth(width);
 800240e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 8002410:	4615      	mov	r5, r2
        setWidth(width);
 8002412:	4798      	blx	r3
        setHeight(height);
 8002414:	6823      	ldr	r3, [r4, #0]
 8002416:	4629      	mov	r1, r5
 8002418:	4620      	mov	r0, r4
 800241a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800241c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002420:	4718      	bx	r3
	...

08002424 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002424:	4a09      	ldr	r2, [pc, #36]	; (800244c <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002426:	6002      	str	r2, [r0, #0]
          visible(true)
 8002428:	f44f 7180 	mov.w	r1, #256	; 0x100
 800242c:	2200      	movs	r2, #0
 800242e:	8481      	strh	r1, [r0, #36]	; 0x24
 8002430:	21ff      	movs	r1, #255	; 0xff
 8002432:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002436:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800243a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800243e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002442:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 8002446:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop
 800244c:	0801d0c8 	.word	0x0801d0c8

08002450 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002450:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002454:	4604      	mov	r4, r0
 8002456:	4626      	mov	r6, r4
        : presenter(0)
 8002458:	2500      	movs	r5, #0
 800245a:	f00a fee7 	bl	800d22c <_ZN8touchgfx6ScreenC1Ev>
 800245e:	4b38      	ldr	r3, [pc, #224]	; (8002540 <_ZN15Screen1ViewBaseC1Ev+0xf0>)
 8002460:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002462:	f846 3b40 	str.w	r3, [r6], #64
 8002466:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800246a:	4630      	mov	r0, r6
 800246c:	f7ff ffda 	bl	8002424 <_ZN8touchgfx3BoxC1Ev>
 8002470:	4638      	mov	r0, r7
 8002472:	f7ff ffd7 	bl	8002424 <_ZN8touchgfx3BoxC1Ev>
 8002476:	f44f 7380 	mov.w	r3, #256	; 0x100
 800247a:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800247e:	4b31      	ldr	r3, [pc, #196]	; (8002544 <_ZN15Screen1ViewBaseC1Ev+0xf4>)
 8002480:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 8002484:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002488:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 8002548 <_ZN15Screen1ViewBaseC1Ev+0xf8>
 800248c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8002490:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002494:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        setXY(x, y);
 8002498:	462a      	mov	r2, r5
 800249a:	4629      	mov	r1, r5
 800249c:	4630      	mov	r0, r6
        : x(0), y(0), width(0), height(0)
 800249e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80024a2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          visible(true)
 80024a6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80024aa:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 80024ae:	f8c4 90c0 	str.w	r9, [r4, #192]	; 0xc0
        : color(col)
 80024b2:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80024b6:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        setXY(x, y);
 80024ba:	f7ff ff98 	bl	80023ee <_ZN8touchgfx8Drawable5setXYEss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80024be:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
        setWidthHeight(width, height);
 80024c2:	4630      	mov	r0, r6
 80024c4:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80024c8:	f44f 7148 	mov.w	r1, #800	; 0x320
 80024cc:	f7ff ff9c 	bl	8002408 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 80024d0:	462a      	mov	r2, r5
 80024d2:	4629      	mov	r1, r5
 80024d4:	4638      	mov	r0, r7
 80024d6:	f8c4 a068 	str.w	sl, [r4, #104]	; 0x68
 80024da:	f7ff ff88 	bl	80023ee <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80024de:	4638      	mov	r0, r7
 80024e0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80024e4:	f44f 7148 	mov.w	r1, #800	; 0x320
 80024e8:	f7ff ff8e 	bl	8002408 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80024ec:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80024f0:	f04f 33ff 	mov.w	r3, #4294967295
 80024f4:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    textArea1.setXY(308, 183);
 80024f8:	22b7      	movs	r2, #183	; 0xb7
 80024fa:	4640      	mov	r0, r8
 80024fc:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002500:	f7ff ff75 	bl	80023ee <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002504:	a902      	add	r1, sp, #8
 8002506:	4640      	mov	r0, r8
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002508:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 800250c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
 8002510:	f8cd 9008 	str.w	r9, [sp, #8]
 8002514:	f8ad 500c 	strh.w	r5, [sp, #12]
 8002518:	f007 fefd 	bl	800a316 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800251c:	1d20      	adds	r0, r4, #4
 800251e:	4631      	mov	r1, r6
 8002520:	9001      	str	r0, [sp, #4]
 8002522:	f006 fc25 	bl	8008d70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002526:	9801      	ldr	r0, [sp, #4]
 8002528:	4639      	mov	r1, r7
 800252a:	f006 fc21 	bl	8008d70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800252e:	9801      	ldr	r0, [sp, #4]
 8002530:	4641      	mov	r1, r8
 8002532:	f006 fc1d 	bl	8008d70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002536:	4620      	mov	r0, r4
 8002538:	b004      	add	sp, #16
 800253a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800253e:	bf00      	nop
 8002540:	0801bfbc 	.word	0x0801bfbc
 8002544:	0801d020 	.word	0x0801d020
 8002548:	0801bbb4 	.word	0x0801bbb4

0800254c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800254c:	4770      	bx	lr
	...

08002550 <_Z23getFont_verdana_10_4bppv>:
{
 8002550:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002552:	4d15      	ldr	r5, [pc, #84]	; (80025a8 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002554:	782c      	ldrb	r4, [r5, #0]
 8002556:	f3bf 8f5b 	dmb	ish
 800255a:	f014 0401 	ands.w	r4, r4, #1
{
 800255e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002560:	d11e      	bne.n	80025a0 <_Z23getFont_verdana_10_4bppv+0x50>
 8002562:	4628      	mov	r0, r5
 8002564:	f017 fefb 	bl	801a35e <__cxa_guard_acquire>
 8002568:	b1d0      	cbz	r0, 80025a0 <_Z23getFont_verdana_10_4bppv+0x50>
 800256a:	233f      	movs	r3, #63	; 0x3f
 800256c:	9307      	str	r3, [sp, #28]
 800256e:	4b0f      	ldr	r3, [pc, #60]	; (80025ac <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002570:	9306      	str	r3, [sp, #24]
 8002572:	4b0f      	ldr	r3, [pc, #60]	; (80025b0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002574:	490f      	ldr	r1, [pc, #60]	; (80025b4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002576:	4810      	ldr	r0, [pc, #64]	; (80025b8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002578:	9408      	str	r4, [sp, #32]
 800257a:	2201      	movs	r2, #1
 800257c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002580:	2304      	movs	r3, #4
 8002582:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002586:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800258a:	230a      	movs	r3, #10
 800258c:	9403      	str	r4, [sp, #12]
 800258e:	9400      	str	r4, [sp, #0]
 8002590:	f7ff fec8 	bl	8002324 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002594:	4628      	mov	r0, r5
 8002596:	f017 feee 	bl	801a376 <__cxa_guard_release>
 800259a:	4808      	ldr	r0, [pc, #32]	; (80025bc <_Z23getFont_verdana_10_4bppv+0x6c>)
 800259c:	f017 ff2a 	bl	801a3f4 <atexit>
    return verdana_10_4bpp;
}
 80025a0:	4805      	ldr	r0, [pc, #20]	; (80025b8 <_Z23getFont_verdana_10_4bppv+0x68>)
 80025a2:	b00d      	add	sp, #52	; 0x34
 80025a4:	bd30      	pop	{r4, r5, pc}
 80025a6:	bf00      	nop
 80025a8:	2000113c 	.word	0x2000113c
 80025ac:	0801e760 	.word	0x0801e760
 80025b0:	0801bfe8 	.word	0x0801bfe8
 80025b4:	90000344 	.word	0x90000344
 80025b8:	20001140 	.word	0x20001140
 80025bc:	0800254d 	.word	0x0800254d

080025c0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 8, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025c0:	4770      	bx	lr
	...

080025c4 <_Z23getFont_verdana_20_4bppv>:
{
 80025c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 8, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025c6:	4d15      	ldr	r5, [pc, #84]	; (800261c <_Z23getFont_verdana_20_4bppv+0x58>)
 80025c8:	782c      	ldrb	r4, [r5, #0]
 80025ca:	f3bf 8f5b 	dmb	ish
 80025ce:	f014 0401 	ands.w	r4, r4, #1
{
 80025d2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 8, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025d4:	d11f      	bne.n	8002616 <_Z23getFont_verdana_20_4bppv+0x52>
 80025d6:	4628      	mov	r0, r5
 80025d8:	f017 fec1 	bl	801a35e <__cxa_guard_acquire>
 80025dc:	b1d8      	cbz	r0, 8002616 <_Z23getFont_verdana_20_4bppv+0x52>
 80025de:	233f      	movs	r3, #63	; 0x3f
 80025e0:	9307      	str	r3, [sp, #28]
 80025e2:	4b0f      	ldr	r3, [pc, #60]	; (8002620 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80025e4:	9306      	str	r3, [sp, #24]
 80025e6:	4b0f      	ldr	r3, [pc, #60]	; (8002624 <_Z23getFont_verdana_20_4bppv+0x60>)
 80025e8:	9305      	str	r3, [sp, #20]
 80025ea:	2301      	movs	r3, #1
 80025ec:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80025f0:	9302      	str	r3, [sp, #8]
 80025f2:	2304      	movs	r3, #4
 80025f4:	e9cd 4300 	strd	r4, r3, [sp]
 80025f8:	490b      	ldr	r1, [pc, #44]	; (8002628 <_Z23getFont_verdana_20_4bppv+0x64>)
 80025fa:	480c      	ldr	r0, [pc, #48]	; (800262c <_Z23getFont_verdana_20_4bppv+0x68>)
 80025fc:	9408      	str	r4, [sp, #32]
 80025fe:	2314      	movs	r3, #20
 8002600:	2208      	movs	r2, #8
 8002602:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002606:	f7ff fe8d 	bl	8002324 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800260a:	4628      	mov	r0, r5
 800260c:	f017 feb3 	bl	801a376 <__cxa_guard_release>
 8002610:	4807      	ldr	r0, [pc, #28]	; (8002630 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002612:	f017 feef 	bl	801a3f4 <atexit>
    return verdana_20_4bpp;
}
 8002616:	4805      	ldr	r0, [pc, #20]	; (800262c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002618:	b00d      	add	sp, #52	; 0x34
 800261a:	bd30      	pop	{r4, r5, pc}
 800261c:	20001168 	.word	0x20001168
 8002620:	0801e764 	.word	0x0801e764
 8002624:	0801bfec 	.word	0x0801bfec
 8002628:	90000354 	.word	0x90000354
 800262c:	2000116c 	.word	0x2000116c
 8002630:	080025c1 	.word	0x080025c1

08002634 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002634:	4770      	bx	lr
	...

08002638 <_Z23getFont_verdana_40_4bppv>:
{
 8002638:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800263a:	4d15      	ldr	r5, [pc, #84]	; (8002690 <_Z23getFont_verdana_40_4bppv+0x58>)
 800263c:	782c      	ldrb	r4, [r5, #0]
 800263e:	f3bf 8f5b 	dmb	ish
 8002642:	f014 0401 	ands.w	r4, r4, #1
{
 8002646:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002648:	d11e      	bne.n	8002688 <_Z23getFont_verdana_40_4bppv+0x50>
 800264a:	4628      	mov	r0, r5
 800264c:	f017 fe87 	bl	801a35e <__cxa_guard_acquire>
 8002650:	b1d0      	cbz	r0, 8002688 <_Z23getFont_verdana_40_4bppv+0x50>
 8002652:	233f      	movs	r3, #63	; 0x3f
 8002654:	9307      	str	r3, [sp, #28]
 8002656:	4b0f      	ldr	r3, [pc, #60]	; (8002694 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002658:	9306      	str	r3, [sp, #24]
 800265a:	4b0f      	ldr	r3, [pc, #60]	; (8002698 <_Z23getFont_verdana_40_4bppv+0x60>)
 800265c:	490f      	ldr	r1, [pc, #60]	; (800269c <_Z23getFont_verdana_40_4bppv+0x64>)
 800265e:	4810      	ldr	r0, [pc, #64]	; (80026a0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002660:	9408      	str	r4, [sp, #32]
 8002662:	2201      	movs	r2, #1
 8002664:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002668:	2304      	movs	r3, #4
 800266a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800266e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002672:	2328      	movs	r3, #40	; 0x28
 8002674:	9403      	str	r4, [sp, #12]
 8002676:	9400      	str	r4, [sp, #0]
 8002678:	f7ff fe54 	bl	8002324 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800267c:	4628      	mov	r0, r5
 800267e:	f017 fe7a 	bl	801a376 <__cxa_guard_release>
 8002682:	4808      	ldr	r0, [pc, #32]	; (80026a4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002684:	f017 feb6 	bl	801a3f4 <atexit>
    return verdana_40_4bpp;
}
 8002688:	4805      	ldr	r0, [pc, #20]	; (80026a0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800268a:	b00d      	add	sp, #52	; 0x34
 800268c:	bd30      	pop	{r4, r5, pc}
 800268e:	bf00      	nop
 8002690:	20001194 	.word	0x20001194
 8002694:	0801e774 	.word	0x0801e774
 8002698:	0801bff0 	.word	0x0801bff0
 800269c:	900003c4 	.word	0x900003c4
 80026a0:	20001198 	.word	0x20001198
 80026a4:	08002635 	.word	0x08002635

080026a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80026a8:	2000      	movs	r0, #0
 80026aa:	4770      	bx	lr

080026ac <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80026ac:	2000      	movs	r0, #0
 80026ae:	4770      	bx	lr

080026b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80026b0:	b40e      	push	{r1, r2, r3}
 80026b2:	b503      	push	{r0, r1, lr}
 80026b4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80026b6:	2100      	movs	r1, #0
{
 80026b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80026bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80026be:	f00a f953 	bl	800c968 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80026c2:	b002      	add	sp, #8
 80026c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80026c8:	b003      	add	sp, #12
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80026cc:	b40c      	push	{r2, r3}
 80026ce:	b507      	push	{r0, r1, r2, lr}
 80026d0:	ab04      	add	r3, sp, #16
 80026d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80026d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80026d8:	f00a f946 	bl	800c968 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80026dc:	b003      	add	sp, #12
 80026de:	f85d eb04 	ldr.w	lr, [sp], #4
 80026e2:	b002      	add	sp, #8
 80026e4:	4770      	bx	lr
	...

080026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80026e8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 80026ea:	b510      	push	{r4, lr}
 80026ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80026ee:	b373      	cbz	r3, 800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80026f0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80026f2:	b92b      	cbnz	r3, 8002700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80026f4:	4b18      	ldr	r3, [pc, #96]	; (8002758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80026f6:	4a19      	ldr	r2, [pc, #100]	; (800275c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80026f8:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80026fa:	4819      	ldr	r0, [pc, #100]	; (8002760 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80026fc:	f017 fe5c 	bl	801a3b8 <__assert_func>
            return buffer[pos];
 8002700:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002702:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002706:	8b5b      	ldrh	r3, [r3, #26]
 8002708:	b30b      	cbz	r3, 800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800270a:	f00b fc6f 	bl	800dfec <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800270e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002710:	2b01      	cmp	r3, #1
 8002712:	d803      	bhi.n	800271c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002714:	4b13      	ldr	r3, [pc, #76]	; (8002764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002716:	4a14      	ldr	r2, [pc, #80]	; (8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002718:	21c4      	movs	r1, #196	; 0xc4
 800271a:	e7ee      	b.n	80026fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800271c:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800271e:	1c53      	adds	r3, r2, #1
 8002720:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002722:	2b09      	cmp	r3, #9
 8002724:	4619      	mov	r1, r3
 8002726:	bf88      	it	hi
 8002728:	f1a3 010a 	subhi.w	r1, r3, #10
 800272c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002730:	f640 103f 	movw	r0, #2367	; 0x93f
 8002734:	8b49      	ldrh	r1, [r1, #26]
 8002736:	4281      	cmp	r1, r0
 8002738:	d109      	bne.n	800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800273a:	2b0a      	cmp	r3, #10
 800273c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002740:	bf28      	it	cs
 8002742:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002744:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002748:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 800274a:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 800274c:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800274e:	4620      	mov	r0, r4
}
 8002750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002754:	f00b bb2e 	b.w	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002758:	0801bff4 	.word	0x0801bff4
 800275c:	0801bffd 	.word	0x0801bffd
 8002760:	0801c0a8 	.word	0x0801c0a8
 8002764:	0801c0f2 	.word	0x0801c0f2
 8002768:	0801c100 	.word	0x0801c100

0800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800276c:	f00b badc 	b.w	800dd28 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002770 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002770:	b510      	push	{r4, lr}
 8002772:	b086      	sub	sp, #24
 8002774:	ac02      	add	r4, sp, #8
 8002776:	e884 0006 	stmia.w	r4, {r1, r2}
 800277a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800277c:	ab0a      	add	r3, sp, #40	; 0x28
 800277e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002780:	9301      	str	r3, [sp, #4]
 8002782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002784:	9300      	str	r3, [sp, #0]
 8002786:	4621      	mov	r1, r4
 8002788:	9b08      	ldr	r3, [sp, #32]
 800278a:	f008 fe1a 	bl	800b3c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800278e:	b006      	add	sp, #24
 8002790:	bd10      	pop	{r4, pc}
	...

08002794 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002794:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002796:	bb18      	cbnz	r0, 80027e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002798:	4b12      	ldr	r3, [pc, #72]	; (80027e4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800279a:	4813      	ldr	r0, [pc, #76]	; (80027e8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	4913      	ldr	r1, [pc, #76]	; (80027ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80027a0:	b1b3      	cbz	r3, 80027d0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80027a2:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80027a4:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80027a6:	441a      	add	r2, r3
 80027a8:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80027aa:	685a      	ldr	r2, [r3, #4]
 80027ac:	441a      	add	r2, r3
 80027ae:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80027b0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80027b2:	4b0f      	ldr	r3, [pc, #60]	; (80027f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80027b4:	2200      	movs	r2, #0
 80027b6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80027b8:	f000 f838 	bl	800282c <_ZN17TypedTextDatabase8getFontsEv>
 80027bc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80027be:	f000 f833 	bl	8002828 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80027c2:	4b0c      	ldr	r3, [pc, #48]	; (80027f4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80027c4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80027c6:	4b0c      	ldr	r3, [pc, #48]	; (80027f8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80027c8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80027ca:	4b0c      	ldr	r3, [pc, #48]	; (80027fc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80027cc:	8018      	strh	r0, [r3, #0]
    }
}
 80027ce:	e007      	b.n	80027e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80027d0:	4b0b      	ldr	r3, [pc, #44]	; (8002800 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80027d2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80027d4:	4b0b      	ldr	r3, [pc, #44]	; (8002804 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80027d6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80027d8:	4b0b      	ldr	r3, [pc, #44]	; (8002808 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80027da:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80027dc:	2c00      	cmp	r4, #0
 80027de:	d1e8      	bne.n	80027b2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80027e0:	bd38      	pop	{r3, r4, r5, pc}
 80027e2:	bf00      	nop
 80027e4:	200011c0 	.word	0x200011c0
 80027e8:	200011c4 	.word	0x200011c4
 80027ec:	200011c8 	.word	0x200011c8
 80027f0:	200011cc 	.word	0x200011cc
 80027f4:	2000a0e4 	.word	0x2000a0e4
 80027f8:	2000a0ec 	.word	0x2000a0ec
 80027fc:	2000a0e8 	.word	0x2000a0e8
 8002800:	900003d8 	.word	0x900003d8
 8002804:	900003d4 	.word	0x900003d4
 8002808:	900003f0 	.word	0x900003f0

0800280c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800280c:	4b04      	ldr	r3, [pc, #16]	; (8002820 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002814:	4b03      	ldr	r3, [pc, #12]	; (8002824 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002816:	681b      	ldr	r3, [r3, #0]
}
 8002818:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800281c:	4770      	bx	lr
 800281e:	bf00      	nop
 8002820:	200011c8 	.word	0x200011c8
 8002824:	200011c4 	.word	0x200011c4

08002828 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002828:	2001      	movs	r0, #1
 800282a:	4770      	bx	lr

0800282c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800282c:	4800      	ldr	r0, [pc, #0]	; (8002830 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800282e:	4770      	bx	lr
 8002830:	200011d0 	.word	0x200011d0

08002834 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002834:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002836:	f7ff fec5 	bl	80025c4 <_Z23getFont_verdana_20_4bppv>
};
 800283a:	4c04      	ldr	r4, [pc, #16]	; (800284c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 800283c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800283e:	f7ff fefb 	bl	8002638 <_Z23getFont_verdana_40_4bppv>
};
 8002842:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002844:	f7ff fe84 	bl	8002550 <_Z23getFont_verdana_10_4bppv>
};
 8002848:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800284a:	bd10      	pop	{r4, pc}
 800284c:	200011d0 	.word	0x200011d0

08002850 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002850:	4770      	bx	lr

08002852 <_ZN19FrontendApplicationD0Ev>:
 8002852:	b510      	push	{r4, lr}
 8002854:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002858:	4604      	mov	r4, r0
 800285a:	f017 fd7e 	bl	801a35a <_ZdlPvj>
 800285e:	4620      	mov	r0, r4
 8002860:	bd10      	pop	{r4, pc}

08002862 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002862:	b510      	push	{r4, lr}
 8002864:	4604      	mov	r4, r0
    {
        model.tick();
 8002866:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800286a:	f000 f812 	bl	8002892 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800286e:	4620      	mov	r0, r4
    }
 8002870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002874:	f009 b8fa 	b.w	800ba6c <_ZN8touchgfx11Application15handleTickEventEv>

08002878 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002878:	b510      	push	{r4, lr}
 800287a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800287c:	f7ff fc2e 	bl	80020dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002880:	4b01      	ldr	r3, [pc, #4]	; (8002888 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002882:	6023      	str	r3, [r4, #0]
{

}
 8002884:	4620      	mov	r0, r4
 8002886:	bd10      	pop	{r4, pc}
 8002888:	0801c1dc 	.word	0x0801c1dc

0800288c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800288c:	2200      	movs	r2, #0
 800288e:	6002      	str	r2, [r0, #0]
{

}
 8002890:	4770      	bx	lr

08002892 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002892:	4770      	bx	lr

08002894 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002894:	4770      	bx	lr

08002896 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002896:	3804      	subs	r0, #4
 8002898:	4770      	bx	lr

0800289a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800289a:	4770      	bx	lr

0800289c <_ZN16Screen1PresenterD0Ev>:
 800289c:	b510      	push	{r4, lr}
 800289e:	2110      	movs	r1, #16
 80028a0:	4604      	mov	r4, r0
 80028a2:	f017 fd5a 	bl	801a35a <_ZdlPvj>
 80028a6:	4620      	mov	r0, r4
 80028a8:	bd10      	pop	{r4, pc}

080028aa <_ZThn4_N16Screen1PresenterD0Ev>:
 80028aa:	f1a0 0004 	sub.w	r0, r0, #4
 80028ae:	e7f5      	b.n	800289c <_ZN16Screen1PresenterD0Ev>

080028b0 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80028b0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80028b2:	2200      	movs	r2, #0
 80028b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80028b6:	4a04      	ldr	r2, [pc, #16]	; (80028c8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80028b8:	60c1      	str	r1, [r0, #12]
 80028ba:	f102 0408 	add.w	r4, r2, #8
 80028be:	3220      	adds	r2, #32
 80028c0:	6004      	str	r4, [r0, #0]
 80028c2:	6042      	str	r2, [r0, #4]
}
 80028c4:	bd10      	pop	{r4, pc}
 80028c6:	bf00      	nop
 80028c8:	0801c218 	.word	0x0801c218

080028cc <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80028cc:	4770      	bx	lr

080028ce <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80028ce:	4770      	bx	lr

080028d0 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 80028d0:	f7ff bd85 	b.w	80023de <_ZN15Screen1ViewBase11setupScreenEv>

080028d4 <_ZN11Screen1ViewD0Ev>:
 80028d4:	b510      	push	{r4, lr}
 80028d6:	21d4      	movs	r1, #212	; 0xd4
 80028d8:	4604      	mov	r4, r0
 80028da:	f017 fd3e 	bl	801a35a <_ZdlPvj>
 80028de:	4620      	mov	r0, r4
 80028e0:	bd10      	pop	{r4, pc}
	...

080028e4 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80028e4:	b510      	push	{r4, lr}
 80028e6:	4604      	mov	r4, r0
 80028e8:	f7ff fdb2 	bl	8002450 <_ZN15Screen1ViewBaseC1Ev>
 80028ec:	4b01      	ldr	r3, [pc, #4]	; (80028f4 <_ZN11Screen1ViewC1Ev+0x10>)
 80028ee:	6023      	str	r3, [r4, #0]
}
 80028f0:	4620      	mov	r0, r4
 80028f2:	bd10      	pop	{r4, pc}
 80028f4:	0801c248 	.word	0x0801c248

080028f8 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80028f8:	4770      	bx	lr

080028fa <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80028fa:	2000      	movs	r0, #0
 80028fc:	4770      	bx	lr

080028fe <ft6x06_ReadID>:
{
 80028fe:	b510      	push	{r4, lr}
 8002900:	4604      	mov	r4, r0
  TS_IO_Init();
 8002902:	f000 fb7d 	bl	8003000 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002906:	21a8      	movs	r1, #168	; 0xa8
 8002908:	b2e0      	uxtb	r0, r4
 800290a:	f000 fb93 	bl	8003034 <TS_IO_Read>
}
 800290e:	b280      	uxth	r0, r0
 8002910:	bd10      	pop	{r4, pc}
	...

08002914 <ft6x06_TS_DetectTouch>:
{
 8002914:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002916:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002918:	2102      	movs	r1, #2
 800291a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800291c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002920:	f000 fb88 	bl	8003034 <TS_IO_Read>
 8002924:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002928:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800292c:	f003 030f 	and.w	r3, r3, #15
 8002930:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002934:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002938:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800293a:	bf88      	it	hi
 800293c:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002940:	4b04      	ldr	r3, [pc, #16]	; (8002954 <ft6x06_TS_DetectTouch+0x40>)
 8002942:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002946:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800294a:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800294c:	2200      	movs	r2, #0
 800294e:	709a      	strb	r2, [r3, #2]
}
 8002950:	b002      	add	sp, #8
 8002952:	bd10      	pop	{r4, pc}
 8002954:	200011de 	.word	0x200011de

08002958 <ft6x06_TS_GetXY>:
{
 8002958:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800295a:	4c15      	ldr	r4, [pc, #84]	; (80029b0 <ft6x06_TS_GetXY+0x58>)
{
 800295c:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800295e:	78a3      	ldrb	r3, [r4, #2]
 8002960:	7862      	ldrb	r2, [r4, #1]
 8002962:	429a      	cmp	r2, r3
{
 8002964:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002966:	d91f      	bls.n	80029a8 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002968:	b303      	cbz	r3, 80029ac <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800296a:	2b01      	cmp	r3, #1
 800296c:	bf14      	ite	ne
 800296e:	2100      	movne	r1, #0
 8002970:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002972:	2304      	movs	r3, #4
 8002974:	eb0d 0203 	add.w	r2, sp, r3
 8002978:	b2c0      	uxtb	r0, r0
 800297a:	f000 fb77 	bl	800306c <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800297e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002982:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002986:	021b      	lsls	r3, r3, #8
 8002988:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800298c:	4313      	orrs	r3, r2
 800298e:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002990:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002994:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002998:	021b      	lsls	r3, r3, #8
 800299a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800299e:	4313      	orrs	r3, r2
 80029a0:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 80029a2:	78a3      	ldrb	r3, [r4, #2]
 80029a4:	3301      	adds	r3, #1
 80029a6:	70a3      	strb	r3, [r4, #2]
}
 80029a8:	b002      	add	sp, #8
 80029aa:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 80029ac:	2103      	movs	r1, #3
 80029ae:	e7e0      	b.n	8002972 <ft6x06_TS_GetXY+0x1a>
 80029b0:	200011de 	.word	0x200011de

080029b4 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80029b4:	2201      	movs	r2, #1
 80029b6:	21a4      	movs	r1, #164	; 0xa4
 80029b8:	b2c0      	uxtb	r0, r0
 80029ba:	f000 bb23 	b.w	8003004 <TS_IO_Write>

080029be <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80029be:	2200      	movs	r2, #0
 80029c0:	21a4      	movs	r1, #164	; 0xa4
 80029c2:	b2c0      	uxtb	r0, r0
 80029c4:	f000 bb1e 	b.w	8003004 <TS_IO_Write>

080029c8 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 80029c8:	f7ff bff9 	b.w	80029be <ft6x06_TS_DisableIT>

080029cc <ft6x06_TS_ClearIT>:
 80029cc:	4770      	bx	lr
	...

080029d0 <ft6x06_Init>:
{  
 80029d0:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 80029d2:	4b09      	ldr	r3, [pc, #36]	; (80029f8 <ft6x06_Init+0x28>)
 80029d4:	781a      	ldrb	r2, [r3, #0]
 80029d6:	4290      	cmp	r0, r2
 80029d8:	d00a      	beq.n	80029f0 <ft6x06_Init+0x20>
 80029da:	7859      	ldrb	r1, [r3, #1]
 80029dc:	4288      	cmp	r0, r1
 80029de:	d007      	beq.n	80029f0 <ft6x06_Init+0x20>
 80029e0:	b10a      	cbz	r2, 80029e6 <ft6x06_Init+0x16>
 80029e2:	b929      	cbnz	r1, 80029f0 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 80029e4:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 80029e6:	5498      	strb	r0, [r3, r2]
}
 80029e8:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 80029ec:	f000 bb08 	b.w	8003000 <TS_IO_Init>
}
 80029f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80029f4:	4770      	bx	lr
 80029f6:	bf00      	nop
 80029f8:	200011dc 	.word	0x200011dc

080029fc <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80029fc:	b538      	push	{r3, r4, r5, lr}
 80029fe:	4604      	mov	r4, r0
 8002a00:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002a02:	2000      	movs	r0, #0
 8002a04:	49cb      	ldr	r1, [pc, #812]	; (8002d34 <OTM8009A_Init+0x338>)
 8002a06:	f7fe f807 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002a0a:	49cb      	ldr	r1, [pc, #812]	; (8002d38 <OTM8009A_Init+0x33c>)
 8002a0c:	2003      	movs	r0, #3
 8002a0e:	f7fe f803 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002a12:	49ca      	ldr	r1, [pc, #808]	; (8002d3c <OTM8009A_Init+0x340>)
 8002a14:	2000      	movs	r0, #0
 8002a16:	f7fd ffff 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002a1a:	49c9      	ldr	r1, [pc, #804]	; (8002d40 <OTM8009A_Init+0x344>)
 8002a1c:	2002      	movs	r0, #2
 8002a1e:	f7fd fffb 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002a22:	49c6      	ldr	r1, [pc, #792]	; (8002d3c <OTM8009A_Init+0x340>)
 8002a24:	2000      	movs	r0, #0
 8002a26:	f7fd fff7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002a2a:	49c6      	ldr	r1, [pc, #792]	; (8002d44 <OTM8009A_Init+0x348>)
 8002a2c:	2000      	movs	r0, #0
 8002a2e:	f7fd fff3 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002a32:	200a      	movs	r0, #10
 8002a34:	f000 fb30 	bl	8003098 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002a38:	49c3      	ldr	r1, [pc, #780]	; (8002d48 <OTM8009A_Init+0x34c>)
 8002a3a:	2000      	movs	r0, #0
 8002a3c:	f7fd ffec 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002a40:	49c2      	ldr	r1, [pc, #776]	; (8002d4c <OTM8009A_Init+0x350>)
 8002a42:	2000      	movs	r0, #0
 8002a44:	f7fd ffe8 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002a48:	200a      	movs	r0, #10
 8002a4a:	f000 fb25 	bl	8003098 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002a4e:	49c0      	ldr	r1, [pc, #768]	; (8002d50 <OTM8009A_Init+0x354>)
 8002a50:	2000      	movs	r0, #0
 8002a52:	f7fd ffe1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002a56:	49bf      	ldr	r1, [pc, #764]	; (8002d54 <OTM8009A_Init+0x358>)
 8002a58:	2000      	movs	r0, #0
 8002a5a:	f7fd ffdd 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002a5e:	49be      	ldr	r1, [pc, #760]	; (8002d58 <OTM8009A_Init+0x35c>)
 8002a60:	2000      	movs	r0, #0
 8002a62:	f7fd ffd9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002a66:	49bd      	ldr	r1, [pc, #756]	; (8002d5c <OTM8009A_Init+0x360>)
 8002a68:	2000      	movs	r0, #0
 8002a6a:	f7fd ffd5 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002a6e:	49bc      	ldr	r1, [pc, #752]	; (8002d60 <OTM8009A_Init+0x364>)
 8002a70:	2000      	movs	r0, #0
 8002a72:	f7fd ffd1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002a76:	49bb      	ldr	r1, [pc, #748]	; (8002d64 <OTM8009A_Init+0x368>)
 8002a78:	2000      	movs	r0, #0
 8002a7a:	f7fd ffcd 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002a7e:	49ad      	ldr	r1, [pc, #692]	; (8002d34 <OTM8009A_Init+0x338>)
 8002a80:	2000      	movs	r0, #0
 8002a82:	f7fd ffc9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002a86:	49b8      	ldr	r1, [pc, #736]	; (8002d68 <OTM8009A_Init+0x36c>)
 8002a88:	2000      	movs	r0, #0
 8002a8a:	f7fd ffc5 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002a8e:	49b7      	ldr	r1, [pc, #732]	; (8002d6c <OTM8009A_Init+0x370>)
 8002a90:	2000      	movs	r0, #0
 8002a92:	f7fd ffc1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002a96:	49b6      	ldr	r1, [pc, #728]	; (8002d70 <OTM8009A_Init+0x374>)
 8002a98:	2000      	movs	r0, #0
 8002a9a:	f7fd ffbd 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002a9e:	49b5      	ldr	r1, [pc, #724]	; (8002d74 <OTM8009A_Init+0x378>)
 8002aa0:	2000      	movs	r0, #0
 8002aa2:	f7fd ffb9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002aa6:	49b4      	ldr	r1, [pc, #720]	; (8002d78 <OTM8009A_Init+0x37c>)
 8002aa8:	2000      	movs	r0, #0
 8002aaa:	f7fd ffb5 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002aae:	49b3      	ldr	r1, [pc, #716]	; (8002d7c <OTM8009A_Init+0x380>)
 8002ab0:	2000      	movs	r0, #0
 8002ab2:	f7fd ffb1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002ab6:	49b2      	ldr	r1, [pc, #712]	; (8002d80 <OTM8009A_Init+0x384>)
 8002ab8:	2000      	movs	r0, #0
 8002aba:	f7fd ffad 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002abe:	49b1      	ldr	r1, [pc, #708]	; (8002d84 <OTM8009A_Init+0x388>)
 8002ac0:	2000      	movs	r0, #0
 8002ac2:	f7fd ffa9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002ac6:	49a5      	ldr	r1, [pc, #660]	; (8002d5c <OTM8009A_Init+0x360>)
 8002ac8:	2000      	movs	r0, #0
 8002aca:	f7fd ffa5 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002ace:	4999      	ldr	r1, [pc, #612]	; (8002d34 <OTM8009A_Init+0x338>)
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	f7fd ffa1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002ad6:	49ac      	ldr	r1, [pc, #688]	; (8002d88 <OTM8009A_Init+0x38c>)
 8002ad8:	2002      	movs	r0, #2
 8002ada:	f7fd ff9d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002ade:	49ab      	ldr	r1, [pc, #684]	; (8002d8c <OTM8009A_Init+0x390>)
 8002ae0:	2000      	movs	r0, #0
 8002ae2:	f7fd ff99 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002ae6:	49aa      	ldr	r1, [pc, #680]	; (8002d90 <OTM8009A_Init+0x394>)
 8002ae8:	2000      	movs	r0, #0
 8002aea:	f7fd ff95 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002aee:	49a9      	ldr	r1, [pc, #676]	; (8002d94 <OTM8009A_Init+0x398>)
 8002af0:	2000      	movs	r0, #0
 8002af2:	f7fd ff91 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002af6:	49a8      	ldr	r1, [pc, #672]	; (8002d98 <OTM8009A_Init+0x39c>)
 8002af8:	2000      	movs	r0, #0
 8002afa:	f7fd ff8d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002afe:	49a7      	ldr	r1, [pc, #668]	; (8002d9c <OTM8009A_Init+0x3a0>)
 8002b00:	2000      	movs	r0, #0
 8002b02:	f7fd ff89 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002b06:	49a6      	ldr	r1, [pc, #664]	; (8002da0 <OTM8009A_Init+0x3a4>)
 8002b08:	2000      	movs	r0, #0
 8002b0a:	f7fd ff85 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002b0e:	4997      	ldr	r1, [pc, #604]	; (8002d6c <OTM8009A_Init+0x370>)
 8002b10:	2000      	movs	r0, #0
 8002b12:	f7fd ff81 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002b16:	49a3      	ldr	r1, [pc, #652]	; (8002da4 <OTM8009A_Init+0x3a8>)
 8002b18:	2000      	movs	r0, #0
 8002b1a:	f7fd ff7d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002b1e:	4995      	ldr	r1, [pc, #596]	; (8002d74 <OTM8009A_Init+0x378>)
 8002b20:	2000      	movs	r0, #0
 8002b22:	f7fd ff79 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002b26:	49a0      	ldr	r1, [pc, #640]	; (8002da8 <OTM8009A_Init+0x3ac>)
 8002b28:	2000      	movs	r0, #0
 8002b2a:	f7fd ff75 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002b2e:	499f      	ldr	r1, [pc, #636]	; (8002dac <OTM8009A_Init+0x3b0>)
 8002b30:	2000      	movs	r0, #0
 8002b32:	f7fd ff71 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002b36:	499e      	ldr	r1, [pc, #632]	; (8002db0 <OTM8009A_Init+0x3b4>)
 8002b38:	2002      	movs	r0, #2
 8002b3a:	f7fd ff6d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002b3e:	497f      	ldr	r1, [pc, #508]	; (8002d3c <OTM8009A_Init+0x340>)
 8002b40:	2000      	movs	r0, #0
 8002b42:	f7fd ff69 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002b46:	499b      	ldr	r1, [pc, #620]	; (8002db4 <OTM8009A_Init+0x3b8>)
 8002b48:	2006      	movs	r0, #6
 8002b4a:	f7fd ff65 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002b4e:	499a      	ldr	r1, [pc, #616]	; (8002db8 <OTM8009A_Init+0x3bc>)
 8002b50:	2000      	movs	r0, #0
 8002b52:	f7fd ff61 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002b56:	4999      	ldr	r1, [pc, #612]	; (8002dbc <OTM8009A_Init+0x3c0>)
 8002b58:	200e      	movs	r0, #14
 8002b5a:	f7fd ff5d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002b5e:	4998      	ldr	r1, [pc, #608]	; (8002dc0 <OTM8009A_Init+0x3c4>)
 8002b60:	2000      	movs	r0, #0
 8002b62:	f7fd ff59 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002b66:	4997      	ldr	r1, [pc, #604]	; (8002dc4 <OTM8009A_Init+0x3c8>)
 8002b68:	200e      	movs	r0, #14
 8002b6a:	f7fd ff55 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002b6e:	4996      	ldr	r1, [pc, #600]	; (8002dc8 <OTM8009A_Init+0x3cc>)
 8002b70:	2000      	movs	r0, #0
 8002b72:	f7fd ff51 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002b76:	4995      	ldr	r1, [pc, #596]	; (8002dcc <OTM8009A_Init+0x3d0>)
 8002b78:	200a      	movs	r0, #10
 8002b7a:	f7fd ff4d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002b7e:	4994      	ldr	r1, [pc, #592]	; (8002dd0 <OTM8009A_Init+0x3d4>)
 8002b80:	2000      	movs	r0, #0
 8002b82:	f7fd ff49 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002b86:	4993      	ldr	r1, [pc, #588]	; (8002dd4 <OTM8009A_Init+0x3d8>)
 8002b88:	2000      	movs	r0, #0
 8002b8a:	f7fd ff45 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002b8e:	496b      	ldr	r1, [pc, #428]	; (8002d3c <OTM8009A_Init+0x340>)
 8002b90:	2000      	movs	r0, #0
 8002b92:	f7fd ff41 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002b96:	4990      	ldr	r1, [pc, #576]	; (8002dd8 <OTM8009A_Init+0x3dc>)
 8002b98:	200a      	movs	r0, #10
 8002b9a:	f7fd ff3d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002b9e:	498f      	ldr	r1, [pc, #572]	; (8002ddc <OTM8009A_Init+0x3e0>)
 8002ba0:	2000      	movs	r0, #0
 8002ba2:	f7fd ff39 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002ba6:	498e      	ldr	r1, [pc, #568]	; (8002de0 <OTM8009A_Init+0x3e4>)
 8002ba8:	200f      	movs	r0, #15
 8002baa:	f7fd ff35 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002bae:	4982      	ldr	r1, [pc, #520]	; (8002db8 <OTM8009A_Init+0x3bc>)
 8002bb0:	2000      	movs	r0, #0
 8002bb2:	f7fd ff31 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002bb6:	498b      	ldr	r1, [pc, #556]	; (8002de4 <OTM8009A_Init+0x3e8>)
 8002bb8:	200f      	movs	r0, #15
 8002bba:	f7fd ff2d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002bbe:	4980      	ldr	r1, [pc, #512]	; (8002dc0 <OTM8009A_Init+0x3c4>)
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	f7fd ff29 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002bc6:	4988      	ldr	r1, [pc, #544]	; (8002de8 <OTM8009A_Init+0x3ec>)
 8002bc8:	200a      	movs	r0, #10
 8002bca:	f7fd ff25 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002bce:	497e      	ldr	r1, [pc, #504]	; (8002dc8 <OTM8009A_Init+0x3cc>)
 8002bd0:	2000      	movs	r0, #0
 8002bd2:	f7fd ff21 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002bd6:	4985      	ldr	r1, [pc, #532]	; (8002dec <OTM8009A_Init+0x3f0>)
 8002bd8:	200f      	movs	r0, #15
 8002bda:	f7fd ff1d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002bde:	497c      	ldr	r1, [pc, #496]	; (8002dd0 <OTM8009A_Init+0x3d4>)
 8002be0:	2000      	movs	r0, #0
 8002be2:	f7fd ff19 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002be6:	4982      	ldr	r1, [pc, #520]	; (8002df0 <OTM8009A_Init+0x3f4>)
 8002be8:	200f      	movs	r0, #15
 8002bea:	f7fd ff15 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002bee:	4981      	ldr	r1, [pc, #516]	; (8002df4 <OTM8009A_Init+0x3f8>)
 8002bf0:	2000      	movs	r0, #0
 8002bf2:	f7fd ff11 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002bf6:	4980      	ldr	r1, [pc, #512]	; (8002df8 <OTM8009A_Init+0x3fc>)
 8002bf8:	200a      	movs	r0, #10
 8002bfa:	f7fd ff0d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002bfe:	497f      	ldr	r1, [pc, #508]	; (8002dfc <OTM8009A_Init+0x400>)
 8002c00:	2000      	movs	r0, #0
 8002c02:	f7fd ff09 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002c06:	497e      	ldr	r1, [pc, #504]	; (8002e00 <OTM8009A_Init+0x404>)
 8002c08:	200a      	movs	r0, #10
 8002c0a:	f7fd ff05 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002c0e:	494b      	ldr	r1, [pc, #300]	; (8002d3c <OTM8009A_Init+0x340>)
 8002c10:	2000      	movs	r0, #0
 8002c12:	f7fd ff01 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002c16:	497b      	ldr	r1, [pc, #492]	; (8002e04 <OTM8009A_Init+0x408>)
 8002c18:	200a      	movs	r0, #10
 8002c1a:	f7fd fefd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002c1e:	496f      	ldr	r1, [pc, #444]	; (8002ddc <OTM8009A_Init+0x3e0>)
 8002c20:	2000      	movs	r0, #0
 8002c22:	f7fd fef9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002c26:	4978      	ldr	r1, [pc, #480]	; (8002e08 <OTM8009A_Init+0x40c>)
 8002c28:	200f      	movs	r0, #15
 8002c2a:	f7fd fef5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002c2e:	4962      	ldr	r1, [pc, #392]	; (8002db8 <OTM8009A_Init+0x3bc>)
 8002c30:	2000      	movs	r0, #0
 8002c32:	f7fd fef1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002c36:	4975      	ldr	r1, [pc, #468]	; (8002e0c <OTM8009A_Init+0x410>)
 8002c38:	200f      	movs	r0, #15
 8002c3a:	f7fd feed 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002c3e:	4960      	ldr	r1, [pc, #384]	; (8002dc0 <OTM8009A_Init+0x3c4>)
 8002c40:	2000      	movs	r0, #0
 8002c42:	f7fd fee9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002c46:	4972      	ldr	r1, [pc, #456]	; (8002e10 <OTM8009A_Init+0x414>)
 8002c48:	200a      	movs	r0, #10
 8002c4a:	f7fd fee5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002c4e:	495e      	ldr	r1, [pc, #376]	; (8002dc8 <OTM8009A_Init+0x3cc>)
 8002c50:	2000      	movs	r0, #0
 8002c52:	f7fd fee1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002c56:	496f      	ldr	r1, [pc, #444]	; (8002e14 <OTM8009A_Init+0x418>)
 8002c58:	200f      	movs	r0, #15
 8002c5a:	f7fd fedd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002c5e:	495c      	ldr	r1, [pc, #368]	; (8002dd0 <OTM8009A_Init+0x3d4>)
 8002c60:	2000      	movs	r0, #0
 8002c62:	f7fd fed9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002c66:	496c      	ldr	r1, [pc, #432]	; (8002e18 <OTM8009A_Init+0x41c>)
 8002c68:	200f      	movs	r0, #15
 8002c6a:	f7fd fed5 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002c6e:	493f      	ldr	r1, [pc, #252]	; (8002d6c <OTM8009A_Init+0x370>)
 8002c70:	2000      	movs	r0, #0
 8002c72:	f7fd fed1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002c76:	4969      	ldr	r1, [pc, #420]	; (8002e1c <OTM8009A_Init+0x420>)
 8002c78:	2000      	movs	r0, #0
 8002c7a:	f7fd fecd 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002c7e:	4968      	ldr	r1, [pc, #416]	; (8002e20 <OTM8009A_Init+0x424>)
 8002c80:	2000      	movs	r0, #0
 8002c82:	f7fd fec9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002c86:	4967      	ldr	r1, [pc, #412]	; (8002e24 <OTM8009A_Init+0x428>)
 8002c88:	2000      	movs	r0, #0
 8002c8a:	f7fd fec5 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002c8e:	4966      	ldr	r1, [pc, #408]	; (8002e28 <OTM8009A_Init+0x42c>)
 8002c90:	2000      	movs	r0, #0
 8002c92:	f7fd fec1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002c96:	4965      	ldr	r1, [pc, #404]	; (8002e2c <OTM8009A_Init+0x430>)
 8002c98:	2000      	movs	r0, #0
 8002c9a:	f7fd febd 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c9e:	4925      	ldr	r1, [pc, #148]	; (8002d34 <OTM8009A_Init+0x338>)
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fd feb9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002ca6:	4962      	ldr	r1, [pc, #392]	; (8002e30 <OTM8009A_Init+0x434>)
 8002ca8:	2003      	movs	r0, #3
 8002caa:	f7fd feb5 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002cae:	4921      	ldr	r1, [pc, #132]	; (8002d34 <OTM8009A_Init+0x338>)
 8002cb0:	2000      	movs	r0, #0
 8002cb2:	f7fd feb1 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002cb6:	491f      	ldr	r1, [pc, #124]	; (8002d34 <OTM8009A_Init+0x338>)
 8002cb8:	2000      	movs	r0, #0
 8002cba:	f7fd fead 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002cbe:	495d      	ldr	r1, [pc, #372]	; (8002e34 <OTM8009A_Init+0x438>)
 8002cc0:	2010      	movs	r0, #16
 8002cc2:	f7fd fea9 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002cc6:	491b      	ldr	r1, [pc, #108]	; (8002d34 <OTM8009A_Init+0x338>)
 8002cc8:	2000      	movs	r0, #0
 8002cca:	f7fd fea5 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002cce:	495a      	ldr	r1, [pc, #360]	; (8002e38 <OTM8009A_Init+0x43c>)
 8002cd0:	2010      	movs	r0, #16
 8002cd2:	f7fd fea1 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002cd6:	2000      	movs	r0, #0
 8002cd8:	4958      	ldr	r1, [pc, #352]	; (8002e3c <OTM8009A_Init+0x440>)
 8002cda:	f7fd fe9d 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002cde:	2078      	movs	r0, #120	; 0x78
 8002ce0:	f000 f9da 	bl	8003098 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002ce4:	2c00      	cmp	r4, #0
 8002ce6:	f000 80c9 	beq.w	8002e7c <OTM8009A_Init+0x480>
 8002cea:	2c02      	cmp	r4, #2
 8002cec:	d103      	bne.n	8002cf6 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002cee:	4954      	ldr	r1, [pc, #336]	; (8002e40 <OTM8009A_Init+0x444>)
 8002cf0:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002cf2:	f7fd fe91 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002cf6:	2d01      	cmp	r5, #1
 8002cf8:	d10b      	bne.n	8002d12 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002cfa:	4952      	ldr	r1, [pc, #328]	; (8002e44 <OTM8009A_Init+0x448>)
 8002cfc:	2000      	movs	r0, #0
 8002cfe:	f7fd fe8b 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002d02:	4951      	ldr	r1, [pc, #324]	; (8002e48 <OTM8009A_Init+0x44c>)
 8002d04:	2004      	movs	r0, #4
 8002d06:	f7fd fe87 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002d0a:	4950      	ldr	r1, [pc, #320]	; (8002e4c <OTM8009A_Init+0x450>)
 8002d0c:	2004      	movs	r0, #4
 8002d0e:	f7fd fe83 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002d12:	494f      	ldr	r1, [pc, #316]	; (8002e50 <OTM8009A_Init+0x454>)
 8002d14:	2000      	movs	r0, #0
 8002d16:	f7fd fe7f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002d1a:	494e      	ldr	r1, [pc, #312]	; (8002e54 <OTM8009A_Init+0x458>)
 8002d1c:	2000      	movs	r0, #0
 8002d1e:	f7fd fe7b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002d22:	494d      	ldr	r1, [pc, #308]	; (8002e58 <OTM8009A_Init+0x45c>)
 8002d24:	2000      	movs	r0, #0
 8002d26:	f7fd fe77 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8002d2a:	494c      	ldr	r1, [pc, #304]	; (8002e5c <OTM8009A_Init+0x460>)
 8002d2c:	2000      	movs	r0, #0
 8002d2e:	f7fd fe73 	bl	8000a18 <DSI_IO_WriteCmd>
 8002d32:	e095      	b.n	8002e60 <OTM8009A_Init+0x464>
 8002d34:	0801c274 	.word	0x0801c274
 8002d38:	0801c2da 	.word	0x0801c2da
 8002d3c:	0801c28a 	.word	0x0801c28a
 8002d40:	0801c360 	.word	0x0801c360
 8002d44:	0801c2a0 	.word	0x0801c2a0
 8002d48:	0801c2b6 	.word	0x0801c2b6
 8002d4c:	0801c2cc 	.word	0x0801c2cc
 8002d50:	0801c2d2 	.word	0x0801c2d2
 8002d54:	0801c2d4 	.word	0x0801c2d4
 8002d58:	0801c2d6 	.word	0x0801c2d6
 8002d5c:	0801c2d8 	.word	0x0801c2d8
 8002d60:	0801c276 	.word	0x0801c276
 8002d64:	0801c278 	.word	0x0801c278
 8002d68:	0801c27a 	.word	0x0801c27a
 8002d6c:	0801c27c 	.word	0x0801c27c
 8002d70:	0801c27e 	.word	0x0801c27e
 8002d74:	0801c280 	.word	0x0801c280
 8002d78:	0801c282 	.word	0x0801c282
 8002d7c:	0801c284 	.word	0x0801c284
 8002d80:	0801c286 	.word	0x0801c286
 8002d84:	0801c288 	.word	0x0801c288
 8002d88:	0801c3de 	.word	0x0801c3de
 8002d8c:	0801c28c 	.word	0x0801c28c
 8002d90:	0801c28e 	.word	0x0801c28e
 8002d94:	0801c290 	.word	0x0801c290
 8002d98:	0801c292 	.word	0x0801c292
 8002d9c:	0801c294 	.word	0x0801c294
 8002da0:	0801c296 	.word	0x0801c296
 8002da4:	0801c298 	.word	0x0801c298
 8002da8:	0801c29a 	.word	0x0801c29a
 8002dac:	0801c29c 	.word	0x0801c29c
 8002db0:	0801c3e1 	.word	0x0801c3e1
 8002db4:	0801c3e4 	.word	0x0801c3e4
 8002db8:	0801c29e 	.word	0x0801c29e
 8002dbc:	0801c3eb 	.word	0x0801c3eb
 8002dc0:	0801c2a2 	.word	0x0801c2a2
 8002dc4:	0801c3fa 	.word	0x0801c3fa
 8002dc8:	0801c2a4 	.word	0x0801c2a4
 8002dcc:	0801c2de 	.word	0x0801c2de
 8002dd0:	0801c2a6 	.word	0x0801c2a6
 8002dd4:	0801c2c4 	.word	0x0801c2c4
 8002dd8:	0801c2e9 	.word	0x0801c2e9
 8002ddc:	0801c2a8 	.word	0x0801c2a8
 8002de0:	0801c2f4 	.word	0x0801c2f4
 8002de4:	0801c304 	.word	0x0801c304
 8002de8:	0801c314 	.word	0x0801c314
 8002dec:	0801c31f 	.word	0x0801c31f
 8002df0:	0801c32f 	.word	0x0801c32f
 8002df4:	0801c2aa 	.word	0x0801c2aa
 8002df8:	0801c33f 	.word	0x0801c33f
 8002dfc:	0801c2ac 	.word	0x0801c2ac
 8002e00:	0801c34a 	.word	0x0801c34a
 8002e04:	0801c355 	.word	0x0801c355
 8002e08:	0801c363 	.word	0x0801c363
 8002e0c:	0801c373 	.word	0x0801c373
 8002e10:	0801c383 	.word	0x0801c383
 8002e14:	0801c38e 	.word	0x0801c38e
 8002e18:	0801c39e 	.word	0x0801c39e
 8002e1c:	0801c2c6 	.word	0x0801c2c6
 8002e20:	0801c2c8 	.word	0x0801c2c8
 8002e24:	0801c2ca 	.word	0x0801c2ca
 8002e28:	0801c2ce 	.word	0x0801c2ce
 8002e2c:	0801c2d0 	.word	0x0801c2d0
 8002e30:	0801c3ae 	.word	0x0801c3ae
 8002e34:	0801c3bc 	.word	0x0801c3bc
 8002e38:	0801c3cd 	.word	0x0801c3cd
 8002e3c:	0801c2ae 	.word	0x0801c2ae
 8002e40:	0801c2b0 	.word	0x0801c2b0
 8002e44:	0801c2b4 	.word	0x0801c2b4
 8002e48:	0801c3b2 	.word	0x0801c3b2
 8002e4c:	0801c3b7 	.word	0x0801c3b7
 8002e50:	0801c2b8 	.word	0x0801c2b8
 8002e54:	0801c2ba 	.word	0x0801c2ba
 8002e58:	0801c2bc 	.word	0x0801c2bc
 8002e5c:	0801c2be 	.word	0x0801c2be

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8002e60:	4908      	ldr	r1, [pc, #32]	; (8002e84 <OTM8009A_Init+0x488>)
 8002e62:	2000      	movs	r0, #0
 8002e64:	f7fd fdd8 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e68:	4907      	ldr	r1, [pc, #28]	; (8002e88 <OTM8009A_Init+0x48c>)
 8002e6a:	2000      	movs	r0, #0
 8002e6c:	f7fd fdd4 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8002e70:	4906      	ldr	r1, [pc, #24]	; (8002e8c <OTM8009A_Init+0x490>)
 8002e72:	2000      	movs	r0, #0
 8002e74:	f7fd fdd0 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 8002e78:	2000      	movs	r0, #0
 8002e7a:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002e7c:	4904      	ldr	r1, [pc, #16]	; (8002e90 <OTM8009A_Init+0x494>)
 8002e7e:	4620      	mov	r0, r4
 8002e80:	e737      	b.n	8002cf2 <OTM8009A_Init+0x2f6>
 8002e82:	bf00      	nop
 8002e84:	0801c2c0 	.word	0x0801c2c0
 8002e88:	0801c274 	.word	0x0801c274
 8002e8c:	0801c2c2 	.word	0x0801c2c2
 8002e90:	0801c2b2 	.word	0x0801c2b2

08002e94 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8002e94:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002e96:	4d2e      	ldr	r5, [pc, #184]	; (8002f50 <I2C1_Init+0xbc>)
{
 8002e98:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002e9a:	4628      	mov	r0, r5
 8002e9c:	f002 f96a 	bl	8005174 <HAL_I2C_GetState>
 8002ea0:	4604      	mov	r4, r0
 8002ea2:	2800      	cmp	r0, #0
 8002ea4:	d151      	bne.n	8002f4a <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002ea6:	4a2b      	ldr	r2, [pc, #172]	; (8002f54 <I2C1_Init+0xc0>)
 8002ea8:	4b2b      	ldr	r3, [pc, #172]	; (8002f58 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002eaa:	4e2c      	ldr	r6, [pc, #176]	; (8002f5c <I2C1_Init+0xc8>)
 8002eac:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002eae:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8002eb2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8002eb6:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002eba:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002ebe:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8002ec2:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002ec4:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8002ec6:	f043 0302 	orr.w	r3, r3, #2
 8002eca:	6333      	str	r3, [r6, #48]	; 0x30
 8002ecc:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8002ece:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002ed0:	f003 0302 	and.w	r3, r3, #2
 8002ed4:	9301      	str	r3, [sp, #4]
 8002ed6:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002ed8:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002edc:	2312      	movs	r3, #18
 8002ede:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8002ee2:	2002      	movs	r0, #2
 8002ee4:	2304      	movs	r3, #4
 8002ee6:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002eea:	a903      	add	r1, sp, #12
 8002eec:	481c      	ldr	r0, [pc, #112]	; (8002f60 <I2C1_Init+0xcc>)
 8002eee:	f001 fb6f 	bl	80045d0 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002ef2:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002ef6:	481a      	ldr	r0, [pc, #104]	; (8002f60 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002ef8:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002efa:	a903      	add	r1, sp, #12
 8002efc:	f001 fb68 	bl	80045d0 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8002f00:	9402      	str	r4, [sp, #8]
 8002f02:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002f04:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002f08:	6433      	str	r3, [r6, #64]	; 0x40
 8002f0a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002f0c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002f10:	9302      	str	r3, [sp, #8]
 8002f12:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8002f14:	6a33      	ldr	r3, [r6, #32]
 8002f16:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002f1a:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8002f1c:	6a33      	ldr	r3, [r6, #32]
 8002f1e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002f22:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8002f24:	4622      	mov	r2, r4
 8002f26:	2105      	movs	r1, #5
 8002f28:	201f      	movs	r0, #31
 8002f2a:	f000 fd1d 	bl	8003968 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8002f2e:	201f      	movs	r0, #31
 8002f30:	f000 fd4c 	bl	80039cc <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8002f34:	4622      	mov	r2, r4
 8002f36:	2105      	movs	r1, #5
 8002f38:	2020      	movs	r0, #32
 8002f3a:	f000 fd15 	bl	8003968 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8002f3e:	2020      	movs	r0, #32
 8002f40:	f000 fd44 	bl	80039cc <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8002f44:	4628      	mov	r0, r5
 8002f46:	f001 febb 	bl	8004cc0 <HAL_I2C_Init>
  }
}
 8002f4a:	b008      	add	sp, #32
 8002f4c:	bd70      	pop	{r4, r5, r6, pc}
 8002f4e:	bf00      	nop
 8002f50:	200011e4 	.word	0x200011e4
 8002f54:	40005400 	.word	0x40005400
 8002f58:	00061a80 	.word	0x00061a80
 8002f5c:	40023800 	.word	0x40023800
 8002f60:	40020400 	.word	0x40020400

08002f64 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8002f64:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 8002f66:	4803      	ldr	r0, [pc, #12]	; (8002f74 <I2C1_Error.isra.0+0x10>)
 8002f68:	f001 ff52 	bl	8004e10 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8002f6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8002f70:	f7ff bf90 	b.w	8002e94 <I2C1_Init>
 8002f74:	200011e4 	.word	0x200011e4

08002f78 <BSP_PB_Init>:
{
 8002f78:	b510      	push	{r4, lr}
 8002f7a:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8002f7c:	4b19      	ldr	r3, [pc, #100]	; (8002fe4 <BSP_PB_Init+0x6c>)
 8002f7e:	2400      	movs	r4, #0
 8002f80:	9400      	str	r4, [sp, #0]
 8002f82:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002f84:	f042 0201 	orr.w	r2, r2, #1
 8002f88:	631a      	str	r2, [r3, #48]	; 0x30
 8002f8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f8c:	f003 0301 	and.w	r3, r3, #1
 8002f90:	9300      	str	r3, [sp, #0]
 8002f92:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8002f94:	b969      	cbnz	r1, 8002fb2 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002f96:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8002f98:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002f9c:	2302      	movs	r3, #2
 8002f9e:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002fa0:	4b11      	ldr	r3, [pc, #68]	; (8002fe8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002fa2:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002fa4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002fa8:	a901      	add	r1, sp, #4
 8002faa:	f001 fb11 	bl	80045d0 <HAL_GPIO_Init>
}
 8002fae:	b006      	add	sp, #24
 8002fb0:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8002fb2:	2901      	cmp	r1, #1
 8002fb4:	d1fb      	bne.n	8002fae <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002fb6:	2302      	movs	r3, #2
 8002fb8:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8002fba:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002fbe:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002fc0:	4b09      	ldr	r3, [pc, #36]	; (8002fe8 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002fc2:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002fc4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002fc8:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002fca:	a901      	add	r1, sp, #4
 8002fcc:	f001 fb00 	bl	80045d0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8002fd0:	4622      	mov	r2, r4
 8002fd2:	210f      	movs	r1, #15
 8002fd4:	2006      	movs	r0, #6
 8002fd6:	f000 fcc7 	bl	8003968 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8002fda:	2006      	movs	r0, #6
 8002fdc:	f000 fcf6 	bl	80039cc <HAL_NVIC_EnableIRQ>
}
 8002fe0:	e7e5      	b.n	8002fae <BSP_PB_Init+0x36>
 8002fe2:	bf00      	nop
 8002fe4:	40023800 	.word	0x40023800
 8002fe8:	20000048 	.word	0x20000048

08002fec <BSP_PB_GetState>:
{
 8002fec:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8002fee:	4b03      	ldr	r3, [pc, #12]	; (8002ffc <BSP_PB_GetState+0x10>)
 8002ff0:	2101      	movs	r1, #1
 8002ff2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002ff6:	f001 fc73 	bl	80048e0 <HAL_GPIO_ReadPin>
}
 8002ffa:	bd08      	pop	{r3, pc}
 8002ffc:	20000048 	.word	0x20000048

08003000 <TS_IO_Init>:
 8003000:	f7ff bf48 	b.w	8002e94 <I2C1_Init>

08003004 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003004:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003006:	2301      	movs	r3, #1
 8003008:	f88d 2017 	strb.w	r2, [sp, #23]
 800300c:	2264      	movs	r2, #100	; 0x64
 800300e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003012:	f10d 0217 	add.w	r2, sp, #23
 8003016:	9200      	str	r2, [sp, #0]
 8003018:	460a      	mov	r2, r1
 800301a:	4601      	mov	r1, r0
 800301c:	4804      	ldr	r0, [pc, #16]	; (8003030 <TS_IO_Write+0x2c>)
 800301e:	f001 ff11 	bl	8004e44 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003022:	b108      	cbz	r0, 8003028 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 8003024:	f7ff ff9e 	bl	8002f64 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 8003028:	b007      	add	sp, #28
 800302a:	f85d fb04 	ldr.w	pc, [sp], #4
 800302e:	bf00      	nop
 8003030:	200011e4 	.word	0x200011e4

08003034 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003034:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8003036:	2300      	movs	r3, #0
{
 8003038:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800303a:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800303e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003042:	2301      	movs	r3, #1
 8003044:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003048:	f10d 0117 	add.w	r1, sp, #23
 800304c:	9100      	str	r1, [sp, #0]
 800304e:	4601      	mov	r1, r0
 8003050:	4805      	ldr	r0, [pc, #20]	; (8003068 <TS_IO_Read+0x34>)
 8003052:	f001 ff87 	bl	8004f64 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003056:	b108      	cbz	r0, 800305c <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 8003058:	f7ff ff84 	bl	8002f64 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 800305c:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8003060:	b007      	add	sp, #28
 8003062:	f85d fb04 	ldr.w	pc, [sp], #4
 8003066:	bf00      	nop
 8003068:	200011e4 	.word	0x200011e4

0800306c <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800306c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800306e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003072:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003076:	9200      	str	r2, [sp, #0]
 8003078:	2301      	movs	r3, #1
 800307a:	460a      	mov	r2, r1
 800307c:	4601      	mov	r1, r0
 800307e:	4805      	ldr	r0, [pc, #20]	; (8003094 <TS_IO_ReadMultiple+0x28>)
 8003080:	f001 ff70 	bl	8004f64 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003084:	4604      	mov	r4, r0
 8003086:	b108      	cbz	r0, 800308c <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 8003088:	f7ff ff6c 	bl	8002f64 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800308c:	b2a0      	uxth	r0, r4
 800308e:	b004      	add	sp, #16
 8003090:	bd10      	pop	{r4, pc}
 8003092:	bf00      	nop
 8003094:	200011e4 	.word	0x200011e4

08003098 <OTM8009A_IO_Delay>:
 8003098:	f000 bc40 	b.w	800391c <HAL_Delay>

0800309c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800309c:	b500      	push	{lr}
 800309e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80030a0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030a4:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80030a6:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80030aa:	2205      	movs	r2, #5
 80030ac:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80030ae:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80030b0:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80030b2:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 80030b4:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80030b8:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80030bc:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 80030c0:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80030c2:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 80030c4:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 80030c6:	2210      	movs	r2, #16
 80030c8:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80030ca:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80030ce:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 80030d0:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80030d2:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80030d4:	a906      	add	r1, sp, #24
 80030d6:	466a      	mov	r2, sp
 80030d8:	4804      	ldr	r0, [pc, #16]	; (80030ec <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 80030da:	f002 fbce 	bl	800587a <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 80030de:	3800      	subs	r0, #0
 80030e0:	bf18      	it	ne
 80030e2:	2001      	movne	r0, #1
 80030e4:	b015      	add	sp, #84	; 0x54
 80030e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80030ea:	bf00      	nop
 80030ec:	2000a560 	.word	0x2000a560

080030f0 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80030f0:	b500      	push	{lr}
 80030f2:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80030f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80030f8:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80030fa:	2306      	movs	r3, #6
 80030fc:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030fe:	4817      	ldr	r0, [pc, #92]	; (800315c <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003100:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003102:	f241 3288 	movw	r2, #5000	; 0x1388
 8003106:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003108:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800310c:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003110:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003112:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003114:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003116:	f002 fb6c 	bl	80057f2 <HAL_QSPI_Command>
 800311a:	b9e0      	cbnz	r0, 8003156 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 800311c:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800311e:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003122:	2201      	movs	r2, #1
 8003124:	2310      	movs	r3, #16
 8003126:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800312a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800312e:	2305      	movs	r3, #5
 8003130:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003134:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003138:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800313a:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800313c:	4807      	ldr	r0, [pc, #28]	; (800315c <QSPI_WriteEnable.constprop.0+0x6c>)
 800313e:	f241 3388 	movw	r3, #5000	; 0x1388
 8003142:	466a      	mov	r2, sp
 8003144:	a906      	add	r1, sp, #24
 8003146:	f002 fb98 	bl	800587a <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800314a:	3800      	subs	r0, #0
 800314c:	bf18      	it	ne
 800314e:	2001      	movne	r0, #1
}
 8003150:	b015      	add	sp, #84	; 0x54
 8003152:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8003156:	2001      	movs	r0, #1
 8003158:	e7fa      	b.n	8003150 <QSPI_WriteEnable.constprop.0+0x60>
 800315a:	bf00      	nop
 800315c:	2000a560 	.word	0x2000a560

08003160 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003160:	b500      	push	{lr}
 8003162:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003164:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003168:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800316a:	23eb      	movs	r3, #235	; 0xeb
 800316c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800316e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003172:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003174:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003178:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800317a:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800317e:	2300      	movs	r3, #0
 8003180:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003184:	220a      	movs	r2, #10
 8003186:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003188:	a902      	add	r1, sp, #8
 800318a:	466a      	mov	r2, sp
 800318c:	4806      	ldr	r0, [pc, #24]	; (80031a8 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800318e:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003190:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003194:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003196:	f002 fbc0 	bl	800591a <HAL_QSPI_MemoryMapped>
}
 800319a:	3800      	subs	r0, #0
 800319c:	bf18      	it	ne
 800319e:	2001      	movne	r0, #1
 80031a0:	b011      	add	sp, #68	; 0x44
 80031a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80031a6:	bf00      	nop
 80031a8:	2000a560 	.word	0x2000a560

080031ac <BSP_QSPI_MspInit>:
{
 80031ac:	b570      	push	{r4, r5, r6, lr}
 80031ae:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 80031b0:	4b2c      	ldr	r3, [pc, #176]	; (8003264 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80031b2:	482d      	ldr	r0, [pc, #180]	; (8003268 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 80031b4:	2400      	movs	r4, #0
 80031b6:	9400      	str	r4, [sp, #0]
 80031b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80031ba:	f042 0202 	orr.w	r2, r2, #2
 80031be:	639a      	str	r2, [r3, #56]	; 0x38
 80031c0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80031c2:	f002 0202 	and.w	r2, r2, #2
 80031c6:	9200      	str	r2, [sp, #0]
 80031c8:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80031ca:	699a      	ldr	r2, [r3, #24]
 80031cc:	f042 0202 	orr.w	r2, r2, #2
 80031d0:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80031d2:	699a      	ldr	r2, [r3, #24]
 80031d4:	f022 0202 	bic.w	r2, r2, #2
 80031d8:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80031da:	9401      	str	r4, [sp, #4]
 80031dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031de:	f042 0202 	orr.w	r2, r2, #2
 80031e2:	631a      	str	r2, [r3, #48]	; 0x30
 80031e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031e6:	f002 0202 	and.w	r2, r2, #2
 80031ea:	9201      	str	r2, [sp, #4]
 80031ec:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80031ee:	9402      	str	r4, [sp, #8]
 80031f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031f2:	f042 0220 	orr.w	r2, r2, #32
 80031f6:	631a      	str	r2, [r3, #48]	; 0x30
 80031f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031fa:	f003 0320 	and.w	r3, r3, #32
 80031fe:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003200:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003202:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003204:	2302      	movs	r3, #2
 8003206:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800320a:	2101      	movs	r1, #1
 800320c:	2303      	movs	r3, #3
 800320e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003212:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003214:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003216:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003218:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800321a:	f001 f9d9 	bl	80045d0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800321e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003222:	a903      	add	r1, sp, #12
 8003224:	4811      	ldr	r0, [pc, #68]	; (800326c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003226:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003228:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800322a:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800322c:	f001 f9d0 	bl	80045d0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003230:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003234:	a903      	add	r1, sp, #12
 8003236:	480d      	ldr	r0, [pc, #52]	; (800326c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003238:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800323a:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800323c:	f001 f9c8 	bl	80045d0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003240:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003242:	a903      	add	r1, sp, #12
 8003244:	4809      	ldr	r0, [pc, #36]	; (800326c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003246:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003248:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800324a:	f001 f9c1 	bl	80045d0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800324e:	4622      	mov	r2, r4
 8003250:	210f      	movs	r1, #15
 8003252:	205b      	movs	r0, #91	; 0x5b
 8003254:	f000 fb88 	bl	8003968 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003258:	205b      	movs	r0, #91	; 0x5b
 800325a:	f000 fbb7 	bl	80039cc <HAL_NVIC_EnableIRQ>
}
 800325e:	b008      	add	sp, #32
 8003260:	bd70      	pop	{r4, r5, r6, pc}
 8003262:	bf00      	nop
 8003264:	40023800 	.word	0x40023800
 8003268:	40020400 	.word	0x40020400
 800326c:	40021400 	.word	0x40021400

08003270 <BSP_QSPI_Init>:
{
 8003270:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003272:	4c48      	ldr	r4, [pc, #288]	; (8003394 <BSP_QSPI_Init+0x124>)
 8003274:	4b48      	ldr	r3, [pc, #288]	; (8003398 <BSP_QSPI_Init+0x128>)
 8003276:	6023      	str	r3, [r4, #0]
{
 8003278:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800327a:	4620      	mov	r0, r4
 800327c:	f002 faa6 	bl	80057cc <HAL_QSPI_DeInit>
 8003280:	4605      	mov	r5, r0
 8003282:	b110      	cbz	r0, 800328a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003284:	2001      	movs	r0, #1
}
 8003286:	b011      	add	sp, #68	; 0x44
 8003288:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800328a:	4601      	mov	r1, r0
 800328c:	4620      	mov	r0, r4
 800328e:	f7ff ff8d 	bl	80031ac <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003292:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003294:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003296:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800329a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800329c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 80032a0:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 80032a4:	fab3 f383 	clz	r3, r3
 80032a8:	3b01      	subs	r3, #1
 80032aa:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80032ac:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80032ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80032b2:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 80032b6:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80032ba:	f002 fa33 	bl	8005724 <HAL_QSPI_Init>
 80032be:	2800      	cmp	r0, #0
 80032c0:	d1e0      	bne.n	8003284 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80032c2:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80032c6:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80032ca:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 80032ce:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80032d0:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 80032d2:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80032d4:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032d6:	f241 3288 	movw	r2, #5000	; 0x1388
 80032da:	a902      	add	r1, sp, #8
 80032dc:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80032de:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 80032e0:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032e2:	f002 fa86 	bl	80057f2 <HAL_QSPI_Command>
 80032e6:	b108      	cbz	r0, 80032ec <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 80032e8:	2004      	movs	r0, #4
 80032ea:	e7cc      	b.n	8003286 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80032ec:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032ee:	f241 3288 	movw	r2, #5000	; 0x1388
 80032f2:	a902      	add	r1, sp, #8
 80032f4:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80032f6:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032f8:	f002 fa7b 	bl	80057f2 <HAL_QSPI_Command>
 80032fc:	2800      	cmp	r0, #0
 80032fe:	d1f3      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003300:	f241 3088 	movw	r0, #5000	; 0x1388
 8003304:	f7ff feca 	bl	800309c <QSPI_AutoPollingMemReady.constprop.0>
 8003308:	2800      	cmp	r0, #0
 800330a:	d1ed      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800330c:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003310:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003314:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003318:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800331a:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800331c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003320:	a902      	add	r1, sp, #8
 8003322:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003324:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003326:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003328:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800332a:	f002 fa62 	bl	80057f2 <HAL_QSPI_Command>
 800332e:	2800      	cmp	r0, #0
 8003330:	d1da      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003332:	f241 3288 	movw	r2, #5000	; 0x1388
 8003336:	f10d 0107 	add.w	r1, sp, #7
 800333a:	4620      	mov	r0, r4
 800333c:	f002 fbcc 	bl	8005ad8 <HAL_QSPI_Receive>
 8003340:	2800      	cmp	r0, #0
 8003342:	d1d1      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003344:	f7ff fed4 	bl	80030f0 <QSPI_WriteEnable.constprop.0>
 8003348:	2800      	cmp	r0, #0
 800334a:	d1cd      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800334c:	2381      	movs	r3, #129	; 0x81
 800334e:	9302      	str	r3, [sp, #8]
 8003350:	22f0      	movs	r2, #240	; 0xf0
 8003352:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003356:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800335a:	210a      	movs	r1, #10
 800335c:	fab2 f282 	clz	r2, r2
 8003360:	fa01 f202 	lsl.w	r2, r1, r2
 8003364:	f003 030f 	and.w	r3, r3, #15
 8003368:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800336a:	a902      	add	r1, sp, #8
 800336c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003370:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003372:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003376:	f002 fa3c 	bl	80057f2 <HAL_QSPI_Command>
 800337a:	2800      	cmp	r0, #0
 800337c:	d1b4      	bne.n	80032e8 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800337e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003382:	f10d 0107 	add.w	r1, sp, #7
 8003386:	4620      	mov	r0, r4
 8003388:	f002 fb4a 	bl	8005a20 <HAL_QSPI_Transmit>
 800338c:	2800      	cmp	r0, #0
 800338e:	f43f af7a 	beq.w	8003286 <BSP_QSPI_Init+0x16>
 8003392:	e7a9      	b.n	80032e8 <BSP_QSPI_Init+0x78>
 8003394:	2000a560 	.word	0x2000a560
 8003398:	a0001000 	.word	0xa0001000

0800339c <BSP_QSPI_MspDeInit>:
{
 800339c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800339e:	205b      	movs	r0, #91	; 0x5b
 80033a0:	f000 fb22 	bl	80039e8 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 80033a4:	4814      	ldr	r0, [pc, #80]	; (80033f8 <BSP_QSPI_MspDeInit+0x5c>)
 80033a6:	2140      	movs	r1, #64	; 0x40
 80033a8:	f001 f9f8 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 80033ac:	4813      	ldr	r0, [pc, #76]	; (80033fc <BSP_QSPI_MspDeInit+0x60>)
 80033ae:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80033b2:	f001 f9f3 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 80033b6:	4811      	ldr	r0, [pc, #68]	; (80033fc <BSP_QSPI_MspDeInit+0x60>)
 80033b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80033bc:	f001 f9ee 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 80033c0:	480e      	ldr	r0, [pc, #56]	; (80033fc <BSP_QSPI_MspDeInit+0x60>)
 80033c2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80033c6:	f001 f9e9 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 80033ca:	480c      	ldr	r0, [pc, #48]	; (80033fc <BSP_QSPI_MspDeInit+0x60>)
 80033cc:	2180      	movs	r1, #128	; 0x80
 80033ce:	f001 f9e5 	bl	800479c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80033d2:	480a      	ldr	r0, [pc, #40]	; (80033fc <BSP_QSPI_MspDeInit+0x60>)
 80033d4:	2140      	movs	r1, #64	; 0x40
 80033d6:	f001 f9e1 	bl	800479c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80033da:	4b09      	ldr	r3, [pc, #36]	; (8003400 <BSP_QSPI_MspDeInit+0x64>)
 80033dc:	699a      	ldr	r2, [r3, #24]
 80033de:	f042 0202 	orr.w	r2, r2, #2
 80033e2:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80033e4:	699a      	ldr	r2, [r3, #24]
 80033e6:	f022 0202 	bic.w	r2, r2, #2
 80033ea:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80033ec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80033ee:	f022 0202 	bic.w	r2, r2, #2
 80033f2:	639a      	str	r2, [r3, #56]	; 0x38
}
 80033f4:	bd08      	pop	{r3, pc}
 80033f6:	bf00      	nop
 80033f8:	40020400 	.word	0x40020400
 80033fc:	40021400 	.word	0x40021400
 8003400:	40023800 	.word	0x40023800

08003404 <BSP_QSPI_DeInit>:
{
 8003404:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8003406:	4d08      	ldr	r5, [pc, #32]	; (8003428 <BSP_QSPI_DeInit+0x24>)
 8003408:	4b08      	ldr	r3, [pc, #32]	; (800342c <BSP_QSPI_DeInit+0x28>)
 800340a:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800340c:	4628      	mov	r0, r5
 800340e:	f002 f9dd 	bl	80057cc <HAL_QSPI_DeInit>
 8003412:	4604      	mov	r4, r0
 8003414:	b928      	cbnz	r0, 8003422 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8003416:	4601      	mov	r1, r0
 8003418:	4628      	mov	r0, r5
 800341a:	f7ff ffbf 	bl	800339c <BSP_QSPI_MspDeInit>
}
 800341e:	4620      	mov	r0, r4
 8003420:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8003422:	2401      	movs	r4, #1
 8003424:	e7fb      	b.n	800341e <BSP_QSPI_DeInit+0x1a>
 8003426:	bf00      	nop
 8003428:	2000a560 	.word	0x2000a560
 800342c:	a0001000 	.word	0xa0001000

08003430 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003430:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003434:	4c21      	ldr	r4, [pc, #132]	; (80034bc <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003436:	4d22      	ldr	r5, [pc, #136]	; (80034c0 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003438:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800343a:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800343e:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003440:	4621      	mov	r1, r4
{
 8003442:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003444:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003448:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800344a:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800344e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8003452:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003456:	f002 ffdf 	bl	8006418 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800345a:	4630      	mov	r0, r6
 800345c:	f000 fa5e 	bl	800391c <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003460:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003462:	4621      	mov	r1, r4
 8003464:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003468:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800346a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800346e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003472:	f002 ffd1 	bl	8006418 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8003476:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003478:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800347c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800347e:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003480:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003484:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003486:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800348a:	f002 ffc5 	bl	8006418 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800348e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003492:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003494:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003496:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800349a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800349c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800349e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80034a4:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 80034a6:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80034a8:	f002 ffb6 	bl	8006418 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80034ac:	4649      	mov	r1, r9
 80034ae:	4628      	mov	r0, r5
}
 80034b0:	b003      	add	sp, #12
 80034b2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80034b6:	f002 bfc6 	b.w	8006446 <HAL_SDRAM_ProgramRefreshRate>
 80034ba:	bf00      	nop
 80034bc:	20001238 	.word	0x20001238
 80034c0:	20001324 	.word	0x20001324

080034c4 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80034c4:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80034c6:	4606      	mov	r6, r0
{
 80034c8:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80034ca:	2800      	cmp	r0, #0
 80034cc:	f000 80bd 	beq.w	800364a <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80034d0:	4b5f      	ldr	r3, [pc, #380]	; (8003650 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80034d2:	4860      	ldr	r0, [pc, #384]	; (8003654 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80034d4:	4c60      	ldr	r4, [pc, #384]	; (8003658 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80034d6:	2500      	movs	r5, #0
 80034d8:	9500      	str	r5, [sp, #0]
 80034da:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80034dc:	f042 0201 	orr.w	r2, r2, #1
 80034e0:	639a      	str	r2, [r3, #56]	; 0x38
 80034e2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80034e4:	f002 0201 	and.w	r2, r2, #1
 80034e8:	9200      	str	r2, [sp, #0]
 80034ea:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80034ec:	9501      	str	r5, [sp, #4]
 80034ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034f0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80034f4:	631a      	str	r2, [r3, #48]	; 0x30
 80034f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034f8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80034fc:	9201      	str	r2, [sp, #4]
 80034fe:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003500:	9502      	str	r5, [sp, #8]
 8003502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003504:	f042 0204 	orr.w	r2, r2, #4
 8003508:	631a      	str	r2, [r3, #48]	; 0x30
 800350a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800350c:	f002 0204 	and.w	r2, r2, #4
 8003510:	9202      	str	r2, [sp, #8]
 8003512:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003514:	9503      	str	r5, [sp, #12]
 8003516:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003518:	f042 0208 	orr.w	r2, r2, #8
 800351c:	631a      	str	r2, [r3, #48]	; 0x30
 800351e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003520:	f002 0208 	and.w	r2, r2, #8
 8003524:	9203      	str	r2, [sp, #12]
 8003526:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003528:	9504      	str	r5, [sp, #16]
 800352a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800352c:	f042 0210 	orr.w	r2, r2, #16
 8003530:	631a      	str	r2, [r3, #48]	; 0x30
 8003532:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003534:	f002 0210 	and.w	r2, r2, #16
 8003538:	9204      	str	r2, [sp, #16]
 800353a:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800353c:	9505      	str	r5, [sp, #20]
 800353e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003540:	f042 0220 	orr.w	r2, r2, #32
 8003544:	631a      	str	r2, [r3, #48]	; 0x30
 8003546:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003548:	f002 0220 	and.w	r2, r2, #32
 800354c:	9205      	str	r2, [sp, #20]
 800354e:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003550:	9506      	str	r5, [sp, #24]
 8003552:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003554:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003558:	631a      	str	r2, [r3, #48]	; 0x30
 800355a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800355c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003560:	9206      	str	r2, [sp, #24]
 8003562:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003564:	9507      	str	r5, [sp, #28]
 8003566:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003568:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800356c:	631a      	str	r2, [r3, #48]	; 0x30
 800356e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003570:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003574:	9207      	str	r2, [sp, #28]
 8003576:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003578:	9508      	str	r5, [sp, #32]
 800357a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800357c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003580:	631a      	str	r2, [r3, #48]	; 0x30
 8003582:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003584:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003588:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800358a:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800358c:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800358e:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003590:	2301      	movs	r3, #1
 8003592:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003596:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003598:	220c      	movs	r2, #12
 800359a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800359c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800359e:	f001 f817 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80035a2:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80035a6:	482d      	ldr	r0, [pc, #180]	; (800365c <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80035a8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80035aa:	a909      	add	r1, sp, #36	; 0x24
 80035ac:	f001 f810 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80035b0:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80035b4:	482a      	ldr	r0, [pc, #168]	; (8003660 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80035b6:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80035b8:	a909      	add	r1, sp, #36	; 0x24
 80035ba:	f001 f809 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80035be:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80035c2:	4828      	ldr	r0, [pc, #160]	; (8003664 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80035c4:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80035c6:	a909      	add	r1, sp, #36	; 0x24
 80035c8:	f001 f802 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80035cc:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80035d0:	4825      	ldr	r0, [pc, #148]	; (8003668 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80035d2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80035d4:	a909      	add	r1, sp, #36	; 0x24
 80035d6:	f000 fffb 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80035da:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80035de:	4823      	ldr	r0, [pc, #140]	; (800366c <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80035e0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80035e2:	a909      	add	r1, sp, #36	; 0x24
 80035e4:	f000 fff4 	bl	80045d0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80035e8:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80035ec:	4820      	ldr	r0, [pc, #128]	; (8003670 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80035ee:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80035f0:	a909      	add	r1, sp, #36	; 0x24
 80035f2:	f000 ffed 	bl	80045d0 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80035f6:	2280      	movs	r2, #128	; 0x80
 80035f8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80035fc:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003600:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003604:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003608:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800360c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003610:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003614:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003618:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800361c:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800361e:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003622:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003624:	4b13      	ldr	r3, [pc, #76]	; (8003674 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003626:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003628:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800362a:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800362c:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800362e:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003630:	f000 fa94 	bl	8003b5c <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003634:	4620      	mov	r0, r4
 8003636:	f000 fa11 	bl	8003a5c <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800363a:	2038      	movs	r0, #56	; 0x38
 800363c:	462a      	mov	r2, r5
 800363e:	2105      	movs	r1, #5
 8003640:	f000 f992 	bl	8003968 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003644:	2038      	movs	r0, #56	; 0x38
 8003646:	f000 f9c1 	bl	80039cc <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800364a:	b00e      	add	sp, #56	; 0x38
 800364c:	bd70      	pop	{r4, r5, r6, pc}
 800364e:	bf00      	nop
 8003650:	40023800 	.word	0x40023800
 8003654:	40020800 	.word	0x40020800
 8003658:	20001264 	.word	0x20001264
 800365c:	40020c00 	.word	0x40020c00
 8003660:	40021000 	.word	0x40021000
 8003664:	40021400 	.word	0x40021400
 8003668:	40021800 	.word	0x40021800
 800366c:	40021c00 	.word	0x40021c00
 8003670:	40022000 	.word	0x40022000
 8003674:	40026410 	.word	0x40026410

08003678 <BSP_SDRAM_Init>:
{
 8003678:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800367a:	4c19      	ldr	r4, [pc, #100]	; (80036e0 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800367c:	4d19      	ldr	r5, [pc, #100]	; (80036e4 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800367e:	4b1a      	ldr	r3, [pc, #104]	; (80036e8 <BSP_SDRAM_Init+0x70>)
 8003680:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003682:	2107      	movs	r1, #7
 8003684:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003686:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003688:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800368c:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003690:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003694:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003696:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003698:	2340      	movs	r3, #64	; 0x40
 800369a:	2220      	movs	r2, #32
 800369c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 80036a0:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80036a2:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80036a6:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 80036aa:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80036ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80036b2:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80036b6:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80036b8:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 80036bc:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80036be:	f7ff ff01 	bl	80034c4 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80036c2:	4629      	mov	r1, r5
 80036c4:	4620      	mov	r0, r4
 80036c6:	f002 fe79 	bl	80063bc <HAL_SDRAM_Init>
 80036ca:	4c08      	ldr	r4, [pc, #32]	; (80036ec <BSP_SDRAM_Init+0x74>)
 80036cc:	3800      	subs	r0, #0
 80036ce:	bf18      	it	ne
 80036d0:	2001      	movne	r0, #1
 80036d2:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 80036d4:	f240 5069 	movw	r0, #1385	; 0x569
 80036d8:	f7ff feaa 	bl	8003430 <BSP_SDRAM_Initialization_sequence>
}
 80036dc:	7820      	ldrb	r0, [r4, #0]
 80036de:	bd38      	pop	{r3, r4, r5, pc}
 80036e0:	20001324 	.word	0x20001324
 80036e4:	20001248 	.word	0x20001248
 80036e8:	a0000140 	.word	0xa0000140
 80036ec:	2000004c 	.word	0x2000004c

080036f0 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80036f0:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80036f2:	b148      	cbz	r0, 8003708 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80036f4:	2038      	movs	r0, #56	; 0x38
 80036f6:	f000 f977 	bl	80039e8 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80036fa:	4804      	ldr	r0, [pc, #16]	; (800370c <BSP_SDRAM_MspDeInit+0x1c>)
 80036fc:	4b04      	ldr	r3, [pc, #16]	; (8003710 <BSP_SDRAM_MspDeInit+0x20>)
 80036fe:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003700:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003704:	f000 ba2a 	b.w	8003b5c <HAL_DMA_DeInit>
}
 8003708:	bd08      	pop	{r3, pc}
 800370a:	bf00      	nop
 800370c:	200012c4 	.word	0x200012c4
 8003710:	40026410 	.word	0x40026410

08003714 <BSP_SDRAM_DeInit>:
{
 8003714:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003716:	4c07      	ldr	r4, [pc, #28]	; (8003734 <BSP_SDRAM_DeInit+0x20>)
 8003718:	4b07      	ldr	r3, [pc, #28]	; (8003738 <BSP_SDRAM_DeInit+0x24>)
 800371a:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800371c:	4620      	mov	r0, r4
 800371e:	f002 fe6d 	bl	80063fc <HAL_SDRAM_DeInit>
 8003722:	4d06      	ldr	r5, [pc, #24]	; (800373c <BSP_SDRAM_DeInit+0x28>)
 8003724:	4601      	mov	r1, r0
 8003726:	b918      	cbnz	r0, 8003730 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003728:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800372a:	4620      	mov	r0, r4
 800372c:	f7ff ffe0 	bl	80036f0 <BSP_SDRAM_MspDeInit>
}
 8003730:	7828      	ldrb	r0, [r5, #0]
 8003732:	bd38      	pop	{r3, r4, r5, pc}
 8003734:	20001324 	.word	0x20001324
 8003738:	a0000140 	.word	0xa0000140
 800373c:	2000004d 	.word	0x2000004d

08003740 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003740:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003744:	4d19      	ldr	r5, [pc, #100]	; (80037ac <BSP_TS_Init+0x6c>)
 8003746:	f8df 8070 	ldr.w	r8, [pc, #112]	; 80037b8 <BSP_TS_Init+0x78>
 800374a:	682b      	ldr	r3, [r5, #0]
{
 800374c:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 800374e:	f898 0000 	ldrb.w	r0, [r8]
{
 8003752:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003754:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003756:	686b      	ldr	r3, [r5, #4]
 8003758:	2054      	movs	r0, #84	; 0x54
 800375a:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800375c:	b2c0      	uxtb	r0, r0
 800375e:	2811      	cmp	r0, #17
 8003760:	4646      	mov	r6, r8
 8003762:	46a9      	mov	r9, r5
 8003764:	d00b      	beq.n	800377e <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003766:	686b      	ldr	r3, [r5, #4]
 8003768:	2070      	movs	r0, #112	; 0x70
 800376a:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800376c:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800376e:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003770:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003772:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003776:	d005      	beq.n	8003784 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003778:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800377a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800377e:	2354      	movs	r3, #84	; 0x54
 8003780:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8003784:	4b0a      	ldr	r3, [pc, #40]	; (80037b0 <BSP_TS_Init+0x70>)
 8003786:	4d0b      	ldr	r5, [pc, #44]	; (80037b4 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8003788:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800378a:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800378e:	42bc      	cmp	r4, r7
 8003790:	bf34      	ite	cc
 8003792:	2101      	movcc	r1, #1
 8003794:	210c      	movcs	r1, #12
 8003796:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003798:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800379c:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800379e:	682b      	ldr	r3, [r5, #0]
 80037a0:	7830      	ldrb	r0, [r6, #0]
 80037a2:	68db      	ldr	r3, [r3, #12]
 80037a4:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 80037a6:	2000      	movs	r0, #0
 80037a8:	e7e7      	b.n	800377a <BSP_TS_Init+0x3a>
 80037aa:	bf00      	nop
 80037ac:	20000020 	.word	0x20000020
 80037b0:	20001370 	.word	0x20001370
 80037b4:	2000136c 	.word	0x2000136c
 80037b8:	20001358 	.word	0x20001358

080037bc <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 80037bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 80037c0:	4c34      	ldr	r4, [pc, #208]	; (8003894 <BSP_TS_GetState+0xd8>)
 80037c2:	4d35      	ldr	r5, [pc, #212]	; (8003898 <BSP_TS_GetState+0xdc>)
 80037c4:	6823      	ldr	r3, [r4, #0]
{
 80037c6:	b085      	sub	sp, #20
 80037c8:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 80037ca:	691b      	ldr	r3, [r3, #16]
 80037cc:	7828      	ldrb	r0, [r5, #0]
 80037ce:	4798      	blx	r3
 80037d0:	46a1      	mov	r9, r4
 80037d2:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 80037d4:	9501      	str	r5, [sp, #4]
 80037d6:	b158      	cbz	r0, 80037f0 <BSP_TS_GetState+0x34>
 80037d8:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80038a4 <BSP_TS_GetState+0xe8>
 80037dc:	4f2f      	ldr	r7, [pc, #188]	; (800389c <BSP_TS_GetState+0xe0>)
 80037de:	f106 0b02 	add.w	fp, r6, #2
 80037e2:	ad03      	add	r5, sp, #12
 80037e4:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 80037e6:	f04f 0a00 	mov.w	sl, #0
 80037ea:	7833      	ldrb	r3, [r6, #0]
 80037ec:	4553      	cmp	r3, sl
 80037ee:	d803      	bhi.n	80037f8 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 80037f0:	2000      	movs	r0, #0
 80037f2:	b005      	add	sp, #20
 80037f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 80037f8:	f8d9 3000 	ldr.w	r3, [r9]
 80037fc:	9801      	ldr	r0, [sp, #4]
 80037fe:	695b      	ldr	r3, [r3, #20]
 8003800:	7800      	ldrb	r0, [r0, #0]
 8003802:	9100      	str	r1, [sp, #0]
 8003804:	462a      	mov	r2, r5
 8003806:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003808:	4b25      	ldr	r3, [pc, #148]	; (80038a0 <BSP_TS_GetState+0xe4>)
 800380a:	9900      	ldr	r1, [sp, #0]
 800380c:	781b      	ldrb	r3, [r3, #0]
 800380e:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003812:	bf1f      	itttt	ne
 8003814:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003816:	8828      	ldrhne	r0, [r5, #0]
 8003818:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800381a:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800381c:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800381e:	bf41      	itttt	mi
 8003820:	880a      	ldrhmi	r2, [r1, #0]
 8003822:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003826:	3203      	addmi	r2, #3
 8003828:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800382a:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800382c:	bf48      	it	mi
 800382e:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003830:	f8d8 2000 	ldr.w	r2, [r8]
 8003834:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003838:	bf42      	ittt	mi
 800383a:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800383e:	3301      	addmi	r3, #1
 8003840:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003842:	b293      	uxth	r3, r2
 8003844:	4290      	cmp	r0, r2
 8003846:	bf8c      	ite	hi
 8003848:	1ac3      	subhi	r3, r0, r3
 800384a:	1a1b      	subls	r3, r3, r0
 800384c:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800384e:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003852:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003854:	683b      	ldr	r3, [r7, #0]
 8003856:	b29c      	uxth	r4, r3
 8003858:	429a      	cmp	r2, r3
 800385a:	bf88      	it	hi
 800385c:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800385e:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003860:	bf98      	it	ls
 8003862:	1aa4      	subls	r4, r4, r2
 8003864:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003866:	441c      	add	r4, r3
 8003868:	46c4      	mov	ip, r8
 800386a:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800386c:	bfc8      	it	gt
 800386e:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003872:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003876:	bfc8      	it	gt
 8003878:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800387a:	46be      	mov	lr, r7
 800387c:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8003880:	f8de 3000 	ldr.w	r3, [lr]
 8003884:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003888:	f108 0804 	add.w	r8, r8, #4
 800388c:	3704      	adds	r7, #4
 800388e:	f10a 0a01 	add.w	sl, sl, #1
 8003892:	e7aa      	b.n	80037ea <BSP_TS_GetState+0x2e>
 8003894:	2000136c 	.word	0x2000136c
 8003898:	20001358 	.word	0x20001358
 800389c:	20001364 	.word	0x20001364
 80038a0:	20001370 	.word	0x20001370
 80038a4:	2000135c 	.word	0x2000135c

080038a8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80038a8:	4b05      	ldr	r3, [pc, #20]	; (80038c0 <SystemInit+0x18>)
 80038aa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80038ae:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80038b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80038b6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80038ba:	609a      	str	r2, [r3, #8]
#endif
}
 80038bc:	4770      	bx	lr
 80038be:	bf00      	nop
 80038c0:	e000ed00 	.word	0xe000ed00

080038c4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80038c4:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80038c6:	4b0b      	ldr	r3, [pc, #44]	; (80038f4 <HAL_Init+0x30>)
 80038c8:	681a      	ldr	r2, [r3, #0]
 80038ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80038ce:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80038d0:	681a      	ldr	r2, [r3, #0]
 80038d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80038d6:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80038d8:	681a      	ldr	r2, [r3, #0]
 80038da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80038de:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80038e0:	2003      	movs	r0, #3
 80038e2:	f000 f82f 	bl	8003944 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80038e6:	2000      	movs	r0, #0
 80038e8:	f7fe faa2 	bl	8001e30 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80038ec:	f7fe f842 	bl	8001974 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80038f0:	2000      	movs	r0, #0
 80038f2:	bd08      	pop	{r3, pc}
 80038f4:	40023c00 	.word	0x40023c00

080038f8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80038f8:	4a03      	ldr	r2, [pc, #12]	; (8003908 <HAL_IncTick+0x10>)
 80038fa:	4b04      	ldr	r3, [pc, #16]	; (800390c <HAL_IncTick+0x14>)
 80038fc:	6811      	ldr	r1, [r2, #0]
 80038fe:	781b      	ldrb	r3, [r3, #0]
 8003900:	440b      	add	r3, r1
 8003902:	6013      	str	r3, [r2, #0]
}
 8003904:	4770      	bx	lr
 8003906:	bf00      	nop
 8003908:	2000a5ac 	.word	0x2000a5ac
 800390c:	20000054 	.word	0x20000054

08003910 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003910:	4b01      	ldr	r3, [pc, #4]	; (8003918 <HAL_GetTick+0x8>)
 8003912:	6818      	ldr	r0, [r3, #0]
}
 8003914:	4770      	bx	lr
 8003916:	bf00      	nop
 8003918:	2000a5ac 	.word	0x2000a5ac

0800391c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800391c:	b538      	push	{r3, r4, r5, lr}
 800391e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003920:	f7ff fff6 	bl	8003910 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003924:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003926:	bf1c      	itt	ne
 8003928:	4b05      	ldrne	r3, [pc, #20]	; (8003940 <HAL_Delay+0x24>)
 800392a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800392c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800392e:	bf18      	it	ne
 8003930:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003932:	f7ff ffed 	bl	8003910 <HAL_GetTick>
 8003936:	1b43      	subs	r3, r0, r5
 8003938:	42a3      	cmp	r3, r4
 800393a:	d3fa      	bcc.n	8003932 <HAL_Delay+0x16>
  {
  }
}
 800393c:	bd38      	pop	{r3, r4, r5, pc}
 800393e:	bf00      	nop
 8003940:	20000054 	.word	0x20000054

08003944 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003944:	4907      	ldr	r1, [pc, #28]	; (8003964 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003946:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003948:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800394c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800394e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003950:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003954:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003956:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003958:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800395c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003960:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003962:	4770      	bx	lr
 8003964:	e000ed00 	.word	0xe000ed00

08003968 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003968:	4b16      	ldr	r3, [pc, #88]	; (80039c4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800396a:	b530      	push	{r4, r5, lr}
 800396c:	68dc      	ldr	r4, [r3, #12]
 800396e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003972:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003976:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003978:	2d04      	cmp	r5, #4
 800397a:	bf28      	it	cs
 800397c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800397e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003980:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003984:	bf8c      	ite	hi
 8003986:	3c03      	subhi	r4, #3
 8003988:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800398a:	fa03 f505 	lsl.w	r5, r3, r5
 800398e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003992:	40a3      	lsls	r3, r4
 8003994:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003998:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800399a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800399c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039a0:	bfac      	ite	ge
 80039a2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039a6:	4a08      	ldrlt	r2, [pc, #32]	; (80039c8 <HAL_NVIC_SetPriority+0x60>)
 80039a8:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80039ac:	bfb8      	it	lt
 80039ae:	f000 000f 	andlt.w	r0, r0, #15
 80039b2:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039b4:	bfaa      	itet	ge
 80039b6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039ba:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039bc:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80039c0:	bd30      	pop	{r4, r5, pc}
 80039c2:	bf00      	nop
 80039c4:	e000ed00 	.word	0xe000ed00
 80039c8:	e000ed14 	.word	0xe000ed14

080039cc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80039cc:	2800      	cmp	r0, #0
 80039ce:	db08      	blt.n	80039e2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80039d0:	0942      	lsrs	r2, r0, #5
 80039d2:	2301      	movs	r3, #1
 80039d4:	f000 001f 	and.w	r0, r0, #31
 80039d8:	fa03 f000 	lsl.w	r0, r3, r0
 80039dc:	4b01      	ldr	r3, [pc, #4]	; (80039e4 <HAL_NVIC_EnableIRQ+0x18>)
 80039de:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80039e2:	4770      	bx	lr
 80039e4:	e000e100 	.word	0xe000e100

080039e8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80039e8:	2800      	cmp	r0, #0
 80039ea:	db0d      	blt.n	8003a08 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80039ec:	0943      	lsrs	r3, r0, #5
 80039ee:	2201      	movs	r2, #1
 80039f0:	f000 001f 	and.w	r0, r0, #31
 80039f4:	fa02 f000 	lsl.w	r0, r2, r0
 80039f8:	3320      	adds	r3, #32
 80039fa:	4a04      	ldr	r2, [pc, #16]	; (8003a0c <HAL_NVIC_DisableIRQ+0x24>)
 80039fc:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003a00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003a04:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	e000e100 	.word	0xe000e100

08003a10 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003a10:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003a12:	4604      	mov	r4, r0
 8003a14:	b150      	cbz	r0, 8003a2c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003a16:	7943      	ldrb	r3, [r0, #5]
 8003a18:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003a1c:	b913      	cbnz	r3, 8003a24 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003a1e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003a20:	f7fd ffc8 	bl	80019b4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003a24:	2301      	movs	r3, #1
 8003a26:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003a28:	2000      	movs	r0, #0
}
 8003a2a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003a2c:	2001      	movs	r0, #1
 8003a2e:	e7fc      	b.n	8003a2a <HAL_CRC_Init+0x1a>

08003a30 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003a30:	6803      	ldr	r3, [r0, #0]
{
 8003a32:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003a34:	4c08      	ldr	r4, [pc, #32]	; (8003a58 <DMA_CalcBaseAndBitshift+0x28>)
{
 8003a36:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003a38:	b2d9      	uxtb	r1, r3
 8003a3a:	3910      	subs	r1, #16
 8003a3c:	2018      	movs	r0, #24
 8003a3e:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003a42:	5c20      	ldrb	r0, [r4, r0]
 8003a44:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8003a46:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003a4a:	f020 0003 	bic.w	r0, r0, #3
 8003a4e:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003a50:	bf88      	it	hi
 8003a52:	3004      	addhi	r0, #4
 8003a54:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003a56:	bd10      	pop	{r4, pc}
 8003a58:	0801c421 	.word	0x0801c421

08003a5c <HAL_DMA_Init>:
{
 8003a5c:	b570      	push	{r4, r5, r6, lr}
 8003a5e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003a60:	f7ff ff56 	bl	8003910 <HAL_GetTick>
 8003a64:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003a66:	2c00      	cmp	r4, #0
 8003a68:	d073      	beq.n	8003b52 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003a6a:	2302      	movs	r3, #2
 8003a6c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003a70:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003a72:	2300      	movs	r3, #0
 8003a74:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003a78:	6813      	ldr	r3, [r2, #0]
 8003a7a:	f023 0301 	bic.w	r3, r3, #1
 8003a7e:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003a80:	6821      	ldr	r1, [r4, #0]
 8003a82:	680b      	ldr	r3, [r1, #0]
 8003a84:	07d8      	lsls	r0, r3, #31
 8003a86:	d42f      	bmi.n	8003ae8 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003a88:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003a8a:	4d33      	ldr	r5, [pc, #204]	; (8003b58 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003a8c:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003a8e:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003a90:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003a94:	4313      	orrs	r3, r2
 8003a96:	68e2      	ldr	r2, [r4, #12]
 8003a98:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003a9a:	6922      	ldr	r2, [r4, #16]
 8003a9c:	4313      	orrs	r3, r2
 8003a9e:	6962      	ldr	r2, [r4, #20]
 8003aa0:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003aa2:	69e2      	ldr	r2, [r4, #28]
 8003aa4:	4303      	orrs	r3, r0
 8003aa6:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003aa8:	6a22      	ldr	r2, [r4, #32]
 8003aaa:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003aac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003aae:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003ab0:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003ab4:	bf02      	ittt	eq
 8003ab6:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003aba:	4335      	orreq	r5, r6
 8003abc:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003abe:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003ac0:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003ac2:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003ac4:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003ac8:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003acc:	d133      	bne.n	8003b36 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003ace:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003ad0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003ad2:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003ad4:	b37d      	cbz	r5, 8003b36 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003ad6:	b990      	cbnz	r0, 8003afe <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003ad8:	2a01      	cmp	r2, #1
 8003ada:	d021      	beq.n	8003b20 <HAL_DMA_Init+0xc4>
 8003adc:	f032 0202 	bics.w	r2, r2, #2
 8003ae0:	d129      	bne.n	8003b36 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003ae2:	01ea      	lsls	r2, r5, #7
 8003ae4:	d527      	bpl.n	8003b36 <HAL_DMA_Init+0xda>
 8003ae6:	e01e      	b.n	8003b26 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003ae8:	f7ff ff12 	bl	8003910 <HAL_GetTick>
 8003aec:	1b40      	subs	r0, r0, r5
 8003aee:	2805      	cmp	r0, #5
 8003af0:	d9c6      	bls.n	8003a80 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003af2:	2320      	movs	r3, #32
 8003af4:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003af6:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003af8:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003afc:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003afe:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003b02:	d114      	bne.n	8003b2e <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003b04:	2a03      	cmp	r2, #3
 8003b06:	d816      	bhi.n	8003b36 <HAL_DMA_Init+0xda>
 8003b08:	a001      	add	r0, pc, #4	; (adr r0, 8003b10 <HAL_DMA_Init+0xb4>)
 8003b0a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003b0e:	bf00      	nop
 8003b10:	08003b27 	.word	0x08003b27
 8003b14:	08003ae3 	.word	0x08003ae3
 8003b18:	08003b27 	.word	0x08003b27
 8003b1c:	08003b21 	.word	0x08003b21
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003b20:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003b24:	d107      	bne.n	8003b36 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003b26:	2340      	movs	r3, #64	; 0x40
 8003b28:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003b2a:	2001      	movs	r0, #1
 8003b2c:	e7e4      	b.n	8003af8 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003b2e:	2a02      	cmp	r2, #2
 8003b30:	d9f9      	bls.n	8003b26 <HAL_DMA_Init+0xca>
 8003b32:	2a03      	cmp	r2, #3
 8003b34:	d0d5      	beq.n	8003ae2 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003b36:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003b38:	4620      	mov	r0, r4
 8003b3a:	f7ff ff79 	bl	8003a30 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b3e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003b40:	233f      	movs	r3, #63	; 0x3f
 8003b42:	4093      	lsls	r3, r2
 8003b44:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b46:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003b48:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b4a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003b4c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003b50:	e7d4      	b.n	8003afc <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003b52:	2001      	movs	r0, #1
 8003b54:	e7d2      	b.n	8003afc <HAL_DMA_Init+0xa0>
 8003b56:	bf00      	nop
 8003b58:	f010803f 	.word	0xf010803f

08003b5c <HAL_DMA_DeInit>:
{
 8003b5c:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003b5e:	4605      	mov	r5, r0
 8003b60:	b320      	cbz	r0, 8003bac <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003b62:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003b66:	2b02      	cmp	r3, #2
 8003b68:	b2dc      	uxtb	r4, r3
 8003b6a:	d01d      	beq.n	8003ba8 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003b6c:	6803      	ldr	r3, [r0, #0]
 8003b6e:	681a      	ldr	r2, [r3, #0]
 8003b70:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003b74:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003b76:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003b78:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003b7a:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003b7c:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003b7e:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003b80:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003b82:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003b84:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003b86:	f7ff ff53 	bl	8003a30 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b8a:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003b8c:	233f      	movs	r3, #63	; 0x3f
 8003b8e:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003b90:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003b94:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003b98:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b9c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b9e:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003ba0:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003ba4:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003ba8:	4620      	mov	r0, r4
 8003baa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003bac:	2401      	movs	r4, #1
 8003bae:	e7fb      	b.n	8003ba8 <HAL_DMA_DeInit+0x4c>

08003bb0 <HAL_DMA_Abort>:
{
 8003bb0:	b570      	push	{r4, r5, r6, lr}
 8003bb2:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003bb4:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003bb6:	f7ff feab 	bl	8003910 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003bba:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003bbe:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003bc0:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003bc2:	d006      	beq.n	8003bd2 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003bc4:	2380      	movs	r3, #128	; 0x80
 8003bc6:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003bc8:	2300      	movs	r3, #0
 8003bca:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003bce:	2001      	movs	r0, #1
}
 8003bd0:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003bd2:	6823      	ldr	r3, [r4, #0]
 8003bd4:	681a      	ldr	r2, [r3, #0]
 8003bd6:	f022 0216 	bic.w	r2, r2, #22
 8003bda:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003bdc:	695a      	ldr	r2, [r3, #20]
 8003bde:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003be2:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003be4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003be6:	b90a      	cbnz	r2, 8003bec <HAL_DMA_Abort+0x3c>
 8003be8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003bea:	b11a      	cbz	r2, 8003bf4 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003bec:	681a      	ldr	r2, [r3, #0]
 8003bee:	f022 0208 	bic.w	r2, r2, #8
 8003bf2:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003bf4:	681a      	ldr	r2, [r3, #0]
 8003bf6:	f022 0201 	bic.w	r2, r2, #1
 8003bfa:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003bfc:	6823      	ldr	r3, [r4, #0]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	f013 0301 	ands.w	r3, r3, #1
 8003c04:	d10a      	bne.n	8003c1c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c06:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003c08:	223f      	movs	r2, #63	; 0x3f
 8003c0a:	408a      	lsls	r2, r1
 8003c0c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003c0e:	2201      	movs	r2, #1
 8003c10:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003c14:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003c18:	4618      	mov	r0, r3
 8003c1a:	e7d9      	b.n	8003bd0 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003c1c:	f7ff fe78 	bl	8003910 <HAL_GetTick>
 8003c20:	1b40      	subs	r0, r0, r5
 8003c22:	2805      	cmp	r0, #5
 8003c24:	d9ea      	bls.n	8003bfc <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003c26:	2320      	movs	r3, #32
 8003c28:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003c2a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003c2c:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003c2e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003c32:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003c36:	e7cb      	b.n	8003bd0 <HAL_DMA_Abort+0x20>

08003c38 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003c38:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003c3a:	4604      	mov	r4, r0
 8003c3c:	b330      	cbz	r0, 8003c8c <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003c3e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003c42:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003c46:	b91b      	cbnz	r3, 8003c50 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003c48:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003c4c:	f7fd feca 	bl	80019e4 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003c50:	6822      	ldr	r2, [r4, #0]
 8003c52:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003c54:	2302      	movs	r3, #2
 8003c56:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003c5a:	6813      	ldr	r3, [r2, #0]
 8003c5c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003c60:	430b      	orrs	r3, r1
 8003c62:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003c64:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003c66:	68a1      	ldr	r1, [r4, #8]
 8003c68:	f023 0307 	bic.w	r3, r3, #7
 8003c6c:	430b      	orrs	r3, r1
 8003c6e:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003c70:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003c72:	68e1      	ldr	r1, [r4, #12]
 8003c74:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003c78:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003c7c:	430b      	orrs	r3, r1
 8003c7e:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003c80:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003c82:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003c84:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003c86:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003c8a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003c8c:	2001      	movs	r0, #1
 8003c8e:	e7fc      	b.n	8003c8a <HAL_DMA2D_Init+0x52>

08003c90 <HAL_DMA2D_LineEventCallback>:
 8003c90:	4770      	bx	lr

08003c92 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003c92:	4770      	bx	lr

08003c94 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c94:	6803      	ldr	r3, [r0, #0]
{
 8003c96:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c98:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003c9a:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003c9c:	07f2      	lsls	r2, r6, #31
{
 8003c9e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003ca0:	d514      	bpl.n	8003ccc <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003ca2:	05e9      	lsls	r1, r5, #23
 8003ca4:	d512      	bpl.n	8003ccc <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003ca6:	681a      	ldr	r2, [r3, #0]
 8003ca8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003cac:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003cae:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003cb0:	f042 0201 	orr.w	r2, r2, #1
 8003cb4:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003cb6:	2201      	movs	r2, #1
 8003cb8:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003cba:	2304      	movs	r3, #4
 8003cbc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003cc0:	2300      	movs	r3, #0
 8003cc2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003cc6:	6943      	ldr	r3, [r0, #20]
 8003cc8:	b103      	cbz	r3, 8003ccc <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003cca:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003ccc:	06b2      	lsls	r2, r6, #26
 8003cce:	d516      	bpl.n	8003cfe <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003cd0:	04ab      	lsls	r3, r5, #18
 8003cd2:	d514      	bpl.n	8003cfe <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003cd4:	6823      	ldr	r3, [r4, #0]
 8003cd6:	681a      	ldr	r2, [r3, #0]
 8003cd8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003cdc:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003cde:	2220      	movs	r2, #32
 8003ce0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003ce2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003ce4:	f043 0302 	orr.w	r3, r3, #2
 8003ce8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003cea:	2304      	movs	r3, #4
 8003cec:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003cf6:	6963      	ldr	r3, [r4, #20]
 8003cf8:	b10b      	cbz	r3, 8003cfe <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003cfa:	4620      	mov	r0, r4
 8003cfc:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003cfe:	0730      	lsls	r0, r6, #28
 8003d00:	d516      	bpl.n	8003d30 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003d02:	0529      	lsls	r1, r5, #20
 8003d04:	d514      	bpl.n	8003d30 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003d06:	6823      	ldr	r3, [r4, #0]
 8003d08:	681a      	ldr	r2, [r3, #0]
 8003d0a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003d0e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003d10:	2208      	movs	r2, #8
 8003d12:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003d14:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d16:	f043 0304 	orr.w	r3, r3, #4
 8003d1a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003d1c:	2304      	movs	r3, #4
 8003d1e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d22:	2300      	movs	r3, #0
 8003d24:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003d28:	6963      	ldr	r3, [r4, #20]
 8003d2a:	b10b      	cbz	r3, 8003d30 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003d2c:	4620      	mov	r0, r4
 8003d2e:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003d30:	0772      	lsls	r2, r6, #29
 8003d32:	d50b      	bpl.n	8003d4c <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003d34:	056b      	lsls	r3, r5, #21
 8003d36:	d509      	bpl.n	8003d4c <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003d38:	6823      	ldr	r3, [r4, #0]
 8003d3a:	681a      	ldr	r2, [r3, #0]
 8003d3c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003d40:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003d42:	2204      	movs	r2, #4
 8003d44:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003d46:	4620      	mov	r0, r4
 8003d48:	f7ff ffa2 	bl	8003c90 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003d4c:	07b0      	lsls	r0, r6, #30
 8003d4e:	d514      	bpl.n	8003d7a <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003d50:	05a9      	lsls	r1, r5, #22
 8003d52:	d512      	bpl.n	8003d7a <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003d54:	6823      	ldr	r3, [r4, #0]
 8003d56:	681a      	ldr	r2, [r3, #0]
 8003d58:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003d5c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003d5e:	2202      	movs	r2, #2
 8003d60:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003d62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d64:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d66:	2301      	movs	r3, #1
 8003d68:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d6c:	2300      	movs	r3, #0
 8003d6e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8003d72:	6923      	ldr	r3, [r4, #16]
 8003d74:	b10b      	cbz	r3, 8003d7a <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003d76:	4620      	mov	r0, r4
 8003d78:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003d7a:	06f2      	lsls	r2, r6, #27
 8003d7c:	d513      	bpl.n	8003da6 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003d7e:	04eb      	lsls	r3, r5, #19
 8003d80:	d511      	bpl.n	8003da6 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003d82:	6823      	ldr	r3, [r4, #0]
 8003d84:	681a      	ldr	r2, [r3, #0]
 8003d86:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003d8a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003d8c:	2210      	movs	r2, #16
 8003d8e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003d90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d92:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d94:	2301      	movs	r3, #1
 8003d96:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d9a:	2300      	movs	r3, #0
 8003d9c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003da0:	4620      	mov	r0, r4
 8003da2:	f7ff ff76 	bl	8003c92 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003da6:	bd70      	pop	{r4, r5, r6, pc}

08003da8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003da8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003daa:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003dae:	2b01      	cmp	r3, #1
 8003db0:	f04f 0302 	mov.w	r3, #2
 8003db4:	d02b      	beq.n	8003e0e <HAL_DMA2D_ConfigLayer+0x66>
 8003db6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003db8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003dbc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003dc0:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003dc4:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8003dc8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003dca:	4f18      	ldr	r7, [pc, #96]	; (8003e2c <HAL_DMA2D_ConfigLayer+0x84>)
 8003dcc:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003dd0:	3c09      	subs	r4, #9
 8003dd2:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003dd4:	bf9c      	itt	ls
 8003dd6:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8003dda:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003ddc:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8003de0:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003de2:	bf88      	it	hi
 8003de4:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003de8:	b999      	cbnz	r1, 8003e12 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003dea:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003dec:	4039      	ands	r1, r7
 8003dee:	430a      	orrs	r2, r1
 8003df0:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003df2:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003df4:	6982      	ldr	r2, [r0, #24]
 8003df6:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003df8:	d803      	bhi.n	8003e02 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003dfa:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003dfc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003e00:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e02:	2301      	movs	r3, #1
 8003e04:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003e08:	2300      	movs	r3, #0
 8003e0a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003e0e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003e12:	69d9      	ldr	r1, [r3, #28]
 8003e14:	4039      	ands	r1, r7
 8003e16:	430a      	orrs	r2, r1
 8003e18:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003e1a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003e1c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003e1e:	6992      	ldr	r2, [r2, #24]
 8003e20:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003e22:	bf9c      	itt	ls
 8003e24:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8003e28:	621d      	strls	r5, [r3, #32]
 8003e2a:	e7ea      	b.n	8003e02 <HAL_DMA2D_ConfigLayer+0x5a>
 8003e2c:	00fcfff0 	.word	0x00fcfff0

08003e30 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8003e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e34:	4607      	mov	r7, r0
 8003e36:	460d      	mov	r5, r1
 8003e38:	4614      	mov	r4, r2
 8003e3a:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8003e3c:	f7ff fd68 	bl	8003910 <HAL_GetTick>
 8003e40:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8003e42:	683a      	ldr	r2, [r7, #0]
 8003e44:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8003e46:	07db      	lsls	r3, r3, #31
 8003e48:	d50a      	bpl.n	8003e60 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8003e4a:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 8003e4e:	9c06      	ldr	r4, [sp, #24]
 8003e50:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8003e54:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8003e58:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 8003e5a:	2000      	movs	r0, #0
}
 8003e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8003e60:	f7ff fd56 	bl	8003910 <HAL_GetTick>
 8003e64:	eba0 0008 	sub.w	r0, r0, r8
 8003e68:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003e6c:	d9e9      	bls.n	8003e42 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8003e6e:	2003      	movs	r0, #3
 8003e70:	e7f4      	b.n	8003e5c <DSI_ShortWrite+0x2c>

08003e72 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8003e72:	7c03      	ldrb	r3, [r0, #16]
 8003e74:	2b01      	cmp	r3, #1
 8003e76:	d05d      	beq.n	8003f34 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8003e78:	6803      	ldr	r3, [r0, #0]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003e80:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8003e84:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003e86:	bf48      	it	mi
 8003e88:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8003e8c:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003e8e:	bf42      	ittt	mi
 8003e90:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8003e94:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8003e98:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8003e9c:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8003e9e:	bf42      	ittt	mi
 8003ea0:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8003ea4:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8003ea8:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8003eac:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8003eae:	bf42      	ittt	mi
 8003eb0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003eb4:	f042 0201 	orrmi.w	r2, r2, #1
 8003eb8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8003ebc:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8003ebe:	bf42      	ittt	mi
 8003ec0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ec4:	f042 0202 	orrmi.w	r2, r2, #2
 8003ec8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8003ecc:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8003ece:	bf42      	ittt	mi
 8003ed0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ed4:	f042 020c 	orrmi.w	r2, r2, #12
 8003ed8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8003edc:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8003ede:	bf42      	ittt	mi
 8003ee0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ee4:	f042 0210 	orrmi.w	r2, r2, #16
 8003ee8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8003eec:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8003eee:	bf42      	ittt	mi
 8003ef0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ef4:	f042 0220 	orrmi.w	r2, r2, #32
 8003ef8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8003efc:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8003efe:	bf42      	ittt	mi
 8003f00:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f04:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8003f08:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8003f0c:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8003f0e:	bf42      	ittt	mi
 8003f10:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f14:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8003f18:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8003f1c:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8003f1e:	bf42      	ittt	mi
 8003f20:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003f24:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8003f28:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8003f30:	4618      	mov	r0, r3
 8003f32:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8003f34:	2002      	movs	r0, #2
}
 8003f36:	4770      	bx	lr

08003f38 <HAL_DSI_Init>:
{
 8003f38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003f3a:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8003f3c:	4604      	mov	r4, r0
 8003f3e:	2800      	cmp	r0, #0
 8003f40:	f000 80a7 	beq.w	8004092 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8003f44:	7c43      	ldrb	r3, [r0, #17]
 8003f46:	b90b      	cbnz	r3, 8003f4c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8003f48:	f7fd fd6e 	bl	8001a28 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8003f4c:	2303      	movs	r3, #3
 8003f4e:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8003f50:	2300      	movs	r3, #0
 8003f52:	9300      	str	r3, [sp, #0]
 8003f54:	6823      	ldr	r3, [r4, #0]
 8003f56:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8003f5a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003f5e:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8003f62:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8003f66:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003f6a:	9300      	str	r3, [sp, #0]
 8003f6c:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8003f6e:	f7ff fccf 	bl	8003910 <HAL_GetTick>
 8003f72:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8003f74:	6822      	ldr	r2, [r4, #0]
 8003f76:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8003f7a:	04d9      	lsls	r1, r3, #19
 8003f7c:	d578      	bpl.n	8004070 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8003f7e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003f82:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8003f86:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8003f8a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8003f8e:	e9d5 0300 	ldrd	r0, r3, [r5]
 8003f92:	02db      	lsls	r3, r3, #11
 8003f94:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8003f98:	68a8      	ldr	r0, [r5, #8]
 8003f9a:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8003f9e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003fa2:	430b      	orrs	r3, r1
 8003fa4:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8003fa8:	2300      	movs	r3, #0
 8003faa:	9301      	str	r3, [sp, #4]
 8003fac:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003fb0:	f043 0301 	orr.w	r3, r3, #1
 8003fb4:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8003fb8:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003fbc:	f003 0301 	and.w	r3, r3, #1
 8003fc0:	9301      	str	r3, [sp, #4]
 8003fc2:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8003fc4:	f7ff fca4 	bl	8003910 <HAL_GetTick>
 8003fc8:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8003fca:	6823      	ldr	r3, [r4, #0]
 8003fcc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8003fd0:	05d2      	lsls	r2, r2, #23
 8003fd2:	d557      	bpl.n	8004084 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003fd4:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003fd8:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8003fda:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003fdc:	f042 0206 	orr.w	r2, r2, #6
 8003fe0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8003fe4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003fe8:	f022 0203 	bic.w	r2, r2, #3
 8003fec:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003ff0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003ff4:	430a      	orrs	r2, r1
 8003ff6:	f042 0201 	orr.w	r2, r2, #1
 8003ffa:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8003ffe:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004002:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004004:	f022 0203 	bic.w	r2, r2, #3
 8004008:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800400c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004010:	430a      	orrs	r2, r1
 8004012:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004016:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004018:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800401a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800401e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004020:	689a      	ldr	r2, [r3, #8]
 8004022:	430a      	orrs	r2, r1
 8004024:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004026:	686a      	ldr	r2, [r5, #4]
 8004028:	2a01      	cmp	r2, #1
 800402a:	bf38      	it	cc
 800402c:	2201      	movcc	r2, #1
 800402e:	4611      	mov	r1, r2
 8004030:	4a19      	ldr	r2, [pc, #100]	; (8004098 <HAL_DSI_Init+0x160>)
 8004032:	434a      	muls	r2, r1
 8004034:	68a9      	ldr	r1, [r5, #8]
 8004036:	f001 0103 	and.w	r1, r1, #3
 800403a:	408a      	lsls	r2, r1
 800403c:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 8004040:	4341      	muls	r1, r0
 8004042:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004046:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800404a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800404e:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004052:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004056:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004058:	430a      	orrs	r2, r1
 800405a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800405e:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004062:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004066:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004068:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800406a:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800406c:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800406e:	e007      	b.n	8004080 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004070:	f7ff fc4e 	bl	8003910 <HAL_GetTick>
 8004074:	1b80      	subs	r0, r0, r6
 8004076:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800407a:	f67f af7b 	bls.w	8003f74 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800407e:	2003      	movs	r0, #3
}
 8004080:	b002      	add	sp, #8
 8004082:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004084:	f7ff fc44 	bl	8003910 <HAL_GetTick>
 8004088:	1b80      	subs	r0, r0, r6
 800408a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800408e:	d99c      	bls.n	8003fca <HAL_DSI_Init+0x92>
 8004090:	e7f5      	b.n	800407e <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8004092:	2001      	movs	r0, #1
 8004094:	e7f4      	b.n	8004080 <HAL_DSI_Init+0x148>
 8004096:	bf00      	nop
 8004098:	003d0900 	.word	0x003d0900

0800409c <HAL_DSI_ErrorCallback>:
 800409c:	4770      	bx	lr

0800409e <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800409e:	6803      	ldr	r3, [r0, #0]
 80040a0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80040a4:	07d1      	lsls	r1, r2, #31
{
 80040a6:	b510      	push	{r4, lr}
 80040a8:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80040aa:	d508      	bpl.n	80040be <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 80040ac:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80040b0:	07d2      	lsls	r2, r2, #31
 80040b2:	d504      	bpl.n	80040be <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80040b4:	2201      	movs	r2, #1
 80040b6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80040ba:	f7fc fd01 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80040be:	6823      	ldr	r3, [r4, #0]
 80040c0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80040c4:	0791      	lsls	r1, r2, #30
 80040c6:	d509      	bpl.n	80040dc <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80040c8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80040cc:	0792      	lsls	r2, r2, #30
 80040ce:	d505      	bpl.n	80040dc <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80040d0:	2202      	movs	r2, #2
 80040d2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80040d6:	4620      	mov	r0, r4
 80040d8:	f7fc fd26 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80040dc:	69a3      	ldr	r3, [r4, #24]
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d04e      	beq.n	8004180 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80040e2:	6821      	ldr	r1, [r4, #0]
 80040e4:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80040e8:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80040ec:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80040f0:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80040f2:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80040f6:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80040f8:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80040fa:	b119      	cbz	r1, 8004104 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80040fc:	6961      	ldr	r1, [r4, #20]
 80040fe:	f041 0101 	orr.w	r1, r1, #1
 8004102:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004104:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004108:	bf1e      	ittt	ne
 800410a:	6962      	ldrne	r2, [r4, #20]
 800410c:	f042 0202 	orrne.w	r2, r2, #2
 8004110:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004112:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004114:	bf42      	ittt	mi
 8004116:	6962      	ldrmi	r2, [r4, #20]
 8004118:	f042 0204 	orrmi.w	r2, r2, #4
 800411c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800411e:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004120:	bf42      	ittt	mi
 8004122:	6962      	ldrmi	r2, [r4, #20]
 8004124:	f042 0208 	orrmi.w	r2, r2, #8
 8004128:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800412a:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800412e:	bf1e      	ittt	ne
 8004130:	6962      	ldrne	r2, [r4, #20]
 8004132:	f042 0210 	orrne.w	r2, r2, #16
 8004136:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004138:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800413a:	bf42      	ittt	mi
 800413c:	6962      	ldrmi	r2, [r4, #20]
 800413e:	f042 0220 	orrmi.w	r2, r2, #32
 8004142:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8004144:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8004146:	bf42      	ittt	mi
 8004148:	6962      	ldrmi	r2, [r4, #20]
 800414a:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800414e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8004150:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8004152:	bf42      	ittt	mi
 8004154:	6962      	ldrmi	r2, [r4, #20]
 8004156:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800415a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800415c:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800415e:	bf42      	ittt	mi
 8004160:	6962      	ldrmi	r2, [r4, #20]
 8004162:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8004166:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8004168:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800416c:	bf1e      	ittt	ne
 800416e:	6963      	ldrne	r3, [r4, #20]
 8004170:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8004174:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8004176:	6963      	ldr	r3, [r4, #20]
 8004178:	b113      	cbz	r3, 8004180 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800417a:	4620      	mov	r0, r4
 800417c:	f7ff ff8e 	bl	800409c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004180:	bd10      	pop	{r4, pc}

08004182 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004182:	7c03      	ldrb	r3, [r0, #16]
 8004184:	2b01      	cmp	r3, #1
 8004186:	d00b      	beq.n	80041a0 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004188:	6803      	ldr	r3, [r0, #0]
 800418a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800418c:	f022 0203 	bic.w	r2, r2, #3
 8004190:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004192:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004194:	4311      	orrs	r1, r2
 8004196:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004198:	2300      	movs	r3, #0
 800419a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800419c:	4618      	mov	r0, r3
 800419e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80041a0:	2002      	movs	r0, #2
}
 80041a2:	4770      	bx	lr

080041a4 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 80041a4:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80041a6:	7c03      	ldrb	r3, [r0, #16]
 80041a8:	2b01      	cmp	r3, #1
 80041aa:	d06a      	beq.n	8004282 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80041ac:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80041ae:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80041b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80041b2:	f042 0201 	orr.w	r2, r2, #1
 80041b6:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80041b8:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80041bc:	f022 0201 	bic.w	r2, r2, #1
 80041c0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80041c4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80041c8:	f042 0201 	orr.w	r2, r2, #1
 80041cc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80041d0:	68da      	ldr	r2, [r3, #12]
 80041d2:	f022 0203 	bic.w	r2, r2, #3
 80041d6:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80041d8:	68da      	ldr	r2, [r3, #12]
 80041da:	4322      	orrs	r2, r4
 80041dc:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80041de:	695a      	ldr	r2, [r3, #20]
 80041e0:	f022 0207 	bic.w	r2, r2, #7
 80041e4:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80041e6:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80041ea:	432a      	orrs	r2, r5
 80041ec:	694d      	ldr	r5, [r1, #20]
 80041ee:	695c      	ldr	r4, [r3, #20]
 80041f0:	432a      	orrs	r2, r5
 80041f2:	4322      	orrs	r2, r4
 80041f4:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80041f6:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80041f8:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80041fa:	f022 020f 	bic.w	r2, r2, #15
 80041fe:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004200:	691c      	ldr	r4, [r3, #16]
 8004202:	432c      	orrs	r4, r5
 8004204:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8004206:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800420a:	f024 040e 	bic.w	r4, r4, #14
 800420e:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004212:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004216:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004218:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800421c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004220:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004222:	0c12      	lsrs	r2, r2, #16
 8004224:	0412      	lsls	r2, r2, #16
 8004226:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004228:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800422a:	4322      	orrs	r2, r4
 800422c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800422e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004232:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004236:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800423a:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800423e:	432a      	orrs	r2, r5
 8004240:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004242:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004246:	432a      	orrs	r2, r5
 8004248:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800424a:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800424c:	432a      	orrs	r2, r5
 800424e:	4322      	orrs	r2, r4
 8004250:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8004254:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004256:	f022 0201 	bic.w	r2, r2, #1
 800425a:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800425c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800425e:	430a      	orrs	r2, r1
 8004260:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8004262:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004266:	f042 0201 	orr.w	r2, r2, #1
 800426a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800426e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004272:	f042 0202 	orr.w	r2, r2, #2
 8004276:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800427a:	2300      	movs	r3, #0
 800427c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800427e:	4618      	mov	r0, r3
}
 8004280:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004282:	2002      	movs	r0, #2
 8004284:	e7fc      	b.n	8004280 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004288 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004288:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800428a:	7c03      	ldrb	r3, [r0, #16]
 800428c:	2b01      	cmp	r3, #1
 800428e:	d02a      	beq.n	80042e6 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004290:	6802      	ldr	r2, [r0, #0]
 8004292:	4b16      	ldr	r3, [pc, #88]	; (80042ec <HAL_DSI_ConfigCommand+0x64>)
 8004294:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004296:	4023      	ands	r3, r4
 8004298:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800429a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800429e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 80042a0:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80042a2:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 80042a4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 80042a6:	68cd      	ldr	r5, [r1, #12]
 80042a8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 80042aa:	690d      	ldr	r5, [r1, #16]
 80042ac:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 80042ae:	694d      	ldr	r5, [r1, #20]
 80042b0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80042b2:	698d      	ldr	r5, [r1, #24]
 80042b4:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80042b6:	69cd      	ldr	r5, [r1, #28]
 80042b8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80042ba:	6a0d      	ldr	r5, [r1, #32]
 80042bc:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80042be:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80042c0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80042c2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80042c4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80042c6:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80042c8:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80042ca:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80042cc:	4323      	orrs	r3, r4
 80042ce:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80042d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80042d2:	f023 0302 	bic.w	r3, r3, #2
 80042d6:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80042d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80042da:	430b      	orrs	r3, r1
 80042dc:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80042de:	2300      	movs	r3, #0
 80042e0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80042e2:	4618      	mov	r0, r3
}
 80042e4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80042e6:	2002      	movs	r0, #2
 80042e8:	e7fc      	b.n	80042e4 <HAL_DSI_ConfigCommand+0x5c>
 80042ea:	bf00      	nop
 80042ec:	fef080ff 	.word	0xfef080ff

080042f0 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80042f0:	7c03      	ldrb	r3, [r0, #16]
 80042f2:	2b01      	cmp	r3, #1
 80042f4:	d00b      	beq.n	800430e <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80042f6:	6803      	ldr	r3, [r0, #0]
 80042f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80042fa:	f022 021f 	bic.w	r2, r2, #31
 80042fe:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004300:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004302:	4311      	orrs	r1, r2
 8004304:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004306:	2300      	movs	r3, #0
 8004308:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800430a:	4618      	mov	r0, r3
 800430c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800430e:	2002      	movs	r0, #2
}
 8004310:	4770      	bx	lr

08004312 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004312:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004314:	7c03      	ldrb	r3, [r0, #16]
 8004316:	2b01      	cmp	r3, #1
 8004318:	d035      	beq.n	8004386 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800431a:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800431e:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004320:	4294      	cmp	r4, r2
 8004322:	bf38      	it	cc
 8004324:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004326:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800432a:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800432e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8004332:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004336:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800433a:	4322      	orrs	r2, r4
 800433c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004340:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004344:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004348:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800434c:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8004350:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004352:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004356:	690d      	ldr	r5, [r1, #16]
 8004358:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800435c:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800435e:	432a      	orrs	r2, r5
 8004360:	4322      	orrs	r2, r4
 8004362:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8004366:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800436a:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800436e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004372:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004376:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800437a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800437e:	2300      	movs	r3, #0
 8004380:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004382:	4618      	mov	r0, r3
}
 8004384:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004386:	2002      	movs	r0, #2
 8004388:	e7fc      	b.n	8004384 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800438c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800438c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800438e:	7c03      	ldrb	r3, [r0, #16]
 8004390:	2b01      	cmp	r3, #1
 8004392:	d05c      	beq.n	800444e <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004394:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004396:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004398:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800439a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800439c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80043a0:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80043a2:	689a      	ldr	r2, [r3, #8]
 80043a4:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80043a8:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80043aa:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80043ac:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80043ae:	b292      	uxth	r2, r2
 80043b0:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80043b2:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80043b4:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80043b8:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80043ba:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80043bc:	4a25      	ldr	r2, [pc, #148]	; (8004454 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80043be:	4014      	ands	r4, r2
 80043c0:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80043c2:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80043c4:	432c      	orrs	r4, r5
 80043c6:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80043c8:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80043ca:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80043cc:	4014      	ands	r4, r2
 80043ce:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80043d0:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80043d2:	432c      	orrs	r4, r5
 80043d4:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80043d6:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80043da:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80043dc:	4014      	ands	r4, r2
 80043de:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80043e2:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80043e6:	432c      	orrs	r4, r5
 80043e8:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80043ec:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80043f0:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80043f2:	4014      	ands	r4, r2
 80043f4:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80043f8:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80043fc:	432c      	orrs	r4, r5
 80043fe:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004402:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004406:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800440a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800440e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004412:	698d      	ldr	r5, [r1, #24]
 8004414:	432c      	orrs	r4, r5
 8004416:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800441a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800441e:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004420:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004422:	4014      	ands	r4, r2
 8004424:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004428:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800442c:	432c      	orrs	r4, r5
 800442e:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8004432:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8004436:	4022      	ands	r2, r4
 8004438:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800443c:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004440:	430a      	orrs	r2, r1
 8004442:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004446:	2300      	movs	r3, #0
 8004448:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800444a:	4618      	mov	r0, r3
}
 800444c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800444e:	2002      	movs	r0, #2
 8004450:	e7fc      	b.n	800444c <HAL_DSI_ConfigHostTimeouts+0xc0>
 8004452:	bf00      	nop
 8004454:	ffff0000 	.word	0xffff0000

08004458 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004458:	7c03      	ldrb	r3, [r0, #16]
 800445a:	2b01      	cmp	r3, #1
{
 800445c:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800445e:	d01c      	beq.n	800449a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8004460:	6802      	ldr	r2, [r0, #0]
 8004462:	2300      	movs	r3, #0
 8004464:	9300      	str	r3, [sp, #0]
 8004466:	6851      	ldr	r1, [r2, #4]
 8004468:	f041 0101 	orr.w	r1, r1, #1
 800446c:	6051      	str	r1, [r2, #4]
 800446e:	6851      	ldr	r1, [r2, #4]
 8004470:	f001 0101 	and.w	r1, r1, #1
 8004474:	9100      	str	r1, [sp, #0]
 8004476:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004478:	9301      	str	r3, [sp, #4]
 800447a:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800447e:	f041 0108 	orr.w	r1, r1, #8
 8004482:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004486:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800448a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800448c:	f002 0208 	and.w	r2, r2, #8
 8004490:	9201      	str	r2, [sp, #4]
 8004492:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004494:	4618      	mov	r0, r3
}
 8004496:	b002      	add	sp, #8
 8004498:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800449a:	2002      	movs	r0, #2
 800449c:	e7fb      	b.n	8004496 <HAL_DSI_Start+0x3e>

0800449e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800449e:	7c03      	ldrb	r3, [r0, #16]
 80044a0:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 80044a2:	bf1f      	itttt	ne
 80044a4:	6802      	ldrne	r2, [r0, #0]
 80044a6:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 80044aa:	f043 0304 	orrne.w	r3, r3, #4
 80044ae:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80044b2:	bf1d      	ittte	ne
 80044b4:	2300      	movne	r3, #0
 80044b6:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80044b8:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80044ba:	2002      	moveq	r0, #2
}
 80044bc:	4770      	bx	lr

080044be <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80044be:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80044c0:	7c05      	ldrb	r5, [r0, #16]
 80044c2:	2d01      	cmp	r5, #1
{
 80044c4:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80044c6:	d009      	beq.n	80044dc <HAL_DSI_ShortWrite+0x1e>
 80044c8:	2501      	movs	r5, #1
 80044ca:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80044cc:	9d06      	ldr	r5, [sp, #24]
 80044ce:	9500      	str	r5, [sp, #0]
 80044d0:	f7ff fcae 	bl	8003e30 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80044d4:	2300      	movs	r3, #0
 80044d6:	7423      	strb	r3, [r4, #16]

  return status;
}
 80044d8:	b003      	add	sp, #12
 80044da:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80044dc:	2002      	movs	r0, #2
 80044de:	e7fb      	b.n	80044d8 <HAL_DSI_ShortWrite+0x1a>

080044e0 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80044e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044e4:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80044e6:	7c03      	ldrb	r3, [r0, #16]
 80044e8:	2b01      	cmp	r3, #1
{
 80044ea:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80044ee:	4606      	mov	r6, r0
 80044f0:	460f      	mov	r7, r1
 80044f2:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80044f4:	d053      	beq.n	800459e <HAL_DSI_LongWrite+0xbe>
 80044f6:	2301      	movs	r3, #1
 80044f8:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80044fa:	f7ff fa09 	bl	8003910 <HAL_GetTick>
 80044fe:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004500:	6832      	ldr	r2, [r6, #0]
 8004502:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8004504:	f013 0a01 	ands.w	sl, r3, #1
 8004508:	d01a      	beq.n	8004540 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800450a:	2c03      	cmp	r4, #3
 800450c:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800450e:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004512:	bf28      	it	cs
 8004514:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 8004516:	4288      	cmp	r0, r1
 8004518:	d11e      	bne.n	8004558 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800451a:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800451c:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 8004520:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004522:	bb1b      	cbnz	r3, 800456c <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004524:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004526:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800452a:	0225      	lsls	r5, r4, #8
 800452c:	b2ad      	uxth	r5, r5
 800452e:	0224      	lsls	r4, r4, #8
 8004530:	430d      	orrs	r5, r1
 8004532:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004536:	432c      	orrs	r4, r5
 8004538:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800453a:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800453c:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800453e:	e009      	b.n	8004554 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004540:	f7ff f9e6 	bl	8003910 <HAL_GetTick>
 8004544:	eba0 000b 	sub.w	r0, r0, fp
 8004548:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800454c:	d9d8      	bls.n	8004500 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800454e:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004552:	2003      	movs	r0, #3
}
 8004554:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004558:	f818 3000 	ldrb.w	r3, [r8, r0]
 800455c:	3001      	adds	r0, #1
 800455e:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 8004562:	fa03 f30c 	lsl.w	r3, r3, ip
 8004566:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800456a:	e7d4      	b.n	8004516 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800456c:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800456e:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004572:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004574:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004576:	bf28      	it	cs
 8004578:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800457c:	f810 8001 	ldrb.w	r8, [r0, r1]
 8004580:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004584:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004586:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800458a:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800458c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004590:	d1f4      	bne.n	800457c <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004592:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 8004596:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800459a:	4470      	add	r0, lr
 800459c:	e7c1      	b.n	8004522 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800459e:	2002      	movs	r0, #2
 80045a0:	e7d8      	b.n	8004554 <HAL_DSI_LongWrite+0x74>

080045a2 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80045a2:	7c03      	ldrb	r3, [r0, #16]
 80045a4:	2b01      	cmp	r3, #1
 80045a6:	d010      	beq.n	80045ca <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 80045a8:	6803      	ldr	r3, [r0, #0]
 80045aa:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80045ae:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80045b2:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 80045b6:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80045ba:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 80045be:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80045c2:	2300      	movs	r3, #0
 80045c4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80045c6:	4618      	mov	r0, r3
 80045c8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80045ca:	2002      	movs	r0, #2
}
 80045cc:	4770      	bx	lr
	...

080045d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80045d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80045d4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004798 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80045d8:	4a6d      	ldr	r2, [pc, #436]	; (8004790 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80045da:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80045dc:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80045de:	2401      	movs	r4, #1
 80045e0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80045e2:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80045e6:	43ac      	bics	r4, r5
 80045e8:	f040 80b9 	bne.w	800475e <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045ec:	684d      	ldr	r5, [r1, #4]
 80045ee:	f005 0403 	and.w	r4, r5, #3
 80045f2:	ea4f 0843 	mov.w	r8, r3, lsl #1
 80045f6:	2603      	movs	r6, #3
 80045f8:	1e67      	subs	r7, r4, #1
 80045fa:	fa06 f608 	lsl.w	r6, r6, r8
 80045fe:	2f01      	cmp	r7, #1
 8004600:	ea6f 0606 	mvn.w	r6, r6
 8004604:	d834      	bhi.n	8004670 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004606:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004608:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800460c:	68cf      	ldr	r7, [r1, #12]
 800460e:	fa07 f708 	lsl.w	r7, r7, r8
 8004612:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004616:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004618:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800461a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800461e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004622:	409f      	lsls	r7, r3
 8004624:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004628:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800462a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800462c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004630:	688f      	ldr	r7, [r1, #8]
 8004632:	fa07 f708 	lsl.w	r7, r7, r8
 8004636:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800463a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800463c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800463e:	d119      	bne.n	8004674 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004640:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004644:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004648:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800464c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004650:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004654:	f04f 0e0f 	mov.w	lr, #15
 8004658:	fa0e fe0b 	lsl.w	lr, lr, fp
 800465c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004660:	690f      	ldr	r7, [r1, #16]
 8004662:	fa07 f70b 	lsl.w	r7, r7, fp
 8004666:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800466a:	f8ca 7020 	str.w	r7, [sl, #32]
 800466e:	e001      	b.n	8004674 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004670:	2c03      	cmp	r4, #3
 8004672:	d1da      	bne.n	800462a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004674:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004676:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800467a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800467c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800467e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8004682:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004684:	d06b      	beq.n	800475e <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004686:	f04f 0a00 	mov.w	sl, #0
 800468a:	f8cd a004 	str.w	sl, [sp, #4]
 800468e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004692:	4c40      	ldr	r4, [pc, #256]	; (8004794 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004694:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004698:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800469c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 80046a0:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 80046a4:	9601      	str	r6, [sp, #4]
 80046a6:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80046a8:	f023 0603 	bic.w	r6, r3, #3
 80046ac:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 80046b0:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80046b4:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80046b8:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80046bc:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80046c0:	270f      	movs	r7, #15
 80046c2:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80046c6:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80046c8:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80046cc:	d04e      	beq.n	800476c <HAL_GPIO_Init+0x19c>
 80046ce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046d2:	42a0      	cmp	r0, r4
 80046d4:	d04c      	beq.n	8004770 <HAL_GPIO_Init+0x1a0>
 80046d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046da:	42a0      	cmp	r0, r4
 80046dc:	d04a      	beq.n	8004774 <HAL_GPIO_Init+0x1a4>
 80046de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046e2:	42a0      	cmp	r0, r4
 80046e4:	d048      	beq.n	8004778 <HAL_GPIO_Init+0x1a8>
 80046e6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046ea:	42a0      	cmp	r0, r4
 80046ec:	d046      	beq.n	800477c <HAL_GPIO_Init+0x1ac>
 80046ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046f2:	42a0      	cmp	r0, r4
 80046f4:	d044      	beq.n	8004780 <HAL_GPIO_Init+0x1b0>
 80046f6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046fa:	42a0      	cmp	r0, r4
 80046fc:	d042      	beq.n	8004784 <HAL_GPIO_Init+0x1b4>
 80046fe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004702:	42a0      	cmp	r0, r4
 8004704:	d040      	beq.n	8004788 <HAL_GPIO_Init+0x1b8>
 8004706:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800470a:	42a0      	cmp	r0, r4
 800470c:	d03e      	beq.n	800478c <HAL_GPIO_Init+0x1bc>
 800470e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004712:	42a0      	cmp	r0, r4
 8004714:	bf0c      	ite	eq
 8004716:	2409      	moveq	r4, #9
 8004718:	240a      	movne	r4, #10
 800471a:	fa04 f40e 	lsl.w	r4, r4, lr
 800471e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004720:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 8004722:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004724:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004728:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800472a:	bf54      	ite	pl
 800472c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800472e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004732:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 8004734:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004736:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8004738:	bf54      	ite	pl
 800473a:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800473c:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8004740:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004742:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004744:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8004746:	bf54      	ite	pl
 8004748:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800474a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800474e:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004750:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004752:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8004754:	bf54      	ite	pl
 8004756:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004758:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800475c:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800475e:	3301      	adds	r3, #1
 8004760:	2b10      	cmp	r3, #16
 8004762:	f47f af3b 	bne.w	80045dc <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004766:	b003      	add	sp, #12
 8004768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800476c:	4654      	mov	r4, sl
 800476e:	e7d4      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004770:	2401      	movs	r4, #1
 8004772:	e7d2      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004774:	2402      	movs	r4, #2
 8004776:	e7d0      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004778:	2403      	movs	r4, #3
 800477a:	e7ce      	b.n	800471a <HAL_GPIO_Init+0x14a>
 800477c:	2404      	movs	r4, #4
 800477e:	e7cc      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004780:	2405      	movs	r4, #5
 8004782:	e7ca      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004784:	2406      	movs	r4, #6
 8004786:	e7c8      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004788:	2407      	movs	r4, #7
 800478a:	e7c6      	b.n	800471a <HAL_GPIO_Init+0x14a>
 800478c:	2408      	movs	r4, #8
 800478e:	e7c4      	b.n	800471a <HAL_GPIO_Init+0x14a>
 8004790:	40013c00 	.word	0x40013c00
 8004794:	40020000 	.word	0x40020000
 8004798:	40023800 	.word	0x40023800

0800479c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800479c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80047a0:	4c4a      	ldr	r4, [pc, #296]	; (80048cc <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80047a2:	f8df 9130 	ldr.w	r9, [pc, #304]	; 80048d4 <HAL_GPIO_DeInit+0x138>
 80047a6:	f8df a130 	ldr.w	sl, [pc, #304]	; 80048d8 <HAL_GPIO_DeInit+0x13c>
 80047aa:	f8df b130 	ldr.w	fp, [pc, #304]	; 80048dc <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80047ae:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 80047b0:	2301      	movs	r3, #1
 80047b2:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 80047b6:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 80047ba:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 80047be:	d16e      	bne.n	800489e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 80047c0:	f022 0503 	bic.w	r5, r2, #3
 80047c4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 80047c8:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80047cc:	4b40      	ldr	r3, [pc, #256]	; (80048d0 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 80047ce:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80047d2:	f002 0c03 	and.w	ip, r2, #3
 80047d6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80047da:	260f      	movs	r6, #15
 80047dc:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80047e0:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80047e2:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80047e6:	d05f      	beq.n	80048a8 <HAL_GPIO_DeInit+0x10c>
 80047e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047ec:	4298      	cmp	r0, r3
 80047ee:	d05d      	beq.n	80048ac <HAL_GPIO_DeInit+0x110>
 80047f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047f4:	4298      	cmp	r0, r3
 80047f6:	d05b      	beq.n	80048b0 <HAL_GPIO_DeInit+0x114>
 80047f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047fc:	4298      	cmp	r0, r3
 80047fe:	d059      	beq.n	80048b4 <HAL_GPIO_DeInit+0x118>
 8004800:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004804:	4298      	cmp	r0, r3
 8004806:	d057      	beq.n	80048b8 <HAL_GPIO_DeInit+0x11c>
 8004808:	4548      	cmp	r0, r9
 800480a:	d057      	beq.n	80048bc <HAL_GPIO_DeInit+0x120>
 800480c:	4550      	cmp	r0, sl
 800480e:	d057      	beq.n	80048c0 <HAL_GPIO_DeInit+0x124>
 8004810:	4558      	cmp	r0, fp
 8004812:	d057      	beq.n	80048c4 <HAL_GPIO_DeInit+0x128>
 8004814:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004818:	4298      	cmp	r0, r3
 800481a:	d055      	beq.n	80048c8 <HAL_GPIO_DeInit+0x12c>
 800481c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004820:	4298      	cmp	r0, r3
 8004822:	bf0c      	ite	eq
 8004824:	2309      	moveq	r3, #9
 8004826:	230a      	movne	r3, #10
 8004828:	fa03 f30c 	lsl.w	r3, r3, ip
 800482c:	4543      	cmp	r3, r8
 800482e:	d113      	bne.n	8004858 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004830:	6823      	ldr	r3, [r4, #0]
 8004832:	ea23 0307 	bic.w	r3, r3, r7
 8004836:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004838:	6863      	ldr	r3, [r4, #4]
 800483a:	ea23 0307 	bic.w	r3, r3, r7
 800483e:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004840:	68a3      	ldr	r3, [r4, #8]
 8004842:	ea23 0307 	bic.w	r3, r3, r7
 8004846:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004848:	68e3      	ldr	r3, [r4, #12]
 800484a:	ea23 0707 	bic.w	r7, r3, r7
 800484e:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004850:	68ab      	ldr	r3, [r5, #8]
 8004852:	ea23 0606 	bic.w	r6, r3, r6
 8004856:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004858:	6805      	ldr	r5, [r0, #0]
 800485a:	2603      	movs	r6, #3
 800485c:	0053      	lsls	r3, r2, #1
 800485e:	fa06 f303 	lsl.w	r3, r6, r3
 8004862:	ea25 0503 	bic.w	r5, r5, r3
 8004866:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004868:	fa22 f506 	lsr.w	r5, r2, r6
 800486c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004870:	f002 0c07 	and.w	ip, r2, #7
 8004874:	6a2e      	ldr	r6, [r5, #32]
 8004876:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800487a:	270f      	movs	r7, #15
 800487c:	fa07 f70c 	lsl.w	r7, r7, ip
 8004880:	ea26 0707 	bic.w	r7, r6, r7
 8004884:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004886:	68c5      	ldr	r5, [r0, #12]
 8004888:	ea25 0503 	bic.w	r5, r5, r3
 800488c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800488e:	6845      	ldr	r5, [r0, #4]
 8004890:	ea25 050e 	bic.w	r5, r5, lr
 8004894:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004896:	6885      	ldr	r5, [r0, #8]
 8004898:	ea25 0303 	bic.w	r3, r5, r3
 800489c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800489e:	3201      	adds	r2, #1
 80048a0:	2a10      	cmp	r2, #16
 80048a2:	d185      	bne.n	80047b0 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 80048a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80048a8:	2300      	movs	r3, #0
 80048aa:	e7bd      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048ac:	2301      	movs	r3, #1
 80048ae:	e7bb      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048b0:	2302      	movs	r3, #2
 80048b2:	e7b9      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048b4:	2303      	movs	r3, #3
 80048b6:	e7b7      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048b8:	2304      	movs	r3, #4
 80048ba:	e7b5      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048bc:	2305      	movs	r3, #5
 80048be:	e7b3      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048c0:	2306      	movs	r3, #6
 80048c2:	e7b1      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048c4:	2307      	movs	r3, #7
 80048c6:	e7af      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048c8:	2308      	movs	r3, #8
 80048ca:	e7ad      	b.n	8004828 <HAL_GPIO_DeInit+0x8c>
 80048cc:	40013c00 	.word	0x40013c00
 80048d0:	40020000 	.word	0x40020000
 80048d4:	40021400 	.word	0x40021400
 80048d8:	40021800 	.word	0x40021800
 80048dc:	40021c00 	.word	0x40021c00

080048e0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80048e0:	6903      	ldr	r3, [r0, #16]
 80048e2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80048e4:	bf14      	ite	ne
 80048e6:	2001      	movne	r0, #1
 80048e8:	2000      	moveq	r0, #0
 80048ea:	4770      	bx	lr

080048ec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80048ec:	b10a      	cbz	r2, 80048f2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80048ee:	6181      	str	r1, [r0, #24]
  }
}
 80048f0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80048f2:	0409      	lsls	r1, r1, #16
 80048f4:	e7fb      	b.n	80048ee <HAL_GPIO_WritePin+0x2>

080048f6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 80048f6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80048f8:	ea01 0203 	and.w	r2, r1, r3
 80048fc:	ea21 0103 	bic.w	r1, r1, r3
 8004900:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004904:	6181      	str	r1, [r0, #24]
}
 8004906:	4770      	bx	lr

08004908 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004908:	6801      	ldr	r1, [r0, #0]
 800490a:	694b      	ldr	r3, [r1, #20]
 800490c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004910:	f04f 0200 	mov.w	r2, #0
 8004914:	d010      	beq.n	8004938 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004916:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800491a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800491c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800491e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004920:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004924:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004928:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800492a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800492e:	f043 0304 	orr.w	r3, r3, #4
 8004932:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004934:	2001      	movs	r0, #1
 8004936:	4770      	bx	lr
  }
  return HAL_OK;
 8004938:	4618      	mov	r0, r3
}
 800493a:	4770      	bx	lr

0800493c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800493c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004940:	4604      	mov	r4, r0
 8004942:	460f      	mov	r7, r1
 8004944:	4616      	mov	r6, r2
 8004946:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004948:	6825      	ldr	r5, [r4, #0]
 800494a:	6968      	ldr	r0, [r5, #20]
 800494c:	ea27 0000 	bic.w	r0, r7, r0
 8004950:	b280      	uxth	r0, r0
 8004952:	b1b8      	cbz	r0, 8004984 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004954:	696b      	ldr	r3, [r5, #20]
 8004956:	055a      	lsls	r2, r3, #21
 8004958:	d516      	bpl.n	8004988 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800495a:	682b      	ldr	r3, [r5, #0]
 800495c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004960:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004962:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004966:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004968:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800496a:	2300      	movs	r3, #0
 800496c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800496e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004972:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004976:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004978:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800497c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800497e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004982:	2001      	movs	r0, #1
}
 8004984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004988:	1c73      	adds	r3, r6, #1
 800498a:	d0de      	beq.n	800494a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800498c:	f7fe ffc0 	bl	8003910 <HAL_GetTick>
 8004990:	eba0 0008 	sub.w	r0, r0, r8
 8004994:	42b0      	cmp	r0, r6
 8004996:	d801      	bhi.n	800499c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004998:	2e00      	cmp	r6, #0
 800499a:	d1d5      	bne.n	8004948 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800499c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800499e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80049a0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80049a2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049a6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80049aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80049ac:	f042 0220 	orr.w	r2, r2, #32
 80049b0:	e7e4      	b.n	800497c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080049b2 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80049b2:	b570      	push	{r4, r5, r6, lr}
 80049b4:	4604      	mov	r4, r0
 80049b6:	460d      	mov	r5, r1
 80049b8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80049ba:	6823      	ldr	r3, [r4, #0]
 80049bc:	695b      	ldr	r3, [r3, #20]
 80049be:	075b      	lsls	r3, r3, #29
 80049c0:	d501      	bpl.n	80049c6 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80049c2:	2000      	movs	r0, #0
}
 80049c4:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80049c6:	4620      	mov	r0, r4
 80049c8:	f7ff ff9e 	bl	8004908 <I2C_IsAcknowledgeFailed>
 80049cc:	b9a8      	cbnz	r0, 80049fa <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80049ce:	1c6a      	adds	r2, r5, #1
 80049d0:	d0f3      	beq.n	80049ba <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80049d2:	f7fe ff9d 	bl	8003910 <HAL_GetTick>
 80049d6:	1b80      	subs	r0, r0, r6
 80049d8:	42a8      	cmp	r0, r5
 80049da:	d801      	bhi.n	80049e0 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80049dc:	2d00      	cmp	r5, #0
 80049de:	d1ec      	bne.n	80049ba <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80049e0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80049e2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80049e4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80049e6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80049ea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80049ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80049f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80049f4:	f042 0220 	orr.w	r2, r2, #32
 80049f8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80049fa:	2001      	movs	r0, #1
 80049fc:	e7e2      	b.n	80049c4 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080049fe <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80049fe:	b570      	push	{r4, r5, r6, lr}
 8004a00:	4604      	mov	r4, r0
 8004a02:	460d      	mov	r5, r1
 8004a04:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004a06:	6821      	ldr	r1, [r4, #0]
 8004a08:	694b      	ldr	r3, [r1, #20]
 8004a0a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004a0e:	d001      	beq.n	8004a14 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004a10:	2000      	movs	r0, #0
 8004a12:	e010      	b.n	8004a36 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004a14:	694a      	ldr	r2, [r1, #20]
 8004a16:	06d2      	lsls	r2, r2, #27
 8004a18:	d50e      	bpl.n	8004a38 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004a1a:	f06f 0210 	mvn.w	r2, #16
 8004a1e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004a20:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004a22:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004a24:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a28:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004a2c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004a2e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004a30:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004a34:	2001      	movs	r0, #1
}
 8004a36:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a38:	f7fe ff6a 	bl	8003910 <HAL_GetTick>
 8004a3c:	1b80      	subs	r0, r0, r6
 8004a3e:	42a8      	cmp	r0, r5
 8004a40:	d801      	bhi.n	8004a46 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004a42:	2d00      	cmp	r5, #0
 8004a44:	d1df      	bne.n	8004a06 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004a46:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004a48:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004a4a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004a4c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004a50:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004a54:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004a56:	f042 0220 	orr.w	r2, r2, #32
 8004a5a:	e7e8      	b.n	8004a2e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004a5c <I2C_WaitOnFlagUntilTimeout>:
{
 8004a5c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004a60:	4606      	mov	r6, r0
 8004a62:	460f      	mov	r7, r1
 8004a64:	4691      	mov	r9, r2
 8004a66:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004a68:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004a6c:	6833      	ldr	r3, [r6, #0]
 8004a6e:	f1ba 0f01 	cmp.w	sl, #1
 8004a72:	bf0c      	ite	eq
 8004a74:	695c      	ldreq	r4, [r3, #20]
 8004a76:	699c      	ldrne	r4, [r3, #24]
 8004a78:	ea27 0404 	bic.w	r4, r7, r4
 8004a7c:	b2a4      	uxth	r4, r4
 8004a7e:	fab4 f484 	clz	r4, r4
 8004a82:	0964      	lsrs	r4, r4, #5
 8004a84:	45a1      	cmp	r9, r4
 8004a86:	d001      	beq.n	8004a8c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004a88:	2000      	movs	r0, #0
 8004a8a:	e017      	b.n	8004abc <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004a8c:	1c6a      	adds	r2, r5, #1
 8004a8e:	d0ee      	beq.n	8004a6e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a90:	f7fe ff3e 	bl	8003910 <HAL_GetTick>
 8004a94:	9b08      	ldr	r3, [sp, #32]
 8004a96:	1ac0      	subs	r0, r0, r3
 8004a98:	42a8      	cmp	r0, r5
 8004a9a:	d801      	bhi.n	8004aa0 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004a9c:	2d00      	cmp	r5, #0
 8004a9e:	d1e5      	bne.n	8004a6c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004aa0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004aa2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004aa4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004aa6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004aaa:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004aae:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ab0:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004ab4:	f042 0220 	orr.w	r2, r2, #32
 8004ab8:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004aba:	2001      	movs	r0, #1
}
 8004abc:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004ac0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004ac0:	b570      	push	{r4, r5, r6, lr}
 8004ac2:	4604      	mov	r4, r0
 8004ac4:	460d      	mov	r5, r1
 8004ac6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004ac8:	6823      	ldr	r3, [r4, #0]
 8004aca:	695b      	ldr	r3, [r3, #20]
 8004acc:	061b      	lsls	r3, r3, #24
 8004ace:	d501      	bpl.n	8004ad4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004ad0:	2000      	movs	r0, #0
}
 8004ad2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004ad4:	4620      	mov	r0, r4
 8004ad6:	f7ff ff17 	bl	8004908 <I2C_IsAcknowledgeFailed>
 8004ada:	b9a8      	cbnz	r0, 8004b08 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004adc:	1c6a      	adds	r2, r5, #1
 8004ade:	d0f3      	beq.n	8004ac8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ae0:	f7fe ff16 	bl	8003910 <HAL_GetTick>
 8004ae4:	1b80      	subs	r0, r0, r6
 8004ae6:	42a8      	cmp	r0, r5
 8004ae8:	d801      	bhi.n	8004aee <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004aea:	2d00      	cmp	r5, #0
 8004aec:	d1ec      	bne.n	8004ac8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004aee:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004af0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004af2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004af4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004af8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004afc:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004afe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b02:	f042 0220 	orr.w	r2, r2, #32
 8004b06:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004b08:	2001      	movs	r0, #1
 8004b0a:	e7e2      	b.n	8004ad2 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004b0c <I2C_RequestMemoryWrite>:
{
 8004b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004b10:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b12:	6802      	ldr	r2, [r0, #0]
{
 8004b14:	b085      	sub	sp, #20
 8004b16:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8004b1a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b1c:	6813      	ldr	r3, [r2, #0]
 8004b1e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b22:	6013      	str	r3, [r2, #0]
{
 8004b24:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b26:	463b      	mov	r3, r7
 8004b28:	f8cd 8000 	str.w	r8, [sp]
 8004b2c:	2200      	movs	r2, #0
 8004b2e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004b32:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b34:	f7ff ff92 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 8004b38:	6823      	ldr	r3, [r4, #0]
 8004b3a:	b138      	cbz	r0, 8004b4c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	05db      	lsls	r3, r3, #23
 8004b40:	d502      	bpl.n	8004b48 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004b42:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004b46:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004b48:	2003      	movs	r0, #3
 8004b4a:	e00a      	b.n	8004b62 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004b4c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004b50:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004b52:	4919      	ldr	r1, [pc, #100]	; (8004bb8 <I2C_RequestMemoryWrite+0xac>)
 8004b54:	4643      	mov	r3, r8
 8004b56:	463a      	mov	r2, r7
 8004b58:	4620      	mov	r0, r4
 8004b5a:	f7ff feef 	bl	800493c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b5e:	b118      	cbz	r0, 8004b68 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8004b60:	2001      	movs	r0, #1
}
 8004b62:	b005      	add	sp, #20
 8004b64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004b68:	6823      	ldr	r3, [r4, #0]
 8004b6a:	9003      	str	r0, [sp, #12]
 8004b6c:	695a      	ldr	r2, [r3, #20]
 8004b6e:	9203      	str	r2, [sp, #12]
 8004b70:	699b      	ldr	r3, [r3, #24]
 8004b72:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b74:	4642      	mov	r2, r8
 8004b76:	4639      	mov	r1, r7
 8004b78:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004b7a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b7c:	f7ff ffa0 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b80:	b140      	cbz	r0, 8004b94 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b82:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b84:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b86:	bf01      	itttt	eq
 8004b88:	6822      	ldreq	r2, [r4, #0]
 8004b8a:	6813      	ldreq	r3, [r2, #0]
 8004b8c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004b90:	6013      	streq	r3, [r2, #0]
 8004b92:	e7e5      	b.n	8004b60 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004b94:	f1b9 0f01 	cmp.w	r9, #1
 8004b98:	6823      	ldr	r3, [r4, #0]
 8004b9a:	d102      	bne.n	8004ba2 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b9c:	b2ed      	uxtb	r5, r5
 8004b9e:	611d      	str	r5, [r3, #16]
 8004ba0:	e7df      	b.n	8004b62 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004ba2:	0a2a      	lsrs	r2, r5, #8
 8004ba4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ba6:	4639      	mov	r1, r7
 8004ba8:	4642      	mov	r2, r8
 8004baa:	4620      	mov	r0, r4
 8004bac:	f7ff ff88 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004bb0:	2800      	cmp	r0, #0
 8004bb2:	d1e6      	bne.n	8004b82 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004bb4:	6823      	ldr	r3, [r4, #0]
 8004bb6:	e7f1      	b.n	8004b9c <I2C_RequestMemoryWrite+0x90>
 8004bb8:	00010002 	.word	0x00010002

08004bbc <I2C_RequestMemoryRead>:
{
 8004bbc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004bc0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bc2:	6803      	ldr	r3, [r0, #0]
{
 8004bc4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bc6:	681a      	ldr	r2, [r3, #0]
 8004bc8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004bcc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bce:	681a      	ldr	r2, [r3, #0]
{
 8004bd0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bd4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004bd8:	601a      	str	r2, [r3, #0]
{
 8004bda:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004bdc:	463b      	mov	r3, r7
 8004bde:	f8cd 8000 	str.w	r8, [sp]
 8004be2:	2200      	movs	r2, #0
 8004be4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004be8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004bea:	f7ff ff37 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 8004bee:	6823      	ldr	r3, [r4, #0]
 8004bf0:	b148      	cbz	r0, 8004c06 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004bf2:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004bf4:	05db      	lsls	r3, r3, #23
 8004bf6:	d502      	bpl.n	8004bfe <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004bf8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004bfc:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004bfe:	2003      	movs	r0, #3
}
 8004c00:	b004      	add	sp, #16
 8004c02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004c06:	fa5f f986 	uxtb.w	r9, r6
 8004c0a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004c0e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c10:	492a      	ldr	r1, [pc, #168]	; (8004cbc <I2C_RequestMemoryRead+0x100>)
 8004c12:	4643      	mov	r3, r8
 8004c14:	463a      	mov	r2, r7
 8004c16:	4620      	mov	r0, r4
 8004c18:	f7ff fe90 	bl	800493c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c1c:	b108      	cbz	r0, 8004c22 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004c1e:	2001      	movs	r0, #1
 8004c20:	e7ee      	b.n	8004c00 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004c22:	6823      	ldr	r3, [r4, #0]
 8004c24:	9003      	str	r0, [sp, #12]
 8004c26:	695a      	ldr	r2, [r3, #20]
 8004c28:	9203      	str	r2, [sp, #12]
 8004c2a:	699b      	ldr	r3, [r3, #24]
 8004c2c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c2e:	4642      	mov	r2, r8
 8004c30:	4639      	mov	r1, r7
 8004c32:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004c34:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c36:	f7ff ff43 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c3a:	b140      	cbz	r0, 8004c4e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004c3c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004c3e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004c40:	bf01      	itttt	eq
 8004c42:	6822      	ldreq	r2, [r4, #0]
 8004c44:	6813      	ldreq	r3, [r2, #0]
 8004c46:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004c4a:	6013      	streq	r3, [r2, #0]
 8004c4c:	e7e7      	b.n	8004c1e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004c4e:	f1ba 0f01 	cmp.w	sl, #1
 8004c52:	6823      	ldr	r3, [r4, #0]
 8004c54:	d11a      	bne.n	8004c8c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c56:	b2ed      	uxtb	r5, r5
 8004c58:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c5a:	4642      	mov	r2, r8
 8004c5c:	4639      	mov	r1, r7
 8004c5e:	4620      	mov	r0, r4
 8004c60:	f7ff ff2e 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c64:	2800      	cmp	r0, #0
 8004c66:	d1e9      	bne.n	8004c3c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c68:	6822      	ldr	r2, [r4, #0]
 8004c6a:	6813      	ldr	r3, [r2, #0]
 8004c6c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c70:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c72:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004c76:	4602      	mov	r2, r0
 8004c78:	f8cd 8000 	str.w	r8, [sp]
 8004c7c:	463b      	mov	r3, r7
 8004c7e:	4620      	mov	r0, r4
 8004c80:	f7ff feec 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 8004c84:	6822      	ldr	r2, [r4, #0]
 8004c86:	b160      	cbz	r0, 8004ca2 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c88:	6813      	ldr	r3, [r2, #0]
 8004c8a:	e7b3      	b.n	8004bf4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004c8c:	0a2a      	lsrs	r2, r5, #8
 8004c8e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c90:	4639      	mov	r1, r7
 8004c92:	4642      	mov	r2, r8
 8004c94:	4620      	mov	r0, r4
 8004c96:	f7ff ff13 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c9a:	2800      	cmp	r0, #0
 8004c9c:	d1ce      	bne.n	8004c3c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c9e:	6823      	ldr	r3, [r4, #0]
 8004ca0:	e7d9      	b.n	8004c56 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004ca2:	f049 0301 	orr.w	r3, r9, #1
 8004ca6:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ca8:	4904      	ldr	r1, [pc, #16]	; (8004cbc <I2C_RequestMemoryRead+0x100>)
 8004caa:	4643      	mov	r3, r8
 8004cac:	463a      	mov	r2, r7
 8004cae:	4620      	mov	r0, r4
 8004cb0:	f7ff fe44 	bl	800493c <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004cb4:	3800      	subs	r0, #0
 8004cb6:	bf18      	it	ne
 8004cb8:	2001      	movne	r0, #1
 8004cba:	e7a1      	b.n	8004c00 <I2C_RequestMemoryRead+0x44>
 8004cbc:	00010002 	.word	0x00010002

08004cc0 <HAL_I2C_Init>:
{
 8004cc0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004cc2:	4604      	mov	r4, r0
 8004cc4:	b908      	cbnz	r0, 8004cca <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004cc6:	2001      	movs	r0, #1
}
 8004cc8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004cca:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004cce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004cd2:	b91b      	cbnz	r3, 8004cdc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004cd4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004cd8:	f7fc fee4 	bl	8001aa4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004cdc:	2324      	movs	r3, #36	; 0x24
 8004cde:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004ce2:	6823      	ldr	r3, [r4, #0]
 8004ce4:	681a      	ldr	r2, [r3, #0]
 8004ce6:	f022 0201 	bic.w	r2, r2, #1
 8004cea:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004cec:	681a      	ldr	r2, [r3, #0]
 8004cee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004cf2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004cf4:	681a      	ldr	r2, [r3, #0]
 8004cf6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004cfa:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004cfc:	f001 f818 	bl	8005d30 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004d00:	4a3f      	ldr	r2, [pc, #252]	; (8004e00 <HAL_I2C_Init+0x140>)
 8004d02:	6863      	ldr	r3, [r4, #4]
 8004d04:	4293      	cmp	r3, r2
 8004d06:	bf94      	ite	ls
 8004d08:	4a3e      	ldrls	r2, [pc, #248]	; (8004e04 <HAL_I2C_Init+0x144>)
 8004d0a:	4a3f      	ldrhi	r2, [pc, #252]	; (8004e08 <HAL_I2C_Init+0x148>)
 8004d0c:	4290      	cmp	r0, r2
 8004d0e:	bf8c      	ite	hi
 8004d10:	2200      	movhi	r2, #0
 8004d12:	2201      	movls	r2, #1
 8004d14:	2a00      	cmp	r2, #0
 8004d16:	d1d6      	bne.n	8004cc6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d18:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004d1a:	4e3c      	ldr	r6, [pc, #240]	; (8004e0c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d1c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004d1e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004d22:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8004d26:	4332      	orrs	r2, r6
 8004d28:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004d2a:	4a35      	ldr	r2, [pc, #212]	; (8004e00 <HAL_I2C_Init+0x140>)
 8004d2c:	6a0d      	ldr	r5, [r1, #32]
 8004d2e:	4293      	cmp	r3, r2
 8004d30:	bf84      	itt	hi
 8004d32:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 8004d36:	4372      	mulhi	r2, r6
 8004d38:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004d3c:	bf91      	iteee	ls
 8004d3e:	1c72      	addls	r2, r6, #1
 8004d40:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8004d44:	fbb2 f2f6 	udivhi	r2, r2, r6
 8004d48:	3201      	addhi	r2, #1
 8004d4a:	432a      	orrs	r2, r5
 8004d4c:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004d4e:	69cd      	ldr	r5, [r1, #28]
 8004d50:	1e42      	subs	r2, r0, #1
 8004d52:	482b      	ldr	r0, [pc, #172]	; (8004e00 <HAL_I2C_Init+0x140>)
 8004d54:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8004d58:	4283      	cmp	r3, r0
 8004d5a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8004d5e:	d832      	bhi.n	8004dc6 <HAL_I2C_Init+0x106>
 8004d60:	005b      	lsls	r3, r3, #1
 8004d62:	fbb2 f3f3 	udiv	r3, r2, r3
 8004d66:	f640 72fc 	movw	r2, #4092	; 0xffc
 8004d6a:	3301      	adds	r3, #1
 8004d6c:	4213      	tst	r3, r2
 8004d6e:	d042      	beq.n	8004df6 <HAL_I2C_Init+0x136>
 8004d70:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004d74:	432b      	orrs	r3, r5
 8004d76:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004d78:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004d7c:	680a      	ldr	r2, [r1, #0]
 8004d7e:	4303      	orrs	r3, r0
 8004d80:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8004d84:	4313      	orrs	r3, r2
 8004d86:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004d88:	688a      	ldr	r2, [r1, #8]
 8004d8a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004d8e:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8004d92:	4303      	orrs	r3, r0
 8004d94:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004d98:	4313      	orrs	r3, r2
 8004d9a:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004d9c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004da0:	68ca      	ldr	r2, [r1, #12]
 8004da2:	4303      	orrs	r3, r0
 8004da4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004da8:	4313      	orrs	r3, r2
 8004daa:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004dac:	680b      	ldr	r3, [r1, #0]
 8004dae:	f043 0301 	orr.w	r3, r3, #1
 8004db2:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004db4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004db6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004db8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004dba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004dbe:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dc0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004dc4:	e780      	b.n	8004cc8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004dc6:	68a0      	ldr	r0, [r4, #8]
 8004dc8:	b950      	cbnz	r0, 8004de0 <HAL_I2C_Init+0x120>
 8004dca:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004dce:	fbb2 f3f3 	udiv	r3, r2, r3
 8004dd2:	3301      	adds	r3, #1
 8004dd4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004dd8:	b17b      	cbz	r3, 8004dfa <HAL_I2C_Init+0x13a>
 8004dda:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004dde:	e7c9      	b.n	8004d74 <HAL_I2C_Init+0xb4>
 8004de0:	2019      	movs	r0, #25
 8004de2:	4343      	muls	r3, r0
 8004de4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004de8:	3301      	adds	r3, #1
 8004dea:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004dee:	b123      	cbz	r3, 8004dfa <HAL_I2C_Init+0x13a>
 8004df0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004df4:	e7be      	b.n	8004d74 <HAL_I2C_Init+0xb4>
 8004df6:	2304      	movs	r3, #4
 8004df8:	e7bc      	b.n	8004d74 <HAL_I2C_Init+0xb4>
 8004dfa:	2301      	movs	r3, #1
 8004dfc:	e7ba      	b.n	8004d74 <HAL_I2C_Init+0xb4>
 8004dfe:	bf00      	nop
 8004e00:	000186a0 	.word	0x000186a0
 8004e04:	001e847f 	.word	0x001e847f
 8004e08:	003d08ff 	.word	0x003d08ff
 8004e0c:	000f4240 	.word	0x000f4240

08004e10 <HAL_I2C_DeInit>:
{
 8004e10:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004e12:	4604      	mov	r4, r0
 8004e14:	b198      	cbz	r0, 8004e3e <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004e16:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004e18:	2324      	movs	r3, #36	; 0x24
 8004e1a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004e1e:	6813      	ldr	r3, [r2, #0]
 8004e20:	f023 0301 	bic.w	r3, r3, #1
 8004e24:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004e26:	f7fc fe81 	bl	8001b2c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8004e2a:	2000      	movs	r0, #0
 8004e2c:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8004e2e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8004e32:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004e36:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8004e38:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8004e3c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004e3e:	2001      	movs	r0, #1
 8004e40:	e7fc      	b.n	8004e3c <HAL_I2C_DeInit+0x2c>
	...

08004e44 <HAL_I2C_Mem_Write>:
{
 8004e44:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004e48:	4604      	mov	r4, r0
 8004e4a:	4699      	mov	r9, r3
 8004e4c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004e4e:	460f      	mov	r7, r1
 8004e50:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004e52:	f7fe fd5d 	bl	8003910 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e56:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004e5a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004e5c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e5e:	d003      	beq.n	8004e68 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004e60:	2002      	movs	r0, #2
}
 8004e62:	b003      	add	sp, #12
 8004e64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004e68:	9000      	str	r0, [sp, #0]
 8004e6a:	493c      	ldr	r1, [pc, #240]	; (8004f5c <HAL_I2C_Mem_Write+0x118>)
 8004e6c:	2319      	movs	r3, #25
 8004e6e:	2201      	movs	r2, #1
 8004e70:	4620      	mov	r0, r4
 8004e72:	f7ff fdf3 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 8004e76:	2800      	cmp	r0, #0
 8004e78:	d1f2      	bne.n	8004e60 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004e7a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004e7e:	2b01      	cmp	r3, #1
 8004e80:	d0ee      	beq.n	8004e60 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e82:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004e84:	2301      	movs	r3, #1
 8004e86:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e8a:	6803      	ldr	r3, [r0, #0]
 8004e8c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004e8e:	bf5e      	ittt	pl
 8004e90:	6803      	ldrpl	r3, [r0, #0]
 8004e92:	f043 0301 	orrpl.w	r3, r3, #1
 8004e96:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e98:	6803      	ldr	r3, [r0, #0]
 8004e9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004e9e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004ea0:	2321      	movs	r3, #33	; 0x21
 8004ea2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004ea6:	2340      	movs	r3, #64	; 0x40
 8004ea8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004eac:	2300      	movs	r3, #0
 8004eae:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004eb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004eb2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004eb4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004eb8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004eba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ebc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004ebe:	4b28      	ldr	r3, [pc, #160]	; (8004f60 <HAL_I2C_Mem_Write+0x11c>)
 8004ec0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004ec2:	e9cd 6500 	strd	r6, r5, [sp]
 8004ec6:	464b      	mov	r3, r9
 8004ec8:	4642      	mov	r2, r8
 8004eca:	4639      	mov	r1, r7
 8004ecc:	4620      	mov	r0, r4
 8004ece:	f7ff fe1d 	bl	8004b0c <I2C_RequestMemoryWrite>
 8004ed2:	2800      	cmp	r0, #0
 8004ed4:	d02a      	beq.n	8004f2c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004ed6:	2001      	movs	r0, #1
 8004ed8:	e7c3      	b.n	8004e62 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004eda:	f7ff fdf1 	bl	8004ac0 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ede:	b140      	cbz	r0, 8004ef2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ee0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004ee2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ee4:	bf01      	itttt	eq
 8004ee6:	6822      	ldreq	r2, [r4, #0]
 8004ee8:	6813      	ldreq	r3, [r2, #0]
 8004eea:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004eee:	6013      	streq	r3, [r2, #0]
 8004ef0:	e7f1      	b.n	8004ed6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004ef2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ef4:	6827      	ldr	r7, [r4, #0]
 8004ef6:	461a      	mov	r2, r3
 8004ef8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004efc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004efe:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004f00:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004f02:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004f04:	3a01      	subs	r2, #1
 8004f06:	b292      	uxth	r2, r2
 8004f08:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f0a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004f0c:	1e48      	subs	r0, r1, #1
 8004f0e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f10:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004f12:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004f14:	d50a      	bpl.n	8004f2c <HAL_I2C_Mem_Write+0xe8>
 8004f16:	b148      	cbz	r0, 8004f2c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004f18:	785a      	ldrb	r2, [r3, #1]
 8004f1a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004f1c:	3302      	adds	r3, #2
 8004f1e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004f20:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f22:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004f24:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004f26:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004f28:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004f2a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004f2c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f2e:	462a      	mov	r2, r5
 8004f30:	4631      	mov	r1, r6
 8004f32:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d1d0      	bne.n	8004eda <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f38:	f7ff fd3b 	bl	80049b2 <I2C_WaitOnBTFFlagUntilTimeout>
 8004f3c:	2800      	cmp	r0, #0
 8004f3e:	d1cf      	bne.n	8004ee0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f40:	6822      	ldr	r2, [r4, #0]
 8004f42:	6813      	ldr	r3, [r2, #0]
 8004f44:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004f48:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004f4a:	2320      	movs	r3, #32
 8004f4c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004f50:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f54:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004f58:	e783      	b.n	8004e62 <HAL_I2C_Mem_Write+0x1e>
 8004f5a:	bf00      	nop
 8004f5c:	00100002 	.word	0x00100002
 8004f60:	ffff0000 	.word	0xffff0000

08004f64 <HAL_I2C_Mem_Read>:
{
 8004f64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004f68:	4604      	mov	r4, r0
 8004f6a:	b087      	sub	sp, #28
 8004f6c:	4699      	mov	r9, r3
 8004f6e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004f70:	460d      	mov	r5, r1
 8004f72:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004f74:	f7fe fccc 	bl	8003910 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f78:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004f7c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004f7e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f80:	d004      	beq.n	8004f8c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004f82:	2502      	movs	r5, #2
}
 8004f84:	4628      	mov	r0, r5
 8004f86:	b007      	add	sp, #28
 8004f88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004f8c:	9000      	str	r0, [sp, #0]
 8004f8e:	4976      	ldr	r1, [pc, #472]	; (8005168 <HAL_I2C_Mem_Read+0x204>)
 8004f90:	2319      	movs	r3, #25
 8004f92:	2201      	movs	r2, #1
 8004f94:	4620      	mov	r0, r4
 8004f96:	f7ff fd61 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 8004f9a:	2800      	cmp	r0, #0
 8004f9c:	d1f1      	bne.n	8004f82 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004f9e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004fa2:	2b01      	cmp	r3, #1
 8004fa4:	d0ed      	beq.n	8004f82 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fa6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004fa8:	2301      	movs	r3, #1
 8004faa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fae:	6803      	ldr	r3, [r0, #0]
 8004fb0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004fb2:	bf5e      	ittt	pl
 8004fb4:	6803      	ldrpl	r3, [r0, #0]
 8004fb6:	f043 0301 	orrpl.w	r3, r3, #1
 8004fba:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004fbc:	6803      	ldr	r3, [r0, #0]
 8004fbe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004fc2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004fc4:	2322      	movs	r3, #34	; 0x22
 8004fc6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004fca:	2340      	movs	r3, #64	; 0x40
 8004fcc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004fd0:	2300      	movs	r3, #0
 8004fd2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004fd6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004fd8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004fdc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004fde:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004fe0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004fe2:	4b62      	ldr	r3, [pc, #392]	; (800516c <HAL_I2C_Mem_Read+0x208>)
 8004fe4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004fe6:	4629      	mov	r1, r5
 8004fe8:	e9cd 7600 	strd	r7, r6, [sp]
 8004fec:	464b      	mov	r3, r9
 8004fee:	4642      	mov	r2, r8
 8004ff0:	4620      	mov	r0, r4
 8004ff2:	f7ff fde3 	bl	8004bbc <I2C_RequestMemoryRead>
 8004ff6:	4605      	mov	r5, r0
 8004ff8:	b108      	cbz	r0, 8004ffe <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004ffa:	2501      	movs	r5, #1
 8004ffc:	e7c2      	b.n	8004f84 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004ffe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8005000:	6823      	ldr	r3, [r4, #0]
 8005002:	b9b2      	cbnz	r2, 8005032 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005004:	9002      	str	r0, [sp, #8]
 8005006:	695a      	ldr	r2, [r3, #20]
 8005008:	9202      	str	r2, [sp, #8]
 800500a:	699a      	ldr	r2, [r3, #24]
 800500c:	9202      	str	r2, [sp, #8]
 800500e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005010:	681a      	ldr	r2, [r3, #0]
 8005012:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005016:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005018:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005170 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800501c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800501e:	2b00      	cmp	r3, #0
 8005020:	d12c      	bne.n	800507c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005022:	2220      	movs	r2, #32
 8005024:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005028:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800502c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005030:	e7a8      	b.n	8004f84 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005032:	2a01      	cmp	r2, #1
 8005034:	d10a      	bne.n	800504c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005036:	681a      	ldr	r2, [r3, #0]
 8005038:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800503c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800503e:	9003      	str	r0, [sp, #12]
 8005040:	695a      	ldr	r2, [r3, #20]
 8005042:	9203      	str	r2, [sp, #12]
 8005044:	699a      	ldr	r2, [r3, #24]
 8005046:	9203      	str	r2, [sp, #12]
 8005048:	9a03      	ldr	r2, [sp, #12]
 800504a:	e7e1      	b.n	8005010 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800504c:	2a02      	cmp	r2, #2
 800504e:	d10e      	bne.n	800506e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005050:	681a      	ldr	r2, [r3, #0]
 8005052:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005056:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005058:	681a      	ldr	r2, [r3, #0]
 800505a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800505e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005060:	9004      	str	r0, [sp, #16]
 8005062:	695a      	ldr	r2, [r3, #20]
 8005064:	9204      	str	r2, [sp, #16]
 8005066:	699b      	ldr	r3, [r3, #24]
 8005068:	9304      	str	r3, [sp, #16]
 800506a:	9b04      	ldr	r3, [sp, #16]
 800506c:	e7d4      	b.n	8005018 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800506e:	9005      	str	r0, [sp, #20]
 8005070:	695a      	ldr	r2, [r3, #20]
 8005072:	9205      	str	r2, [sp, #20]
 8005074:	699b      	ldr	r3, [r3, #24]
 8005076:	9305      	str	r3, [sp, #20]
 8005078:	9b05      	ldr	r3, [sp, #20]
 800507a:	e7cd      	b.n	8005018 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800507c:	2b03      	cmp	r3, #3
 800507e:	d856      	bhi.n	800512e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005080:	2b01      	cmp	r3, #1
 8005082:	d115      	bne.n	80050b0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005084:	4632      	mov	r2, r6
 8005086:	4639      	mov	r1, r7
 8005088:	4620      	mov	r0, r4
 800508a:	f7ff fcb8 	bl	80049fe <I2C_WaitOnRXNEFlagUntilTimeout>
 800508e:	2800      	cmp	r0, #0
 8005090:	d1b3      	bne.n	8004ffa <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005092:	6823      	ldr	r3, [r4, #0]
 8005094:	691a      	ldr	r2, [r3, #16]
 8005096:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005098:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800509a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800509c:	3301      	adds	r3, #1
 800509e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80050a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80050a2:	3b01      	subs	r3, #1
 80050a4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80050a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80050a8:	3b01      	subs	r3, #1
 80050aa:	b29b      	uxth	r3, r3
 80050ac:	8563      	strh	r3, [r4, #42]	; 0x2a
 80050ae:	e7b5      	b.n	800501c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80050b0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050b2:	9600      	str	r6, [sp, #0]
 80050b4:	463b      	mov	r3, r7
 80050b6:	f04f 0200 	mov.w	r2, #0
 80050ba:	4641      	mov	r1, r8
 80050bc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80050be:	d119      	bne.n	80050f4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050c0:	f7ff fccc 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 80050c4:	2800      	cmp	r0, #0
 80050c6:	d198      	bne.n	8004ffa <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80050c8:	6823      	ldr	r3, [r4, #0]
 80050ca:	681a      	ldr	r2, [r3, #0]
 80050cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80050d0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050d2:	691a      	ldr	r2, [r3, #16]
 80050d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80050d6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80050d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80050da:	1c53      	adds	r3, r2, #1
 80050dc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80050de:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80050e0:	3b01      	subs	r3, #1
 80050e2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80050e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80050e6:	3b01      	subs	r3, #1
 80050e8:	b29b      	uxth	r3, r3
 80050ea:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050ec:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050ee:	691b      	ldr	r3, [r3, #16]
 80050f0:	7053      	strb	r3, [r2, #1]
 80050f2:	e7d2      	b.n	800509a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050f4:	f7ff fcb2 	bl	8004a5c <I2C_WaitOnFlagUntilTimeout>
 80050f8:	2800      	cmp	r0, #0
 80050fa:	f47f af7e 	bne.w	8004ffa <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050fe:	6823      	ldr	r3, [r4, #0]
 8005100:	681a      	ldr	r2, [r3, #0]
 8005102:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005106:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005108:	691a      	ldr	r2, [r3, #16]
 800510a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800510c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800510e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005110:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005112:	3301      	adds	r3, #1
 8005114:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005116:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005118:	3b01      	subs	r3, #1
 800511a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800511c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800511e:	3b01      	subs	r3, #1
 8005120:	b29b      	uxth	r3, r3
 8005122:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005124:	4602      	mov	r2, r0
 8005126:	463b      	mov	r3, r7
 8005128:	4641      	mov	r1, r8
 800512a:	4620      	mov	r0, r4
 800512c:	e7c8      	b.n	80050c0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800512e:	4632      	mov	r2, r6
 8005130:	4639      	mov	r1, r7
 8005132:	4620      	mov	r0, r4
 8005134:	f7ff fc63 	bl	80049fe <I2C_WaitOnRXNEFlagUntilTimeout>
 8005138:	2800      	cmp	r0, #0
 800513a:	f47f af5e 	bne.w	8004ffa <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800513e:	6823      	ldr	r3, [r4, #0]
 8005140:	691a      	ldr	r2, [r3, #16]
 8005142:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005144:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005146:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005148:	1c53      	adds	r3, r2, #1
 800514a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800514c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800514e:	3b01      	subs	r3, #1
 8005150:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005152:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005154:	3b01      	subs	r3, #1
 8005156:	b29b      	uxth	r3, r3
 8005158:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800515a:	6823      	ldr	r3, [r4, #0]
 800515c:	6959      	ldr	r1, [r3, #20]
 800515e:	0749      	lsls	r1, r1, #29
 8005160:	f57f af5c 	bpl.w	800501c <HAL_I2C_Mem_Read+0xb8>
 8005164:	e7c3      	b.n	80050ee <HAL_I2C_Mem_Read+0x18a>
 8005166:	bf00      	nop
 8005168:	00100002 	.word	0x00100002
 800516c:	ffff0000 	.word	0xffff0000
 8005170:	00010004 	.word	0x00010004

08005174 <HAL_I2C_GetState>:
  return hi2c->State;
 8005174:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005178:	4770      	bx	lr

0800517a <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800517a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800517e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005180:	6804      	ldr	r4, [r0, #0]
 8005182:	684f      	ldr	r7, [r1, #4]
 8005184:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005186:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800518a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800518e:	3284      	adds	r2, #132	; 0x84
 8005190:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005192:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005196:	6858      	ldr	r0, [r3, #4]
 8005198:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800519c:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800519e:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80051a0:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80051a4:	f3c0 400b 	ubfx	r0, r0, #16, #12
 80051a8:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80051aa:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80051ac:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80051b0:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80051b2:	68e0      	ldr	r0, [r4, #12]
 80051b4:	68cd      	ldr	r5, [r1, #12]
 80051b6:	f3c0 000a 	ubfx	r0, r0, #0, #11
 80051ba:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80051bc:	6898      	ldr	r0, [r3, #8]
 80051be:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 80051c2:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80051c4:	68e6      	ldr	r6, [r4, #12]
 80051c6:	6888      	ldr	r0, [r1, #8]
 80051c8:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80051cc:	3001      	adds	r0, #1
 80051ce:	4430      	add	r0, r6
 80051d0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80051d4:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80051d6:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80051d8:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80051da:	f020 0007 	bic.w	r0, r0, #7
 80051de:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80051e0:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80051e4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80051e6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80051e8:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80051ec:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80051f0:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80051f4:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80051f8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80051fc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005200:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005204:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005206:	6958      	ldr	r0, [r3, #20]
 8005208:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800520c:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800520e:	6948      	ldr	r0, [r1, #20]
 8005210:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005212:	69d8      	ldr	r0, [r3, #28]
 8005214:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8005218:	f020 0007 	bic.w	r0, r0, #7
 800521c:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800521e:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8005222:	4305      	orrs	r5, r0
 8005224:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005226:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005228:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800522a:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800522e:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005230:	b31e      	cbz	r6, 800527a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005232:	2e01      	cmp	r6, #1
 8005234:	d023      	beq.n	800527e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005236:	1eb0      	subs	r0, r6, #2
 8005238:	2802      	cmp	r0, #2
 800523a:	d922      	bls.n	8005282 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800523c:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800523e:	bf0c      	ite	eq
 8005240:	2002      	moveq	r0, #2
 8005242:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005244:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8005246:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800524a:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800524c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800524e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005250:	eba7 070c 	sub.w	r7, r7, ip
 8005254:	4345      	muls	r5, r0
 8005256:	4378      	muls	r0, r7
 8005258:	3003      	adds	r0, #3
 800525a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800525e:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005260:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8005262:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8005266:	f020 0007 	bic.w	r0, r0, #7
 800526a:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800526c:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800526e:	58a3      	ldr	r3, [r4, r2]
 8005270:	f043 0301 	orr.w	r3, r3, #1
 8005274:	50a3      	str	r3, [r4, r2]
}
 8005276:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800527a:	2004      	movs	r0, #4
 800527c:	e7e2      	b.n	8005244 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800527e:	2003      	movs	r0, #3
 8005280:	e7e0      	b.n	8005244 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005282:	2002      	movs	r0, #2
 8005284:	e7de      	b.n	8005244 <LTDC_SetConfig+0xca>
	...

08005288 <HAL_LTDC_Init>:
{
 8005288:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800528a:	4604      	mov	r4, r0
 800528c:	2800      	cmp	r0, #0
 800528e:	d063      	beq.n	8005358 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005290:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005294:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005298:	b91b      	cbnz	r3, 80052a2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800529a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800529e:	f7fc fc63 	bl	8001b68 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80052a2:	2302      	movs	r3, #2
 80052a4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80052a8:	6823      	ldr	r3, [r4, #0]
 80052aa:	699a      	ldr	r2, [r3, #24]
 80052ac:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80052b0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80052b2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80052b6:	4302      	orrs	r2, r0
 80052b8:	68e0      	ldr	r0, [r4, #12]
 80052ba:	6999      	ldr	r1, [r3, #24]
 80052bc:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80052be:	6920      	ldr	r0, [r4, #16]
 80052c0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80052c2:	430a      	orrs	r2, r1
 80052c4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80052c6:	689a      	ldr	r2, [r3, #8]
 80052c8:	4924      	ldr	r1, [pc, #144]	; (800535c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80052ca:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80052cc:	400a      	ands	r2, r1
 80052ce:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80052d0:	689a      	ldr	r2, [r3, #8]
 80052d2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80052d6:	69a0      	ldr	r0, [r4, #24]
 80052d8:	4302      	orrs	r2, r0
 80052da:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80052dc:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80052de:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80052e0:	400a      	ands	r2, r1
 80052e2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80052e4:	68da      	ldr	r2, [r3, #12]
 80052e6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80052ea:	6a20      	ldr	r0, [r4, #32]
 80052ec:	4302      	orrs	r2, r0
 80052ee:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80052f0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80052f2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80052f4:	400a      	ands	r2, r1
 80052f6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80052f8:	691a      	ldr	r2, [r3, #16]
 80052fa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80052fe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005300:	4302      	orrs	r2, r0
 8005302:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005304:	695a      	ldr	r2, [r3, #20]
 8005306:	4011      	ands	r1, r2
 8005308:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800530a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800530c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800530e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005312:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005314:	430a      	orrs	r2, r1
 8005316:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005318:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800531a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800531e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005322:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005326:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005328:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800532a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800532e:	430a      	orrs	r2, r1
 8005330:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005334:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005338:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800533a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800533c:	f042 0206 	orr.w	r2, r2, #6
 8005340:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005342:	699a      	ldr	r2, [r3, #24]
 8005344:	f042 0201 	orr.w	r2, r2, #1
 8005348:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800534a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800534c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800534e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005352:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005356:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005358:	2001      	movs	r0, #1
 800535a:	e7fc      	b.n	8005356 <HAL_LTDC_Init+0xce>
 800535c:	f000f800 	.word	0xf000f800

08005360 <HAL_LTDC_ErrorCallback>:
 8005360:	4770      	bx	lr

08005362 <HAL_LTDC_LineEventCallback>:
 8005362:	4770      	bx	lr

08005364 <HAL_LTDC_ReloadEventCallback>:
 8005364:	4770      	bx	lr

08005366 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005366:	6803      	ldr	r3, [r0, #0]
{
 8005368:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800536a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800536c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800536e:	0772      	lsls	r2, r6, #29
{
 8005370:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005372:	d514      	bpl.n	800539e <HAL_LTDC_IRQHandler+0x38>
 8005374:	0769      	lsls	r1, r5, #29
 8005376:	d512      	bpl.n	800539e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005378:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800537a:	f022 0204 	bic.w	r2, r2, #4
 800537e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005380:	2204      	movs	r2, #4
 8005382:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005384:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005388:	f043 0301 	orr.w	r3, r3, #1
 800538c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005390:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005392:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005396:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800539a:	f7ff ffe1 	bl	8005360 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800539e:	07b2      	lsls	r2, r6, #30
 80053a0:	d516      	bpl.n	80053d0 <HAL_LTDC_IRQHandler+0x6a>
 80053a2:	07ab      	lsls	r3, r5, #30
 80053a4:	d514      	bpl.n	80053d0 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80053a6:	6823      	ldr	r3, [r4, #0]
 80053a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053aa:	f022 0202 	bic.w	r2, r2, #2
 80053ae:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80053b0:	2202      	movs	r2, #2
 80053b2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80053b4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80053b8:	4313      	orrs	r3, r2
 80053ba:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80053be:	2304      	movs	r3, #4
 80053c0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80053c4:	2300      	movs	r3, #0
 80053c6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80053ca:	4620      	mov	r0, r4
 80053cc:	f7ff ffc8 	bl	8005360 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80053d0:	07f0      	lsls	r0, r6, #31
 80053d2:	d510      	bpl.n	80053f6 <HAL_LTDC_IRQHandler+0x90>
 80053d4:	07e9      	lsls	r1, r5, #31
 80053d6:	d50e      	bpl.n	80053f6 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80053d8:	6823      	ldr	r3, [r4, #0]
 80053da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053dc:	f022 0201 	bic.w	r2, r2, #1
 80053e0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80053e2:	2201      	movs	r2, #1
 80053e4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80053e6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80053e8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80053ec:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80053f0:	4620      	mov	r0, r4
 80053f2:	f7ff ffb6 	bl	8005362 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80053f6:	0732      	lsls	r2, r6, #28
 80053f8:	d511      	bpl.n	800541e <HAL_LTDC_IRQHandler+0xb8>
 80053fa:	072b      	lsls	r3, r5, #28
 80053fc:	d50f      	bpl.n	800541e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80053fe:	6823      	ldr	r3, [r4, #0]
 8005400:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005402:	f022 0208 	bic.w	r2, r2, #8
 8005406:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005408:	2208      	movs	r2, #8
 800540a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800540c:	2301      	movs	r3, #1
 800540e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005412:	2300      	movs	r3, #0
 8005414:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005418:	4620      	mov	r0, r4
 800541a:	f7ff ffa3 	bl	8005364 <HAL_LTDC_ReloadEventCallback>
}
 800541e:	bd70      	pop	{r4, r5, r6, pc}

08005420 <HAL_LTDC_ConfigLayer>:
{
 8005420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005424:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005428:	2b01      	cmp	r3, #1
{
 800542a:	4606      	mov	r6, r0
 800542c:	460f      	mov	r7, r1
 800542e:	4694      	mov	ip, r2
 8005430:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005434:	d01f      	beq.n	8005476 <HAL_LTDC_ConfigLayer+0x56>
 8005436:	f04f 0801 	mov.w	r8, #1
 800543a:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800543e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005442:	2434      	movs	r4, #52	; 0x34
 8005444:	460d      	mov	r5, r1
 8005446:	fb04 6402 	mla	r4, r4, r2, r6
 800544a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800544c:	3438      	adds	r4, #56	; 0x38
 800544e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005450:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005452:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005454:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005456:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005458:	682b      	ldr	r3, [r5, #0]
 800545a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800545c:	4630      	mov	r0, r6
 800545e:	4662      	mov	r2, ip
 8005460:	4639      	mov	r1, r7
 8005462:	f7ff fe8a 	bl	800517a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005466:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005468:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800546a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800546e:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005472:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005476:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800547c <HAL_LTDC_SetPitch>:
{
 800547c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800547e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005482:	2b01      	cmp	r3, #1
 8005484:	f04f 0302 	mov.w	r3, #2
 8005488:	d02c      	beq.n	80054e4 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800548a:	2434      	movs	r4, #52	; 0x34
 800548c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005490:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005494:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005496:	b33c      	cbz	r4, 80054e8 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005498:	2c01      	cmp	r4, #1
 800549a:	d027      	beq.n	80054ec <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800549c:	1ea5      	subs	r5, r4, #2
 800549e:	429d      	cmp	r5, r3
 80054a0:	d902      	bls.n	80054a8 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 80054a2:	2c07      	cmp	r4, #7
 80054a4:	bf18      	it	ne
 80054a6:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80054a8:	6804      	ldr	r4, [r0, #0]
 80054aa:	01d2      	lsls	r2, r2, #7
 80054ac:	3284      	adds	r2, #132	; 0x84
 80054ae:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80054b0:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80054b2:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80054b4:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80054b8:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80054bc:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80054be:	4c0c      	ldr	r4, [pc, #48]	; (80054f0 <HAL_LTDC_SetPitch+0x74>)
 80054c0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80054c2:	f045 0501 	orr.w	r5, r5, #1
 80054c6:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80054c8:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80054ca:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80054ce:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80054d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80054d2:	f043 0301 	orr.w	r3, r3, #1
 80054d6:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80054d8:	2301      	movs	r3, #1
 80054da:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80054de:	2300      	movs	r3, #0
 80054e0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80054e4:	4618      	mov	r0, r3
 80054e6:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80054e8:	2304      	movs	r3, #4
 80054ea:	e7dd      	b.n	80054a8 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80054ec:	2303      	movs	r3, #3
 80054ee:	e7db      	b.n	80054a8 <HAL_LTDC_SetPitch+0x2c>
 80054f0:	40016800 	.word	0x40016800

080054f4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80054f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80054f6:	2300      	movs	r3, #0
 80054f8:	9301      	str	r3, [sp, #4]
 80054fa:	4b18      	ldr	r3, [pc, #96]	; (800555c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80054fc:	4d18      	ldr	r5, [pc, #96]	; (8005560 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80054fe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005500:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005504:	641a      	str	r2, [r3, #64]	; 0x40
 8005506:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005508:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800550c:	9301      	str	r3, [sp, #4]
 800550e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005510:	4b14      	ldr	r3, [pc, #80]	; (8005564 <HAL_PWREx_EnableOverDrive+0x70>)
 8005512:	2201      	movs	r2, #1
 8005514:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005516:	f7fe f9fb 	bl	8003910 <HAL_GetTick>
 800551a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800551c:	686b      	ldr	r3, [r5, #4]
 800551e:	03da      	lsls	r2, r3, #15
 8005520:	d50b      	bpl.n	800553a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005522:	4b11      	ldr	r3, [pc, #68]	; (8005568 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005524:	4d0e      	ldr	r5, [pc, #56]	; (8005560 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005526:	2201      	movs	r2, #1
 8005528:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800552a:	f7fe f9f1 	bl	8003910 <HAL_GetTick>
 800552e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005530:	686b      	ldr	r3, [r5, #4]
 8005532:	039b      	lsls	r3, r3, #14
 8005534:	d50a      	bpl.n	800554c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005536:	2000      	movs	r0, #0
 8005538:	e006      	b.n	8005548 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800553a:	f7fe f9e9 	bl	8003910 <HAL_GetTick>
 800553e:	1b00      	subs	r0, r0, r4
 8005540:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005544:	d9ea      	bls.n	800551c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005546:	2003      	movs	r0, #3
}
 8005548:	b003      	add	sp, #12
 800554a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800554c:	f7fe f9e0 	bl	8003910 <HAL_GetTick>
 8005550:	1b00      	subs	r0, r0, r4
 8005552:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005556:	d9eb      	bls.n	8005530 <HAL_PWREx_EnableOverDrive+0x3c>
 8005558:	e7f5      	b.n	8005546 <HAL_PWREx_EnableOverDrive+0x52>
 800555a:	bf00      	nop
 800555c:	40023800 	.word	0x40023800
 8005560:	40007000 	.word	0x40007000
 8005564:	420e0040 	.word	0x420e0040
 8005568:	420e0044 	.word	0x420e0044

0800556c <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800556c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005570:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005572:	b13e      	cbz	r6, 8005584 <QSPI_Config+0x18>
 8005574:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005578:	bf1f      	itttt	ne
 800557a:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800557c:	6804      	ldrne	r4, [r0, #0]
 800557e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005582:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005584:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8005588:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800558c:	f1ba 0f00 	cmp.w	sl, #0
 8005590:	d04e      	beq.n	8005630 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005592:	694b      	ldr	r3, [r1, #20]
 8005594:	6805      	ldr	r5, [r0, #0]
 8005596:	f8d1 8000 	ldr.w	r8, [r1]
 800559a:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800559c:	ea46 0a0a 	orr.w	sl, r6, sl
 80055a0:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 80055a4:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 80055a8:	ea4a 0a02 	orr.w	sl, sl, r2
 80055ac:	f1bc 0f00 	cmp.w	ip, #0
 80055b0:	d026      	beq.n	8005600 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80055b2:	688b      	ldr	r3, [r1, #8]
 80055b4:	690e      	ldr	r6, [r1, #16]
 80055b6:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80055b8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80055bc:	b1a7      	cbz	r7, 80055e8 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055be:	ea48 0307 	orr.w	r3, r8, r7
 80055c2:	4323      	orrs	r3, r4
 80055c4:	ea43 0309 	orr.w	r3, r3, r9
 80055c8:	4303      	orrs	r3, r0
 80055ca:	68c8      	ldr	r0, [r1, #12]
 80055cc:	4333      	orrs	r3, r6
 80055ce:	4303      	orrs	r3, r0
 80055d0:	ea43 030e 	orr.w	r3, r3, lr
 80055d4:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80055d8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055dc:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80055de:	d001      	beq.n	80055e4 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80055e0:	684b      	ldr	r3, [r1, #4]
 80055e2:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80055e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055e8:	ea48 0304 	orr.w	r3, r8, r4
 80055ec:	ea43 0309 	orr.w	r3, r3, r9
 80055f0:	4303      	orrs	r3, r0
 80055f2:	4333      	orrs	r3, r6
 80055f4:	ea43 030e 	orr.w	r3, r3, lr
 80055f8:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055fc:	616b      	str	r3, [r5, #20]
 80055fe:	e7f1      	b.n	80055e4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005600:	b167      	cbz	r7, 800561c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005602:	ea48 0307 	orr.w	r3, r8, r7
 8005606:	4323      	orrs	r3, r4
 8005608:	ea43 0309 	orr.w	r3, r3, r9
 800560c:	4303      	orrs	r3, r0
 800560e:	68c8      	ldr	r0, [r1, #12]
 8005610:	4303      	orrs	r3, r0
 8005612:	ea43 030e 	orr.w	r3, r3, lr
 8005616:	ea43 030a 	orr.w	r3, r3, sl
 800561a:	e7dd      	b.n	80055d8 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800561c:	ea48 0304 	orr.w	r3, r8, r4
 8005620:	ea43 0309 	orr.w	r3, r3, r9
 8005624:	4303      	orrs	r3, r0
 8005626:	ea43 030e 	orr.w	r3, r3, lr
 800562a:	ea43 030a 	orr.w	r3, r3, sl
 800562e:	e7e5      	b.n	80055fc <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005630:	f1bc 0f00 	cmp.w	ip, #0
 8005634:	d028      	beq.n	8005688 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005636:	6804      	ldr	r4, [r0, #0]
 8005638:	688b      	ldr	r3, [r1, #8]
 800563a:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800563c:	ea46 030c 	orr.w	r3, r6, ip
 8005640:	694e      	ldr	r6, [r1, #20]
 8005642:	6908      	ldr	r0, [r1, #16]
 8005644:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005648:	ea43 0502 	orr.w	r5, r3, r2
 800564c:	04b6      	lsls	r6, r6, #18
 800564e:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 8005652:	b187      	cbz	r7, 8005676 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005654:	4338      	orrs	r0, r7
 8005656:	ea40 0008 	orr.w	r0, r0, r8
 800565a:	4303      	orrs	r3, r0
 800565c:	68c8      	ldr	r0, [r1, #12]
 800565e:	ea43 030c 	orr.w	r3, r3, ip
 8005662:	4303      	orrs	r3, r0
 8005664:	4333      	orrs	r3, r6
 8005666:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005668:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800566c:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800566e:	d0b9      	beq.n	80055e4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005670:	684b      	ldr	r3, [r1, #4]
 8005672:	61a3      	str	r3, [r4, #24]
 8005674:	e7b6      	b.n	80055e4 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005676:	ea40 0008 	orr.w	r0, r0, r8
 800567a:	4303      	orrs	r3, r0
 800567c:	ea43 030c 	orr.w	r3, r3, ip
 8005680:	4333      	orrs	r3, r6
 8005682:	432b      	orrs	r3, r5
 8005684:	6163      	str	r3, [r4, #20]
 8005686:	e7ad      	b.n	80055e4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005688:	b1af      	cbz	r7, 80056b6 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800568a:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800568c:	6800      	ldr	r0, [r0, #0]
 800568e:	ea46 0307 	orr.w	r3, r6, r7
 8005692:	4313      	orrs	r3, r2
 8005694:	4323      	orrs	r3, r4
 8005696:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005698:	4323      	orrs	r3, r4
 800569a:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800569c:	4323      	orrs	r3, r4
 800569e:	68cc      	ldr	r4, [r1, #12]
 80056a0:	4323      	orrs	r3, r4
 80056a2:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80056a4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056a8:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80056ac:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80056ae:	d099      	beq.n	80055e4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80056b0:	684b      	ldr	r3, [r1, #4]
 80056b2:	6183      	str	r3, [r0, #24]
 80056b4:	e796      	b.n	80055e4 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80056b6:	2e00      	cmp	r6, #0
 80056b8:	d094      	beq.n	80055e4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056ba:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80056bc:	6800      	ldr	r0, [r0, #0]
 80056be:	4333      	orrs	r3, r6
 80056c0:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 80056c2:	431a      	orrs	r2, r3
 80056c4:	4332      	orrs	r2, r6
 80056c6:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 80056c8:	694b      	ldr	r3, [r1, #20]
 80056ca:	4332      	orrs	r2, r6
 80056cc:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 80056d0:	6142      	str	r2, [r0, #20]
}
 80056d2:	e787      	b.n	80055e4 <QSPI_Config+0x78>

080056d4 <QSPI_WaitFlagStateUntilTimeout>:
{
 80056d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056d8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80056dc:	4604      	mov	r4, r0
 80056de:	460e      	mov	r6, r1
 80056e0:	4615      	mov	r5, r2
 80056e2:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80056e4:	6822      	ldr	r2, [r4, #0]
 80056e6:	6893      	ldr	r3, [r2, #8]
 80056e8:	4233      	tst	r3, r6
 80056ea:	bf14      	ite	ne
 80056ec:	2301      	movne	r3, #1
 80056ee:	2300      	moveq	r3, #0
 80056f0:	42ab      	cmp	r3, r5
 80056f2:	d101      	bne.n	80056f8 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80056f4:	2000      	movs	r0, #0
 80056f6:	e012      	b.n	800571e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80056f8:	f1b8 3fff 	cmp.w	r8, #4294967295
 80056fc:	d0f3      	beq.n	80056e6 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80056fe:	f7fe f907 	bl	8003910 <HAL_GetTick>
 8005702:	1bc0      	subs	r0, r0, r7
 8005704:	4540      	cmp	r0, r8
 8005706:	d802      	bhi.n	800570e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005708:	f1b8 0f00 	cmp.w	r8, #0
 800570c:	d1ea      	bne.n	80056e4 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800570e:	2304      	movs	r3, #4
 8005710:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005714:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005716:	f043 0301 	orr.w	r3, r3, #1
 800571a:	6463      	str	r3, [r4, #68]	; 0x44
 800571c:	2001      	movs	r0, #1
}
 800571e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005724 <HAL_QSPI_Init>:
{
 8005724:	b530      	push	{r4, r5, lr}
 8005726:	b085      	sub	sp, #20
 8005728:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800572a:	f7fe f8f1 	bl	8003910 <HAL_GetTick>
 800572e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005730:	2c00      	cmp	r4, #0
 8005732:	d047      	beq.n	80057c4 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005734:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005738:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800573c:	b94a      	cbnz	r2, 8005752 <HAL_QSPI_Init+0x2e>
 800573e:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005740:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005744:	4620      	mov	r0, r4
 8005746:	f7fc fa43 	bl	8001bd0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800574a:	f241 3288 	movw	r2, #5000	; 0x1388
 800574e:	9b03      	ldr	r3, [sp, #12]
 8005750:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005752:	6820      	ldr	r0, [r4, #0]
 8005754:	68a1      	ldr	r1, [r4, #8]
 8005756:	6802      	ldr	r2, [r0, #0]
 8005758:	3901      	subs	r1, #1
 800575a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800575e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005762:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005764:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005766:	9200      	str	r2, [sp, #0]
 8005768:	2120      	movs	r1, #32
 800576a:	2200      	movs	r2, #0
 800576c:	4620      	mov	r0, r4
 800576e:	f7ff ffb1 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005772:	bb10      	cbnz	r0, 80057ba <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005774:	69e5      	ldr	r5, [r4, #28]
 8005776:	68e3      	ldr	r3, [r4, #12]
 8005778:	6822      	ldr	r2, [r4, #0]
 800577a:	432b      	orrs	r3, r5
 800577c:	6a25      	ldr	r5, [r4, #32]
 800577e:	6811      	ldr	r1, [r2, #0]
 8005780:	432b      	orrs	r3, r5
 8005782:	6865      	ldr	r5, [r4, #4]
 8005784:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005788:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800578c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005790:	430b      	orrs	r3, r1
 8005792:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005794:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005798:	430b      	orrs	r3, r1
 800579a:	6921      	ldr	r1, [r4, #16]
 800579c:	6855      	ldr	r5, [r2, #4]
 800579e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80057a2:	4909      	ldr	r1, [pc, #36]	; (80057c8 <HAL_QSPI_Init+0xa4>)
 80057a4:	4029      	ands	r1, r5
 80057a6:	430b      	orrs	r3, r1
 80057a8:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 80057aa:	6813      	ldr	r3, [r2, #0]
 80057ac:	f043 0301 	orr.w	r3, r3, #1
 80057b0:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 80057b2:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057b4:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 80057b6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80057ba:	2300      	movs	r3, #0
 80057bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80057c0:	b005      	add	sp, #20
 80057c2:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 80057c4:	2001      	movs	r0, #1
 80057c6:	e7fb      	b.n	80057c0 <HAL_QSPI_Init+0x9c>
 80057c8:	ffe0f8fe 	.word	0xffe0f8fe

080057cc <HAL_QSPI_DeInit>:
{
 80057cc:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 80057ce:	4604      	mov	r4, r0
 80057d0:	b168      	cbz	r0, 80057ee <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 80057d2:	6802      	ldr	r2, [r0, #0]
 80057d4:	6813      	ldr	r3, [r2, #0]
 80057d6:	f023 0301 	bic.w	r3, r3, #1
 80057da:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 80057dc:	f7fc fa52 	bl	8001c84 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057e0:	2000      	movs	r0, #0
 80057e2:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 80057e4:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80057e8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 80057ec:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80057ee:	2001      	movs	r0, #1
 80057f0:	e7fc      	b.n	80057ec <HAL_QSPI_DeInit+0x20>

080057f2 <HAL_QSPI_Command>:
{
 80057f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80057f6:	4604      	mov	r4, r0
 80057f8:	b085      	sub	sp, #20
 80057fa:	4617      	mov	r7, r2
 80057fc:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 80057fe:	f7fe f887 	bl	8003910 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005802:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005806:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005808:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800580a:	d034      	beq.n	8005876 <HAL_QSPI_Command+0x84>
 800580c:	2201      	movs	r2, #1
 800580e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005812:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005816:	2a01      	cmp	r2, #1
 8005818:	fa5f f882 	uxtb.w	r8, r2
 800581c:	f04f 0602 	mov.w	r6, #2
 8005820:	d127      	bne.n	8005872 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005822:	2200      	movs	r2, #0
 8005824:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005826:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005828:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800582c:	9700      	str	r7, [sp, #0]
 800582e:	2120      	movs	r1, #32
 8005830:	4620      	mov	r0, r4
 8005832:	f7ff ff4f 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005836:	4605      	mov	r5, r0
 8005838:	b9a0      	cbnz	r0, 8005864 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800583a:	4602      	mov	r2, r0
 800583c:	4649      	mov	r1, r9
 800583e:	4620      	mov	r0, r4
 8005840:	f7ff fe94 	bl	800556c <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005844:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005848:	9b03      	ldr	r3, [sp, #12]
 800584a:	b94a      	cbnz	r2, 8005860 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800584c:	9700      	str	r7, [sp, #0]
 800584e:	4642      	mov	r2, r8
 8005850:	4631      	mov	r1, r6
 8005852:	4620      	mov	r0, r4
 8005854:	f7ff ff3e 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005858:	4605      	mov	r5, r0
 800585a:	b918      	cbnz	r0, 8005864 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800585c:	6823      	ldr	r3, [r4, #0]
 800585e:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005860:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005864:	2300      	movs	r3, #0
 8005866:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800586a:	4628      	mov	r0, r5
 800586c:	b005      	add	sp, #20
 800586e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005872:	4635      	mov	r5, r6
 8005874:	e7f6      	b.n	8005864 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005876:	2502      	movs	r5, #2
 8005878:	e7f7      	b.n	800586a <HAL_QSPI_Command+0x78>

0800587a <HAL_QSPI_AutoPolling>:
{
 800587a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800587e:	4604      	mov	r4, r0
 8005880:	4615      	mov	r5, r2
 8005882:	461e      	mov	r6, r3
 8005884:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005886:	f7fe f843 	bl	8003910 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800588a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800588e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005890:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005892:	d040      	beq.n	8005916 <HAL_QSPI_AutoPolling+0x9c>
 8005894:	2201      	movs	r2, #1
 8005896:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800589a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800589e:	2a01      	cmp	r2, #1
 80058a0:	b2d7      	uxtb	r7, r2
 80058a2:	d136      	bne.n	8005912 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80058a4:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058a6:	2200      	movs	r2, #0
 80058a8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80058aa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80058ac:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80058b0:	9600      	str	r6, [sp, #0]
 80058b2:	2120      	movs	r1, #32
 80058b4:	4620      	mov	r0, r4
 80058b6:	f7ff ff0d 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80058ba:	bb20      	cbnz	r0, 8005906 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80058bc:	6821      	ldr	r1, [r4, #0]
 80058be:	682a      	ldr	r2, [r5, #0]
 80058c0:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 80058c2:	686a      	ldr	r2, [r5, #4]
 80058c4:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 80058c6:	68aa      	ldr	r2, [r5, #8]
 80058c8:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 80058ca:	680a      	ldr	r2, [r1, #0]
 80058cc:	6928      	ldr	r0, [r5, #16]
 80058ce:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80058d2:	4302      	orrs	r2, r0
 80058d4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80058d8:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 80058da:	68ea      	ldr	r2, [r5, #12]
 80058dc:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 80058e0:	4641      	mov	r1, r8
 80058e2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80058e6:	4620      	mov	r0, r4
 80058e8:	f7ff fe40 	bl	800556c <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 80058ec:	9b03      	ldr	r3, [sp, #12]
 80058ee:	9600      	str	r6, [sp, #0]
 80058f0:	463a      	mov	r2, r7
 80058f2:	2108      	movs	r1, #8
 80058f4:	4620      	mov	r0, r4
 80058f6:	f7ff feed 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80058fa:	b920      	cbnz	r0, 8005906 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80058fc:	6823      	ldr	r3, [r4, #0]
 80058fe:	2208      	movs	r2, #8
 8005900:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005902:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005906:	2300      	movs	r3, #0
 8005908:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800590c:	b004      	add	sp, #16
 800590e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005912:	2002      	movs	r0, #2
 8005914:	e7f7      	b.n	8005906 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005916:	2002      	movs	r0, #2
 8005918:	e7f8      	b.n	800590c <HAL_QSPI_AutoPolling+0x92>

0800591a <HAL_QSPI_MemoryMapped>:
{
 800591a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800591c:	4604      	mov	r4, r0
 800591e:	4616      	mov	r6, r2
 8005920:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005922:	f7fd fff5 	bl	8003910 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005926:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800592a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800592c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800592e:	d032      	beq.n	8005996 <HAL_QSPI_MemoryMapped+0x7c>
 8005930:	2201      	movs	r2, #1
 8005932:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005936:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800593a:	2a01      	cmp	r2, #1
 800593c:	d129      	bne.n	8005992 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800593e:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005940:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005942:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005944:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005948:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800594a:	9100      	str	r1, [sp, #0]
 800594c:	4620      	mov	r0, r4
 800594e:	2120      	movs	r1, #32
 8005950:	f7ff fec0 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005954:	4605      	mov	r5, r0
 8005956:	b9b0      	cbnz	r0, 8005986 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005958:	6823      	ldr	r3, [r4, #0]
 800595a:	6872      	ldr	r2, [r6, #4]
 800595c:	6818      	ldr	r0, [r3, #0]
 800595e:	f020 0008 	bic.w	r0, r0, #8
 8005962:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005964:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005966:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005968:	d107      	bne.n	800597a <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800596a:	6832      	ldr	r2, [r6, #0]
 800596c:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800596e:	2210      	movs	r2, #16
 8005970:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005972:	681a      	ldr	r2, [r3, #0]
 8005974:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005978:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800597a:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800597e:	4639      	mov	r1, r7
 8005980:	4620      	mov	r0, r4
 8005982:	f7ff fdf3 	bl	800556c <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005986:	2300      	movs	r3, #0
 8005988:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800598c:	4628      	mov	r0, r5
 800598e:	b003      	add	sp, #12
 8005990:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005992:	2502      	movs	r5, #2
 8005994:	e7f7      	b.n	8005986 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005996:	2502      	movs	r5, #2
 8005998:	e7f8      	b.n	800598c <HAL_QSPI_MemoryMapped+0x72>

0800599a <HAL_QSPI_Abort>:
{
 800599a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800599c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800599e:	f7fd ffb7 	bl	8003910 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80059a2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 80059a6:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 80059a8:	f012 0002 	ands.w	r0, r2, #2
 80059ac:	d036      	beq.n	8005a1c <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 80059ae:	2200      	movs	r2, #0
 80059b0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 80059b4:	6822      	ldr	r2, [r4, #0]
 80059b6:	6811      	ldr	r1, [r2, #0]
 80059b8:	0749      	lsls	r1, r1, #29
 80059ba:	d50d      	bpl.n	80059d8 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80059bc:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80059be:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80059c0:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 80059c2:	f021 0104 	bic.w	r1, r1, #4
 80059c6:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 80059c8:	f7fe f8f2 	bl	8003bb0 <HAL_DMA_Abort>
      if(status != HAL_OK)
 80059cc:	9b03      	ldr	r3, [sp, #12]
 80059ce:	b118      	cbz	r0, 80059d8 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 80059d0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80059d2:	f042 0204 	orr.w	r2, r2, #4
 80059d6:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80059d8:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80059da:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 80059dc:	680a      	ldr	r2, [r1, #0]
 80059de:	f042 0202 	orr.w	r2, r2, #2
 80059e2:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 80059e4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80059e6:	9200      	str	r2, [sp, #0]
 80059e8:	2102      	movs	r1, #2
 80059ea:	2201      	movs	r2, #1
 80059ec:	4620      	mov	r0, r4
 80059ee:	f7ff fe71 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80059f2:	9b03      	ldr	r3, [sp, #12]
 80059f4:	b990      	cbnz	r0, 8005a1c <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80059f6:	6822      	ldr	r2, [r4, #0]
 80059f8:	2102      	movs	r1, #2
 80059fa:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80059fc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80059fe:	9200      	str	r2, [sp, #0]
 8005a00:	2120      	movs	r1, #32
 8005a02:	4602      	mov	r2, r0
 8005a04:	4620      	mov	r0, r4
 8005a06:	f7ff fe65 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005a0a:	b938      	cbnz	r0, 8005a1c <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005a0c:	6822      	ldr	r2, [r4, #0]
 8005a0e:	6953      	ldr	r3, [r2, #20]
 8005a10:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005a14:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005a16:	2301      	movs	r3, #1
 8005a18:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005a1c:	b004      	add	sp, #16
 8005a1e:	bd10      	pop	{r4, pc}

08005a20 <HAL_QSPI_Transmit>:
{
 8005a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a22:	4604      	mov	r4, r0
 8005a24:	b085      	sub	sp, #20
 8005a26:	4616      	mov	r6, r2
 8005a28:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005a2a:	f7fd ff71 	bl	8003910 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005a2e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005a32:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005a34:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005a36:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005a38:	d04c      	beq.n	8005ad4 <HAL_QSPI_Transmit+0xb4>
 8005a3a:	2201      	movs	r2, #1
 8005a3c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005a40:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005a44:	2a01      	cmp	r2, #1
 8005a46:	b2d0      	uxtb	r0, r2
 8005a48:	d142      	bne.n	8005ad0 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005a4a:	2200      	movs	r2, #0
 8005a4c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005a4e:	2f00      	cmp	r7, #0
 8005a50:	d039      	beq.n	8005ac6 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005a52:	2212      	movs	r2, #18
 8005a54:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005a58:	692a      	ldr	r2, [r5, #16]
 8005a5a:	3201      	adds	r2, #1
 8005a5c:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005a5e:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005a60:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005a62:	3201      	adds	r2, #1
 8005a64:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005a66:	696a      	ldr	r2, [r5, #20]
 8005a68:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005a6c:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005a6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005a70:	b9a2      	cbnz	r2, 8005a9c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005a72:	9600      	str	r6, [sp, #0]
 8005a74:	2201      	movs	r2, #1
 8005a76:	2102      	movs	r1, #2
 8005a78:	4620      	mov	r0, r4
 8005a7a:	f7ff fe2b 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005a7e:	b928      	cbnz	r0, 8005a8c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005a80:	6823      	ldr	r3, [r4, #0]
 8005a82:	2202      	movs	r2, #2
 8005a84:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005a86:	4620      	mov	r0, r4
 8005a88:	f7ff ff87 	bl	800599a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005a92:	2300      	movs	r3, #0
 8005a94:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005a98:	b005      	add	sp, #20
 8005a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005a9c:	9600      	str	r6, [sp, #0]
 8005a9e:	2201      	movs	r2, #1
 8005aa0:	2104      	movs	r1, #4
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	9303      	str	r3, [sp, #12]
 8005aa6:	f7ff fe15 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005aaa:	2800      	cmp	r0, #0
 8005aac:	d1ee      	bne.n	8005a8c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005aae:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005ab0:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005ab2:	7812      	ldrb	r2, [r2, #0]
 8005ab4:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005ab8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005aba:	3201      	adds	r2, #1
 8005abc:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005abe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005ac0:	3a01      	subs	r2, #1
 8005ac2:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005ac4:	e7d3      	b.n	8005a6e <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005ac6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005ac8:	f043 0308 	orr.w	r3, r3, #8
 8005acc:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005ace:	e7e0      	b.n	8005a92 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005ad0:	2002      	movs	r0, #2
 8005ad2:	e7de      	b.n	8005a92 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005ad4:	2002      	movs	r0, #2
 8005ad6:	e7df      	b.n	8005a98 <HAL_QSPI_Transmit+0x78>

08005ad8 <HAL_QSPI_Receive>:
{
 8005ad8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ada:	4604      	mov	r4, r0
 8005adc:	b085      	sub	sp, #20
 8005ade:	4616      	mov	r6, r2
 8005ae0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005ae2:	f7fd ff15 	bl	8003910 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005ae6:	6825      	ldr	r5, [r4, #0]
 8005ae8:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005aec:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005af0:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005af2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005af4:	d050      	beq.n	8005b98 <HAL_QSPI_Receive+0xc0>
 8005af6:	2201      	movs	r2, #1
 8005af8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005afc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005b00:	2a01      	cmp	r2, #1
 8005b02:	b2d0      	uxtb	r0, r2
 8005b04:	d146      	bne.n	8005b94 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b06:	2200      	movs	r2, #0
 8005b08:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005b0a:	2f00      	cmp	r7, #0
 8005b0c:	d03d      	beq.n	8005b8a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005b0e:	2222      	movs	r2, #34	; 0x22
 8005b10:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b14:	692a      	ldr	r2, [r5, #16]
 8005b16:	3201      	adds	r2, #1
 8005b18:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b1a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005b1c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005b1e:	3201      	adds	r2, #1
 8005b20:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005b22:	6969      	ldr	r1, [r5, #20]
 8005b24:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005b28:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8005b2c:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005b2e:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005b32:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005b34:	b9a2      	cbnz	r2, 8005b60 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005b36:	9600      	str	r6, [sp, #0]
 8005b38:	2201      	movs	r2, #1
 8005b3a:	2102      	movs	r1, #2
 8005b3c:	4620      	mov	r0, r4
 8005b3e:	f7ff fdc9 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005b42:	b928      	cbnz	r0, 8005b50 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005b44:	6823      	ldr	r3, [r4, #0]
 8005b46:	2202      	movs	r2, #2
 8005b48:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005b4a:	4620      	mov	r0, r4
 8005b4c:	f7ff ff25 	bl	800599a <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005b50:	2301      	movs	r3, #1
 8005b52:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005b56:	2300      	movs	r3, #0
 8005b58:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005b5c:	b005      	add	sp, #20
 8005b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005b60:	9600      	str	r6, [sp, #0]
 8005b62:	2201      	movs	r2, #1
 8005b64:	2106      	movs	r1, #6
 8005b66:	4620      	mov	r0, r4
 8005b68:	9303      	str	r3, [sp, #12]
 8005b6a:	f7ff fdb3 	bl	80056d4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005b6e:	2800      	cmp	r0, #0
 8005b70:	d1ee      	bne.n	8005b50 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005b72:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005b74:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005b78:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005b7a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005b7c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005b7e:	3201      	adds	r2, #1
 8005b80:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005b82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005b84:	3a01      	subs	r2, #1
 8005b86:	63a2      	str	r2, [r4, #56]	; 0x38
 8005b88:	e7d3      	b.n	8005b32 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005b8a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005b8c:	f043 0308 	orr.w	r3, r3, #8
 8005b90:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005b92:	e7e0      	b.n	8005b56 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005b94:	2002      	movs	r0, #2
 8005b96:	e7de      	b.n	8005b56 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005b98:	2002      	movs	r0, #2
 8005b9a:	e7df      	b.n	8005b5c <HAL_QSPI_Receive+0x84>

08005b9c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005b9c:	4913      	ldr	r1, [pc, #76]	; (8005bec <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005b9e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ba0:	688b      	ldr	r3, [r1, #8]
 8005ba2:	f003 030c 	and.w	r3, r3, #12
 8005ba6:	2b04      	cmp	r3, #4
 8005ba8:	d01c      	beq.n	8005be4 <HAL_RCC_GetSysClockFreq+0x48>
 8005baa:	2b08      	cmp	r3, #8
 8005bac:	d11c      	bne.n	8005be8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005bae:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005bb0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005bb2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005bb4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005bb8:	bf14      	ite	ne
 8005bba:	480d      	ldrne	r0, [pc, #52]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005bbc:	480d      	ldreq	r0, [pc, #52]	; (8005bf4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005bbe:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005bc2:	bf18      	it	ne
 8005bc4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005bc6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005bca:	fba1 0100 	umull	r0, r1, r1, r0
 8005bce:	f7fa fb67 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005bd2:	4b06      	ldr	r3, [pc, #24]	; (8005bec <HAL_RCC_GetSysClockFreq+0x50>)
 8005bd4:	685b      	ldr	r3, [r3, #4]
 8005bd6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005bda:	3301      	adds	r3, #1
 8005bdc:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005bde:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005be2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005be4:	4802      	ldr	r0, [pc, #8]	; (8005bf0 <HAL_RCC_GetSysClockFreq+0x54>)
 8005be6:	e7fc      	b.n	8005be2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005be8:	4802      	ldr	r0, [pc, #8]	; (8005bf4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005bea:	e7fa      	b.n	8005be2 <HAL_RCC_GetSysClockFreq+0x46>
 8005bec:	40023800 	.word	0x40023800
 8005bf0:	007a1200 	.word	0x007a1200
 8005bf4:	00f42400 	.word	0x00f42400

08005bf8 <HAL_RCC_ClockConfig>:
{
 8005bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bfc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005bfe:	4604      	mov	r4, r0
 8005c00:	b910      	cbnz	r0, 8005c08 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005c02:	2001      	movs	r0, #1
}
 8005c04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005c08:	4b44      	ldr	r3, [pc, #272]	; (8005d1c <HAL_RCC_ClockConfig+0x124>)
 8005c0a:	681a      	ldr	r2, [r3, #0]
 8005c0c:	f002 020f 	and.w	r2, r2, #15
 8005c10:	428a      	cmp	r2, r1
 8005c12:	d328      	bcc.n	8005c66 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005c14:	6822      	ldr	r2, [r4, #0]
 8005c16:	0797      	lsls	r7, r2, #30
 8005c18:	d42d      	bmi.n	8005c76 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005c1a:	07d0      	lsls	r0, r2, #31
 8005c1c:	d441      	bmi.n	8005ca2 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005c1e:	4b3f      	ldr	r3, [pc, #252]	; (8005d1c <HAL_RCC_ClockConfig+0x124>)
 8005c20:	681a      	ldr	r2, [r3, #0]
 8005c22:	f002 020f 	and.w	r2, r2, #15
 8005c26:	42aa      	cmp	r2, r5
 8005c28:	d866      	bhi.n	8005cf8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005c2a:	6822      	ldr	r2, [r4, #0]
 8005c2c:	0751      	lsls	r1, r2, #29
 8005c2e:	d46c      	bmi.n	8005d0a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005c30:	0713      	lsls	r3, r2, #28
 8005c32:	d507      	bpl.n	8005c44 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005c34:	4a3a      	ldr	r2, [pc, #232]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005c36:	6921      	ldr	r1, [r4, #16]
 8005c38:	6893      	ldr	r3, [r2, #8]
 8005c3a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005c3e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005c42:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005c44:	f7ff ffaa 	bl	8005b9c <HAL_RCC_GetSysClockFreq>
 8005c48:	4b35      	ldr	r3, [pc, #212]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005c4a:	4a36      	ldr	r2, [pc, #216]	; (8005d24 <HAL_RCC_ClockConfig+0x12c>)
 8005c4c:	689b      	ldr	r3, [r3, #8]
 8005c4e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005c52:	5cd3      	ldrb	r3, [r2, r3]
 8005c54:	40d8      	lsrs	r0, r3
 8005c56:	4b34      	ldr	r3, [pc, #208]	; (8005d28 <HAL_RCC_ClockConfig+0x130>)
 8005c58:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005c5a:	4b34      	ldr	r3, [pc, #208]	; (8005d2c <HAL_RCC_ClockConfig+0x134>)
 8005c5c:	6818      	ldr	r0, [r3, #0]
 8005c5e:	f7fc f8e7 	bl	8001e30 <HAL_InitTick>
  return HAL_OK;
 8005c62:	2000      	movs	r0, #0
 8005c64:	e7ce      	b.n	8005c04 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005c66:	b2ca      	uxtb	r2, r1
 8005c68:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	f003 030f 	and.w	r3, r3, #15
 8005c70:	428b      	cmp	r3, r1
 8005c72:	d1c6      	bne.n	8005c02 <HAL_RCC_ClockConfig+0xa>
 8005c74:	e7ce      	b.n	8005c14 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005c76:	4b2a      	ldr	r3, [pc, #168]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005c78:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005c7c:	bf1e      	ittt	ne
 8005c7e:	6899      	ldrne	r1, [r3, #8]
 8005c80:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005c84:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005c86:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005c88:	bf42      	ittt	mi
 8005c8a:	6899      	ldrmi	r1, [r3, #8]
 8005c8c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005c90:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005c92:	4923      	ldr	r1, [pc, #140]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005c94:	68a0      	ldr	r0, [r4, #8]
 8005c96:	688b      	ldr	r3, [r1, #8]
 8005c98:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005c9c:	4303      	orrs	r3, r0
 8005c9e:	608b      	str	r3, [r1, #8]
 8005ca0:	e7bb      	b.n	8005c1a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005ca2:	6862      	ldr	r2, [r4, #4]
 8005ca4:	4b1e      	ldr	r3, [pc, #120]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005ca6:	2a01      	cmp	r2, #1
 8005ca8:	d11c      	bne.n	8005ce4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005caa:	681b      	ldr	r3, [r3, #0]
 8005cac:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cb0:	d0a7      	beq.n	8005c02 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005cb2:	4e1b      	ldr	r6, [pc, #108]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005cb4:	68b3      	ldr	r3, [r6, #8]
 8005cb6:	f023 0303 	bic.w	r3, r3, #3
 8005cba:	4313      	orrs	r3, r2
 8005cbc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005cbe:	f7fd fe27 	bl	8003910 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005cc2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005cc6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005cc8:	68b3      	ldr	r3, [r6, #8]
 8005cca:	6862      	ldr	r2, [r4, #4]
 8005ccc:	f003 030c 	and.w	r3, r3, #12
 8005cd0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005cd4:	d0a3      	beq.n	8005c1e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005cd6:	f7fd fe1b 	bl	8003910 <HAL_GetTick>
 8005cda:	1bc0      	subs	r0, r0, r7
 8005cdc:	4540      	cmp	r0, r8
 8005cde:	d9f3      	bls.n	8005cc8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005ce0:	2003      	movs	r0, #3
 8005ce2:	e78f      	b.n	8005c04 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005ce4:	1e91      	subs	r1, r2, #2
 8005ce6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ce8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005cea:	d802      	bhi.n	8005cf2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005cec:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005cf0:	e7de      	b.n	8005cb0 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005cf2:	f013 0f02 	tst.w	r3, #2
 8005cf6:	e7db      	b.n	8005cb0 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005cf8:	b2ea      	uxtb	r2, r5
 8005cfa:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	f003 030f 	and.w	r3, r3, #15
 8005d02:	42ab      	cmp	r3, r5
 8005d04:	f47f af7d 	bne.w	8005c02 <HAL_RCC_ClockConfig+0xa>
 8005d08:	e78f      	b.n	8005c2a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005d0a:	4905      	ldr	r1, [pc, #20]	; (8005d20 <HAL_RCC_ClockConfig+0x128>)
 8005d0c:	68e0      	ldr	r0, [r4, #12]
 8005d0e:	688b      	ldr	r3, [r1, #8]
 8005d10:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005d14:	4303      	orrs	r3, r0
 8005d16:	608b      	str	r3, [r1, #8]
 8005d18:	e78a      	b.n	8005c30 <HAL_RCC_ClockConfig+0x38>
 8005d1a:	bf00      	nop
 8005d1c:	40023c00 	.word	0x40023c00
 8005d20:	40023800 	.word	0x40023800
 8005d24:	0801c409 	.word	0x0801c409
 8005d28:	20000050 	.word	0x20000050
 8005d2c:	20000058 	.word	0x20000058

08005d30 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005d30:	4b04      	ldr	r3, [pc, #16]	; (8005d44 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005d32:	4a05      	ldr	r2, [pc, #20]	; (8005d48 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005d34:	689b      	ldr	r3, [r3, #8]
 8005d36:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005d3a:	5cd3      	ldrb	r3, [r2, r3]
 8005d3c:	4a03      	ldr	r2, [pc, #12]	; (8005d4c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005d3e:	6810      	ldr	r0, [r2, #0]
}
 8005d40:	40d8      	lsrs	r0, r3
 8005d42:	4770      	bx	lr
 8005d44:	40023800 	.word	0x40023800
 8005d48:	0801c419 	.word	0x0801c419
 8005d4c:	20000050 	.word	0x20000050

08005d50 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005d50:	230f      	movs	r3, #15
 8005d52:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005d54:	4b0b      	ldr	r3, [pc, #44]	; (8005d84 <HAL_RCC_GetClockConfig+0x34>)
 8005d56:	689a      	ldr	r2, [r3, #8]
 8005d58:	f002 0203 	and.w	r2, r2, #3
 8005d5c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005d5e:	689a      	ldr	r2, [r3, #8]
 8005d60:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005d64:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005d66:	689a      	ldr	r2, [r3, #8]
 8005d68:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005d6c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005d6e:	689b      	ldr	r3, [r3, #8]
 8005d70:	08db      	lsrs	r3, r3, #3
 8005d72:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005d76:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005d78:	4b03      	ldr	r3, [pc, #12]	; (8005d88 <HAL_RCC_GetClockConfig+0x38>)
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	f003 030f 	and.w	r3, r3, #15
 8005d80:	600b      	str	r3, [r1, #0]
}
 8005d82:	4770      	bx	lr
 8005d84:	40023800 	.word	0x40023800
 8005d88:	40023c00 	.word	0x40023c00

08005d8c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005d8e:	6802      	ldr	r2, [r0, #0]
{
 8005d90:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005d92:	0610      	lsls	r0, r2, #24
 8005d94:	d508      	bpl.n	8005da8 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005d96:	49a8      	ldr	r1, [pc, #672]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005d98:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005d9a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005d9e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8005da2:	4303      	orrs	r3, r0
 8005da4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8005da8:	05d1      	lsls	r1, r2, #23
 8005daa:	d508      	bpl.n	8005dbe <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8005dac:	49a2      	ldr	r1, [pc, #648]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005dae:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005db0:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005db4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005db8:	4303      	orrs	r3, r0
 8005dba:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005dbe:	f012 0f43 	tst.w	r2, #67	; 0x43
 8005dc2:	d172      	bne.n	8005eaa <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005dc4:	6823      	ldr	r3, [r4, #0]
 8005dc6:	f013 0f0c 	tst.w	r3, #12
 8005dca:	f000 80bf 	beq.w	8005f4c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005dce:	4d9b      	ldr	r5, [pc, #620]	; (800603c <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005dd0:	4e99      	ldr	r6, [pc, #612]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005dd2:	2300      	movs	r3, #0
 8005dd4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005dd6:	f7fd fd9b 	bl	8003910 <HAL_GetTick>
 8005dda:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005ddc:	6833      	ldr	r3, [r6, #0]
 8005dde:	009a      	lsls	r2, r3, #2
 8005de0:	f100 80f9 	bmi.w	8005fd6 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005de4:	6822      	ldr	r2, [r4, #0]
 8005de6:	0753      	lsls	r3, r2, #29
 8005de8:	d51a      	bpl.n	8005e20 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005dea:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005dee:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8005df2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005df6:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8005dfa:	430b      	orrs	r3, r1
 8005dfc:	6921      	ldr	r1, [r4, #16]
 8005dfe:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8005e02:	69a1      	ldr	r1, [r4, #24]
 8005e04:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8005e08:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005e0c:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8005e10:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005e12:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005e16:	3901      	subs	r1, #1
 8005e18:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005e1c:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005e20:	0717      	lsls	r7, r2, #28
 8005e22:	d519      	bpl.n	8005e58 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005e24:	4984      	ldr	r1, [pc, #528]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e26:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005e2a:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8005e2e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005e32:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8005e36:	4303      	orrs	r3, r0
 8005e38:	6920      	ldr	r0, [r4, #16]
 8005e3a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005e3e:	69e0      	ldr	r0, [r4, #28]
 8005e40:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8005e44:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005e48:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005e4c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005e4e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005e52:	4303      	orrs	r3, r0
 8005e54:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8005e58:	0616      	lsls	r6, r2, #24
 8005e5a:	d517      	bpl.n	8005e8c <HAL_RCCEx_PeriphCLKConfig+0x100>
 8005e5c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e5e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005e62:	d113      	bne.n	8005e8c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005e64:	4974      	ldr	r1, [pc, #464]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e66:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005e6a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8005e6e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8005e72:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005e76:	4313      	orrs	r3, r2
 8005e78:	6922      	ldr	r2, [r4, #16]
 8005e7a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005e7e:	6962      	ldr	r2, [r4, #20]
 8005e80:	0852      	lsrs	r2, r2, #1
 8005e82:	3a01      	subs	r2, #1
 8005e84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005e88:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005e8c:	2301      	movs	r3, #1
 8005e8e:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005e90:	f7fd fd3e 	bl	8003910 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005e94:	4e68      	ldr	r6, [pc, #416]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005e96:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005e98:	6833      	ldr	r3, [r6, #0]
 8005e9a:	0098      	lsls	r0, r3, #2
 8005e9c:	d458      	bmi.n	8005f50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005e9e:	f7fd fd37 	bl	8003910 <HAL_GetTick>
 8005ea2:	1b40      	subs	r0, r0, r5
 8005ea4:	2802      	cmp	r0, #2
 8005ea6:	d9f7      	bls.n	8005e98 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005ea8:	e04d      	b.n	8005f46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 8005eaa:	4d65      	ldr	r5, [pc, #404]	; (8006040 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005eac:	4f62      	ldr	r7, [pc, #392]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005eae:	2300      	movs	r3, #0
 8005eb0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005eb2:	f7fd fd2d 	bl	8003910 <HAL_GetTick>
 8005eb6:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005eb8:	683b      	ldr	r3, [r7, #0]
 8005eba:	011b      	lsls	r3, r3, #4
 8005ebc:	d43e      	bmi.n	8005f3c <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005ebe:	6821      	ldr	r1, [r4, #0]
 8005ec0:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005ec2:	bf41      	itttt	mi
 8005ec4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005ec8:	071b      	lslmi	r3, r3, #28
 8005eca:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005ece:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005ed2:	078a      	lsls	r2, r1, #30
 8005ed4:	d515      	bpl.n	8005f02 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005ed6:	4a58      	ldr	r2, [pc, #352]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005ed8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005eda:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005ede:	6866      	ldr	r6, [r4, #4]
 8005ee0:	061b      	lsls	r3, r3, #24
 8005ee2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8005ee6:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8005eea:	4303      	orrs	r3, r0
 8005eec:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005ef0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005ef4:	6a23      	ldr	r3, [r4, #32]
 8005ef6:	f020 001f 	bic.w	r0, r0, #31
 8005efa:	3b01      	subs	r3, #1
 8005efc:	4303      	orrs	r3, r0
 8005efe:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005f02:	064b      	lsls	r3, r1, #25
 8005f04:	d50a      	bpl.n	8005f1c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005f06:	68e3      	ldr	r3, [r4, #12]
 8005f08:	6862      	ldr	r2, [r4, #4]
 8005f0a:	061b      	lsls	r3, r3, #24
 8005f0c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005f10:	68a2      	ldr	r2, [r4, #8]
 8005f12:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005f16:	4a48      	ldr	r2, [pc, #288]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005f18:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005f1c:	2301      	movs	r3, #1
 8005f1e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005f20:	f7fd fcf6 	bl	8003910 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005f24:	4e44      	ldr	r6, [pc, #272]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005f26:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005f28:	6833      	ldr	r3, [r6, #0]
 8005f2a:	011f      	lsls	r7, r3, #4
 8005f2c:	f53f af4a 	bmi.w	8005dc4 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005f30:	f7fd fcee 	bl	8003910 <HAL_GetTick>
 8005f34:	1b40      	subs	r0, r0, r5
 8005f36:	2802      	cmp	r0, #2
 8005f38:	d9f6      	bls.n	8005f28 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8005f3a:	e004      	b.n	8005f46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005f3c:	f7fd fce8 	bl	8003910 <HAL_GetTick>
 8005f40:	1b80      	subs	r0, r0, r6
 8005f42:	2802      	cmp	r0, #2
 8005f44:	d9b8      	bls.n	8005eb8 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005f46:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8005f48:	b003      	add	sp, #12
 8005f4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8005f4c:	0618      	lsls	r0, r3, #24
 8005f4e:	d43d      	bmi.n	8005fcc <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005f50:	6823      	ldr	r3, [r4, #0]
 8005f52:	0699      	lsls	r1, r3, #26
 8005f54:	d530      	bpl.n	8005fb8 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 8005f56:	2300      	movs	r3, #0
 8005f58:	9301      	str	r3, [sp, #4]
 8005f5a:	4b37      	ldr	r3, [pc, #220]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 8005f5c:	4d39      	ldr	r5, [pc, #228]	; (8006044 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005f5e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005f60:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005f64:	641a      	str	r2, [r3, #64]	; 0x40
 8005f66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f68:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005f6c:	9301      	str	r3, [sp, #4]
 8005f6e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005f70:	682b      	ldr	r3, [r5, #0]
 8005f72:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005f76:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005f78:	f7fd fcca 	bl	8003910 <HAL_GetTick>
 8005f7c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005f7e:	682b      	ldr	r3, [r5, #0]
 8005f80:	05d9      	lsls	r1, r3, #23
 8005f82:	d52f      	bpl.n	8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005f84:	4d2c      	ldr	r5, [pc, #176]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005f86:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005f88:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005f8c:	d130      	bne.n	8005ff0 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005f8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8005f90:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8005f94:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005f98:	4a27      	ldr	r2, [pc, #156]	; (8006038 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005f9a:	d148      	bne.n	800602e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8005f9c:	6891      	ldr	r1, [r2, #8]
 8005f9e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8005fa2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005fa6:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005faa:	4301      	orrs	r1, r0
 8005fac:	6091      	str	r1, [r2, #8]
 8005fae:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8005fb0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005fb4:	430b      	orrs	r3, r1
 8005fb6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005fb8:	6820      	ldr	r0, [r4, #0]
 8005fba:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005fbe:	bf1f      	itttt	ne
 8005fc0:	4b21      	ldrne	r3, [pc, #132]	; (8006048 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8005fc2:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8005fc6:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8005fc8:	2000      	movne	r0, #0
 8005fca:	e7bd      	b.n	8005f48 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8005fcc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005fce:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005fd2:	d1bd      	bne.n	8005f50 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8005fd4:	e6fb      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005fd6:	f7fd fc9b 	bl	8003910 <HAL_GetTick>
 8005fda:	1bc0      	subs	r0, r0, r7
 8005fdc:	2802      	cmp	r0, #2
 8005fde:	f67f aefd 	bls.w	8005ddc <HAL_RCCEx_PeriphCLKConfig+0x50>
 8005fe2:	e7b0      	b.n	8005f46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005fe4:	f7fd fc94 	bl	8003910 <HAL_GetTick>
 8005fe8:	1b80      	subs	r0, r0, r6
 8005fea:	2802      	cmp	r0, #2
 8005fec:	d9c7      	bls.n	8005f7e <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 8005fee:	e7aa      	b.n	8005f46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005ff0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005ff2:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005ff6:	4293      	cmp	r3, r2
 8005ff8:	d0c9      	beq.n	8005f8e <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005ffa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005ffc:	4a13      	ldr	r2, [pc, #76]	; (800604c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8005ffe:	2101      	movs	r1, #1
 8006000:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006002:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006006:	2100      	movs	r1, #0
 8006008:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800600a:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800600c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800600e:	07da      	lsls	r2, r3, #31
 8006010:	d5bd      	bpl.n	8005f8e <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8006012:	f7fd fc7d 	bl	8003910 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006016:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800601a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800601c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800601e:	079b      	lsls	r3, r3, #30
 8006020:	d4b5      	bmi.n	8005f8e <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006022:	f7fd fc75 	bl	8003910 <HAL_GetTick>
 8006026:	1b80      	subs	r0, r0, r6
 8006028:	42b8      	cmp	r0, r7
 800602a:	d9f7      	bls.n	800601c <HAL_RCCEx_PeriphCLKConfig+0x290>
 800602c:	e78b      	b.n	8005f46 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800602e:	6891      	ldr	r1, [r2, #8]
 8006030:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006034:	e7ba      	b.n	8005fac <HAL_RCCEx_PeriphCLKConfig+0x220>
 8006036:	bf00      	nop
 8006038:	40023800 	.word	0x40023800
 800603c:	42470070 	.word	0x42470070
 8006040:	42470068 	.word	0x42470068
 8006044:	40007000 	.word	0x40007000
 8006048:	424711e0 	.word	0x424711e0
 800604c:	42470e40 	.word	0x42470e40

08006050 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006050:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006054:	4604      	mov	r4, r0
 8006056:	b340      	cbz	r0, 80060aa <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006058:	6803      	ldr	r3, [r0, #0]
 800605a:	07dd      	lsls	r5, r3, #31
 800605c:	d410      	bmi.n	8006080 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800605e:	6823      	ldr	r3, [r4, #0]
 8006060:	0798      	lsls	r0, r3, #30
 8006062:	d45e      	bmi.n	8006122 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006064:	6823      	ldr	r3, [r4, #0]
 8006066:	071a      	lsls	r2, r3, #28
 8006068:	f100 80a0 	bmi.w	80061ac <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	075b      	lsls	r3, r3, #29
 8006070:	f100 80be 	bmi.w	80061f0 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006074:	69a0      	ldr	r0, [r4, #24]
 8006076:	2800      	cmp	r0, #0
 8006078:	f040 811f 	bne.w	80062ba <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800607c:	2000      	movs	r0, #0
 800607e:	e02b      	b.n	80060d8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006080:	4ba7      	ldr	r3, [pc, #668]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 8006082:	689a      	ldr	r2, [r3, #8]
 8006084:	f002 020c 	and.w	r2, r2, #12
 8006088:	2a04      	cmp	r2, #4
 800608a:	d007      	beq.n	800609c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800608c:	689a      	ldr	r2, [r3, #8]
 800608e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006092:	2a08      	cmp	r2, #8
 8006094:	d10b      	bne.n	80060ae <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006096:	685a      	ldr	r2, [r3, #4]
 8006098:	0251      	lsls	r1, r2, #9
 800609a:	d508      	bpl.n	80060ae <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800609c:	4ba0      	ldr	r3, [pc, #640]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	039a      	lsls	r2, r3, #14
 80060a2:	d5dc      	bpl.n	800605e <HAL_RCC_OscConfig+0xe>
 80060a4:	6863      	ldr	r3, [r4, #4]
 80060a6:	2b00      	cmp	r3, #0
 80060a8:	d1d9      	bne.n	800605e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80060aa:	2001      	movs	r0, #1
 80060ac:	e014      	b.n	80060d8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060ae:	6862      	ldr	r2, [r4, #4]
 80060b0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80060b4:	d113      	bne.n	80060de <HAL_RCC_OscConfig+0x8e>
 80060b6:	681a      	ldr	r2, [r3, #0]
 80060b8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80060bc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80060be:	f7fd fc27 	bl	8003910 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060c2:	4e97      	ldr	r6, [pc, #604]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80060c4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060c6:	6833      	ldr	r3, [r6, #0]
 80060c8:	039b      	lsls	r3, r3, #14
 80060ca:	d4c8      	bmi.n	800605e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060cc:	f7fd fc20 	bl	8003910 <HAL_GetTick>
 80060d0:	1b40      	subs	r0, r0, r5
 80060d2:	2864      	cmp	r0, #100	; 0x64
 80060d4:	d9f7      	bls.n	80060c6 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80060d6:	2003      	movs	r0, #3
}
 80060d8:	b002      	add	sp, #8
 80060da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060de:	4d90      	ldr	r5, [pc, #576]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 80060e0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80060e4:	682b      	ldr	r3, [r5, #0]
 80060e6:	d107      	bne.n	80060f8 <HAL_RCC_OscConfig+0xa8>
 80060e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80060ec:	602b      	str	r3, [r5, #0]
 80060ee:	682b      	ldr	r3, [r5, #0]
 80060f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80060f4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80060f6:	e7e2      	b.n	80060be <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80060fc:	602b      	str	r3, [r5, #0]
 80060fe:	682b      	ldr	r3, [r5, #0]
 8006100:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006104:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006106:	2a00      	cmp	r2, #0
 8006108:	d1d9      	bne.n	80060be <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800610a:	f7fd fc01 	bl	8003910 <HAL_GetTick>
 800610e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006110:	682b      	ldr	r3, [r5, #0]
 8006112:	039f      	lsls	r7, r3, #14
 8006114:	d5a3      	bpl.n	800605e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006116:	f7fd fbfb 	bl	8003910 <HAL_GetTick>
 800611a:	1b80      	subs	r0, r0, r6
 800611c:	2864      	cmp	r0, #100	; 0x64
 800611e:	d9f7      	bls.n	8006110 <HAL_RCC_OscConfig+0xc0>
 8006120:	e7d9      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006122:	4b7f      	ldr	r3, [pc, #508]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 8006124:	689a      	ldr	r2, [r3, #8]
 8006126:	f012 0f0c 	tst.w	r2, #12
 800612a:	d007      	beq.n	800613c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800612c:	689a      	ldr	r2, [r3, #8]
 800612e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006132:	2a08      	cmp	r2, #8
 8006134:	d111      	bne.n	800615a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006136:	685b      	ldr	r3, [r3, #4]
 8006138:	025e      	lsls	r6, r3, #9
 800613a:	d40e      	bmi.n	800615a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800613c:	4b78      	ldr	r3, [pc, #480]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 800613e:	681a      	ldr	r2, [r3, #0]
 8006140:	0795      	lsls	r5, r2, #30
 8006142:	d502      	bpl.n	800614a <HAL_RCC_OscConfig+0xfa>
 8006144:	68e2      	ldr	r2, [r4, #12]
 8006146:	2a01      	cmp	r2, #1
 8006148:	d1af      	bne.n	80060aa <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800614a:	681a      	ldr	r2, [r3, #0]
 800614c:	6921      	ldr	r1, [r4, #16]
 800614e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8006152:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8006156:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006158:	e784      	b.n	8006064 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800615a:	68e2      	ldr	r2, [r4, #12]
 800615c:	4b71      	ldr	r3, [pc, #452]	; (8006324 <HAL_RCC_OscConfig+0x2d4>)
 800615e:	b1b2      	cbz	r2, 800618e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006160:	2201      	movs	r2, #1
 8006162:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006164:	f7fd fbd4 	bl	8003910 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006168:	4d6d      	ldr	r5, [pc, #436]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800616a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800616c:	682b      	ldr	r3, [r5, #0]
 800616e:	0798      	lsls	r0, r3, #30
 8006170:	d507      	bpl.n	8006182 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006172:	682b      	ldr	r3, [r5, #0]
 8006174:	6922      	ldr	r2, [r4, #16]
 8006176:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800617a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800617e:	602b      	str	r3, [r5, #0]
 8006180:	e770      	b.n	8006064 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006182:	f7fd fbc5 	bl	8003910 <HAL_GetTick>
 8006186:	1b80      	subs	r0, r0, r6
 8006188:	2802      	cmp	r0, #2
 800618a:	d9ef      	bls.n	800616c <HAL_RCC_OscConfig+0x11c>
 800618c:	e7a3      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800618e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006190:	f7fd fbbe 	bl	8003910 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006194:	4e62      	ldr	r6, [pc, #392]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006196:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006198:	6833      	ldr	r3, [r6, #0]
 800619a:	0799      	lsls	r1, r3, #30
 800619c:	f57f af62 	bpl.w	8006064 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80061a0:	f7fd fbb6 	bl	8003910 <HAL_GetTick>
 80061a4:	1b40      	subs	r0, r0, r5
 80061a6:	2802      	cmp	r0, #2
 80061a8:	d9f6      	bls.n	8006198 <HAL_RCC_OscConfig+0x148>
 80061aa:	e794      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80061ac:	6962      	ldr	r2, [r4, #20]
 80061ae:	4b5e      	ldr	r3, [pc, #376]	; (8006328 <HAL_RCC_OscConfig+0x2d8>)
 80061b0:	b17a      	cbz	r2, 80061d2 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 80061b2:	2201      	movs	r2, #1
 80061b4:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80061b6:	f7fd fbab 	bl	8003910 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061ba:	4e59      	ldr	r6, [pc, #356]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80061bc:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80061be:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80061c0:	079f      	lsls	r7, r3, #30
 80061c2:	f53f af53 	bmi.w	800606c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061c6:	f7fd fba3 	bl	8003910 <HAL_GetTick>
 80061ca:	1b40      	subs	r0, r0, r5
 80061cc:	2802      	cmp	r0, #2
 80061ce:	d9f6      	bls.n	80061be <HAL_RCC_OscConfig+0x16e>
 80061d0:	e781      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80061d2:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80061d4:	f7fd fb9c 	bl	8003910 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061d8:	4e51      	ldr	r6, [pc, #324]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80061da:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061dc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80061de:	0798      	lsls	r0, r3, #30
 80061e0:	f57f af44 	bpl.w	800606c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061e4:	f7fd fb94 	bl	8003910 <HAL_GetTick>
 80061e8:	1b40      	subs	r0, r0, r5
 80061ea:	2802      	cmp	r0, #2
 80061ec:	d9f6      	bls.n	80061dc <HAL_RCC_OscConfig+0x18c>
 80061ee:	e772      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80061f0:	4b4b      	ldr	r3, [pc, #300]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 80061f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061f4:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80061f8:	d128      	bne.n	800624c <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 80061fa:	9201      	str	r2, [sp, #4]
 80061fc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061fe:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006202:	641a      	str	r2, [r3, #64]	; 0x40
 8006204:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006206:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800620a:	9301      	str	r3, [sp, #4]
 800620c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800620e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006210:	4d46      	ldr	r5, [pc, #280]	; (800632c <HAL_RCC_OscConfig+0x2dc>)
 8006212:	682b      	ldr	r3, [r5, #0]
 8006214:	05d9      	lsls	r1, r3, #23
 8006216:	d51b      	bpl.n	8006250 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006218:	68a3      	ldr	r3, [r4, #8]
 800621a:	4d41      	ldr	r5, [pc, #260]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 800621c:	2b01      	cmp	r3, #1
 800621e:	d127      	bne.n	8006270 <HAL_RCC_OscConfig+0x220>
 8006220:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006222:	f043 0301 	orr.w	r3, r3, #1
 8006226:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006228:	f7fd fb72 	bl	8003910 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800622c:	4e3c      	ldr	r6, [pc, #240]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800622e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006230:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006234:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006236:	079b      	lsls	r3, r3, #30
 8006238:	d539      	bpl.n	80062ae <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 800623a:	2f00      	cmp	r7, #0
 800623c:	f43f af1a 	beq.w	8006074 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006240:	4a37      	ldr	r2, [pc, #220]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 8006242:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006244:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006248:	6413      	str	r3, [r2, #64]	; 0x40
 800624a:	e713      	b.n	8006074 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800624c:	2700      	movs	r7, #0
 800624e:	e7df      	b.n	8006210 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006250:	682b      	ldr	r3, [r5, #0]
 8006252:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006256:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006258:	f7fd fb5a 	bl	8003910 <HAL_GetTick>
 800625c:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800625e:	682b      	ldr	r3, [r5, #0]
 8006260:	05da      	lsls	r2, r3, #23
 8006262:	d4d9      	bmi.n	8006218 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006264:	f7fd fb54 	bl	8003910 <HAL_GetTick>
 8006268:	1b80      	subs	r0, r0, r6
 800626a:	2802      	cmp	r0, #2
 800626c:	d9f7      	bls.n	800625e <HAL_RCC_OscConfig+0x20e>
 800626e:	e732      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006270:	2b05      	cmp	r3, #5
 8006272:	d104      	bne.n	800627e <HAL_RCC_OscConfig+0x22e>
 8006274:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006276:	f043 0304 	orr.w	r3, r3, #4
 800627a:	672b      	str	r3, [r5, #112]	; 0x70
 800627c:	e7d0      	b.n	8006220 <HAL_RCC_OscConfig+0x1d0>
 800627e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006280:	f022 0201 	bic.w	r2, r2, #1
 8006284:	672a      	str	r2, [r5, #112]	; 0x70
 8006286:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006288:	f022 0204 	bic.w	r2, r2, #4
 800628c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800628e:	2b00      	cmp	r3, #0
 8006290:	d1ca      	bne.n	8006228 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8006292:	f7fd fb3d 	bl	8003910 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006296:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800629a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800629c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800629e:	0798      	lsls	r0, r3, #30
 80062a0:	d5cb      	bpl.n	800623a <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062a2:	f7fd fb35 	bl	8003910 <HAL_GetTick>
 80062a6:	1b80      	subs	r0, r0, r6
 80062a8:	4540      	cmp	r0, r8
 80062aa:	d9f7      	bls.n	800629c <HAL_RCC_OscConfig+0x24c>
 80062ac:	e713      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80062ae:	f7fd fb2f 	bl	8003910 <HAL_GetTick>
 80062b2:	1b40      	subs	r0, r0, r5
 80062b4:	4540      	cmp	r0, r8
 80062b6:	d9bd      	bls.n	8006234 <HAL_RCC_OscConfig+0x1e4>
 80062b8:	e70d      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80062ba:	4d19      	ldr	r5, [pc, #100]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
 80062bc:	68ab      	ldr	r3, [r5, #8]
 80062be:	f003 030c 	and.w	r3, r3, #12
 80062c2:	2b08      	cmp	r3, #8
 80062c4:	d049      	beq.n	800635a <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062c6:	4e1a      	ldr	r6, [pc, #104]	; (8006330 <HAL_RCC_OscConfig+0x2e0>)
 80062c8:	2300      	movs	r3, #0
 80062ca:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80062cc:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062ce:	d137      	bne.n	8006340 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80062d0:	f7fd fb1e 	bl	8003910 <HAL_GetTick>
 80062d4:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80062d6:	682b      	ldr	r3, [r5, #0]
 80062d8:	0199      	lsls	r1, r3, #6
 80062da:	d42b      	bmi.n	8006334 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80062dc:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80062e0:	4313      	orrs	r3, r2
 80062e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062e4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80062ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80062f0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80062f4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80062f6:	0852      	lsrs	r2, r2, #1
 80062f8:	3a01      	subs	r2, #1
 80062fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80062fe:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006300:	2301      	movs	r3, #1
 8006302:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006304:	f7fd fb04 	bl	8003910 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006308:	4d05      	ldr	r5, [pc, #20]	; (8006320 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800630a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800630c:	682b      	ldr	r3, [r5, #0]
 800630e:	019a      	lsls	r2, r3, #6
 8006310:	f53f aeb4 	bmi.w	800607c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006314:	f7fd fafc 	bl	8003910 <HAL_GetTick>
 8006318:	1b00      	subs	r0, r0, r4
 800631a:	2802      	cmp	r0, #2
 800631c:	d9f6      	bls.n	800630c <HAL_RCC_OscConfig+0x2bc>
 800631e:	e6da      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
 8006320:	40023800 	.word	0x40023800
 8006324:	42470000 	.word	0x42470000
 8006328:	42470e80 	.word	0x42470e80
 800632c:	40007000 	.word	0x40007000
 8006330:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006334:	f7fd faec 	bl	8003910 <HAL_GetTick>
 8006338:	1bc0      	subs	r0, r0, r7
 800633a:	2802      	cmp	r0, #2
 800633c:	d9cb      	bls.n	80062d6 <HAL_RCC_OscConfig+0x286>
 800633e:	e6ca      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006340:	f7fd fae6 	bl	8003910 <HAL_GetTick>
 8006344:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006346:	682b      	ldr	r3, [r5, #0]
 8006348:	019b      	lsls	r3, r3, #6
 800634a:	f57f ae97 	bpl.w	800607c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800634e:	f7fd fadf 	bl	8003910 <HAL_GetTick>
 8006352:	1b00      	subs	r0, r0, r4
 8006354:	2802      	cmp	r0, #2
 8006356:	d9f6      	bls.n	8006346 <HAL_RCC_OscConfig+0x2f6>
 8006358:	e6bd      	b.n	80060d6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800635a:	2801      	cmp	r0, #1
 800635c:	f43f aebc 	beq.w	80060d8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006360:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006362:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006364:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006368:	4291      	cmp	r1, r2
 800636a:	f47f ae9e 	bne.w	80060aa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800636e:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006370:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006374:	428a      	cmp	r2, r1
 8006376:	f47f ae98 	bne.w	80060aa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800637a:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800637c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006380:	401a      	ands	r2, r3
 8006382:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006386:	f47f ae90 	bne.w	80060aa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800638a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800638c:	0852      	lsrs	r2, r2, #1
 800638e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006392:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006394:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006398:	f47f ae87 	bne.w	80060aa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800639c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800639e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80063a2:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 80063a6:	f47f ae80 	bne.w	80060aa <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80063aa:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80063ac:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80063b0:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 80063b4:	f43f ae62 	beq.w	800607c <HAL_RCC_OscConfig+0x2c>
 80063b8:	e677      	b.n	80060aa <HAL_RCC_OscConfig+0x5a>
 80063ba:	bf00      	nop

080063bc <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80063bc:	b538      	push	{r3, r4, r5, lr}
 80063be:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80063c0:	4604      	mov	r4, r0
 80063c2:	b1c8      	cbz	r0, 80063f8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80063c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80063c8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80063cc:	b91b      	cbnz	r3, 80063d6 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80063ce:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80063d2:	f7fb fc75 	bl	8001cc0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80063d6:	2302      	movs	r3, #2
 80063d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80063dc:	1d21      	adds	r1, r4, #4
 80063de:	6820      	ldr	r0, [r4, #0]
 80063e0:	f000 f9b8 	bl	8006754 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80063e4:	6862      	ldr	r2, [r4, #4]
 80063e6:	6820      	ldr	r0, [r4, #0]
 80063e8:	4629      	mov	r1, r5
 80063ea:	f000 f9e9 	bl	80067c0 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80063ee:	2301      	movs	r3, #1
 80063f0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80063f4:	2000      	movs	r0, #0
}
 80063f6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063f8:	2001      	movs	r0, #1
 80063fa:	e7fc      	b.n	80063f6 <HAL_SDRAM_Init+0x3a>

080063fc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80063fc:	b510      	push	{r4, lr}
 80063fe:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006400:	f7fb fcd4 	bl	8001dac <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006404:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006408:	f000 fa16 	bl	8006838 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800640c:	2000      	movs	r0, #0
 800640e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006412:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006416:	bd10      	pop	{r4, pc}

08006418 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006418:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800641a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800641e:	2b02      	cmp	r3, #2
{
 8006420:	4604      	mov	r4, r0
 8006422:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006424:	b2d8      	uxtb	r0, r3
 8006426:	d00d      	beq.n	8006444 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006428:	2302      	movs	r3, #2
 800642a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800642e:	6820      	ldr	r0, [r4, #0]
 8006430:	f000 fa11 	bl	8006856 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006434:	682b      	ldr	r3, [r5, #0]
 8006436:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006438:	bf0c      	ite	eq
 800643a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800643c:	2301      	movne	r3, #1
 800643e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006442:	2000      	movs	r0, #0
}
 8006444:	bd38      	pop	{r3, r4, r5, pc}

08006446 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006446:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006448:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800644c:	2b02      	cmp	r3, #2
{
 800644e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006450:	b2d8      	uxtb	r0, r3
 8006452:	d009      	beq.n	8006468 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006454:	2302      	movs	r3, #2
 8006456:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800645a:	6820      	ldr	r0, [r4, #0]
 800645c:	f000 fa22 	bl	80068a4 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006460:	2301      	movs	r3, #1
 8006462:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006466:	2000      	movs	r0, #0
}
 8006468:	bd10      	pop	{r4, pc}

0800646a <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800646a:	4770      	bx	lr

0800646c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800646c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006470:	2b01      	cmp	r3, #1
 8006472:	d130      	bne.n	80064d6 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006474:	2302      	movs	r3, #2
 8006476:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800647a:	6803      	ldr	r3, [r0, #0]
 800647c:	68da      	ldr	r2, [r3, #12]
 800647e:	f042 0201 	orr.w	r2, r2, #1
 8006482:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006484:	4a15      	ldr	r2, [pc, #84]	; (80064dc <HAL_TIM_Base_Start_IT+0x70>)
 8006486:	4293      	cmp	r3, r2
 8006488:	d01a      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 800648a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800648e:	d017      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 8006490:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006494:	4293      	cmp	r3, r2
 8006496:	d013      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 8006498:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800649c:	4293      	cmp	r3, r2
 800649e:	d00f      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 80064a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064a4:	4293      	cmp	r3, r2
 80064a6:	d00b      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 80064a8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80064ac:	4293      	cmp	r3, r2
 80064ae:	d007      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 80064b0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80064b4:	4293      	cmp	r3, r2
 80064b6:	d003      	beq.n	80064c0 <HAL_TIM_Base_Start_IT+0x54>
 80064b8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80064bc:	4293      	cmp	r3, r2
 80064be:	d104      	bne.n	80064ca <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80064c0:	689a      	ldr	r2, [r3, #8]
 80064c2:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80064c6:	2a06      	cmp	r2, #6
 80064c8:	d003      	beq.n	80064d2 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80064ca:	681a      	ldr	r2, [r3, #0]
 80064cc:	f042 0201 	orr.w	r2, r2, #1
 80064d0:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80064d2:	2000      	movs	r0, #0
}
 80064d4:	4770      	bx	lr
    return HAL_ERROR;
 80064d6:	2001      	movs	r0, #1
 80064d8:	4770      	bx	lr
 80064da:	bf00      	nop
 80064dc:	40010000 	.word	0x40010000

080064e0 <HAL_TIM_OC_DelayElapsedCallback>:
 80064e0:	4770      	bx	lr

080064e2 <HAL_TIM_IC_CaptureCallback>:
 80064e2:	4770      	bx	lr

080064e4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80064e4:	4770      	bx	lr

080064e6 <HAL_TIM_TriggerCallback>:
 80064e6:	4770      	bx	lr

080064e8 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80064e8:	6803      	ldr	r3, [r0, #0]
 80064ea:	691a      	ldr	r2, [r3, #16]
 80064ec:	0791      	lsls	r1, r2, #30
{
 80064ee:	b510      	push	{r4, lr}
 80064f0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80064f2:	d50e      	bpl.n	8006512 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80064f4:	68da      	ldr	r2, [r3, #12]
 80064f6:	0792      	lsls	r2, r2, #30
 80064f8:	d50b      	bpl.n	8006512 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80064fa:	f06f 0202 	mvn.w	r2, #2
 80064fe:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006500:	2201      	movs	r2, #1
 8006502:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006504:	699b      	ldr	r3, [r3, #24]
 8006506:	079b      	lsls	r3, r3, #30
 8006508:	d077      	beq.n	80065fa <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800650a:	f7ff ffea 	bl	80064e2 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800650e:	2300      	movs	r3, #0
 8006510:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006512:	6823      	ldr	r3, [r4, #0]
 8006514:	691a      	ldr	r2, [r3, #16]
 8006516:	0750      	lsls	r0, r2, #29
 8006518:	d510      	bpl.n	800653c <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800651a:	68da      	ldr	r2, [r3, #12]
 800651c:	0751      	lsls	r1, r2, #29
 800651e:	d50d      	bpl.n	800653c <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006520:	f06f 0204 	mvn.w	r2, #4
 8006524:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006526:	2202      	movs	r2, #2
 8006528:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800652a:	699b      	ldr	r3, [r3, #24]
 800652c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006530:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006532:	d068      	beq.n	8006606 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006534:	f7ff ffd5 	bl	80064e2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006538:	2300      	movs	r3, #0
 800653a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800653c:	6823      	ldr	r3, [r4, #0]
 800653e:	691a      	ldr	r2, [r3, #16]
 8006540:	0712      	lsls	r2, r2, #28
 8006542:	d50f      	bpl.n	8006564 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006544:	68da      	ldr	r2, [r3, #12]
 8006546:	0710      	lsls	r0, r2, #28
 8006548:	d50c      	bpl.n	8006564 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800654a:	f06f 0208 	mvn.w	r2, #8
 800654e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006550:	2204      	movs	r2, #4
 8006552:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006554:	69db      	ldr	r3, [r3, #28]
 8006556:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006558:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800655a:	d05a      	beq.n	8006612 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800655c:	f7ff ffc1 	bl	80064e2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006560:	2300      	movs	r3, #0
 8006562:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006564:	6823      	ldr	r3, [r4, #0]
 8006566:	691a      	ldr	r2, [r3, #16]
 8006568:	06d2      	lsls	r2, r2, #27
 800656a:	d510      	bpl.n	800658e <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800656c:	68da      	ldr	r2, [r3, #12]
 800656e:	06d0      	lsls	r0, r2, #27
 8006570:	d50d      	bpl.n	800658e <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006572:	f06f 0210 	mvn.w	r2, #16
 8006576:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006578:	2208      	movs	r2, #8
 800657a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800657c:	69db      	ldr	r3, [r3, #28]
 800657e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006582:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006584:	d04b      	beq.n	800661e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006586:	f7ff ffac 	bl	80064e2 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800658a:	2300      	movs	r3, #0
 800658c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800658e:	6823      	ldr	r3, [r4, #0]
 8006590:	691a      	ldr	r2, [r3, #16]
 8006592:	07d1      	lsls	r1, r2, #31
 8006594:	d508      	bpl.n	80065a8 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006596:	68da      	ldr	r2, [r3, #12]
 8006598:	07d2      	lsls	r2, r2, #31
 800659a:	d505      	bpl.n	80065a8 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800659c:	f06f 0201 	mvn.w	r2, #1
 80065a0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80065a2:	4620      	mov	r0, r4
 80065a4:	f7fb f9da 	bl	800195c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80065a8:	6823      	ldr	r3, [r4, #0]
 80065aa:	691a      	ldr	r2, [r3, #16]
 80065ac:	0610      	lsls	r0, r2, #24
 80065ae:	d508      	bpl.n	80065c2 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80065b0:	68da      	ldr	r2, [r3, #12]
 80065b2:	0611      	lsls	r1, r2, #24
 80065b4:	d505      	bpl.n	80065c2 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80065b6:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80065ba:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80065bc:	4620      	mov	r0, r4
 80065be:	f000 f8c8 	bl	8006752 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80065c2:	6823      	ldr	r3, [r4, #0]
 80065c4:	691a      	ldr	r2, [r3, #16]
 80065c6:	0652      	lsls	r2, r2, #25
 80065c8:	d508      	bpl.n	80065dc <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80065ca:	68da      	ldr	r2, [r3, #12]
 80065cc:	0650      	lsls	r0, r2, #25
 80065ce:	d505      	bpl.n	80065dc <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80065d0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80065d4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80065d6:	4620      	mov	r0, r4
 80065d8:	f7ff ff85 	bl	80064e6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80065dc:	6823      	ldr	r3, [r4, #0]
 80065de:	691a      	ldr	r2, [r3, #16]
 80065e0:	0691      	lsls	r1, r2, #26
 80065e2:	d522      	bpl.n	800662a <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80065e4:	68da      	ldr	r2, [r3, #12]
 80065e6:	0692      	lsls	r2, r2, #26
 80065e8:	d51f      	bpl.n	800662a <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80065ea:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80065ee:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80065f0:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80065f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80065f6:	f000 b8ab 	b.w	8006750 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80065fa:	f7ff ff71 	bl	80064e0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80065fe:	4620      	mov	r0, r4
 8006600:	f7ff ff70 	bl	80064e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006604:	e783      	b.n	800650e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006606:	f7ff ff6b 	bl	80064e0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800660a:	4620      	mov	r0, r4
 800660c:	f7ff ff6a 	bl	80064e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006610:	e792      	b.n	8006538 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006612:	f7ff ff65 	bl	80064e0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006616:	4620      	mov	r0, r4
 8006618:	f7ff ff64 	bl	80064e4 <HAL_TIM_PWM_PulseFinishedCallback>
 800661c:	e7a0      	b.n	8006560 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800661e:	f7ff ff5f 	bl	80064e0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006622:	4620      	mov	r0, r4
 8006624:	f7ff ff5e 	bl	80064e4 <HAL_TIM_PWM_PulseFinishedCallback>
 8006628:	e7af      	b.n	800658a <HAL_TIM_IRQHandler+0xa2>
}
 800662a:	bd10      	pop	{r4, pc}

0800662c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800662c:	4a30      	ldr	r2, [pc, #192]	; (80066f0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800662e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006630:	4290      	cmp	r0, r2
 8006632:	d012      	beq.n	800665a <TIM_Base_SetConfig+0x2e>
 8006634:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006638:	d00f      	beq.n	800665a <TIM_Base_SetConfig+0x2e>
 800663a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800663e:	4290      	cmp	r0, r2
 8006640:	d00b      	beq.n	800665a <TIM_Base_SetConfig+0x2e>
 8006642:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006646:	4290      	cmp	r0, r2
 8006648:	d007      	beq.n	800665a <TIM_Base_SetConfig+0x2e>
 800664a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800664e:	4290      	cmp	r0, r2
 8006650:	d003      	beq.n	800665a <TIM_Base_SetConfig+0x2e>
 8006652:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006656:	4290      	cmp	r0, r2
 8006658:	d119      	bne.n	800668e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800665a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800665c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006660:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006662:	4a23      	ldr	r2, [pc, #140]	; (80066f0 <TIM_Base_SetConfig+0xc4>)
 8006664:	4290      	cmp	r0, r2
 8006666:	d029      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 8006668:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800666c:	d026      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 800666e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006672:	4290      	cmp	r0, r2
 8006674:	d022      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 8006676:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800667a:	4290      	cmp	r0, r2
 800667c:	d01e      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 800667e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006682:	4290      	cmp	r0, r2
 8006684:	d01a      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 8006686:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800668a:	4290      	cmp	r0, r2
 800668c:	d016      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 800668e:	4a19      	ldr	r2, [pc, #100]	; (80066f4 <TIM_Base_SetConfig+0xc8>)
 8006690:	4290      	cmp	r0, r2
 8006692:	d013      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 8006694:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006698:	4290      	cmp	r0, r2
 800669a:	d00f      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 800669c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066a0:	4290      	cmp	r0, r2
 80066a2:	d00b      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 80066a4:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80066a8:	4290      	cmp	r0, r2
 80066aa:	d007      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 80066ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066b0:	4290      	cmp	r0, r2
 80066b2:	d003      	beq.n	80066bc <TIM_Base_SetConfig+0x90>
 80066b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066b8:	4290      	cmp	r0, r2
 80066ba:	d103      	bne.n	80066c4 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80066bc:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80066be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80066c2:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80066c4:	694a      	ldr	r2, [r1, #20]
 80066c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80066ca:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80066cc:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80066ce:	688b      	ldr	r3, [r1, #8]
 80066d0:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80066d2:	680b      	ldr	r3, [r1, #0]
 80066d4:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80066d6:	4b06      	ldr	r3, [pc, #24]	; (80066f0 <TIM_Base_SetConfig+0xc4>)
 80066d8:	4298      	cmp	r0, r3
 80066da:	d003      	beq.n	80066e4 <TIM_Base_SetConfig+0xb8>
 80066dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80066e0:	4298      	cmp	r0, r3
 80066e2:	d101      	bne.n	80066e8 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80066e4:	690b      	ldr	r3, [r1, #16]
 80066e6:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80066e8:	2301      	movs	r3, #1
 80066ea:	6143      	str	r3, [r0, #20]
}
 80066ec:	4770      	bx	lr
 80066ee:	bf00      	nop
 80066f0:	40010000 	.word	0x40010000
 80066f4:	40014000 	.word	0x40014000

080066f8 <HAL_TIM_Base_Init>:
{
 80066f8:	b510      	push	{r4, lr}
  if (htim == NULL)
 80066fa:	4604      	mov	r4, r0
 80066fc:	b330      	cbz	r0, 800674c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80066fe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006702:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006706:	b91b      	cbnz	r3, 8006710 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006708:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800670c:	f7ff fead 	bl	800646a <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006710:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006712:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006714:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006718:	1d21      	adds	r1, r4, #4
 800671a:	f7ff ff87 	bl	800662c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800671e:	2301      	movs	r3, #1
 8006720:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006724:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006726:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800672a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800672e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006732:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006736:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800673a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800673e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006742:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006746:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800674a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800674c:	2001      	movs	r0, #1
 800674e:	e7fc      	b.n	800674a <HAL_TIM_Base_Init+0x52>

08006750 <HAL_TIMEx_CommutCallback>:
 8006750:	4770      	bx	lr

08006752 <HAL_TIMEx_BreakCallback>:
 8006752:	4770      	bx	lr

08006754 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006758:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800675a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800675e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006762:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006766:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800676a:	6809      	ldr	r1, [r1, #0]
 800676c:	2901      	cmp	r1, #1
 800676e:	ea43 0304 	orr.w	r3, r3, r4
 8006772:	4912      	ldr	r1, [pc, #72]	; (80067bc <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8006774:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006776:	d00f      	beq.n	8006798 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006778:	431a      	orrs	r2, r3
 800677a:	432a      	orrs	r2, r5
 800677c:	ea42 0308 	orr.w	r3, r2, r8
 8006780:	ea43 030e 	orr.w	r3, r3, lr
 8006784:	ea43 030c 	orr.w	r3, r3, ip
 8006788:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800678a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800678c:	4333      	orrs	r3, r6
 800678e:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006790:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006792:	2000      	movs	r0, #0
 8006794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006798:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800679a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800679c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800679e:	ea45 0208 	orr.w	r2, r5, r8
 80067a2:	ea42 020e 	orr.w	r2, r2, lr
 80067a6:	ea42 020c 	orr.w	r2, r2, ip
 80067aa:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80067ac:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80067b0:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80067b2:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80067b4:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80067b6:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80067b8:	6042      	str	r2, [r0, #4]
 80067ba:	e7ea      	b.n	8006792 <FMC_SDRAM_Init+0x3e>
 80067bc:	ffff8000 	.word	0xffff8000

080067c0 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80067c0:	68cb      	ldr	r3, [r1, #12]
{
 80067c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067c4:	680c      	ldr	r4, [r1, #0]
 80067c6:	688e      	ldr	r6, [r1, #8]
 80067c8:	690d      	ldr	r5, [r1, #16]
 80067ca:	1e5f      	subs	r7, r3, #1
 80067cc:	694b      	ldr	r3, [r1, #20]
 80067ce:	f104 3cff 	add.w	ip, r4, #4294967295
 80067d2:	684c      	ldr	r4, [r1, #4]
 80067d4:	6989      	ldr	r1, [r1, #24]
 80067d6:	3b01      	subs	r3, #1
 80067d8:	051b      	lsls	r3, r3, #20
 80067da:	3c01      	subs	r4, #1
 80067dc:	3e01      	subs	r6, #1
 80067de:	3d01      	subs	r5, #1
 80067e0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80067e2:	2a01      	cmp	r2, #1
 80067e4:	ea4f 1404 	mov.w	r4, r4, lsl #4
 80067e8:	ea4f 2606 	mov.w	r6, r6, lsl #8
 80067ec:	ea4f 4505 	mov.w	r5, r5, lsl #16
 80067f0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80067f4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 80067f8:	d00c      	beq.n	8006814 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80067fa:	ea43 030c 	orr.w	r3, r3, ip
 80067fe:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006800:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006802:	4333      	orrs	r3, r6
 8006804:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006806:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800680a:	430b      	orrs	r3, r1
 800680c:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800680e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006810:	2000      	movs	r0, #0
 8006812:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006814:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006816:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800681a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800681e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006820:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006822:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006826:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006828:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800682a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800682c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006830:	430a      	orrs	r2, r1
 8006832:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006834:	60c2      	str	r2, [r0, #12]
 8006836:	e7eb      	b.n	8006810 <FMC_SDRAM_Timing_Init+0x50>

08006838 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006838:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800683c:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006840:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8006844:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006848:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800684a:	2300      	movs	r3, #0
 800684c:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800684e:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006850:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006852:	4618      	mov	r0, r3
 8006854:	4770      	bx	lr

08006856 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006856:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006858:	2300      	movs	r3, #0
 800685a:	9301      	str	r3, [sp, #4]
{
 800685c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800685e:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006862:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006864:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006866:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800686a:	688a      	ldr	r2, [r1, #8]
 800686c:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800686e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006872:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006874:	9b01      	ldr	r3, [sp, #4]
 8006876:	6103      	str	r3, [r0, #16]
{
 8006878:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800687a:	f7fd f849 	bl	8003910 <HAL_GetTick>
 800687e:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006880:	69a3      	ldr	r3, [r4, #24]
 8006882:	f013 0320 	ands.w	r3, r3, #32
 8006886:	d101      	bne.n	800688c <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006888:	4618      	mov	r0, r3
 800688a:	e003      	b.n	8006894 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800688c:	1c6b      	adds	r3, r5, #1
 800688e:	d0f7      	beq.n	8006880 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006890:	b915      	cbnz	r5, 8006898 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8006892:	2003      	movs	r0, #3
}
 8006894:	b002      	add	sp, #8
 8006896:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006898:	f7fd f83a 	bl	8003910 <HAL_GetTick>
 800689c:	1b80      	subs	r0, r0, r6
 800689e:	42a8      	cmp	r0, r5
 80068a0:	d9ee      	bls.n	8006880 <FMC_SDRAM_SendCommand+0x2a>
 80068a2:	e7f6      	b.n	8006892 <FMC_SDRAM_SendCommand+0x3c>

080068a4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80068a4:	6943      	ldr	r3, [r0, #20]
 80068a6:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80068aa:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80068ac:	2000      	movs	r0, #0
 80068ae:	4770      	bx	lr

080068b0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80068b0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80068b2:	4b05      	ldr	r3, [pc, #20]	; (80068c8 <SysTick_Handler+0x18>)
 80068b4:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80068b6:	f001 fe4d 	bl	8008554 <xTaskGetSchedulerState>
 80068ba:	2801      	cmp	r0, #1
 80068bc:	d003      	beq.n	80068c6 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80068be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80068c2:	f000 bbdf 	b.w	8007084 <xPortSysTickHandler>
}
 80068c6:	bd08      	pop	{r3, pc}
 80068c8:	e000e010 	.word	0xe000e010

080068cc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80068cc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80068d0:	b92b      	cbnz	r3, 80068de <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80068d2:	4b06      	ldr	r3, [pc, #24]	; (80068ec <osKernelInitialize+0x20>)
 80068d4:	6818      	ldr	r0, [r3, #0]
 80068d6:	b928      	cbnz	r0, 80068e4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80068d8:	2201      	movs	r2, #1
 80068da:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80068dc:	4770      	bx	lr
    stat = osErrorISR;
 80068de:	f06f 0005 	mvn.w	r0, #5
 80068e2:	4770      	bx	lr
    } else {
      stat = osError;
 80068e4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80068e8:	4770      	bx	lr
 80068ea:	bf00      	nop
 80068ec:	200015d4 	.word	0x200015d4

080068f0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80068f0:	b510      	push	{r4, lr}
 80068f2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80068f6:	b95c      	cbnz	r4, 8006910 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80068f8:	4b08      	ldr	r3, [pc, #32]	; (800691c <osKernelStart+0x2c>)
 80068fa:	681a      	ldr	r2, [r3, #0]
 80068fc:	2a01      	cmp	r2, #1
 80068fe:	d10a      	bne.n	8006916 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006900:	4a07      	ldr	r2, [pc, #28]	; (8006920 <osKernelStart+0x30>)
 8006902:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006904:	2202      	movs	r2, #2
 8006906:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006908:	f001 fcca 	bl	80082a0 <vTaskStartScheduler>
      stat = osOK;
 800690c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800690e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006910:	f06f 0005 	mvn.w	r0, #5
 8006914:	e7fb      	b.n	800690e <osKernelStart+0x1e>
      stat = osError;
 8006916:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800691a:	e7f8      	b.n	800690e <osKernelStart+0x1e>
 800691c:	200015d4 	.word	0x200015d4
 8006920:	e000ed00 	.word	0xe000ed00

08006924 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006926:	b087      	sub	sp, #28
 8006928:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800692a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800692c:	460b      	mov	r3, r1
  hTask = NULL;
 800692e:	9205      	str	r2, [sp, #20]
 8006930:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006934:	b9d2      	cbnz	r2, 800696c <osThreadNew+0x48>
 8006936:	b1c8      	cbz	r0, 800696c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006938:	2c00      	cmp	r4, #0
 800693a:	d02f      	beq.n	800699c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800693c:	69a5      	ldr	r5, [r4, #24]
 800693e:	2d00      	cmp	r5, #0
 8006940:	bf08      	it	eq
 8006942:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006944:	1e69      	subs	r1, r5, #1
 8006946:	2937      	cmp	r1, #55	; 0x37
 8006948:	46ac      	mov	ip, r5
 800694a:	d82b      	bhi.n	80069a4 <osThreadNew+0x80>
 800694c:	6861      	ldr	r1, [r4, #4]
 800694e:	07c9      	lsls	r1, r1, #31
 8006950:	d428      	bmi.n	80069a4 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006952:	6966      	ldr	r6, [r4, #20]
 8006954:	b16e      	cbz	r6, 8006972 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006956:	08b2      	lsrs	r2, r6, #2
 8006958:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800695c:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800695e:	b157      	cbz	r7, 8006976 <osThreadNew+0x52>
 8006960:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006964:	d902      	bls.n	800696c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006966:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006968:	b104      	cbz	r4, 800696c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800696a:	b9ee      	cbnz	r6, 80069a8 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800696c:	9805      	ldr	r0, [sp, #20]
}
 800696e:	b007      	add	sp, #28
 8006970:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006972:	2280      	movs	r2, #128	; 0x80
 8006974:	e7f0      	b.n	8006958 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006976:	f1be 0f00 	cmp.w	lr, #0
 800697a:	d1f7      	bne.n	800696c <osThreadNew+0x48>
      if (mem == 0) {
 800697c:	6924      	ldr	r4, [r4, #16]
 800697e:	2c00      	cmp	r4, #0
 8006980:	d1f4      	bne.n	800696c <osThreadNew+0x48>
 8006982:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006984:	a905      	add	r1, sp, #20
 8006986:	e9cd c100 	strd	ip, r1, [sp]
 800698a:	b292      	uxth	r2, r2
 800698c:	4621      	mov	r1, r4
 800698e:	f001 fb01 	bl	8007f94 <xTaskCreate>
 8006992:	2801      	cmp	r0, #1
            hTask = NULL;
 8006994:	bf1c      	itt	ne
 8006996:	2300      	movne	r3, #0
 8006998:	9305      	strne	r3, [sp, #20]
 800699a:	e7e7      	b.n	800696c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800699c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80069a0:	2280      	movs	r2, #128	; 0x80
 80069a2:	e7ef      	b.n	8006984 <osThreadNew+0x60>
        return (NULL);
 80069a4:	4610      	mov	r0, r2
 80069a6:	e7e2      	b.n	800696e <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80069a8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80069ac:	9500      	str	r5, [sp, #0]
 80069ae:	f001 fab9 	bl	8007f24 <xTaskCreateStatic>
 80069b2:	9005      	str	r0, [sp, #20]
 80069b4:	e7da      	b.n	800696c <osThreadNew+0x48>

080069b6 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80069b6:	b510      	push	{r4, lr}
 80069b8:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80069bc:	b924      	cbnz	r4, 80069c8 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80069be:	b110      	cbz	r0, 80069c6 <osDelay+0x10>
      vTaskDelay(ticks);
 80069c0:	f001 fc2e 	bl	8008220 <vTaskDelay>
    stat = osOK;
 80069c4:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 80069c6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80069c8:	f06f 0005 	mvn.w	r0, #5
 80069cc:	e7fb      	b.n	80069c6 <osDelay+0x10>

080069ce <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80069ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80069d0:	4604      	mov	r4, r0
 80069d2:	460e      	mov	r6, r1
 80069d4:	4615      	mov	r5, r2
 80069d6:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80069da:	b11a      	cbz	r2, 80069e4 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80069dc:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80069de:	4620      	mov	r0, r4
 80069e0:	b003      	add	sp, #12
 80069e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80069e4:	2800      	cmp	r0, #0
 80069e6:	d0f9      	beq.n	80069dc <osSemaphoreNew+0xe>
 80069e8:	4288      	cmp	r0, r1
 80069ea:	d3f7      	bcc.n	80069dc <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80069ec:	b1e5      	cbz	r5, 8006a28 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80069ee:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80069f2:	b1bb      	cbz	r3, 8006a24 <osSemaphoreNew+0x56>
 80069f4:	2f4f      	cmp	r7, #79	; 0x4f
 80069f6:	d9f1      	bls.n	80069dc <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80069f8:	2801      	cmp	r0, #1
 80069fa:	d12a      	bne.n	8006a52 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80069fc:	2103      	movs	r1, #3
 80069fe:	9100      	str	r1, [sp, #0]
 8006a00:	4611      	mov	r1, r2
 8006a02:	f000 fcef 	bl	80073e4 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006a06:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006a08:	2800      	cmp	r0, #0
 8006a0a:	d0e7      	beq.n	80069dc <osSemaphoreNew+0xe>
 8006a0c:	b1de      	cbz	r6, 8006a46 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006a0e:	2300      	movs	r3, #0
 8006a10:	461a      	mov	r2, r3
 8006a12:	4619      	mov	r1, r3
 8006a14:	f000 fd9c 	bl	8007550 <xQueueGenericSend>
 8006a18:	2801      	cmp	r0, #1
 8006a1a:	d014      	beq.n	8006a46 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006a1c:	4620      	mov	r0, r4
 8006a1e:	f001 f8dd 	bl	8007bdc <vQueueDelete>
 8006a22:	e7db      	b.n	80069dc <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006a24:	2f00      	cmp	r7, #0
 8006a26:	d1d9      	bne.n	80069dc <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006a28:	2c01      	cmp	r4, #1
 8006a2a:	d105      	bne.n	8006a38 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006a2c:	2203      	movs	r2, #3
 8006a2e:	2100      	movs	r1, #0
 8006a30:	4620      	mov	r0, r4
 8006a32:	f000 fd25 	bl	8007480 <xQueueGenericCreate>
 8006a36:	e7e6      	b.n	8006a06 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006a38:	4620      	mov	r0, r4
 8006a3a:	4631      	mov	r1, r6
 8006a3c:	f000 fd69 	bl	8007512 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006a40:	4604      	mov	r4, r0
 8006a42:	2800      	cmp	r0, #0
 8006a44:	d0ca      	beq.n	80069dc <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006a46:	b955      	cbnz	r5, 8006a5e <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006a48:	4629      	mov	r1, r5
 8006a4a:	4620      	mov	r0, r4
 8006a4c:	f001 f89c 	bl	8007b88 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006a50:	e7c5      	b.n	80069de <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006a52:	461a      	mov	r2, r3
 8006a54:	f000 fd3b 	bl	80074ce <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006a58:	4604      	mov	r4, r0
 8006a5a:	2800      	cmp	r0, #0
 8006a5c:	d0be      	beq.n	80069dc <osSemaphoreNew+0xe>
          name = attr->name;
 8006a5e:	682d      	ldr	r5, [r5, #0]
 8006a60:	e7f2      	b.n	8006a48 <osSemaphoreNew+0x7a>
	...

08006a64 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006a64:	b513      	push	{r0, r1, r4, lr}
 8006a66:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006a68:	b1f8      	cbz	r0, 8006aaa <osSemaphoreAcquire+0x46>
 8006a6a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006a6e:	b1a3      	cbz	r3, 8006a9a <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 8006a70:	b9d9      	cbnz	r1, 8006aaa <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006a72:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006a74:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006a76:	f001 f837 	bl	8007ae8 <xQueueReceiveFromISR>
 8006a7a:	2801      	cmp	r0, #1
 8006a7c:	d112      	bne.n	8006aa4 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006a7e:	9b01      	ldr	r3, [sp, #4]
 8006a80:	b913      	cbnz	r3, 8006a88 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006a82:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006a84:	b002      	add	sp, #8
 8006a86:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006a88:	4b0b      	ldr	r3, [pc, #44]	; (8006ab8 <osSemaphoreAcquire+0x54>)
 8006a8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006a8e:	601a      	str	r2, [r3, #0]
 8006a90:	f3bf 8f4f 	dsb	sy
 8006a94:	f3bf 8f6f 	isb	sy
 8006a98:	e7f3      	b.n	8006a82 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006a9a:	f000 ff61 	bl	8007960 <xQueueSemaphoreTake>
 8006a9e:	2801      	cmp	r0, #1
 8006aa0:	d0ef      	beq.n	8006a82 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006aa2:	b92c      	cbnz	r4, 8006ab0 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8006aa4:	f06f 0002 	mvn.w	r0, #2
 8006aa8:	e7ec      	b.n	8006a84 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006aaa:	f06f 0003 	mvn.w	r0, #3
 8006aae:	e7e9      	b.n	8006a84 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006ab0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006ab4:	e7e6      	b.n	8006a84 <osSemaphoreAcquire+0x20>
 8006ab6:	bf00      	nop
 8006ab8:	e000ed04 	.word	0xe000ed04

08006abc <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006abc:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006abe:	b300      	cbz	r0, 8006b02 <osSemaphoreRelease+0x46>
 8006ac0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006ac4:	b1a3      	cbz	r3, 8006af0 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 8006ac6:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006ac8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006aca:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006acc:	f000 fe54 	bl	8007778 <xQueueGiveFromISR>
 8006ad0:	2801      	cmp	r0, #1
 8006ad2:	d113      	bne.n	8006afc <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006ad4:	9b01      	ldr	r3, [sp, #4]
 8006ad6:	b913      	cbnz	r3, 8006ade <osSemaphoreRelease+0x22>
  stat = osOK;
 8006ad8:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006ada:	b002      	add	sp, #8
 8006adc:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006ade:	4b0a      	ldr	r3, [pc, #40]	; (8006b08 <osSemaphoreRelease+0x4c>)
 8006ae0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006ae4:	601a      	str	r2, [r3, #0]
 8006ae6:	f3bf 8f4f 	dsb	sy
 8006aea:	f3bf 8f6f 	isb	sy
 8006aee:	e7f3      	b.n	8006ad8 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006af0:	461a      	mov	r2, r3
 8006af2:	4619      	mov	r1, r3
 8006af4:	f000 fd2c 	bl	8007550 <xQueueGenericSend>
 8006af8:	2801      	cmp	r0, #1
 8006afa:	d0ed      	beq.n	8006ad8 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006afc:	f06f 0002 	mvn.w	r0, #2
 8006b00:	e7eb      	b.n	8006ada <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006b02:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006b06:	e7e8      	b.n	8006ada <osSemaphoreRelease+0x1e>
 8006b08:	e000ed04 	.word	0xe000ed04

08006b0c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006b0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b0e:	4606      	mov	r6, r0
 8006b10:	460d      	mov	r5, r1
 8006b12:	4614      	mov	r4, r2
 8006b14:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006b18:	b11f      	cbz	r7, 8006b22 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006b1a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006b1c:	4628      	mov	r0, r5
 8006b1e:	b003      	add	sp, #12
 8006b20:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006b22:	2800      	cmp	r0, #0
 8006b24:	d0f9      	beq.n	8006b1a <osMessageQueueNew+0xe>
 8006b26:	2900      	cmp	r1, #0
 8006b28:	d0f7      	beq.n	8006b1a <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006b2a:	b1da      	cbz	r2, 8006b64 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006b2c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006b30:	b183      	cbz	r3, 8006b54 <osMessageQueueNew+0x48>
 8006b32:	2a4f      	cmp	r2, #79	; 0x4f
 8006b34:	d9f1      	bls.n	8006b1a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006b36:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006b38:	2a00      	cmp	r2, #0
 8006b3a:	d0ee      	beq.n	8006b1a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006b3c:	6966      	ldr	r6, [r4, #20]
 8006b3e:	4345      	muls	r5, r0
 8006b40:	42ae      	cmp	r6, r5
 8006b42:	d3ea      	bcc.n	8006b1a <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006b44:	9700      	str	r7, [sp, #0]
 8006b46:	f000 fc4d 	bl	80073e4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006b4a:	4605      	mov	r5, r0
 8006b4c:	2800      	cmp	r0, #0
 8006b4e:	d0e4      	beq.n	8006b1a <osMessageQueueNew+0xe>
        name = attr->name;
 8006b50:	6824      	ldr	r4, [r4, #0]
 8006b52:	e011      	b.n	8006b78 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006b54:	2a00      	cmp	r2, #0
 8006b56:	d1e0      	bne.n	8006b1a <osMessageQueueNew+0xe>
 8006b58:	6923      	ldr	r3, [r4, #16]
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d1dd      	bne.n	8006b1a <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006b5e:	6963      	ldr	r3, [r4, #20]
 8006b60:	2b00      	cmp	r3, #0
 8006b62:	d1da      	bne.n	8006b1a <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006b64:	4629      	mov	r1, r5
 8006b66:	2200      	movs	r2, #0
 8006b68:	4630      	mov	r0, r6
 8006b6a:	f000 fc89 	bl	8007480 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006b6e:	4605      	mov	r5, r0
 8006b70:	2800      	cmp	r0, #0
 8006b72:	d0d2      	beq.n	8006b1a <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006b74:	2c00      	cmp	r4, #0
 8006b76:	d1eb      	bne.n	8006b50 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006b78:	4621      	mov	r1, r4
 8006b7a:	4628      	mov	r0, r5
 8006b7c:	f001 f804 	bl	8007b88 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006b80:	e7cc      	b.n	8006b1c <osMessageQueueNew+0x10>
	...

08006b84 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006b84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006b86:	461c      	mov	r4, r3
 8006b88:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006b8c:	b1b6      	cbz	r6, 8006bbc <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006b8e:	b308      	cbz	r0, 8006bd4 <osMessageQueuePut+0x50>
 8006b90:	b301      	cbz	r1, 8006bd4 <osMessageQueuePut+0x50>
 8006b92:	b9fb      	cbnz	r3, 8006bd4 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006b94:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006b96:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006b98:	f000 fd8c 	bl	80076b4 <xQueueGenericSendFromISR>
 8006b9c:	2801      	cmp	r0, #1
 8006b9e:	d116      	bne.n	8006bce <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006ba0:	9b01      	ldr	r3, [sp, #4]
 8006ba2:	b913      	cbnz	r3, 8006baa <osMessageQueuePut+0x26>
  stat = osOK;
 8006ba4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006ba6:	b002      	add	sp, #8
 8006ba8:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006baa:	4b0d      	ldr	r3, [pc, #52]	; (8006be0 <osMessageQueuePut+0x5c>)
 8006bac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006bb0:	601a      	str	r2, [r3, #0]
 8006bb2:	f3bf 8f4f 	dsb	sy
 8006bb6:	f3bf 8f6f 	isb	sy
 8006bba:	e7f3      	b.n	8006ba4 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006bbc:	b150      	cbz	r0, 8006bd4 <osMessageQueuePut+0x50>
 8006bbe:	b149      	cbz	r1, 8006bd4 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006bc0:	4633      	mov	r3, r6
 8006bc2:	4622      	mov	r2, r4
 8006bc4:	f000 fcc4 	bl	8007550 <xQueueGenericSend>
 8006bc8:	2801      	cmp	r0, #1
 8006bca:	d0eb      	beq.n	8006ba4 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006bcc:	b92c      	cbnz	r4, 8006bda <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8006bce:	f06f 0002 	mvn.w	r0, #2
 8006bd2:	e7e8      	b.n	8006ba6 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006bd4:	f06f 0003 	mvn.w	r0, #3
 8006bd8:	e7e5      	b.n	8006ba6 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006bda:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006bde:	e7e2      	b.n	8006ba6 <osMessageQueuePut+0x22>
 8006be0:	e000ed04 	.word	0xe000ed04

08006be4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006be4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006be6:	461c      	mov	r4, r3
 8006be8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006bec:	b1b3      	cbz	r3, 8006c1c <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006bee:	b300      	cbz	r0, 8006c32 <osMessageQueueGet+0x4e>
 8006bf0:	b1f9      	cbz	r1, 8006c32 <osMessageQueueGet+0x4e>
 8006bf2:	b9f4      	cbnz	r4, 8006c32 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006bf4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006bf6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006bf8:	f000 ff76 	bl	8007ae8 <xQueueReceiveFromISR>
 8006bfc:	2801      	cmp	r0, #1
 8006bfe:	d115      	bne.n	8006c2c <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006c00:	9b01      	ldr	r3, [sp, #4]
 8006c02:	b913      	cbnz	r3, 8006c0a <osMessageQueueGet+0x26>
  stat = osOK;
 8006c04:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006c06:	b003      	add	sp, #12
 8006c08:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006c0a:	4b0d      	ldr	r3, [pc, #52]	; (8006c40 <osMessageQueueGet+0x5c>)
 8006c0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c10:	601a      	str	r2, [r3, #0]
 8006c12:	f3bf 8f4f 	dsb	sy
 8006c16:	f3bf 8f6f 	isb	sy
 8006c1a:	e7f3      	b.n	8006c04 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006c1c:	b148      	cbz	r0, 8006c32 <osMessageQueueGet+0x4e>
 8006c1e:	b141      	cbz	r1, 8006c32 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006c20:	4622      	mov	r2, r4
 8006c22:	f000 fdfd 	bl	8007820 <xQueueReceive>
 8006c26:	2801      	cmp	r0, #1
 8006c28:	d0ec      	beq.n	8006c04 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006c2a:	b92c      	cbnz	r4, 8006c38 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 8006c2c:	f06f 0002 	mvn.w	r0, #2
 8006c30:	e7e9      	b.n	8006c06 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8006c32:	f06f 0003 	mvn.w	r0, #3
 8006c36:	e7e6      	b.n	8006c06 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006c38:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006c3c:	e7e3      	b.n	8006c06 <osMessageQueueGet+0x22>
 8006c3e:	bf00      	nop
 8006c40:	e000ed04 	.word	0xe000ed04

08006c44 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006c44:	4b03      	ldr	r3, [pc, #12]	; (8006c54 <vApplicationGetIdleTaskMemory+0x10>)
 8006c46:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006c48:	4b03      	ldr	r3, [pc, #12]	; (8006c58 <vApplicationGetIdleTaskMemory+0x14>)
 8006c4a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006c4c:	2380      	movs	r3, #128	; 0x80
 8006c4e:	6013      	str	r3, [r2, #0]
}
 8006c50:	4770      	bx	lr
 8006c52:	bf00      	nop
 8006c54:	20001574 	.word	0x20001574
 8006c58:	20001374 	.word	0x20001374

08006c5c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006c5c:	4b03      	ldr	r3, [pc, #12]	; (8006c6c <vApplicationGetTimerTaskMemory+0x10>)
 8006c5e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006c60:	4b03      	ldr	r3, [pc, #12]	; (8006c70 <vApplicationGetTimerTaskMemory+0x14>)
 8006c62:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006c64:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006c68:	6013      	str	r3, [r2, #0]
}
 8006c6a:	4770      	bx	lr
 8006c6c:	200019d8 	.word	0x200019d8
 8006c70:	200015d8 	.word	0x200015d8

08006c74 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006c74:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006c76:	4b0f      	ldr	r3, [pc, #60]	; (8006cb4 <prvInsertBlockIntoFreeList+0x40>)
 8006c78:	461a      	mov	r2, r3
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	4283      	cmp	r3, r0
 8006c7e:	d3fb      	bcc.n	8006c78 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006c80:	6854      	ldr	r4, [r2, #4]
 8006c82:	1911      	adds	r1, r2, r4
 8006c84:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006c86:	bf01      	itttt	eq
 8006c88:	6841      	ldreq	r1, [r0, #4]
 8006c8a:	4610      	moveq	r0, r2
 8006c8c:	1909      	addeq	r1, r1, r4
 8006c8e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006c90:	6844      	ldr	r4, [r0, #4]
 8006c92:	1901      	adds	r1, r0, r4
 8006c94:	428b      	cmp	r3, r1
 8006c96:	d107      	bne.n	8006ca8 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006c98:	4907      	ldr	r1, [pc, #28]	; (8006cb8 <prvInsertBlockIntoFreeList+0x44>)
 8006c9a:	6809      	ldr	r1, [r1, #0]
 8006c9c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006c9e:	bf1f      	itttt	ne
 8006ca0:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006ca2:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006ca4:	1909      	addne	r1, r1, r4
 8006ca6:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006ca8:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006caa:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006cac:	bf18      	it	ne
 8006cae:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006cb0:	bd10      	pop	{r4, pc}
 8006cb2:	bf00      	nop
 8006cb4:	20009a50 	.word	0x20009a50
 8006cb8:	20001a38 	.word	0x20001a38

08006cbc <pvPortMalloc>:
{
 8006cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006cc0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006cc2:	f001 f995 	bl	8007ff0 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006cc6:	4b3e      	ldr	r3, [pc, #248]	; (8006dc0 <pvPortMalloc+0x104>)
 8006cc8:	483e      	ldr	r0, [pc, #248]	; (8006dc4 <pvPortMalloc+0x108>)
 8006cca:	681a      	ldr	r2, [r3, #0]
 8006ccc:	469c      	mov	ip, r3
 8006cce:	b9d2      	cbnz	r2, 8006d06 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8006cd0:	4a3d      	ldr	r2, [pc, #244]	; (8006dc8 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006cd2:	4b3e      	ldr	r3, [pc, #248]	; (8006dcc <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006cd4:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006cd6:	bf1c      	itt	ne
 8006cd8:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006cda:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006cde:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006ce0:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8006ce2:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8006ce4:	4b3a      	ldr	r3, [pc, #232]	; (8006dd0 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006ce6:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8006cea:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006cee:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006cf0:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8006cf4:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006cf8:	4b36      	ldr	r3, [pc, #216]	; (8006dd4 <pvPortMalloc+0x118>)
 8006cfa:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006cfc:	4b36      	ldr	r3, [pc, #216]	; (8006dd8 <pvPortMalloc+0x11c>)
 8006cfe:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006d00:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006d04:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006d06:	6807      	ldr	r7, [r0, #0]
 8006d08:	4227      	tst	r7, r4
 8006d0a:	d153      	bne.n	8006db4 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8006d0c:	2c00      	cmp	r4, #0
 8006d0e:	d044      	beq.n	8006d9a <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 8006d10:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006d14:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006d16:	bf1c      	itt	ne
 8006d18:	f023 0307 	bicne.w	r3, r3, #7
 8006d1c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006d1e:	2b00      	cmp	r3, #0
 8006d20:	d048      	beq.n	8006db4 <pvPortMalloc+0xf8>
 8006d22:	4a2d      	ldr	r2, [pc, #180]	; (8006dd8 <pvPortMalloc+0x11c>)
 8006d24:	6816      	ldr	r6, [r2, #0]
 8006d26:	429e      	cmp	r6, r3
 8006d28:	4690      	mov	r8, r2
 8006d2a:	d343      	bcc.n	8006db4 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 8006d2c:	4a27      	ldr	r2, [pc, #156]	; (8006dcc <pvPortMalloc+0x110>)
 8006d2e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006d30:	6869      	ldr	r1, [r5, #4]
 8006d32:	4299      	cmp	r1, r3
 8006d34:	d201      	bcs.n	8006d3a <pvPortMalloc+0x7e>
 8006d36:	6828      	ldr	r0, [r5, #0]
 8006d38:	b9a8      	cbnz	r0, 8006d66 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 8006d3a:	f8dc 0000 	ldr.w	r0, [ip]
 8006d3e:	42a8      	cmp	r0, r5
 8006d40:	d038      	beq.n	8006db4 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006d42:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006d44:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006d46:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006d48:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006d4a:	2910      	cmp	r1, #16
 8006d4c:	d912      	bls.n	8006d74 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006d4e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006d50:	0742      	lsls	r2, r0, #29
 8006d52:	d00b      	beq.n	8006d6c <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006d54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d58:	f383 8811 	msr	BASEPRI, r3
 8006d5c:	f3bf 8f6f 	isb	sy
 8006d60:	f3bf 8f4f 	dsb	sy
 8006d64:	e7fe      	b.n	8006d64 <pvPortMalloc+0xa8>
 8006d66:	462a      	mov	r2, r5
 8006d68:	4605      	mov	r5, r0
 8006d6a:	e7e1      	b.n	8006d30 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006d6c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006d6e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006d70:	f7ff ff80 	bl	8006c74 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d74:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d76:	4917      	ldr	r1, [pc, #92]	; (8006dd4 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 8006d78:	4a18      	ldr	r2, [pc, #96]	; (8006ddc <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d7a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d7c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006d7e:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8006d80:	2300      	movs	r3, #0
 8006d82:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8006d84:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d86:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d8a:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8006d8c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006d90:	bf38      	it	cc
 8006d92:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006d94:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006d96:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8006d98:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8006d9a:	f001 f9cd 	bl	8008138 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006d9e:	0763      	lsls	r3, r4, #29
 8006da0:	d00a      	beq.n	8006db8 <pvPortMalloc+0xfc>
 8006da2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006da6:	f383 8811 	msr	BASEPRI, r3
 8006daa:	f3bf 8f6f 	isb	sy
 8006dae:	f3bf 8f4f 	dsb	sy
 8006db2:	e7fe      	b.n	8006db2 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 8006db4:	2400      	movs	r4, #0
 8006db6:	e7f0      	b.n	8006d9a <pvPortMalloc+0xde>
}
 8006db8:	4620      	mov	r0, r4
 8006dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006dbe:	bf00      	nop
 8006dc0:	20001a38 	.word	0x20001a38
 8006dc4:	20009a3c 	.word	0x20009a3c
 8006dc8:	20001a3c 	.word	0x20001a3c
 8006dcc:	20009a50 	.word	0x20009a50
 8006dd0:	20009a34 	.word	0x20009a34
 8006dd4:	20009a44 	.word	0x20009a44
 8006dd8:	20009a40 	.word	0x20009a40
 8006ddc:	20009a48 	.word	0x20009a48

08006de0 <vPortFree>:
{
 8006de0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006de2:	4604      	mov	r4, r0
 8006de4:	b390      	cbz	r0, 8006e4c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006de6:	4a1a      	ldr	r2, [pc, #104]	; (8006e50 <vPortFree+0x70>)
 8006de8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006dec:	6812      	ldr	r2, [r2, #0]
 8006dee:	4213      	tst	r3, r2
 8006df0:	d108      	bne.n	8006e04 <vPortFree+0x24>
 8006df2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006df6:	f383 8811 	msr	BASEPRI, r3
 8006dfa:	f3bf 8f6f 	isb	sy
 8006dfe:	f3bf 8f4f 	dsb	sy
 8006e02:	e7fe      	b.n	8006e02 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006e04:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006e08:	b141      	cbz	r1, 8006e1c <vPortFree+0x3c>
 8006e0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e0e:	f383 8811 	msr	BASEPRI, r3
 8006e12:	f3bf 8f6f 	isb	sy
 8006e16:	f3bf 8f4f 	dsb	sy
 8006e1a:	e7fe      	b.n	8006e1a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006e1c:	ea23 0302 	bic.w	r3, r3, r2
 8006e20:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006e24:	f001 f8e4 	bl	8007ff0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006e28:	4a0a      	ldr	r2, [pc, #40]	; (8006e54 <vPortFree+0x74>)
 8006e2a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006e2e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006e30:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006e34:	440b      	add	r3, r1
 8006e36:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006e38:	f7ff ff1c 	bl	8006c74 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8006e3c:	4a06      	ldr	r2, [pc, #24]	; (8006e58 <vPortFree+0x78>)
 8006e3e:	6813      	ldr	r3, [r2, #0]
}
 8006e40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8006e44:	3301      	adds	r3, #1
 8006e46:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8006e48:	f001 b976 	b.w	8008138 <xTaskResumeAll>
}
 8006e4c:	bd10      	pop	{r4, pc}
 8006e4e:	bf00      	nop
 8006e50:	20009a3c 	.word	0x20009a3c
 8006e54:	20009a40 	.word	0x20009a40
 8006e58:	20009a4c 	.word	0x20009a4c

08006e5c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e5c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006e60:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e64:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e68:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e6a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006e70:	4770      	bx	lr

08006e72 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006e72:	2300      	movs	r3, #0
 8006e74:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006e76:	4770      	bx	lr

08006e78 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006e78:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006e7a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006e7c:	689a      	ldr	r2, [r3, #8]
 8006e7e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006e80:	689a      	ldr	r2, [r3, #8]
 8006e82:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006e84:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006e86:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006e88:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006e8a:	3301      	adds	r3, #1
 8006e8c:	6003      	str	r3, [r0, #0]
}
 8006e8e:	4770      	bx	lr

08006e90 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8006e90:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006e92:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006e94:	1c63      	adds	r3, r4, #1
 8006e96:	d10a      	bne.n	8006eae <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006e98:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006e9a:	685a      	ldr	r2, [r3, #4]
 8006e9c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006e9e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006ea0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006ea2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006ea4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006ea6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006ea8:	3301      	adds	r3, #1
 8006eaa:	6003      	str	r3, [r0, #0]
}
 8006eac:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006eae:	f100 0208 	add.w	r2, r0, #8
 8006eb2:	4613      	mov	r3, r2
 8006eb4:	6852      	ldr	r2, [r2, #4]
 8006eb6:	6815      	ldr	r5, [r2, #0]
 8006eb8:	42a5      	cmp	r5, r4
 8006eba:	d9fa      	bls.n	8006eb2 <vListInsert+0x22>
 8006ebc:	e7ed      	b.n	8006e9a <vListInsert+0xa>

08006ebe <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006ebe:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8006ec2:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006ec4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8006ec6:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8006ec8:	6859      	ldr	r1, [r3, #4]
 8006eca:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8006ecc:	bf08      	it	eq
 8006ece:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8006ed0:	2200      	movs	r2, #0
 8006ed2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8006ed4:	681a      	ldr	r2, [r3, #0]
 8006ed6:	3a01      	subs	r2, #1
 8006ed8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8006eda:	6818      	ldr	r0, [r3, #0]
}
 8006edc:	4770      	bx	lr
	...

08006ee0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006ee0:	4808      	ldr	r0, [pc, #32]	; (8006f04 <prvPortStartFirstTask+0x24>)
 8006ee2:	6800      	ldr	r0, [r0, #0]
 8006ee4:	6800      	ldr	r0, [r0, #0]
 8006ee6:	f380 8808 	msr	MSP, r0
 8006eea:	f04f 0000 	mov.w	r0, #0
 8006eee:	f380 8814 	msr	CONTROL, r0
 8006ef2:	b662      	cpsie	i
 8006ef4:	b661      	cpsie	f
 8006ef6:	f3bf 8f4f 	dsb	sy
 8006efa:	f3bf 8f6f 	isb	sy
 8006efe:	df00      	svc	0
 8006f00:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8006f02:	0000      	.short	0x0000
 8006f04:	e000ed08 	.word	0xe000ed08

08006f08 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006f08:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006f18 <vPortEnableVFP+0x10>
 8006f0c:	6801      	ldr	r1, [r0, #0]
 8006f0e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006f12:	6001      	str	r1, [r0, #0]
 8006f14:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8006f16:	0000      	.short	0x0000
 8006f18:	e000ed88 	.word	0xe000ed88

08006f1c <prvTaskExitError>:
{
 8006f1c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006f1e:	2300      	movs	r3, #0
 8006f20:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8006f22:	4b0d      	ldr	r3, [pc, #52]	; (8006f58 <prvTaskExitError+0x3c>)
 8006f24:	681b      	ldr	r3, [r3, #0]
 8006f26:	3301      	adds	r3, #1
 8006f28:	d008      	beq.n	8006f3c <prvTaskExitError+0x20>
 8006f2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f2e:	f383 8811 	msr	BASEPRI, r3
 8006f32:	f3bf 8f6f 	isb	sy
 8006f36:	f3bf 8f4f 	dsb	sy
 8006f3a:	e7fe      	b.n	8006f3a <prvTaskExitError+0x1e>
 8006f3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f40:	f383 8811 	msr	BASEPRI, r3
 8006f44:	f3bf 8f6f 	isb	sy
 8006f48:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8006f4c:	9b01      	ldr	r3, [sp, #4]
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d0fc      	beq.n	8006f4c <prvTaskExitError+0x30>
}
 8006f52:	b002      	add	sp, #8
 8006f54:	4770      	bx	lr
 8006f56:	bf00      	nop
 8006f58:	2000005c 	.word	0x2000005c

08006f5c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8006f5c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006f60:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006f64:	4b07      	ldr	r3, [pc, #28]	; (8006f84 <pxPortInitialiseStack+0x28>)
 8006f66:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006f6a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006f6e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006f72:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006f76:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006f7a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8006f7e:	3844      	subs	r0, #68	; 0x44
 8006f80:	4770      	bx	lr
 8006f82:	bf00      	nop
 8006f84:	08006f1d 	.word	0x08006f1d
	...

08006f90 <SVC_Handler>:
	__asm volatile (
 8006f90:	4b07      	ldr	r3, [pc, #28]	; (8006fb0 <pxCurrentTCBConst2>)
 8006f92:	6819      	ldr	r1, [r3, #0]
 8006f94:	6808      	ldr	r0, [r1, #0]
 8006f96:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f9a:	f380 8809 	msr	PSP, r0
 8006f9e:	f3bf 8f6f 	isb	sy
 8006fa2:	f04f 0000 	mov.w	r0, #0
 8006fa6:	f380 8811 	msr	BASEPRI, r0
 8006faa:	4770      	bx	lr
 8006fac:	f3af 8000 	nop.w

08006fb0 <pxCurrentTCBConst2>:
 8006fb0:	20009a60 	.word	0x20009a60

08006fb4 <vPortEnterCritical>:
 8006fb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fb8:	f383 8811 	msr	BASEPRI, r3
 8006fbc:	f3bf 8f6f 	isb	sy
 8006fc0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8006fc4:	4a0a      	ldr	r2, [pc, #40]	; (8006ff0 <vPortEnterCritical+0x3c>)
 8006fc6:	6813      	ldr	r3, [r2, #0]
 8006fc8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8006fca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8006fcc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8006fce:	d10d      	bne.n	8006fec <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8006fd0:	4b08      	ldr	r3, [pc, #32]	; (8006ff4 <vPortEnterCritical+0x40>)
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006fd8:	d008      	beq.n	8006fec <vPortEnterCritical+0x38>
 8006fda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fde:	f383 8811 	msr	BASEPRI, r3
 8006fe2:	f3bf 8f6f 	isb	sy
 8006fe6:	f3bf 8f4f 	dsb	sy
 8006fea:	e7fe      	b.n	8006fea <vPortEnterCritical+0x36>
}
 8006fec:	4770      	bx	lr
 8006fee:	bf00      	nop
 8006ff0:	2000005c 	.word	0x2000005c
 8006ff4:	e000ed04 	.word	0xe000ed04

08006ff8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8006ff8:	4a08      	ldr	r2, [pc, #32]	; (800701c <vPortExitCritical+0x24>)
 8006ffa:	6813      	ldr	r3, [r2, #0]
 8006ffc:	b943      	cbnz	r3, 8007010 <vPortExitCritical+0x18>
 8006ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007002:	f383 8811 	msr	BASEPRI, r3
 8007006:	f3bf 8f6f 	isb	sy
 800700a:	f3bf 8f4f 	dsb	sy
 800700e:	e7fe      	b.n	800700e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007010:	3b01      	subs	r3, #1
 8007012:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007014:	b90b      	cbnz	r3, 800701a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007016:	f383 8811 	msr	BASEPRI, r3
}
 800701a:	4770      	bx	lr
 800701c:	2000005c 	.word	0x2000005c

08007020 <PendSV_Handler>:
	__asm volatile
 8007020:	f3ef 8009 	mrs	r0, PSP
 8007024:	f3bf 8f6f 	isb	sy
 8007028:	4b15      	ldr	r3, [pc, #84]	; (8007080 <pxCurrentTCBConst>)
 800702a:	681a      	ldr	r2, [r3, #0]
 800702c:	f01e 0f10 	tst.w	lr, #16
 8007030:	bf08      	it	eq
 8007032:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007036:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800703a:	6010      	str	r0, [r2, #0]
 800703c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007040:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007044:	f380 8811 	msr	BASEPRI, r0
 8007048:	f3bf 8f4f 	dsb	sy
 800704c:	f3bf 8f6f 	isb	sy
 8007050:	f001 f970 	bl	8008334 <vTaskSwitchContext>
 8007054:	f04f 0000 	mov.w	r0, #0
 8007058:	f380 8811 	msr	BASEPRI, r0
 800705c:	bc09      	pop	{r0, r3}
 800705e:	6819      	ldr	r1, [r3, #0]
 8007060:	6808      	ldr	r0, [r1, #0]
 8007062:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007066:	f01e 0f10 	tst.w	lr, #16
 800706a:	bf08      	it	eq
 800706c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007070:	f380 8809 	msr	PSP, r0
 8007074:	f3bf 8f6f 	isb	sy
 8007078:	4770      	bx	lr
 800707a:	bf00      	nop
 800707c:	f3af 8000 	nop.w

08007080 <pxCurrentTCBConst>:
 8007080:	20009a60 	.word	0x20009a60

08007084 <xPortSysTickHandler>:
{
 8007084:	b508      	push	{r3, lr}
	__asm volatile
 8007086:	f04f 0350 	mov.w	r3, #80	; 0x50
 800708a:	f383 8811 	msr	BASEPRI, r3
 800708e:	f3bf 8f6f 	isb	sy
 8007092:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007096:	f000 ffb9 	bl	800800c <xTaskIncrementTick>
 800709a:	b118      	cbz	r0, 80070a4 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800709c:	4b03      	ldr	r3, [pc, #12]	; (80070ac <xPortSysTickHandler+0x28>)
 800709e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80070a2:	601a      	str	r2, [r3, #0]
	__asm volatile
 80070a4:	2300      	movs	r3, #0
 80070a6:	f383 8811 	msr	BASEPRI, r3
}
 80070aa:	bd08      	pop	{r3, pc}
 80070ac:	e000ed04 	.word	0xe000ed04

080070b0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80070b0:	4a08      	ldr	r2, [pc, #32]	; (80070d4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80070b2:	4909      	ldr	r1, [pc, #36]	; (80070d8 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80070b4:	2300      	movs	r3, #0
 80070b6:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80070b8:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80070ba:	4b08      	ldr	r3, [pc, #32]	; (80070dc <vPortSetupTimerInterrupt+0x2c>)
 80070bc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	fbb3 f3f1 	udiv	r3, r3, r1
 80070c6:	4906      	ldr	r1, [pc, #24]	; (80070e0 <vPortSetupTimerInterrupt+0x30>)
 80070c8:	3b01      	subs	r3, #1
 80070ca:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80070cc:	2307      	movs	r3, #7
 80070ce:	6013      	str	r3, [r2, #0]
}
 80070d0:	4770      	bx	lr
 80070d2:	bf00      	nop
 80070d4:	e000e010 	.word	0xe000e010
 80070d8:	e000e018 	.word	0xe000e018
 80070dc:	20000050 	.word	0x20000050
 80070e0:	e000e014 	.word	0xe000e014

080070e4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80070e4:	4b38      	ldr	r3, [pc, #224]	; (80071c8 <xPortStartScheduler+0xe4>)
 80070e6:	4a39      	ldr	r2, [pc, #228]	; (80071cc <xPortStartScheduler+0xe8>)
{
 80070e8:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80070ea:	6819      	ldr	r1, [r3, #0]
 80070ec:	4291      	cmp	r1, r2
 80070ee:	d108      	bne.n	8007102 <xPortStartScheduler+0x1e>
	__asm volatile
 80070f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070f4:	f383 8811 	msr	BASEPRI, r3
 80070f8:	f3bf 8f6f 	isb	sy
 80070fc:	f3bf 8f4f 	dsb	sy
 8007100:	e7fe      	b.n	8007100 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007102:	681a      	ldr	r2, [r3, #0]
 8007104:	4b32      	ldr	r3, [pc, #200]	; (80071d0 <xPortStartScheduler+0xec>)
 8007106:	429a      	cmp	r2, r3
 8007108:	d108      	bne.n	800711c <xPortStartScheduler+0x38>
 800710a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800710e:	f383 8811 	msr	BASEPRI, r3
 8007112:	f3bf 8f6f 	isb	sy
 8007116:	f3bf 8f4f 	dsb	sy
 800711a:	e7fe      	b.n	800711a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800711c:	4b2d      	ldr	r3, [pc, #180]	; (80071d4 <xPortStartScheduler+0xf0>)
 800711e:	781a      	ldrb	r2, [r3, #0]
 8007120:	b2d2      	uxtb	r2, r2
 8007122:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007124:	22ff      	movs	r2, #255	; 0xff
 8007126:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007128:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800712a:	4a2b      	ldr	r2, [pc, #172]	; (80071d8 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800712c:	b2db      	uxtb	r3, r3
 800712e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007132:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007136:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800713a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800713c:	4a27      	ldr	r2, [pc, #156]	; (80071dc <xPortStartScheduler+0xf8>)
 800713e:	2307      	movs	r3, #7
 8007140:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007142:	2100      	movs	r1, #0
 8007144:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007148:	0600      	lsls	r0, r0, #24
 800714a:	f103 34ff 	add.w	r4, r3, #4294967295
 800714e:	d40c      	bmi.n	800716a <xPortStartScheduler+0x86>
 8007150:	b111      	cbz	r1, 8007158 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007152:	2b03      	cmp	r3, #3
 8007154:	6013      	str	r3, [r2, #0]
 8007156:	d011      	beq.n	800717c <xPortStartScheduler+0x98>
 8007158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800715c:	f383 8811 	msr	BASEPRI, r3
 8007160:	f3bf 8f6f 	isb	sy
 8007164:	f3bf 8f4f 	dsb	sy
 8007168:	e7fe      	b.n	8007168 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800716a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800716e:	005b      	lsls	r3, r3, #1
 8007170:	b2db      	uxtb	r3, r3
 8007172:	f88d 3003 	strb.w	r3, [sp, #3]
 8007176:	2101      	movs	r1, #1
 8007178:	4623      	mov	r3, r4
 800717a:	e7e3      	b.n	8007144 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800717c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007180:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007182:	9b01      	ldr	r3, [sp, #4]
 8007184:	4a13      	ldr	r2, [pc, #76]	; (80071d4 <xPortStartScheduler+0xf0>)
 8007186:	b2db      	uxtb	r3, r3
 8007188:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800718a:	4b15      	ldr	r3, [pc, #84]	; (80071e0 <xPortStartScheduler+0xfc>)
 800718c:	681a      	ldr	r2, [r3, #0]
 800718e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007192:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007194:	681a      	ldr	r2, [r3, #0]
 8007196:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800719a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800719c:	f7ff ff88 	bl	80070b0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80071a0:	4b10      	ldr	r3, [pc, #64]	; (80071e4 <xPortStartScheduler+0x100>)
 80071a2:	2400      	movs	r4, #0
 80071a4:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 80071a6:	f7ff feaf 	bl	8006f08 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80071aa:	4a0f      	ldr	r2, [pc, #60]	; (80071e8 <xPortStartScheduler+0x104>)
 80071ac:	6813      	ldr	r3, [r2, #0]
 80071ae:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80071b2:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 80071b4:	f7ff fe94 	bl	8006ee0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80071b8:	f001 f8bc 	bl	8008334 <vTaskSwitchContext>
	prvTaskExitError();
 80071bc:	f7ff feae 	bl	8006f1c <prvTaskExitError>
}
 80071c0:	4620      	mov	r0, r4
 80071c2:	b002      	add	sp, #8
 80071c4:	bd10      	pop	{r4, pc}
 80071c6:	bf00      	nop
 80071c8:	e000ed00 	.word	0xe000ed00
 80071cc:	410fc271 	.word	0x410fc271
 80071d0:	410fc270 	.word	0x410fc270
 80071d4:	e000e400 	.word	0xe000e400
 80071d8:	20009a58 	.word	0x20009a58
 80071dc:	20009a5c 	.word	0x20009a5c
 80071e0:	e000ed20 	.word	0xe000ed20
 80071e4:	2000005c 	.word	0x2000005c
 80071e8:	e000ef34 	.word	0xe000ef34

080071ec <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80071ec:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80071f0:	2b0f      	cmp	r3, #15
 80071f2:	d90e      	bls.n	8007212 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80071f4:	4a10      	ldr	r2, [pc, #64]	; (8007238 <vPortValidateInterruptPriority+0x4c>)
 80071f6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80071f8:	4a10      	ldr	r2, [pc, #64]	; (800723c <vPortValidateInterruptPriority+0x50>)
 80071fa:	7812      	ldrb	r2, [r2, #0]
 80071fc:	429a      	cmp	r2, r3
 80071fe:	d908      	bls.n	8007212 <vPortValidateInterruptPriority+0x26>
 8007200:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007204:	f383 8811 	msr	BASEPRI, r3
 8007208:	f3bf 8f6f 	isb	sy
 800720c:	f3bf 8f4f 	dsb	sy
 8007210:	e7fe      	b.n	8007210 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007212:	4b0b      	ldr	r3, [pc, #44]	; (8007240 <vPortValidateInterruptPriority+0x54>)
 8007214:	4a0b      	ldr	r2, [pc, #44]	; (8007244 <vPortValidateInterruptPriority+0x58>)
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	6812      	ldr	r2, [r2, #0]
 800721a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800721e:	4293      	cmp	r3, r2
 8007220:	d908      	bls.n	8007234 <vPortValidateInterruptPriority+0x48>
 8007222:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007226:	f383 8811 	msr	BASEPRI, r3
 800722a:	f3bf 8f6f 	isb	sy
 800722e:	f3bf 8f4f 	dsb	sy
 8007232:	e7fe      	b.n	8007232 <vPortValidateInterruptPriority+0x46>
	}
 8007234:	4770      	bx	lr
 8007236:	bf00      	nop
 8007238:	e000e3f0 	.word	0xe000e3f0
 800723c:	20009a58 	.word	0x20009a58
 8007240:	e000ed0c 	.word	0xe000ed0c
 8007244:	20009a5c 	.word	0x20009a5c

08007248 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007248:	b510      	push	{r4, lr}
 800724a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800724c:	f7ff feb2 	bl	8006fb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007250:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007252:	f7ff fed1 	bl	8006ff8 <vPortExitCritical>

	return xReturn;
}
 8007256:	fab4 f084 	clz	r0, r4
 800725a:	0940      	lsrs	r0, r0, #5
 800725c:	bd10      	pop	{r4, pc}

0800725e <prvCopyDataToQueue>:
{
 800725e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007260:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007262:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007264:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007266:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007268:	b952      	cbnz	r2, 8007280 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800726a:	6807      	ldr	r7, [r0, #0]
 800726c:	bb47      	cbnz	r7, 80072c0 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800726e:	6880      	ldr	r0, [r0, #8]
 8007270:	f001 f9c2 	bl	80085f8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007274:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007276:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007278:	3601      	adds	r6, #1
 800727a:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800727c:	4628      	mov	r0, r5
 800727e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007280:	b965      	cbnz	r5, 800729c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007282:	6840      	ldr	r0, [r0, #4]
 8007284:	f013 f916 	bl	801a4b4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007288:	6863      	ldr	r3, [r4, #4]
 800728a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800728c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800728e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007290:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007292:	4293      	cmp	r3, r2
 8007294:	d3f0      	bcc.n	8007278 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007296:	6823      	ldr	r3, [r4, #0]
 8007298:	6063      	str	r3, [r4, #4]
 800729a:	e7ed      	b.n	8007278 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800729c:	68c0      	ldr	r0, [r0, #12]
 800729e:	f013 f909 	bl	801a4b4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80072a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80072a4:	68e3      	ldr	r3, [r4, #12]
 80072a6:	4251      	negs	r1, r2
 80072a8:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80072aa:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80072ac:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80072ae:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80072b0:	bf3e      	ittt	cc
 80072b2:	68a3      	ldrcc	r3, [r4, #8]
 80072b4:	185b      	addcc	r3, r3, r1
 80072b6:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80072b8:	2d02      	cmp	r5, #2
 80072ba:	d101      	bne.n	80072c0 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80072bc:	b116      	cbz	r6, 80072c4 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 80072be:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 80072c0:	2500      	movs	r5, #0
 80072c2:	e7d9      	b.n	8007278 <prvCopyDataToQueue+0x1a>
 80072c4:	4635      	mov	r5, r6
 80072c6:	e7d7      	b.n	8007278 <prvCopyDataToQueue+0x1a>

080072c8 <prvCopyDataFromQueue>:
{
 80072c8:	4603      	mov	r3, r0
 80072ca:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80072cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80072ce:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80072d0:	b16a      	cbz	r2, 80072ee <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80072d2:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80072d4:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80072d6:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80072d8:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80072da:	bf28      	it	cs
 80072dc:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80072de:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80072e0:	bf28      	it	cs
 80072e2:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80072e4:	68d9      	ldr	r1, [r3, #12]
}
 80072e6:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80072ea:	f013 b8e3 	b.w	801a4b4 <memcpy>
}
 80072ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80072f2:	4770      	bx	lr

080072f4 <prvUnlockQueue>:
{
 80072f4:	b570      	push	{r4, r5, r6, lr}
 80072f6:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80072f8:	f7ff fe5c 	bl	8006fb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80072fc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007300:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007304:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007306:	2d00      	cmp	r5, #0
 8007308:	dc14      	bgt.n	8007334 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800730a:	23ff      	movs	r3, #255	; 0xff
 800730c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007310:	f7ff fe72 	bl	8006ff8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007314:	f7ff fe4e 	bl	8006fb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007318:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800731c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007320:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007322:	2d00      	cmp	r5, #0
 8007324:	dc12      	bgt.n	800734c <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007326:	23ff      	movs	r3, #255	; 0xff
 8007328:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800732c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007330:	f7ff be62 	b.w	8006ff8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007334:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007336:	2b00      	cmp	r3, #0
 8007338:	d0e7      	beq.n	800730a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800733a:	4630      	mov	r0, r6
 800733c:	f001 f878 	bl	8008430 <xTaskRemoveFromEventList>
 8007340:	b108      	cbz	r0, 8007346 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007342:	f001 f901 	bl	8008548 <vTaskMissedYield>
			--cTxLock;
 8007346:	3d01      	subs	r5, #1
 8007348:	b26d      	sxtb	r5, r5
 800734a:	e7dc      	b.n	8007306 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800734c:	6923      	ldr	r3, [r4, #16]
 800734e:	2b00      	cmp	r3, #0
 8007350:	d0e9      	beq.n	8007326 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007352:	4630      	mov	r0, r6
 8007354:	f001 f86c 	bl	8008430 <xTaskRemoveFromEventList>
 8007358:	b108      	cbz	r0, 800735e <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800735a:	f001 f8f5 	bl	8008548 <vTaskMissedYield>
				--cRxLock;
 800735e:	3d01      	subs	r5, #1
 8007360:	b26d      	sxtb	r5, r5
 8007362:	e7de      	b.n	8007322 <prvUnlockQueue+0x2e>

08007364 <xQueueGenericReset>:
{
 8007364:	b538      	push	{r3, r4, r5, lr}
 8007366:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007368:	4604      	mov	r4, r0
 800736a:	b940      	cbnz	r0, 800737e <xQueueGenericReset+0x1a>
 800736c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007370:	f383 8811 	msr	BASEPRI, r3
 8007374:	f3bf 8f6f 	isb	sy
 8007378:	f3bf 8f4f 	dsb	sy
 800737c:	e7fe      	b.n	800737c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800737e:	f7ff fe19 	bl	8006fb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007382:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007386:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007388:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800738a:	434b      	muls	r3, r1
 800738c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800738e:	1a5b      	subs	r3, r3, r1
 8007390:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007392:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007394:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007396:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007398:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800739a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800739c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80073a0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80073a4:	b995      	cbnz	r5, 80073cc <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80073a6:	6923      	ldr	r3, [r4, #16]
 80073a8:	b163      	cbz	r3, 80073c4 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80073aa:	f104 0010 	add.w	r0, r4, #16
 80073ae:	f001 f83f 	bl	8008430 <xTaskRemoveFromEventList>
 80073b2:	b138      	cbz	r0, 80073c4 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 80073b4:	4b0a      	ldr	r3, [pc, #40]	; (80073e0 <xQueueGenericReset+0x7c>)
 80073b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80073ba:	601a      	str	r2, [r3, #0]
 80073bc:	f3bf 8f4f 	dsb	sy
 80073c0:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80073c4:	f7ff fe18 	bl	8006ff8 <vPortExitCritical>
}
 80073c8:	2001      	movs	r0, #1
 80073ca:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80073cc:	f104 0010 	add.w	r0, r4, #16
 80073d0:	f7ff fd44 	bl	8006e5c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80073d4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80073d8:	f7ff fd40 	bl	8006e5c <vListInitialise>
 80073dc:	e7f2      	b.n	80073c4 <xQueueGenericReset+0x60>
 80073de:	bf00      	nop
 80073e0:	e000ed04 	.word	0xe000ed04

080073e4 <xQueueGenericCreateStatic>:
	{
 80073e4:	b513      	push	{r0, r1, r4, lr}
 80073e6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80073e8:	b940      	cbnz	r0, 80073fc <xQueueGenericCreateStatic+0x18>
 80073ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ee:	f383 8811 	msr	BASEPRI, r3
 80073f2:	f3bf 8f6f 	isb	sy
 80073f6:	f3bf 8f4f 	dsb	sy
 80073fa:	e7fe      	b.n	80073fa <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80073fc:	b943      	cbnz	r3, 8007410 <xQueueGenericCreateStatic+0x2c>
 80073fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007402:	f383 8811 	msr	BASEPRI, r3
 8007406:	f3bf 8f6f 	isb	sy
 800740a:	f3bf 8f4f 	dsb	sy
 800740e:	e7fe      	b.n	800740e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007410:	b14a      	cbz	r2, 8007426 <xQueueGenericCreateStatic+0x42>
 8007412:	b991      	cbnz	r1, 800743a <xQueueGenericCreateStatic+0x56>
 8007414:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007418:	f383 8811 	msr	BASEPRI, r3
 800741c:	f3bf 8f6f 	isb	sy
 8007420:	f3bf 8f4f 	dsb	sy
 8007424:	e7fe      	b.n	8007424 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007426:	b141      	cbz	r1, 800743a <xQueueGenericCreateStatic+0x56>
 8007428:	f04f 0350 	mov.w	r3, #80	; 0x50
 800742c:	f383 8811 	msr	BASEPRI, r3
 8007430:	f3bf 8f6f 	isb	sy
 8007434:	f3bf 8f4f 	dsb	sy
 8007438:	e7fe      	b.n	8007438 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800743a:	2350      	movs	r3, #80	; 0x50
 800743c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800743e:	9b01      	ldr	r3, [sp, #4]
 8007440:	2b50      	cmp	r3, #80	; 0x50
 8007442:	d008      	beq.n	8007456 <xQueueGenericCreateStatic+0x72>
 8007444:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007448:	f383 8811 	msr	BASEPRI, r3
 800744c:	f3bf 8f6f 	isb	sy
 8007450:	f3bf 8f4f 	dsb	sy
 8007454:	e7fe      	b.n	8007454 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007456:	2900      	cmp	r1, #0
 8007458:	bf08      	it	eq
 800745a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800745c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800745e:	6022      	str	r2, [r4, #0]
 8007460:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007462:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007466:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800746a:	4619      	mov	r1, r3
 800746c:	4620      	mov	r0, r4
 800746e:	f7ff ff79 	bl	8007364 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007472:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007476:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800747a:	4620      	mov	r0, r4
 800747c:	b002      	add	sp, #8
 800747e:	bd10      	pop	{r4, pc}

08007480 <xQueueGenericCreate>:
	{
 8007480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007482:	460d      	mov	r5, r1
 8007484:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007486:	4606      	mov	r6, r0
 8007488:	b940      	cbnz	r0, 800749c <xQueueGenericCreate+0x1c>
 800748a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800748e:	f383 8811 	msr	BASEPRI, r3
 8007492:	f3bf 8f6f 	isb	sy
 8007496:	f3bf 8f4f 	dsb	sy
 800749a:	e7fe      	b.n	800749a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800749c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800749e:	3050      	adds	r0, #80	; 0x50
 80074a0:	f7ff fc0c 	bl	8006cbc <pvPortMalloc>
		if( pxNewQueue != NULL )
 80074a4:	4604      	mov	r4, r0
 80074a6:	b170      	cbz	r0, 80074c6 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80074a8:	2300      	movs	r3, #0
 80074aa:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80074ae:	b165      	cbz	r5, 80074ca <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074b0:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80074b4:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80074b8:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80074ba:	2101      	movs	r1, #1
 80074bc:	4620      	mov	r0, r4
 80074be:	f7ff ff51 	bl	8007364 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80074c2:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80074c6:	4620      	mov	r0, r4
 80074c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80074ca:	4603      	mov	r3, r0
 80074cc:	e7f2      	b.n	80074b4 <xQueueGenericCreate+0x34>

080074ce <xQueueCreateCountingSemaphoreStatic>:
	{
 80074ce:	b513      	push	{r0, r1, r4, lr}
 80074d0:	4613      	mov	r3, r2
 80074d2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80074d4:	b940      	cbnz	r0, 80074e8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 80074d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074da:	f383 8811 	msr	BASEPRI, r3
 80074de:	f3bf 8f6f 	isb	sy
 80074e2:	f3bf 8f4f 	dsb	sy
 80074e6:	e7fe      	b.n	80074e6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80074e8:	4288      	cmp	r0, r1
 80074ea:	d208      	bcs.n	80074fe <xQueueCreateCountingSemaphoreStatic+0x30>
 80074ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074f0:	f383 8811 	msr	BASEPRI, r3
 80074f4:	f3bf 8f6f 	isb	sy
 80074f8:	f3bf 8f4f 	dsb	sy
 80074fc:	e7fe      	b.n	80074fc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80074fe:	2202      	movs	r2, #2
 8007500:	9200      	str	r2, [sp, #0]
 8007502:	2200      	movs	r2, #0
 8007504:	4611      	mov	r1, r2
 8007506:	f7ff ff6d 	bl	80073e4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800750a:	b100      	cbz	r0, 800750e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800750c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800750e:	b002      	add	sp, #8
 8007510:	bd10      	pop	{r4, pc}

08007512 <xQueueCreateCountingSemaphore>:
	{
 8007512:	b510      	push	{r4, lr}
 8007514:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007516:	b940      	cbnz	r0, 800752a <xQueueCreateCountingSemaphore+0x18>
 8007518:	f04f 0350 	mov.w	r3, #80	; 0x50
 800751c:	f383 8811 	msr	BASEPRI, r3
 8007520:	f3bf 8f6f 	isb	sy
 8007524:	f3bf 8f4f 	dsb	sy
 8007528:	e7fe      	b.n	8007528 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800752a:	4288      	cmp	r0, r1
 800752c:	d208      	bcs.n	8007540 <xQueueCreateCountingSemaphore+0x2e>
 800752e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007532:	f383 8811 	msr	BASEPRI, r3
 8007536:	f3bf 8f6f 	isb	sy
 800753a:	f3bf 8f4f 	dsb	sy
 800753e:	e7fe      	b.n	800753e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007540:	2202      	movs	r2, #2
 8007542:	2100      	movs	r1, #0
 8007544:	f7ff ff9c 	bl	8007480 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007548:	b100      	cbz	r0, 800754c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800754a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800754c:	bd10      	pop	{r4, pc}
	...

08007550 <xQueueGenericSend>:
{
 8007550:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007554:	4688      	mov	r8, r1
 8007556:	9201      	str	r2, [sp, #4]
 8007558:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800755a:	4604      	mov	r4, r0
 800755c:	b940      	cbnz	r0, 8007570 <xQueueGenericSend+0x20>
 800755e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007562:	f383 8811 	msr	BASEPRI, r3
 8007566:	f3bf 8f6f 	isb	sy
 800756a:	f3bf 8f4f 	dsb	sy
 800756e:	e7fe      	b.n	800756e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007570:	b951      	cbnz	r1, 8007588 <xQueueGenericSend+0x38>
 8007572:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007574:	b143      	cbz	r3, 8007588 <xQueueGenericSend+0x38>
 8007576:	f04f 0350 	mov.w	r3, #80	; 0x50
 800757a:	f383 8811 	msr	BASEPRI, r3
 800757e:	f3bf 8f6f 	isb	sy
 8007582:	f3bf 8f4f 	dsb	sy
 8007586:	e7fe      	b.n	8007586 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007588:	2f02      	cmp	r7, #2
 800758a:	d10b      	bne.n	80075a4 <xQueueGenericSend+0x54>
 800758c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800758e:	2b01      	cmp	r3, #1
 8007590:	d008      	beq.n	80075a4 <xQueueGenericSend+0x54>
 8007592:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007596:	f383 8811 	msr	BASEPRI, r3
 800759a:	f3bf 8f6f 	isb	sy
 800759e:	f3bf 8f4f 	dsb	sy
 80075a2:	e7fe      	b.n	80075a2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80075a4:	f000 ffd6 	bl	8008554 <xTaskGetSchedulerState>
 80075a8:	4606      	mov	r6, r0
 80075aa:	b950      	cbnz	r0, 80075c2 <xQueueGenericSend+0x72>
 80075ac:	9b01      	ldr	r3, [sp, #4]
 80075ae:	b14b      	cbz	r3, 80075c4 <xQueueGenericSend+0x74>
 80075b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075b4:	f383 8811 	msr	BASEPRI, r3
 80075b8:	f3bf 8f6f 	isb	sy
 80075bc:	f3bf 8f4f 	dsb	sy
 80075c0:	e7fe      	b.n	80075c0 <xQueueGenericSend+0x70>
 80075c2:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80075c4:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 80076b0 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 80075c8:	f04f 0900 	mov.w	r9, #0
 80075cc:	e037      	b.n	800763e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 80075ce:	9d01      	ldr	r5, [sp, #4]
 80075d0:	b91d      	cbnz	r5, 80075da <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 80075d2:	f7ff fd11 	bl	8006ff8 <vPortExitCritical>
			return errQUEUE_FULL;
 80075d6:	2000      	movs	r0, #0
 80075d8:	e050      	b.n	800767c <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 80075da:	b916      	cbnz	r6, 80075e2 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80075dc:	a802      	add	r0, sp, #8
 80075de:	f000 ff6b 	bl	80084b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80075e2:	f7ff fd09 	bl	8006ff8 <vPortExitCritical>
		vTaskSuspendAll();
 80075e6:	f000 fd03 	bl	8007ff0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80075ea:	f7ff fce3 	bl	8006fb4 <vPortEnterCritical>
 80075ee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80075f2:	2bff      	cmp	r3, #255	; 0xff
 80075f4:	bf08      	it	eq
 80075f6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80075fa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80075fe:	2bff      	cmp	r3, #255	; 0xff
 8007600:	bf08      	it	eq
 8007602:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007606:	f7ff fcf7 	bl	8006ff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800760a:	a901      	add	r1, sp, #4
 800760c:	a802      	add	r0, sp, #8
 800760e:	f000 ff5f 	bl	80084d0 <xTaskCheckForTimeOut>
 8007612:	2800      	cmp	r0, #0
 8007614:	d146      	bne.n	80076a4 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007616:	f7ff fccd 	bl	8006fb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800761a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800761c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800761e:	429a      	cmp	r2, r3
 8007620:	d12f      	bne.n	8007682 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007622:	f7ff fce9 	bl	8006ff8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007626:	9901      	ldr	r1, [sp, #4]
 8007628:	f104 0010 	add.w	r0, r4, #16
 800762c:	f000 fec8 	bl	80083c0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007630:	4620      	mov	r0, r4
 8007632:	f7ff fe5f 	bl	80072f4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007636:	f000 fd7f 	bl	8008138 <xTaskResumeAll>
 800763a:	b350      	cbz	r0, 8007692 <xQueueGenericSend+0x142>
 800763c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800763e:	f7ff fcb9 	bl	8006fb4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007642:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007644:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007646:	429a      	cmp	r2, r3
 8007648:	d301      	bcc.n	800764e <xQueueGenericSend+0xfe>
 800764a:	2f02      	cmp	r7, #2
 800764c:	d1bf      	bne.n	80075ce <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800764e:	463a      	mov	r2, r7
 8007650:	4641      	mov	r1, r8
 8007652:	4620      	mov	r0, r4
 8007654:	f7ff fe03 	bl	800725e <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007658:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800765a:	b11b      	cbz	r3, 8007664 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800765c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007660:	f000 fee6 	bl	8008430 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007664:	b138      	cbz	r0, 8007676 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8007666:	4b12      	ldr	r3, [pc, #72]	; (80076b0 <xQueueGenericSend+0x160>)
 8007668:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800766c:	601a      	str	r2, [r3, #0]
 800766e:	f3bf 8f4f 	dsb	sy
 8007672:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007676:	f7ff fcbf 	bl	8006ff8 <vPortExitCritical>
				return pdPASS;
 800767a:	2001      	movs	r0, #1
}
 800767c:	b004      	add	sp, #16
 800767e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007682:	f7ff fcb9 	bl	8006ff8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007686:	4620      	mov	r0, r4
 8007688:	f7ff fe34 	bl	80072f4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800768c:	f000 fd54 	bl	8008138 <xTaskResumeAll>
 8007690:	e7d4      	b.n	800763c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007692:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007696:	f8ca 3000 	str.w	r3, [sl]
 800769a:	f3bf 8f4f 	dsb	sy
 800769e:	f3bf 8f6f 	isb	sy
 80076a2:	e7cb      	b.n	800763c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 80076a4:	4620      	mov	r0, r4
 80076a6:	f7ff fe25 	bl	80072f4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80076aa:	f000 fd45 	bl	8008138 <xTaskResumeAll>
 80076ae:	e792      	b.n	80075d6 <xQueueGenericSend+0x86>
 80076b0:	e000ed04 	.word	0xe000ed04

080076b4 <xQueueGenericSendFromISR>:
{
 80076b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80076b8:	4689      	mov	r9, r1
 80076ba:	4690      	mov	r8, r2
 80076bc:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80076be:	4604      	mov	r4, r0
 80076c0:	b940      	cbnz	r0, 80076d4 <xQueueGenericSendFromISR+0x20>
 80076c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c6:	f383 8811 	msr	BASEPRI, r3
 80076ca:	f3bf 8f6f 	isb	sy
 80076ce:	f3bf 8f4f 	dsb	sy
 80076d2:	e7fe      	b.n	80076d2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80076d4:	b951      	cbnz	r1, 80076ec <xQueueGenericSendFromISR+0x38>
 80076d6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80076d8:	b143      	cbz	r3, 80076ec <xQueueGenericSendFromISR+0x38>
 80076da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076de:	f383 8811 	msr	BASEPRI, r3
 80076e2:	f3bf 8f6f 	isb	sy
 80076e6:	f3bf 8f4f 	dsb	sy
 80076ea:	e7fe      	b.n	80076ea <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80076ec:	2f02      	cmp	r7, #2
 80076ee:	d10b      	bne.n	8007708 <xQueueGenericSendFromISR+0x54>
 80076f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076f2:	2b01      	cmp	r3, #1
 80076f4:	d008      	beq.n	8007708 <xQueueGenericSendFromISR+0x54>
 80076f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076fa:	f383 8811 	msr	BASEPRI, r3
 80076fe:	f3bf 8f6f 	isb	sy
 8007702:	f3bf 8f4f 	dsb	sy
 8007706:	e7fe      	b.n	8007706 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007708:	f7ff fd70 	bl	80071ec <vPortValidateInterruptPriority>
	__asm volatile
 800770c:	f3ef 8611 	mrs	r6, BASEPRI
 8007710:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007714:	f383 8811 	msr	BASEPRI, r3
 8007718:	f3bf 8f6f 	isb	sy
 800771c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007720:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007722:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007724:	429a      	cmp	r2, r3
 8007726:	d301      	bcc.n	800772c <xQueueGenericSendFromISR+0x78>
 8007728:	2f02      	cmp	r7, #2
 800772a:	d123      	bne.n	8007774 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800772c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007730:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007732:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007734:	463a      	mov	r2, r7
 8007736:	4649      	mov	r1, r9
 8007738:	4620      	mov	r0, r4
 800773a:	f7ff fd90 	bl	800725e <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800773e:	1c6b      	adds	r3, r5, #1
 8007740:	d113      	bne.n	800776a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007742:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007744:	b90b      	cbnz	r3, 800774a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007746:	2001      	movs	r0, #1
 8007748:	e00b      	b.n	8007762 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800774a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800774e:	f000 fe6f 	bl	8008430 <xTaskRemoveFromEventList>
 8007752:	2800      	cmp	r0, #0
 8007754:	d0f7      	beq.n	8007746 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007756:	f1b8 0f00 	cmp.w	r8, #0
 800775a:	d0f4      	beq.n	8007746 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800775c:	2001      	movs	r0, #1
 800775e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007762:	f386 8811 	msr	BASEPRI, r6
}
 8007766:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800776a:	3501      	adds	r5, #1
 800776c:	b26d      	sxtb	r5, r5
 800776e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007772:	e7e8      	b.n	8007746 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007774:	2000      	movs	r0, #0
 8007776:	e7f4      	b.n	8007762 <xQueueGenericSendFromISR+0xae>

08007778 <xQueueGiveFromISR>:
{
 8007778:	b570      	push	{r4, r5, r6, lr}
 800777a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800777c:	4604      	mov	r4, r0
 800777e:	b940      	cbnz	r0, 8007792 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007780:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007784:	f383 8811 	msr	BASEPRI, r3
 8007788:	f3bf 8f6f 	isb	sy
 800778c:	f3bf 8f4f 	dsb	sy
 8007790:	e7fe      	b.n	8007790 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007792:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007794:	b143      	cbz	r3, 80077a8 <xQueueGiveFromISR+0x30>
 8007796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800779a:	f383 8811 	msr	BASEPRI, r3
 800779e:	f3bf 8f6f 	isb	sy
 80077a2:	f3bf 8f4f 	dsb	sy
 80077a6:	e7fe      	b.n	80077a6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80077a8:	6803      	ldr	r3, [r0, #0]
 80077aa:	b953      	cbnz	r3, 80077c2 <xQueueGiveFromISR+0x4a>
 80077ac:	6883      	ldr	r3, [r0, #8]
 80077ae:	b143      	cbz	r3, 80077c2 <xQueueGiveFromISR+0x4a>
 80077b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077b4:	f383 8811 	msr	BASEPRI, r3
 80077b8:	f3bf 8f6f 	isb	sy
 80077bc:	f3bf 8f4f 	dsb	sy
 80077c0:	e7fe      	b.n	80077c0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80077c2:	f7ff fd13 	bl	80071ec <vPortValidateInterruptPriority>
	__asm volatile
 80077c6:	f3ef 8611 	mrs	r6, BASEPRI
 80077ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077ce:	f383 8811 	msr	BASEPRI, r3
 80077d2:	f3bf 8f6f 	isb	sy
 80077d6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80077da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80077dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80077de:	4293      	cmp	r3, r2
 80077e0:	d91c      	bls.n	800781c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80077e2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80077e6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80077e8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80077ea:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80077ec:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80077ee:	d110      	bne.n	8007812 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077f2:	b90b      	cbnz	r3, 80077f8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80077f4:	2001      	movs	r0, #1
 80077f6:	e009      	b.n	800780c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077f8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80077fc:	f000 fe18 	bl	8008430 <xTaskRemoveFromEventList>
 8007800:	2800      	cmp	r0, #0
 8007802:	d0f7      	beq.n	80077f4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007804:	2d00      	cmp	r5, #0
 8007806:	d0f5      	beq.n	80077f4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007808:	2001      	movs	r0, #1
 800780a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800780c:	f386 8811 	msr	BASEPRI, r6
}
 8007810:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007812:	3301      	adds	r3, #1
 8007814:	b25b      	sxtb	r3, r3
 8007816:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800781a:	e7eb      	b.n	80077f4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800781c:	2000      	movs	r0, #0
 800781e:	e7f5      	b.n	800780c <xQueueGiveFromISR+0x94>

08007820 <xQueueReceive>:
{
 8007820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007824:	b085      	sub	sp, #20
 8007826:	460f      	mov	r7, r1
 8007828:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800782a:	4604      	mov	r4, r0
 800782c:	b940      	cbnz	r0, 8007840 <xQueueReceive+0x20>
	__asm volatile
 800782e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007832:	f383 8811 	msr	BASEPRI, r3
 8007836:	f3bf 8f6f 	isb	sy
 800783a:	f3bf 8f4f 	dsb	sy
 800783e:	e7fe      	b.n	800783e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007840:	b951      	cbnz	r1, 8007858 <xQueueReceive+0x38>
 8007842:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007844:	b143      	cbz	r3, 8007858 <xQueueReceive+0x38>
 8007846:	f04f 0350 	mov.w	r3, #80	; 0x50
 800784a:	f383 8811 	msr	BASEPRI, r3
 800784e:	f3bf 8f6f 	isb	sy
 8007852:	f3bf 8f4f 	dsb	sy
 8007856:	e7fe      	b.n	8007856 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007858:	f000 fe7c 	bl	8008554 <xTaskGetSchedulerState>
 800785c:	4606      	mov	r6, r0
 800785e:	b950      	cbnz	r0, 8007876 <xQueueReceive+0x56>
 8007860:	9b01      	ldr	r3, [sp, #4]
 8007862:	b14b      	cbz	r3, 8007878 <xQueueReceive+0x58>
 8007864:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007868:	f383 8811 	msr	BASEPRI, r3
 800786c:	f3bf 8f6f 	isb	sy
 8007870:	f3bf 8f4f 	dsb	sy
 8007874:	e7fe      	b.n	8007874 <xQueueReceive+0x54>
 8007876:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007878:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800795c <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800787c:	f04f 0800 	mov.w	r8, #0
 8007880:	e03b      	b.n	80078fa <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007882:	9d01      	ldr	r5, [sp, #4]
 8007884:	b91d      	cbnz	r5, 800788e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8007886:	f7ff fbb7 	bl	8006ff8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800788a:	2000      	movs	r0, #0
 800788c:	e052      	b.n	8007934 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800788e:	b916      	cbnz	r6, 8007896 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007890:	a802      	add	r0, sp, #8
 8007892:	f000 fe11 	bl	80084b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007896:	f7ff fbaf 	bl	8006ff8 <vPortExitCritical>
		vTaskSuspendAll();
 800789a:	f000 fba9 	bl	8007ff0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800789e:	f7ff fb89 	bl	8006fb4 <vPortEnterCritical>
 80078a2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80078a6:	2bff      	cmp	r3, #255	; 0xff
 80078a8:	bf08      	it	eq
 80078aa:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80078ae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80078b2:	2bff      	cmp	r3, #255	; 0xff
 80078b4:	bf08      	it	eq
 80078b6:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80078ba:	f7ff fb9d 	bl	8006ff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80078be:	a901      	add	r1, sp, #4
 80078c0:	a802      	add	r0, sp, #8
 80078c2:	f000 fe05 	bl	80084d0 <xTaskCheckForTimeOut>
 80078c6:	2800      	cmp	r0, #0
 80078c8:	d13d      	bne.n	8007946 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80078ca:	4620      	mov	r0, r4
 80078cc:	f7ff fcbc 	bl	8007248 <prvIsQueueEmpty>
 80078d0:	b398      	cbz	r0, 800793a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80078d2:	9901      	ldr	r1, [sp, #4]
 80078d4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80078d8:	f000 fd72 	bl	80083c0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80078dc:	4620      	mov	r0, r4
 80078de:	f7ff fd09 	bl	80072f4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80078e2:	f000 fc29 	bl	8008138 <xTaskResumeAll>
 80078e6:	b938      	cbnz	r0, 80078f8 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 80078e8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80078ec:	f8c9 3000 	str.w	r3, [r9]
 80078f0:	f3bf 8f4f 	dsb	sy
 80078f4:	f3bf 8f6f 	isb	sy
 80078f8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80078fa:	f7ff fb5b 	bl	8006fb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80078fe:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007900:	2d00      	cmp	r5, #0
 8007902:	d0be      	beq.n	8007882 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007904:	4639      	mov	r1, r7
 8007906:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007908:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800790a:	f7ff fcdd 	bl	80072c8 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800790e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007910:	6923      	ldr	r3, [r4, #16]
 8007912:	b163      	cbz	r3, 800792e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007914:	f104 0010 	add.w	r0, r4, #16
 8007918:	f000 fd8a 	bl	8008430 <xTaskRemoveFromEventList>
 800791c:	b138      	cbz	r0, 800792e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800791e:	4b0f      	ldr	r3, [pc, #60]	; (800795c <xQueueReceive+0x13c>)
 8007920:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007924:	601a      	str	r2, [r3, #0]
 8007926:	f3bf 8f4f 	dsb	sy
 800792a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800792e:	f7ff fb63 	bl	8006ff8 <vPortExitCritical>
				return pdPASS;
 8007932:	2001      	movs	r0, #1
}
 8007934:	b005      	add	sp, #20
 8007936:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800793a:	4620      	mov	r0, r4
 800793c:	f7ff fcda 	bl	80072f4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007940:	f000 fbfa 	bl	8008138 <xTaskResumeAll>
 8007944:	e7d8      	b.n	80078f8 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 8007946:	4620      	mov	r0, r4
 8007948:	f7ff fcd4 	bl	80072f4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800794c:	f000 fbf4 	bl	8008138 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007950:	4620      	mov	r0, r4
 8007952:	f7ff fc79 	bl	8007248 <prvIsQueueEmpty>
 8007956:	2800      	cmp	r0, #0
 8007958:	d0ce      	beq.n	80078f8 <xQueueReceive+0xd8>
 800795a:	e796      	b.n	800788a <xQueueReceive+0x6a>
 800795c:	e000ed04 	.word	0xe000ed04

08007960 <xQueueSemaphoreTake>:
{
 8007960:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007964:	4604      	mov	r4, r0
{
 8007966:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007968:	b940      	cbnz	r0, 800797c <xQueueSemaphoreTake+0x1c>
 800796a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800796e:	f383 8811 	msr	BASEPRI, r3
 8007972:	f3bf 8f6f 	isb	sy
 8007976:	f3bf 8f4f 	dsb	sy
 800797a:	e7fe      	b.n	800797a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800797c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800797e:	b145      	cbz	r5, 8007992 <xQueueSemaphoreTake+0x32>
 8007980:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007984:	f383 8811 	msr	BASEPRI, r3
 8007988:	f3bf 8f6f 	isb	sy
 800798c:	f3bf 8f4f 	dsb	sy
 8007990:	e7fe      	b.n	8007990 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007992:	f000 fddf 	bl	8008554 <xTaskGetSchedulerState>
 8007996:	4606      	mov	r6, r0
 8007998:	b950      	cbnz	r0, 80079b0 <xQueueSemaphoreTake+0x50>
 800799a:	9b01      	ldr	r3, [sp, #4]
 800799c:	b16b      	cbz	r3, 80079ba <xQueueSemaphoreTake+0x5a>
 800799e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079a2:	f383 8811 	msr	BASEPRI, r3
 80079a6:	f3bf 8f6f 	isb	sy
 80079aa:	f3bf 8f4f 	dsb	sy
 80079ae:	e7fe      	b.n	80079ae <xQueueSemaphoreTake+0x4e>
 80079b0:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 80079b2:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8007ae4 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 80079b6:	2700      	movs	r7, #0
 80079b8:	e051      	b.n	8007a5e <xQueueSemaphoreTake+0xfe>
 80079ba:	4605      	mov	r5, r0
 80079bc:	e7f9      	b.n	80079b2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80079be:	9b01      	ldr	r3, [sp, #4]
 80079c0:	b963      	cbnz	r3, 80079dc <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80079c2:	b145      	cbz	r5, 80079d6 <xQueueSemaphoreTake+0x76>
 80079c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c8:	f383 8811 	msr	BASEPRI, r3
 80079cc:	f3bf 8f6f 	isb	sy
 80079d0:	f3bf 8f4f 	dsb	sy
 80079d4:	e7fe      	b.n	80079d4 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 80079d6:	f7ff fb0f 	bl	8006ff8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80079da:	e05e      	b.n	8007a9a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 80079dc:	b916      	cbnz	r6, 80079e4 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80079de:	a802      	add	r0, sp, #8
 80079e0:	f000 fd6a 	bl	80084b8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80079e4:	f7ff fb08 	bl	8006ff8 <vPortExitCritical>
		vTaskSuspendAll();
 80079e8:	f000 fb02 	bl	8007ff0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80079ec:	f7ff fae2 	bl	8006fb4 <vPortEnterCritical>
 80079f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80079f4:	2bff      	cmp	r3, #255	; 0xff
 80079f6:	bf08      	it	eq
 80079f8:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80079fc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a00:	2bff      	cmp	r3, #255	; 0xff
 8007a02:	bf08      	it	eq
 8007a04:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007a08:	f7ff faf6 	bl	8006ff8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a0c:	a901      	add	r1, sp, #4
 8007a0e:	a802      	add	r0, sp, #8
 8007a10:	f000 fd5e 	bl	80084d0 <xTaskCheckForTimeOut>
 8007a14:	2800      	cmp	r0, #0
 8007a16:	d14a      	bne.n	8007aae <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a18:	4620      	mov	r0, r4
 8007a1a:	f7ff fc15 	bl	8007248 <prvIsQueueEmpty>
 8007a1e:	2800      	cmp	r0, #0
 8007a20:	d03f      	beq.n	8007aa2 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007a22:	6823      	ldr	r3, [r4, #0]
 8007a24:	b93b      	cbnz	r3, 8007a36 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8007a26:	f7ff fac5 	bl	8006fb4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007a2a:	68a0      	ldr	r0, [r4, #8]
 8007a2c:	f000 fda2 	bl	8008574 <xTaskPriorityInherit>
 8007a30:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007a32:	f7ff fae1 	bl	8006ff8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007a36:	9901      	ldr	r1, [sp, #4]
 8007a38:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007a3c:	f000 fcc0 	bl	80083c0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007a40:	4620      	mov	r0, r4
 8007a42:	f7ff fc57 	bl	80072f4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007a46:	f000 fb77 	bl	8008138 <xTaskResumeAll>
 8007a4a:	b938      	cbnz	r0, 8007a5c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007a4c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007a50:	f8c8 3000 	str.w	r3, [r8]
 8007a54:	f3bf 8f4f 	dsb	sy
 8007a58:	f3bf 8f6f 	isb	sy
 8007a5c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007a5e:	f7ff faa9 	bl	8006fb4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007a62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007a64:	2b00      	cmp	r3, #0
 8007a66:	d0aa      	beq.n	80079be <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007a68:	3b01      	subs	r3, #1
 8007a6a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007a6c:	6823      	ldr	r3, [r4, #0]
 8007a6e:	b913      	cbnz	r3, 8007a76 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007a70:	f000 fe58 	bl	8008724 <pvTaskIncrementMutexHeldCount>
 8007a74:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007a76:	6923      	ldr	r3, [r4, #16]
 8007a78:	b163      	cbz	r3, 8007a94 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007a7a:	f104 0010 	add.w	r0, r4, #16
 8007a7e:	f000 fcd7 	bl	8008430 <xTaskRemoveFromEventList>
 8007a82:	b138      	cbz	r0, 8007a94 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8007a84:	4b17      	ldr	r3, [pc, #92]	; (8007ae4 <xQueueSemaphoreTake+0x184>)
 8007a86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a8a:	601a      	str	r2, [r3, #0]
 8007a8c:	f3bf 8f4f 	dsb	sy
 8007a90:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007a94:	f7ff fab0 	bl	8006ff8 <vPortExitCritical>
				return pdPASS;
 8007a98:	2501      	movs	r5, #1
}
 8007a9a:	4628      	mov	r0, r5
 8007a9c:	b004      	add	sp, #16
 8007a9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007aa2:	4620      	mov	r0, r4
 8007aa4:	f7ff fc26 	bl	80072f4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007aa8:	f000 fb46 	bl	8008138 <xTaskResumeAll>
 8007aac:	e7d6      	b.n	8007a5c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007aae:	4620      	mov	r0, r4
 8007ab0:	f7ff fc20 	bl	80072f4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ab4:	f000 fb40 	bl	8008138 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007ab8:	4620      	mov	r0, r4
 8007aba:	f7ff fbc5 	bl	8007248 <prvIsQueueEmpty>
 8007abe:	2800      	cmp	r0, #0
 8007ac0:	d0cc      	beq.n	8007a5c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007ac2:	2d00      	cmp	r5, #0
 8007ac4:	d0e9      	beq.n	8007a9a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8007ac6:	f7ff fa75 	bl	8006fb4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007aca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007acc:	b119      	cbz	r1, 8007ad6 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007ace:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007ad0:	6819      	ldr	r1, [r3, #0]
 8007ad2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007ad6:	68a0      	ldr	r0, [r4, #8]
 8007ad8:	f000 fdd2 	bl	8008680 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007adc:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007ade:	f7ff fa8b 	bl	8006ff8 <vPortExitCritical>
 8007ae2:	e7da      	b.n	8007a9a <xQueueSemaphoreTake+0x13a>
 8007ae4:	e000ed04 	.word	0xe000ed04

08007ae8 <xQueueReceiveFromISR>:
{
 8007ae8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007aec:	4689      	mov	r9, r1
 8007aee:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007af0:	4605      	mov	r5, r0
 8007af2:	b940      	cbnz	r0, 8007b06 <xQueueReceiveFromISR+0x1e>
 8007af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007af8:	f383 8811 	msr	BASEPRI, r3
 8007afc:	f3bf 8f6f 	isb	sy
 8007b00:	f3bf 8f4f 	dsb	sy
 8007b04:	e7fe      	b.n	8007b04 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b06:	b951      	cbnz	r1, 8007b1e <xQueueReceiveFromISR+0x36>
 8007b08:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007b0a:	b143      	cbz	r3, 8007b1e <xQueueReceiveFromISR+0x36>
 8007b0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b10:	f383 8811 	msr	BASEPRI, r3
 8007b14:	f3bf 8f6f 	isb	sy
 8007b18:	f3bf 8f4f 	dsb	sy
 8007b1c:	e7fe      	b.n	8007b1c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b1e:	f7ff fb65 	bl	80071ec <vPortValidateInterruptPriority>
	__asm volatile
 8007b22:	f3ef 8711 	mrs	r7, BASEPRI
 8007b26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b2a:	f383 8811 	msr	BASEPRI, r3
 8007b2e:	f3bf 8f6f 	isb	sy
 8007b32:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007b36:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007b38:	b31c      	cbz	r4, 8007b82 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007b3a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007b3e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007b40:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007b42:	4628      	mov	r0, r5
 8007b44:	f7ff fbc0 	bl	80072c8 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007b48:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007b4a:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007b4c:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007b4e:	d113      	bne.n	8007b78 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b50:	692b      	ldr	r3, [r5, #16]
 8007b52:	b90b      	cbnz	r3, 8007b58 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007b54:	2001      	movs	r0, #1
 8007b56:	e00b      	b.n	8007b70 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b58:	f105 0010 	add.w	r0, r5, #16
 8007b5c:	f000 fc68 	bl	8008430 <xTaskRemoveFromEventList>
 8007b60:	2800      	cmp	r0, #0
 8007b62:	d0f7      	beq.n	8007b54 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007b64:	f1b8 0f00 	cmp.w	r8, #0
 8007b68:	d0f4      	beq.n	8007b54 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007b6a:	2001      	movs	r0, #1
 8007b6c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007b70:	f387 8811 	msr	BASEPRI, r7
}
 8007b74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007b78:	3601      	adds	r6, #1
 8007b7a:	b276      	sxtb	r6, r6
 8007b7c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007b80:	e7e8      	b.n	8007b54 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007b82:	4620      	mov	r0, r4
 8007b84:	e7f4      	b.n	8007b70 <xQueueReceiveFromISR+0x88>
	...

08007b88 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007b88:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007b8a:	4a07      	ldr	r2, [pc, #28]	; (8007ba8 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007b8c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007b8e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007b92:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007b96:	b91d      	cbnz	r5, 8007ba0 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007b98:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007b9c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007b9e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007ba0:	3301      	adds	r3, #1
 8007ba2:	2b08      	cmp	r3, #8
 8007ba4:	d1f3      	bne.n	8007b8e <vQueueAddToRegistry+0x6>
 8007ba6:	e7fa      	b.n	8007b9e <vQueueAddToRegistry+0x16>
 8007ba8:	2000a5b0 	.word	0x2000a5b0

08007bac <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007bac:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007bae:	4909      	ldr	r1, [pc, #36]	; (8007bd4 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007bb0:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007bb2:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8007bb6:	4282      	cmp	r2, r0
 8007bb8:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8007bbc:	d106      	bne.n	8007bcc <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007bbe:	4a06      	ldr	r2, [pc, #24]	; (8007bd8 <vQueueUnregisterQueue+0x2c>)
 8007bc0:	2100      	movs	r1, #0
 8007bc2:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007bc6:	4422      	add	r2, r4
 8007bc8:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007bca:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007bcc:	3301      	adds	r3, #1
 8007bce:	2b08      	cmp	r3, #8
 8007bd0:	d1ef      	bne.n	8007bb2 <vQueueUnregisterQueue+0x6>
 8007bd2:	e7fa      	b.n	8007bca <vQueueUnregisterQueue+0x1e>
 8007bd4:	2000a5b4 	.word	0x2000a5b4
 8007bd8:	2000a5b0 	.word	0x2000a5b0

08007bdc <vQueueDelete>:
{
 8007bdc:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007bde:	b940      	cbnz	r0, 8007bf2 <vQueueDelete+0x16>
	__asm volatile
 8007be0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007be4:	f383 8811 	msr	BASEPRI, r3
 8007be8:	f3bf 8f6f 	isb	sy
 8007bec:	f3bf 8f4f 	dsb	sy
 8007bf0:	e7fe      	b.n	8007bf0 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8007bf2:	f7ff ffdb 	bl	8007bac <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007bf6:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8007bfa:	b91b      	cbnz	r3, 8007c04 <vQueueDelete+0x28>
}
 8007bfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007c00:	f7ff b8ee 	b.w	8006de0 <vPortFree>
}
 8007c04:	bd10      	pop	{r4, pc}

08007c06 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007c06:	b570      	push	{r4, r5, r6, lr}
 8007c08:	4604      	mov	r4, r0
 8007c0a:	460d      	mov	r5, r1
 8007c0c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007c0e:	f7ff f9d1 	bl	8006fb4 <vPortEnterCritical>
 8007c12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007c16:	2bff      	cmp	r3, #255	; 0xff
 8007c18:	bf04      	itt	eq
 8007c1a:	2300      	moveq	r3, #0
 8007c1c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007c20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007c24:	2bff      	cmp	r3, #255	; 0xff
 8007c26:	bf04      	itt	eq
 8007c28:	2300      	moveq	r3, #0
 8007c2a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007c2e:	f7ff f9e3 	bl	8006ff8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007c32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007c34:	b92b      	cbnz	r3, 8007c42 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007c36:	4632      	mov	r2, r6
 8007c38:	4629      	mov	r1, r5
 8007c3a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c3e:	f000 fbd9 	bl	80083f4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007c42:	4620      	mov	r0, r4
	}
 8007c44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007c48:	f7ff bb54 	b.w	80072f4 <prvUnlockQueue>

08007c4c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c50:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007c52:	f7ff f9af 	bl	8006fb4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007c56:	4b2f      	ldr	r3, [pc, #188]	; (8007d14 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007c58:	4d2f      	ldr	r5, [pc, #188]	; (8007d18 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007c5a:	681a      	ldr	r2, [r3, #0]
 8007c5c:	4f2f      	ldr	r7, [pc, #188]	; (8007d1c <prvAddNewTaskToReadyList+0xd0>)
 8007c5e:	3201      	adds	r2, #1
 8007c60:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007c62:	682e      	ldr	r6, [r5, #0]
 8007c64:	2e00      	cmp	r6, #0
 8007c66:	d149      	bne.n	8007cfc <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007c68:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	2b01      	cmp	r3, #1
 8007c6e:	d11f      	bne.n	8007cb0 <prvAddNewTaskToReadyList+0x64>
 8007c70:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007c72:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007c74:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007c76:	f7ff f8f1 	bl	8006e5c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007c7a:	2e38      	cmp	r6, #56	; 0x38
 8007c7c:	f108 0814 	add.w	r8, r8, #20
 8007c80:	d1f7      	bne.n	8007c72 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007c82:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007d48 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007c86:	4e26      	ldr	r6, [pc, #152]	; (8007d20 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8007c88:	4640      	mov	r0, r8
 8007c8a:	f7ff f8e7 	bl	8006e5c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007c8e:	4630      	mov	r0, r6
 8007c90:	f7ff f8e4 	bl	8006e5c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007c94:	4823      	ldr	r0, [pc, #140]	; (8007d24 <prvAddNewTaskToReadyList+0xd8>)
 8007c96:	f7ff f8e1 	bl	8006e5c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007c9a:	4823      	ldr	r0, [pc, #140]	; (8007d28 <prvAddNewTaskToReadyList+0xdc>)
 8007c9c:	f7ff f8de 	bl	8006e5c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007ca0:	4822      	ldr	r0, [pc, #136]	; (8007d2c <prvAddNewTaskToReadyList+0xe0>)
 8007ca2:	f7ff f8db 	bl	8006e5c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007ca6:	4b22      	ldr	r3, [pc, #136]	; (8007d30 <prvAddNewTaskToReadyList+0xe4>)
 8007ca8:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007cac:	4b21      	ldr	r3, [pc, #132]	; (8007d34 <prvAddNewTaskToReadyList+0xe8>)
 8007cae:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007cb0:	4a21      	ldr	r2, [pc, #132]	; (8007d38 <prvAddNewTaskToReadyList+0xec>)
 8007cb2:	6813      	ldr	r3, [r2, #0]
 8007cb4:	3301      	adds	r3, #1
 8007cb6:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007cb8:	4a20      	ldr	r2, [pc, #128]	; (8007d3c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007cba:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007cbc:	6811      	ldr	r1, [r2, #0]
 8007cbe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007cc0:	2014      	movs	r0, #20
 8007cc2:	428b      	cmp	r3, r1
 8007cc4:	fb00 7003 	mla	r0, r0, r3, r7
 8007cc8:	f104 0104 	add.w	r1, r4, #4
 8007ccc:	bf88      	it	hi
 8007cce:	6013      	strhi	r3, [r2, #0]
 8007cd0:	f7ff f8d2 	bl	8006e78 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007cd4:	f7ff f990 	bl	8006ff8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007cd8:	4b19      	ldr	r3, [pc, #100]	; (8007d40 <prvAddNewTaskToReadyList+0xf4>)
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	b163      	cbz	r3, 8007cf8 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007cde:	682b      	ldr	r3, [r5, #0]
 8007ce0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ce2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007ce4:	429a      	cmp	r2, r3
 8007ce6:	d207      	bcs.n	8007cf8 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007ce8:	4b16      	ldr	r3, [pc, #88]	; (8007d44 <prvAddNewTaskToReadyList+0xf8>)
 8007cea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007cee:	601a      	str	r2, [r3, #0]
 8007cf0:	f3bf 8f4f 	dsb	sy
 8007cf4:	f3bf 8f6f 	isb	sy
}
 8007cf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007cfc:	4b10      	ldr	r3, [pc, #64]	; (8007d40 <prvAddNewTaskToReadyList+0xf4>)
 8007cfe:	681b      	ldr	r3, [r3, #0]
 8007d00:	2b00      	cmp	r3, #0
 8007d02:	d1d5      	bne.n	8007cb0 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007d04:	682b      	ldr	r3, [r5, #0]
 8007d06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007d0a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007d0c:	bf98      	it	ls
 8007d0e:	602c      	strls	r4, [r5, #0]
 8007d10:	e7ce      	b.n	8007cb0 <prvAddNewTaskToReadyList+0x64>
 8007d12:	bf00      	nop
 8007d14:	20009ecc 	.word	0x20009ecc
 8007d18:	20009a60 	.word	0x20009a60
 8007d1c:	20009a6c 	.word	0x20009a6c
 8007d20:	20009ef4 	.word	0x20009ef4
 8007d24:	20009f14 	.word	0x20009f14
 8007d28:	20009f40 	.word	0x20009f40
 8007d2c:	20009f2c 	.word	0x20009f2c
 8007d30:	20009a64 	.word	0x20009a64
 8007d34:	20009a68 	.word	0x20009a68
 8007d38:	20009ed8 	.word	0x20009ed8
 8007d3c:	20009edc 	.word	0x20009edc
 8007d40:	20009f28 	.word	0x20009f28
 8007d44:	e000ed04 	.word	0xe000ed04
 8007d48:	20009ee0 	.word	0x20009ee0

08007d4c <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007d4c:	4a06      	ldr	r2, [pc, #24]	; (8007d68 <prvResetNextTaskUnblockTime+0x1c>)
 8007d4e:	6813      	ldr	r3, [r2, #0]
 8007d50:	6819      	ldr	r1, [r3, #0]
 8007d52:	4b06      	ldr	r3, [pc, #24]	; (8007d6c <prvResetNextTaskUnblockTime+0x20>)
 8007d54:	b919      	cbnz	r1, 8007d5e <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007d56:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007d5a:	601a      	str	r2, [r3, #0]
	}
}
 8007d5c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007d5e:	6812      	ldr	r2, [r2, #0]
 8007d60:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007d62:	68d2      	ldr	r2, [r2, #12]
 8007d64:	6852      	ldr	r2, [r2, #4]
 8007d66:	e7f8      	b.n	8007d5a <prvResetNextTaskUnblockTime+0xe>
 8007d68:	20009a64 	.word	0x20009a64
 8007d6c:	20009f08 	.word	0x20009f08

08007d70 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007d74:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007d78:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007d7c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007d7e:	4606      	mov	r6, r0
 8007d80:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007d82:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007d84:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007d86:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007d88:	f012 fba2 	bl	801a4d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007d8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d8e:	f1a9 0904 	sub.w	r9, r9, #4
 8007d92:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007d94:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007d98:	2d00      	cmp	r5, #0
 8007d9a:	d037      	beq.n	8007e0c <prvInitialiseNewTask.isra.0+0x9c>
 8007d9c:	1e6b      	subs	r3, r5, #1
 8007d9e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007da2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007da4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007da8:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007dac:	7819      	ldrb	r1, [r3, #0]
 8007dae:	b109      	cbz	r1, 8007db4 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007db0:	42ab      	cmp	r3, r5
 8007db2:	d1f7      	bne.n	8007da4 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007db4:	2300      	movs	r3, #0
 8007db6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8007dba:	9d08      	ldr	r5, [sp, #32]
 8007dbc:	2d37      	cmp	r5, #55	; 0x37
 8007dbe:	bf28      	it	cs
 8007dc0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007dc2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007dc6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007dc8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007dca:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007dcc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007dd0:	f7ff f84f 	bl	8006e72 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007dd4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007dd8:	f104 0018 	add.w	r0, r4, #24
 8007ddc:	f7ff f849 	bl	8006e72 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007de0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007de4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007de6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007de8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007dea:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007dee:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007df2:	463a      	mov	r2, r7
 8007df4:	4631      	mov	r1, r6
 8007df6:	4648      	mov	r0, r9
 8007df8:	f7ff f8b0 	bl	8006f5c <pxPortInitialiseStack>
 8007dfc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007dfe:	f1b8 0f00 	cmp.w	r8, #0
 8007e02:	d001      	beq.n	8007e08 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007e04:	f8c8 4000 	str.w	r4, [r8]
}
 8007e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007e0c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007e10:	e7d3      	b.n	8007dba <prvInitialiseNewTask.isra.0+0x4a>

08007e12 <prvDeleteTCB>:
	{
 8007e12:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e14:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007e18:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e1a:	b93b      	cbnz	r3, 8007e2c <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8007e1c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007e1e:	f7fe ffdf 	bl	8006de0 <vPortFree>
				vPortFree( pxTCB );
 8007e22:	4620      	mov	r0, r4
	}
 8007e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007e28:	f7fe bfda 	b.w	8006de0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007e2c:	2b01      	cmp	r3, #1
 8007e2e:	d0f9      	beq.n	8007e24 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007e30:	2b02      	cmp	r3, #2
 8007e32:	d008      	beq.n	8007e46 <prvDeleteTCB+0x34>
 8007e34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e38:	f383 8811 	msr	BASEPRI, r3
 8007e3c:	f3bf 8f6f 	isb	sy
 8007e40:	f3bf 8f4f 	dsb	sy
 8007e44:	e7fe      	b.n	8007e44 <prvDeleteTCB+0x32>
	}
 8007e46:	bd10      	pop	{r4, pc}

08007e48 <prvIdleTask>:
{
 8007e48:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007e4a:	4e14      	ldr	r6, [pc, #80]	; (8007e9c <prvIdleTask+0x54>)
				taskYIELD();
 8007e4c:	4f14      	ldr	r7, [pc, #80]	; (8007ea0 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007e4e:	4c15      	ldr	r4, [pc, #84]	; (8007ea4 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 8007e50:	4d15      	ldr	r5, [pc, #84]	; (8007ea8 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007e52:	6823      	ldr	r3, [r4, #0]
 8007e54:	b96b      	cbnz	r3, 8007e72 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007e56:	4b15      	ldr	r3, [pc, #84]	; (8007eac <prvIdleTask+0x64>)
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	2b01      	cmp	r3, #1
 8007e5c:	d906      	bls.n	8007e6c <prvIdleTask+0x24>
				taskYIELD();
 8007e5e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007e62:	603b      	str	r3, [r7, #0]
 8007e64:	f3bf 8f4f 	dsb	sy
 8007e68:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8007e6c:	f7f9 faba 	bl	80013e4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8007e70:	e7ed      	b.n	8007e4e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8007e72:	f7ff f89f 	bl	8006fb4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007e76:	68f3      	ldr	r3, [r6, #12]
 8007e78:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007e7c:	f108 0004 	add.w	r0, r8, #4
 8007e80:	f7ff f81d 	bl	8006ebe <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007e84:	682b      	ldr	r3, [r5, #0]
 8007e86:	3b01      	subs	r3, #1
 8007e88:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007e8a:	6823      	ldr	r3, [r4, #0]
 8007e8c:	3b01      	subs	r3, #1
 8007e8e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007e90:	f7ff f8b2 	bl	8006ff8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007e94:	4640      	mov	r0, r8
 8007e96:	f7ff ffbc 	bl	8007e12 <prvDeleteTCB>
 8007e9a:	e7da      	b.n	8007e52 <prvIdleTask+0xa>
 8007e9c:	20009f40 	.word	0x20009f40
 8007ea0:	e000ed04 	.word	0xe000ed04
 8007ea4:	20009ed0 	.word	0x20009ed0
 8007ea8:	20009ecc 	.word	0x20009ecc
 8007eac:	20009a6c 	.word	0x20009a6c

08007eb0 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007eb2:	4b16      	ldr	r3, [pc, #88]	; (8007f0c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007eb4:	4e16      	ldr	r6, [pc, #88]	; (8007f10 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8007eb6:	681d      	ldr	r5, [r3, #0]
{
 8007eb8:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007eba:	6830      	ldr	r0, [r6, #0]
 8007ebc:	3004      	adds	r0, #4
{
 8007ebe:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007ec0:	f7fe fffd 	bl	8006ebe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007ec4:	1c63      	adds	r3, r4, #1
 8007ec6:	4633      	mov	r3, r6
 8007ec8:	d107      	bne.n	8007eda <prvAddCurrentTaskToDelayedList+0x2a>
 8007eca:	b137      	cbz	r7, 8007eda <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ecc:	6831      	ldr	r1, [r6, #0]
 8007ece:	4811      	ldr	r0, [pc, #68]	; (8007f14 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007ed0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ed4:	3104      	adds	r1, #4
 8007ed6:	f7fe bfcf 	b.w	8006e78 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007eda:	681a      	ldr	r2, [r3, #0]
 8007edc:	192c      	adds	r4, r5, r4
 8007ede:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8007ee0:	d307      	bcc.n	8007ef2 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ee2:	4a0d      	ldr	r2, [pc, #52]	; (8007f18 <prvAddCurrentTaskToDelayedList+0x68>)
 8007ee4:	6810      	ldr	r0, [r2, #0]
 8007ee6:	6819      	ldr	r1, [r3, #0]
}
 8007ee8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007eec:	3104      	adds	r1, #4
 8007eee:	f7fe bfcf 	b.w	8006e90 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ef2:	4a0a      	ldr	r2, [pc, #40]	; (8007f1c <prvAddCurrentTaskToDelayedList+0x6c>)
 8007ef4:	6810      	ldr	r0, [r2, #0]
 8007ef6:	6819      	ldr	r1, [r3, #0]
 8007ef8:	3104      	adds	r1, #4
 8007efa:	f7fe ffc9 	bl	8006e90 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007efe:	4b08      	ldr	r3, [pc, #32]	; (8007f20 <prvAddCurrentTaskToDelayedList+0x70>)
 8007f00:	681a      	ldr	r2, [r3, #0]
 8007f02:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007f04:	bf88      	it	hi
 8007f06:	601c      	strhi	r4, [r3, #0]
}
 8007f08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007f0a:	bf00      	nop
 8007f0c:	20009f54 	.word	0x20009f54
 8007f10:	20009a60 	.word	0x20009a60
 8007f14:	20009f2c 	.word	0x20009f2c
 8007f18:	20009a68 	.word	0x20009a68
 8007f1c:	20009a64 	.word	0x20009a64
 8007f20:	20009f08 	.word	0x20009f08

08007f24 <xTaskCreateStatic>:
	{
 8007f24:	b570      	push	{r4, r5, r6, lr}
 8007f26:	b086      	sub	sp, #24
 8007f28:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8007f2c:	b945      	cbnz	r5, 8007f40 <xTaskCreateStatic+0x1c>
 8007f2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f32:	f383 8811 	msr	BASEPRI, r3
 8007f36:	f3bf 8f6f 	isb	sy
 8007f3a:	f3bf 8f4f 	dsb	sy
 8007f3e:	e7fe      	b.n	8007f3e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007f40:	b944      	cbnz	r4, 8007f54 <xTaskCreateStatic+0x30>
 8007f42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f46:	f383 8811 	msr	BASEPRI, r3
 8007f4a:	f3bf 8f6f 	isb	sy
 8007f4e:	f3bf 8f4f 	dsb	sy
 8007f52:	e7fe      	b.n	8007f52 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007f54:	2660      	movs	r6, #96	; 0x60
 8007f56:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007f58:	9e05      	ldr	r6, [sp, #20]
 8007f5a:	2e60      	cmp	r6, #96	; 0x60
 8007f5c:	d008      	beq.n	8007f70 <xTaskCreateStatic+0x4c>
 8007f5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f62:	f383 8811 	msr	BASEPRI, r3
 8007f66:	f3bf 8f6f 	isb	sy
 8007f6a:	f3bf 8f4f 	dsb	sy
 8007f6e:	e7fe      	b.n	8007f6e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007f70:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007f72:	2502      	movs	r5, #2
 8007f74:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007f78:	ad04      	add	r5, sp, #16
 8007f7a:	9501      	str	r5, [sp, #4]
 8007f7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f7e:	9402      	str	r4, [sp, #8]
 8007f80:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8007f82:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007f84:	f7ff fef4 	bl	8007d70 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007f88:	4620      	mov	r0, r4
 8007f8a:	f7ff fe5f 	bl	8007c4c <prvAddNewTaskToReadyList>
	}
 8007f8e:	9804      	ldr	r0, [sp, #16]
 8007f90:	b006      	add	sp, #24
 8007f92:	bd70      	pop	{r4, r5, r6, pc}

08007f94 <xTaskCreate>:
	{
 8007f94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f98:	4607      	mov	r7, r0
 8007f9a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007f9c:	0090      	lsls	r0, r2, #2
	{
 8007f9e:	4688      	mov	r8, r1
 8007fa0:	4616      	mov	r6, r2
 8007fa2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007fa4:	f7fe fe8a 	bl	8006cbc <pvPortMalloc>
			if( pxStack != NULL )
 8007fa8:	4605      	mov	r5, r0
 8007faa:	b1e8      	cbz	r0, 8007fe8 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8007fac:	2060      	movs	r0, #96	; 0x60
 8007fae:	f7fe fe85 	bl	8006cbc <pvPortMalloc>
				if( pxNewTCB != NULL )
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	b1a8      	cbz	r0, 8007fe2 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8007fb6:	2300      	movs	r3, #0
 8007fb8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007fbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8007fbe:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007fc0:	9301      	str	r3, [sp, #4]
 8007fc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007fc4:	9002      	str	r0, [sp, #8]
 8007fc6:	9300      	str	r3, [sp, #0]
 8007fc8:	4632      	mov	r2, r6
 8007fca:	464b      	mov	r3, r9
 8007fcc:	4641      	mov	r1, r8
 8007fce:	4638      	mov	r0, r7
 8007fd0:	f7ff fece 	bl	8007d70 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007fd4:	4620      	mov	r0, r4
 8007fd6:	f7ff fe39 	bl	8007c4c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8007fda:	2001      	movs	r0, #1
	}
 8007fdc:	b005      	add	sp, #20
 8007fde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8007fe2:	4628      	mov	r0, r5
 8007fe4:	f7fe fefc 	bl	8006de0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8007fe8:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8007fec:	e7f6      	b.n	8007fdc <xTaskCreate+0x48>
	...

08007ff0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8007ff0:	4a02      	ldr	r2, [pc, #8]	; (8007ffc <vTaskSuspendAll+0xc>)
 8007ff2:	6813      	ldr	r3, [r2, #0]
 8007ff4:	3301      	adds	r3, #1
 8007ff6:	6013      	str	r3, [r2, #0]
}
 8007ff8:	4770      	bx	lr
 8007ffa:	bf00      	nop
 8007ffc:	20009ed4 	.word	0x20009ed4

08008000 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008000:	4b01      	ldr	r3, [pc, #4]	; (8008008 <xTaskGetTickCount+0x8>)
 8008002:	6818      	ldr	r0, [r3, #0]
}
 8008004:	4770      	bx	lr
 8008006:	bf00      	nop
 8008008:	20009f54 	.word	0x20009f54

0800800c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800800c:	4b3f      	ldr	r3, [pc, #252]	; (800810c <xTaskIncrementTick+0x100>)
 800800e:	681b      	ldr	r3, [r3, #0]
{
 8008010:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008014:	2b00      	cmp	r3, #0
 8008016:	d173      	bne.n	8008100 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008018:	4b3d      	ldr	r3, [pc, #244]	; (8008110 <xTaskIncrementTick+0x104>)
 800801a:	681d      	ldr	r5, [r3, #0]
 800801c:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800801e:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008020:	b9bd      	cbnz	r5, 8008052 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008022:	4b3c      	ldr	r3, [pc, #240]	; (8008114 <xTaskIncrementTick+0x108>)
 8008024:	681a      	ldr	r2, [r3, #0]
 8008026:	6812      	ldr	r2, [r2, #0]
 8008028:	b142      	cbz	r2, 800803c <xTaskIncrementTick+0x30>
 800802a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800802e:	f383 8811 	msr	BASEPRI, r3
 8008032:	f3bf 8f6f 	isb	sy
 8008036:	f3bf 8f4f 	dsb	sy
 800803a:	e7fe      	b.n	800803a <xTaskIncrementTick+0x2e>
 800803c:	4a36      	ldr	r2, [pc, #216]	; (8008118 <xTaskIncrementTick+0x10c>)
 800803e:	6819      	ldr	r1, [r3, #0]
 8008040:	6810      	ldr	r0, [r2, #0]
 8008042:	6018      	str	r0, [r3, #0]
 8008044:	6011      	str	r1, [r2, #0]
 8008046:	4a35      	ldr	r2, [pc, #212]	; (800811c <xTaskIncrementTick+0x110>)
 8008048:	6813      	ldr	r3, [r2, #0]
 800804a:	3301      	adds	r3, #1
 800804c:	6013      	str	r3, [r2, #0]
 800804e:	f7ff fe7d 	bl	8007d4c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008052:	4e33      	ldr	r6, [pc, #204]	; (8008120 <xTaskIncrementTick+0x114>)
 8008054:	4f33      	ldr	r7, [pc, #204]	; (8008124 <xTaskIncrementTick+0x118>)
 8008056:	6833      	ldr	r3, [r6, #0]
 8008058:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008130 <xTaskIncrementTick+0x124>
 800805c:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800805e:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008062:	d211      	bcs.n	8008088 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008064:	f8d8 3000 	ldr.w	r3, [r8]
 8008068:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800806a:	2314      	movs	r3, #20
 800806c:	4353      	muls	r3, r2
 800806e:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008070:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8008072:	4b2d      	ldr	r3, [pc, #180]	; (8008128 <xTaskIncrementTick+0x11c>)
 8008074:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008076:	bf28      	it	cs
 8008078:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800807a:	2b00      	cmp	r3, #0
 800807c:	bf18      	it	ne
 800807e:	2401      	movne	r4, #1
}
 8008080:	4620      	mov	r0, r4
 8008082:	b003      	add	sp, #12
 8008084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008088:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008114 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800808c:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008134 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008090:	f8d9 3000 	ldr.w	r3, [r9]
 8008094:	681b      	ldr	r3, [r3, #0]
 8008096:	b91b      	cbnz	r3, 80080a0 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008098:	f04f 33ff 	mov.w	r3, #4294967295
 800809c:	6033      	str	r3, [r6, #0]
					break;
 800809e:	e7e1      	b.n	8008064 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080a0:	f8d9 3000 	ldr.w	r3, [r9]
 80080a4:	68db      	ldr	r3, [r3, #12]
 80080a6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80080aa:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80080ae:	4295      	cmp	r5, r2
 80080b0:	d201      	bcs.n	80080b6 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80080b2:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80080b4:	e7d6      	b.n	8008064 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80080b6:	f10b 0104 	add.w	r1, fp, #4
 80080ba:	4608      	mov	r0, r1
 80080bc:	9101      	str	r1, [sp, #4]
 80080be:	f7fe fefe 	bl	8006ebe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80080c2:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80080c6:	9901      	ldr	r1, [sp, #4]
 80080c8:	b122      	cbz	r2, 80080d4 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80080ca:	f10b 0018 	add.w	r0, fp, #24
 80080ce:	f7fe fef6 	bl	8006ebe <uxListRemove>
 80080d2:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80080d4:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80080d8:	f8da 2000 	ldr.w	r2, [sl]
 80080dc:	2314      	movs	r3, #20
 80080de:	4290      	cmp	r0, r2
 80080e0:	bf88      	it	hi
 80080e2:	f8ca 0000 	strhi.w	r0, [sl]
 80080e6:	fb03 7000 	mla	r0, r3, r0, r7
 80080ea:	f7fe fec5 	bl	8006e78 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80080ee:	f8d8 1000 	ldr.w	r1, [r8]
 80080f2:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80080f6:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80080f8:	429a      	cmp	r2, r3
 80080fa:	bf28      	it	cs
 80080fc:	2401      	movcs	r4, #1
 80080fe:	e7c7      	b.n	8008090 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008100:	4a0a      	ldr	r2, [pc, #40]	; (800812c <xTaskIncrementTick+0x120>)
 8008102:	6813      	ldr	r3, [r2, #0]
 8008104:	3301      	adds	r3, #1
 8008106:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008108:	2400      	movs	r4, #0
	return xSwitchRequired;
 800810a:	e7b9      	b.n	8008080 <xTaskIncrementTick+0x74>
 800810c:	20009ed4 	.word	0x20009ed4
 8008110:	20009f54 	.word	0x20009f54
 8008114:	20009a64 	.word	0x20009a64
 8008118:	20009a68 	.word	0x20009a68
 800811c:	20009f0c 	.word	0x20009f0c
 8008120:	20009f08 	.word	0x20009f08
 8008124:	20009a6c 	.word	0x20009a6c
 8008128:	20009f58 	.word	0x20009f58
 800812c:	20009f10 	.word	0x20009f10
 8008130:	20009a60 	.word	0x20009a60
 8008134:	20009edc 	.word	0x20009edc

08008138 <xTaskResumeAll>:
{
 8008138:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800813a:	4c30      	ldr	r4, [pc, #192]	; (80081fc <xTaskResumeAll+0xc4>)
 800813c:	6823      	ldr	r3, [r4, #0]
 800813e:	b943      	cbnz	r3, 8008152 <xTaskResumeAll+0x1a>
 8008140:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008144:	f383 8811 	msr	BASEPRI, r3
 8008148:	f3bf 8f6f 	isb	sy
 800814c:	f3bf 8f4f 	dsb	sy
 8008150:	e7fe      	b.n	8008150 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008152:	f7fe ff2f 	bl	8006fb4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008156:	6823      	ldr	r3, [r4, #0]
 8008158:	3b01      	subs	r3, #1
 800815a:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800815c:	6824      	ldr	r4, [r4, #0]
 800815e:	b12c      	cbz	r4, 800816c <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008160:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008162:	f7fe ff49 	bl	8006ff8 <vPortExitCritical>
}
 8008166:	4620      	mov	r0, r4
 8008168:	b003      	add	sp, #12
 800816a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800816c:	4b24      	ldr	r3, [pc, #144]	; (8008200 <xTaskResumeAll+0xc8>)
 800816e:	681b      	ldr	r3, [r3, #0]
 8008170:	2b00      	cmp	r3, #0
 8008172:	d0f5      	beq.n	8008160 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008174:	4d23      	ldr	r5, [pc, #140]	; (8008204 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008176:	4e24      	ldr	r6, [pc, #144]	; (8008208 <xTaskResumeAll+0xd0>)
 8008178:	4f24      	ldr	r7, [pc, #144]	; (800820c <xTaskResumeAll+0xd4>)
 800817a:	e01e      	b.n	80081ba <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800817c:	68eb      	ldr	r3, [r5, #12]
 800817e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008180:	f104 0018 	add.w	r0, r4, #24
 8008184:	f7fe fe9b 	bl	8006ebe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008188:	1d21      	adds	r1, r4, #4
 800818a:	4608      	mov	r0, r1
 800818c:	9101      	str	r1, [sp, #4]
 800818e:	f7fe fe96 	bl	8006ebe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008192:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008194:	6832      	ldr	r2, [r6, #0]
 8008196:	9901      	ldr	r1, [sp, #4]
 8008198:	2014      	movs	r0, #20
 800819a:	4293      	cmp	r3, r2
 800819c:	fb00 7003 	mla	r0, r0, r3, r7
 80081a0:	bf88      	it	hi
 80081a2:	6033      	strhi	r3, [r6, #0]
 80081a4:	f7fe fe68 	bl	8006e78 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80081a8:	4b19      	ldr	r3, [pc, #100]	; (8008210 <xTaskResumeAll+0xd8>)
 80081aa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081b0:	429a      	cmp	r2, r3
 80081b2:	d302      	bcc.n	80081ba <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80081b4:	4b17      	ldr	r3, [pc, #92]	; (8008214 <xTaskResumeAll+0xdc>)
 80081b6:	2201      	movs	r2, #1
 80081b8:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80081ba:	682b      	ldr	r3, [r5, #0]
 80081bc:	2b00      	cmp	r3, #0
 80081be:	d1dd      	bne.n	800817c <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80081c0:	b10c      	cbz	r4, 80081c6 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80081c2:	f7ff fdc3 	bl	8007d4c <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80081c6:	4d14      	ldr	r5, [pc, #80]	; (8008218 <xTaskResumeAll+0xe0>)
 80081c8:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80081ca:	b144      	cbz	r4, 80081de <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80081cc:	4e11      	ldr	r6, [pc, #68]	; (8008214 <xTaskResumeAll+0xdc>)
 80081ce:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80081d0:	f7ff ff1c 	bl	800800c <xTaskIncrementTick>
 80081d4:	b100      	cbz	r0, 80081d8 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80081d6:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80081d8:	3c01      	subs	r4, #1
 80081da:	d1f9      	bne.n	80081d0 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 80081dc:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80081de:	4b0d      	ldr	r3, [pc, #52]	; (8008214 <xTaskResumeAll+0xdc>)
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	2b00      	cmp	r3, #0
 80081e4:	d0bc      	beq.n	8008160 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80081e6:	4b0d      	ldr	r3, [pc, #52]	; (800821c <xTaskResumeAll+0xe4>)
 80081e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80081ec:	601a      	str	r2, [r3, #0]
 80081ee:	f3bf 8f4f 	dsb	sy
 80081f2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80081f6:	2401      	movs	r4, #1
 80081f8:	e7b3      	b.n	8008162 <xTaskResumeAll+0x2a>
 80081fa:	bf00      	nop
 80081fc:	20009ed4 	.word	0x20009ed4
 8008200:	20009ecc 	.word	0x20009ecc
 8008204:	20009f14 	.word	0x20009f14
 8008208:	20009edc 	.word	0x20009edc
 800820c:	20009a6c 	.word	0x20009a6c
 8008210:	20009a60 	.word	0x20009a60
 8008214:	20009f58 	.word	0x20009f58
 8008218:	20009f10 	.word	0x20009f10
 800821c:	e000ed04 	.word	0xe000ed04

08008220 <vTaskDelay>:
	{
 8008220:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008222:	b940      	cbnz	r0, 8008236 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8008224:	4b0e      	ldr	r3, [pc, #56]	; (8008260 <vTaskDelay+0x40>)
 8008226:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800822a:	601a      	str	r2, [r3, #0]
 800822c:	f3bf 8f4f 	dsb	sy
 8008230:	f3bf 8f6f 	isb	sy
	}
 8008234:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008236:	4b0b      	ldr	r3, [pc, #44]	; (8008264 <vTaskDelay+0x44>)
 8008238:	6819      	ldr	r1, [r3, #0]
 800823a:	b141      	cbz	r1, 800824e <vTaskDelay+0x2e>
 800823c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008240:	f383 8811 	msr	BASEPRI, r3
 8008244:	f3bf 8f6f 	isb	sy
 8008248:	f3bf 8f4f 	dsb	sy
 800824c:	e7fe      	b.n	800824c <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800824e:	f7ff fecf 	bl	8007ff0 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008252:	f7ff fe2d 	bl	8007eb0 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008256:	f7ff ff6f 	bl	8008138 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800825a:	2800      	cmp	r0, #0
 800825c:	d0e2      	beq.n	8008224 <vTaskDelay+0x4>
 800825e:	e7e9      	b.n	8008234 <vTaskDelay+0x14>
 8008260:	e000ed04 	.word	0xe000ed04
 8008264:	20009ed4 	.word	0x20009ed4

08008268 <vTaskSetApplicationTaskTag>:
	{
 8008268:	b538      	push	{r3, r4, r5, lr}
 800826a:	460d      	mov	r5, r1
		if( xTask == NULL )
 800826c:	4604      	mov	r4, r0
 800826e:	b908      	cbnz	r0, 8008274 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8008270:	4b04      	ldr	r3, [pc, #16]	; (8008284 <vTaskSetApplicationTaskTag+0x1c>)
 8008272:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008274:	f7fe fe9e 	bl	8006fb4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008278:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800827a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800827e:	f7fe bebb 	b.w	8006ff8 <vPortExitCritical>
 8008282:	bf00      	nop
 8008284:	20009a60 	.word	0x20009a60

08008288 <xTaskCallApplicationTaskHook>:
	{
 8008288:	4603      	mov	r3, r0
 800828a:	4608      	mov	r0, r1
		if( xTask == NULL )
 800828c:	b90b      	cbnz	r3, 8008292 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800828e:	4b03      	ldr	r3, [pc, #12]	; (800829c <xTaskCallApplicationTaskHook+0x14>)
 8008290:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8008292:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008294:	b103      	cbz	r3, 8008298 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008296:	4718      	bx	r3
	}
 8008298:	4618      	mov	r0, r3
 800829a:	4770      	bx	lr
 800829c:	20009a60 	.word	0x20009a60

080082a0 <vTaskStartScheduler>:
{
 80082a0:	b510      	push	{r4, lr}
 80082a2:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80082a4:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80082a6:	aa07      	add	r2, sp, #28
 80082a8:	a906      	add	r1, sp, #24
 80082aa:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80082ac:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80082b0:	f7fe fcc8 	bl	8006c44 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80082b4:	9b05      	ldr	r3, [sp, #20]
 80082b6:	9302      	str	r3, [sp, #8]
 80082b8:	9b06      	ldr	r3, [sp, #24]
 80082ba:	9a07      	ldr	r2, [sp, #28]
 80082bc:	4917      	ldr	r1, [pc, #92]	; (800831c <vTaskStartScheduler+0x7c>)
 80082be:	4818      	ldr	r0, [pc, #96]	; (8008320 <vTaskStartScheduler+0x80>)
 80082c0:	e9cd 4300 	strd	r4, r3, [sp]
 80082c4:	4623      	mov	r3, r4
 80082c6:	f7ff fe2d 	bl	8007f24 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80082ca:	b1d0      	cbz	r0, 8008302 <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
 80082cc:	f000 fa88 	bl	80087e0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80082d0:	2801      	cmp	r0, #1
 80082d2:	d118      	bne.n	8008306 <vTaskStartScheduler+0x66>
 80082d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082d8:	f383 8811 	msr	BASEPRI, r3
 80082dc:	f3bf 8f6f 	isb	sy
 80082e0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 80082e4:	4b0f      	ldr	r3, [pc, #60]	; (8008324 <vTaskStartScheduler+0x84>)
 80082e6:	f04f 32ff 	mov.w	r2, #4294967295
 80082ea:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80082ec:	4b0e      	ldr	r3, [pc, #56]	; (8008328 <vTaskStartScheduler+0x88>)
 80082ee:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80082f0:	4b0e      	ldr	r3, [pc, #56]	; (800832c <vTaskStartScheduler+0x8c>)
 80082f2:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 80082f4:	4b0e      	ldr	r3, [pc, #56]	; (8008330 <vTaskStartScheduler+0x90>)
 80082f6:	4621      	mov	r1, r4
 80082f8:	6818      	ldr	r0, [r3, #0]
 80082fa:	f7ff ffc5 	bl	8008288 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 80082fe:	f7fe fef1 	bl	80070e4 <xPortStartScheduler>
}
 8008302:	b008      	add	sp, #32
 8008304:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008306:	3001      	adds	r0, #1
 8008308:	d1fb      	bne.n	8008302 <vTaskStartScheduler+0x62>
 800830a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800830e:	f383 8811 	msr	BASEPRI, r3
 8008312:	f3bf 8f6f 	isb	sy
 8008316:	f3bf 8f4f 	dsb	sy
 800831a:	e7fe      	b.n	800831a <vTaskStartScheduler+0x7a>
 800831c:	0801c429 	.word	0x0801c429
 8008320:	08007e49 	.word	0x08007e49
 8008324:	20009f08 	.word	0x20009f08
 8008328:	20009f28 	.word	0x20009f28
 800832c:	20009f54 	.word	0x20009f54
 8008330:	20009a60 	.word	0x20009a60

08008334 <vTaskSwitchContext>:
{
 8008334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008336:	4b1d      	ldr	r3, [pc, #116]	; (80083ac <vTaskSwitchContext+0x78>)
 8008338:	681a      	ldr	r2, [r3, #0]
 800833a:	4b1d      	ldr	r3, [pc, #116]	; (80083b0 <vTaskSwitchContext+0x7c>)
 800833c:	b112      	cbz	r2, 8008344 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800833e:	2201      	movs	r2, #1
 8008340:	601a      	str	r2, [r3, #0]
}
 8008342:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008344:	4e1b      	ldr	r6, [pc, #108]	; (80083b4 <vTaskSwitchContext+0x80>)
		xYieldPending = pdFALSE;
 8008346:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8008348:	6830      	ldr	r0, [r6, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800834a:	4d1b      	ldr	r5, [pc, #108]	; (80083b8 <vTaskSwitchContext+0x84>)
		traceTASK_SWITCHED_OUT();
 800834c:	2101      	movs	r1, #1
 800834e:	f7ff ff9b 	bl	8008288 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008352:	4a1a      	ldr	r2, [pc, #104]	; (80083bc <vTaskSwitchContext+0x88>)
 8008354:	682b      	ldr	r3, [r5, #0]
 8008356:	f04f 0c14 	mov.w	ip, #20
 800835a:	4617      	mov	r7, r2
 800835c:	fb0c f103 	mul.w	r1, ip, r3
 8008360:	1850      	adds	r0, r2, r1
 8008362:	5854      	ldr	r4, [r2, r1]
 8008364:	b1ac      	cbz	r4, 8008392 <vTaskSwitchContext+0x5e>
 8008366:	6844      	ldr	r4, [r0, #4]
 8008368:	3108      	adds	r1, #8
 800836a:	6864      	ldr	r4, [r4, #4]
 800836c:	6044      	str	r4, [r0, #4]
 800836e:	440a      	add	r2, r1
 8008370:	4294      	cmp	r4, r2
 8008372:	bf04      	itt	eq
 8008374:	6862      	ldreq	r2, [r4, #4]
 8008376:	6042      	streq	r2, [r0, #4]
 8008378:	2214      	movs	r2, #20
 800837a:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 800837e:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008380:	6852      	ldr	r2, [r2, #4]
 8008382:	68d2      	ldr	r2, [r2, #12]
 8008384:	6032      	str	r2, [r6, #0]
 8008386:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 8008388:	6830      	ldr	r0, [r6, #0]
}
 800838a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800838e:	f7ff bf7b 	b.w	8008288 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008392:	b943      	cbnz	r3, 80083a6 <vTaskSwitchContext+0x72>
 8008394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008398:	f383 8811 	msr	BASEPRI, r3
 800839c:	f3bf 8f6f 	isb	sy
 80083a0:	f3bf 8f4f 	dsb	sy
 80083a4:	e7fe      	b.n	80083a4 <vTaskSwitchContext+0x70>
 80083a6:	3b01      	subs	r3, #1
 80083a8:	e7d8      	b.n	800835c <vTaskSwitchContext+0x28>
 80083aa:	bf00      	nop
 80083ac:	20009ed4 	.word	0x20009ed4
 80083b0:	20009f58 	.word	0x20009f58
 80083b4:	20009a60 	.word	0x20009a60
 80083b8:	20009edc 	.word	0x20009edc
 80083bc:	20009a6c 	.word	0x20009a6c

080083c0 <vTaskPlaceOnEventList>:
{
 80083c0:	b510      	push	{r4, lr}
 80083c2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80083c4:	b940      	cbnz	r0, 80083d8 <vTaskPlaceOnEventList+0x18>
 80083c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ca:	f383 8811 	msr	BASEPRI, r3
 80083ce:	f3bf 8f6f 	isb	sy
 80083d2:	f3bf 8f4f 	dsb	sy
 80083d6:	e7fe      	b.n	80083d6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80083d8:	4b05      	ldr	r3, [pc, #20]	; (80083f0 <vTaskPlaceOnEventList+0x30>)
 80083da:	6819      	ldr	r1, [r3, #0]
 80083dc:	3118      	adds	r1, #24
 80083de:	f7fe fd57 	bl	8006e90 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80083e2:	4620      	mov	r0, r4
 80083e4:	2101      	movs	r1, #1
}
 80083e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80083ea:	f7ff bd61 	b.w	8007eb0 <prvAddCurrentTaskToDelayedList>
 80083ee:	bf00      	nop
 80083f0:	20009a60 	.word	0x20009a60

080083f4 <vTaskPlaceOnEventListRestricted>:
	{
 80083f4:	b538      	push	{r3, r4, r5, lr}
 80083f6:	460d      	mov	r5, r1
 80083f8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80083fa:	b940      	cbnz	r0, 800840e <vTaskPlaceOnEventListRestricted+0x1a>
 80083fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008400:	f383 8811 	msr	BASEPRI, r3
 8008404:	f3bf 8f6f 	isb	sy
 8008408:	f3bf 8f4f 	dsb	sy
 800840c:	e7fe      	b.n	800840c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800840e:	4b07      	ldr	r3, [pc, #28]	; (800842c <vTaskPlaceOnEventListRestricted+0x38>)
 8008410:	6819      	ldr	r1, [r3, #0]
 8008412:	3118      	adds	r1, #24
 8008414:	f7fe fd30 	bl	8006e78 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008418:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800841a:	4621      	mov	r1, r4
 800841c:	bf0c      	ite	eq
 800841e:	4628      	moveq	r0, r5
 8008420:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008424:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008428:	f7ff bd42 	b.w	8007eb0 <prvAddCurrentTaskToDelayedList>
 800842c:	20009a60 	.word	0x20009a60

08008430 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008430:	68c3      	ldr	r3, [r0, #12]
{
 8008432:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008434:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008436:	b944      	cbnz	r4, 800844a <xTaskRemoveFromEventList+0x1a>
 8008438:	f04f 0350 	mov.w	r3, #80	; 0x50
 800843c:	f383 8811 	msr	BASEPRI, r3
 8008440:	f3bf 8f6f 	isb	sy
 8008444:	f3bf 8f4f 	dsb	sy
 8008448:	e7fe      	b.n	8008448 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800844a:	f104 0118 	add.w	r1, r4, #24
 800844e:	4608      	mov	r0, r1
 8008450:	9101      	str	r1, [sp, #4]
 8008452:	f7fe fd34 	bl	8006ebe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008456:	4b12      	ldr	r3, [pc, #72]	; (80084a0 <xTaskRemoveFromEventList+0x70>)
 8008458:	9901      	ldr	r1, [sp, #4]
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	b9eb      	cbnz	r3, 800849a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800845e:	1d21      	adds	r1, r4, #4
 8008460:	4608      	mov	r0, r1
 8008462:	9101      	str	r1, [sp, #4]
 8008464:	f7fe fd2b 	bl	8006ebe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008468:	4a0e      	ldr	r2, [pc, #56]	; (80084a4 <xTaskRemoveFromEventList+0x74>)
 800846a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800846c:	6810      	ldr	r0, [r2, #0]
 800846e:	9901      	ldr	r1, [sp, #4]
 8008470:	4283      	cmp	r3, r0
 8008472:	bf88      	it	hi
 8008474:	6013      	strhi	r3, [r2, #0]
 8008476:	4a0c      	ldr	r2, [pc, #48]	; (80084a8 <xTaskRemoveFromEventList+0x78>)
 8008478:	2014      	movs	r0, #20
 800847a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800847e:	f7fe fcfb 	bl	8006e78 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008482:	4b0a      	ldr	r3, [pc, #40]	; (80084ac <xTaskRemoveFromEventList+0x7c>)
 8008484:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008486:	681b      	ldr	r3, [r3, #0]
 8008488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800848a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800848c:	bf85      	ittet	hi
 800848e:	4b08      	ldrhi	r3, [pc, #32]	; (80084b0 <xTaskRemoveFromEventList+0x80>)
 8008490:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008492:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008494:	6018      	strhi	r0, [r3, #0]
}
 8008496:	b002      	add	sp, #8
 8008498:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800849a:	4806      	ldr	r0, [pc, #24]	; (80084b4 <xTaskRemoveFromEventList+0x84>)
 800849c:	e7ef      	b.n	800847e <xTaskRemoveFromEventList+0x4e>
 800849e:	bf00      	nop
 80084a0:	20009ed4 	.word	0x20009ed4
 80084a4:	20009edc 	.word	0x20009edc
 80084a8:	20009a6c 	.word	0x20009a6c
 80084ac:	20009a60 	.word	0x20009a60
 80084b0:	20009f58 	.word	0x20009f58
 80084b4:	20009f14 	.word	0x20009f14

080084b8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80084b8:	4b03      	ldr	r3, [pc, #12]	; (80084c8 <vTaskInternalSetTimeOutState+0x10>)
 80084ba:	681b      	ldr	r3, [r3, #0]
 80084bc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80084be:	4b03      	ldr	r3, [pc, #12]	; (80084cc <vTaskInternalSetTimeOutState+0x14>)
 80084c0:	681b      	ldr	r3, [r3, #0]
 80084c2:	6043      	str	r3, [r0, #4]
}
 80084c4:	4770      	bx	lr
 80084c6:	bf00      	nop
 80084c8:	20009f0c 	.word	0x20009f0c
 80084cc:	20009f54 	.word	0x20009f54

080084d0 <xTaskCheckForTimeOut>:
{
 80084d0:	b570      	push	{r4, r5, r6, lr}
 80084d2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80084d4:	4605      	mov	r5, r0
 80084d6:	b940      	cbnz	r0, 80084ea <xTaskCheckForTimeOut+0x1a>
 80084d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084dc:	f383 8811 	msr	BASEPRI, r3
 80084e0:	f3bf 8f6f 	isb	sy
 80084e4:	f3bf 8f4f 	dsb	sy
 80084e8:	e7fe      	b.n	80084e8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80084ea:	b941      	cbnz	r1, 80084fe <xTaskCheckForTimeOut+0x2e>
 80084ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084f0:	f383 8811 	msr	BASEPRI, r3
 80084f4:	f3bf 8f6f 	isb	sy
 80084f8:	f3bf 8f4f 	dsb	sy
 80084fc:	e7fe      	b.n	80084fc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80084fe:	f7fe fd59 	bl	8006fb4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008502:	4b0f      	ldr	r3, [pc, #60]	; (8008540 <xTaskCheckForTimeOut+0x70>)
 8008504:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008506:	6823      	ldr	r3, [r4, #0]
 8008508:	1c5a      	adds	r2, r3, #1
 800850a:	d010      	beq.n	800852e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800850c:	480d      	ldr	r0, [pc, #52]	; (8008544 <xTaskCheckForTimeOut+0x74>)
 800850e:	682e      	ldr	r6, [r5, #0]
 8008510:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008512:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008514:	4286      	cmp	r6, r0
 8008516:	d001      	beq.n	800851c <xTaskCheckForTimeOut+0x4c>
 8008518:	428a      	cmp	r2, r1
 800851a:	d90f      	bls.n	800853c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800851c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800851e:	4283      	cmp	r3, r0
 8008520:	d90a      	bls.n	8008538 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008522:	1a5b      	subs	r3, r3, r1
 8008524:	4413      	add	r3, r2
 8008526:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008528:	4628      	mov	r0, r5
 800852a:	f7ff ffc5 	bl	80084b8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800852e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008530:	f7fe fd62 	bl	8006ff8 <vPortExitCritical>
}
 8008534:	4620      	mov	r0, r4
 8008536:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008538:	2300      	movs	r3, #0
 800853a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800853c:	2401      	movs	r4, #1
 800853e:	e7f7      	b.n	8008530 <xTaskCheckForTimeOut+0x60>
 8008540:	20009f54 	.word	0x20009f54
 8008544:	20009f0c 	.word	0x20009f0c

08008548 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008548:	4b01      	ldr	r3, [pc, #4]	; (8008550 <vTaskMissedYield+0x8>)
 800854a:	2201      	movs	r2, #1
 800854c:	601a      	str	r2, [r3, #0]
}
 800854e:	4770      	bx	lr
 8008550:	20009f58 	.word	0x20009f58

08008554 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008554:	4b05      	ldr	r3, [pc, #20]	; (800856c <xTaskGetSchedulerState+0x18>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	b133      	cbz	r3, 8008568 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800855a:	4b05      	ldr	r3, [pc, #20]	; (8008570 <xTaskGetSchedulerState+0x1c>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008560:	bf0c      	ite	eq
 8008562:	2002      	moveq	r0, #2
 8008564:	2000      	movne	r0, #0
 8008566:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008568:	2001      	movs	r0, #1
	}
 800856a:	4770      	bx	lr
 800856c:	20009f28 	.word	0x20009f28
 8008570:	20009ed4 	.word	0x20009ed4

08008574 <xTaskPriorityInherit>:
	{
 8008574:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008576:	4604      	mov	r4, r0
 8008578:	b350      	cbz	r0, 80085d0 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800857a:	4a1c      	ldr	r2, [pc, #112]	; (80085ec <xTaskPriorityInherit+0x78>)
 800857c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800857e:	6811      	ldr	r1, [r2, #0]
 8008580:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008582:	428b      	cmp	r3, r1
 8008584:	4616      	mov	r6, r2
 8008586:	d229      	bcs.n	80085dc <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008588:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800858a:	4d19      	ldr	r5, [pc, #100]	; (80085f0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800858c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800858e:	bfa1      	itttt	ge
 8008590:	6832      	ldrge	r2, [r6, #0]
 8008592:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008594:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008598:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800859a:	2214      	movs	r2, #20
 800859c:	fb02 5303 	mla	r3, r2, r3, r5
 80085a0:	6942      	ldr	r2, [r0, #20]
 80085a2:	429a      	cmp	r2, r3
 80085a4:	d116      	bne.n	80085d4 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80085a6:	1d01      	adds	r1, r0, #4
 80085a8:	4608      	mov	r0, r1
 80085aa:	9101      	str	r1, [sp, #4]
 80085ac:	f7fe fc87 	bl	8006ebe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80085b0:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80085b2:	4a10      	ldr	r2, [pc, #64]	; (80085f4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80085b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80085b6:	6810      	ldr	r0, [r2, #0]
 80085b8:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80085ba:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80085bc:	4283      	cmp	r3, r0
 80085be:	f04f 0014 	mov.w	r0, #20
 80085c2:	fb00 5003 	mla	r0, r0, r3, r5
 80085c6:	bf88      	it	hi
 80085c8:	6013      	strhi	r3, [r2, #0]
 80085ca:	f7fe fc55 	bl	8006e78 <vListInsertEnd>
				xReturn = pdTRUE;
 80085ce:	2001      	movs	r0, #1
	}
 80085d0:	b002      	add	sp, #8
 80085d2:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80085d4:	6833      	ldr	r3, [r6, #0]
 80085d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085d8:	62c3      	str	r3, [r0, #44]	; 0x2c
 80085da:	e7f8      	b.n	80085ce <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80085dc:	6813      	ldr	r3, [r2, #0]
 80085de:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80085e0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80085e2:	42a0      	cmp	r0, r4
 80085e4:	bf2c      	ite	cs
 80085e6:	2000      	movcs	r0, #0
 80085e8:	2001      	movcc	r0, #1
 80085ea:	e7f1      	b.n	80085d0 <xTaskPriorityInherit+0x5c>
 80085ec:	20009a60 	.word	0x20009a60
 80085f0:	20009a6c 	.word	0x20009a6c
 80085f4:	20009edc 	.word	0x20009edc

080085f8 <xTaskPriorityDisinherit>:
	{
 80085f8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 80085fa:	b910      	cbnz	r0, 8008602 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 80085fc:	2000      	movs	r0, #0
	}
 80085fe:	b002      	add	sp, #8
 8008600:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008602:	4b1c      	ldr	r3, [pc, #112]	; (8008674 <xTaskPriorityDisinherit+0x7c>)
 8008604:	681c      	ldr	r4, [r3, #0]
 8008606:	4284      	cmp	r4, r0
 8008608:	d008      	beq.n	800861c <xTaskPriorityDisinherit+0x24>
 800860a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800860e:	f383 8811 	msr	BASEPRI, r3
 8008612:	f3bf 8f6f 	isb	sy
 8008616:	f3bf 8f4f 	dsb	sy
 800861a:	e7fe      	b.n	800861a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800861c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800861e:	b943      	cbnz	r3, 8008632 <xTaskPriorityDisinherit+0x3a>
 8008620:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008624:	f383 8811 	msr	BASEPRI, r3
 8008628:	f3bf 8f6f 	isb	sy
 800862c:	f3bf 8f4f 	dsb	sy
 8008630:	e7fe      	b.n	8008630 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008632:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008634:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008636:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008638:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800863a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800863c:	d0de      	beq.n	80085fc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800863e:	2b00      	cmp	r3, #0
 8008640:	d1dc      	bne.n	80085fc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008642:	1d21      	adds	r1, r4, #4
 8008644:	4608      	mov	r0, r1
 8008646:	9101      	str	r1, [sp, #4]
 8008648:	f7fe fc39 	bl	8006ebe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800864c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800864e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008650:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008652:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008656:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008658:	4a07      	ldr	r2, [pc, #28]	; (8008678 <xTaskPriorityDisinherit+0x80>)
 800865a:	6810      	ldr	r0, [r2, #0]
 800865c:	4283      	cmp	r3, r0
 800865e:	bf88      	it	hi
 8008660:	6013      	strhi	r3, [r2, #0]
 8008662:	4a06      	ldr	r2, [pc, #24]	; (800867c <xTaskPriorityDisinherit+0x84>)
 8008664:	2014      	movs	r0, #20
 8008666:	fb00 2003 	mla	r0, r0, r3, r2
 800866a:	f7fe fc05 	bl	8006e78 <vListInsertEnd>
					xReturn = pdTRUE;
 800866e:	2001      	movs	r0, #1
		return xReturn;
 8008670:	e7c5      	b.n	80085fe <xTaskPriorityDisinherit+0x6>
 8008672:	bf00      	nop
 8008674:	20009a60 	.word	0x20009a60
 8008678:	20009edc 	.word	0x20009edc
 800867c:	20009a6c 	.word	0x20009a6c

08008680 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008680:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008682:	4604      	mov	r4, r0
 8008684:	2800      	cmp	r0, #0
 8008686:	d044      	beq.n	8008712 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008688:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800868a:	b942      	cbnz	r2, 800869e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800868c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008690:	f383 8811 	msr	BASEPRI, r3
 8008694:	f3bf 8f6f 	isb	sy
 8008698:	f3bf 8f4f 	dsb	sy
 800869c:	e7fe      	b.n	800869c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800869e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80086a0:	4299      	cmp	r1, r3
 80086a2:	bf38      	it	cc
 80086a4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80086a6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80086a8:	428b      	cmp	r3, r1
 80086aa:	d032      	beq.n	8008712 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80086ac:	2a01      	cmp	r2, #1
 80086ae:	d130      	bne.n	8008712 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 80086b0:	4a19      	ldr	r2, [pc, #100]	; (8008718 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80086b2:	6812      	ldr	r2, [r2, #0]
 80086b4:	4282      	cmp	r2, r0
 80086b6:	d108      	bne.n	80086ca <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80086b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086bc:	f383 8811 	msr	BASEPRI, r3
 80086c0:	f3bf 8f6f 	isb	sy
 80086c4:	f3bf 8f4f 	dsb	sy
 80086c8:	e7fe      	b.n	80086c8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086ca:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80086cc:	4d13      	ldr	r5, [pc, #76]	; (800871c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 80086ce:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086d0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80086d2:	f04f 0214 	mov.w	r2, #20
 80086d6:	fb02 5303 	mla	r3, r2, r3, r5
 80086da:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086dc:	bfa4      	itt	ge
 80086de:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80086e2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80086e4:	429a      	cmp	r2, r3
 80086e6:	d114      	bne.n	8008712 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80086e8:	1d01      	adds	r1, r0, #4
 80086ea:	4608      	mov	r0, r1
 80086ec:	9101      	str	r1, [sp, #4]
 80086ee:	f7fe fbe6 	bl	8006ebe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80086f2:	4a0b      	ldr	r2, [pc, #44]	; (8008720 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80086f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086f6:	6810      	ldr	r0, [r2, #0]
 80086f8:	9901      	ldr	r1, [sp, #4]
 80086fa:	4283      	cmp	r3, r0
 80086fc:	f04f 0014 	mov.w	r0, #20
 8008700:	fb00 5003 	mla	r0, r0, r3, r5
 8008704:	bf88      	it	hi
 8008706:	6013      	strhi	r3, [r2, #0]
	}
 8008708:	b003      	add	sp, #12
 800870a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800870e:	f7fe bbb3 	b.w	8006e78 <vListInsertEnd>
	}
 8008712:	b003      	add	sp, #12
 8008714:	bd30      	pop	{r4, r5, pc}
 8008716:	bf00      	nop
 8008718:	20009a60 	.word	0x20009a60
 800871c:	20009a6c 	.word	0x20009a6c
 8008720:	20009edc 	.word	0x20009edc

08008724 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008724:	4b04      	ldr	r3, [pc, #16]	; (8008738 <pvTaskIncrementMutexHeldCount+0x14>)
 8008726:	681a      	ldr	r2, [r3, #0]
 8008728:	b11a      	cbz	r2, 8008732 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800872a:	6819      	ldr	r1, [r3, #0]
 800872c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800872e:	3201      	adds	r2, #1
 8008730:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008732:	6818      	ldr	r0, [r3, #0]
	}
 8008734:	4770      	bx	lr
 8008736:	bf00      	nop
 8008738:	20009a60 	.word	0x20009a60

0800873c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800873c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800873e:	4c11      	ldr	r4, [pc, #68]	; (8008784 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008740:	f7fe fc38 	bl	8006fb4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008744:	6825      	ldr	r5, [r4, #0]
 8008746:	b9bd      	cbnz	r5, 8008778 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008748:	4f0f      	ldr	r7, [pc, #60]	; (8008788 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800874a:	4e10      	ldr	r6, [pc, #64]	; (800878c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800874c:	4638      	mov	r0, r7
 800874e:	f7fe fb85 	bl	8006e5c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008752:	4630      	mov	r0, r6
 8008754:	f7fe fb82 	bl	8006e5c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008758:	4b0d      	ldr	r3, [pc, #52]	; (8008790 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800875a:	4a0e      	ldr	r2, [pc, #56]	; (8008794 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800875c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800875e:	4b0e      	ldr	r3, [pc, #56]	; (8008798 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008760:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008762:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008764:	200a      	movs	r0, #10
 8008766:	4b0d      	ldr	r3, [pc, #52]	; (800879c <prvCheckForValidListAndQueue+0x60>)
 8008768:	9500      	str	r5, [sp, #0]
 800876a:	f7fe fe3b 	bl	80073e4 <xQueueGenericCreateStatic>
 800876e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008770:	b110      	cbz	r0, 8008778 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008772:	490b      	ldr	r1, [pc, #44]	; (80087a0 <prvCheckForValidListAndQueue+0x64>)
 8008774:	f7ff fa08 	bl	8007b88 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008778:	b003      	add	sp, #12
 800877a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800877e:	f7fe bc3b 	b.w	8006ff8 <vPortExitCritical>
 8008782:	bf00      	nop
 8008784:	2000a080 	.word	0x2000a080
 8008788:	2000a004 	.word	0x2000a004
 800878c:	2000a018 	.word	0x2000a018
 8008790:	20009f5c 	.word	0x20009f5c
 8008794:	20009f64 	.word	0x20009f64
 8008798:	20009f60 	.word	0x20009f60
 800879c:	2000a030 	.word	0x2000a030
 80087a0:	0801c42e 	.word	0x0801c42e

080087a4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 80087a4:	4291      	cmp	r1, r2
{
 80087a6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80087a8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80087aa:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80087ac:	d80a      	bhi.n	80087c4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80087ae:	1ad2      	subs	r2, r2, r3
 80087b0:	6983      	ldr	r3, [r0, #24]
 80087b2:	429a      	cmp	r2, r3
 80087b4:	d20d      	bcs.n	80087d2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80087b6:	4b08      	ldr	r3, [pc, #32]	; (80087d8 <prvInsertTimerInActiveList+0x34>)
 80087b8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80087ba:	6818      	ldr	r0, [r3, #0]
 80087bc:	f7fe fb68 	bl	8006e90 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80087c0:	2000      	movs	r0, #0
}
 80087c2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80087c4:	429a      	cmp	r2, r3
 80087c6:	d201      	bcs.n	80087cc <prvInsertTimerInActiveList+0x28>
 80087c8:	4299      	cmp	r1, r3
 80087ca:	d202      	bcs.n	80087d2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80087cc:	4b03      	ldr	r3, [pc, #12]	; (80087dc <prvInsertTimerInActiveList+0x38>)
 80087ce:	1d01      	adds	r1, r0, #4
 80087d0:	e7f3      	b.n	80087ba <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80087d2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80087d4:	e7f5      	b.n	80087c2 <prvInsertTimerInActiveList+0x1e>
 80087d6:	bf00      	nop
 80087d8:	20009f60 	.word	0x20009f60
 80087dc:	20009f5c 	.word	0x20009f5c

080087e0 <xTimerCreateTimerTask>:
{
 80087e0:	b510      	push	{r4, lr}
 80087e2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80087e4:	f7ff ffaa 	bl	800873c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80087e8:	4b12      	ldr	r3, [pc, #72]	; (8008834 <xTimerCreateTimerTask+0x54>)
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	b1b3      	cbz	r3, 800881c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80087ee:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80087f0:	aa07      	add	r2, sp, #28
 80087f2:	a906      	add	r1, sp, #24
 80087f4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80087f6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80087fa:	f7fe fa2f 	bl	8006c5c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80087fe:	9b05      	ldr	r3, [sp, #20]
 8008800:	9302      	str	r3, [sp, #8]
 8008802:	9b06      	ldr	r3, [sp, #24]
 8008804:	9301      	str	r3, [sp, #4]
 8008806:	2302      	movs	r3, #2
 8008808:	9300      	str	r3, [sp, #0]
 800880a:	9a07      	ldr	r2, [sp, #28]
 800880c:	490a      	ldr	r1, [pc, #40]	; (8008838 <xTimerCreateTimerTask+0x58>)
 800880e:	480b      	ldr	r0, [pc, #44]	; (800883c <xTimerCreateTimerTask+0x5c>)
 8008810:	4623      	mov	r3, r4
 8008812:	f7ff fb87 	bl	8007f24 <xTaskCreateStatic>
 8008816:	4b0a      	ldr	r3, [pc, #40]	; (8008840 <xTimerCreateTimerTask+0x60>)
 8008818:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800881a:	b940      	cbnz	r0, 800882e <xTimerCreateTimerTask+0x4e>
 800881c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008820:	f383 8811 	msr	BASEPRI, r3
 8008824:	f3bf 8f6f 	isb	sy
 8008828:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800882c:	e7fe      	b.n	800882c <xTimerCreateTimerTask+0x4c>
}
 800882e:	2001      	movs	r0, #1
 8008830:	b008      	add	sp, #32
 8008832:	bd10      	pop	{r4, pc}
 8008834:	2000a080 	.word	0x2000a080
 8008838:	0801c433 	.word	0x0801c433
 800883c:	08008919 	.word	0x08008919
 8008840:	2000a084 	.word	0x2000a084

08008844 <xTimerGenericCommand>:
{
 8008844:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008846:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008848:	4604      	mov	r4, r0
{
 800884a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800884c:	b940      	cbnz	r0, 8008860 <xTimerGenericCommand+0x1c>
 800884e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008852:	f383 8811 	msr	BASEPRI, r3
 8008856:	f3bf 8f6f 	isb	sy
 800885a:	f3bf 8f4f 	dsb	sy
 800885e:	e7fe      	b.n	800885e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008860:	4d0d      	ldr	r5, [pc, #52]	; (8008898 <xTimerGenericCommand+0x54>)
 8008862:	6828      	ldr	r0, [r5, #0]
 8008864:	b180      	cbz	r0, 8008888 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008866:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008868:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800886c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800886e:	dc0d      	bgt.n	800888c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008870:	f7ff fe70 	bl	8008554 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008874:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008876:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008878:	bf08      	it	eq
 800887a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800887c:	6828      	ldr	r0, [r5, #0]
 800887e:	bf18      	it	ne
 8008880:	461a      	movne	r2, r3
 8008882:	4669      	mov	r1, sp
 8008884:	f7fe fe64 	bl	8007550 <xQueueGenericSend>
}
 8008888:	b004      	add	sp, #16
 800888a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800888c:	2300      	movs	r3, #0
 800888e:	4669      	mov	r1, sp
 8008890:	f7fe ff10 	bl	80076b4 <xQueueGenericSendFromISR>
 8008894:	e7f8      	b.n	8008888 <xTimerGenericCommand+0x44>
 8008896:	bf00      	nop
 8008898:	2000a080 	.word	0x2000a080

0800889c <prvSwitchTimerLists>:
{
 800889c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800889e:	4d1c      	ldr	r5, [pc, #112]	; (8008910 <prvSwitchTimerLists+0x74>)
{
 80088a0:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80088a2:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80088a4:	682b      	ldr	r3, [r5, #0]
 80088a6:	681a      	ldr	r2, [r3, #0]
 80088a8:	b92a      	cbnz	r2, 80088b6 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 80088aa:	4a1a      	ldr	r2, [pc, #104]	; (8008914 <prvSwitchTimerLists+0x78>)
 80088ac:	6811      	ldr	r1, [r2, #0]
 80088ae:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 80088b0:	6013      	str	r3, [r2, #0]
}
 80088b2:	b005      	add	sp, #20
 80088b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80088b6:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80088b8:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80088ba:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80088bc:	1d21      	adds	r1, r4, #4
 80088be:	4608      	mov	r0, r1
 80088c0:	9103      	str	r1, [sp, #12]
 80088c2:	f7fe fafc 	bl	8006ebe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80088c6:	6a23      	ldr	r3, [r4, #32]
 80088c8:	4620      	mov	r0, r4
 80088ca:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80088cc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80088d0:	9903      	ldr	r1, [sp, #12]
 80088d2:	f013 0f04 	tst.w	r3, #4
 80088d6:	d0e5      	beq.n	80088a4 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80088d8:	69a3      	ldr	r3, [r4, #24]
 80088da:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80088dc:	429e      	cmp	r6, r3
 80088de:	d205      	bcs.n	80088ec <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80088e0:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80088e2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80088e4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80088e6:	f7fe fad3 	bl	8006e90 <vListInsert>
 80088ea:	e7db      	b.n	80088a4 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80088ec:	2300      	movs	r3, #0
 80088ee:	9700      	str	r7, [sp, #0]
 80088f0:	4632      	mov	r2, r6
 80088f2:	4619      	mov	r1, r3
 80088f4:	4620      	mov	r0, r4
 80088f6:	f7ff ffa5 	bl	8008844 <xTimerGenericCommand>
				configASSERT( xResult );
 80088fa:	2800      	cmp	r0, #0
 80088fc:	d1d2      	bne.n	80088a4 <prvSwitchTimerLists+0x8>
 80088fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008902:	f383 8811 	msr	BASEPRI, r3
 8008906:	f3bf 8f6f 	isb	sy
 800890a:	f3bf 8f4f 	dsb	sy
 800890e:	e7fe      	b.n	800890e <prvSwitchTimerLists+0x72>
 8008910:	20009f5c 	.word	0x20009f5c
 8008914:	20009f60 	.word	0x20009f60

08008918 <prvTimerTask>:
{
 8008918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800891c:	4f77      	ldr	r7, [pc, #476]	; (8008afc <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800891e:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8008b0c <prvTimerTask+0x1f4>
{
 8008922:	b087      	sub	sp, #28
 8008924:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008926:	683b      	ldr	r3, [r7, #0]
 8008928:	f8d3 b000 	ldr.w	fp, [r3]
 800892c:	f1bb 0f00 	cmp.w	fp, #0
 8008930:	d028      	beq.n	8008984 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008932:	68db      	ldr	r3, [r3, #12]
 8008934:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008938:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800893a:	4e71      	ldr	r6, [pc, #452]	; (8008b00 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800893c:	f7ff fb58 	bl	8007ff0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8008940:	f7ff fb5e 	bl	8008000 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008944:	6833      	ldr	r3, [r6, #0]
 8008946:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008948:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800894a:	46b0      	mov	r8, r6
 800894c:	d31c      	bcc.n	8008988 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800894e:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008950:	b31c      	cbz	r4, 800899a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008952:	4b6c      	ldr	r3, [pc, #432]	; (8008b04 <prvTimerTask+0x1ec>)
 8008954:	681b      	ldr	r3, [r3, #0]
 8008956:	681c      	ldr	r4, [r3, #0]
 8008958:	fab4 f484 	clz	r4, r4
 800895c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800895e:	4b6a      	ldr	r3, [pc, #424]	; (8008b08 <prvTimerTask+0x1f0>)
 8008960:	4622      	mov	r2, r4
 8008962:	6818      	ldr	r0, [r3, #0]
 8008964:	ebab 0105 	sub.w	r1, fp, r5
 8008968:	f7ff f94d 	bl	8007c06 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800896c:	f7ff fbe4 	bl	8008138 <xTaskResumeAll>
 8008970:	b978      	cbnz	r0, 8008992 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8008972:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008976:	f8ca 3000 	str.w	r3, [sl]
 800897a:	f3bf 8f4f 	dsb	sy
 800897e:	f3bf 8f6f 	isb	sy
 8008982:	e006      	b.n	8008992 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008984:	2401      	movs	r4, #1
 8008986:	e7d8      	b.n	800893a <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8008988:	f7ff ff88 	bl	800889c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800898c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800898e:	f7ff fbd3 	bl	8008138 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008992:	4e5d      	ldr	r6, [pc, #372]	; (8008b08 <prvTimerTask+0x1f0>)
 8008994:	f04f 0b00 	mov.w	fp, #0
 8008998:	e035      	b.n	8008a06 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800899a:	4583      	cmp	fp, r0
 800899c:	d8df      	bhi.n	800895e <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800899e:	f7ff fbcb 	bl	8008138 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80089a2:	f8d9 3000 	ldr.w	r3, [r9]
 80089a6:	68db      	ldr	r3, [r3, #12]
 80089a8:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80089aa:	1d30      	adds	r0, r6, #4
 80089ac:	f7fe fa87 	bl	8006ebe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80089b0:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 80089b4:	0758      	lsls	r0, r3, #29
 80089b6:	d518      	bpl.n	80089ea <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80089b8:	69b1      	ldr	r1, [r6, #24]
 80089ba:	465b      	mov	r3, fp
 80089bc:	462a      	mov	r2, r5
 80089be:	4459      	add	r1, fp
 80089c0:	4630      	mov	r0, r6
 80089c2:	f7ff feef 	bl	80087a4 <prvInsertTimerInActiveList>
 80089c6:	b1a0      	cbz	r0, 80089f2 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80089c8:	9400      	str	r4, [sp, #0]
 80089ca:	4623      	mov	r3, r4
 80089cc:	465a      	mov	r2, fp
 80089ce:	4621      	mov	r1, r4
 80089d0:	4630      	mov	r0, r6
 80089d2:	f7ff ff37 	bl	8008844 <xTimerGenericCommand>
			configASSERT( xResult );
 80089d6:	b960      	cbnz	r0, 80089f2 <prvTimerTask+0xda>
 80089d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089dc:	f383 8811 	msr	BASEPRI, r3
 80089e0:	f3bf 8f6f 	isb	sy
 80089e4:	f3bf 8f4f 	dsb	sy
 80089e8:	e7fe      	b.n	80089e8 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80089ea:	f023 0301 	bic.w	r3, r3, #1
 80089ee:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80089f2:	6a33      	ldr	r3, [r6, #32]
 80089f4:	4630      	mov	r0, r6
 80089f6:	4798      	blx	r3
}
 80089f8:	e7cb      	b.n	8008992 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80089fa:	9b03      	ldr	r3, [sp, #12]
 80089fc:	9905      	ldr	r1, [sp, #20]
 80089fe:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008a00:	9b02      	ldr	r3, [sp, #8]
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	da0a      	bge.n	8008a1c <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008a06:	6830      	ldr	r0, [r6, #0]
 8008a08:	2200      	movs	r2, #0
 8008a0a:	a902      	add	r1, sp, #8
 8008a0c:	f7fe ff08 	bl	8007820 <xQueueReceive>
 8008a10:	2800      	cmp	r0, #0
 8008a12:	d088      	beq.n	8008926 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008a14:	9b02      	ldr	r3, [sp, #8]
 8008a16:	9804      	ldr	r0, [sp, #16]
 8008a18:	2b00      	cmp	r3, #0
 8008a1a:	dbee      	blt.n	80089fa <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008a1c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008a1e:	6963      	ldr	r3, [r4, #20]
 8008a20:	b9a3      	cbnz	r3, 8008a4c <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8008a22:	f7ff faed 	bl	8008000 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008a26:	f8d8 3000 	ldr.w	r3, [r8]
 8008a2a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008a2c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008a2e:	d201      	bcs.n	8008a34 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8008a30:	f7ff ff34 	bl	800889c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008a34:	9b02      	ldr	r3, [sp, #8]
 8008a36:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 8008a3a:	2b09      	cmp	r3, #9
 8008a3c:	d8e3      	bhi.n	8008a06 <prvTimerTask+0xee>
 8008a3e:	e8df f003 	tbb	[pc, r3]
 8008a42:	0909      	.short	0x0909
 8008a44:	543b3409 	.word	0x543b3409
 8008a48:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a4c:	1d20      	adds	r0, r4, #4
 8008a4e:	f7fe fa36 	bl	8006ebe <uxListRemove>
 8008a52:	e7e6      	b.n	8008a22 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a54:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a58:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a5a:	f043 0301 	orr.w	r3, r3, #1
 8008a5e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a62:	9b03      	ldr	r3, [sp, #12]
 8008a64:	462a      	mov	r2, r5
 8008a66:	4419      	add	r1, r3
 8008a68:	4620      	mov	r0, r4
 8008a6a:	f7ff fe9b 	bl	80087a4 <prvInsertTimerInActiveList>
 8008a6e:	2800      	cmp	r0, #0
 8008a70:	d0c9      	beq.n	8008a06 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a72:	6a23      	ldr	r3, [r4, #32]
 8008a74:	4620      	mov	r0, r4
 8008a76:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008a7c:	0759      	lsls	r1, r3, #29
 8008a7e:	d5c2      	bpl.n	8008a06 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008a80:	69a2      	ldr	r2, [r4, #24]
 8008a82:	9903      	ldr	r1, [sp, #12]
 8008a84:	f8cd b000 	str.w	fp, [sp]
 8008a88:	2300      	movs	r3, #0
 8008a8a:	440a      	add	r2, r1
 8008a8c:	4620      	mov	r0, r4
 8008a8e:	4619      	mov	r1, r3
 8008a90:	f7ff fed8 	bl	8008844 <xTimerGenericCommand>
							configASSERT( xResult );
 8008a94:	2800      	cmp	r0, #0
 8008a96:	d1b6      	bne.n	8008a06 <prvTimerTask+0xee>
 8008a98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a9c:	f383 8811 	msr	BASEPRI, r3
 8008aa0:	f3bf 8f6f 	isb	sy
 8008aa4:	f3bf 8f4f 	dsb	sy
 8008aa8:	e7fe      	b.n	8008aa8 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008aaa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008aae:	f023 0301 	bic.w	r3, r3, #1
 8008ab2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008ab6:	e7a6      	b.n	8008a06 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ab8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008abc:	9903      	ldr	r1, [sp, #12]
 8008abe:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ac0:	f043 0301 	orr.w	r3, r3, #1
 8008ac4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008ac8:	b941      	cbnz	r1, 8008adc <prvTimerTask+0x1c4>
 8008aca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ace:	f383 8811 	msr	BASEPRI, r3
 8008ad2:	f3bf 8f6f 	isb	sy
 8008ad6:	f3bf 8f4f 	dsb	sy
 8008ada:	e7fe      	b.n	8008ada <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008adc:	462b      	mov	r3, r5
 8008ade:	462a      	mov	r2, r5
 8008ae0:	4429      	add	r1, r5
 8008ae2:	4620      	mov	r0, r4
 8008ae4:	f7ff fe5e 	bl	80087a4 <prvInsertTimerInActiveList>
					break;
 8008ae8:	e78d      	b.n	8008a06 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008aea:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008aee:	079a      	lsls	r2, r3, #30
 8008af0:	d4dd      	bmi.n	8008aae <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8008af2:	4620      	mov	r0, r4
 8008af4:	f7fe f974 	bl	8006de0 <vPortFree>
 8008af8:	e785      	b.n	8008a06 <prvTimerTask+0xee>
 8008afa:	bf00      	nop
 8008afc:	20009f5c 	.word	0x20009f5c
 8008b00:	2000a02c 	.word	0x2000a02c
 8008b04:	20009f60 	.word	0x20009f60
 8008b08:	2000a080 	.word	0x2000a080
 8008b0c:	e000ed04 	.word	0xe000ed04

08008b10 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008b10:	8880      	ldrh	r0, [r0, #4]
 8008b12:	4770      	bx	lr

08008b14 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008b14:	2300      	movs	r3, #0
 8008b16:	8083      	strh	r3, [r0, #4]
 8008b18:	4770      	bx	lr
	...

08008b1c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b1e:	6803      	ldr	r3, [r0, #0]
 8008b20:	4605      	mov	r5, r0
 8008b22:	460e      	mov	r6, r1
 8008b24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b26:	2100      	movs	r1, #0
 8008b28:	4798      	blx	r3
 8008b2a:	682b      	ldr	r3, [r5, #0]
 8008b2c:	4604      	mov	r4, r0
 8008b2e:	6a1b      	ldr	r3, [r3, #32]
 8008b30:	4628      	mov	r0, r5
 8008b32:	4798      	blx	r3
 8008b34:	88ab      	ldrh	r3, [r5, #4]
 8008b36:	1b34      	subs	r4, r6, r4
 8008b38:	b2a4      	uxth	r4, r4
 8008b3a:	fbb4 f4f0 	udiv	r4, r4, r0
 8008b3e:	42a3      	cmp	r3, r4
 8008b40:	d805      	bhi.n	8008b4e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008b42:	4b0e      	ldr	r3, [pc, #56]	; (8008b7c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008b44:	4a0e      	ldr	r2, [pc, #56]	; (8008b80 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008b46:	211e      	movs	r1, #30
 8008b48:	480e      	ldr	r0, [pc, #56]	; (8008b84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008b4a:	f011 fc35 	bl	801a3b8 <__assert_func>
 8008b4e:	682b      	ldr	r3, [r5, #0]
 8008b50:	2100      	movs	r1, #0
 8008b52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b54:	4628      	mov	r0, r5
 8008b56:	4798      	blx	r3
 8008b58:	682b      	ldr	r3, [r5, #0]
 8008b5a:	4607      	mov	r7, r0
 8008b5c:	6a1b      	ldr	r3, [r3, #32]
 8008b5e:	4628      	mov	r0, r5
 8008b60:	4798      	blx	r3
 8008b62:	1bf3      	subs	r3, r6, r7
 8008b64:	b29b      	uxth	r3, r3
 8008b66:	fbb3 f2f0 	udiv	r2, r3, r0
 8008b6a:	fb02 3010 	mls	r0, r2, r0, r3
 8008b6e:	b118      	cbz	r0, 8008b78 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008b70:	4b05      	ldr	r3, [pc, #20]	; (8008b88 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008b72:	4a03      	ldr	r2, [pc, #12]	; (8008b80 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008b74:	211f      	movs	r1, #31
 8008b76:	e7e7      	b.n	8008b48 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008b78:	4620      	mov	r0, r4
 8008b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b7c:	0801c43b 	.word	0x0801c43b
 8008b80:	0801c5a6 	.word	0x0801c5a6
 8008b84:	0801c450 	.word	0x0801c450
 8008b88:	0801c47e 	.word	0x0801c47e

08008b8c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008b8c:	b538      	push	{r3, r4, r5, lr}
 8008b8e:	6803      	ldr	r3, [r0, #0]
 8008b90:	6a1b      	ldr	r3, [r3, #32]
 8008b92:	460d      	mov	r5, r1
 8008b94:	4604      	mov	r4, r0
 8008b96:	4798      	blx	r3
 8008b98:	4285      	cmp	r5, r0
 8008b9a:	d905      	bls.n	8008ba8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008b9c:	4b0c      	ldr	r3, [pc, #48]	; (8008bd0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008b9e:	4a0d      	ldr	r2, [pc, #52]	; (8008bd4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008ba0:	2130      	movs	r1, #48	; 0x30
 8008ba2:	480d      	ldr	r0, [pc, #52]	; (8008bd8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008ba4:	f011 fc08 	bl	801a3b8 <__assert_func>
 8008ba8:	6823      	ldr	r3, [r4, #0]
 8008baa:	88a5      	ldrh	r5, [r4, #4]
 8008bac:	69db      	ldr	r3, [r3, #28]
 8008bae:	4620      	mov	r0, r4
 8008bb0:	4798      	blx	r3
 8008bb2:	4285      	cmp	r5, r0
 8008bb4:	d303      	bcc.n	8008bbe <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008bb6:	4b09      	ldr	r3, [pc, #36]	; (8008bdc <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008bb8:	4a06      	ldr	r2, [pc, #24]	; (8008bd4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008bba:	2131      	movs	r1, #49	; 0x31
 8008bbc:	e7f1      	b.n	8008ba2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008bbe:	6823      	ldr	r3, [r4, #0]
 8008bc0:	88a1      	ldrh	r1, [r4, #4]
 8008bc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bc4:	4620      	mov	r0, r4
 8008bc6:	4798      	blx	r3
 8008bc8:	88a3      	ldrh	r3, [r4, #4]
 8008bca:	3301      	adds	r3, #1
 8008bcc:	80a3      	strh	r3, [r4, #4]
 8008bce:	bd38      	pop	{r3, r4, r5, pc}
 8008bd0:	0801c4f8 	.word	0x0801c4f8
 8008bd4:	0801c5e9 	.word	0x0801c5e9
 8008bd8:	0801c450 	.word	0x0801c450
 8008bdc:	0801c50f 	.word	0x0801c50f

08008be0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008be0:	b570      	push	{r4, r5, r6, lr}
 8008be2:	6803      	ldr	r3, [r0, #0]
 8008be4:	6a1b      	ldr	r3, [r3, #32]
 8008be6:	4616      	mov	r6, r2
 8008be8:	4604      	mov	r4, r0
 8008bea:	460d      	mov	r5, r1
 8008bec:	4798      	blx	r3
 8008bee:	4286      	cmp	r6, r0
 8008bf0:	d905      	bls.n	8008bfe <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008bf2:	4b06      	ldr	r3, [pc, #24]	; (8008c0c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008bf4:	4a06      	ldr	r2, [pc, #24]	; (8008c10 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008bf6:	4807      	ldr	r0, [pc, #28]	; (8008c14 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008bf8:	213a      	movs	r1, #58	; 0x3a
 8008bfa:	f011 fbdd 	bl	801a3b8 <__assert_func>
 8008bfe:	6823      	ldr	r3, [r4, #0]
 8008c00:	4629      	mov	r1, r5
 8008c02:	4620      	mov	r0, r4
 8008c04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008c0a:	4718      	bx	r3
 8008c0c:	0801c4f8 	.word	0x0801c4f8
 8008c10:	0801c55c 	.word	0x0801c55c
 8008c14:	0801c450 	.word	0x0801c450

08008c18 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008c18:	4770      	bx	lr
	...

08008c1c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008c1c:	4a02      	ldr	r2, [pc, #8]	; (8008c28 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008c1e:	6002      	str	r2, [r0, #0]
 8008c20:	2200      	movs	r2, #0
 8008c22:	8082      	strh	r2, [r0, #4]
 8008c24:	4770      	bx	lr
 8008c26:	bf00      	nop
 8008c28:	0801c530 	.word	0x0801c530

08008c2c <_ZN8touchgfx9Container13getFirstChildEv>:
 8008c2c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008c2e:	4770      	bx	lr

08008c30 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008c30:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008c32:	2000      	movs	r0, #0
 8008c34:	b12b      	cbz	r3, 8008c42 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008c36:	b920      	cbnz	r0, 8008c42 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008c38:	1a5a      	subs	r2, r3, r1
 8008c3a:	4250      	negs	r0, r2
 8008c3c:	4150      	adcs	r0, r2
 8008c3e:	699b      	ldr	r3, [r3, #24]
 8008c40:	e7f8      	b.n	8008c34 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008c42:	4770      	bx	lr

08008c44 <_ZN8touchgfx9Container9removeAllEv>:
 8008c44:	2200      	movs	r2, #0
 8008c46:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008c48:	b123      	cbz	r3, 8008c54 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008c4a:	6999      	ldr	r1, [r3, #24]
 8008c4c:	6281      	str	r1, [r0, #40]	; 0x28
 8008c4e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008c52:	e7f8      	b.n	8008c46 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008c54:	4770      	bx	lr

08008c56 <_ZN8touchgfx9Container6unlinkEv>:
 8008c56:	2300      	movs	r3, #0
 8008c58:	6283      	str	r3, [r0, #40]	; 0x28
 8008c5a:	4770      	bx	lr

08008c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c60:	461f      	mov	r7, r3
 8008c62:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008c66:	460d      	mov	r5, r1
 8008c68:	4616      	mov	r6, r2
 8008c6a:	b103      	cbz	r3, 8008c6e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008c6c:	6038      	str	r0, [r7, #0]
 8008c6e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008c70:	b314      	cbz	r4, 8008cb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008c72:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008c76:	b1eb      	cbz	r3, 8008cb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008c78:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008c7c:	428d      	cmp	r5, r1
 8008c7e:	db19      	blt.n	8008cb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008c80:	8923      	ldrh	r3, [r4, #8]
 8008c82:	b289      	uxth	r1, r1
 8008c84:	440b      	add	r3, r1
 8008c86:	b21b      	sxth	r3, r3
 8008c88:	429d      	cmp	r5, r3
 8008c8a:	da13      	bge.n	8008cb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008c8c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008c90:	4296      	cmp	r6, r2
 8008c92:	db0f      	blt.n	8008cb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008c94:	8963      	ldrh	r3, [r4, #10]
 8008c96:	b292      	uxth	r2, r2
 8008c98:	4413      	add	r3, r2
 8008c9a:	b21b      	sxth	r3, r3
 8008c9c:	429e      	cmp	r6, r3
 8008c9e:	da09      	bge.n	8008cb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008ca0:	6823      	ldr	r3, [r4, #0]
 8008ca2:	1ab2      	subs	r2, r6, r2
 8008ca4:	1a69      	subs	r1, r5, r1
 8008ca6:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8008caa:	b212      	sxth	r2, r2
 8008cac:	463b      	mov	r3, r7
 8008cae:	b209      	sxth	r1, r1
 8008cb0:	4620      	mov	r0, r4
 8008cb2:	47c0      	blx	r8
 8008cb4:	69a4      	ldr	r4, [r4, #24]
 8008cb6:	e7db      	b.n	8008c70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008cbc <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008cbc:	2200      	movs	r2, #0
 8008cbe:	8002      	strh	r2, [r0, #0]
 8008cc0:	8042      	strh	r2, [r0, #2]
 8008cc2:	8082      	strh	r2, [r0, #4]
 8008cc4:	80c2      	strh	r2, [r0, #6]
 8008cc6:	4770      	bx	lr

08008cc8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008cc8:	b570      	push	{r4, r5, r6, lr}
 8008cca:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008ccc:	460d      	mov	r5, r1
 8008cce:	4616      	mov	r6, r2
 8008cd0:	b13c      	cbz	r4, 8008ce2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008cd2:	6823      	ldr	r3, [r4, #0]
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008cd8:	4632      	mov	r2, r6
 8008cda:	4629      	mov	r1, r5
 8008cdc:	4798      	blx	r3
 8008cde:	69a4      	ldr	r4, [r4, #24]
 8008ce0:	e7f6      	b.n	8008cd0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008ce2:	bd70      	pop	{r4, r5, r6, pc}

08008ce4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008ce4:	b538      	push	{r3, r4, r5, lr}
 8008ce6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008ce8:	460d      	mov	r5, r1
 8008cea:	b134      	cbz	r4, 8008cfa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008cec:	682b      	ldr	r3, [r5, #0]
 8008cee:	4621      	mov	r1, r4
 8008cf0:	689b      	ldr	r3, [r3, #8]
 8008cf2:	4628      	mov	r0, r5
 8008cf4:	4798      	blx	r3
 8008cf6:	69a4      	ldr	r4, [r4, #24]
 8008cf8:	e7f7      	b.n	8008cea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008cfa:	bd38      	pop	{r3, r4, r5, pc}

08008cfc <_ZN8touchgfx9ContainerD1Ev>:
 8008cfc:	4770      	bx	lr

08008cfe <_ZN8touchgfx9ContainerD0Ev>:
 8008cfe:	b510      	push	{r4, lr}
 8008d00:	212c      	movs	r1, #44	; 0x2c
 8008d02:	4604      	mov	r4, r0
 8008d04:	f011 fb29 	bl	801a35a <_ZdlPvj>
 8008d08:	4620      	mov	r0, r4
 8008d0a:	bd10      	pop	{r4, pc}

08008d0c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008d0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d0e:	b19b      	cbz	r3, 8008d38 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008d10:	428b      	cmp	r3, r1
 8008d12:	d109      	bne.n	8008d28 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008d14:	699a      	ldr	r2, [r3, #24]
 8008d16:	2100      	movs	r1, #0
 8008d18:	6159      	str	r1, [r3, #20]
 8008d1a:	6282      	str	r2, [r0, #40]	; 0x28
 8008d1c:	b902      	cbnz	r2, 8008d20 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008d1e:	4770      	bx	lr
 8008d20:	6199      	str	r1, [r3, #24]
 8008d22:	4770      	bx	lr
 8008d24:	4613      	mov	r3, r2
 8008d26:	b13a      	cbz	r2, 8008d38 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008d28:	699a      	ldr	r2, [r3, #24]
 8008d2a:	428a      	cmp	r2, r1
 8008d2c:	d1fa      	bne.n	8008d24 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008d2e:	698a      	ldr	r2, [r1, #24]
 8008d30:	619a      	str	r2, [r3, #24]
 8008d32:	2300      	movs	r3, #0
 8008d34:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008d38:	4770      	bx	lr

08008d3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008d3a:	b410      	push	{r4}
 8008d3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d3e:	4604      	mov	r4, r0
 8008d40:	b92b      	cbnz	r3, 8008d4e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008d42:	6803      	ldr	r3, [r0, #0]
 8008d44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008d48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008d4a:	4611      	mov	r1, r2
 8008d4c:	4718      	bx	r3
 8008d4e:	b941      	cbnz	r1, 8008d62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008d50:	6193      	str	r3, [r2, #24]
 8008d52:	6282      	str	r2, [r0, #40]	; 0x28
 8008d54:	6154      	str	r4, [r2, #20]
 8008d56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008d5a:	4770      	bx	lr
 8008d5c:	4603      	mov	r3, r0
 8008d5e:	2800      	cmp	r0, #0
 8008d60:	d0f9      	beq.n	8008d56 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008d62:	4299      	cmp	r1, r3
 8008d64:	6998      	ldr	r0, [r3, #24]
 8008d66:	d1f9      	bne.n	8008d5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008d68:	6190      	str	r0, [r2, #24]
 8008d6a:	618a      	str	r2, [r1, #24]
 8008d6c:	e7f2      	b.n	8008d54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008d70 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008d70:	4288      	cmp	r0, r1
 8008d72:	b508      	push	{r3, lr}
 8008d74:	d105      	bne.n	8008d82 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008d76:	4b11      	ldr	r3, [pc, #68]	; (8008dbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008d78:	4a11      	ldr	r2, [pc, #68]	; (8008dc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008d7a:	2121      	movs	r1, #33	; 0x21
 8008d7c:	4811      	ldr	r0, [pc, #68]	; (8008dc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008d7e:	f011 fb1b 	bl	801a3b8 <__assert_func>
 8008d82:	694b      	ldr	r3, [r1, #20]
 8008d84:	b11b      	cbz	r3, 8008d8e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008d86:	4b10      	ldr	r3, [pc, #64]	; (8008dc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008d88:	4a0d      	ldr	r2, [pc, #52]	; (8008dc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008d8a:	2122      	movs	r1, #34	; 0x22
 8008d8c:	e7f6      	b.n	8008d7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008d8e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008d92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d94:	b913      	cbnz	r3, 8008d9c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008d96:	6281      	str	r1, [r0, #40]	; 0x28
 8008d98:	bd08      	pop	{r3, pc}
 8008d9a:	4613      	mov	r3, r2
 8008d9c:	699a      	ldr	r2, [r3, #24]
 8008d9e:	b12a      	cbz	r2, 8008dac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008da0:	428b      	cmp	r3, r1
 8008da2:	d1fa      	bne.n	8008d9a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008da4:	4b09      	ldr	r3, [pc, #36]	; (8008dcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008da6:	4a06      	ldr	r2, [pc, #24]	; (8008dc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008da8:	2133      	movs	r1, #51	; 0x33
 8008daa:	e7e7      	b.n	8008d7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008dac:	428b      	cmp	r3, r1
 8008dae:	d103      	bne.n	8008db8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008db0:	4b06      	ldr	r3, [pc, #24]	; (8008dcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008db2:	4a03      	ldr	r2, [pc, #12]	; (8008dc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008db4:	2136      	movs	r1, #54	; 0x36
 8008db6:	e7e1      	b.n	8008d7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008db8:	6199      	str	r1, [r3, #24]
 8008dba:	e7ed      	b.n	8008d98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008dbc:	0801c627 	.word	0x0801c627
 8008dc0:	0801c778 	.word	0x0801c778
 8008dc4:	0801c653 	.word	0x0801c653
 8008dc8:	0801c686 	.word	0x0801c686
 8008dcc:	0801c6bc 	.word	0x0801c6bc

08008dd0 <_ZN8touchgfx4RectaNERKS0_>:
 8008dd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008dd4:	f9b1 7000 	ldrsh.w	r7, [r1]
 8008dd8:	888c      	ldrh	r4, [r1, #4]
 8008dda:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008dde:	443c      	add	r4, r7
 8008de0:	b2a4      	uxth	r4, r4
 8008de2:	fa0f f884 	sxth.w	r8, r4
 8008de6:	45c1      	cmp	r9, r8
 8008de8:	da2f      	bge.n	8008e4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008dea:	8882      	ldrh	r2, [r0, #4]
 8008dec:	444a      	add	r2, r9
 8008dee:	b292      	uxth	r2, r2
 8008df0:	fa0f fe82 	sxth.w	lr, r2
 8008df4:	4577      	cmp	r7, lr
 8008df6:	da28      	bge.n	8008e4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008df8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008dfc:	88cb      	ldrh	r3, [r1, #6]
 8008dfe:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008e02:	442b      	add	r3, r5
 8008e04:	b21b      	sxth	r3, r3
 8008e06:	429e      	cmp	r6, r3
 8008e08:	da1f      	bge.n	8008e4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008e0a:	88c3      	ldrh	r3, [r0, #6]
 8008e0c:	4433      	add	r3, r6
 8008e0e:	b29b      	uxth	r3, r3
 8008e10:	fa0f fc83 	sxth.w	ip, r3
 8008e14:	4565      	cmp	r5, ip
 8008e16:	da18      	bge.n	8008e4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008e18:	454f      	cmp	r7, r9
 8008e1a:	bfb8      	it	lt
 8008e1c:	464f      	movlt	r7, r9
 8008e1e:	42b5      	cmp	r5, r6
 8008e20:	bfb8      	it	lt
 8008e22:	4635      	movlt	r5, r6
 8008e24:	45f0      	cmp	r8, lr
 8008e26:	bfd8      	it	le
 8008e28:	4622      	movle	r2, r4
 8008e2a:	1bd2      	subs	r2, r2, r7
 8008e2c:	8082      	strh	r2, [r0, #4]
 8008e2e:	884a      	ldrh	r2, [r1, #2]
 8008e30:	88c9      	ldrh	r1, [r1, #6]
 8008e32:	8007      	strh	r7, [r0, #0]
 8008e34:	440a      	add	r2, r1
 8008e36:	b292      	uxth	r2, r2
 8008e38:	b211      	sxth	r1, r2
 8008e3a:	458c      	cmp	ip, r1
 8008e3c:	bfa8      	it	ge
 8008e3e:	4613      	movge	r3, r2
 8008e40:	1b5b      	subs	r3, r3, r5
 8008e42:	80c3      	strh	r3, [r0, #6]
 8008e44:	8045      	strh	r5, [r0, #2]
 8008e46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008e4a:	2300      	movs	r3, #0
 8008e4c:	8003      	strh	r3, [r0, #0]
 8008e4e:	8043      	strh	r3, [r0, #2]
 8008e50:	8083      	strh	r3, [r0, #4]
 8008e52:	80c3      	strh	r3, [r0, #6]
 8008e54:	e7f7      	b.n	8008e46 <_ZN8touchgfx4RectaNERKS0_+0x76>

08008e56 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8008e56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008e5a:	2b00      	cmp	r3, #0
 8008e5c:	dd06      	ble.n	8008e6c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8008e5e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8008e62:	2800      	cmp	r0, #0
 8008e64:	bfcc      	ite	gt
 8008e66:	2000      	movgt	r0, #0
 8008e68:	2001      	movle	r0, #1
 8008e6a:	4770      	bx	lr
 8008e6c:	2001      	movs	r0, #1
 8008e6e:	4770      	bx	lr

08008e70 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8008e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008e74:	2300      	movs	r3, #0
 8008e76:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8008e78:	8003      	strh	r3, [r0, #0]
 8008e7a:	4604      	mov	r4, r0
 8008e7c:	8043      	strh	r3, [r0, #2]
 8008e7e:	8083      	strh	r3, [r0, #4]
 8008e80:	80c3      	strh	r3, [r0, #6]
 8008e82:	2d00      	cmp	r5, #0
 8008e84:	d040      	beq.n	8008f08 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8008e86:	1d28      	adds	r0, r5, #4
 8008e88:	f7ff ffe5 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008e8c:	b988      	cbnz	r0, 8008eb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008e8e:	4620      	mov	r0, r4
 8008e90:	f7ff ffe1 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008e94:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8008e98:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8008e9c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8008ea0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8008ea4:	b138      	cbz	r0, 8008eb6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8008ea6:	8022      	strh	r2, [r4, #0]
 8008ea8:	8063      	strh	r3, [r4, #2]
 8008eaa:	f8a4 e004 	strh.w	lr, [r4, #4]
 8008eae:	f8a4 c006 	strh.w	ip, [r4, #6]
 8008eb2:	69ad      	ldr	r5, [r5, #24]
 8008eb4:	e7e5      	b.n	8008e82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8008eb6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8008eba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008ebe:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8008ec2:	4290      	cmp	r0, r2
 8008ec4:	4607      	mov	r7, r0
 8008ec6:	bfa8      	it	ge
 8008ec8:	4617      	movge	r7, r2
 8008eca:	4472      	add	r2, lr
 8008ecc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8008ed0:	8027      	strh	r7, [r4, #0]
 8008ed2:	4299      	cmp	r1, r3
 8008ed4:	460e      	mov	r6, r1
 8008ed6:	4440      	add	r0, r8
 8008ed8:	bfa8      	it	ge
 8008eda:	461e      	movge	r6, r3
 8008edc:	4471      	add	r1, lr
 8008ede:	4463      	add	r3, ip
 8008ee0:	b200      	sxth	r0, r0
 8008ee2:	b212      	sxth	r2, r2
 8008ee4:	b209      	sxth	r1, r1
 8008ee6:	b21b      	sxth	r3, r3
 8008ee8:	4290      	cmp	r0, r2
 8008eea:	bfac      	ite	ge
 8008eec:	ebc7 0200 	rsbge	r2, r7, r0
 8008ef0:	ebc7 0202 	rsblt	r2, r7, r2
 8008ef4:	4299      	cmp	r1, r3
 8008ef6:	bfac      	ite	ge
 8008ef8:	ebc6 0301 	rsbge	r3, r6, r1
 8008efc:	ebc6 0303 	rsblt	r3, r6, r3
 8008f00:	8066      	strh	r6, [r4, #2]
 8008f02:	80a2      	strh	r2, [r4, #4]
 8008f04:	80e3      	strh	r3, [r4, #6]
 8008f06:	e7d4      	b.n	8008eb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008f08:	4620      	mov	r0, r4
 8008f0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008f0e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8008f0e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008f12:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008f16:	b383      	cbz	r3, 8008f7a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008f18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008f1a:	b374      	cbz	r4, 8008f7a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008f1c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8008f20:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8008f24:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8008f28:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8008f2c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008f30:	b303      	cbz	r3, 8008f74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008f32:	4668      	mov	r0, sp
 8008f34:	1d21      	adds	r1, r4, #4
 8008f36:	f8ad 5000 	strh.w	r5, [sp]
 8008f3a:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008f3e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008f42:	f8ad 8006 	strh.w	r8, [sp, #6]
 8008f46:	f7ff ff43 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 8008f4a:	4668      	mov	r0, sp
 8008f4c:	f7ff ff83 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008f50:	b980      	cbnz	r0, 8008f74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008f52:	f8bd 3000 	ldrh.w	r3, [sp]
 8008f56:	88a2      	ldrh	r2, [r4, #4]
 8008f58:	1a9b      	subs	r3, r3, r2
 8008f5a:	f8ad 3000 	strh.w	r3, [sp]
 8008f5e:	88e2      	ldrh	r2, [r4, #6]
 8008f60:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008f64:	1a9b      	subs	r3, r3, r2
 8008f66:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008f6a:	6823      	ldr	r3, [r4, #0]
 8008f6c:	4669      	mov	r1, sp
 8008f6e:	689b      	ldr	r3, [r3, #8]
 8008f70:	4620      	mov	r0, r4
 8008f72:	4798      	blx	r3
 8008f74:	69a4      	ldr	r4, [r4, #24]
 8008f76:	2c00      	cmp	r4, #0
 8008f78:	d1d8      	bne.n	8008f2c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8008f7a:	b002      	add	sp, #8
 8008f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008f80 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8008f80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008f82:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008f86:	460d      	mov	r5, r1
 8008f88:	4616      	mov	r6, r2
 8008f8a:	b323      	cbz	r3, 8008fd6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008f8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008f8e:	b314      	cbz	r4, 8008fd6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008f90:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008f94:	b1eb      	cbz	r3, 8008fd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008f96:	6828      	ldr	r0, [r5, #0]
 8008f98:	6869      	ldr	r1, [r5, #4]
 8008f9a:	466b      	mov	r3, sp
 8008f9c:	c303      	stmia	r3!, {r0, r1}
 8008f9e:	4668      	mov	r0, sp
 8008fa0:	1d21      	adds	r1, r4, #4
 8008fa2:	f7ff ff15 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 8008fa6:	4668      	mov	r0, sp
 8008fa8:	f7ff ff55 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008fac:	b988      	cbnz	r0, 8008fd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008fae:	f8bd 3000 	ldrh.w	r3, [sp]
 8008fb2:	88a2      	ldrh	r2, [r4, #4]
 8008fb4:	1a9b      	subs	r3, r3, r2
 8008fb6:	f8ad 3000 	strh.w	r3, [sp]
 8008fba:	88e2      	ldrh	r2, [r4, #6]
 8008fbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008fc0:	1a9b      	subs	r3, r3, r2
 8008fc2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008fc6:	6823      	ldr	r3, [r4, #0]
 8008fc8:	4632      	mov	r2, r6
 8008fca:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008fcc:	4669      	mov	r1, sp
 8008fce:	4620      	mov	r0, r4
 8008fd0:	4798      	blx	r3
 8008fd2:	69a4      	ldr	r4, [r4, #24]
 8008fd4:	e7db      	b.n	8008f8e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8008fd6:	b002      	add	sp, #8
 8008fd8:	bd70      	pop	{r4, r5, r6, pc}

08008fda <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8008fda:	b513      	push	{r0, r1, r4, lr}
 8008fdc:	6803      	ldr	r3, [r0, #0]
 8008fde:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 8008fe2:	2300      	movs	r3, #0
 8008fe4:	e9cd 3300 	strd	r3, r3, [sp]
 8008fe8:	466b      	mov	r3, sp
 8008fea:	47a0      	blx	r4
 8008fec:	b002      	add	sp, #8
 8008fee:	bd10      	pop	{r4, pc}

08008ff0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8008ff0:	2301      	movs	r3, #1
 8008ff2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008ff6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008ffa:	4770      	bx	lr

08008ffc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8008ffc:	2301      	movs	r3, #1
 8008ffe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009002:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009006:	4770      	bx	lr

08009008 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009008:	6843      	ldr	r3, [r0, #4]
 800900a:	2201      	movs	r2, #1
 800900c:	725a      	strb	r2, [r3, #9]
 800900e:	6840      	ldr	r0, [r0, #4]
 8009010:	6803      	ldr	r3, [r0, #0]
 8009012:	691b      	ldr	r3, [r3, #16]
 8009014:	4718      	bx	r3

08009016 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009016:	6840      	ldr	r0, [r0, #4]
 8009018:	6803      	ldr	r3, [r0, #0]
 800901a:	689b      	ldr	r3, [r3, #8]
 800901c:	4718      	bx	r3

0800901e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800901e:	b530      	push	{r4, r5, lr}
 8009020:	b08b      	sub	sp, #44	; 0x2c
 8009022:	6804      	ldr	r4, [r0, #0]
 8009024:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009028:	9508      	str	r5, [sp, #32]
 800902a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800902e:	9507      	str	r5, [sp, #28]
 8009030:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009034:	9506      	str	r5, [sp, #24]
 8009036:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800903a:	9505      	str	r5, [sp, #20]
 800903c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009040:	9504      	str	r5, [sp, #16]
 8009042:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009046:	9503      	str	r5, [sp, #12]
 8009048:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800904c:	9502      	str	r5, [sp, #8]
 800904e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009052:	e9cd 3500 	strd	r3, r5, [sp]
 8009056:	4613      	mov	r3, r2
 8009058:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800905a:	2200      	movs	r2, #0
 800905c:	47a0      	blx	r4
 800905e:	b00b      	add	sp, #44	; 0x2c
 8009060:	bd30      	pop	{r4, r5, pc}
	...

08009064 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009064:	4b04      	ldr	r3, [pc, #16]	; (8009078 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009066:	781b      	ldrb	r3, [r3, #0]
 8009068:	b123      	cbz	r3, 8009074 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800906a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800906e:	f080 0001 	eor.w	r0, r0, #1
 8009072:	4770      	bx	lr
 8009074:	2001      	movs	r0, #1
 8009076:	4770      	bx	lr
 8009078:	2000a092 	.word	0x2000a092

0800907c <_ZN8touchgfx3HAL8endFrameEv>:
 800907c:	b510      	push	{r4, lr}
 800907e:	4604      	mov	r4, r0
 8009080:	6840      	ldr	r0, [r0, #4]
 8009082:	6803      	ldr	r3, [r0, #0]
 8009084:	689b      	ldr	r3, [r3, #8]
 8009086:	4798      	blx	r3
 8009088:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800908c:	b113      	cbz	r3, 8009094 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800908e:	2301      	movs	r3, #1
 8009090:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009094:	bd10      	pop	{r4, pc}

08009096 <_ZN8touchgfx3HAL10initializeEv>:
 8009096:	b510      	push	{r4, lr}
 8009098:	4604      	mov	r4, r0
 800909a:	f7f7 fddd 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 800909e:	6860      	ldr	r0, [r4, #4]
 80090a0:	6803      	ldr	r3, [r0, #0]
 80090a2:	68db      	ldr	r3, [r3, #12]
 80090a4:	4798      	blx	r3
 80090a6:	68e0      	ldr	r0, [r4, #12]
 80090a8:	6803      	ldr	r3, [r0, #0]
 80090aa:	689b      	ldr	r3, [r3, #8]
 80090ac:	4798      	blx	r3
 80090ae:	6823      	ldr	r3, [r4, #0]
 80090b0:	4620      	mov	r0, r4
 80090b2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80090b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80090b8:	4718      	bx	r3
	...

080090bc <_ZN8touchgfx3HAL4tickEv>:
 80090bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80090be:	6803      	ldr	r3, [r0, #0]
 80090c0:	4d5c      	ldr	r5, [pc, #368]	; (8009234 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80090c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80090c6:	4604      	mov	r4, r0
 80090c8:	4798      	blx	r3
 80090ca:	2800      	cmp	r0, #0
 80090cc:	f000 8097 	beq.w	80091fe <_ZN8touchgfx3HAL4tickEv+0x142>
 80090d0:	2001      	movs	r0, #1
 80090d2:	f7f7 fb3f 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80090d6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80090da:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80090de:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80090e2:	2600      	movs	r6, #0
 80090e4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80090e8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80090ec:	b133      	cbz	r3, 80090fc <_ZN8touchgfx3HAL4tickEv+0x40>
 80090ee:	6823      	ldr	r3, [r4, #0]
 80090f0:	4620      	mov	r0, r4
 80090f2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80090f6:	4798      	blx	r3
 80090f8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80090fc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009100:	6862      	ldr	r2, [r4, #4]
 8009102:	f083 0301 	eor.w	r3, r3, #1
 8009106:	7253      	strb	r3, [r2, #9]
 8009108:	2601      	movs	r6, #1
 800910a:	702e      	strb	r6, [r5, #0]
 800910c:	f002 fdd6 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 8009110:	6803      	ldr	r3, [r0, #0]
 8009112:	4631      	mov	r1, r6
 8009114:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009116:	4798      	blx	r3
 8009118:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800911c:	b90b      	cbnz	r3, 8009122 <_ZN8touchgfx3HAL4tickEv+0x66>
 800911e:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009122:	f002 fdcb 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 8009126:	6803      	ldr	r3, [r0, #0]
 8009128:	695b      	ldr	r3, [r3, #20]
 800912a:	4798      	blx	r3
 800912c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800912e:	6803      	ldr	r3, [r0, #0]
 8009130:	691b      	ldr	r3, [r3, #16]
 8009132:	4798      	blx	r3
 8009134:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009138:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800913c:	3b01      	subs	r3, #1
 800913e:	b2db      	uxtb	r3, r3
 8009140:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009144:	b10a      	cbz	r2, 800914a <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009146:	2b00      	cmp	r3, #0
 8009148:	d1eb      	bne.n	8009122 <_ZN8touchgfx3HAL4tickEv+0x66>
 800914a:	4a3b      	ldr	r2, [pc, #236]	; (8009238 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800914c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009150:	7813      	ldrb	r3, [r2, #0]
 8009152:	3301      	adds	r3, #1
 8009154:	b25b      	sxtb	r3, r3
 8009156:	4299      	cmp	r1, r3
 8009158:	7013      	strb	r3, [r2, #0]
 800915a:	dc10      	bgt.n	800917e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800915c:	68e0      	ldr	r0, [r4, #12]
 800915e:	2300      	movs	r3, #0
 8009160:	7013      	strb	r3, [r2, #0]
 8009162:	6803      	ldr	r3, [r0, #0]
 8009164:	aa03      	add	r2, sp, #12
 8009166:	68db      	ldr	r3, [r3, #12]
 8009168:	a902      	add	r1, sp, #8
 800916a:	4798      	blx	r3
 800916c:	6823      	ldr	r3, [r4, #0]
 800916e:	2800      	cmp	r0, #0
 8009170:	d051      	beq.n	8009216 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009172:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009176:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800917a:	4620      	mov	r0, r4
 800917c:	4798      	blx	r3
 800917e:	6960      	ldr	r0, [r4, #20]
 8009180:	2300      	movs	r3, #0
 8009182:	f88d 3007 	strb.w	r3, [sp, #7]
 8009186:	b158      	cbz	r0, 80091a0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009188:	6803      	ldr	r3, [r0, #0]
 800918a:	f10d 0107 	add.w	r1, sp, #7
 800918e:	68db      	ldr	r3, [r3, #12]
 8009190:	4798      	blx	r3
 8009192:	b128      	cbz	r0, 80091a0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009194:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009196:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800919a:	6803      	ldr	r3, [r0, #0]
 800919c:	68db      	ldr	r3, [r3, #12]
 800919e:	4798      	blx	r3
 80091a0:	f104 001c 	add.w	r0, r4, #28
 80091a4:	f011 f820 	bl	801a1e8 <_ZN8touchgfx8Gestures4tickEv>
 80091a8:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80091ac:	b30b      	cbz	r3, 80091f2 <_ZN8touchgfx3HAL4tickEv+0x136>
 80091ae:	6920      	ldr	r0, [r4, #16]
 80091b0:	6803      	ldr	r3, [r0, #0]
 80091b2:	691b      	ldr	r3, [r3, #16]
 80091b4:	4798      	blx	r3
 80091b6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80091b8:	4606      	mov	r6, r0
 80091ba:	b903      	cbnz	r3, 80091be <_ZN8touchgfx3HAL4tickEv+0x102>
 80091bc:	6720      	str	r0, [r4, #112]	; 0x70
 80091be:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80091c0:	4a1e      	ldr	r2, [pc, #120]	; (800923c <_ZN8touchgfx3HAL4tickEv+0x180>)
 80091c2:	1af3      	subs	r3, r6, r3
 80091c4:	4293      	cmp	r3, r2
 80091c6:	d914      	bls.n	80091f2 <_ZN8touchgfx3HAL4tickEv+0x136>
 80091c8:	6920      	ldr	r0, [r4, #16]
 80091ca:	6803      	ldr	r3, [r0, #0]
 80091cc:	699b      	ldr	r3, [r3, #24]
 80091ce:	4798      	blx	r3
 80091d0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80091d2:	2264      	movs	r2, #100	; 0x64
 80091d4:	1af3      	subs	r3, r6, r3
 80091d6:	fbb3 f3f2 	udiv	r3, r3, r2
 80091da:	fbb0 f0f3 	udiv	r0, r0, r3
 80091de:	2800      	cmp	r0, #0
 80091e0:	dc1e      	bgt.n	8009220 <_ZN8touchgfx3HAL4tickEv+0x164>
 80091e2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80091e6:	6920      	ldr	r0, [r4, #16]
 80091e8:	6803      	ldr	r3, [r0, #0]
 80091ea:	2100      	movs	r1, #0
 80091ec:	69db      	ldr	r3, [r3, #28]
 80091ee:	4798      	blx	r3
 80091f0:	6726      	str	r6, [r4, #112]	; 0x70
 80091f2:	f002 fd63 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 80091f6:	6803      	ldr	r3, [r0, #0]
 80091f8:	2100      	movs	r1, #0
 80091fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80091fc:	4798      	blx	r3
 80091fe:	6823      	ldr	r3, [r4, #0]
 8009200:	4620      	mov	r0, r4
 8009202:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009206:	4798      	blx	r3
 8009208:	2001      	movs	r0, #1
 800920a:	f7f7 fabf 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800920e:	2300      	movs	r3, #0
 8009210:	702b      	strb	r3, [r5, #0]
 8009212:	b004      	add	sp, #16
 8009214:	bd70      	pop	{r4, r5, r6, pc}
 8009216:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800921a:	4620      	mov	r0, r4
 800921c:	4798      	blx	r3
 800921e:	e7ae      	b.n	800917e <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009220:	2863      	cmp	r0, #99	; 0x63
 8009222:	bfcb      	itete	gt
 8009224:	2300      	movgt	r3, #0
 8009226:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800922a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800922e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009232:	e7d8      	b.n	80091e6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009234:	2000a098 	.word	0x2000a098
 8009238:	2000a099 	.word	0x2000a099
 800923c:	05f5e100 	.word	0x05f5e100

08009240 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009240:	f7f7 bd3a 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009244 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009244:	6581      	str	r1, [r0, #88]	; 0x58
 8009246:	301c      	adds	r0, #28
 8009248:	f010 bfcc 	b.w	801a1e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800924c <_ZN8touchgfx3HAL5touchEll>:
 800924c:	b530      	push	{r4, r5, lr}
 800924e:	b087      	sub	sp, #28
 8009250:	4604      	mov	r4, r0
 8009252:	a804      	add	r0, sp, #16
 8009254:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009258:	f002 faf0 	bl	800b83c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800925c:	9b04      	ldr	r3, [sp, #16]
 800925e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009262:	a906      	add	r1, sp, #24
 8009264:	9b05      	ldr	r3, [sp, #20]
 8009266:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800926a:	a803      	add	r0, sp, #12
 800926c:	f002 fb24 	bl	800b8b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009270:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009274:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009278:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800927c:	f104 001c 	add.w	r0, r4, #28
 8009280:	b189      	cbz	r1, 80092a6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009282:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009286:	9300      	str	r3, [sp, #0]
 8009288:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800928c:	4613      	mov	r3, r2
 800928e:	462a      	mov	r2, r5
 8009290:	f010 ffb8 	bl	801a204 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009294:	b128      	cbz	r0, 80092a2 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009296:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800929a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800929c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80092a0:	6623      	str	r3, [r4, #96]	; 0x60
 80092a2:	b007      	add	sp, #28
 80092a4:	bd30      	pop	{r4, r5, pc}
 80092a6:	f010 fff1 	bl	801a28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80092aa:	2301      	movs	r3, #1
 80092ac:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80092b0:	e7f1      	b.n	8009296 <_ZN8touchgfx3HAL5touchEll+0x4a>

080092b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80092b2:	b570      	push	{r4, r5, r6, lr}
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d050      	beq.n	800935a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80092b8:	ea81 0002 	eor.w	r0, r1, r2
 80092bc:	07c6      	lsls	r6, r0, #31
 80092be:	d508      	bpl.n	80092d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80092c0:	3a01      	subs	r2, #1
 80092c2:	18cc      	adds	r4, r1, r3
 80092c4:	42a1      	cmp	r1, r4
 80092c6:	d048      	beq.n	800935a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80092c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80092cc:	f801 0b01 	strb.w	r0, [r1], #1
 80092d0:	e7f8      	b.n	80092c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80092d2:	07d5      	lsls	r5, r2, #31
 80092d4:	bf42      	ittt	mi
 80092d6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80092da:	f801 0b01 	strbmi.w	r0, [r1], #1
 80092de:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80092e2:	2b01      	cmp	r3, #1
 80092e4:	d915      	bls.n	8009312 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80092e6:	ea82 0001 	eor.w	r0, r2, r1
 80092ea:	0784      	lsls	r4, r0, #30
 80092ec:	d02d      	beq.n	800934a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 80092ee:	1e94      	subs	r4, r2, #2
 80092f0:	4608      	mov	r0, r1
 80092f2:	18ce      	adds	r6, r1, r3
 80092f4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80092f8:	f820 5b02 	strh.w	r5, [r0], #2
 80092fc:	1a35      	subs	r5, r6, r0
 80092fe:	2d01      	cmp	r5, #1
 8009300:	d8f8      	bhi.n	80092f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8009302:	1e98      	subs	r0, r3, #2
 8009304:	f020 0001 	bic.w	r0, r0, #1
 8009308:	3002      	adds	r0, #2
 800930a:	4401      	add	r1, r0
 800930c:	4402      	add	r2, r0
 800930e:	f003 0301 	and.w	r3, r3, #1
 8009312:	1f14      	subs	r4, r2, #4
 8009314:	4608      	mov	r0, r1
 8009316:	18ce      	adds	r6, r1, r3
 8009318:	1a35      	subs	r5, r6, r0
 800931a:	2d03      	cmp	r5, #3
 800931c:	d810      	bhi.n	8009340 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800931e:	089c      	lsrs	r4, r3, #2
 8009320:	00a0      	lsls	r0, r4, #2
 8009322:	4401      	add	r1, r0
 8009324:	3801      	subs	r0, #1
 8009326:	4402      	add	r2, r0
 8009328:	f06f 0003 	mvn.w	r0, #3
 800932c:	fb00 3404 	mla	r4, r0, r4, r3
 8009330:	440c      	add	r4, r1
 8009332:	42a1      	cmp	r1, r4
 8009334:	d011      	beq.n	800935a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009336:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800933a:	f801 3b01 	strb.w	r3, [r1], #1
 800933e:	e7f8      	b.n	8009332 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009340:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8009344:	f840 5b04 	str.w	r5, [r0], #4
 8009348:	e7e6      	b.n	8009318 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800934a:	0790      	lsls	r0, r2, #30
 800934c:	d0e1      	beq.n	8009312 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800934e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009352:	f821 0b02 	strh.w	r0, [r1], #2
 8009356:	3b02      	subs	r3, #2
 8009358:	e7db      	b.n	8009312 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800935a:	2001      	movs	r0, #1
 800935c:	bd70      	pop	{r4, r5, r6, pc}

0800935e <_ZN8touchgfx3HAL7noTouchEv>:
 800935e:	b510      	push	{r4, lr}
 8009360:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009364:	4604      	mov	r4, r0
 8009366:	b153      	cbz	r3, 800937e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009368:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800936c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009370:	2101      	movs	r1, #1
 8009372:	301c      	adds	r0, #28
 8009374:	f010 ff8a 	bl	801a28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009378:	2300      	movs	r3, #0
 800937a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800937e:	bd10      	pop	{r4, pc}

08009380 <_ZN8touchgfx3HAL3lcdEv>:
 8009380:	4b04      	ldr	r3, [pc, #16]	; (8009394 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009382:	681b      	ldr	r3, [r3, #0]
 8009384:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009388:	b10a      	cbz	r2, 800938e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800938a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800938c:	b900      	cbnz	r0, 8009390 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800938e:	6898      	ldr	r0, [r3, #8]
 8009390:	4770      	bx	lr
 8009392:	bf00      	nop
 8009394:	2000a094 	.word	0x2000a094

08009398 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009398:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800939c:	4604      	mov	r4, r0
 800939e:	6980      	ldr	r0, [r0, #24]
 80093a0:	b085      	sub	sp, #20
 80093a2:	460f      	mov	r7, r1
 80093a4:	4690      	mov	r8, r2
 80093a6:	4699      	mov	r9, r3
 80093a8:	b930      	cbnz	r0, 80093b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80093aa:	4b1c      	ldr	r3, [pc, #112]	; (800941c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80093ac:	4a1c      	ldr	r2, [pc, #112]	; (8009420 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80093ae:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 80093b2:	481c      	ldr	r0, [pc, #112]	; (8009424 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80093b4:	f011 f800 	bl	801a3b8 <__assert_func>
 80093b8:	ad04      	add	r5, sp, #16
 80093ba:	2600      	movs	r6, #0
 80093bc:	f845 6d04 	str.w	r6, [r5, #-4]!
 80093c0:	6806      	ldr	r6, [r0, #0]
 80093c2:	9501      	str	r5, [sp, #4]
 80093c4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80093c8:	9500      	str	r5, [sp, #0]
 80093ca:	6835      	ldr	r5, [r6, #0]
 80093cc:	47a8      	blx	r5
 80093ce:	4d16      	ldr	r5, [pc, #88]	; (8009428 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80093d0:	4606      	mov	r6, r0
 80093d2:	f8a5 9000 	strh.w	r9, [r5]
 80093d6:	f7ff ffd3 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 80093da:	6803      	ldr	r3, [r0, #0]
 80093dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093de:	4798      	blx	r3
 80093e0:	2801      	cmp	r0, #1
 80093e2:	d012      	beq.n	800940a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80093e4:	d306      	bcc.n	80093f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80093e6:	280d      	cmp	r0, #13
 80093e8:	d80b      	bhi.n	8009402 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80093ea:	4b10      	ldr	r3, [pc, #64]	; (800942c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80093ec:	4a0c      	ldr	r2, [pc, #48]	; (8009420 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80093ee:	f44f 71b4 	mov.w	r1, #360	; 0x168
 80093f2:	e7de      	b.n	80093b2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80093f4:	882b      	ldrh	r3, [r5, #0]
 80093f6:	fb08 7203 	mla	r2, r8, r3, r7
 80093fa:	9b03      	ldr	r3, [sp, #12]
 80093fc:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009400:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009402:	4630      	mov	r0, r6
 8009404:	b005      	add	sp, #20
 8009406:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800940a:	882a      	ldrh	r2, [r5, #0]
 800940c:	9b03      	ldr	r3, [sp, #12]
 800940e:	fb08 7202 	mla	r2, r8, r2, r7
 8009412:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009416:	1a9a      	subs	r2, r3, r2
 8009418:	63e2      	str	r2, [r4, #60]	; 0x3c
 800941a:	e7f2      	b.n	8009402 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800941c:	0801c920 	.word	0x0801c920
 8009420:	0801cbd8 	.word	0x0801cbd8
 8009424:	0801c965 	.word	0x0801c965
 8009428:	2000a08e 	.word	0x2000a08e
 800942c:	0801c98b 	.word	0x0801c98b

08009430 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009432:	b08b      	sub	sp, #44	; 0x2c
 8009434:	4617      	mov	r7, r2
 8009436:	4604      	mov	r4, r0
 8009438:	460e      	mov	r6, r1
 800943a:	461d      	mov	r5, r3
 800943c:	f7ff ffa0 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009440:	6803      	ldr	r3, [r0, #0]
 8009442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009444:	4798      	blx	r3
 8009446:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800944a:	4b0e      	ldr	r3, [pc, #56]	; (8009484 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 800944c:	6822      	ldr	r2, [r4, #0]
 800944e:	881b      	ldrh	r3, [r3, #0]
 8009450:	9306      	str	r3, [sp, #24]
 8009452:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009456:	9305      	str	r3, [sp, #20]
 8009458:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800945c:	9304      	str	r3, [sp, #16]
 800945e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009462:	9303      	str	r3, [sp, #12]
 8009464:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009468:	9302      	str	r3, [sp, #8]
 800946a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800946e:	e9cd 5300 	strd	r5, r3, [sp]
 8009472:	4631      	mov	r1, r6
 8009474:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8009476:	463b      	mov	r3, r7
 8009478:	2200      	movs	r2, #0
 800947a:	4620      	mov	r0, r4
 800947c:	47a8      	blx	r5
 800947e:	b00b      	add	sp, #44	; 0x2c
 8009480:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009482:	bf00      	nop
 8009484:	2000a08e 	.word	0x2000a08e

08009488 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009488:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800948c:	4698      	mov	r8, r3
 800948e:	6803      	ldr	r3, [r0, #0]
 8009490:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 8009492:	4b13      	ldr	r3, [pc, #76]	; (80094e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009494:	b08b      	sub	sp, #44	; 0x2c
 8009496:	4617      	mov	r7, r2
 8009498:	f8b3 9000 	ldrh.w	r9, [r3]
 800949c:	460e      	mov	r6, r1
 800949e:	4604      	mov	r4, r0
 80094a0:	f7ff ff6e 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 80094a4:	6803      	ldr	r3, [r0, #0]
 80094a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094a8:	4798      	blx	r3
 80094aa:	2302      	movs	r3, #2
 80094ac:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80094b0:	2301      	movs	r3, #1
 80094b2:	9305      	str	r3, [sp, #20]
 80094b4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80094b8:	9304      	str	r3, [sp, #16]
 80094ba:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80094be:	9303      	str	r3, [sp, #12]
 80094c0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80094c4:	9302      	str	r3, [sp, #8]
 80094c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80094ca:	9008      	str	r0, [sp, #32]
 80094cc:	e9cd 8300 	strd	r8, r3, [sp]
 80094d0:	2200      	movs	r2, #0
 80094d2:	463b      	mov	r3, r7
 80094d4:	4631      	mov	r1, r6
 80094d6:	4620      	mov	r0, r4
 80094d8:	47a8      	blx	r5
 80094da:	b00b      	add	sp, #44	; 0x2c
 80094dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80094e0:	2000a08e 	.word	0x2000a08e

080094e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 80094e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80094e8:	4698      	mov	r8, r3
 80094ea:	6803      	ldr	r3, [r0, #0]
 80094ec:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80094ee:	4b0f      	ldr	r3, [pc, #60]	; (800952c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 80094f0:	b087      	sub	sp, #28
 80094f2:	f8b3 9000 	ldrh.w	r9, [r3]
 80094f6:	460e      	mov	r6, r1
 80094f8:	4617      	mov	r7, r2
 80094fa:	4604      	mov	r4, r0
 80094fc:	f7ff ff40 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009500:	6803      	ldr	r3, [r0, #0]
 8009502:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009504:	4798      	blx	r3
 8009506:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800950a:	9302      	str	r3, [sp, #8]
 800950c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009510:	9301      	str	r3, [sp, #4]
 8009512:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009516:	9300      	str	r3, [sp, #0]
 8009518:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800951c:	4643      	mov	r3, r8
 800951e:	463a      	mov	r2, r7
 8009520:	4631      	mov	r1, r6
 8009522:	4620      	mov	r0, r4
 8009524:	47a8      	blx	r5
 8009526:	b007      	add	sp, #28
 8009528:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800952c:	2000a08e 	.word	0x2000a08e

08009530 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009534:	4604      	mov	r4, r0
 8009536:	b08f      	sub	sp, #60	; 0x3c
 8009538:	4610      	mov	r0, r2
 800953a:	460d      	mov	r5, r1
 800953c:	4691      	mov	r9, r2
 800953e:	461e      	mov	r6, r3
 8009540:	f004 ffb2 	bl	800e4a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009544:	2800      	cmp	r0, #0
 8009546:	f000 80b3 	beq.w	80096b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 800954a:	6823      	ldr	r3, [r4, #0]
 800954c:	f8df b190 	ldr.w	fp, [pc, #400]	; 80096e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 8009550:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009552:	f8df a190 	ldr.w	sl, [pc, #400]	; 80096e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009556:	4f5f      	ldr	r7, [pc, #380]	; (80096d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009558:	4620      	mov	r0, r4
 800955a:	4798      	blx	r3
 800955c:	6823      	ldr	r3, [r4, #0]
 800955e:	4620      	mov	r0, r4
 8009560:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009562:	4798      	blx	r3
 8009564:	f8bb 3000 	ldrh.w	r3, [fp]
 8009568:	9300      	str	r3, [sp, #0]
 800956a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800956e:	f8ba 3000 	ldrh.w	r3, [sl]
 8009572:	9301      	str	r3, [sp, #4]
 8009574:	883b      	ldrh	r3, [r7, #0]
 8009576:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800957a:	9302      	str	r3, [sp, #8]
 800957c:	4b56      	ldr	r3, [pc, #344]	; (80096d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800957e:	9304      	str	r3, [sp, #16]
 8009580:	881a      	ldrh	r2, [r3, #0]
 8009582:	9203      	str	r2, [sp, #12]
 8009584:	4640      	mov	r0, r8
 8009586:	f005 f849 	bl	800e61c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800958a:	8038      	strh	r0, [r7, #0]
 800958c:	4640      	mov	r0, r8
 800958e:	f005 f87f 	bl	800e690 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009592:	9b04      	ldr	r3, [sp, #16]
 8009594:	8018      	strh	r0, [r3, #0]
 8009596:	4b51      	ldr	r3, [pc, #324]	; (80096dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009598:	781b      	ldrb	r3, [r3, #0]
 800959a:	2b00      	cmp	r3, #0
 800959c:	f040 808b 	bne.w	80096b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 80095a0:	883b      	ldrh	r3, [r7, #0]
 80095a2:	f8ab 3000 	strh.w	r3, [fp]
 80095a6:	f8aa 0000 	strh.w	r0, [sl]
 80095aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80095ac:	9304      	str	r3, [sp, #16]
 80095ae:	4648      	mov	r0, r9
 80095b0:	6c27      	ldr	r7, [r4, #64]	; 0x40
 80095b2:	f004 ff79 	bl	800e4a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80095b6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80095ba:	2200      	movs	r2, #0
 80095bc:	4611      	mov	r1, r2
 80095be:	4628      	mov	r0, r5
 80095c0:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80095c4:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80095c8:	f7f8 ff11 	bl	80023ee <_ZN8touchgfx8Drawable5setXYEss>
 80095cc:	2301      	movs	r3, #1
 80095ce:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80095d2:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80095d6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80095da:	2b00      	cmp	r3, #0
 80095dc:	dd71      	ble.n	80096c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 80095de:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80095e2:	2b00      	cmp	r3, #0
 80095e4:	dd6d      	ble.n	80096c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 80095e6:	462a      	mov	r2, r5
 80095e8:	ab0a      	add	r3, sp, #40	; 0x28
 80095ea:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80095ee:	6851      	ldr	r1, [r2, #4]
 80095f0:	c303      	stmia	r3!, {r0, r1}
 80095f2:	4631      	mov	r1, r6
 80095f4:	a80a      	add	r0, sp, #40	; 0x28
 80095f6:	f7ff fbeb 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 80095fa:	4b36      	ldr	r3, [pc, #216]	; (80096d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 80095fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009600:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009604:	4b34      	ldr	r3, [pc, #208]	; (80096d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009606:	aa0a      	add	r2, sp, #40	; 0x28
 8009608:	e892 0003 	ldmia.w	r2, {r0, r1}
 800960c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009610:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009614:	ab08      	add	r3, sp, #32
 8009616:	e883 0003 	stmia.w	r3, {r0, r1}
 800961a:	2600      	movs	r6, #0
 800961c:	4618      	mov	r0, r3
 800961e:	a90c      	add	r1, sp, #48	; 0x30
 8009620:	960c      	str	r6, [sp, #48]	; 0x30
 8009622:	f7ff fbd5 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 8009626:	a807      	add	r0, sp, #28
 8009628:	f005 f98a 	bl	800e940 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800962c:	4680      	mov	r8, r0
 800962e:	f7ff fea7 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009632:	6802      	ldr	r2, [r0, #0]
 8009634:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009636:	4790      	blx	r2
 8009638:	4580      	cmp	r8, r0
 800963a:	d049      	beq.n	80096d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 800963c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800963e:	b150      	cbz	r0, 8009656 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009640:	a807      	add	r0, sp, #28
 8009642:	f005 f97d 	bl	800e940 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009646:	4606      	mov	r6, r0
 8009648:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800964a:	6803      	ldr	r3, [r0, #0]
 800964c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800964e:	4798      	blx	r3
 8009650:	1a33      	subs	r3, r6, r0
 8009652:	4258      	negs	r0, r3
 8009654:	4158      	adcs	r0, r3
 8009656:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800965a:	2600      	movs	r6, #0
 800965c:	682a      	ldr	r2, [r5, #0]
 800965e:	696b      	ldr	r3, [r5, #20]
 8009660:	616e      	str	r6, [r5, #20]
 8009662:	9305      	str	r3, [sp, #20]
 8009664:	6892      	ldr	r2, [r2, #8]
 8009666:	a908      	add	r1, sp, #32
 8009668:	4628      	mov	r0, r5
 800966a:	4790      	blx	r2
 800966c:	9b05      	ldr	r3, [sp, #20]
 800966e:	616b      	str	r3, [r5, #20]
 8009670:	4652      	mov	r2, sl
 8009672:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009676:	4649      	mov	r1, r9
 8009678:	4628      	mov	r0, r5
 800967a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800967e:	f7f8 feb6 	bl	80023ee <_ZN8touchgfx8Drawable5setXYEss>
 8009682:	9b04      	ldr	r3, [sp, #16]
 8009684:	9a00      	ldr	r2, [sp, #0]
 8009686:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 800968a:	4b15      	ldr	r3, [pc, #84]	; (80096e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800968c:	801a      	strh	r2, [r3, #0]
 800968e:	4b15      	ldr	r3, [pc, #84]	; (80096e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009690:	9a01      	ldr	r2, [sp, #4]
 8009692:	801a      	strh	r2, [r3, #0]
 8009694:	4b0f      	ldr	r3, [pc, #60]	; (80096d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009696:	9a02      	ldr	r2, [sp, #8]
 8009698:	801a      	strh	r2, [r3, #0]
 800969a:	4b0f      	ldr	r3, [pc, #60]	; (80096d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800969c:	9a03      	ldr	r2, [sp, #12]
 800969e:	801a      	strh	r2, [r3, #0]
 80096a0:	6823      	ldr	r3, [r4, #0]
 80096a2:	4620      	mov	r0, r4
 80096a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80096a6:	4798      	blx	r3
 80096a8:	6823      	ldr	r3, [r4, #0]
 80096aa:	4620      	mov	r0, r4
 80096ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096ae:	4798      	blx	r3
 80096b0:	b00f      	add	sp, #60	; 0x3c
 80096b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80096b6:	883b      	ldrh	r3, [r7, #0]
 80096b8:	f8ab 0000 	strh.w	r0, [fp]
 80096bc:	f8aa 3000 	strh.w	r3, [sl]
 80096c0:	e773      	b.n	80095aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80096c2:	462a      	mov	r2, r5
 80096c4:	ab0a      	add	r3, sp, #40	; 0x28
 80096c6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80096ca:	6851      	ldr	r1, [r2, #4]
 80096cc:	c303      	stmia	r3!, {r0, r1}
 80096ce:	e794      	b.n	80095fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 80096d0:	4630      	mov	r0, r6
 80096d2:	e7c0      	b.n	8009656 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 80096d4:	2000a088 	.word	0x2000a088
 80096d8:	2000a08a 	.word	0x2000a08a
 80096dc:	2000a08c 	.word	0x2000a08c
 80096e0:	2000a08e 	.word	0x2000a08e
 80096e4:	2000a090 	.word	0x2000a090

080096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80096e8:	b510      	push	{r4, lr}
 80096ea:	4b07      	ldr	r3, [pc, #28]	; (8009708 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80096ec:	781b      	ldrb	r3, [r3, #0]
 80096ee:	4604      	mov	r4, r0
 80096f0:	b13b      	cbz	r3, 8009702 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80096f2:	6803      	ldr	r3, [r0, #0]
 80096f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096f6:	4798      	blx	r3
 80096f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80096fa:	4283      	cmp	r3, r0
 80096fc:	d101      	bne.n	8009702 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80096fe:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009700:	bd10      	pop	{r4, pc}
 8009702:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009704:	e7fc      	b.n	8009700 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009706:	bf00      	nop
 8009708:	2000a092 	.word	0x2000a092

0800970c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800970c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009710:	b088      	sub	sp, #32
 8009712:	461c      	mov	r4, r3
 8009714:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009718:	2500      	movs	r5, #0
 800971a:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 800971e:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8009722:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8009726:	9503      	str	r5, [sp, #12]
 8009728:	e9cd 3100 	strd	r3, r1, [sp]
 800972c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009730:	f8ad 8014 	strh.w	r8, [sp, #20]
 8009734:	4692      	mov	sl, r2
 8009736:	4606      	mov	r6, r0
 8009738:	f8ad 7016 	strh.w	r7, [sp, #22]
 800973c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009740:	f88d 501c 	strb.w	r5, [sp, #28]
 8009744:	f7ff ffd0 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009748:	fb09 a404 	mla	r4, r9, r4, sl
 800974c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8009750:	9404      	str	r4, [sp, #16]
 8009752:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009756:	f88d 501e 	strb.w	r5, [sp, #30]
 800975a:	f88d 501d 	strb.w	r5, [sp, #29]
 800975e:	f1b8 0f00 	cmp.w	r8, #0
 8009762:	d000      	beq.n	8009766 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 8009764:	b937      	cbnz	r7, 8009774 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 8009766:	4b0d      	ldr	r3, [pc, #52]	; (800979c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 8009768:	4a0d      	ldr	r2, [pc, #52]	; (80097a0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800976a:	f44f 7101 	mov.w	r1, #516	; 0x204
 800976e:	480d      	ldr	r0, [pc, #52]	; (80097a4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009770:	f010 fe22 	bl	801a3b8 <__assert_func>
 8009774:	6833      	ldr	r3, [r6, #0]
 8009776:	9c00      	ldr	r4, [sp, #0]
 8009778:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800977a:	4630      	mov	r0, r6
 800977c:	4798      	blx	r3
 800977e:	4220      	tst	r0, r4
 8009780:	d104      	bne.n	800978c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 8009782:	4b09      	ldr	r3, [pc, #36]	; (80097a8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009784:	4a06      	ldr	r2, [pc, #24]	; (80097a0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009786:	f240 2105 	movw	r1, #517	; 0x205
 800978a:	e7f0      	b.n	800976e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800978c:	6870      	ldr	r0, [r6, #4]
 800978e:	6803      	ldr	r3, [r0, #0]
 8009790:	4669      	mov	r1, sp
 8009792:	685b      	ldr	r3, [r3, #4]
 8009794:	4798      	blx	r3
 8009796:	b008      	add	sp, #32
 8009798:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800979c:	0801c7b3 	.word	0x0801c7b3
 80097a0:	0801ca13 	.word	0x0801ca13
 80097a4:	0801c965 	.word	0x0801c965
 80097a8:	0801c7eb 	.word	0x0801c7eb

080097ac <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80097ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80097b0:	b089      	sub	sp, #36	; 0x24
 80097b2:	2400      	movs	r4, #0
 80097b4:	461d      	mov	r5, r3
 80097b6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80097ba:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 80097be:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 80097c2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80097c6:	9403      	str	r4, [sp, #12]
 80097c8:	468a      	mov	sl, r1
 80097ca:	4693      	mov	fp, r2
 80097cc:	4606      	mov	r6, r0
 80097ce:	e9cd 3400 	strd	r3, r4, [sp]
 80097d2:	f7ff ff89 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80097d6:	fb09 b505 	mla	r5, r9, r5, fp
 80097da:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80097de:	9504      	str	r5, [sp, #16]
 80097e0:	f8ad 8014 	strh.w	r8, [sp, #20]
 80097e4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80097e8:	f8ad 4018 	strh.w	r4, [sp, #24]
 80097ec:	f8ad 901a 	strh.w	r9, [sp, #26]
 80097f0:	f8cd a00c 	str.w	sl, [sp, #12]
 80097f4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80097f8:	f88d 401e 	strb.w	r4, [sp, #30]
 80097fc:	f1b8 0f00 	cmp.w	r8, #0
 8009800:	d000      	beq.n	8009804 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 8009802:	b937      	cbnz	r7, 8009812 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 8009804:	4b0d      	ldr	r3, [pc, #52]	; (800983c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 8009806:	4a0e      	ldr	r2, [pc, #56]	; (8009840 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009808:	f240 2119 	movw	r1, #537	; 0x219
 800980c:	480d      	ldr	r0, [pc, #52]	; (8009844 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800980e:	f010 fdd3 	bl	801a3b8 <__assert_func>
 8009812:	6833      	ldr	r3, [r6, #0]
 8009814:	9c00      	ldr	r4, [sp, #0]
 8009816:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009818:	4630      	mov	r0, r6
 800981a:	4798      	blx	r3
 800981c:	4220      	tst	r0, r4
 800981e:	d104      	bne.n	800982a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 8009820:	4b09      	ldr	r3, [pc, #36]	; (8009848 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009822:	4a07      	ldr	r2, [pc, #28]	; (8009840 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8009824:	f240 211a 	movw	r1, #538	; 0x21a
 8009828:	e7f0      	b.n	800980c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800982a:	6870      	ldr	r0, [r6, #4]
 800982c:	6803      	ldr	r3, [r0, #0]
 800982e:	4669      	mov	r1, sp
 8009830:	685b      	ldr	r3, [r3, #4]
 8009832:	4798      	blx	r3
 8009834:	b009      	add	sp, #36	; 0x24
 8009836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800983a:	bf00      	nop
 800983c:	0801c830 	.word	0x0801c830
 8009840:	0801ca89 	.word	0x0801ca89
 8009844:	0801c965 	.word	0x0801c965
 8009848:	0801c868 	.word	0x0801c868

0800984c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800984c:	b510      	push	{r4, lr}
 800984e:	4b0b      	ldr	r3, [pc, #44]	; (800987c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009850:	781b      	ldrb	r3, [r3, #0]
 8009852:	4604      	mov	r4, r0
 8009854:	b95b      	cbnz	r3, 800986e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009856:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800985a:	2b02      	cmp	r3, #2
 800985c:	d007      	beq.n	800986e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800985e:	6840      	ldr	r0, [r0, #4]
 8009860:	f000 fb6c 	bl	8009f3c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009864:	b118      	cbz	r0, 800986e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009866:	6862      	ldr	r2, [r4, #4]
 8009868:	7a53      	ldrb	r3, [r2, #9]
 800986a:	2b00      	cmp	r3, #0
 800986c:	d0fc      	beq.n	8009868 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800986e:	f7f7 fa1b 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009872:	4620      	mov	r0, r4
 8009874:	f7ff ff38 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009878:	bd10      	pop	{r4, pc}
 800987a:	bf00      	nop
 800987c:	2000a092 	.word	0x2000a092

08009880 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009880:	b508      	push	{r3, lr}
 8009882:	290d      	cmp	r1, #13
 8009884:	d817      	bhi.n	80098b6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009886:	e8df f001 	tbb	[pc, r1]
 800988a:	090b      	.short	0x090b
 800988c:	0d0d0d07 	.word	0x0d0d0d07
 8009890:	1414140d 	.word	0x1414140d
 8009894:	0d0d1414 	.word	0x0d0d1414
 8009898:	2020      	movs	r0, #32
 800989a:	bd08      	pop	{r3, pc}
 800989c:	2018      	movs	r0, #24
 800989e:	e7fc      	b.n	800989a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80098a0:	2010      	movs	r0, #16
 80098a2:	e7fa      	b.n	800989a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80098a4:	4b05      	ldr	r3, [pc, #20]	; (80098bc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 80098a6:	4a06      	ldr	r2, [pc, #24]	; (80098c0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 80098a8:	4806      	ldr	r0, [pc, #24]	; (80098c4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 80098aa:	f240 2177 	movw	r1, #631	; 0x277
 80098ae:	f010 fd83 	bl	801a3b8 <__assert_func>
 80098b2:	2008      	movs	r0, #8
 80098b4:	e7f1      	b.n	800989a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80098b6:	2000      	movs	r0, #0
 80098b8:	e7ef      	b.n	800989a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80098ba:	bf00      	nop
 80098bc:	0801c9e1 	.word	0x0801c9e1
 80098c0:	0801cda2 	.word	0x0801cda2
 80098c4:	0801c965 	.word	0x0801c965

080098c8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 80098c8:	b570      	push	{r4, r5, r6, lr}
 80098ca:	460d      	mov	r5, r1
 80098cc:	f89d 1014 	ldrb.w	r1, [sp, #20]
 80098d0:	4616      	mov	r6, r2
 80098d2:	461c      	mov	r4, r3
 80098d4:	f7ff ffd4 	bl	8009880 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 80098d8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80098dc:	10c0      	asrs	r0, r0, #3
 80098de:	fb06 5101 	mla	r1, r6, r1, r5
 80098e2:	fb00 4001 	mla	r0, r0, r1, r4
 80098e6:	bd70      	pop	{r4, r5, r6, pc}

080098e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 80098e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098ec:	b08a      	sub	sp, #40	; 0x28
 80098ee:	f04f 0c00 	mov.w	ip, #0
 80098f2:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80098f6:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80098fa:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80098fe:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009902:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 8009906:	f8cd c014 	str.w	ip, [sp, #20]
 800990a:	2d0b      	cmp	r5, #11
 800990c:	4604      	mov	r4, r0
 800990e:	469a      	mov	sl, r3
 8009910:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009914:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009918:	d129      	bne.n	800996e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 800991a:	2080      	movs	r0, #128	; 0x80
 800991c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009920:	9204      	str	r2, [sp, #16]
 8009922:	4620      	mov	r0, r4
 8009924:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009928:	f8ad 2020 	strh.w	r2, [sp, #32]
 800992c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009930:	f8ad 701c 	strh.w	r7, [sp, #28]
 8009934:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009938:	f7ff fed6 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800993c:	e9cd 9800 	strd	r9, r8, [sp]
 8009940:	4603      	mov	r3, r0
 8009942:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009946:	4651      	mov	r1, sl
 8009948:	4620      	mov	r0, r4
 800994a:	f7ff ffbd 	bl	80098c8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800994e:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 8009952:	9006      	str	r0, [sp, #24]
 8009954:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009958:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800995c:	b107      	cbz	r7, 8009960 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 800995e:	b9d6      	cbnz	r6, 8009996 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 8009960:	4b17      	ldr	r3, [pc, #92]	; (80099c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009962:	4a18      	ldr	r2, [pc, #96]	; (80099c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009964:	f240 11cf 	movw	r1, #463	; 0x1cf
 8009968:	4817      	ldr	r0, [pc, #92]	; (80099c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 800996a:	f010 fd25 	bl	801a3b8 <__assert_func>
 800996e:	2d02      	cmp	r5, #2
 8009970:	d108      	bne.n	8009984 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 8009972:	2bff      	cmp	r3, #255	; 0xff
 8009974:	d104      	bne.n	8009980 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 8009976:	2800      	cmp	r0, #0
 8009978:	bf14      	ite	ne
 800997a:	2040      	movne	r0, #64	; 0x40
 800997c:	2020      	moveq	r0, #32
 800997e:	e7cd      	b.n	800991c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009980:	2040      	movs	r0, #64	; 0x40
 8009982:	e7cb      	b.n	800991c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009984:	2bff      	cmp	r3, #255	; 0xff
 8009986:	d104      	bne.n	8009992 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 8009988:	2800      	cmp	r0, #0
 800998a:	bf14      	ite	ne
 800998c:	2004      	movne	r0, #4
 800998e:	2001      	moveq	r0, #1
 8009990:	e7c4      	b.n	800991c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009992:	2004      	movs	r0, #4
 8009994:	e7c2      	b.n	800991c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009996:	6823      	ldr	r3, [r4, #0]
 8009998:	9d02      	ldr	r5, [sp, #8]
 800999a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800999c:	4620      	mov	r0, r4
 800999e:	4798      	blx	r3
 80099a0:	4228      	tst	r0, r5
 80099a2:	d104      	bne.n	80099ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 80099a4:	4b09      	ldr	r3, [pc, #36]	; (80099cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 80099a6:	4a07      	ldr	r2, [pc, #28]	; (80099c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 80099a8:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 80099ac:	e7dc      	b.n	8009968 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 80099ae:	6860      	ldr	r0, [r4, #4]
 80099b0:	6803      	ldr	r3, [r0, #0]
 80099b2:	a902      	add	r1, sp, #8
 80099b4:	685b      	ldr	r3, [r3, #4]
 80099b6:	4798      	blx	r3
 80099b8:	b00a      	add	sp, #40	; 0x28
 80099ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80099be:	bf00      	nop
 80099c0:	0801c7b3 	.word	0x0801c7b3
 80099c4:	0801cc3c 	.word	0x0801cc3c
 80099c8:	0801c965 	.word	0x0801c965
 80099cc:	0801c7eb 	.word	0x0801c7eb

080099d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 80099d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099d4:	b08b      	sub	sp, #44	; 0x2c
 80099d6:	469b      	mov	fp, r3
 80099d8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80099dc:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 80099e0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 80099e4:	2fff      	cmp	r7, #255	; 0xff
 80099e6:	bf14      	ite	ne
 80099e8:	2308      	movne	r3, #8
 80099ea:	2302      	moveq	r3, #2
 80099ec:	2600      	movs	r6, #0
 80099ee:	4604      	mov	r4, r0
 80099f0:	4689      	mov	r9, r1
 80099f2:	4692      	mov	sl, r2
 80099f4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 80099f8:	9605      	str	r6, [sp, #20]
 80099fa:	f7ff fe75 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80099fe:	e9cd 8500 	strd	r8, r5, [sp]
 8009a02:	4603      	mov	r3, r0
 8009a04:	465a      	mov	r2, fp
 8009a06:	4651      	mov	r1, sl
 8009a08:	4620      	mov	r0, r4
 8009a0a:	f7ff ff5d 	bl	80098c8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009a0e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009a12:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009a16:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009a1a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009a1e:	6823      	ldr	r3, [r4, #0]
 8009a20:	9006      	str	r0, [sp, #24]
 8009a22:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009a26:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8009a2a:	f8ad 6020 	strh.w	r6, [sp, #32]
 8009a2e:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 8009a32:	f8cd 9014 	str.w	r9, [sp, #20]
 8009a36:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8009a3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a3c:	9d02      	ldr	r5, [sp, #8]
 8009a3e:	4620      	mov	r0, r4
 8009a40:	4798      	blx	r3
 8009a42:	4228      	tst	r0, r5
 8009a44:	d106      	bne.n	8009a54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009a46:	4b07      	ldr	r3, [pc, #28]	; (8009a64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009a48:	4a07      	ldr	r2, [pc, #28]	; (8009a68 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8009a4a:	4808      	ldr	r0, [pc, #32]	; (8009a6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8009a4c:	f240 212e 	movw	r1, #558	; 0x22e
 8009a50:	f010 fcb2 	bl	801a3b8 <__assert_func>
 8009a54:	6860      	ldr	r0, [r4, #4]
 8009a56:	6803      	ldr	r3, [r0, #0]
 8009a58:	a902      	add	r1, sp, #8
 8009a5a:	685b      	ldr	r3, [r3, #4]
 8009a5c:	4798      	blx	r3
 8009a5e:	b00b      	add	sp, #44	; 0x2c
 8009a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a64:	0801c7eb 	.word	0x0801c7eb
 8009a68:	0801cd0d 	.word	0x0801cd0d
 8009a6c:	0801c965 	.word	0x0801c965

08009a70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009a70:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009a74:	461f      	mov	r7, r3
 8009a76:	4b0b      	ldr	r3, [pc, #44]	; (8009aa4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009a78:	460d      	mov	r5, r1
 8009a7a:	f8b3 8000 	ldrh.w	r8, [r3]
 8009a7e:	4616      	mov	r6, r2
 8009a80:	4604      	mov	r4, r0
 8009a82:	f7ff fc7d 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009a86:	6803      	ldr	r3, [r0, #0]
 8009a88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a8a:	4798      	blx	r3
 8009a8c:	463b      	mov	r3, r7
 8009a8e:	e9cd 8000 	strd	r8, r0, [sp]
 8009a92:	4632      	mov	r2, r6
 8009a94:	4629      	mov	r1, r5
 8009a96:	4620      	mov	r0, r4
 8009a98:	f7ff ff16 	bl	80098c8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009a9c:	b002      	add	sp, #8
 8009a9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009aa2:	bf00      	nop
 8009aa4:	2000a08e 	.word	0x2000a08e

08009aa8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009aac:	b088      	sub	sp, #32
 8009aae:	4698      	mov	r8, r3
 8009ab0:	2300      	movs	r3, #0
 8009ab2:	9303      	str	r3, [sp, #12]
 8009ab4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009ab8:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009abc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009ac0:	f8ad 6014 	strh.w	r6, [sp, #20]
 8009ac4:	e9cd 3100 	strd	r3, r1, [sp]
 8009ac8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009acc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009ad0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009ad4:	f88d 301c 	strb.w	r3, [sp, #28]
 8009ad8:	4617      	mov	r7, r2
 8009ada:	4604      	mov	r4, r0
 8009adc:	f8ad 5016 	strh.w	r5, [sp, #22]
 8009ae0:	f7ff fe02 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ae4:	4642      	mov	r2, r8
 8009ae6:	4603      	mov	r3, r0
 8009ae8:	4639      	mov	r1, r7
 8009aea:	4620      	mov	r0, r4
 8009aec:	f7ff ffc0 	bl	8009a70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009af0:	4b16      	ldr	r3, [pc, #88]	; (8009b4c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 8009af2:	9004      	str	r0, [sp, #16]
 8009af4:	881b      	ldrh	r3, [r3, #0]
 8009af6:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009afa:	f7ff fc41 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009afe:	6803      	ldr	r3, [r0, #0]
 8009b00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b02:	4798      	blx	r3
 8009b04:	f88d 001e 	strb.w	r0, [sp, #30]
 8009b08:	f88d 001d 	strb.w	r0, [sp, #29]
 8009b0c:	b106      	cbz	r6, 8009b10 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 8009b0e:	b935      	cbnz	r5, 8009b1e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 8009b10:	4b0f      	ldr	r3, [pc, #60]	; (8009b50 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 8009b12:	4a10      	ldr	r2, [pc, #64]	; (8009b54 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009b14:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 8009b18:	480f      	ldr	r0, [pc, #60]	; (8009b58 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8009b1a:	f010 fc4d 	bl	801a3b8 <__assert_func>
 8009b1e:	6823      	ldr	r3, [r4, #0]
 8009b20:	9d00      	ldr	r5, [sp, #0]
 8009b22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009b24:	4620      	mov	r0, r4
 8009b26:	4798      	blx	r3
 8009b28:	4228      	tst	r0, r5
 8009b2a:	d104      	bne.n	8009b36 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8009b2c:	4b0b      	ldr	r3, [pc, #44]	; (8009b5c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 8009b2e:	4a09      	ldr	r2, [pc, #36]	; (8009b54 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009b30:	f240 11ed 	movw	r1, #493	; 0x1ed
 8009b34:	e7f0      	b.n	8009b18 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8009b36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009b38:	6860      	ldr	r0, [r4, #4]
 8009b3a:	9303      	str	r3, [sp, #12]
 8009b3c:	6803      	ldr	r3, [r0, #0]
 8009b3e:	4669      	mov	r1, sp
 8009b40:	685b      	ldr	r3, [r3, #4]
 8009b42:	4798      	blx	r3
 8009b44:	b008      	add	sp, #32
 8009b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b4a:	bf00      	nop
 8009b4c:	2000a08e 	.word	0x2000a08e
 8009b50:	0801c7b3 	.word	0x0801c7b3
 8009b54:	0801caee 	.word	0x0801caee
 8009b58:	0801c965 	.word	0x0801c965
 8009b5c:	0801c7eb 	.word	0x0801c7eb

08009b60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009b60:	b570      	push	{r4, r5, r6, lr}
 8009b62:	b08a      	sub	sp, #40	; 0x28
 8009b64:	466b      	mov	r3, sp
 8009b66:	e883 0006 	stmia.w	r3, {r1, r2}
 8009b6a:	4b20      	ldr	r3, [pc, #128]	; (8009bec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 8009b6c:	781b      	ldrb	r3, [r3, #0]
 8009b6e:	4604      	mov	r4, r0
 8009b70:	b933      	cbnz	r3, 8009b80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009b72:	4b1f      	ldr	r3, [pc, #124]	; (8009bf0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8009b74:	4a1f      	ldr	r2, [pc, #124]	; (8009bf4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009b76:	4820      	ldr	r0, [pc, #128]	; (8009bf8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009b78:	f240 213f 	movw	r1, #575	; 0x23f
 8009b7c:	f010 fc1c 	bl	801a3b8 <__assert_func>
 8009b80:	2300      	movs	r3, #0
 8009b82:	9305      	str	r3, [sp, #20]
 8009b84:	2301      	movs	r3, #1
 8009b86:	9302      	str	r3, [sp, #8]
 8009b88:	6803      	ldr	r3, [r0, #0]
 8009b8a:	f8bd 5000 	ldrh.w	r5, [sp]
 8009b8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b90:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8009b94:	4798      	blx	r3
 8009b96:	4632      	mov	r2, r6
 8009b98:	4629      	mov	r1, r5
 8009b9a:	4603      	mov	r3, r0
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	f7ff ff67 	bl	8009a70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009ba2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009ba4:	9306      	str	r3, [sp, #24]
 8009ba6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009baa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009bae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009bb2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009bb6:	4b11      	ldr	r3, [pc, #68]	; (8009bfc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009bb8:	9003      	str	r0, [sp, #12]
 8009bba:	881b      	ldrh	r3, [r3, #0]
 8009bbc:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009bc0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009bc4:	f7ff fbdc 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009bc8:	6803      	ldr	r3, [r0, #0]
 8009bca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bcc:	4798      	blx	r3
 8009bce:	23ff      	movs	r3, #255	; 0xff
 8009bd0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009bd4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009bd8:	6860      	ldr	r0, [r4, #4]
 8009bda:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009bde:	6803      	ldr	r3, [r0, #0]
 8009be0:	a902      	add	r1, sp, #8
 8009be2:	685b      	ldr	r3, [r3, #4]
 8009be4:	4798      	blx	r3
 8009be6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009be8:	b00a      	add	sp, #40	; 0x28
 8009bea:	bd70      	pop	{r4, r5, r6, pc}
 8009bec:	2000a093 	.word	0x2000a093
 8009bf0:	0801c8b2 	.word	0x0801c8b2
 8009bf4:	0801cb92 	.word	0x0801cb92
 8009bf8:	0801c965 	.word	0x0801c965
 8009bfc:	2000a08e 	.word	0x2000a08e

08009c00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c02:	b08b      	sub	sp, #44	; 0x2c
 8009c04:	466d      	mov	r5, sp
 8009c06:	e885 0006 	stmia.w	r5, {r1, r2}
 8009c0a:	461d      	mov	r5, r3
 8009c0c:	2300      	movs	r3, #0
 8009c0e:	9305      	str	r3, [sp, #20]
 8009c10:	2301      	movs	r3, #1
 8009c12:	9302      	str	r3, [sp, #8]
 8009c14:	6803      	ldr	r3, [r0, #0]
 8009c16:	f8bd 6000 	ldrh.w	r6, [sp]
 8009c1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c1c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009c20:	4604      	mov	r4, r0
 8009c22:	4798      	blx	r3
 8009c24:	463a      	mov	r2, r7
 8009c26:	4631      	mov	r1, r6
 8009c28:	4603      	mov	r3, r0
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	f7ff ff20 	bl	8009a70 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009c30:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009c34:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009c38:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009c3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009c40:	4b0e      	ldr	r3, [pc, #56]	; (8009c7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8009c42:	9003      	str	r0, [sp, #12]
 8009c44:	881b      	ldrh	r3, [r3, #0]
 8009c46:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009c4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009c4c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009c50:	9506      	str	r5, [sp, #24]
 8009c52:	f7ff fb95 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 8009c56:	6803      	ldr	r3, [r0, #0]
 8009c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c5a:	4798      	blx	r3
 8009c5c:	23ff      	movs	r3, #255	; 0xff
 8009c5e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009c62:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009c66:	6860      	ldr	r0, [r4, #4]
 8009c68:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009c6c:	6803      	ldr	r3, [r0, #0]
 8009c6e:	a902      	add	r1, sp, #8
 8009c70:	685b      	ldr	r3, [r3, #4]
 8009c72:	4798      	blx	r3
 8009c74:	4628      	mov	r0, r5
 8009c76:	b00b      	add	sp, #44	; 0x2c
 8009c78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c7a:	bf00      	nop
 8009c7c:	2000a08e 	.word	0x2000a08e

08009c80 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009c80:	b570      	push	{r4, r5, r6, lr}
 8009c82:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009c86:	4604      	mov	r4, r0
 8009c88:	b19b      	cbz	r3, 8009cb2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009c8a:	2002      	movs	r0, #2
 8009c8c:	f7f6 fd9a 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009c90:	2300      	movs	r3, #0
 8009c92:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009c96:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8009c9a:	6823      	ldr	r3, [r4, #0]
 8009c9c:	4620      	mov	r0, r4
 8009c9e:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 8009ca2:	f7ff fd21 	bl	80096e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ca6:	462b      	mov	r3, r5
 8009ca8:	4601      	mov	r1, r0
 8009caa:	4620      	mov	r0, r4
 8009cac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cb0:	4718      	bx	r3
 8009cb2:	bd70      	pop	{r4, r5, r6, pc}

08009cb4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8009cb4:	b570      	push	{r4, r5, r6, lr}
 8009cb6:	4605      	mov	r5, r0
 8009cb8:	460c      	mov	r4, r1
 8009cba:	2003      	movs	r0, #3
 8009cbc:	b149      	cbz	r1, 8009cd2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8009cbe:	f7f6 fd49 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009cc2:	6928      	ldr	r0, [r5, #16]
 8009cc4:	b168      	cbz	r0, 8009ce2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009cc6:	6803      	ldr	r3, [r0, #0]
 8009cc8:	695b      	ldr	r3, [r3, #20]
 8009cca:	2101      	movs	r1, #1
 8009ccc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cd0:	4718      	bx	r3
 8009cd2:	f7f6 fd5b 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009cd6:	6928      	ldr	r0, [r5, #16]
 8009cd8:	b118      	cbz	r0, 8009ce2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009cda:	6803      	ldr	r3, [r0, #0]
 8009cdc:	4621      	mov	r1, r4
 8009cde:	695b      	ldr	r3, [r3, #20]
 8009ce0:	e7f4      	b.n	8009ccc <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8009ce2:	bd70      	pop	{r4, r5, r6, pc}

08009ce4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8009ce4:	4770      	bx	lr

08009ce6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009ce6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009cea:	1a13      	subs	r3, r2, r0
 8009cec:	4258      	negs	r0, r3
 8009cee:	4158      	adcs	r0, r3
 8009cf0:	4770      	bx	lr

08009cf2 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009cf2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009cf6:	1a9b      	subs	r3, r3, r2
 8009cf8:	2b00      	cmp	r3, #0
 8009cfa:	bfdc      	itt	le
 8009cfc:	6882      	ldrle	r2, [r0, #8]
 8009cfe:	189b      	addle	r3, r3, r2
 8009d00:	2b01      	cmp	r3, #1
 8009d02:	bfcc      	ite	gt
 8009d04:	2000      	movgt	r0, #0
 8009d06:	2001      	movle	r0, #1
 8009d08:	4770      	bx	lr

08009d0a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009d0a:	6902      	ldr	r2, [r0, #16]
 8009d0c:	6840      	ldr	r0, [r0, #4]
 8009d0e:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8009d12:	4770      	bx	lr

08009d14 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009d14:	6803      	ldr	r3, [r0, #0]
 8009d16:	691b      	ldr	r3, [r3, #16]
 8009d18:	4718      	bx	r3

08009d1a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009d1a:	4770      	bx	lr

08009d1c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009d1c:	4770      	bx	lr

08009d1e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009d1e:	4770      	bx	lr

08009d20 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009d20:	b570      	push	{r4, r5, r6, lr}
 8009d22:	2301      	movs	r3, #1
 8009d24:	7203      	strb	r3, [r0, #8]
 8009d26:	4604      	mov	r4, r0
 8009d28:	6840      	ldr	r0, [r0, #4]
 8009d2a:	6803      	ldr	r3, [r0, #0]
 8009d2c:	699b      	ldr	r3, [r3, #24]
 8009d2e:	4798      	blx	r3
 8009d30:	6803      	ldr	r3, [r0, #0]
 8009d32:	2b40      	cmp	r3, #64	; 0x40
 8009d34:	4605      	mov	r5, r0
 8009d36:	d039      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d38:	d815      	bhi.n	8009d66 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009d3a:	2b04      	cmp	r3, #4
 8009d3c:	d022      	beq.n	8009d84 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009d3e:	d808      	bhi.n	8009d52 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009d40:	2b01      	cmp	r3, #1
 8009d42:	d033      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d44:	2b02      	cmp	r3, #2
 8009d46:	d108      	bne.n	8009d5a <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8009d48:	6823      	ldr	r3, [r4, #0]
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009d4e:	4798      	blx	r3
 8009d50:	e025      	b.n	8009d9e <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8009d52:	2b08      	cmp	r3, #8
 8009d54:	d01e      	beq.n	8009d94 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8009d56:	2b20      	cmp	r3, #32
 8009d58:	d028      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d5a:	4b17      	ldr	r3, [pc, #92]	; (8009db8 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8009d5c:	4a17      	ldr	r2, [pc, #92]	; (8009dbc <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8009d5e:	4818      	ldr	r0, [pc, #96]	; (8009dc0 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8009d60:	218b      	movs	r1, #139	; 0x8b
 8009d62:	f010 fb29 	bl	801a3b8 <__assert_func>
 8009d66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009d6a:	d01f      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d6c:	d804      	bhi.n	8009d78 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8009d6e:	2b80      	cmp	r3, #128	; 0x80
 8009d70:	d01c      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d76:	e7ef      	b.n	8009d58 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8009d78:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009d7c:	d016      	beq.n	8009dac <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009d7e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009d82:	e7e0      	b.n	8009d46 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8009d84:	6823      	ldr	r3, [r4, #0]
 8009d86:	7f01      	ldrb	r1, [r0, #28]
 8009d88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	4798      	blx	r3
 8009d8e:	6823      	ldr	r3, [r4, #0]
 8009d90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009d92:	e006      	b.n	8009da2 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8009d94:	6823      	ldr	r3, [r4, #0]
 8009d96:	7f01      	ldrb	r1, [r0, #28]
 8009d98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009d9a:	4620      	mov	r0, r4
 8009d9c:	4798      	blx	r3
 8009d9e:	6823      	ldr	r3, [r4, #0]
 8009da0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009da2:	4629      	mov	r1, r5
 8009da4:	4620      	mov	r0, r4
 8009da6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009daa:	4718      	bx	r3
 8009dac:	6823      	ldr	r3, [r4, #0]
 8009dae:	4620      	mov	r0, r4
 8009db0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009db2:	4798      	blx	r3
 8009db4:	e7eb      	b.n	8009d8e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8009db6:	bf00      	nop
 8009db8:	0801cdeb 	.word	0x0801cdeb
 8009dbc:	0801ceac 	.word	0x0801ceac
 8009dc0:	0801ce10 	.word	0x0801ce10

08009dc4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8009dc4:	b570      	push	{r4, r5, r6, lr}
 8009dc6:	4604      	mov	r4, r0
 8009dc8:	460e      	mov	r6, r1
 8009dca:	6860      	ldr	r0, [r4, #4]
 8009dcc:	6803      	ldr	r3, [r0, #0]
 8009dce:	685b      	ldr	r3, [r3, #4]
 8009dd0:	4798      	blx	r3
 8009dd2:	2800      	cmp	r0, #0
 8009dd4:	d1f9      	bne.n	8009dca <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8009dd6:	4d0d      	ldr	r5, [pc, #52]	; (8009e0c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8009dd8:	6828      	ldr	r0, [r5, #0]
 8009dda:	6803      	ldr	r3, [r0, #0]
 8009ddc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009dde:	4798      	blx	r3
 8009de0:	f7f6 ff70 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8009de4:	6828      	ldr	r0, [r5, #0]
 8009de6:	2101      	movs	r1, #1
 8009de8:	f7ff ff7c 	bl	8009ce4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8009dec:	6860      	ldr	r0, [r4, #4]
 8009dee:	6803      	ldr	r3, [r0, #0]
 8009df0:	4631      	mov	r1, r6
 8009df2:	689b      	ldr	r3, [r3, #8]
 8009df4:	4798      	blx	r3
 8009df6:	6823      	ldr	r3, [r4, #0]
 8009df8:	4620      	mov	r0, r4
 8009dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dfc:	4798      	blx	r3
 8009dfe:	6828      	ldr	r0, [r5, #0]
 8009e00:	6803      	ldr	r3, [r0, #0]
 8009e02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009e06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009e08:	4718      	bx	r3
 8009e0a:	bf00      	nop
 8009e0c:	2000a094 	.word	0x2000a094

08009e10 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8009e10:	b508      	push	{r3, lr}
 8009e12:	f7f6 ff49 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009e16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009e1a:	f7f6 bf4d 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009e1e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8009e1e:	b510      	push	{r4, lr}
 8009e20:	2114      	movs	r1, #20
 8009e22:	4604      	mov	r4, r0
 8009e24:	f010 fa99 	bl	801a35a <_ZdlPvj>
 8009e28:	4620      	mov	r0, r4
 8009e2a:	bd10      	pop	{r4, pc}

08009e2c <_ZN8touchgfx13DMA_Interface5startEv>:
 8009e2c:	b510      	push	{r4, lr}
 8009e2e:	4604      	mov	r4, r0
 8009e30:	6840      	ldr	r0, [r0, #4]
 8009e32:	6803      	ldr	r3, [r0, #0]
 8009e34:	681b      	ldr	r3, [r3, #0]
 8009e36:	4798      	blx	r3
 8009e38:	b948      	cbnz	r0, 8009e4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009e3a:	7a63      	ldrb	r3, [r4, #9]
 8009e3c:	b13b      	cbz	r3, 8009e4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009e3e:	7a23      	ldrb	r3, [r4, #8]
 8009e40:	b92b      	cbnz	r3, 8009e4e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009e42:	6823      	ldr	r3, [r4, #0]
 8009e44:	4620      	mov	r0, r4
 8009e46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e4c:	4718      	bx	r3
 8009e4e:	bd10      	pop	{r4, pc}

08009e50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8009e50:	b510      	push	{r4, lr}
 8009e52:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8009e56:	1b12      	subs	r2, r2, r4
 8009e58:	2a00      	cmp	r2, #0
 8009e5a:	bfdc      	itt	le
 8009e5c:	6883      	ldrle	r3, [r0, #8]
 8009e5e:	18d2      	addle	r2, r2, r3
 8009e60:	2a01      	cmp	r2, #1
 8009e62:	dd18      	ble.n	8009e96 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 8009e64:	6843      	ldr	r3, [r0, #4]
 8009e66:	f101 021c 	add.w	r2, r1, #28
 8009e6a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 8009e6e:	f851 4b04 	ldr.w	r4, [r1], #4
 8009e72:	f843 4b04 	str.w	r4, [r3], #4
 8009e76:	4291      	cmp	r1, r2
 8009e78:	d1f9      	bne.n	8009e6e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 8009e7a:	880a      	ldrh	r2, [r1, #0]
 8009e7c:	801a      	strh	r2, [r3, #0]
 8009e7e:	788a      	ldrb	r2, [r1, #2]
 8009e80:	709a      	strb	r2, [r3, #2]
 8009e82:	68c3      	ldr	r3, [r0, #12]
 8009e84:	6882      	ldr	r2, [r0, #8]
 8009e86:	f3bf 8f5b 	dmb	ish
 8009e8a:	3301      	adds	r3, #1
 8009e8c:	429a      	cmp	r2, r3
 8009e8e:	bfd8      	it	le
 8009e90:	1a9b      	suble	r3, r3, r2
 8009e92:	60c3      	str	r3, [r0, #12]
 8009e94:	bd10      	pop	{r4, pc}
 8009e96:	4b03      	ldr	r3, [pc, #12]	; (8009ea4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8009e98:	4a03      	ldr	r2, [pc, #12]	; (8009ea8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8009e9a:	4804      	ldr	r0, [pc, #16]	; (8009eac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 8009e9c:	2139      	movs	r1, #57	; 0x39
 8009e9e:	f010 fa8b 	bl	801a3b8 <__assert_func>
 8009ea2:	bf00      	nop
 8009ea4:	0801ce36 	.word	0x0801ce36
 8009ea8:	0801cedc 	.word	0x0801cedc
 8009eac:	0801ce10 	.word	0x0801ce10

08009eb0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8009eb0:	b510      	push	{r4, lr}
 8009eb2:	6803      	ldr	r3, [r0, #0]
 8009eb4:	681b      	ldr	r3, [r3, #0]
 8009eb6:	4604      	mov	r4, r0
 8009eb8:	4798      	blx	r3
 8009eba:	b128      	cbz	r0, 8009ec8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8009ebc:	4b07      	ldr	r3, [pc, #28]	; (8009edc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8009ebe:	4a08      	ldr	r2, [pc, #32]	; (8009ee0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8009ec0:	4808      	ldr	r0, [pc, #32]	; (8009ee4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8009ec2:	213f      	movs	r1, #63	; 0x3f
 8009ec4:	f010 fa78 	bl	801a3b8 <__assert_func>
 8009ec8:	6923      	ldr	r3, [r4, #16]
 8009eca:	68a2      	ldr	r2, [r4, #8]
 8009ecc:	f3bf 8f5b 	dmb	ish
 8009ed0:	3301      	adds	r3, #1
 8009ed2:	429a      	cmp	r2, r3
 8009ed4:	bfd8      	it	le
 8009ed6:	1a9b      	suble	r3, r3, r2
 8009ed8:	6123      	str	r3, [r4, #16]
 8009eda:	bd10      	pop	{r4, pc}
 8009edc:	0801ce59 	.word	0x0801ce59
 8009ee0:	0801cf2a 	.word	0x0801cf2a
 8009ee4:	0801ce10 	.word	0x0801ce10

08009ee8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8009ee8:	b570      	push	{r4, r5, r6, lr}
 8009eea:	4604      	mov	r4, r0
 8009eec:	6840      	ldr	r0, [r0, #4]
 8009eee:	6803      	ldr	r3, [r0, #0]
 8009ef0:	681b      	ldr	r3, [r3, #0]
 8009ef2:	4798      	blx	r3
 8009ef4:	4605      	mov	r5, r0
 8009ef6:	b930      	cbnz	r0, 8009f06 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009ef8:	7a23      	ldrb	r3, [r4, #8]
 8009efa:	b123      	cbz	r3, 8009f06 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009efc:	6860      	ldr	r0, [r4, #4]
 8009efe:	6803      	ldr	r3, [r0, #0]
 8009f00:	695b      	ldr	r3, [r3, #20]
 8009f02:	4798      	blx	r3
 8009f04:	7225      	strb	r5, [r4, #8]
 8009f06:	6860      	ldr	r0, [r4, #4]
 8009f08:	6803      	ldr	r3, [r0, #0]
 8009f0a:	681b      	ldr	r3, [r3, #0]
 8009f0c:	4798      	blx	r3
 8009f0e:	b928      	cbnz	r0, 8009f1c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8009f10:	6823      	ldr	r3, [r4, #0]
 8009f12:	4620      	mov	r0, r4
 8009f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f1a:	4718      	bx	r3
 8009f1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f20:	f7f6 bed8 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08009f24 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8009f24:	b510      	push	{r4, lr}
 8009f26:	4c04      	ldr	r4, [pc, #16]	; (8009f38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8009f28:	6082      	str	r2, [r0, #8]
 8009f2a:	2200      	movs	r2, #0
 8009f2c:	e9c0 4100 	strd	r4, r1, [r0]
 8009f30:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8009f34:	bd10      	pop	{r4, pc}
 8009f36:	bf00      	nop
 8009f38:	0801ce90 	.word	0x0801ce90

08009f3c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8009f3c:	6840      	ldr	r0, [r0, #4]
 8009f3e:	6803      	ldr	r3, [r0, #0]
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	4718      	bx	r3

08009f44 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8009f44:	2200      	movs	r2, #0
 8009f46:	8002      	strh	r2, [r0, #0]
 8009f48:	8042      	strh	r2, [r0, #2]
 8009f4a:	8082      	strh	r2, [r0, #4]
 8009f4c:	80c2      	strh	r2, [r0, #6]
 8009f4e:	4770      	bx	lr

08009f50 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8009f50:	b570      	push	{r4, r5, r6, lr}
 8009f52:	6803      	ldr	r3, [r0, #0]
 8009f54:	4604      	mov	r4, r0
 8009f56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f58:	4615      	mov	r5, r2
 8009f5a:	4798      	blx	r3
 8009f5c:	6823      	ldr	r3, [r4, #0]
 8009f5e:	4629      	mov	r1, r5
 8009f60:	4620      	mov	r0, r4
 8009f62:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009f64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f68:	4718      	bx	r3

08009f6a <_ZN8touchgfx8TextAreaD1Ev>:
 8009f6a:	4770      	bx	lr

08009f6c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8009f6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f6e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009f70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009f74:	4299      	cmp	r1, r3
 8009f76:	d029      	beq.n	8009fcc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8009f78:	4b15      	ldr	r3, [pc, #84]	; (8009fd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8009f7a:	681b      	ldr	r3, [r3, #0]
 8009f7c:	b92b      	cbnz	r3, 8009f8a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8009f7e:	4b15      	ldr	r3, [pc, #84]	; (8009fd4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8009f80:	4a15      	ldr	r2, [pc, #84]	; (8009fd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009f82:	21ae      	movs	r1, #174	; 0xae
 8009f84:	4815      	ldr	r0, [pc, #84]	; (8009fdc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8009f86:	f010 fa17 	bl	801a3b8 <__assert_func>
 8009f8a:	4a15      	ldr	r2, [pc, #84]	; (8009fe0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8009f8c:	8812      	ldrh	r2, [r2, #0]
 8009f8e:	428a      	cmp	r2, r1
 8009f90:	d803      	bhi.n	8009f9a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8009f92:	4b14      	ldr	r3, [pc, #80]	; (8009fe4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8009f94:	4a10      	ldr	r2, [pc, #64]	; (8009fd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009f96:	21af      	movs	r1, #175	; 0xaf
 8009f98:	e7f4      	b.n	8009f84 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8009f9a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8009f9e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8009fa2:	4b11      	ldr	r3, [pc, #68]	; (8009fe8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8009fa4:	7854      	ldrb	r4, [r2, #1]
 8009fa6:	681b      	ldr	r3, [r3, #0]
 8009fa8:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8009fac:	682b      	ldr	r3, [r5, #0]
 8009fae:	69de      	ldr	r6, [r3, #28]
 8009fb0:	4b0e      	ldr	r3, [pc, #56]	; (8009fec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8009fb2:	6818      	ldr	r0, [r3, #0]
 8009fb4:	f7f8 fc2a 	bl	800280c <_ZNK8touchgfx5Texts7getTextEt>
 8009fb8:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8009fbc:	2300      	movs	r3, #0
 8009fbe:	4602      	mov	r2, r0
 8009fc0:	9300      	str	r3, [sp, #0]
 8009fc2:	4621      	mov	r1, r4
 8009fc4:	4628      	mov	r0, r5
 8009fc6:	47b0      	blx	r6
 8009fc8:	b002      	add	sp, #8
 8009fca:	bd70      	pop	{r4, r5, r6, pc}
 8009fcc:	2000      	movs	r0, #0
 8009fce:	e7fb      	b.n	8009fc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8009fd0:	2000a0e4 	.word	0x2000a0e4
 8009fd4:	0801cf5a 	.word	0x0801cf5a
 8009fd8:	0801d090 	.word	0x0801d090
 8009fdc:	0801cf9c 	.word	0x0801cf9c
 8009fe0:	2000a0e8 	.word	0x2000a0e8
 8009fe4:	0801cfc5 	.word	0x0801cfc5
 8009fe8:	2000a0ec 	.word	0x2000a0ec
 8009fec:	2000a0f0 	.word	0x2000a0f0

08009ff0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8009ff0:	b570      	push	{r4, r5, r6, lr}
 8009ff2:	6803      	ldr	r3, [r0, #0]
 8009ff4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009ff6:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8009ff8:	4b11      	ldr	r3, [pc, #68]	; (800a040 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8009ffa:	681b      	ldr	r3, [r3, #0]
 8009ffc:	4604      	mov	r4, r0
 8009ffe:	b28d      	uxth	r5, r1
 800a000:	b92b      	cbnz	r3, 800a00e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a002:	4b10      	ldr	r3, [pc, #64]	; (800a044 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a004:	4a10      	ldr	r2, [pc, #64]	; (800a048 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a006:	21ae      	movs	r1, #174	; 0xae
 800a008:	4810      	ldr	r0, [pc, #64]	; (800a04c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a00a:	f010 f9d5 	bl	801a3b8 <__assert_func>
 800a00e:	4910      	ldr	r1, [pc, #64]	; (800a050 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a010:	8809      	ldrh	r1, [r1, #0]
 800a012:	4291      	cmp	r1, r2
 800a014:	d803      	bhi.n	800a01e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a016:	4b0f      	ldr	r3, [pc, #60]	; (800a054 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a018:	4a0b      	ldr	r2, [pc, #44]	; (800a048 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a01a:	21af      	movs	r1, #175	; 0xaf
 800a01c:	e7f4      	b.n	800a008 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a01e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a022:	4b0d      	ldr	r3, [pc, #52]	; (800a058 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a02a:	6803      	ldr	r3, [r0, #0]
 800a02c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a02e:	4798      	blx	r3
 800a030:	1a29      	subs	r1, r5, r0
 800a032:	4633      	mov	r3, r6
 800a034:	4620      	mov	r0, r4
 800a036:	b209      	sxth	r1, r1
 800a038:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a03c:	4718      	bx	r3
 800a03e:	bf00      	nop
 800a040:	2000a0e4 	.word	0x2000a0e4
 800a044:	0801cf5a 	.word	0x0801cf5a
 800a048:	0801d090 	.word	0x0801d090
 800a04c:	0801cf9c 	.word	0x0801cf9c
 800a050:	2000a0e8 	.word	0x2000a0e8
 800a054:	0801cfc5 	.word	0x0801cfc5
 800a058:	2000a0ec 	.word	0x2000a0ec

0800a05c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a05c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a060:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a062:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a066:	4293      	cmp	r3, r2
 800a068:	b08c      	sub	sp, #48	; 0x30
 800a06a:	4604      	mov	r4, r0
 800a06c:	4688      	mov	r8, r1
 800a06e:	d05f      	beq.n	800a130 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a070:	4e31      	ldr	r6, [pc, #196]	; (800a138 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a072:	6832      	ldr	r2, [r6, #0]
 800a074:	b92a      	cbnz	r2, 800a082 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a076:	4b31      	ldr	r3, [pc, #196]	; (800a13c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a078:	4a31      	ldr	r2, [pc, #196]	; (800a140 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a07a:	21ae      	movs	r1, #174	; 0xae
 800a07c:	4831      	ldr	r0, [pc, #196]	; (800a144 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a07e:	f010 f99b 	bl	801a3b8 <__assert_func>
 800a082:	4d31      	ldr	r5, [pc, #196]	; (800a148 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a084:	8829      	ldrh	r1, [r5, #0]
 800a086:	4299      	cmp	r1, r3
 800a088:	d803      	bhi.n	800a092 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a08a:	4b30      	ldr	r3, [pc, #192]	; (800a14c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a08c:	4a2c      	ldr	r2, [pc, #176]	; (800a140 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a08e:	21af      	movs	r1, #175	; 0xaf
 800a090:	e7f4      	b.n	800a07c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a092:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a096:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a09a:	4b2d      	ldr	r3, [pc, #180]	; (800a150 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a09c:	681b      	ldr	r3, [r3, #0]
 800a09e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a0a2:	2a00      	cmp	r2, #0
 800a0a4:	d044      	beq.n	800a130 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a0a6:	784b      	ldrb	r3, [r1, #1]
 800a0a8:	9207      	str	r2, [sp, #28]
 800a0aa:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800a0ae:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a0b2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a0b6:	4b27      	ldr	r3, [pc, #156]	; (800a154 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a0b8:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800a0c2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a0c6:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800a0ca:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a0ce:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a0d2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a0d4:	f88d a020 	strb.w	sl, [sp, #32]
 800a0d8:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800a0dc:	9009      	str	r0, [sp, #36]	; 0x24
 800a0de:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800a0e2:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800a0e6:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a0ea:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a0ee:	b10a      	cbz	r2, 800a0f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a0f0:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a0f2:	b907      	cbnz	r7, 800a0f6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a0f4:	689f      	ldr	r7, [r3, #8]
 800a0f6:	f10d 0914 	add.w	r9, sp, #20
 800a0fa:	4621      	mov	r1, r4
 800a0fc:	4648      	mov	r0, r9
 800a0fe:	f002 fe02 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a102:	6833      	ldr	r3, [r6, #0]
 800a104:	2b00      	cmp	r3, #0
 800a106:	d0b6      	beq.n	800a076 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a108:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a10a:	882b      	ldrh	r3, [r5, #0]
 800a10c:	428b      	cmp	r3, r1
 800a10e:	d9bc      	bls.n	800a08a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a110:	4b11      	ldr	r3, [pc, #68]	; (800a158 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a112:	6818      	ldr	r0, [r3, #0]
 800a114:	f7f8 fb7a 	bl	800280c <_ZNK8touchgfx5Texts7getTextEt>
 800a118:	2300      	movs	r3, #0
 800a11a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a11e:	ab07      	add	r3, sp, #28
 800a120:	9001      	str	r0, [sp, #4]
 800a122:	9300      	str	r3, [sp, #0]
 800a124:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a128:	4643      	mov	r3, r8
 800a12a:	4638      	mov	r0, r7
 800a12c:	f7f8 fb20 	bl	8002770 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a130:	b00c      	add	sp, #48	; 0x30
 800a132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a136:	bf00      	nop
 800a138:	2000a0e4 	.word	0x2000a0e4
 800a13c:	0801cf5a 	.word	0x0801cf5a
 800a140:	0801d090 	.word	0x0801d090
 800a144:	0801cf9c 	.word	0x0801cf9c
 800a148:	2000a0e8 	.word	0x2000a0e8
 800a14c:	0801cfc5 	.word	0x0801cfc5
 800a150:	2000a0ec 	.word	0x2000a0ec
 800a154:	2000a094 	.word	0x2000a094
 800a158:	2000a0f0 	.word	0x2000a0f0

0800a15c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a15c:	b40e      	push	{r1, r2, r3}
 800a15e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a162:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a164:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a168:	4293      	cmp	r3, r2
 800a16a:	b09a      	sub	sp, #104	; 0x68
 800a16c:	4605      	mov	r5, r0
 800a16e:	d067      	beq.n	800a240 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800a170:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800a254 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800a174:	aa24      	add	r2, sp, #144	; 0x90
 800a176:	9202      	str	r2, [sp, #8]
 800a178:	f8da 2000 	ldr.w	r2, [sl]
 800a17c:	b92a      	cbnz	r2, 800a18a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a17e:	4b31      	ldr	r3, [pc, #196]	; (800a244 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a180:	4a31      	ldr	r2, [pc, #196]	; (800a248 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a182:	21ae      	movs	r1, #174	; 0xae
 800a184:	4831      	ldr	r0, [pc, #196]	; (800a24c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a186:	f010 f917 	bl	801a3b8 <__assert_func>
 800a18a:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800a258 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800a18e:	f8b8 1000 	ldrh.w	r1, [r8]
 800a192:	4299      	cmp	r1, r3
 800a194:	d803      	bhi.n	800a19e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a196:	4b2e      	ldr	r3, [pc, #184]	; (800a250 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a198:	4a2b      	ldr	r2, [pc, #172]	; (800a248 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a19a:	21af      	movs	r1, #175	; 0xaf
 800a19c:	e7f2      	b.n	800a184 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a19e:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800a25c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a1a2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a1a6:	f8d9 3000 	ldr.w	r3, [r9]
 800a1aa:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800a1ae:	6823      	ldr	r3, [r4, #0]
 800a1b0:	4620      	mov	r0, r4
 800a1b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1b4:	4798      	blx	r3
 800a1b6:	4607      	mov	r7, r0
 800a1b8:	b206      	sxth	r6, r0
 800a1ba:	a803      	add	r0, sp, #12
 800a1bc:	f003 f9b9 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800a1c0:	6823      	ldr	r3, [r4, #0]
 800a1c2:	4620      	mov	r0, r4
 800a1c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a1c6:	4798      	blx	r3
 800a1c8:	6823      	ldr	r3, [r4, #0]
 800a1ca:	4683      	mov	fp, r0
 800a1cc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a1ce:	4620      	mov	r0, r4
 800a1d0:	4798      	blx	r3
 800a1d2:	465b      	mov	r3, fp
 800a1d4:	9000      	str	r0, [sp, #0]
 800a1d6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a1d8:	9a02      	ldr	r2, [sp, #8]
 800a1da:	a803      	add	r0, sp, #12
 800a1dc:	f003 f9f6 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a1e0:	f8da 3000 	ldr.w	r3, [sl]
 800a1e4:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 800a1e8:	2b00      	cmp	r3, #0
 800a1ea:	d0c8      	beq.n	800a17e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a1ec:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 800a1ee:	f8b8 0000 	ldrh.w	r0, [r8]
 800a1f2:	4290      	cmp	r0, r2
 800a1f4:	d9cf      	bls.n	800a196 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a1f6:	eb03 0442 	add.w	r4, r3, r2, lsl #1
 800a1fa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a1fe:	7862      	ldrb	r2, [r4, #1]
 800a200:	f8d9 3000 	ldr.w	r3, [r9]
 800a204:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800a208:	9400      	str	r4, [sp, #0]
 800a20a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a20e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a212:	a803      	add	r0, sp, #12
 800a214:	f001 f8b0 	bl	800b378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a218:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800a21c:	18b1      	adds	r1, r6, r2
 800a21e:	2900      	cmp	r1, #0
 800a220:	b203      	sxth	r3, r0
 800a222:	dd0b      	ble.n	800a23c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800a224:	3b01      	subs	r3, #1
 800a226:	fb13 f302 	smulbb	r3, r3, r2
 800a22a:	fb17 3300 	smlabb	r3, r7, r0, r3
 800a22e:	b21e      	sxth	r6, r3
 800a230:	4630      	mov	r0, r6
 800a232:	b01a      	add	sp, #104	; 0x68
 800a234:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a238:	b003      	add	sp, #12
 800a23a:	4770      	bx	lr
 800a23c:	2b00      	cmp	r3, #0
 800a23e:	dcf7      	bgt.n	800a230 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a240:	2600      	movs	r6, #0
 800a242:	e7f5      	b.n	800a230 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a244:	0801cf5a 	.word	0x0801cf5a
 800a248:	0801d090 	.word	0x0801d090
 800a24c:	0801cf9c 	.word	0x0801cf9c
 800a250:	0801cfc5 	.word	0x0801cfc5
 800a254:	2000a0e4 	.word	0x2000a0e4
 800a258:	2000a0e8 	.word	0x2000a0e8
 800a25c:	2000a0ec 	.word	0x2000a0ec

0800a260 <_ZN8touchgfx8TextAreaD0Ev>:
 800a260:	b510      	push	{r4, lr}
 800a262:	213c      	movs	r1, #60	; 0x3c
 800a264:	4604      	mov	r4, r0
 800a266:	f010 f878 	bl	801a35a <_ZdlPvj>
 800a26a:	4620      	mov	r0, r4
 800a26c:	bd10      	pop	{r4, pc}
	...

0800a270 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a270:	b570      	push	{r4, r5, r6, lr}
 800a272:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a274:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a278:	4299      	cmp	r1, r3
 800a27a:	4604      	mov	r4, r0
 800a27c:	d01e      	beq.n	800a2bc <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a27e:	6803      	ldr	r3, [r0, #0]
 800a280:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800a282:	4b0f      	ldr	r3, [pc, #60]	; (800a2c0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	b92b      	cbnz	r3, 800a294 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a288:	4b0e      	ldr	r3, [pc, #56]	; (800a2c4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a28a:	4a0f      	ldr	r2, [pc, #60]	; (800a2c8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a28c:	21ae      	movs	r1, #174	; 0xae
 800a28e:	480f      	ldr	r0, [pc, #60]	; (800a2cc <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a290:	f010 f892 	bl	801a3b8 <__assert_func>
 800a294:	4b0e      	ldr	r3, [pc, #56]	; (800a2d0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a296:	881b      	ldrh	r3, [r3, #0]
 800a298:	428b      	cmp	r3, r1
 800a29a:	d803      	bhi.n	800a2a4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a29c:	4b0d      	ldr	r3, [pc, #52]	; (800a2d4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a29e:	4a0a      	ldr	r2, [pc, #40]	; (800a2c8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a2a0:	21af      	movs	r1, #175	; 0xaf
 800a2a2:	e7f4      	b.n	800a28e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a2a4:	4b0c      	ldr	r3, [pc, #48]	; (800a2d8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a2a6:	6818      	ldr	r0, [r3, #0]
 800a2a8:	f7f8 fab0 	bl	800280c <_ZNK8touchgfx5Texts7getTextEt>
 800a2ac:	2300      	movs	r3, #0
 800a2ae:	4601      	mov	r1, r0
 800a2b0:	46ac      	mov	ip, r5
 800a2b2:	4620      	mov	r0, r4
 800a2b4:	461a      	mov	r2, r3
 800a2b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2ba:	4760      	bx	ip
 800a2bc:	2000      	movs	r0, #0
 800a2be:	bd70      	pop	{r4, r5, r6, pc}
 800a2c0:	2000a0e4 	.word	0x2000a0e4
 800a2c4:	0801cf5a 	.word	0x0801cf5a
 800a2c8:	0801d090 	.word	0x0801d090
 800a2cc:	0801cf9c 	.word	0x0801cf9c
 800a2d0:	2000a0e8 	.word	0x2000a0e8
 800a2d4:	0801cfc5 	.word	0x0801cfc5
 800a2d8:	2000a0f0 	.word	0x2000a0f0

0800a2dc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a2dc:	b538      	push	{r3, r4, r5, lr}
 800a2de:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a2e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a2e4:	429a      	cmp	r2, r3
 800a2e6:	4604      	mov	r4, r0
 800a2e8:	d014      	beq.n	800a314 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800a2ea:	6803      	ldr	r3, [r0, #0]
 800a2ec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a2ee:	4798      	blx	r3
 800a2f0:	6823      	ldr	r3, [r4, #0]
 800a2f2:	4605      	mov	r5, r0
 800a2f4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a2f6:	4620      	mov	r0, r4
 800a2f8:	4798      	blx	r3
 800a2fa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a2fe:	b22d      	sxth	r5, r5
 800a300:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a304:	4601      	mov	r1, r0
 800a306:	bf06      	itte	eq
 800a308:	4602      	moveq	r2, r0
 800a30a:	4629      	moveq	r1, r5
 800a30c:	462a      	movne	r2, r5
 800a30e:	4620      	mov	r0, r4
 800a310:	f7f8 f87a 	bl	8002408 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a314:	bd38      	pop	{r3, r4, r5, pc}

0800a316 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800a316:	888a      	ldrh	r2, [r1, #4]
 800a318:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a31a:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a31e:	b922      	cbnz	r2, 800a32a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800a320:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a324:	b90b      	cbnz	r3, 800a32a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800a326:	f7ff bfd9 	b.w	800a2dc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a32a:	4770      	bx	lr

0800a32c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a32c:	2300      	movs	r3, #0
 800a32e:	8083      	strh	r3, [r0, #4]
 800a330:	80c3      	strh	r3, [r0, #6]
 800a332:	8003      	strh	r3, [r0, #0]
 800a334:	8043      	strh	r3, [r0, #2]
 800a336:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a33a:	2bff      	cmp	r3, #255	; 0xff
 800a33c:	bf01      	itttt	eq
 800a33e:	890b      	ldrheq	r3, [r1, #8]
 800a340:	8083      	strheq	r3, [r0, #4]
 800a342:	894b      	ldrheq	r3, [r1, #10]
 800a344:	80c3      	strheq	r3, [r0, #6]
 800a346:	4770      	bx	lr

0800a348 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a348:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a34a:	4604      	mov	r4, r0
 800a34c:	6808      	ldr	r0, [r1, #0]
 800a34e:	6849      	ldr	r1, [r1, #4]
 800a350:	466b      	mov	r3, sp
 800a352:	c303      	stmia	r3!, {r0, r1}
 800a354:	6823      	ldr	r3, [r4, #0]
 800a356:	4669      	mov	r1, sp
 800a358:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a35a:	4620      	mov	r0, r4
 800a35c:	4798      	blx	r3
 800a35e:	4b08      	ldr	r3, [pc, #32]	; (800a380 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a366:	b10a      	cbz	r2, 800a36c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a368:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a36a:	b900      	cbnz	r0, 800a36e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a36c:	6898      	ldr	r0, [r3, #8]
 800a36e:	6803      	ldr	r3, [r0, #0]
 800a370:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a372:	699d      	ldr	r5, [r3, #24]
 800a374:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a378:	4669      	mov	r1, sp
 800a37a:	47a8      	blx	r5
 800a37c:	b003      	add	sp, #12
 800a37e:	bd30      	pop	{r4, r5, pc}
 800a380:	2000a094 	.word	0x2000a094

0800a384 <_ZN8touchgfx3BoxD1Ev>:
 800a384:	4770      	bx	lr

0800a386 <_ZN8touchgfx3BoxD0Ev>:
 800a386:	b510      	push	{r4, lr}
 800a388:	212c      	movs	r1, #44	; 0x2c
 800a38a:	4604      	mov	r4, r0
 800a38c:	f00f ffe5 	bl	801a35a <_ZdlPvj>
 800a390:	4620      	mov	r0, r4
 800a392:	bd10      	pop	{r4, pc}

0800a394 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800a394:	4b01      	ldr	r3, [pc, #4]	; (800a39c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800a396:	6019      	str	r1, [r3, #0]
 800a398:	4770      	bx	lr
 800a39a:	bf00      	nop
 800a39c:	2000a09c 	.word	0x2000a09c

0800a3a0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a3a4:	4696      	mov	lr, r2
 800a3a6:	4605      	mov	r5, r0
 800a3a8:	4614      	mov	r4, r2
 800a3aa:	460e      	mov	r6, r1
 800a3ac:	461f      	mov	r7, r3
 800a3ae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a3b2:	b097      	sub	sp, #92	; 0x5c
 800a3b4:	f10d 0c1c 	add.w	ip, sp, #28
 800a3b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a3bc:	f8de 3000 	ldr.w	r3, [lr]
 800a3c0:	f8cc 3000 	str.w	r3, [ip]
 800a3c4:	f104 0e14 	add.w	lr, r4, #20
 800a3c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a3cc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a3d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a3d4:	f8de 3000 	ldr.w	r3, [lr]
 800a3d8:	f8cc 3000 	str.w	r3, [ip]
 800a3dc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a3e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a3e4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a3e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a3ec:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800a3f0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800a3f4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800a3f8:	f8de 3000 	ldr.w	r3, [lr]
 800a3fc:	f8cc 3000 	str.w	r3, [ip]
 800a400:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a402:	682b      	ldr	r3, [r5, #0]
 800a404:	9201      	str	r2, [sp, #4]
 800a406:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a40a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a40c:	9200      	str	r2, [sp, #0]
 800a40e:	f8cd 8008 	str.w	r8, [sp, #8]
 800a412:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800a416:	aa07      	add	r2, sp, #28
 800a418:	463b      	mov	r3, r7
 800a41a:	4631      	mov	r1, r6
 800a41c:	4628      	mov	r0, r5
 800a41e:	47d8      	blx	fp
 800a420:	46a6      	mov	lr, r4
 800a422:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a426:	f10d 0c1c 	add.w	ip, sp, #28
 800a42a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a42e:	f8de 3000 	ldr.w	r3, [lr]
 800a432:	f8cc 3000 	str.w	r3, [ip]
 800a436:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a43a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a43e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a442:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a446:	343c      	adds	r4, #60	; 0x3c
 800a448:	f8de 3000 	ldr.w	r3, [lr]
 800a44c:	f8cc 3000 	str.w	r3, [ip]
 800a450:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a452:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a456:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a45a:	6823      	ldr	r3, [r4, #0]
 800a45c:	f8cc 3000 	str.w	r3, [ip]
 800a460:	682b      	ldr	r3, [r5, #0]
 800a462:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a466:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a468:	9201      	str	r2, [sp, #4]
 800a46a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a46c:	9200      	str	r2, [sp, #0]
 800a46e:	f8cd 8008 	str.w	r8, [sp, #8]
 800a472:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800a474:	aa07      	add	r2, sp, #28
 800a476:	463b      	mov	r3, r7
 800a478:	4631      	mov	r1, r6
 800a47a:	4628      	mov	r0, r5
 800a47c:	47a0      	blx	r4
 800a47e:	b017      	add	sp, #92	; 0x5c
 800a480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a484 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a488:	b08d      	sub	sp, #52	; 0x34
 800a48a:	4688      	mov	r8, r1
 800a48c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a48e:	f8d3 c000 	ldr.w	ip, [r3]
 800a492:	680f      	ldr	r7, [r1, #0]
 800a494:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800a498:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800a49c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800a4a0:	edd3 6a07 	vldr	s13, [r3, #28]
 800a4a4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a4a6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800a4aa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800a4ae:	f9ba 1000 	ldrsh.w	r1, [sl]
 800a4b2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800a4b6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800a4ba:	eba7 070c 	sub.w	r7, r7, ip
 800a4be:	42bc      	cmp	r4, r7
 800a4c0:	bfa8      	it	ge
 800a4c2:	463c      	movge	r4, r7
 800a4c4:	ee07 4a90 	vmov	s15, r4
 800a4c8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a4cc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800a4d0:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a4d4:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a4d8:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a4dc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a4e0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a4e4:	eb09 0e0c 	add.w	lr, r9, ip
 800a4e8:	4571      	cmp	r1, lr
 800a4ea:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a4ee:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a4f2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a4f6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a4fa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a4fe:	f340 808d 	ble.w	800a61c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800a502:	eba1 060e 	sub.w	r6, r1, lr
 800a506:	fb96 f5f4 	sdiv	r5, r6, r4
 800a50a:	ee07 5a10 	vmov	s14, r5
 800a50e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a512:	2d00      	cmp	r5, #0
 800a514:	fb04 6615 	mls	r6, r4, r5, r6
 800a518:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a51c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a520:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a524:	dd13      	ble.n	800a54e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800a526:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a52a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a52e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a536:	bf18      	it	ne
 800a538:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a53c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a540:	bf08      	it	eq
 800a542:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a546:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a54a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a54e:	fb05 f204 	mul.w	r2, r5, r4
 800a552:	1abf      	subs	r7, r7, r2
 800a554:	4494      	add	ip, r2
 800a556:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800a55a:	4411      	add	r1, r2
 800a55c:	eb09 020c 	add.w	r2, r9, ip
 800a560:	443a      	add	r2, r7
 800a562:	b209      	sxth	r1, r1
 800a564:	428a      	cmp	r2, r1
 800a566:	bfc4      	itt	gt
 800a568:	eba1 0209 	subgt.w	r2, r1, r9
 800a56c:	eba2 070c 	subgt.w	r7, r2, ip
 800a570:	2f00      	cmp	r7, #0
 800a572:	dd50      	ble.n	800a616 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800a574:	fb97 f1f4 	sdiv	r1, r7, r4
 800a578:	fb04 7211 	mls	r2, r4, r1, r7
 800a57c:	b90a      	cbnz	r2, 800a582 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800a57e:	3901      	subs	r1, #1
 800a580:	4622      	mov	r2, r4
 800a582:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a586:	6840      	ldr	r0, [r0, #4]
 800a588:	900b      	str	r0, [sp, #44]	; 0x2c
 800a58a:	f8d0 a000 	ldr.w	sl, [r0]
 800a58e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800a590:	9008      	str	r0, [sp, #32]
 800a592:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800a596:	9818      	ldr	r0, [sp, #96]	; 0x60
 800a598:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a59c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800a5a0:	695b      	ldr	r3, [r3, #20]
 800a5a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a5a4:	445b      	add	r3, fp
 800a5a6:	eef0 6a42 	vmov.f32	s13, s4
 800a5aa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a5ae:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a5b2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a5b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a5ba:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a5be:	9307      	str	r3, [sp, #28]
 800a5c0:	ee17 7a90 	vmov	r7, s15
 800a5c4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a5c8:	eeb0 7a61 	vmov.f32	s14, s3
 800a5cc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a5d0:	ee16 3a90 	vmov	r3, s13
 800a5d4:	fb97 f7f4 	sdiv	r7, r7, r4
 800a5d8:	ee17 ca90 	vmov	ip, s15
 800a5dc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a5e0:	fb9c fcf4 	sdiv	ip, ip, r4
 800a5e4:	fb0c 3306 	mla	r3, ip, r6, r3
 800a5e8:	9302      	str	r3, [sp, #8]
 800a5ea:	ee17 3a10 	vmov	r3, s14
 800a5ee:	44b6      	add	lr, r6
 800a5f0:	fb04 e505 	mla	r5, r4, r5, lr
 800a5f4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800a5f8:	fb07 3706 	mla	r7, r7, r6, r3
 800a5fc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800a600:	e9cd 4700 	strd	r4, r7, [sp]
 800a604:	2900      	cmp	r1, #0
 800a606:	bfcc      	ite	gt
 800a608:	46a1      	movgt	r9, r4
 800a60a:	4691      	movle	r9, r2
 800a60c:	eba9 0306 	sub.w	r3, r9, r6
 800a610:	f8da 4008 	ldr.w	r4, [sl, #8]
 800a614:	47a0      	blx	r4
 800a616:	b00d      	add	sp, #52	; 0x34
 800a618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a61c:	2500      	movs	r5, #0
 800a61e:	462e      	mov	r6, r5
 800a620:	e799      	b.n	800a556 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800a624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a628:	b0db      	sub	sp, #364	; 0x16c
 800a62a:	461d      	mov	r5, r3
 800a62c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800a630:	930a      	str	r3, [sp, #40]	; 0x28
 800a632:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800a636:	930b      	str	r3, [sp, #44]	; 0x2c
 800a638:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800a63c:	9310      	str	r3, [sp, #64]	; 0x40
 800a63e:	6803      	ldr	r3, [r0, #0]
 800a640:	910f      	str	r1, [sp, #60]	; 0x3c
 800a642:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800a644:	9009      	str	r0, [sp, #36]	; 0x24
 800a646:	4614      	mov	r4, r2
 800a648:	4629      	mov	r1, r5
 800a64a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800a64e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800a652:	47b8      	blx	r7
 800a654:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a656:	6058      	str	r0, [r3, #4]
 800a658:	2800      	cmp	r0, #0
 800a65a:	f000 83a1 	beq.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a65e:	682b      	ldr	r3, [r5, #0]
 800a660:	9314      	str	r3, [sp, #80]	; 0x50
 800a662:	686b      	ldr	r3, [r5, #4]
 800a664:	9315      	str	r3, [sp, #84]	; 0x54
 800a666:	4bc4      	ldr	r3, [pc, #784]	; (800a978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800a668:	ed94 7a02 	vldr	s14, [r4, #8]
 800a66c:	7819      	ldrb	r1, [r3, #0]
 800a66e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800a672:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800a676:	2900      	cmp	r1, #0
 800a678:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a67c:	bf16      	itet	ne
 800a67e:	4619      	movne	r1, r3
 800a680:	4611      	moveq	r1, r2
 800a682:	4613      	movne	r3, r2
 800a684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a688:	9116      	str	r1, [sp, #88]	; 0x58
 800a68a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800a68e:	f240 8387 	bls.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a692:	ed94 7a07 	vldr	s14, [r4, #28]
 800a696:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a69a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a69e:	f240 837f 	bls.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6a2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800a6a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a6aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a6ae:	f240 8377 	bls.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6b2:	6822      	ldr	r2, [r4, #0]
 800a6b4:	4bb1      	ldr	r3, [pc, #708]	; (800a97c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800a6b6:	429a      	cmp	r2, r3
 800a6b8:	f2c0 8372 	blt.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6bc:	49b0      	ldr	r1, [pc, #704]	; (800a980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800a6be:	6963      	ldr	r3, [r4, #20]
 800a6c0:	428a      	cmp	r2, r1
 800a6c2:	f300 836d 	bgt.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6c6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a6ca:	48ae      	ldr	r0, [pc, #696]	; (800a984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800a6cc:	33ff      	adds	r3, #255	; 0xff
 800a6ce:	4283      	cmp	r3, r0
 800a6d0:	f200 8366 	bhi.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a6d6:	4dac      	ldr	r5, [pc, #688]	; (800a988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800a6d8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a6dc:	33ff      	adds	r3, #255	; 0xff
 800a6de:	42ab      	cmp	r3, r5
 800a6e0:	f200 835e 	bhi.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6e4:	6862      	ldr	r2, [r4, #4]
 800a6e6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800a6ea:	33ff      	adds	r3, #255	; 0xff
 800a6ec:	4283      	cmp	r3, r0
 800a6ee:	f200 8357 	bhi.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a6f2:	69a1      	ldr	r1, [r4, #24]
 800a6f4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800a6f8:	33ff      	adds	r3, #255	; 0xff
 800a6fa:	4283      	cmp	r3, r0
 800a6fc:	f200 8350 	bhi.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a700:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a702:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800a706:	30ff      	adds	r0, #255	; 0xff
 800a708:	42a8      	cmp	r0, r5
 800a70a:	f200 8349 	bhi.w	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a70e:	428a      	cmp	r2, r1
 800a710:	f280 8110 	bge.w	800a934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800a714:	429a      	cmp	r2, r3
 800a716:	f300 8119 	bgt.w	800a94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800a71a:	4299      	cmp	r1, r3
 800a71c:	f280 811d 	bge.w	800a95a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800a720:	2502      	movs	r5, #2
 800a722:	2701      	movs	r7, #1
 800a724:	46a9      	mov	r9, r5
 800a726:	46b8      	mov	r8, r7
 800a728:	f04f 0a00 	mov.w	sl, #0
 800a72c:	4621      	mov	r1, r4
 800a72e:	a849      	add	r0, sp, #292	; 0x124
 800a730:	f003 fcc2 	bl	800e0b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800a734:	4622      	mov	r2, r4
 800a736:	4653      	mov	r3, sl
 800a738:	a949      	add	r1, sp, #292	; 0x124
 800a73a:	f8cd 9000 	str.w	r9, [sp]
 800a73e:	a819      	add	r0, sp, #100	; 0x64
 800a740:	f003 fdea 	bl	800e318 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a744:	4622      	mov	r2, r4
 800a746:	4653      	mov	r3, sl
 800a748:	a949      	add	r1, sp, #292	; 0x124
 800a74a:	f8cd 8000 	str.w	r8, [sp]
 800a74e:	a829      	add	r0, sp, #164	; 0xa4
 800a750:	f003 fde2 	bl	800e318 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a754:	4643      	mov	r3, r8
 800a756:	4622      	mov	r2, r4
 800a758:	a949      	add	r1, sp, #292	; 0x124
 800a75a:	f8cd 9000 	str.w	r9, [sp]
 800a75e:	a839      	add	r0, sp, #228	; 0xe4
 800a760:	f003 fdda 	bl	800e318 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a764:	42af      	cmp	r7, r5
 800a766:	bfb5      	itete	lt
 800a768:	2300      	movlt	r3, #0
 800a76a:	2301      	movge	r3, #1
 800a76c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800a76e:	930e      	strge	r3, [sp, #56]	; 0x38
 800a770:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a772:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a776:	af12      	add	r7, sp, #72	; 0x48
 800a778:	bfb9      	ittee	lt
 800a77a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800a77c:	ac19      	addlt	r4, sp, #100	; 0x64
 800a77e:	ad19      	addge	r5, sp, #100	; 0x64
 800a780:	ac29      	addge	r4, sp, #164	; 0xa4
 800a782:	e887 0003 	stmia.w	r7, {r0, r1}
 800a786:	b928      	cbnz	r0, 800a794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800a788:	4b80      	ldr	r3, [pc, #512]	; (800a98c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800a78a:	6818      	ldr	r0, [r3, #0]
 800a78c:	6803      	ldr	r3, [r0, #0]
 800a78e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a790:	4798      	blx	r3
 800a792:	6038      	str	r0, [r7, #0]
 800a794:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a796:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800a79a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a79e:	930c      	str	r3, [sp, #48]	; 0x30
 800a7a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a7a2:	6963      	ldr	r3, [r4, #20]
 800a7a4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800a7a6:	440b      	add	r3, r1
 800a7a8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800a7ac:	4408      	add	r0, r1
 800a7ae:	b200      	sxth	r0, r0
 800a7b0:	4283      	cmp	r3, r0
 800a7b2:	900d      	str	r0, [sp, #52]	; 0x34
 800a7b4:	f280 80dd 	bge.w	800a972 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800a7b8:	428b      	cmp	r3, r1
 800a7ba:	da08      	bge.n	800a7ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a7bc:	2a00      	cmp	r2, #0
 800a7be:	dd06      	ble.n	800a7ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a7c0:	1acb      	subs	r3, r1, r3
 800a7c2:	429a      	cmp	r2, r3
 800a7c4:	f2c0 80e4 	blt.w	800a990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800a7c8:	2b00      	cmp	r3, #0
 800a7ca:	f300 80e2 	bgt.w	800a992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800a7ce:	6967      	ldr	r7, [r4, #20]
 800a7d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a7d2:	443b      	add	r3, r7
 800a7d4:	461f      	mov	r7, r3
 800a7d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a7d8:	1bdf      	subs	r7, r3, r7
 800a7da:	4297      	cmp	r7, r2
 800a7dc:	bfa8      	it	ge
 800a7de:	4617      	movge	r7, r2
 800a7e0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800a7e4:	2f00      	cmp	r7, #0
 800a7e6:	f340 8166 	ble.w	800aab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800a7ea:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a7ec:	6829      	ldr	r1, [r5, #0]
 800a7ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a7f2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800a7f6:	6820      	ldr	r0, [r4, #0]
 800a7f8:	4411      	add	r1, r2
 800a7fa:	4299      	cmp	r1, r3
 800a7fc:	dd1a      	ble.n	800a834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a7fe:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800a802:	440b      	add	r3, r1
 800a804:	4402      	add	r2, r0
 800a806:	b21b      	sxth	r3, r3
 800a808:	429a      	cmp	r2, r3
 800a80a:	dc13      	bgt.n	800a834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a80c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a80e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	9206      	str	r2, [sp, #24]
 800a814:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a816:	9205      	str	r2, [sp, #20]
 800a818:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a81a:	9500      	str	r5, [sp, #0]
 800a81c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800a820:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800a822:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a824:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800a828:	a912      	add	r1, sp, #72	; 0x48
 800a82a:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800a82e:	aa49      	add	r2, sp, #292	; 0x124
 800a830:	4623      	mov	r3, r4
 800a832:	47c8      	blx	r9
 800a834:	e9d4 2300 	ldrd	r2, r3, [r4]
 800a838:	441a      	add	r2, r3
 800a83a:	6963      	ldr	r3, [r4, #20]
 800a83c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800a840:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800a844:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800a848:	68a1      	ldr	r1, [r4, #8]
 800a84a:	ed94 6a08 	vldr	s12, [r4, #32]
 800a84e:	6022      	str	r2, [r4, #0]
 800a850:	3301      	adds	r3, #1
 800a852:	6163      	str	r3, [r4, #20]
 800a854:	69a3      	ldr	r3, [r4, #24]
 800a856:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a85a:	3b01      	subs	r3, #1
 800a85c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800a860:	61a3      	str	r3, [r4, #24]
 800a862:	6923      	ldr	r3, [r4, #16]
 800a864:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a868:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a86c:	edd4 6a07 	vldr	s13, [r4, #28]
 800a870:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a874:	440b      	add	r3, r1
 800a876:	68e1      	ldr	r1, [r4, #12]
 800a878:	6123      	str	r3, [r4, #16]
 800a87a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a87e:	428b      	cmp	r3, r1
 800a880:	edc4 6a07 	vstr	s13, [r4, #28]
 800a884:	db15      	blt.n	800a8b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800a886:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800a88a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a88e:	3201      	adds	r2, #1
 800a890:	edc4 6a07 	vstr	s13, [r4, #28]
 800a894:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800a898:	6022      	str	r2, [r4, #0]
 800a89a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a89e:	1a5b      	subs	r3, r3, r1
 800a8a0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a8a4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800a8a8:	6123      	str	r3, [r4, #16]
 800a8aa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a8ae:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a8b2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a8b6:	441a      	add	r2, r3
 800a8b8:	696b      	ldr	r3, [r5, #20]
 800a8ba:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800a8be:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800a8c2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800a8c6:	68a9      	ldr	r1, [r5, #8]
 800a8c8:	ed95 6a08 	vldr	s12, [r5, #32]
 800a8cc:	602a      	str	r2, [r5, #0]
 800a8ce:	3301      	adds	r3, #1
 800a8d0:	616b      	str	r3, [r5, #20]
 800a8d2:	69ab      	ldr	r3, [r5, #24]
 800a8d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a8d8:	3b01      	subs	r3, #1
 800a8da:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800a8de:	61ab      	str	r3, [r5, #24]
 800a8e0:	692b      	ldr	r3, [r5, #16]
 800a8e2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a8e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a8ea:	edd5 6a07 	vldr	s13, [r5, #28]
 800a8ee:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a8f2:	440b      	add	r3, r1
 800a8f4:	68e9      	ldr	r1, [r5, #12]
 800a8f6:	612b      	str	r3, [r5, #16]
 800a8f8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a8fc:	428b      	cmp	r3, r1
 800a8fe:	edc5 6a07 	vstr	s13, [r5, #28]
 800a902:	db15      	blt.n	800a930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800a904:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800a908:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a90c:	3201      	adds	r2, #1
 800a90e:	edc5 6a07 	vstr	s13, [r5, #28]
 800a912:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800a916:	602a      	str	r2, [r5, #0]
 800a918:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a91c:	1a5b      	subs	r3, r3, r1
 800a91e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a922:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800a926:	612b      	str	r3, [r5, #16]
 800a928:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a92c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a930:	3f01      	subs	r7, #1
 800a932:	e757      	b.n	800a7e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800a934:	4299      	cmp	r1, r3
 800a936:	dc13      	bgt.n	800a960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800a938:	429a      	cmp	r2, r3
 800a93a:	da14      	bge.n	800a966 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800a93c:	2502      	movs	r5, #2
 800a93e:	2703      	movs	r7, #3
 800a940:	46a9      	mov	r9, r5
 800a942:	f04f 0800 	mov.w	r8, #0
 800a946:	f04f 0a01 	mov.w	sl, #1
 800a94a:	e6ef      	b.n	800a72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a94c:	2501      	movs	r5, #1
 800a94e:	2700      	movs	r7, #0
 800a950:	46a9      	mov	r9, r5
 800a952:	46b8      	mov	r8, r7
 800a954:	f04f 0a02 	mov.w	sl, #2
 800a958:	e6e8      	b.n	800a72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a95a:	2501      	movs	r5, #1
 800a95c:	2702      	movs	r7, #2
 800a95e:	e6e1      	b.n	800a724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800a960:	2500      	movs	r5, #0
 800a962:	2701      	movs	r7, #1
 800a964:	e7f4      	b.n	800a950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800a966:	2702      	movs	r7, #2
 800a968:	2503      	movs	r5, #3
 800a96a:	f04f 0900 	mov.w	r9, #0
 800a96e:	46b8      	mov	r8, r7
 800a970:	e7e9      	b.n	800a946 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800a972:	4613      	mov	r3, r2
 800a974:	e728      	b.n	800a7c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800a976:	bf00      	nop
 800a978:	2000a08c 	.word	0x2000a08c
 800a97c:	fffd8f01 	.word	0xfffd8f01
 800a980:	00027100 	.word	0x00027100
 800a984:	0004e1ff 	.word	0x0004e1ff
 800a988:	0004e1fe 	.word	0x0004e1fe
 800a98c:	2000a094 	.word	0x2000a094
 800a990:	4613      	mov	r3, r2
 800a992:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a994:	9111      	str	r1, [sp, #68]	; 0x44
 800a996:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800a99a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800a99e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800a9a0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800a9a4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800a9a8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800a9ac:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800a9b0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800a9b4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800a9b8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800a9bc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800a9c0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800a9c4:	469e      	mov	lr, r3
 800a9c6:	469c      	mov	ip, r3
 800a9c8:	f04f 0900 	mov.w	r9, #0
 800a9cc:	f1bc 0f00 	cmp.w	ip, #0
 800a9d0:	d147      	bne.n	800aa62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800a9d2:	eb03 0c07 	add.w	ip, r3, r7
 800a9d6:	1ad7      	subs	r7, r2, r3
 800a9d8:	f1b9 0f00 	cmp.w	r9, #0
 800a9dc:	d009      	beq.n	800a9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800a9de:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800a9e2:	9029      	str	r0, [sp, #164]	; 0xa4
 800a9e4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800a9e8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800a9ec:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800a9f0:	912d      	str	r1, [sp, #180]	; 0xb4
 800a9f2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a9f4:	9111      	str	r1, [sp, #68]	; 0x44
 800a9f6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800a9fa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800a9fe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800aa02:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800aa06:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800aa0a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800aa0e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800aa12:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800aa16:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800aa1a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800aa1e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800aa22:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800aa26:	f04f 0800 	mov.w	r8, #0
 800aa2a:	f1be 0f00 	cmp.w	lr, #0
 800aa2e:	d031      	beq.n	800aa94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800aa30:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800aa32:	4431      	add	r1, r6
 800aa34:	4549      	cmp	r1, r9
 800aa36:	4450      	add	r0, sl
 800aa38:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800aa3c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800aa40:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800aa44:	db08      	blt.n	800aa58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800aa46:	ee77 7a85 	vadd.f32	s15, s15, s10
 800aa4a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800aa4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800aa52:	3001      	adds	r0, #1
 800aa54:	eba1 0109 	sub.w	r1, r1, r9
 800aa58:	f10e 3eff 	add.w	lr, lr, #4294967295
 800aa5c:	f04f 0801 	mov.w	r8, #1
 800aa60:	e7e3      	b.n	800aa2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800aa62:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800aa64:	4431      	add	r1, r6
 800aa66:	4541      	cmp	r1, r8
 800aa68:	4450      	add	r0, sl
 800aa6a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800aa6e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800aa72:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800aa76:	db08      	blt.n	800aa8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800aa78:	ee76 6a85 	vadd.f32	s13, s13, s10
 800aa7c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800aa80:	ee77 7a86 	vadd.f32	s15, s15, s12
 800aa84:	3001      	adds	r0, #1
 800aa86:	eba1 0108 	sub.w	r1, r1, r8
 800aa8a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800aa8e:	f04f 0901 	mov.w	r9, #1
 800aa92:	e79b      	b.n	800a9cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800aa94:	449c      	add	ip, r3
 800aa96:	1aff      	subs	r7, r7, r3
 800aa98:	f1b8 0f00 	cmp.w	r8, #0
 800aa9c:	d009      	beq.n	800aab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800aa9e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800aaa2:	9019      	str	r0, [sp, #100]	; 0x64
 800aaa4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800aaa8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800aaac:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800aab0:	911d      	str	r1, [sp, #116]	; 0x74
 800aab2:	1ad2      	subs	r2, r2, r3
 800aab4:	e68b      	b.n	800a7ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800aab6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aab8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	f000 80d1 	beq.w	800ac62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800aac0:	ad19      	add	r5, sp, #100	; 0x64
 800aac2:	ac39      	add	r4, sp, #228	; 0xe4
 800aac4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800aac6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800aaca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800aace:	930c      	str	r3, [sp, #48]	; 0x30
 800aad0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800aad2:	6963      	ldr	r3, [r4, #20]
 800aad4:	440b      	add	r3, r1
 800aad6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800aada:	4408      	add	r0, r1
 800aadc:	b200      	sxth	r0, r0
 800aade:	4283      	cmp	r3, r0
 800aae0:	900d      	str	r0, [sp, #52]	; 0x34
 800aae2:	f280 80c1 	bge.w	800ac68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800aae6:	428b      	cmp	r3, r1
 800aae8:	da08      	bge.n	800aafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800aaea:	2a00      	cmp	r2, #0
 800aaec:	dd06      	ble.n	800aafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800aaee:	1acb      	subs	r3, r1, r3
 800aaf0:	429a      	cmp	r2, r3
 800aaf2:	f2c0 80bb 	blt.w	800ac6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800aaf6:	2b00      	cmp	r3, #0
 800aaf8:	f300 80b9 	bgt.w	800ac6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800aafc:	6967      	ldr	r7, [r4, #20]
 800aafe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ab00:	443b      	add	r3, r7
 800ab02:	461f      	mov	r7, r3
 800ab04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ab06:	1bdf      	subs	r7, r3, r7
 800ab08:	4297      	cmp	r7, r2
 800ab0a:	bfa8      	it	ge
 800ab0c:	4617      	movge	r7, r2
 800ab0e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ab12:	2f00      	cmp	r7, #0
 800ab14:	f340 813c 	ble.w	800ad90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ab18:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ab1a:	6829      	ldr	r1, [r5, #0]
 800ab1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab20:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ab24:	6820      	ldr	r0, [r4, #0]
 800ab26:	4411      	add	r1, r2
 800ab28:	4299      	cmp	r1, r3
 800ab2a:	dd1a      	ble.n	800ab62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ab2c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ab30:	440b      	add	r3, r1
 800ab32:	4402      	add	r2, r0
 800ab34:	b21b      	sxth	r3, r3
 800ab36:	429a      	cmp	r2, r3
 800ab38:	dc13      	bgt.n	800ab62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ab3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ab3c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ab3e:	681b      	ldr	r3, [r3, #0]
 800ab40:	9206      	str	r2, [sp, #24]
 800ab42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ab44:	9205      	str	r2, [sp, #20]
 800ab46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ab48:	9500      	str	r5, [sp, #0]
 800ab4a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ab4e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ab50:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ab52:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ab56:	a912      	add	r1, sp, #72	; 0x48
 800ab58:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800ab5c:	aa49      	add	r2, sp, #292	; 0x124
 800ab5e:	4623      	mov	r3, r4
 800ab60:	47c8      	blx	r9
 800ab62:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ab66:	441a      	add	r2, r3
 800ab68:	6963      	ldr	r3, [r4, #20]
 800ab6a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ab6e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ab72:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ab76:	68a1      	ldr	r1, [r4, #8]
 800ab78:	ed94 6a08 	vldr	s12, [r4, #32]
 800ab7c:	6022      	str	r2, [r4, #0]
 800ab7e:	3301      	adds	r3, #1
 800ab80:	6163      	str	r3, [r4, #20]
 800ab82:	69a3      	ldr	r3, [r4, #24]
 800ab84:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ab88:	3b01      	subs	r3, #1
 800ab8a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ab8e:	61a3      	str	r3, [r4, #24]
 800ab90:	6923      	ldr	r3, [r4, #16]
 800ab92:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ab96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ab9a:	edd4 6a07 	vldr	s13, [r4, #28]
 800ab9e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800aba2:	440b      	add	r3, r1
 800aba4:	68e1      	ldr	r1, [r4, #12]
 800aba6:	6123      	str	r3, [r4, #16]
 800aba8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800abac:	428b      	cmp	r3, r1
 800abae:	edc4 6a07 	vstr	s13, [r4, #28]
 800abb2:	db15      	blt.n	800abe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800abb4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800abb8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800abbc:	3201      	adds	r2, #1
 800abbe:	edc4 6a07 	vstr	s13, [r4, #28]
 800abc2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800abc6:	6022      	str	r2, [r4, #0]
 800abc8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800abcc:	1a5b      	subs	r3, r3, r1
 800abce:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800abd2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800abd6:	6123      	str	r3, [r4, #16]
 800abd8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800abdc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800abe0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800abe4:	441a      	add	r2, r3
 800abe6:	696b      	ldr	r3, [r5, #20]
 800abe8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800abec:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800abf0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800abf4:	68a9      	ldr	r1, [r5, #8]
 800abf6:	ed95 6a08 	vldr	s12, [r5, #32]
 800abfa:	602a      	str	r2, [r5, #0]
 800abfc:	3301      	adds	r3, #1
 800abfe:	616b      	str	r3, [r5, #20]
 800ac00:	69ab      	ldr	r3, [r5, #24]
 800ac02:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ac06:	3b01      	subs	r3, #1
 800ac08:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ac0c:	61ab      	str	r3, [r5, #24]
 800ac0e:	692b      	ldr	r3, [r5, #16]
 800ac10:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ac14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ac18:	edd5 6a07 	vldr	s13, [r5, #28]
 800ac1c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ac20:	440b      	add	r3, r1
 800ac22:	68e9      	ldr	r1, [r5, #12]
 800ac24:	612b      	str	r3, [r5, #16]
 800ac26:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ac2a:	428b      	cmp	r3, r1
 800ac2c:	edc5 6a07 	vstr	s13, [r5, #28]
 800ac30:	db15      	blt.n	800ac5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ac32:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ac36:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ac3a:	3201      	adds	r2, #1
 800ac3c:	edc5 6a07 	vstr	s13, [r5, #28]
 800ac40:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ac44:	602a      	str	r2, [r5, #0]
 800ac46:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ac4a:	1a5b      	subs	r3, r3, r1
 800ac4c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ac50:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ac54:	612b      	str	r3, [r5, #16]
 800ac56:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ac5a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ac5e:	3f01      	subs	r7, #1
 800ac60:	e757      	b.n	800ab12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ac62:	ad39      	add	r5, sp, #228	; 0xe4
 800ac64:	ac19      	add	r4, sp, #100	; 0x64
 800ac66:	e72d      	b.n	800aac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ac68:	4613      	mov	r3, r2
 800ac6a:	e744      	b.n	800aaf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ac6c:	4613      	mov	r3, r2
 800ac6e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ac72:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ac74:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ac78:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800ac7c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800ac80:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800ac84:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800ac88:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800ac8c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800ac90:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800ac92:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ac96:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800ac9a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800ac9e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800aca2:	960e      	str	r6, [sp, #56]	; 0x38
 800aca4:	469e      	mov	lr, r3
 800aca6:	461f      	mov	r7, r3
 800aca8:	f04f 0900 	mov.w	r9, #0
 800acac:	2f00      	cmp	r7, #0
 800acae:	d146      	bne.n	800ad3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800acb0:	449c      	add	ip, r3
 800acb2:	1ad7      	subs	r7, r2, r3
 800acb4:	f1b9 0f00 	cmp.w	r9, #0
 800acb8:	d009      	beq.n	800acce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800acba:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800acbe:	9039      	str	r0, [sp, #228]	; 0xe4
 800acc0:	913d      	str	r1, [sp, #244]	; 0xf4
 800acc2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800acc6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800acca:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800acce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800acd0:	910e      	str	r1, [sp, #56]	; 0x38
 800acd2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800acd6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800acda:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800acde:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ace2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ace6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800acea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800acee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800acf2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800acf6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800acfa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800acfe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ad02:	f04f 0800 	mov.w	r8, #0
 800ad06:	f1be 0f00 	cmp.w	lr, #0
 800ad0a:	d030      	beq.n	800ad6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ad0c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ad0e:	4431      	add	r1, r6
 800ad10:	4549      	cmp	r1, r9
 800ad12:	4450      	add	r0, sl
 800ad14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ad18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ad1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ad20:	db08      	blt.n	800ad34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ad22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ad26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ad2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ad2e:	3001      	adds	r0, #1
 800ad30:	eba1 0109 	sub.w	r1, r1, r9
 800ad34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ad38:	f04f 0801 	mov.w	r8, #1
 800ad3c:	e7e3      	b.n	800ad06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ad3e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ad40:	4431      	add	r1, r6
 800ad42:	4541      	cmp	r1, r8
 800ad44:	4450      	add	r0, sl
 800ad46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ad4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ad4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ad52:	db08      	blt.n	800ad66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ad54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ad58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ad5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ad60:	3001      	adds	r0, #1
 800ad62:	eba1 0108 	sub.w	r1, r1, r8
 800ad66:	3f01      	subs	r7, #1
 800ad68:	f04f 0901 	mov.w	r9, #1
 800ad6c:	e79e      	b.n	800acac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ad6e:	449c      	add	ip, r3
 800ad70:	1aff      	subs	r7, r7, r3
 800ad72:	f1b8 0f00 	cmp.w	r8, #0
 800ad76:	d009      	beq.n	800ad8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ad78:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ad7c:	9019      	str	r0, [sp, #100]	; 0x64
 800ad7e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ad82:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ad86:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ad8a:	911d      	str	r1, [sp, #116]	; 0x74
 800ad8c:	1ad2      	subs	r2, r2, r3
 800ad8e:	e6b5      	b.n	800aafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ad90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ad92:	681b      	ldr	r3, [r3, #0]
 800ad94:	b923      	cbnz	r3, 800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ad96:	4b04      	ldr	r3, [pc, #16]	; (800ada8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ad98:	6818      	ldr	r0, [r3, #0]
 800ad9a:	6803      	ldr	r3, [r0, #0]
 800ad9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ad9e:	4798      	blx	r3
 800ada0:	b05b      	add	sp, #364	; 0x16c
 800ada2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ada6:	bf00      	nop
 800ada8:	2000a094 	.word	0x2000a094

0800adac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800adac:	b570      	push	{r4, r5, r6, lr}
 800adae:	4604      	mov	r4, r0
 800adb0:	2500      	movs	r5, #0
 800adb2:	7223      	strb	r3, [r4, #8]
 800adb4:	9804      	ldr	r0, [sp, #16]
 800adb6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800adba:	8025      	strh	r5, [r4, #0]
 800adbc:	6061      	str	r1, [r4, #4]
 800adbe:	7263      	strb	r3, [r4, #9]
 800adc0:	60e0      	str	r0, [r4, #12]
 800adc2:	8222      	strh	r2, [r4, #16]
 800adc4:	8265      	strh	r5, [r4, #18]
 800adc6:	82a5      	strh	r5, [r4, #20]
 800adc8:	82e5      	strh	r5, [r4, #22]
 800adca:	8325      	strh	r5, [r4, #24]
 800adcc:	8365      	strh	r5, [r4, #26]
 800adce:	83a5      	strh	r5, [r4, #28]
 800add0:	77a5      	strb	r5, [r4, #30]
 800add2:	6803      	ldr	r3, [r0, #0]
 800add4:	695b      	ldr	r3, [r3, #20]
 800add6:	4798      	blx	r3
 800add8:	4606      	mov	r6, r0
 800adda:	b1f8      	cbz	r0, 800ae1c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800addc:	68e0      	ldr	r0, [r4, #12]
 800adde:	6803      	ldr	r3, [r0, #0]
 800ade0:	4631      	mov	r1, r6
 800ade2:	68db      	ldr	r3, [r3, #12]
 800ade4:	4798      	blx	r3
 800ade6:	7b43      	ldrb	r3, [r0, #13]
 800ade8:	7a82      	ldrb	r2, [r0, #10]
 800adea:	005b      	lsls	r3, r3, #1
 800adec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800adf0:	4313      	orrs	r3, r2
 800adf2:	83a3      	strh	r3, [r4, #28]
 800adf4:	7a63      	ldrb	r3, [r4, #9]
 800adf6:	2b04      	cmp	r3, #4
 800adf8:	4605      	mov	r5, r0
 800adfa:	d10f      	bne.n	800ae1c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800adfc:	68e0      	ldr	r0, [r4, #12]
 800adfe:	6803      	ldr	r3, [r0, #0]
 800ae00:	462a      	mov	r2, r5
 800ae02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae04:	4631      	mov	r1, r6
 800ae06:	4798      	blx	r3
 800ae08:	7b6b      	ldrb	r3, [r5, #13]
 800ae0a:	005b      	lsls	r3, r3, #1
 800ae0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ae10:	7aab      	ldrb	r3, [r5, #10]
 800ae12:	4313      	orrs	r3, r2
 800ae14:	4418      	add	r0, r3
 800ae16:	8ba3      	ldrh	r3, [r4, #28]
 800ae18:	4418      	add	r0, r3
 800ae1a:	83a0      	strh	r0, [r4, #28]
 800ae1c:	4620      	mov	r0, r4
 800ae1e:	bd70      	pop	{r4, r5, r6, pc}

0800ae20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ae20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae24:	2400      	movs	r4, #0
 800ae26:	b085      	sub	sp, #20
 800ae28:	4681      	mov	r9, r0
 800ae2a:	4688      	mov	r8, r1
 800ae2c:	4692      	mov	sl, r2
 800ae2e:	469b      	mov	fp, r3
 800ae30:	4627      	mov	r7, r4
 800ae32:	4625      	mov	r5, r4
 800ae34:	4626      	mov	r6, r4
 800ae36:	4554      	cmp	r4, sl
 800ae38:	da2a      	bge.n	800ae90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ae3a:	2300      	movs	r3, #0
 800ae3c:	9303      	str	r3, [sp, #12]
 800ae3e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ae42:	429d      	cmp	r5, r3
 800ae44:	d004      	beq.n	800ae50 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800ae46:	f242 030b 	movw	r3, #8203	; 0x200b
 800ae4a:	429d      	cmp	r5, r3
 800ae4c:	bf18      	it	ne
 800ae4e:	462f      	movne	r7, r5
 800ae50:	ab03      	add	r3, sp, #12
 800ae52:	4642      	mov	r2, r8
 800ae54:	4659      	mov	r1, fp
 800ae56:	4648      	mov	r0, r9
 800ae58:	f002 feb4 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ae5c:	4605      	mov	r5, r0
 800ae5e:	b1b8      	cbz	r0, 800ae90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ae60:	280a      	cmp	r0, #10
 800ae62:	d015      	beq.n	800ae90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ae64:	9a03      	ldr	r2, [sp, #12]
 800ae66:	b18a      	cbz	r2, 800ae8c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ae68:	7b50      	ldrb	r0, [r2, #13]
 800ae6a:	7a93      	ldrb	r3, [r2, #10]
 800ae6c:	8895      	ldrh	r5, [r2, #4]
 800ae6e:	0040      	lsls	r0, r0, #1
 800ae70:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ae74:	4303      	orrs	r3, r0
 800ae76:	9301      	str	r3, [sp, #4]
 800ae78:	f8d8 3000 	ldr.w	r3, [r8]
 800ae7c:	4639      	mov	r1, r7
 800ae7e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae80:	4640      	mov	r0, r8
 800ae82:	4798      	blx	r3
 800ae84:	9b01      	ldr	r3, [sp, #4]
 800ae86:	4418      	add	r0, r3
 800ae88:	4406      	add	r6, r0
 800ae8a:	b2b6      	uxth	r6, r6
 800ae8c:	3401      	adds	r4, #1
 800ae8e:	e7d2      	b.n	800ae36 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800ae90:	4630      	mov	r0, r6
 800ae92:	b005      	add	sp, #20
 800ae94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ae98 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800ae98:	2a02      	cmp	r2, #2
 800ae9a:	b530      	push	{r4, r5, lr}
 800ae9c:	d011      	beq.n	800aec2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800ae9e:	2a03      	cmp	r2, #3
 800aea0:	d01c      	beq.n	800aedc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800aea2:	2a01      	cmp	r2, #1
 800aea4:	d10c      	bne.n	800aec0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800aea6:	888b      	ldrh	r3, [r1, #4]
 800aea8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800aeac:	8801      	ldrh	r1, [r0, #0]
 800aeae:	8844      	ldrh	r4, [r0, #2]
 800aeb0:	8004      	strh	r4, [r0, #0]
 800aeb2:	1a9b      	subs	r3, r3, r2
 800aeb4:	1a5b      	subs	r3, r3, r1
 800aeb6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800aeba:	8043      	strh	r3, [r0, #2]
 800aebc:	8081      	strh	r1, [r0, #4]
 800aebe:	80c2      	strh	r2, [r0, #6]
 800aec0:	bd30      	pop	{r4, r5, pc}
 800aec2:	88cb      	ldrh	r3, [r1, #6]
 800aec4:	88c2      	ldrh	r2, [r0, #6]
 800aec6:	1a9b      	subs	r3, r3, r2
 800aec8:	8842      	ldrh	r2, [r0, #2]
 800aeca:	1a9b      	subs	r3, r3, r2
 800aecc:	888a      	ldrh	r2, [r1, #4]
 800aece:	8881      	ldrh	r1, [r0, #4]
 800aed0:	8043      	strh	r3, [r0, #2]
 800aed2:	1a52      	subs	r2, r2, r1
 800aed4:	8801      	ldrh	r1, [r0, #0]
 800aed6:	1a52      	subs	r2, r2, r1
 800aed8:	8002      	strh	r2, [r0, #0]
 800aeda:	e7f1      	b.n	800aec0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800aedc:	88cb      	ldrh	r3, [r1, #6]
 800aede:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800aee2:	8841      	ldrh	r1, [r0, #2]
 800aee4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800aee8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800aeec:	8045      	strh	r5, [r0, #2]
 800aeee:	1a9b      	subs	r3, r3, r2
 800aef0:	1a5b      	subs	r3, r3, r1
 800aef2:	8003      	strh	r3, [r0, #0]
 800aef4:	8082      	strh	r2, [r0, #4]
 800aef6:	80c4      	strh	r4, [r0, #6]
 800aef8:	e7e2      	b.n	800aec0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800aefa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800aefa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aefe:	b09f      	sub	sp, #124	; 0x7c
 800af00:	9116      	str	r1, [sp, #88]	; 0x58
 800af02:	9317      	str	r3, [sp, #92]	; 0x5c
 800af04:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800af06:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800af08:	8809      	ldrh	r1, [r1, #0]
 800af0a:	889b      	ldrh	r3, [r3, #4]
 800af0c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800af10:	9212      	str	r2, [sp, #72]	; 0x48
 800af12:	440b      	add	r3, r1
 800af14:	b21b      	sxth	r3, r3
 800af16:	9310      	str	r3, [sp, #64]	; 0x40
 800af18:	f8d8 3000 	ldr.w	r3, [r8]
 800af1c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800af20:	7a59      	ldrb	r1, [r3, #9]
 800af22:	7a1b      	ldrb	r3, [r3, #8]
 800af24:	9315      	str	r3, [sp, #84]	; 0x54
 800af26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800af28:	9011      	str	r0, [sp, #68]	; 0x44
 800af2a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800af2e:	9114      	str	r1, [sp, #80]	; 0x50
 800af30:	f9b3 5000 	ldrsh.w	r5, [r3]
 800af34:	2a00      	cmp	r2, #0
 800af36:	d067      	beq.n	800b008 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800af38:	f898 3010 	ldrb.w	r3, [r8, #16]
 800af3c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800af3e:	2b04      	cmp	r3, #4
 800af40:	bf14      	ite	ne
 800af42:	2301      	movne	r3, #1
 800af44:	2302      	moveq	r3, #2
 800af46:	4413      	add	r3, r2
 800af48:	f04f 0900 	mov.w	r9, #0
 800af4c:	930f      	str	r3, [sp, #60]	; 0x3c
 800af4e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800af52:	464c      	mov	r4, r9
 800af54:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800af58:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800af5c:	4293      	cmp	r3, r2
 800af5e:	f280 808c 	bge.w	800b07a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800af62:	2300      	movs	r3, #0
 800af64:	931c      	str	r3, [sp, #112]	; 0x70
 800af66:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800af6a:	429c      	cmp	r4, r3
 800af6c:	d006      	beq.n	800af7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800af6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af70:	f242 020b 	movw	r2, #8203	; 0x200b
 800af74:	4294      	cmp	r4, r2
 800af76:	bf18      	it	ne
 800af78:	4623      	movne	r3, r4
 800af7a:	930d      	str	r3, [sp, #52]	; 0x34
 800af7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800af7e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800af80:	f8d8 2000 	ldr.w	r2, [r8]
 800af84:	428b      	cmp	r3, r1
 800af86:	db41      	blt.n	800b00c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800af88:	6813      	ldr	r3, [r2, #0]
 800af8a:	4610      	mov	r0, r2
 800af8c:	695b      	ldr	r3, [r3, #20]
 800af8e:	4798      	blx	r3
 800af90:	4604      	mov	r4, r0
 800af92:	f8d8 0000 	ldr.w	r0, [r8]
 800af96:	6803      	ldr	r3, [r0, #0]
 800af98:	aa1d      	add	r2, sp, #116	; 0x74
 800af9a:	689e      	ldr	r6, [r3, #8]
 800af9c:	4621      	mov	r1, r4
 800af9e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800afa2:	47b0      	blx	r6
 800afa4:	901c      	str	r0, [sp, #112]	; 0x70
 800afa6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800afaa:	429c      	cmp	r4, r3
 800afac:	f000 80e9 	beq.w	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800afb0:	f242 030b 	movw	r3, #8203	; 0x200b
 800afb4:	429c      	cmp	r4, r3
 800afb6:	f000 80e4 	beq.w	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800afba:	2c00      	cmp	r4, #0
 800afbc:	f000 80f6 	beq.w	800b1ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800afc0:	2c0a      	cmp	r4, #10
 800afc2:	d060      	beq.n	800b086 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800afc4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800afc6:	b36a      	cbz	r2, 800b024 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800afc8:	8894      	ldrh	r4, [r2, #4]
 800afca:	f1bb 0f00 	cmp.w	fp, #0
 800afce:	d03b      	beq.n	800b048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800afd0:	f892 900d 	ldrb.w	r9, [r2, #13]
 800afd4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800afd8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800afdc:	f892 900a 	ldrb.w	r9, [r2, #10]
 800afe0:	f1bb 0f01 	cmp.w	fp, #1
 800afe4:	ea49 0903 	orr.w	r9, r9, r3
 800afe8:	d134      	bne.n	800b054 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800afea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800afec:	eba5 0509 	sub.w	r5, r5, r9
 800aff0:	2b00      	cmp	r3, #0
 800aff2:	d14f      	bne.n	800b094 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800aff4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800aff6:	eb09 0305 	add.w	r3, r9, r5
 800affa:	4413      	add	r3, r2
 800affc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800affe:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b002:	4293      	cmp	r3, r2
 800b004:	da51      	bge.n	800b0aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b006:	e038      	b.n	800b07a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b008:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b00a:	e79d      	b.n	800af48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800b00c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b010:	9301      	str	r3, [sp, #4]
 800b012:	ab1d      	add	r3, sp, #116	; 0x74
 800b014:	9300      	str	r3, [sp, #0]
 800b016:	4659      	mov	r1, fp
 800b018:	ab1c      	add	r3, sp, #112	; 0x70
 800b01a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b01c:	f002 fe2a 	bl	800dc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800b020:	4604      	mov	r4, r0
 800b022:	e7c0      	b.n	800afa6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800b024:	f8d8 0000 	ldr.w	r0, [r8]
 800b028:	6803      	ldr	r3, [r0, #0]
 800b02a:	691b      	ldr	r3, [r3, #16]
 800b02c:	4798      	blx	r3
 800b02e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b032:	4298      	cmp	r0, r3
 800b034:	f000 80a5 	beq.w	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b038:	f242 030b 	movw	r3, #8203	; 0x200b
 800b03c:	4298      	cmp	r0, r3
 800b03e:	f000 80a0 	beq.w	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b042:	f1bb 0f00 	cmp.w	fp, #0
 800b046:	d100      	bne.n	800b04a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800b048:	444d      	add	r5, r9
 800b04a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b04c:	2a00      	cmp	r2, #0
 800b04e:	d1bf      	bne.n	800afd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800b050:	4691      	mov	r9, r2
 800b052:	e096      	b.n	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b056:	2b00      	cmp	r3, #0
 800b058:	f000 80aa 	beq.w	800b1b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800b05c:	f1bb 0f00 	cmp.w	fp, #0
 800b060:	d118      	bne.n	800b094 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b062:	f8d8 0000 	ldr.w	r0, [r8]
 800b066:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b068:	6803      	ldr	r3, [r0, #0]
 800b06a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b06c:	4798      	blx	r3
 800b06e:	4405      	add	r5, r0
 800b070:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b072:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b074:	1aeb      	subs	r3, r5, r3
 800b076:	4293      	cmp	r3, r2
 800b078:	dd17      	ble.n	800b0aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b07a:	2c00      	cmp	r4, #0
 800b07c:	f000 8096 	beq.w	800b1ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b080:	2c0a      	cmp	r4, #10
 800b082:	f040 8084 	bne.w	800b18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800b086:	240a      	movs	r4, #10
 800b088:	fab4 f084 	clz	r0, r4
 800b08c:	0940      	lsrs	r0, r0, #5
 800b08e:	b01f      	add	sp, #124	; 0x7c
 800b090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b094:	f8d8 0000 	ldr.w	r0, [r8]
 800b098:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b09e:	4798      	blx	r3
 800b0a0:	f1bb 0f01 	cmp.w	fp, #1
 800b0a4:	eba5 0500 	sub.w	r5, r5, r0
 800b0a8:	d0a4      	beq.n	800aff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800b0aa:	981c      	ldr	r0, [sp, #112]	; 0x70
 800b0ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b0ae:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800b0b2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800b0b6:	7b43      	ldrb	r3, [r0, #13]
 800b0b8:	015b      	lsls	r3, r3, #5
 800b0ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b0be:	7983      	ldrb	r3, [r0, #6]
 800b0c0:	4429      	add	r1, r5
 800b0c2:	4313      	orrs	r3, r2
 800b0c4:	440b      	add	r3, r1
 800b0c6:	42b3      	cmp	r3, r6
 800b0c8:	db5b      	blt.n	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b0ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b0cc:	4299      	cmp	r1, r3
 800b0ce:	da58      	bge.n	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b0d0:	f8d8 0000 	ldr.w	r0, [r8]
 800b0d4:	6803      	ldr	r3, [r0, #0]
 800b0d6:	42ae      	cmp	r6, r5
 800b0d8:	bfc8      	it	gt
 800b0da:	1b76      	subgt	r6, r6, r5
 800b0dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0de:	bfcc      	ite	gt
 800b0e0:	b2b6      	uxthgt	r6, r6
 800b0e2:	2600      	movle	r6, #0
 800b0e4:	4798      	blx	r3
 800b0e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800b0e8:	7b5a      	ldrb	r2, [r3, #13]
 800b0ea:	00d1      	lsls	r1, r2, #3
 800b0ec:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800b0f0:	7a19      	ldrb	r1, [r3, #8]
 800b0f2:	4339      	orrs	r1, r7
 800b0f4:	0657      	lsls	r7, r2, #25
 800b0f6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b0f8:	bf44      	itt	mi
 800b0fa:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800b0fe:	b209      	sxthmi	r1, r1
 800b100:	19c7      	adds	r7, r0, r7
 800b102:	1a7f      	subs	r7, r7, r1
 800b104:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b106:	b2bf      	uxth	r7, r7
 800b108:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b10c:	fa0f fa87 	sxth.w	sl, r7
 800b110:	4551      	cmp	r1, sl
 800b112:	dd3a      	ble.n	800b18a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800b114:	0112      	lsls	r2, r2, #4
 800b116:	79d8      	ldrb	r0, [r3, #7]
 800b118:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800b11c:	4302      	orrs	r2, r0
 800b11e:	4492      	add	sl, r2
 800b120:	4551      	cmp	r1, sl
 800b122:	dc2e      	bgt.n	800b182 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b124:	1bcf      	subs	r7, r1, r7
 800b126:	b2bf      	uxth	r7, r7
 800b128:	468a      	mov	sl, r1
 800b12a:	9319      	str	r3, [sp, #100]	; 0x64
 800b12c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b12e:	f8d8 0000 	ldr.w	r0, [r8]
 800b132:	681a      	ldr	r2, [r3, #0]
 800b134:	6801      	ldr	r1, [r0, #0]
 800b136:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b138:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b13a:	9313      	str	r3, [sp, #76]	; 0x4c
 800b13c:	9218      	str	r2, [sp, #96]	; 0x60
 800b13e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b140:	4788      	blx	r1
 800b142:	f898 1006 	ldrb.w	r1, [r8, #6]
 800b146:	910b      	str	r1, [sp, #44]	; 0x2c
 800b148:	f898 100e 	ldrb.w	r1, [r8, #14]
 800b14c:	910a      	str	r1, [sp, #40]	; 0x28
 800b14e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800b152:	9109      	str	r1, [sp, #36]	; 0x24
 800b154:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b156:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800b15a:	9305      	str	r3, [sp, #20]
 800b15c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b15e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b160:	9206      	str	r2, [sp, #24]
 800b162:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b166:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800b16a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800b16e:	442e      	add	r6, r5
 800b170:	b236      	sxth	r6, r6
 800b172:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b174:	9600      	str	r6, [sp, #0]
 800b176:	681a      	ldr	r2, [r3, #0]
 800b178:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b17a:	685b      	ldr	r3, [r3, #4]
 800b17c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b17e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b180:	47b0      	blx	r6
 800b182:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b184:	3301      	adds	r3, #1
 800b186:	930e      	str	r3, [sp, #56]	; 0x38
 800b188:	e6e6      	b.n	800af58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800b18a:	2700      	movs	r7, #0
 800b18c:	e7cd      	b.n	800b12a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800b18e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800b190:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b192:	3501      	adds	r5, #1
 800b194:	429d      	cmp	r5, r3
 800b196:	f6bf af77 	bge.w	800b088 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b19a:	4659      	mov	r1, fp
 800b19c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b19e:	f7f7 faa3 	bl	80026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b1a2:	4604      	mov	r4, r0
 800b1a4:	b110      	cbz	r0, 800b1ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b1a6:	280a      	cmp	r0, #10
 800b1a8:	d1f2      	bne.n	800b190 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800b1aa:	e76c      	b.n	800b086 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b1ac:	2400      	movs	r4, #0
 800b1ae:	e76b      	b.n	800b088 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b1b0:	f1bb 0f00 	cmp.w	fp, #0
 800b1b4:	f43f af5c 	beq.w	800b070 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800b1b8:	e777      	b.n	800b0aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800b1ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b1ba:	b530      	push	{r4, r5, lr}
 800b1bc:	8a44      	ldrh	r4, [r0, #18]
 800b1be:	8ac5      	ldrh	r5, [r0, #22]
 800b1c0:	82c3      	strh	r3, [r0, #22]
 800b1c2:	442c      	add	r4, r5
 800b1c4:	1ae4      	subs	r4, r4, r3
 800b1c6:	8244      	strh	r4, [r0, #18]
 800b1c8:	8b03      	ldrh	r3, [r0, #24]
 800b1ca:	8a84      	ldrh	r4, [r0, #20]
 800b1cc:	4422      	add	r2, r4
 800b1ce:	440c      	add	r4, r1
 800b1d0:	1a59      	subs	r1, r3, r1
 800b1d2:	8342      	strh	r2, [r0, #26]
 800b1d4:	8284      	strh	r4, [r0, #20]
 800b1d6:	8301      	strh	r1, [r0, #24]
 800b1d8:	bd30      	pop	{r4, r5, pc}

0800b1da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800b1da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1de:	7a43      	ldrb	r3, [r0, #9]
 800b1e0:	1eda      	subs	r2, r3, #3
 800b1e2:	b087      	sub	sp, #28
 800b1e4:	4604      	mov	r4, r0
 800b1e6:	b2d2      	uxtb	r2, r2
 800b1e8:	460f      	mov	r7, r1
 800b1ea:	2900      	cmp	r1, #0
 800b1ec:	d036      	beq.n	800b25c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800b1ee:	2a01      	cmp	r2, #1
 800b1f0:	d932      	bls.n	800b258 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800b1f2:	1e58      	subs	r0, r3, #1
 800b1f4:	f1d0 0b00 	rsbs	fp, r0, #0
 800b1f8:	eb4b 0b00 	adc.w	fp, fp, r0
 800b1fc:	1e99      	subs	r1, r3, #2
 800b1fe:	424b      	negs	r3, r1
 800b200:	414b      	adcs	r3, r1
 800b202:	9303      	str	r3, [sp, #12]
 800b204:	2300      	movs	r3, #0
 800b206:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b20a:	2500      	movs	r5, #0
 800b20c:	8265      	strh	r5, [r4, #18]
 800b20e:	82a5      	strh	r5, [r4, #20]
 800b210:	46a9      	mov	r9, r5
 800b212:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800b216:	2300      	movs	r3, #0
 800b218:	9305      	str	r3, [sp, #20]
 800b21a:	8823      	ldrh	r3, [r4, #0]
 800b21c:	2b20      	cmp	r3, #32
 800b21e:	d02b      	beq.n	800b278 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800b220:	eba3 020a 	sub.w	r2, r3, sl
 800b224:	4256      	negs	r6, r2
 800b226:	4156      	adcs	r6, r2
 800b228:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b22c:	4293      	cmp	r3, r2
 800b22e:	d004      	beq.n	800b23a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b230:	4553      	cmp	r3, sl
 800b232:	bf16      	itet	ne
 800b234:	4699      	movne	r9, r3
 800b236:	2601      	moveq	r6, #1
 800b238:	2600      	movne	r6, #0
 800b23a:	ab05      	add	r3, sp, #20
 800b23c:	68e2      	ldr	r2, [r4, #12]
 800b23e:	7a21      	ldrb	r1, [r4, #8]
 800b240:	6860      	ldr	r0, [r4, #4]
 800b242:	f002 fcbf 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b246:	8020      	strh	r0, [r4, #0]
 800b248:	b9c8      	cbnz	r0, 800b27e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800b24a:	8b22      	ldrh	r2, [r4, #24]
 800b24c:	2300      	movs	r3, #0
 800b24e:	4611      	mov	r1, r2
 800b250:	4620      	mov	r0, r4
 800b252:	f7ff ffb2 	bl	800b1ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b256:	e066      	b.n	800b326 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b258:	468b      	mov	fp, r1
 800b25a:	e7cf      	b.n	800b1fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800b25c:	3b01      	subs	r3, #1
 800b25e:	2a01      	cmp	r2, #1
 800b260:	bf8c      	ite	hi
 800b262:	2200      	movhi	r2, #0
 800b264:	2201      	movls	r2, #1
 800b266:	2b01      	cmp	r3, #1
 800b268:	bf8c      	ite	hi
 800b26a:	2300      	movhi	r3, #0
 800b26c:	2301      	movls	r3, #1
 800b26e:	9202      	str	r2, [sp, #8]
 800b270:	9301      	str	r3, [sp, #4]
 800b272:	9103      	str	r1, [sp, #12]
 800b274:	468b      	mov	fp, r1
 800b276:	e7c8      	b.n	800b20a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800b278:	4699      	mov	r9, r3
 800b27a:	2601      	movs	r6, #1
 800b27c:	e7dd      	b.n	800b23a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b27e:	8ae3      	ldrh	r3, [r4, #22]
 800b280:	280a      	cmp	r0, #10
 800b282:	f103 0301 	add.w	r3, r3, #1
 800b286:	82e3      	strh	r3, [r4, #22]
 800b288:	d0df      	beq.n	800b24a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800b28a:	9a05      	ldr	r2, [sp, #20]
 800b28c:	bb42      	cbnz	r2, 800b2e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800b28e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b292:	4298      	cmp	r0, r3
 800b294:	d001      	beq.n	800b29a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b296:	4550      	cmp	r0, sl
 800b298:	d1bd      	bne.n	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b29a:	8823      	ldrh	r3, [r4, #0]
 800b29c:	8b21      	ldrh	r1, [r4, #24]
 800b29e:	2b20      	cmp	r3, #32
 800b2a0:	d001      	beq.n	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800b2a2:	4553      	cmp	r3, sl
 800b2a4:	d131      	bne.n	800b30a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800b2a6:	2e00      	cmp	r6, #0
 800b2a8:	bf0a      	itet	eq
 800b2aa:	460d      	moveq	r5, r1
 800b2ac:	4630      	movne	r0, r6
 800b2ae:	2001      	moveq	r0, #1
 800b2b0:	440a      	add	r2, r1
 800b2b2:	8aa3      	ldrh	r3, [r4, #20]
 800b2b4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800b2b8:	b292      	uxth	r2, r2
 800b2ba:	8322      	strh	r2, [r4, #24]
 800b2bc:	4413      	add	r3, r2
 800b2be:	2f00      	cmp	r7, #0
 800b2c0:	d03a      	beq.n	800b338 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800b2c2:	f1bb 0f00 	cmp.w	fp, #0
 800b2c6:	d102      	bne.n	800b2ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800b2c8:	9903      	ldr	r1, [sp, #12]
 800b2ca:	b301      	cbz	r1, 800b30e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b2cc:	b1f8      	cbz	r0, 800b30e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b2ce:	8ba1      	ldrh	r1, [r4, #28]
 800b2d0:	4419      	add	r1, r3
 800b2d2:	458c      	cmp	ip, r1
 800b2d4:	da2a      	bge.n	800b32c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b2d6:	8a61      	ldrh	r1, [r4, #18]
 800b2d8:	b341      	cbz	r1, 800b32c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b2da:	4563      	cmp	r3, ip
 800b2dc:	dd9b      	ble.n	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b2de:	e01c      	b.n	800b31a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800b2e0:	8893      	ldrh	r3, [r2, #4]
 800b2e2:	8023      	strh	r3, [r4, #0]
 800b2e4:	f892 800d 	ldrb.w	r8, [r2, #13]
 800b2e8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800b2ec:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800b2f0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800b2f4:	ea48 0800 	orr.w	r8, r8, r0
 800b2f8:	68e0      	ldr	r0, [r4, #12]
 800b2fa:	6803      	ldr	r3, [r0, #0]
 800b2fc:	4649      	mov	r1, r9
 800b2fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b300:	4798      	blx	r3
 800b302:	eb08 0200 	add.w	r2, r8, r0
 800b306:	b292      	uxth	r2, r2
 800b308:	e7c7      	b.n	800b29a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b30a:	2000      	movs	r0, #0
 800b30c:	e7d0      	b.n	800b2b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800b30e:	4563      	cmp	r3, ip
 800b310:	dd81      	ble.n	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b312:	8a63      	ldrh	r3, [r4, #18]
 800b314:	2b00      	cmp	r3, #0
 800b316:	f43f af7e 	beq.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b31a:	2301      	movs	r3, #1
 800b31c:	77a3      	strb	r3, [r4, #30]
 800b31e:	8ba2      	ldrh	r2, [r4, #28]
 800b320:	8b63      	ldrh	r3, [r4, #26]
 800b322:	4413      	add	r3, r2
 800b324:	8363      	strh	r3, [r4, #26]
 800b326:	b007      	add	sp, #28
 800b328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b32c:	2300      	movs	r3, #0
 800b32e:	4611      	mov	r1, r2
 800b330:	4620      	mov	r0, r4
 800b332:	f7ff ff42 	bl	800b1ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b336:	e76e      	b.n	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b338:	4563      	cmp	r3, ip
 800b33a:	dd14      	ble.n	800b366 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800b33c:	9b02      	ldr	r3, [sp, #8]
 800b33e:	b113      	cbz	r3, 800b346 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800b340:	2301      	movs	r3, #1
 800b342:	460a      	mov	r2, r1
 800b344:	e783      	b.n	800b24e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800b346:	9b01      	ldr	r3, [sp, #4]
 800b348:	2b00      	cmp	r3, #0
 800b34a:	f43f af64 	beq.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b34e:	2800      	cmp	r0, #0
 800b350:	f47f af61 	bne.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b354:	b116      	cbz	r6, 800b35c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800b356:	2301      	movs	r3, #1
 800b358:	462a      	mov	r2, r5
 800b35a:	e779      	b.n	800b250 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800b35c:	8a63      	ldrh	r3, [r4, #18]
 800b35e:	2b00      	cmp	r3, #0
 800b360:	f43f af59 	beq.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b364:	e7df      	b.n	800b326 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b366:	2800      	cmp	r0, #0
 800b368:	f47f af55 	bne.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b36c:	2e00      	cmp	r6, #0
 800b36e:	f43f af52 	beq.w	800b216 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b372:	2301      	movs	r3, #1
 800b374:	462a      	mov	r2, r5
 800b376:	e7db      	b.n	800b330 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800b378 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800b378:	b530      	push	{r4, r5, lr}
 800b37a:	4605      	mov	r5, r0
 800b37c:	b08b      	sub	sp, #44	; 0x2c
 800b37e:	b191      	cbz	r1, 800b3a6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800b380:	e9cd 3100 	strd	r3, r1, [sp]
 800b384:	4613      	mov	r3, r2
 800b386:	4601      	mov	r1, r0
 800b388:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800b38c:	a802      	add	r0, sp, #8
 800b38e:	f7ff fd0d 	bl	800adac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b392:	2401      	movs	r4, #1
 800b394:	2100      	movs	r1, #0
 800b396:	a802      	add	r0, sp, #8
 800b398:	f7ff ff1f 	bl	800b1da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b39c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800b3a0:	b163      	cbz	r3, 800b3bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800b3a2:	3401      	adds	r4, #1
 800b3a4:	e7f6      	b.n	800b394 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800b3a6:	f002 fd05 	bl	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b3aa:	2401      	movs	r4, #1
 800b3ac:	280a      	cmp	r0, #10
 800b3ae:	4628      	mov	r0, r5
 800b3b0:	bf08      	it	eq
 800b3b2:	3401      	addeq	r4, #1
 800b3b4:	f002 fcfe 	bl	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b3b8:	2800      	cmp	r0, #0
 800b3ba:	d1f7      	bne.n	800b3ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800b3bc:	b2a0      	uxth	r0, r4
 800b3be:	b00b      	add	sp, #44	; 0x2c
 800b3c0:	bd30      	pop	{r4, r5, pc}

0800b3c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800b3c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3c6:	b0df      	sub	sp, #380	; 0x17c
 800b3c8:	4689      	mov	r9, r1
 800b3ca:	f8dd a1a0 	ldr.w	sl, [sp, #416]	; 0x1a0
 800b3ce:	900a      	str	r0, [sp, #40]	; 0x28
 800b3d0:	461c      	mov	r4, r3
 800b3d2:	f1ba 0f00 	cmp.w	sl, #0
 800b3d6:	f000 80b1 	beq.w	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b3da:	681b      	ldr	r3, [r3, #0]
 800b3dc:	2b00      	cmp	r3, #0
 800b3de:	f000 80ad 	beq.w	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b3e2:	7ba3      	ldrb	r3, [r4, #14]
 800b3e4:	2b00      	cmp	r3, #0
 800b3e6:	f000 80a9 	beq.w	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b3ea:	6810      	ldr	r0, [r2, #0]
 800b3ec:	6851      	ldr	r1, [r2, #4]
 800b3ee:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800b3f2:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800b3f6:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800b3fa:	4643      	mov	r3, r8
 800b3fc:	c303      	stmia	r3!, {r0, r1}
 800b3fe:	2500      	movs	r5, #0
 800b400:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800b404:	79a2      	ldrb	r2, [r4, #6]
 800b406:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b40a:	a90f      	add	r1, sp, #60	; 0x3c
 800b40c:	4640      	mov	r0, r8
 800b40e:	950f      	str	r5, [sp, #60]	; 0x3c
 800b410:	f7ff fd42 	bl	800ae98 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b414:	a90f      	add	r1, sp, #60	; 0x3c
 800b416:	4608      	mov	r0, r1
 800b418:	79a2      	ldrb	r2, [r4, #6]
 800b41a:	af19      	add	r7, sp, #100	; 0x64
 800b41c:	f7ff fd3c 	bl	800ae98 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b420:	4638      	mov	r0, r7
 800b422:	f002 f886 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800b426:	6820      	ldr	r0, [r4, #0]
 800b428:	6803      	ldr	r3, [r0, #0]
 800b42a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b42c:	4798      	blx	r3
 800b42e:	4606      	mov	r6, r0
 800b430:	6820      	ldr	r0, [r4, #0]
 800b432:	6803      	ldr	r3, [r0, #0]
 800b434:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b436:	4798      	blx	r3
 800b438:	4633      	mov	r3, r6
 800b43a:	9000      	str	r0, [sp, #0]
 800b43c:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800b43e:	4651      	mov	r1, sl
 800b440:	4638      	mov	r0, r7
 800b442:	f002 f8c3 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b446:	6820      	ldr	r0, [r4, #0]
 800b448:	7923      	ldrb	r3, [r4, #4]
 800b44a:	9308      	str	r3, [sp, #32]
 800b44c:	6803      	ldr	r3, [r0, #0]
 800b44e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b450:	4798      	blx	r3
 800b452:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b456:	181e      	adds	r6, r3, r0
 800b458:	42ae      	cmp	r6, r5
 800b45a:	dd06      	ble.n	800b46a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800b45c:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b460:	4282      	cmp	r2, r0
 800b462:	bfa4      	itt	ge
 800b464:	189d      	addge	r5, r3, r2
 800b466:	fb95 f5f6 	sdivge	r5, r5, r6
 800b46a:	a830      	add	r0, sp, #192	; 0xc0
 800b46c:	f002 f861 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800b470:	7c23      	ldrb	r3, [r4, #16]
 800b472:	b17b      	cbz	r3, 800b494 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800b474:	6820      	ldr	r0, [r4, #0]
 800b476:	6803      	ldr	r3, [r0, #0]
 800b478:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b47a:	4798      	blx	r3
 800b47c:	4683      	mov	fp, r0
 800b47e:	6820      	ldr	r0, [r4, #0]
 800b480:	6803      	ldr	r3, [r0, #0]
 800b482:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b484:	4798      	blx	r3
 800b486:	465b      	mov	r3, fp
 800b488:	9000      	str	r0, [sp, #0]
 800b48a:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800b48c:	4651      	mov	r1, sl
 800b48e:	a830      	add	r0, sp, #192	; 0xc0
 800b490:	f002 f89c 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b494:	7c21      	ldrb	r1, [r4, #16]
 800b496:	9101      	str	r1, [sp, #4]
 800b498:	6821      	ldr	r1, [r4, #0]
 800b49a:	7963      	ldrb	r3, [r4, #5]
 800b49c:	9100      	str	r1, [sp, #0]
 800b49e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b4a2:	a930      	add	r1, sp, #192	; 0xc0
 800b4a4:	a811      	add	r0, sp, #68	; 0x44
 800b4a6:	f7ff fc81 	bl	800adac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b4aa:	7c23      	ldrb	r3, [r4, #16]
 800b4ac:	b9bb      	cbnz	r3, 800b4de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11c>
 800b4ae:	fa1f fa86 	uxth.w	sl, r6
 800b4b2:	2d00      	cmp	r5, #0
 800b4b4:	dd45      	ble.n	800b542 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b4b6:	4638      	mov	r0, r7
 800b4b8:	f002 fc7c 	bl	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b4bc:	2800      	cmp	r0, #0
 800b4be:	d03d      	beq.n	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b4c0:	280a      	cmp	r0, #10
 800b4c2:	d1f6      	bne.n	800b4b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800b4c4:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b4c8:	4453      	add	r3, sl
 800b4ca:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b4ce:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800b4d2:	eba3 030a 	sub.w	r3, r3, sl
 800b4d6:	3d01      	subs	r5, #1
 800b4d8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b4dc:	e7e9      	b.n	800b4b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800b4de:	0073      	lsls	r3, r6, #1
 800b4e0:	9309      	str	r3, [sp, #36]	; 0x24
 800b4e2:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b4e6:	fa1f fa86 	uxth.w	sl, r6
 800b4ea:	2d00      	cmp	r5, #0
 800b4ec:	dd29      	ble.n	800b542 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b4ee:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b4f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b4f4:	428b      	cmp	r3, r1
 800b4f6:	bfd4      	ite	le
 800b4f8:	2100      	movle	r1, #0
 800b4fa:	2101      	movgt	r1, #1
 800b4fc:	a811      	add	r0, sp, #68	; 0x44
 800b4fe:	f7ff fe6c 	bl	800b1da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b502:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800b506:	3b01      	subs	r3, #1
 800b508:	b29b      	uxth	r3, r3
 800b50a:	455b      	cmp	r3, fp
 800b50c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b50e:	d005      	beq.n	800b51c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15a>
 800b510:	7961      	ldrb	r1, [r4, #5]
 800b512:	4638      	mov	r0, r7
 800b514:	f7f7 f8e8 	bl	80026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b518:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b51a:	e7f4      	b.n	800b506 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800b51c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b520:	4453      	add	r3, sl
 800b522:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b526:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800b52a:	eba3 030a 	sub.w	r3, r3, sl
 800b52e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b532:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b536:	3d01      	subs	r5, #1
 800b538:	2b00      	cmp	r3, #0
 800b53a:	d1d6      	bne.n	800b4ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800b53c:	b05f      	add	sp, #380	; 0x17c
 800b53e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b542:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800b546:	ad47      	add	r5, sp, #284	; 0x11c
 800b548:	f04f 0b00 	mov.w	fp, #0
 800b54c:	7c23      	ldrb	r3, [r4, #16]
 800b54e:	2b00      	cmp	r3, #0
 800b550:	d067      	beq.n	800b622 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800b552:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b556:	458a      	cmp	sl, r1
 800b558:	bfd4      	ite	le
 800b55a:	2100      	movle	r1, #0
 800b55c:	2101      	movgt	r1, #1
 800b55e:	a811      	add	r0, sp, #68	; 0x44
 800b560:	f7ff fe3b 	bl	800b1da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b564:	9b08      	ldr	r3, [sp, #32]
 800b566:	2b00      	cmp	r3, #0
 800b568:	d056      	beq.n	800b618 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800b56a:	7c23      	ldrb	r3, [r4, #16]
 800b56c:	9309      	str	r3, [sp, #36]	; 0x24
 800b56e:	225c      	movs	r2, #92	; 0x5c
 800b570:	4639      	mov	r1, r7
 800b572:	4628      	mov	r0, r5
 800b574:	f00e ff9e 	bl	801a4b4 <memcpy>
 800b578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b57a:	2b00      	cmp	r3, #0
 800b57c:	d059      	beq.n	800b632 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800b57e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800b582:	7922      	ldrb	r2, [r4, #4]
 800b584:	2a01      	cmp	r2, #1
 800b586:	d13d      	bne.n	800b604 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b588:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800b58c:	1ac0      	subs	r0, r0, r3
 800b58e:	2302      	movs	r3, #2
 800b590:	fb90 f0f3 	sdiv	r0, r0, r3
 800b594:	b200      	sxth	r0, r0
 800b596:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b59a:	4418      	add	r0, r3
 800b59c:	7c23      	ldrb	r3, [r4, #16]
 800b59e:	f8ad 011c 	strh.w	r0, [sp, #284]	; 0x11c
 800b5a2:	2b00      	cmp	r3, #0
 800b5a4:	d03a      	beq.n	800b61c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800b5a6:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800b5aa:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800b5ae:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800b5b2:	9500      	str	r5, [sp, #0]
 800b5b4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b5b8:	e9cd b703 	strd	fp, r7, [sp, #12]
 800b5bc:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b5c0:	464a      	mov	r2, r9
 800b5c2:	2100      	movs	r1, #0
 800b5c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b5c6:	f7ff fc98 	bl	800aefa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b5ca:	2800      	cmp	r0, #0
 800b5cc:	d1b6      	bne.n	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b5ce:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b5d2:	b2b2      	uxth	r2, r6
 800b5d4:	4611      	mov	r1, r2
 800b5d6:	4413      	add	r3, r2
 800b5d8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800b5dc:	1a52      	subs	r2, r2, r1
 800b5de:	7c21      	ldrb	r1, [r4, #16]
 800b5e0:	b21b      	sxth	r3, r3
 800b5e2:	b212      	sxth	r2, r2
 800b5e4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b5e8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800b5ec:	b109      	cbz	r1, 800b5f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800b5ee:	42b2      	cmp	r2, r6
 800b5f0:	dba4      	blt.n	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b5f2:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b5f6:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b5fa:	440a      	add	r2, r1
 800b5fc:	b212      	sxth	r2, r2
 800b5fe:	4293      	cmp	r3, r2
 800b600:	dda4      	ble.n	800b54c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18a>
 800b602:	e79b      	b.n	800b53c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800b604:	2a02      	cmp	r2, #2
 800b606:	d105      	bne.n	800b614 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800b608:	7be2      	ldrb	r2, [r4, #15]
 800b60a:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800b60e:	1a80      	subs	r0, r0, r2
 800b610:	1ac0      	subs	r0, r0, r3
 800b612:	e7bf      	b.n	800b594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 800b614:	2000      	movs	r0, #0
 800b616:	e7be      	b.n	800b596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800b618:	7be0      	ldrb	r0, [r4, #15]
 800b61a:	e7bc      	b.n	800b596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800b61c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b620:	e7c3      	b.n	800b5aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800b622:	9b08      	ldr	r3, [sp, #32]
 800b624:	2b00      	cmp	r3, #0
 800b626:	d0f7      	beq.n	800b618 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800b628:	225c      	movs	r2, #92	; 0x5c
 800b62a:	4639      	mov	r1, r7
 800b62c:	4628      	mov	r0, r5
 800b62e:	f00e ff41 	bl	801a4b4 <memcpy>
 800b632:	2300      	movs	r3, #0
 800b634:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b638:	6821      	ldr	r1, [r4, #0]
 800b63a:	4628      	mov	r0, r5
 800b63c:	f7ff fbf0 	bl	800ae20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b640:	b203      	sxth	r3, r0
 800b642:	e79e      	b.n	800b582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c0>

0800b644 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b644:	b510      	push	{r4, lr}
 800b646:	2b02      	cmp	r3, #2
 800b648:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b64c:	d00b      	beq.n	800b666 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b64e:	2b03      	cmp	r3, #3
 800b650:	d00e      	beq.n	800b670 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b652:	2b01      	cmp	r3, #1
 800b654:	d001      	beq.n	800b65a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b656:	1860      	adds	r0, r4, r1
 800b658:	bd10      	pop	{r4, pc}
 800b65a:	8880      	ldrh	r0, [r0, #4]
 800b65c:	4420      	add	r0, r4
 800b65e:	b200      	sxth	r0, r0
 800b660:	1a80      	subs	r0, r0, r2
 800b662:	3801      	subs	r0, #1
 800b664:	e7f8      	b.n	800b658 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b666:	8880      	ldrh	r0, [r0, #4]
 800b668:	4420      	add	r0, r4
 800b66a:	b200      	sxth	r0, r0
 800b66c:	1a40      	subs	r0, r0, r1
 800b66e:	e7f8      	b.n	800b662 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b670:	18a0      	adds	r0, r4, r2
 800b672:	e7f1      	b.n	800b658 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b674 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b674:	b510      	push	{r4, lr}
 800b676:	2b02      	cmp	r3, #2
 800b678:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b67c:	d006      	beq.n	800b68c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b67e:	2b03      	cmp	r3, #3
 800b680:	d00a      	beq.n	800b698 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b682:	2b01      	cmp	r3, #1
 800b684:	bf14      	ite	ne
 800b686:	18a0      	addne	r0, r4, r2
 800b688:	1860      	addeq	r0, r4, r1
 800b68a:	bd10      	pop	{r4, pc}
 800b68c:	88c0      	ldrh	r0, [r0, #6]
 800b68e:	4420      	add	r0, r4
 800b690:	b200      	sxth	r0, r0
 800b692:	1a80      	subs	r0, r0, r2
 800b694:	3801      	subs	r0, #1
 800b696:	e7f8      	b.n	800b68a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b698:	88c0      	ldrh	r0, [r0, #6]
 800b69a:	4420      	add	r0, r4
 800b69c:	b200      	sxth	r0, r0
 800b69e:	1a40      	subs	r0, r0, r1
 800b6a0:	e7f8      	b.n	800b694 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b6a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b6a4:	4b01      	ldr	r3, [pc, #4]	; (800b6ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b6a6:	2200      	movs	r2, #0
 800b6a8:	601a      	str	r2, [r3, #0]
 800b6aa:	4770      	bx	lr
 800b6ac:	2000a09c 	.word	0x2000a09c

0800b6b0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800b6b0:	4603      	mov	r3, r0
 800b6b2:	b1c8      	cbz	r0, 800b6e8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800b6b4:	0c02      	lsrs	r2, r0, #16
 800b6b6:	0412      	lsls	r2, r2, #16
 800b6b8:	b9a2      	cbnz	r2, 800b6e4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800b6ba:	0403      	lsls	r3, r0, #16
 800b6bc:	2010      	movs	r0, #16
 800b6be:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800b6c2:	bf04      	itt	eq
 800b6c4:	021b      	lsleq	r3, r3, #8
 800b6c6:	3008      	addeq	r0, #8
 800b6c8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800b6cc:	bf04      	itt	eq
 800b6ce:	011b      	lsleq	r3, r3, #4
 800b6d0:	3004      	addeq	r0, #4
 800b6d2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800b6d6:	bf04      	itt	eq
 800b6d8:	009b      	lsleq	r3, r3, #2
 800b6da:	3002      	addeq	r0, #2
 800b6dc:	2b00      	cmp	r3, #0
 800b6de:	db04      	blt.n	800b6ea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800b6e0:	3001      	adds	r0, #1
 800b6e2:	4770      	bx	lr
 800b6e4:	2000      	movs	r0, #0
 800b6e6:	e7ea      	b.n	800b6be <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800b6e8:	2020      	movs	r0, #32
 800b6ea:	4770      	bx	lr

0800b6ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800b6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6f0:	b087      	sub	sp, #28
 800b6f2:	4681      	mov	r9, r0
 800b6f4:	4698      	mov	r8, r3
 800b6f6:	4610      	mov	r0, r2
 800b6f8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800b6fc:	460d      	mov	r5, r1
 800b6fe:	b981      	cbnz	r1, 800b722 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800b700:	b14b      	cbz	r3, 800b716 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800b702:	460b      	mov	r3, r1
 800b704:	e9cd 4700 	strd	r4, r7, [sp]
 800b708:	464a      	mov	r2, r9
 800b70a:	4641      	mov	r1, r8
 800b70c:	f7ff ffee 	bl	800b6ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b710:	b007      	add	sp, #28
 800b712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b716:	f04f 33ff 	mov.w	r3, #4294967295
 800b71a:	603b      	str	r3, [r7, #0]
 800b71c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800b720:	e7f6      	b.n	800b710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800b722:	fa32 fa01 	lsrs.w	sl, r2, r1
 800b726:	d107      	bne.n	800b738 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800b728:	fb09 f602 	mul.w	r6, r9, r2
 800b72c:	fbb6 f0f4 	udiv	r0, r6, r4
 800b730:	fb04 6610 	mls	r6, r4, r0, r6
 800b734:	603e      	str	r6, [r7, #0]
 800b736:	e7eb      	b.n	800b710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800b738:	2601      	movs	r6, #1
 800b73a:	408e      	lsls	r6, r1
 800b73c:	3e01      	subs	r6, #1
 800b73e:	4016      	ands	r6, r2
 800b740:	fa09 fb01 	lsl.w	fp, r9, r1
 800b744:	4630      	mov	r0, r6
 800b746:	fbbb f3f4 	udiv	r3, fp, r4
 800b74a:	9302      	str	r3, [sp, #8]
 800b74c:	fb0a f303 	mul.w	r3, sl, r3
 800b750:	9303      	str	r3, [sp, #12]
 800b752:	f7ff ffad 	bl	800b6b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b756:	464a      	mov	r2, r9
 800b758:	460b      	mov	r3, r1
 800b75a:	e9cd 4700 	strd	r4, r7, [sp]
 800b75e:	4601      	mov	r1, r0
 800b760:	4630      	mov	r0, r6
 800b762:	f7ff ffc3 	bl	800b6ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b766:	9b02      	ldr	r3, [sp, #8]
 800b768:	fb04 bb13 	mls	fp, r4, r3, fp
 800b76c:	4606      	mov	r6, r0
 800b76e:	4658      	mov	r0, fp
 800b770:	eb05 0108 	add.w	r1, r5, r8
 800b774:	f7ff ff9c 	bl	800b6b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b778:	ab05      	add	r3, sp, #20
 800b77a:	e9cd 4300 	strd	r4, r3, [sp]
 800b77e:	465a      	mov	r2, fp
 800b780:	4603      	mov	r3, r0
 800b782:	4650      	mov	r0, sl
 800b784:	f7ff ffb2 	bl	800b6ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b788:	6839      	ldr	r1, [r7, #0]
 800b78a:	9a05      	ldr	r2, [sp, #20]
 800b78c:	9b03      	ldr	r3, [sp, #12]
 800b78e:	4411      	add	r1, r2
 800b790:	fbb1 f2f4 	udiv	r2, r1, r4
 800b794:	18d3      	adds	r3, r2, r3
 800b796:	441e      	add	r6, r3
 800b798:	fb04 1412 	mls	r4, r4, r2, r1
 800b79c:	4430      	add	r0, r6
 800b79e:	603c      	str	r4, [r7, #0]
 800b7a0:	e7b6      	b.n	800b710 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800b7a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800b7a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7a6:	b085      	sub	sp, #20
 800b7a8:	f1b0 0900 	subs.w	r9, r0, #0
 800b7ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b7ae:	461d      	mov	r5, r3
 800b7b0:	bfbf      	itttt	lt
 800b7b2:	6823      	ldrlt	r3, [r4, #0]
 800b7b4:	425b      	neglt	r3, r3
 800b7b6:	f1c9 0900 	rsblt	r9, r9, #0
 800b7ba:	6023      	strlt	r3, [r4, #0]
 800b7bc:	bfb4      	ite	lt
 800b7be:	f04f 36ff 	movlt.w	r6, #4294967295
 800b7c2:	2601      	movge	r6, #1
 800b7c4:	2a00      	cmp	r2, #0
 800b7c6:	4617      	mov	r7, r2
 800b7c8:	da04      	bge.n	800b7d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800b7ca:	6823      	ldr	r3, [r4, #0]
 800b7cc:	425b      	negs	r3, r3
 800b7ce:	4257      	negs	r7, r2
 800b7d0:	4276      	negs	r6, r6
 800b7d2:	6023      	str	r3, [r4, #0]
 800b7d4:	2d00      	cmp	r5, #0
 800b7d6:	4638      	mov	r0, r7
 800b7d8:	bfba      	itte	lt
 800b7da:	426d      	neglt	r5, r5
 800b7dc:	f04f 38ff 	movlt.w	r8, #4294967295
 800b7e0:	f04f 0801 	movge.w	r8, #1
 800b7e4:	f7ff ff64 	bl	800b6b0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b7e8:	ab03      	add	r3, sp, #12
 800b7ea:	e9cd 5300 	strd	r5, r3, [sp]
 800b7ee:	463a      	mov	r2, r7
 800b7f0:	4603      	mov	r3, r0
 800b7f2:	4648      	mov	r0, r9
 800b7f4:	f7ff ff7a 	bl	800b6ec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b7f8:	6823      	ldr	r3, [r4, #0]
 800b7fa:	9a03      	ldr	r2, [sp, #12]
 800b7fc:	4546      	cmp	r6, r8
 800b7fe:	441a      	add	r2, r3
 800b800:	fb92 f3f5 	sdiv	r3, r2, r5
 800b804:	4418      	add	r0, r3
 800b806:	bf18      	it	ne
 800b808:	4240      	negne	r0, r0
 800b80a:	fb05 2313 	mls	r3, r5, r3, r2
 800b80e:	1c72      	adds	r2, r6, #1
 800b810:	6023      	str	r3, [r4, #0]
 800b812:	d105      	bne.n	800b820 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800b814:	2b00      	cmp	r3, #0
 800b816:	f1c3 0200 	rsb	r2, r3, #0
 800b81a:	db0b      	blt.n	800b834 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800b81c:	6022      	str	r2, [r4, #0]
 800b81e:	e006      	b.n	800b82e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b820:	2e01      	cmp	r6, #1
 800b822:	d104      	bne.n	800b82e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b824:	2b00      	cmp	r3, #0
 800b826:	da02      	bge.n	800b82e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b828:	442b      	add	r3, r5
 800b82a:	3801      	subs	r0, #1
 800b82c:	6023      	str	r3, [r4, #0]
 800b82e:	b005      	add	sp, #20
 800b830:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b834:	3801      	subs	r0, #1
 800b836:	1b52      	subs	r2, r2, r5
 800b838:	e7f0      	b.n	800b81c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800b83c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b83c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b840:	4c1c      	ldr	r4, [pc, #112]	; (800b8b4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800b842:	6807      	ldr	r7, [r0, #0]
 800b844:	69a3      	ldr	r3, [r4, #24]
 800b846:	4605      	mov	r5, r0
 800b848:	b92b      	cbnz	r3, 800b856 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800b84a:	6840      	ldr	r0, [r0, #4]
 800b84c:	e9c5 7000 	strd	r7, r0, [r5]
 800b850:	b004      	add	sp, #16
 800b852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b856:	68a2      	ldr	r2, [r4, #8]
 800b858:	6820      	ldr	r0, [r4, #0]
 800b85a:	ae04      	add	r6, sp, #16
 800b85c:	f04f 0802 	mov.w	r8, #2
 800b860:	fb93 f1f8 	sdiv	r1, r3, r8
 800b864:	440a      	add	r2, r1
 800b866:	f846 2d04 	str.w	r2, [r6, #-4]!
 800b86a:	69e1      	ldr	r1, [r4, #28]
 800b86c:	9600      	str	r6, [sp, #0]
 800b86e:	463a      	mov	r2, r7
 800b870:	f7ff ff97 	bl	800b7a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b874:	69a3      	ldr	r3, [r4, #24]
 800b876:	686a      	ldr	r2, [r5, #4]
 800b878:	6a21      	ldr	r1, [r4, #32]
 800b87a:	9600      	str	r6, [sp, #0]
 800b87c:	4607      	mov	r7, r0
 800b87e:	6860      	ldr	r0, [r4, #4]
 800b880:	f7ff ff8f 	bl	800b7a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b884:	6962      	ldr	r2, [r4, #20]
 800b886:	69a3      	ldr	r3, [r4, #24]
 800b888:	fb93 f8f8 	sdiv	r8, r3, r8
 800b88c:	4442      	add	r2, r8
 800b88e:	9203      	str	r2, [sp, #12]
 800b890:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b892:	682a      	ldr	r2, [r5, #0]
 800b894:	9600      	str	r6, [sp, #0]
 800b896:	4407      	add	r7, r0
 800b898:	68e0      	ldr	r0, [r4, #12]
 800b89a:	f7ff ff82 	bl	800b7a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b89e:	9600      	str	r6, [sp, #0]
 800b8a0:	4680      	mov	r8, r0
 800b8a2:	69a3      	ldr	r3, [r4, #24]
 800b8a4:	686a      	ldr	r2, [r5, #4]
 800b8a6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b8a8:	6920      	ldr	r0, [r4, #16]
 800b8aa:	f7ff ff7a 	bl	800b7a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b8ae:	4440      	add	r0, r8
 800b8b0:	e7cc      	b.n	800b84c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800b8b2:	bf00      	nop
 800b8b4:	2000a0a0 	.word	0x2000a0a0

0800b8b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800b8b8:	b510      	push	{r4, lr}
 800b8ba:	4b07      	ldr	r3, [pc, #28]	; (800b8d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800b8bc:	781b      	ldrb	r3, [r3, #0]
 800b8be:	2b01      	cmp	r3, #1
 800b8c0:	d108      	bne.n	800b8d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800b8c2:	4b06      	ldr	r3, [pc, #24]	; (800b8dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800b8c4:	880c      	ldrh	r4, [r1, #0]
 800b8c6:	881b      	ldrh	r3, [r3, #0]
 800b8c8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b8cc:	3b01      	subs	r3, #1
 800b8ce:	1b1b      	subs	r3, r3, r4
 800b8d0:	8003      	strh	r3, [r0, #0]
 800b8d2:	800a      	strh	r2, [r1, #0]
 800b8d4:	bd10      	pop	{r4, pc}
 800b8d6:	bf00      	nop
 800b8d8:	2000a08c 	.word	0x2000a08c
 800b8dc:	2000a090 	.word	0x2000a090

0800b8e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800b8e0:	b510      	push	{r4, lr}
 800b8e2:	4b0a      	ldr	r3, [pc, #40]	; (800b90c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800b8e4:	781b      	ldrb	r3, [r3, #0]
 800b8e6:	2b01      	cmp	r3, #1
 800b8e8:	d10e      	bne.n	800b908 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800b8ea:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b8ee:	8843      	ldrh	r3, [r0, #2]
 800b8f0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b8f4:	8044      	strh	r4, [r0, #2]
 800b8f6:	18ca      	adds	r2, r1, r3
 800b8f8:	4b05      	ldr	r3, [pc, #20]	; (800b910 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800b8fa:	881b      	ldrh	r3, [r3, #0]
 800b8fc:	1a9b      	subs	r3, r3, r2
 800b8fe:	8003      	strh	r3, [r0, #0]
 800b900:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b904:	80c3      	strh	r3, [r0, #6]
 800b906:	8081      	strh	r1, [r0, #4]
 800b908:	bd10      	pop	{r4, pc}
 800b90a:	bf00      	nop
 800b90c:	2000a08c 	.word	0x2000a08c
 800b910:	2000a088 	.word	0x2000a088

0800b914 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800b914:	b510      	push	{r4, lr}
 800b916:	4b07      	ldr	r3, [pc, #28]	; (800b934 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800b918:	781b      	ldrb	r3, [r3, #0]
 800b91a:	2b01      	cmp	r3, #1
 800b91c:	d108      	bne.n	800b930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800b91e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b922:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b926:	8003      	strh	r3, [r0, #0]
 800b928:	8893      	ldrh	r3, [r2, #4]
 800b92a:	3b01      	subs	r3, #1
 800b92c:	1b1b      	subs	r3, r3, r4
 800b92e:	800b      	strh	r3, [r1, #0]
 800b930:	bd10      	pop	{r4, pc}
 800b932:	bf00      	nop
 800b934:	2000a08c 	.word	0x2000a08c

0800b938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800b938:	b513      	push	{r0, r1, r4, lr}
 800b93a:	4b08      	ldr	r3, [pc, #32]	; (800b95c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800b93c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b940:	4b07      	ldr	r3, [pc, #28]	; (800b960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800b942:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b946:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b94a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b94e:	2400      	movs	r4, #0
 800b950:	466a      	mov	r2, sp
 800b952:	9400      	str	r4, [sp, #0]
 800b954:	f7ff ffde 	bl	800b914 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b958:	b002      	add	sp, #8
 800b95a:	bd10      	pop	{r4, pc}
 800b95c:	2000a088 	.word	0x2000a088
 800b960:	2000a08a 	.word	0x2000a08a

0800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800b964:	b510      	push	{r4, lr}
 800b966:	4b0a      	ldr	r3, [pc, #40]	; (800b990 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800b968:	781b      	ldrb	r3, [r3, #0]
 800b96a:	2b01      	cmp	r3, #1
 800b96c:	460a      	mov	r2, r1
 800b96e:	d10d      	bne.n	800b98c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800b970:	8881      	ldrh	r1, [r0, #4]
 800b972:	8803      	ldrh	r3, [r0, #0]
 800b974:	440b      	add	r3, r1
 800b976:	4601      	mov	r1, r0
 800b978:	3b01      	subs	r3, #1
 800b97a:	f821 3b02 	strh.w	r3, [r1], #2
 800b97e:	f7ff ffc9 	bl	800b914 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b982:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b986:	88c2      	ldrh	r2, [r0, #6]
 800b988:	8082      	strh	r2, [r0, #4]
 800b98a:	80c3      	strh	r3, [r0, #6]
 800b98c:	bd10      	pop	{r4, pc}
 800b98e:	bf00      	nop
 800b990:	2000a08c 	.word	0x2000a08c

0800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800b994:	b507      	push	{r0, r1, r2, lr}
 800b996:	4b09      	ldr	r3, [pc, #36]	; (800b9bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800b998:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b99c:	4b08      	ldr	r3, [pc, #32]	; (800b9c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800b99e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b9a2:	2100      	movs	r1, #0
 800b9a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b9a8:	9100      	str	r1, [sp, #0]
 800b9aa:	4669      	mov	r1, sp
 800b9ac:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b9b0:	f7ff ffd8 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b9b4:	b003      	add	sp, #12
 800b9b6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b9ba:	bf00      	nop
 800b9bc:	2000a088 	.word	0x2000a088
 800b9c0:	2000a08a 	.word	0x2000a08a

0800b9c4 <_ZN8touchgfx11Application13requestRedrawEv>:
 800b9c4:	4b06      	ldr	r3, [pc, #24]	; (800b9e0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800b9c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b9ca:	4b06      	ldr	r3, [pc, #24]	; (800b9e4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800b9cc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800b9d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b9d4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800b9d8:	2100      	movs	r1, #0
 800b9da:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800b9de:	4770      	bx	lr
 800b9e0:	2000a088 	.word	0x2000a088
 800b9e4:	2000a08a 	.word	0x2000a08a

0800b9e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800b9e8:	4b03      	ldr	r3, [pc, #12]	; (800b9f8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800b9ea:	6818      	ldr	r0, [r3, #0]
 800b9ec:	b110      	cbz	r0, 800b9f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800b9ee:	6803      	ldr	r3, [r0, #0]
 800b9f0:	699b      	ldr	r3, [r3, #24]
 800b9f2:	4718      	bx	r3
 800b9f4:	4770      	bx	lr
 800b9f6:	bf00      	nop
 800b9f8:	2000a0d0 	.word	0x2000a0d0

0800b9fc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800b9fc:	4770      	bx	lr
	...

0800ba00 <_ZN8touchgfx11Application4drawEv>:
 800ba00:	b507      	push	{r0, r1, r2, lr}
 800ba02:	4b09      	ldr	r3, [pc, #36]	; (800ba28 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ba04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba08:	4b08      	ldr	r3, [pc, #32]	; (800ba2c <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ba0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ba0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ba12:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ba16:	6803      	ldr	r3, [r0, #0]
 800ba18:	2100      	movs	r1, #0
 800ba1a:	9100      	str	r1, [sp, #0]
 800ba1c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ba1e:	4669      	mov	r1, sp
 800ba20:	4798      	blx	r3
 800ba22:	b003      	add	sp, #12
 800ba24:	f85d fb04 	ldr.w	pc, [sp], #4
 800ba28:	2000a088 	.word	0x2000a088
 800ba2c:	2000a08a 	.word	0x2000a08a

0800ba30 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ba30:	4b03      	ldr	r3, [pc, #12]	; (800ba40 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ba32:	6818      	ldr	r0, [r3, #0]
 800ba34:	b110      	cbz	r0, 800ba3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ba36:	6803      	ldr	r3, [r0, #0]
 800ba38:	69db      	ldr	r3, [r3, #28]
 800ba3a:	4718      	bx	r3
 800ba3c:	4770      	bx	lr
 800ba3e:	bf00      	nop
 800ba40:	2000a0d0 	.word	0x2000a0d0

0800ba44 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ba44:	4b03      	ldr	r3, [pc, #12]	; (800ba54 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ba46:	6818      	ldr	r0, [r3, #0]
 800ba48:	b110      	cbz	r0, 800ba50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ba4a:	6803      	ldr	r3, [r0, #0]
 800ba4c:	6a1b      	ldr	r3, [r3, #32]
 800ba4e:	4718      	bx	r3
 800ba50:	4770      	bx	lr
 800ba52:	bf00      	nop
 800ba54:	2000a0d0 	.word	0x2000a0d0

0800ba58 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ba58:	4b03      	ldr	r3, [pc, #12]	; (800ba68 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ba5a:	6818      	ldr	r0, [r3, #0]
 800ba5c:	b110      	cbz	r0, 800ba64 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ba5e:	6803      	ldr	r3, [r0, #0]
 800ba60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ba62:	4718      	bx	r3
 800ba64:	4770      	bx	lr
 800ba66:	bf00      	nop
 800ba68:	2000a0d0 	.word	0x2000a0d0

0800ba6c <_ZN8touchgfx11Application15handleTickEventEv>:
 800ba6c:	b570      	push	{r4, r5, r6, lr}
 800ba6e:	4d34      	ldr	r5, [pc, #208]	; (800bb40 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800ba70:	4604      	mov	r4, r0
 800ba72:	6828      	ldr	r0, [r5, #0]
 800ba74:	b140      	cbz	r0, 800ba88 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ba76:	7a03      	ldrb	r3, [r0, #8]
 800ba78:	b933      	cbnz	r3, 800ba88 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ba7a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800ba7e:	6803      	ldr	r3, [r0, #0]
 800ba80:	689b      	ldr	r3, [r3, #8]
 800ba82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba86:	4718      	bx	r3
 800ba88:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800ba8c:	b97b      	cbnz	r3, 800baae <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba8e:	b170      	cbz	r0, 800baae <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba90:	7a03      	ldrb	r3, [r0, #8]
 800ba92:	b163      	cbz	r3, 800baae <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba94:	4b2b      	ldr	r3, [pc, #172]	; (800bb44 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ba96:	6818      	ldr	r0, [r3, #0]
 800ba98:	b110      	cbz	r0, 800baa0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ba9a:	6803      	ldr	r3, [r0, #0]
 800ba9c:	691b      	ldr	r3, [r3, #16]
 800ba9e:	4798      	blx	r3
 800baa0:	6828      	ldr	r0, [r5, #0]
 800baa2:	6803      	ldr	r3, [r0, #0]
 800baa4:	68db      	ldr	r3, [r3, #12]
 800baa6:	4798      	blx	r3
 800baa8:	2301      	movs	r3, #1
 800baaa:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800baae:	2500      	movs	r5, #0
 800bab0:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800bab4:	42a8      	cmp	r0, r5
 800bab6:	dd0c      	ble.n	800bad2 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800bab8:	1963      	adds	r3, r4, r5
 800baba:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800babe:	b132      	cbz	r2, 800bace <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800bac0:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800bac4:	4413      	add	r3, r2
 800bac6:	6858      	ldr	r0, [r3, #4]
 800bac8:	6803      	ldr	r3, [r0, #0]
 800baca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bacc:	4798      	blx	r3
 800bace:	3501      	adds	r5, #1
 800bad0:	e7ee      	b.n	800bab0 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800bad2:	2300      	movs	r3, #0
 800bad4:	461a      	mov	r2, r3
 800bad6:	4298      	cmp	r0, r3
 800bad8:	d114      	bne.n	800bb04 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800bada:	1d25      	adds	r5, r4, #4
 800badc:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800bae0:	1e48      	subs	r0, r1, #1
 800bae2:	b280      	uxth	r0, r0
 800bae4:	4291      	cmp	r1, r2
 800bae6:	dd24      	ble.n	800bb32 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800bae8:	4288      	cmp	r0, r1
 800baea:	d2fb      	bcs.n	800bae4 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800baec:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800baf0:	3304      	adds	r3, #4
 800baf2:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800baf6:	428b      	cmp	r3, r1
 800baf8:	d018      	beq.n	800bb2c <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800bafa:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800bafe:	f843 6c04 	str.w	r6, [r3, #-4]
 800bb02:	e7f8      	b.n	800baf6 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800bb04:	18e1      	adds	r1, r4, r3
 800bb06:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800bb0a:	b16d      	cbz	r5, 800bb28 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800bb0c:	429a      	cmp	r2, r3
 800bb0e:	d00a      	beq.n	800bb26 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800bb10:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800bb14:	4431      	add	r1, r6
 800bb16:	684e      	ldr	r6, [r1, #4]
 800bb18:	b291      	uxth	r1, r2
 800bb1a:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800bb1e:	604e      	str	r6, [r1, #4]
 800bb20:	18a1      	adds	r1, r4, r2
 800bb22:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800bb26:	3201      	adds	r2, #1
 800bb28:	3301      	adds	r3, #1
 800bb2a:	e7d4      	b.n	800bad6 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800bb2c:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800bb30:	e7d4      	b.n	800badc <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800bb32:	4b04      	ldr	r3, [pc, #16]	; (800bb44 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800bb34:	6818      	ldr	r0, [r3, #0]
 800bb36:	b110      	cbz	r0, 800bb3e <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800bb38:	6803      	ldr	r3, [r0, #0]
 800bb3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb3c:	e7a1      	b.n	800ba82 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800bb3e:	bd70      	pop	{r4, r5, r6, pc}
 800bb40:	2000a0d4 	.word	0x2000a0d4
 800bb44:	2000a0d0 	.word	0x2000a0d0

0800bb48 <_ZN8touchgfx11ApplicationD1Ev>:
 800bb48:	4770      	bx	lr

0800bb4a <_ZN8touchgfx11ApplicationD0Ev>:
 800bb4a:	b510      	push	{r4, lr}
 800bb4c:	f44f 719c 	mov.w	r1, #312	; 0x138
 800bb50:	4604      	mov	r4, r0
 800bb52:	f00e fc02 	bl	801a35a <_ZdlPvj>
 800bb56:	4620      	mov	r0, r4
 800bb58:	bd10      	pop	{r4, pc}
	...

0800bb5c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800bb5c:	b570      	push	{r4, r5, r6, lr}
 800bb5e:	4606      	mov	r6, r0
 800bb60:	460c      	mov	r4, r1
 800bb62:	b929      	cbnz	r1, 800bb70 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800bb64:	4b0c      	ldr	r3, [pc, #48]	; (800bb98 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800bb66:	4a0d      	ldr	r2, [pc, #52]	; (800bb9c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800bb68:	480d      	ldr	r0, [pc, #52]	; (800bba0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800bb6a:	2167      	movs	r1, #103	; 0x67
 800bb6c:	f00e fc24 	bl	801a3b8 <__assert_func>
 800bb70:	4d0c      	ldr	r5, [pc, #48]	; (800bba4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800bb72:	2300      	movs	r3, #0
 800bb74:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bb78:	6828      	ldr	r0, [r5, #0]
 800bb7a:	b110      	cbz	r0, 800bb82 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800bb7c:	6803      	ldr	r3, [r0, #0]
 800bb7e:	695b      	ldr	r3, [r3, #20]
 800bb80:	4798      	blx	r3
 800bb82:	602c      	str	r4, [r5, #0]
 800bb84:	6823      	ldr	r3, [r4, #0]
 800bb86:	4620      	mov	r0, r4
 800bb88:	68db      	ldr	r3, [r3, #12]
 800bb8a:	4798      	blx	r3
 800bb8c:	6833      	ldr	r3, [r6, #0]
 800bb8e:	4630      	mov	r0, r6
 800bb90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb96:	4718      	bx	r3
 800bb98:	0801d124 	.word	0x0801d124
 800bb9c:	0801d1f4 	.word	0x0801d1f4
 800bba0:	0801d12e 	.word	0x0801d12e
 800bba4:	2000a0d0 	.word	0x2000a0d0

0800bba8 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800bba8:	b510      	push	{r4, lr}
 800bbaa:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bbae:	888a      	ldrh	r2, [r1, #4]
 800bbb0:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bbb4:	4422      	add	r2, r4
 800bbb6:	b212      	sxth	r2, r2
 800bbb8:	4293      	cmp	r3, r2
 800bbba:	da15      	bge.n	800bbe8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bbbc:	8882      	ldrh	r2, [r0, #4]
 800bbbe:	4413      	add	r3, r2
 800bbc0:	b21b      	sxth	r3, r3
 800bbc2:	429c      	cmp	r4, r3
 800bbc4:	da10      	bge.n	800bbe8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bbc6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800bbca:	88c9      	ldrh	r1, [r1, #6]
 800bbcc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bbd0:	4419      	add	r1, r3
 800bbd2:	b209      	sxth	r1, r1
 800bbd4:	428a      	cmp	r2, r1
 800bbd6:	da07      	bge.n	800bbe8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bbd8:	88c0      	ldrh	r0, [r0, #6]
 800bbda:	4410      	add	r0, r2
 800bbdc:	b200      	sxth	r0, r0
 800bbde:	4283      	cmp	r3, r0
 800bbe0:	bfac      	ite	ge
 800bbe2:	2000      	movge	r0, #0
 800bbe4:	2001      	movlt	r0, #1
 800bbe6:	bd10      	pop	{r4, pc}
 800bbe8:	2000      	movs	r0, #0
 800bbea:	e7fc      	b.n	800bbe6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800bbec <_ZNK8touchgfx4Rect8includesERKS0_>:
 800bbec:	b570      	push	{r4, r5, r6, lr}
 800bbee:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bbf2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bbf6:	42ac      	cmp	r4, r5
 800bbf8:	db18      	blt.n	800bc2c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bbfa:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800bbfe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bc02:	429a      	cmp	r2, r3
 800bc04:	db12      	blt.n	800bc2c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bc06:	8886      	ldrh	r6, [r0, #4]
 800bc08:	4435      	add	r5, r6
 800bc0a:	888e      	ldrh	r6, [r1, #4]
 800bc0c:	4434      	add	r4, r6
 800bc0e:	b22d      	sxth	r5, r5
 800bc10:	b224      	sxth	r4, r4
 800bc12:	42a5      	cmp	r5, r4
 800bc14:	db0a      	blt.n	800bc2c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bc16:	88c0      	ldrh	r0, [r0, #6]
 800bc18:	4418      	add	r0, r3
 800bc1a:	88cb      	ldrh	r3, [r1, #6]
 800bc1c:	441a      	add	r2, r3
 800bc1e:	b200      	sxth	r0, r0
 800bc20:	b212      	sxth	r2, r2
 800bc22:	4290      	cmp	r0, r2
 800bc24:	bfb4      	ite	lt
 800bc26:	2000      	movlt	r0, #0
 800bc28:	2001      	movge	r0, #1
 800bc2a:	bd70      	pop	{r4, r5, r6, pc}
 800bc2c:	2000      	movs	r0, #0
 800bc2e:	e7fc      	b.n	800bc2a <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800bc30 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800bc30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc32:	4604      	mov	r4, r0
 800bc34:	4608      	mov	r0, r1
 800bc36:	460d      	mov	r5, r1
 800bc38:	f7fd f90d 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bc3c:	b978      	cbnz	r0, 800bc5e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800bc3e:	4620      	mov	r0, r4
 800bc40:	f7fd f909 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bc44:	f9b5 6000 	ldrsh.w	r6, [r5]
 800bc48:	b150      	cbz	r0, 800bc60 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800bc4a:	8026      	strh	r6, [r4, #0]
 800bc4c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800bc50:	8063      	strh	r3, [r4, #2]
 800bc52:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800bc56:	80a3      	strh	r3, [r4, #4]
 800bc58:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bc5c:	80e3      	strh	r3, [r4, #6]
 800bc5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc60:	f9b4 1000 	ldrsh.w	r1, [r4]
 800bc64:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bc68:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800bc6c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800bc70:	88ed      	ldrh	r5, [r5, #6]
 800bc72:	42b1      	cmp	r1, r6
 800bc74:	460f      	mov	r7, r1
 800bc76:	bfa8      	it	ge
 800bc78:	4637      	movge	r7, r6
 800bc7a:	4293      	cmp	r3, r2
 800bc7c:	4618      	mov	r0, r3
 800bc7e:	4466      	add	r6, ip
 800bc80:	bfa8      	it	ge
 800bc82:	4610      	movge	r0, r2
 800bc84:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800bc88:	8027      	strh	r7, [r4, #0]
 800bc8a:	442a      	add	r2, r5
 800bc8c:	88e5      	ldrh	r5, [r4, #6]
 800bc8e:	8060      	strh	r0, [r4, #2]
 800bc90:	4461      	add	r1, ip
 800bc92:	442b      	add	r3, r5
 800bc94:	b236      	sxth	r6, r6
 800bc96:	b209      	sxth	r1, r1
 800bc98:	b212      	sxth	r2, r2
 800bc9a:	b21b      	sxth	r3, r3
 800bc9c:	428e      	cmp	r6, r1
 800bc9e:	bfac      	ite	ge
 800bca0:	ebc7 0106 	rsbge	r1, r7, r6
 800bca4:	ebc7 0101 	rsblt	r1, r7, r1
 800bca8:	429a      	cmp	r2, r3
 800bcaa:	bfac      	ite	ge
 800bcac:	ebc0 0202 	rsbge	r2, r0, r2
 800bcb0:	ebc0 0203 	rsblt	r2, r0, r3
 800bcb4:	80a1      	strh	r1, [r4, #4]
 800bcb6:	80e2      	strh	r2, [r4, #6]
 800bcb8:	e7d1      	b.n	800bc5e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800bcbc <_ZN8touchgfx11Application11getInstanceEv>:
 800bcbc:	4b01      	ldr	r3, [pc, #4]	; (800bcc4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800bcbe:	6818      	ldr	r0, [r3, #0]
 800bcc0:	4770      	bx	lr
 800bcc2:	bf00      	nop
 800bcc4:	2000a0e0 	.word	0x2000a0e0

0800bcc8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800bcc8:	2300      	movs	r3, #0
 800bcca:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bcce:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800bcd2:	30a8      	adds	r0, #168	; 0xa8
 800bcd4:	f802 3b01 	strb.w	r3, [r2], #1
 800bcd8:	4282      	cmp	r2, r0
 800bcda:	d1fb      	bne.n	800bcd4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800bcdc:	4770      	bx	lr

0800bcde <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800bcde:	4603      	mov	r3, r0
 800bce0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800bce4:	2200      	movs	r2, #0
 800bce6:	801a      	strh	r2, [r3, #0]
 800bce8:	805a      	strh	r2, [r3, #2]
 800bcea:	809a      	strh	r2, [r3, #4]
 800bcec:	80da      	strh	r2, [r3, #6]
 800bcee:	3308      	adds	r3, #8
 800bcf0:	428b      	cmp	r3, r1
 800bcf2:	d1f8      	bne.n	800bce6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800bcf4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800bcf8:	4770      	bx	lr
	...

0800bcfc <_ZN8touchgfx11ApplicationC1Ev>:
 800bcfc:	b570      	push	{r4, r5, r6, lr}
 800bcfe:	4b1a      	ldr	r3, [pc, #104]	; (800bd68 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800bd00:	6003      	str	r3, [r0, #0]
 800bd02:	2500      	movs	r5, #0
 800bd04:	4604      	mov	r4, r0
 800bd06:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800bd0a:	30a8      	adds	r0, #168	; 0xa8
 800bd0c:	f7ff ffe7 	bl	800bcde <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bd10:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800bd14:	f7ff ffe3 	bl	800bcde <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bd18:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800bd1c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800bd20:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800bd24:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800bd28:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800bd2c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800bd30:	490e      	ldr	r1, [pc, #56]	; (800bd6c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800bd32:	480f      	ldr	r0, [pc, #60]	; (800bd70 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800bd34:	4e0f      	ldr	r6, [pc, #60]	; (800bd74 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800bd36:	f00e fa03 	bl	801a140 <CRC_Lock>
 800bd3a:	4b0f      	ldr	r3, [pc, #60]	; (800bd78 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800bd3c:	b158      	cbz	r0, 800bd56 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800bd3e:	801d      	strh	r5, [r3, #0]
 800bd40:	4a0e      	ldr	r2, [pc, #56]	; (800bd7c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800bd42:	2300      	movs	r3, #0
 800bd44:	6013      	str	r3, [r2, #0]
 800bd46:	4a0e      	ldr	r2, [pc, #56]	; (800bd80 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800bd48:	6033      	str	r3, [r6, #0]
 800bd4a:	4620      	mov	r0, r4
 800bd4c:	6013      	str	r3, [r2, #0]
 800bd4e:	f7ff ffbb 	bl	800bcc8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800bd52:	4620      	mov	r0, r4
 800bd54:	bd70      	pop	{r4, r5, r6, pc}
 800bd56:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800bd5a:	2002      	movs	r0, #2
 800bd5c:	801a      	strh	r2, [r3, #0]
 800bd5e:	6030      	str	r0, [r6, #0]
 800bd60:	f001 fa9c 	bl	800d29c <_ZN8touchgfx6Screen4drawEv>
 800bd64:	e7ec      	b.n	800bd40 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800bd66:	bf00      	nop
 800bd68:	0801d1b8 	.word	0x0801d1b8
 800bd6c:	b5e8b5cd 	.word	0xb5e8b5cd
 800bd70:	f407a5c2 	.word	0xf407a5c2
 800bd74:	2000a0d0 	.word	0x2000a0d0
 800bd78:	20000060 	.word	0x20000060
 800bd7c:	2000a0e0 	.word	0x2000a0e0
 800bd80:	2000a0d4 	.word	0x2000a0d4

0800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800bd84:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800bd88:	428b      	cmp	r3, r1
 800bd8a:	b510      	push	{r4, lr}
 800bd8c:	d90e      	bls.n	800bdac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800bd8e:	3b01      	subs	r3, #1
 800bd90:	b29b      	uxth	r3, r3
 800bd92:	428b      	cmp	r3, r1
 800bd94:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800bd98:	d908      	bls.n	800bdac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800bd9a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800bd9e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800bda2:	681a      	ldr	r2, [r3, #0]
 800bda4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800bda8:	685a      	ldr	r2, [r3, #4]
 800bdaa:	6062      	str	r2, [r4, #4]
 800bdac:	bd10      	pop	{r4, pc}
	...

0800bdb0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800bdb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bdb2:	466b      	mov	r3, sp
 800bdb4:	e883 0006 	stmia.w	r3, {r1, r2}
 800bdb8:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800bdbc:	2a07      	cmp	r2, #7
 800bdbe:	4604      	mov	r4, r0
 800bdc0:	d906      	bls.n	800bdd0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800bdc2:	4b09      	ldr	r3, [pc, #36]	; (800bde8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800bdc4:	4a09      	ldr	r2, [pc, #36]	; (800bdec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800bdc6:	480a      	ldr	r0, [pc, #40]	; (800bdf0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800bdc8:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800bdcc:	f00e faf4 	bl	801a3b8 <__assert_func>
 800bdd0:	1c51      	adds	r1, r2, #1
 800bdd2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800bdd6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800bdda:	cb03      	ldmia	r3!, {r0, r1}
 800bddc:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800bde0:	6069      	str	r1, [r5, #4]
 800bde2:	b003      	add	sp, #12
 800bde4:	bd30      	pop	{r4, r5, pc}
 800bde6:	bf00      	nop
 800bde8:	0801d158 	.word	0x0801d158
 800bdec:	0801d238 	.word	0x0801d238
 800bdf0:	0801d187 	.word	0x0801d187

0800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800bdf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdf8:	b08d      	sub	sp, #52	; 0x34
 800bdfa:	ac08      	add	r4, sp, #32
 800bdfc:	4683      	mov	fp, r0
 800bdfe:	4620      	mov	r0, r4
 800be00:	e884 0006 	stmia.w	r4, {r1, r2}
 800be04:	f7fd f827 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be08:	2800      	cmp	r0, #0
 800be0a:	d16a      	bne.n	800bee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800be0c:	9402      	str	r4, [sp, #8]
 800be0e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800be12:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800be16:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800be1a:	2400      	movs	r4, #0
 800be1c:	9301      	str	r3, [sp, #4]
 800be1e:	36a0      	adds	r6, #160	; 0xa0
 800be20:	42a5      	cmp	r5, r4
 800be22:	d00d      	beq.n	800be40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800be24:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800be28:	9802      	ldr	r0, [sp, #8]
 800be2a:	f7ff fedf 	bl	800bbec <_ZNK8touchgfx4Rect8includesERKS0_>
 800be2e:	b128      	cbz	r0, 800be3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800be30:	1e69      	subs	r1, r5, #1
 800be32:	1b09      	subs	r1, r1, r4
 800be34:	b289      	uxth	r1, r1
 800be36:	9801      	ldr	r0, [sp, #4]
 800be38:	f7ff ffa4 	bl	800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800be3c:	3401      	adds	r4, #1
 800be3e:	e7ef      	b.n	800be20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800be40:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800be44:	9703      	str	r7, [sp, #12]
 800be46:	1e7b      	subs	r3, r7, #1
 800be48:	9300      	str	r3, [sp, #0]
 800be4a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800be4e:	2400      	movs	r4, #0
 800be50:	4655      	mov	r5, sl
 800be52:	9704      	str	r7, [sp, #16]
 800be54:	4626      	mov	r6, r4
 800be56:	9b04      	ldr	r3, [sp, #16]
 800be58:	2b00      	cmp	r3, #0
 800be5a:	d078      	beq.n	800bf4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800be5c:	9902      	ldr	r1, [sp, #8]
 800be5e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800be62:	f7ff fea1 	bl	800bba8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800be66:	b360      	cbz	r0, 800bec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800be68:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800be6c:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800be70:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800be74:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800be78:	45e6      	cmp	lr, ip
 800be7a:	db35      	blt.n	800bee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800be7c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800be80:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800be84:	4472      	add	r2, lr
 800be86:	4463      	add	r3, ip
 800be88:	b212      	sxth	r2, r2
 800be8a:	b21b      	sxth	r3, r3
 800be8c:	429a      	cmp	r2, r3
 800be8e:	dc2b      	bgt.n	800bee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800be90:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800be94:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800be98:	fa1f f288 	uxth.w	r2, r8
 800be9c:	4413      	add	r3, r2
 800be9e:	b29b      	uxth	r3, r3
 800bea0:	45c1      	cmp	r9, r8
 800bea2:	fa0f fe83 	sxth.w	lr, r3
 800bea6:	fa1f fc89 	uxth.w	ip, r9
 800beaa:	db0f      	blt.n	800becc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800beac:	eba3 030c 	sub.w	r3, r3, ip
 800beb0:	1ac9      	subs	r1, r1, r3
 800beb2:	b209      	sxth	r1, r1
 800beb4:	2900      	cmp	r1, #0
 800beb6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800beba:	dd12      	ble.n	800bee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800bebc:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800bec0:	4604      	mov	r4, r0
 800bec2:	9b04      	ldr	r3, [sp, #16]
 800bec4:	3b01      	subs	r3, #1
 800bec6:	9304      	str	r3, [sp, #16]
 800bec8:	3d08      	subs	r5, #8
 800beca:	e7c4      	b.n	800be56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800becc:	4461      	add	r1, ip
 800bece:	b209      	sxth	r1, r1
 800bed0:	4571      	cmp	r1, lr
 800bed2:	dc3a      	bgt.n	800bf4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bed4:	eba2 020c 	sub.w	r2, r2, ip
 800bed8:	b212      	sxth	r2, r2
 800beda:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800bede:	2a00      	cmp	r2, #0
 800bee0:	dcee      	bgt.n	800bec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800bee2:	b00d      	add	sp, #52	; 0x34
 800bee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bee8:	45c1      	cmp	r9, r8
 800beea:	db2e      	blt.n	800bf4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800beec:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800bef0:	4499      	add	r9, r3
 800bef2:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800bef6:	4498      	add	r8, r3
 800bef8:	fa0f f989 	sxth.w	r9, r9
 800befc:	fa0f f888 	sxth.w	r8, r8
 800bf00:	45c1      	cmp	r9, r8
 800bf02:	dc22      	bgt.n	800bf4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bf04:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800bf08:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800bf0c:	fa1f f28c 	uxth.w	r2, ip
 800bf10:	4413      	add	r3, r2
 800bf12:	b29b      	uxth	r3, r3
 800bf14:	45e6      	cmp	lr, ip
 800bf16:	fa1f f88e 	uxth.w	r8, lr
 800bf1a:	fa0f f983 	sxth.w	r9, r3
 800bf1e:	db0a      	blt.n	800bf36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800bf20:	eba3 0308 	sub.w	r3, r3, r8
 800bf24:	1ac9      	subs	r1, r1, r3
 800bf26:	b209      	sxth	r1, r1
 800bf28:	2900      	cmp	r1, #0
 800bf2a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800bf2e:	ddd8      	ble.n	800bee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800bf30:	f8ad 9020 	strh.w	r9, [sp, #32]
 800bf34:	e7c4      	b.n	800bec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800bf36:	4441      	add	r1, r8
 800bf38:	b209      	sxth	r1, r1
 800bf3a:	4549      	cmp	r1, r9
 800bf3c:	dc05      	bgt.n	800bf4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bf3e:	eba2 0208 	sub.w	r2, r2, r8
 800bf42:	b212      	sxth	r2, r2
 800bf44:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800bf48:	e7c9      	b.n	800bede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800bf4a:	4606      	mov	r6, r0
 800bf4c:	e7b9      	b.n	800bec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800bf4e:	2c00      	cmp	r4, #0
 800bf50:	f47f af7d 	bne.w	800be4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800bf54:	2e00      	cmp	r6, #0
 800bf56:	f000 81dd 	beq.w	800c314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800bf5a:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800bf5e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800bf62:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800bf66:	b2b9      	uxth	r1, r7
 800bf68:	9104      	str	r1, [sp, #16]
 800bf6a:	9804      	ldr	r0, [sp, #16]
 800bf6c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800bf70:	4401      	add	r1, r0
 800bf72:	b2b3      	uxth	r3, r6
 800bf74:	b289      	uxth	r1, r1
 800bf76:	441a      	add	r2, r3
 800bf78:	9105      	str	r1, [sp, #20]
 800bf7a:	b292      	uxth	r2, r2
 800bf7c:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800bf80:	fa0f f882 	sxth.w	r8, r2
 800bf84:	4655      	mov	r5, sl
 800bf86:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800bf8a:	9b03      	ldr	r3, [sp, #12]
 800bf8c:	2b00      	cmp	r3, #0
 800bf8e:	d054      	beq.n	800c03a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800bf90:	9902      	ldr	r1, [sp, #8]
 800bf92:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800bf96:	f7ff fe07 	bl	800bba8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bf9a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bf9e:	b1d8      	cbz	r0, 800bfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bfa0:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800bfa4:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800bfa8:	4576      	cmp	r6, lr
 800bfaa:	dc26      	bgt.n	800bffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800bfac:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800bfb0:	44f4      	add	ip, lr
 800bfb2:	fa0f fc8c 	sxth.w	ip, ip
 800bfb6:	45e0      	cmp	r8, ip
 800bfb8:	db1f      	blt.n	800bffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800bfba:	428f      	cmp	r7, r1
 800bfbc:	fa1f fc81 	uxth.w	ip, r1
 800bfc0:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800bfc4:	dc0f      	bgt.n	800bfe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800bfc6:	9805      	ldr	r0, [sp, #20]
 800bfc8:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800bfcc:	eba0 0c0c 	sub.w	ip, r0, ip
 800bfd0:	eba1 010c 	sub.w	r1, r1, ip
 800bfd4:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800bfd8:	4620      	mov	r0, r4
 800bfda:	9903      	ldr	r1, [sp, #12]
 800bfdc:	3901      	subs	r1, #1
 800bfde:	9103      	str	r1, [sp, #12]
 800bfe0:	3d08      	subs	r5, #8
 800bfe2:	4604      	mov	r4, r0
 800bfe4:	e7cf      	b.n	800bf86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800bfe6:	4461      	add	r1, ip
 800bfe8:	b209      	sxth	r1, r1
 800bfea:	4549      	cmp	r1, r9
 800bfec:	dcf5      	bgt.n	800bfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bfee:	9904      	ldr	r1, [sp, #16]
 800bff0:	eba1 0c0c 	sub.w	ip, r1, ip
 800bff4:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800bff8:	e7ee      	b.n	800bfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bffa:	428f      	cmp	r7, r1
 800bffc:	dced      	bgt.n	800bfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bffe:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800c002:	4461      	add	r1, ip
 800c004:	b209      	sxth	r1, r1
 800c006:	4589      	cmp	r9, r1
 800c008:	dbe7      	blt.n	800bfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c00a:	4576      	cmp	r6, lr
 800c00c:	fa1f fc8e 	uxth.w	ip, lr
 800c010:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800c014:	dc08      	bgt.n	800c028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800c016:	eba2 0c0c 	sub.w	ip, r2, ip
 800c01a:	eba1 010c 	sub.w	r1, r1, ip
 800c01e:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800c022:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800c026:	e7d7      	b.n	800bfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c028:	4461      	add	r1, ip
 800c02a:	b209      	sxth	r1, r1
 800c02c:	4588      	cmp	r8, r1
 800c02e:	dbd4      	blt.n	800bfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800c030:	eba3 0c0c 	sub.w	ip, r3, ip
 800c034:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800c038:	e7ce      	b.n	800bfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800c03a:	2c00      	cmp	r4, #0
 800c03c:	f000 816a 	beq.w	800c314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c040:	9b00      	ldr	r3, [sp, #0]
 800c042:	3301      	adds	r3, #1
 800c044:	f000 8166 	beq.w	800c314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800c048:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800c04c:	4621      	mov	r1, r4
 800c04e:	9802      	ldr	r0, [sp, #8]
 800c050:	f7ff fdcc 	bl	800bbec <_ZNK8touchgfx4Rect8includesERKS0_>
 800c054:	b120      	cbz	r0, 800c060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800c056:	f8bd 1000 	ldrh.w	r1, [sp]
 800c05a:	9801      	ldr	r0, [sp, #4]
 800c05c:	f7ff fe92 	bl	800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c060:	9902      	ldr	r1, [sp, #8]
 800c062:	4620      	mov	r0, r4
 800c064:	f7ff fda0 	bl	800bba8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c068:	2800      	cmp	r0, #0
 800c06a:	f000 809b 	beq.w	800c1a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800c06e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800c072:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800c076:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800c07a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800c07e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800c082:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800c086:	fa1f f288 	uxth.w	r2, r8
 800c08a:	19d5      	adds	r5, r2, r7
 800c08c:	fa1f f985 	uxth.w	r9, r5
 800c090:	fa0f f589 	sxth.w	r5, r9
 800c094:	b2a1      	uxth	r1, r4
 800c096:	440b      	add	r3, r1
 800c098:	9503      	str	r5, [sp, #12]
 800c09a:	45a0      	cmp	r8, r4
 800c09c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c0a0:	9507      	str	r5, [sp, #28]
 800c0a2:	b29b      	uxth	r3, r3
 800c0a4:	f340 809d 	ble.w	800c1e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800c0a8:	1a52      	subs	r2, r2, r1
 800c0aa:	b292      	uxth	r2, r2
 800c0ac:	4584      	cmp	ip, r0
 800c0ae:	fa0f fe83 	sxth.w	lr, r3
 800c0b2:	b215      	sxth	r5, r2
 800c0b4:	dd2f      	ble.n	800c116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800c0b6:	9e00      	ldr	r6, [sp, #0]
 800c0b8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c0bc:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800c0c0:	9e03      	ldr	r6, [sp, #12]
 800c0c2:	eba6 060e 	sub.w	r6, r6, lr
 800c0c6:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800c0ca:	fa1f fc8c 	uxth.w	ip, ip
 800c0ce:	b280      	uxth	r0, r0
 800c0d0:	ebac 0300 	sub.w	r3, ip, r0
 800c0d4:	448c      	add	ip, r1
 800c0d6:	4470      	add	r0, lr
 800c0d8:	b29b      	uxth	r3, r3
 800c0da:	fa0f fc8c 	sxth.w	ip, ip
 800c0de:	b200      	sxth	r0, r0
 800c0e0:	b21c      	sxth	r4, r3
 800c0e2:	ebac 0000 	sub.w	r0, ip, r0
 800c0e6:	4366      	muls	r6, r4
 800c0e8:	4368      	muls	r0, r5
 800c0ea:	4286      	cmp	r6, r0
 800c0ec:	db09      	blt.n	800c102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800c0ee:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800c0f2:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800c0f6:	4417      	add	r7, r2
 800c0f8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c0fc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800c100:	e685      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c102:	440b      	add	r3, r1
 800c104:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c108:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800c10c:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800c110:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800c114:	e67b      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c116:	9e03      	ldr	r6, [sp, #12]
 800c118:	45b6      	cmp	lr, r6
 800c11a:	da28      	bge.n	800c16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800c11c:	9b00      	ldr	r3, [sp, #0]
 800c11e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800c122:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800c126:	eb04 030c 	add.w	r3, r4, ip
 800c12a:	fa1f f883 	uxth.w	r8, r3
 800c12e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800c132:	4403      	add	r3, r0
 800c134:	eba3 0308 	sub.w	r3, r3, r8
 800c138:	b29b      	uxth	r3, r3
 800c13a:	fa0f f988 	sxth.w	r9, r8
 800c13e:	eba0 000c 	sub.w	r0, r0, ip
 800c142:	fa0f f883 	sxth.w	r8, r3
 800c146:	eba6 060e 	sub.w	r6, r6, lr
 800c14a:	4368      	muls	r0, r5
 800c14c:	fb08 f606 	mul.w	r6, r8, r6
 800c150:	42b0      	cmp	r0, r6
 800c152:	dc06      	bgt.n	800c162 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800c154:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800c158:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800c15c:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800c160:	e7c9      	b.n	800c0f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800c162:	4423      	add	r3, r4
 800c164:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800c168:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c16c:	e64f      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c16e:	9807      	ldr	r0, [sp, #28]
 800c170:	eba3 0309 	sub.w	r3, r3, r9
 800c174:	b29b      	uxth	r3, r3
 800c176:	2806      	cmp	r0, #6
 800c178:	fa0f fc83 	sxth.w	ip, r3
 800c17c:	d818      	bhi.n	800c1b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800c17e:	4652      	mov	r2, sl
 800c180:	ab0a      	add	r3, sp, #40	; 0x28
 800c182:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800c186:	6851      	ldr	r1, [r2, #4]
 800c188:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800c18c:	c303      	stmia	r3!, {r0, r1}
 800c18e:	9b03      	ldr	r3, [sp, #12]
 800c190:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800c194:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800c198:	ab0a      	add	r3, sp, #40	; 0x28
 800c19a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c19e:	9801      	ldr	r0, [sp, #4]
 800c1a0:	f7ff fe06 	bl	800bdb0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c1a4:	9b00      	ldr	r3, [sp, #0]
 800c1a6:	3b01      	subs	r3, #1
 800c1a8:	9300      	str	r3, [sp, #0]
 800c1aa:	f1aa 0a08 	sub.w	sl, sl, #8
 800c1ae:	e747      	b.n	800c040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800c1b0:	9800      	ldr	r0, [sp, #0]
 800c1b2:	45ac      	cmp	ip, r5
 800c1b4:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800c1b8:	db0c      	blt.n	800c1d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800c1ba:	4417      	add	r7, r2
 800c1bc:	b2bf      	uxth	r7, r7
 800c1be:	4458      	add	r0, fp
 800c1c0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800c1c4:	440f      	add	r7, r1
 800c1c6:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c1ca:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800c1ce:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800c1d2:	e61c      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c1d4:	4458      	add	r0, fp
 800c1d6:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800c1da:	443b      	add	r3, r7
 800c1dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800c1e0:	e615      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c1e2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800c1e6:	fa1f f18c 	uxth.w	r1, ip
 800c1ea:	eb01 0e05 	add.w	lr, r1, r5
 800c1ee:	b282      	uxth	r2, r0
 800c1f0:	fa1f fe8e 	uxth.w	lr, lr
 800c1f4:	9204      	str	r2, [sp, #16]
 800c1f6:	fa0f f28e 	sxth.w	r2, lr
 800c1fa:	9205      	str	r2, [sp, #20]
 800c1fc:	9e04      	ldr	r6, [sp, #16]
 800c1fe:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800c202:	4432      	add	r2, r6
 800c204:	b292      	uxth	r2, r2
 800c206:	4584      	cmp	ip, r0
 800c208:	9206      	str	r2, [sp, #24]
 800c20a:	da26      	bge.n	800c25a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800c20c:	eba3 0309 	sub.w	r3, r3, r9
 800c210:	eba2 020e 	sub.w	r2, r2, lr
 800c214:	b29b      	uxth	r3, r3
 800c216:	b292      	uxth	r2, r2
 800c218:	fa0f fa83 	sxth.w	sl, r3
 800c21c:	b211      	sxth	r1, r2
 800c21e:	eba0 000c 	sub.w	r0, r0, ip
 800c222:	eba4 0408 	sub.w	r4, r4, r8
 800c226:	fb0a f000 	mul.w	r0, sl, r0
 800c22a:	434c      	muls	r4, r1
 800c22c:	42a0      	cmp	r0, r4
 800c22e:	9800      	ldr	r0, [sp, #0]
 800c230:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800c234:	dc06      	bgt.n	800c244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800c236:	4458      	add	r0, fp
 800c238:	9a05      	ldr	r2, [sp, #20]
 800c23a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800c23e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800c242:	e7ca      	b.n	800c1da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800c244:	eb0b 0300 	add.w	r3, fp, r0
 800c248:	9903      	ldr	r1, [sp, #12]
 800c24a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800c24e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800c252:	442a      	add	r2, r5
 800c254:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c258:	e5d9      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c25a:	9e04      	ldr	r6, [sp, #16]
 800c25c:	9a03      	ldr	r2, [sp, #12]
 800c25e:	1b89      	subs	r1, r1, r6
 800c260:	b21e      	sxth	r6, r3
 800c262:	b289      	uxth	r1, r1
 800c264:	4296      	cmp	r6, r2
 800c266:	fa0f fc81 	sxth.w	ip, r1
 800c26a:	dd26      	ble.n	800c2ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800c26c:	eba3 0309 	sub.w	r3, r3, r9
 800c270:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800c274:	9e05      	ldr	r6, [sp, #20]
 800c276:	b29b      	uxth	r3, r3
 800c278:	eba6 0902 	sub.w	r9, r6, r2
 800c27c:	b218      	sxth	r0, r3
 800c27e:	eba4 0408 	sub.w	r4, r4, r8
 800c282:	fb0c f404 	mul.w	r4, ip, r4
 800c286:	fb00 f909 	mul.w	r9, r0, r9
 800c28a:	9a00      	ldr	r2, [sp, #0]
 800c28c:	454c      	cmp	r4, r9
 800c28e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800c292:	db03      	blt.n	800c29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800c294:	445a      	add	r2, fp
 800c296:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800c29a:	e79e      	b.n	800c1da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800c29c:	eb0b 0302 	add.w	r3, fp, r2
 800c2a0:	9a03      	ldr	r2, [sp, #12]
 800c2a2:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800c2a6:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800c2aa:	4429      	add	r1, r5
 800c2ac:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800c2b0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800c2b4:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c2b8:	e5a9      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c2ba:	9b06      	ldr	r3, [sp, #24]
 800c2bc:	9c07      	ldr	r4, [sp, #28]
 800c2be:	eba3 020e 	sub.w	r2, r3, lr
 800c2c2:	b292      	uxth	r2, r2
 800c2c4:	2c06      	cmp	r4, #6
 800c2c6:	b213      	sxth	r3, r2
 800c2c8:	d80d      	bhi.n	800c2e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800c2ca:	4651      	mov	r1, sl
 800c2cc:	aa0a      	add	r2, sp, #40	; 0x28
 800c2ce:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800c2d2:	6849      	ldr	r1, [r1, #4]
 800c2d4:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800c2d8:	9b05      	ldr	r3, [sp, #20]
 800c2da:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800c2de:	c203      	stmia	r2!, {r0, r1}
 800c2e0:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800c2e4:	e758      	b.n	800c198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800c2e6:	9c00      	ldr	r4, [sp, #0]
 800c2e8:	4563      	cmp	r3, ip
 800c2ea:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800c2ee:	db0d      	blt.n	800c30c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800c2f0:	4429      	add	r1, r5
 800c2f2:	9a04      	ldr	r2, [sp, #16]
 800c2f4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c2f8:	b289      	uxth	r1, r1
 800c2fa:	445c      	add	r4, fp
 800c2fc:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c300:	4411      	add	r1, r2
 800c302:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800c306:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800c30a:	e580      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c30c:	445c      	add	r4, fp
 800c30e:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800c312:	e79e      	b.n	800c252 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800c314:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800c318:	2f07      	cmp	r7, #7
 800c31a:	d806      	bhi.n	800c32a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800c31c:	ab08      	add	r3, sp, #32
 800c31e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c322:	9801      	ldr	r0, [sp, #4]
 800c324:	f7ff fd44 	bl	800bdb0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c328:	e5db      	b.n	800bee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800c32a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800c32e:	f107 39ff 	add.w	r9, r7, #4294967295
 800c332:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800c336:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800c33a:	f04f 35ff 	mov.w	r5, #4294967295
 800c33e:	2400      	movs	r4, #0
 800c340:	9304      	str	r3, [sp, #16]
 800c342:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800c346:	9300      	str	r3, [sp, #0]
 800c348:	f109 32ff 	add.w	r2, r9, #4294967295
 800c34c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800c350:	9303      	str	r3, [sp, #12]
 800c352:	4690      	mov	r8, r2
 800c354:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800c358:	f1b8 3fff 	cmp.w	r8, #4294967295
 800c35c:	bf14      	ite	ne
 800c35e:	9904      	ldrne	r1, [sp, #16]
 800c360:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800c364:	6818      	ldr	r0, [r3, #0]
 800c366:	9206      	str	r2, [sp, #24]
 800c368:	bf18      	it	ne
 800c36a:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800c36e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800c372:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800c376:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800c37a:	9305      	str	r3, [sp, #20]
 800c37c:	fb16 f601 	smulbb	r6, r6, r1
 800c380:	6859      	ldr	r1, [r3, #4]
 800c382:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c386:	4671      	mov	r1, lr
 800c388:	a80a      	add	r0, sp, #40	; 0x28
 800c38a:	f7ff fc51 	bl	800bc30 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c38e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800c392:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800c396:	9b03      	ldr	r3, [sp, #12]
 800c398:	9a00      	ldr	r2, [sp, #0]
 800c39a:	fb11 f100 	smulbb	r1, r1, r0
 800c39e:	fb02 6603 	mla	r6, r2, r3, r6
 800c3a2:	1b8e      	subs	r6, r1, r6
 800c3a4:	2008      	movs	r0, #8
 800c3a6:	fb91 f1f0 	sdiv	r1, r1, r0
 800c3aa:	42b1      	cmp	r1, r6
 800c3ac:	dc21      	bgt.n	800c3f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800c3ae:	4556      	cmp	r6, sl
 800c3b0:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800c3b4:	da03      	bge.n	800c3be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800c3b6:	b1e6      	cbz	r6, 800c3f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800c3b8:	46b2      	mov	sl, r6
 800c3ba:	4645      	mov	r5, r8
 800c3bc:	464c      	mov	r4, r9
 800c3be:	f108 38ff 	add.w	r8, r8, #4294967295
 800c3c2:	f118 0f02 	cmn.w	r8, #2
 800c3c6:	d1c7      	bne.n	800c358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800c3c8:	f1b2 3fff 	cmp.w	r2, #4294967295
 800c3cc:	f1a7 0708 	sub.w	r7, r7, #8
 800c3d0:	4691      	mov	r9, r2
 800c3d2:	d1b6      	bne.n	800c342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800c3d4:	9b01      	ldr	r3, [sp, #4]
 800c3d6:	b2a6      	uxth	r6, r4
 800c3d8:	00e4      	lsls	r4, r4, #3
 800c3da:	1918      	adds	r0, r3, r4
 800c3dc:	1c6b      	adds	r3, r5, #1
 800c3de:	d10b      	bne.n	800c3f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800c3e0:	4601      	mov	r1, r0
 800c3e2:	9802      	ldr	r0, [sp, #8]
 800c3e4:	f7ff fc24 	bl	800bc30 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c3e8:	4631      	mov	r1, r6
 800c3ea:	9801      	ldr	r0, [sp, #4]
 800c3ec:	f7ff fcca 	bl	800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c3f0:	e50d      	b.n	800be0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c3f2:	4645      	mov	r5, r8
 800c3f4:	464c      	mov	r4, r9
 800c3f6:	e7ed      	b.n	800c3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800c3f8:	9b01      	ldr	r3, [sp, #4]
 800c3fa:	00ed      	lsls	r5, r5, #3
 800c3fc:	1959      	adds	r1, r3, r5
 800c3fe:	f7ff fc17 	bl	800bc30 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c402:	9b02      	ldr	r3, [sp, #8]
 800c404:	cb03      	ldmia	r3!, {r0, r1}
 800c406:	445d      	add	r5, fp
 800c408:	445c      	add	r4, fp
 800c40a:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800c40e:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800c412:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800c416:	9b02      	ldr	r3, [sp, #8]
 800c418:	6861      	ldr	r1, [r4, #4]
 800c41a:	c303      	stmia	r3!, {r0, r1}
 800c41c:	e7e4      	b.n	800c3e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800c420 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c420:	b530      	push	{r4, r5, lr}
 800c422:	4b1d      	ldr	r3, [pc, #116]	; (800c498 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800c424:	b085      	sub	sp, #20
 800c426:	460c      	mov	r4, r1
 800c428:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c42c:	4b1b      	ldr	r3, [pc, #108]	; (800c49c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800c42e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c432:	2100      	movs	r1, #0
 800c434:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c438:	9100      	str	r1, [sp, #0]
 800c43a:	4605      	mov	r5, r0
 800c43c:	6861      	ldr	r1, [r4, #4]
 800c43e:	6820      	ldr	r0, [r4, #0]
 800c440:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c444:	ab02      	add	r3, sp, #8
 800c446:	c303      	stmia	r3!, {r0, r1}
 800c448:	4669      	mov	r1, sp
 800c44a:	a802      	add	r0, sp, #8
 800c44c:	f7fc fcc0 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800c450:	ab02      	add	r3, sp, #8
 800c452:	cb03      	ldmia	r3!, {r0, r1}
 800c454:	4b12      	ldr	r3, [pc, #72]	; (800c4a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800c456:	6020      	str	r0, [r4, #0]
 800c458:	6818      	ldr	r0, [r3, #0]
 800c45a:	6061      	str	r1, [r4, #4]
 800c45c:	b138      	cbz	r0, 800c46e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c45e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800c462:	b133      	cbz	r3, 800c472 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800c464:	6821      	ldr	r1, [r4, #0]
 800c466:	6862      	ldr	r2, [r4, #4]
 800c468:	4628      	mov	r0, r5
 800c46a:	f7ff fcc3 	bl	800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c46e:	b005      	add	sp, #20
 800c470:	bd30      	pop	{r4, r5, pc}
 800c472:	6803      	ldr	r3, [r0, #0]
 800c474:	4621      	mov	r1, r4
 800c476:	689b      	ldr	r3, [r3, #8]
 800c478:	4798      	blx	r3
 800c47a:	4b0a      	ldr	r3, [pc, #40]	; (800c4a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800c47c:	6818      	ldr	r0, [r3, #0]
 800c47e:	b118      	cbz	r0, 800c488 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800c480:	6803      	ldr	r3, [r0, #0]
 800c482:	4621      	mov	r1, r4
 800c484:	689b      	ldr	r3, [r3, #8]
 800c486:	4798      	blx	r3
 800c488:	4b07      	ldr	r3, [pc, #28]	; (800c4a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800c48a:	6818      	ldr	r0, [r3, #0]
 800c48c:	6803      	ldr	r3, [r0, #0]
 800c48e:	4621      	mov	r1, r4
 800c490:	699b      	ldr	r3, [r3, #24]
 800c492:	4798      	blx	r3
 800c494:	e7eb      	b.n	800c46e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c496:	bf00      	nop
 800c498:	2000a088 	.word	0x2000a088
 800c49c:	2000a08a 	.word	0x2000a08a
 800c4a0:	2000a0d0 	.word	0x2000a0d0
 800c4a4:	2000a0cc 	.word	0x2000a0cc
 800c4a8:	2000a094 	.word	0x2000a094

0800c4ac <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800c4ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4b0:	4604      	mov	r4, r0
 800c4b2:	b09b      	sub	sp, #108	; 0x6c
 800c4b4:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800c4b8:	b129      	cbz	r1, 800c4c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800c4ba:	2300      	movs	r3, #0
 800c4bc:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800c4c0:	b01b      	add	sp, #108	; 0x6c
 800c4c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4c6:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800c4ca:	4630      	mov	r0, r6
 800c4cc:	f7fc fcc3 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4d0:	4605      	mov	r5, r0
 800c4d2:	b940      	cbnz	r0, 800c4e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800c4d4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c4d8:	4620      	mov	r0, r4
 800c4da:	f7ff fc8b 	bl	800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c4de:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c4e2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c4e6:	4ba7      	ldr	r3, [pc, #668]	; (800c784 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800c4e8:	681b      	ldr	r3, [r3, #0]
 800c4ea:	b33b      	cbz	r3, 800c53c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c4ec:	4da6      	ldr	r5, [pc, #664]	; (800c788 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800c4ee:	4628      	mov	r0, r5
 800c4f0:	f7fc fcb1 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4f4:	4606      	mov	r6, r0
 800c4f6:	bb08      	cbnz	r0, 800c53c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c4f8:	4628      	mov	r0, r5
 800c4fa:	f7ff f9f1 	bl	800b8e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c4fe:	6829      	ldr	r1, [r5, #0]
 800c500:	686a      	ldr	r2, [r5, #4]
 800c502:	4620      	mov	r0, r4
 800c504:	f7ff fc76 	bl	800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c508:	802e      	strh	r6, [r5, #0]
 800c50a:	806e      	strh	r6, [r5, #2]
 800c50c:	80ae      	strh	r6, [r5, #4]
 800c50e:	80ee      	strh	r6, [r5, #6]
 800c510:	4f9e      	ldr	r7, [pc, #632]	; (800c78c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800c512:	a809      	add	r0, sp, #36	; 0x24
 800c514:	f7ff fbe3 	bl	800bcde <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c518:	883d      	ldrh	r5, [r7, #0]
 800c51a:	462e      	mov	r6, r5
 800c51c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c520:	42b3      	cmp	r3, r6
 800c522:	d910      	bls.n	800c546 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800c524:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c528:	a809      	add	r0, sp, #36	; 0x24
 800c52a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800c52e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800c532:	3601      	adds	r6, #1
 800c534:	f7ff fc3c 	bl	800bdb0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c538:	b2b6      	uxth	r6, r6
 800c53a:	e7ef      	b.n	800c51c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800c53c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c540:	2b00      	cmp	r3, #0
 800c542:	d1e5      	bne.n	800c510 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800c544:	e7bc      	b.n	800c4c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c546:	462e      	mov	r6, r5
 800c548:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800c54c:	42b3      	cmp	r3, r6
 800c54e:	d90b      	bls.n	800c568 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800c550:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c554:	4620      	mov	r0, r4
 800c556:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800c55a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800c55e:	3601      	adds	r6, #1
 800c560:	f7ff fc48 	bl	800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c564:	b2b6      	uxth	r6, r6
 800c566:	e7ef      	b.n	800c548 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800c568:	4a89      	ldr	r2, [pc, #548]	; (800c790 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800c56a:	6813      	ldr	r3, [r2, #0]
 800c56c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800c570:	2b01      	cmp	r3, #1
 800c572:	4690      	mov	r8, r2
 800c574:	f040 8094 	bne.w	800c6a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800c578:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800c57c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800c580:	33aa      	adds	r3, #170	; 0xaa
 800c582:	f04f 0900 	mov.w	r9, #0
 800c586:	42a8      	cmp	r0, r5
 800c588:	f103 0308 	add.w	r3, r3, #8
 800c58c:	dd0a      	ble.n	800c5a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800c58e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800c592:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800c596:	440a      	add	r2, r1
 800c598:	b212      	sxth	r2, r2
 800c59a:	4591      	cmp	r9, r2
 800c59c:	bfb8      	it	lt
 800c59e:	4691      	movlt	r9, r2
 800c5a0:	3501      	adds	r5, #1
 800c5a2:	e7f0      	b.n	800c586 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800c5a4:	4b7b      	ldr	r3, [pc, #492]	; (800c794 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800c5a6:	4e7c      	ldr	r6, [pc, #496]	; (800c798 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800c5a8:	881d      	ldrh	r5, [r3, #0]
 800c5aa:	2300      	movs	r3, #0
 800c5ac:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c5b0:	2d0f      	cmp	r5, #15
 800c5b2:	bf8c      	ite	hi
 800c5b4:	08ed      	lsrhi	r5, r5, #3
 800c5b6:	2501      	movls	r5, #1
 800c5b8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c5bc:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c5c0:	f8d8 0000 	ldr.w	r0, [r8]
 800c5c4:	440b      	add	r3, r1
 800c5c6:	b21b      	sxth	r3, r3
 800c5c8:	4599      	cmp	r9, r3
 800c5ca:	6802      	ldr	r2, [r0, #0]
 800c5cc:	dd4b      	ble.n	800c666 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800c5ce:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800c5d2:	4798      	blx	r3
 800c5d4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800c5d8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c5dc:	4413      	add	r3, r2
 800c5de:	b21b      	sxth	r3, r3
 800c5e0:	195a      	adds	r2, r3, r5
 800c5e2:	4290      	cmp	r0, r2
 800c5e4:	da07      	bge.n	800c5f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c5e6:	4581      	cmp	r9, r0
 800c5e8:	dd05      	ble.n	800c5f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c5ea:	4298      	cmp	r0, r3
 800c5ec:	da33      	bge.n	800c656 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c5ee:	2b00      	cmp	r3, #0
 800c5f0:	dd31      	ble.n	800c656 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c5f2:	4648      	mov	r0, r9
 800c5f4:	e004      	b.n	800c600 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800c5f6:	4298      	cmp	r0, r3
 800c5f8:	dbfb      	blt.n	800c5f2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800c5fa:	4548      	cmp	r0, r9
 800c5fc:	bfa8      	it	ge
 800c5fe:	4648      	movge	r0, r9
 800c600:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c604:	f8b7 a000 	ldrh.w	sl, [r7]
 800c608:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c60c:	2100      	movs	r1, #0
 800c60e:	1ac0      	subs	r0, r0, r3
 800c610:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c614:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c618:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c61c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c620:	4553      	cmp	r3, sl
 800c622:	d9c9      	bls.n	800c5b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c624:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800c628:	ab07      	add	r3, sp, #28
 800c62a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c62e:	6851      	ldr	r1, [r2, #4]
 800c630:	c303      	stmia	r3!, {r0, r1}
 800c632:	a807      	add	r0, sp, #28
 800c634:	a905      	add	r1, sp, #20
 800c636:	f7fc fbcb 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800c63a:	a807      	add	r0, sp, #28
 800c63c:	f7fc fc0b 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c640:	b920      	cbnz	r0, 800c64c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800c642:	6823      	ldr	r3, [r4, #0]
 800c644:	a907      	add	r1, sp, #28
 800c646:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c648:	4620      	mov	r0, r4
 800c64a:	4798      	blx	r3
 800c64c:	f10a 0a01 	add.w	sl, sl, #1
 800c650:	fa1f fa8a 	uxth.w	sl, sl
 800c654:	e7e2      	b.n	800c61c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800c656:	f8d8 0000 	ldr.w	r0, [r8]
 800c65a:	6803      	ldr	r3, [r0, #0]
 800c65c:	2101      	movs	r1, #1
 800c65e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c662:	4798      	blx	r3
 800c664:	e7a8      	b.n	800c5b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c666:	6a13      	ldr	r3, [r2, #32]
 800c668:	4798      	blx	r3
 800c66a:	4b4c      	ldr	r3, [pc, #304]	; (800c79c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800c66c:	781b      	ldrb	r3, [r3, #0]
 800c66e:	2b00      	cmp	r3, #0
 800c670:	f43f af26 	beq.w	800c4c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c674:	2300      	movs	r3, #0
 800c676:	883d      	ldrh	r5, [r7, #0]
 800c678:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800c67c:	34ea      	adds	r4, #234	; 0xea
 800c67e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800c682:	42ab      	cmp	r3, r5
 800c684:	f67f af1c 	bls.w	800c4c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c688:	ab1a      	add	r3, sp, #104	; 0x68
 800c68a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c68e:	3b44      	subs	r3, #68	; 0x44
 800c690:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c694:	4620      	mov	r0, r4
 800c696:	3501      	adds	r5, #1
 800c698:	f7ff fb8a 	bl	800bdb0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c69c:	b2ad      	uxth	r5, r5
 800c69e:	e7ee      	b.n	800c67e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800c6a0:	2b02      	cmp	r3, #2
 800c6a2:	f040 813e 	bne.w	800c922 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800c6a6:	4b3e      	ldr	r3, [pc, #248]	; (800c7a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800c6a8:	781b      	ldrb	r3, [r3, #0]
 800c6aa:	2b01      	cmp	r3, #1
 800c6ac:	d02c      	beq.n	800c708 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800c6ae:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800c6b2:	883a      	ldrh	r2, [r7, #0]
 800c6b4:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800c6b8:	3201      	adds	r2, #1
 800c6ba:	b292      	uxth	r2, r2
 800c6bc:	2900      	cmp	r1, #0
 800c6be:	d0d4      	beq.n	800c66a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c6c0:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800c6c4:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800c6c8:	441d      	add	r5, r3
 800c6ca:	b22d      	sxth	r5, r5
 800c6cc:	4610      	mov	r0, r2
 800c6ce:	f04f 0a00 	mov.w	sl, #0
 800c6d2:	b283      	uxth	r3, r0
 800c6d4:	4299      	cmp	r1, r3
 800c6d6:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800c6da:	f240 80c5 	bls.w	800c868 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800c6de:	4426      	add	r6, r4
 800c6e0:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800c6e4:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800c6e8:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800c6ec:	4573      	cmp	r3, lr
 800c6ee:	4684      	mov	ip, r0
 800c6f0:	f340 80a7 	ble.w	800c842 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800c6f4:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800c6f8:	4475      	add	r5, lr
 800c6fa:	b22d      	sxth	r5, r5
 800c6fc:	429d      	cmp	r5, r3
 800c6fe:	bfa8      	it	ge
 800c700:	461d      	movge	r5, r3
 800c702:	3001      	adds	r0, #1
 800c704:	46e2      	mov	sl, ip
 800c706:	e7e4      	b.n	800c6d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800c708:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800c70c:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800c710:	f1bb 0f00 	cmp.w	fp, #0
 800c714:	d0a9      	beq.n	800c66a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c716:	883b      	ldrh	r3, [r7, #0]
 800c718:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c71c:	3301      	adds	r3, #1
 800c71e:	b29b      	uxth	r3, r3
 800c720:	2600      	movs	r6, #0
 800c722:	b299      	uxth	r1, r3
 800c724:	458b      	cmp	fp, r1
 800c726:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c72a:	d93b      	bls.n	800c7a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800c72c:	4425      	add	r5, r4
 800c72e:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800c732:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c736:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c73a:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800c73e:	4408      	add	r0, r1
 800c740:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800c744:	4471      	add	r1, lr
 800c746:	b200      	sxth	r0, r0
 800c748:	b209      	sxth	r1, r1
 800c74a:	4288      	cmp	r0, r1
 800c74c:	469c      	mov	ip, r3
 800c74e:	da06      	bge.n	800c75e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800c750:	4586      	cmp	lr, r0
 800c752:	4672      	mov	r2, lr
 800c754:	bfb8      	it	lt
 800c756:	4602      	movlt	r2, r0
 800c758:	3301      	adds	r3, #1
 800c75a:	4666      	mov	r6, ip
 800c75c:	e7e1      	b.n	800c722 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800c75e:	d10b      	bne.n	800c778 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800c760:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800c764:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800c768:	458c      	cmp	ip, r1
 800c76a:	bfb4      	ite	lt
 800c76c:	469c      	movlt	ip, r3
 800c76e:	46b4      	movge	ip, r6
 800c770:	4572      	cmp	r2, lr
 800c772:	bfb8      	it	lt
 800c774:	4672      	movlt	r2, lr
 800c776:	e7ef      	b.n	800c758 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800c778:	428a      	cmp	r2, r1
 800c77a:	bfb8      	it	lt
 800c77c:	460a      	movlt	r2, r1
 800c77e:	46b4      	mov	ip, r6
 800c780:	e7ea      	b.n	800c758 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800c782:	bf00      	nop
 800c784:	2000a0cc 	.word	0x2000a0cc
 800c788:	2000a0d8 	.word	0x2000a0d8
 800c78c:	20000060 	.word	0x20000060
 800c790:	2000a094 	.word	0x2000a094
 800c794:	2000a08a 	.word	0x2000a08a
 800c798:	2000a088 	.word	0x2000a088
 800c79c:	2000a092 	.word	0x2000a092
 800c7a0:	2000a08c 	.word	0x2000a08c
 800c7a4:	1961      	adds	r1, r4, r5
 800c7a6:	ab07      	add	r3, sp, #28
 800c7a8:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800c7ac:	6849      	ldr	r1, [r1, #4]
 800c7ae:	c303      	stmia	r3!, {r0, r1}
 800c7b0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c7b4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c7b8:	2b13      	cmp	r3, #19
 800c7ba:	bfd8      	it	le
 800c7bc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800c7c0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c7c4:	440b      	add	r3, r1
 800c7c6:	1a9b      	subs	r3, r3, r2
 800c7c8:	a807      	add	r0, sp, #28
 800c7ca:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c7ce:	f7ff f8e1 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c7d2:	a807      	add	r0, sp, #28
 800c7d4:	f7fc fb3f 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7d8:	2800      	cmp	r0, #0
 800c7da:	d197      	bne.n	800c70c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800c7dc:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800c7e0:	f8d8 0000 	ldr.w	r0, [r8]
 800c7e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c7e8:	f8d0 e000 	ldr.w	lr, [r0]
 800c7ec:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800c7f0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c7f4:	f1bc 0f14 	cmp.w	ip, #20
 800c7f8:	bfa8      	it	ge
 800c7fa:	f04f 0c14 	movge.w	ip, #20
 800c7fe:	fa1f fc8c 	uxth.w	ip, ip
 800c802:	f8cd c000 	str.w	ip, [sp]
 800c806:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 800c80a:	47d0      	blx	sl
 800c80c:	4682      	mov	sl, r0
 800c80e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c812:	a807      	add	r0, sp, #28
 800c814:	f7ff f864 	bl	800b8e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c818:	6823      	ldr	r3, [r4, #0]
 800c81a:	4425      	add	r5, r4
 800c81c:	4620      	mov	r0, r4
 800c81e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c820:	a907      	add	r1, sp, #28
 800c822:	4798      	blx	r3
 800c824:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c828:	eba0 000a 	sub.w	r0, r0, sl
 800c82c:	b200      	sxth	r0, r0
 800c82e:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c832:	2800      	cmp	r0, #0
 800c834:	f47f af6a 	bne.w	800c70c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800c838:	b2b1      	uxth	r1, r6
 800c83a:	4648      	mov	r0, r9
 800c83c:	f7ff faa2 	bl	800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c840:	e764      	b.n	800c70c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800c842:	d10c      	bne.n	800c85e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800c844:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c848:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c84c:	45b4      	cmp	ip, r6
 800c84e:	bfb4      	ite	lt
 800c850:	4684      	movlt	ip, r0
 800c852:	46d4      	movge	ip, sl
 800c854:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c858:	4433      	add	r3, r6
 800c85a:	b21b      	sxth	r3, r3
 800c85c:	e74e      	b.n	800c6fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800c85e:	4575      	cmp	r5, lr
 800c860:	bfa8      	it	ge
 800c862:	4675      	movge	r5, lr
 800c864:	46d4      	mov	ip, sl
 800c866:	e74c      	b.n	800c702 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800c868:	eb0b 0006 	add.w	r0, fp, r6
 800c86c:	4426      	add	r6, r4
 800c86e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c872:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c876:	f1b9 0f13 	cmp.w	r9, #19
 800c87a:	bfde      	ittt	le
 800c87c:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c880:	444d      	addle	r5, r9
 800c882:	b22d      	sxthle	r5, r5
 800c884:	f7fc fae7 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c888:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c88c:	2800      	cmp	r0, #0
 800c88e:	f47f af15 	bne.w	800c6bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800c892:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c896:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c89a:	eba5 050c 	sub.w	r5, r5, ip
 800c89e:	fa1f f28c 	uxth.w	r2, ip
 800c8a2:	fa1f f989 	uxth.w	r9, r9
 800c8a6:	eb02 0009 	add.w	r0, r2, r9
 800c8aa:	2d14      	cmp	r5, #20
 800c8ac:	bfa8      	it	ge
 800c8ae:	2514      	movge	r5, #20
 800c8b0:	b200      	sxth	r0, r0
 800c8b2:	fa1f fe85 	uxth.w	lr, r5
 800c8b6:	eba0 000c 	sub.w	r0, r0, ip
 800c8ba:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c8be:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c8c2:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c8c6:	4586      	cmp	lr, r0
 800c8c8:	f8d8 0000 	ldr.w	r0, [r8]
 800c8cc:	f8ad c01e 	strh.w	ip, [sp, #30]
 800c8d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c8d4:	bfb8      	it	lt
 800c8d6:	46f1      	movlt	r9, lr
 800c8d8:	6805      	ldr	r5, [r0, #0]
 800c8da:	f8cd 9000 	str.w	r9, [sp]
 800c8de:	b29b      	uxth	r3, r3
 800c8e0:	b289      	uxth	r1, r1
 800c8e2:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 800c8e6:	47a8      	blx	r5
 800c8e8:	6823      	ldr	r3, [r4, #0]
 800c8ea:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c8ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c8f0:	a907      	add	r1, sp, #28
 800c8f2:	4620      	mov	r0, r4
 800c8f4:	4798      	blx	r3
 800c8f6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800c8fa:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c8fe:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c902:	1a5b      	subs	r3, r3, r1
 800c904:	440a      	add	r2, r1
 800c906:	b21b      	sxth	r3, r3
 800c908:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c90c:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c910:	2b00      	cmp	r3, #0
 800c912:	f47f aece 	bne.w	800c6b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800c916:	fa1f f18a 	uxth.w	r1, sl
 800c91a:	4658      	mov	r0, fp
 800c91c:	f7ff fa32 	bl	800bd84 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c920:	e6c7      	b.n	800c6b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800c922:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c926:	42ab      	cmp	r3, r5
 800c928:	f67f ae9f 	bls.w	800c66a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c92c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c930:	ab07      	add	r3, sp, #28
 800c932:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c936:	6851      	ldr	r1, [r2, #4]
 800c938:	c303      	stmia	r3!, {r0, r1}
 800c93a:	a807      	add	r0, sp, #28
 800c93c:	f7fc fa8b 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c940:	b920      	cbnz	r0, 800c94c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800c942:	6823      	ldr	r3, [r4, #0]
 800c944:	a907      	add	r1, sp, #28
 800c946:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c948:	4620      	mov	r0, r4
 800c94a:	4798      	blx	r3
 800c94c:	3501      	adds	r5, #1
 800c94e:	b2ad      	uxth	r5, r5
 800c950:	e7e7      	b.n	800c922 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800c952:	bf00      	nop

0800c954 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c954:	4b03      	ldr	r3, [pc, #12]	; (800c964 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c956:	2200      	movs	r2, #0
 800c958:	801a      	strh	r2, [r3, #0]
 800c95a:	805a      	strh	r2, [r3, #2]
 800c95c:	809a      	strh	r2, [r3, #4]
 800c95e:	80da      	strh	r2, [r3, #6]
 800c960:	4770      	bx	lr
 800c962:	bf00      	nop
 800c964:	2000a0d8 	.word	0x2000a0d8

0800c968 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c96c:	4606      	mov	r6, r0
 800c96e:	b09b      	sub	sp, #108	; 0x6c
 800c970:	a803      	add	r0, sp, #12
 800c972:	4614      	mov	r4, r2
 800c974:	468a      	mov	sl, r1
 800c976:	461d      	mov	r5, r3
 800c978:	f000 fddb 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800c97c:	6833      	ldr	r3, [r6, #0]
 800c97e:	4630      	mov	r0, r6
 800c980:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c982:	4798      	blx	r3
 800c984:	6833      	ldr	r3, [r6, #0]
 800c986:	4607      	mov	r7, r0
 800c988:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c98a:	4630      	mov	r0, r6
 800c98c:	4798      	blx	r3
 800c98e:	462a      	mov	r2, r5
 800c990:	9000      	str	r0, [sp, #0]
 800c992:	4621      	mov	r1, r4
 800c994:	463b      	mov	r3, r7
 800c996:	a803      	add	r0, sp, #12
 800c998:	f000 fe18 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c99c:	2500      	movs	r5, #0
 800c99e:	462c      	mov	r4, r5
 800c9a0:	46a9      	mov	r9, r5
 800c9a2:	46a8      	mov	r8, r5
 800c9a4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c9a8:	2300      	movs	r3, #0
 800c9aa:	9302      	str	r3, [sp, #8]
 800c9ac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c9b0:	429c      	cmp	r4, r3
 800c9b2:	d002      	beq.n	800c9ba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800c9b4:	455c      	cmp	r4, fp
 800c9b6:	bf18      	it	ne
 800c9b8:	4625      	movne	r5, r4
 800c9ba:	ab02      	add	r3, sp, #8
 800c9bc:	4632      	mov	r2, r6
 800c9be:	4651      	mov	r1, sl
 800c9c0:	a803      	add	r0, sp, #12
 800c9c2:	f001 f8ff 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c9c6:	4604      	mov	r4, r0
 800c9c8:	b108      	cbz	r0, 800c9ce <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800c9ca:	280a      	cmp	r0, #10
 800c9cc:	d10a      	bne.n	800c9e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800c9ce:	45c1      	cmp	r9, r8
 800c9d0:	bf38      	it	cc
 800c9d2:	46c1      	movcc	r9, r8
 800c9d4:	f04f 0800 	mov.w	r8, #0
 800c9d8:	2c00      	cmp	r4, #0
 800c9da:	d1e5      	bne.n	800c9a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c9dc:	4648      	mov	r0, r9
 800c9de:	b01b      	add	sp, #108	; 0x6c
 800c9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9e4:	9a02      	ldr	r2, [sp, #8]
 800c9e6:	2a00      	cmp	r2, #0
 800c9e8:	d0de      	beq.n	800c9a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c9ea:	7b57      	ldrb	r7, [r2, #13]
 800c9ec:	6833      	ldr	r3, [r6, #0]
 800c9ee:	8894      	ldrh	r4, [r2, #4]
 800c9f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c9f2:	007f      	lsls	r7, r7, #1
 800c9f4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800c9f8:	7a97      	ldrb	r7, [r2, #10]
 800c9fa:	4629      	mov	r1, r5
 800c9fc:	4307      	orrs	r7, r0
 800c9fe:	4630      	mov	r0, r6
 800ca00:	4798      	blx	r3
 800ca02:	4438      	add	r0, r7
 800ca04:	4480      	add	r8, r0
 800ca06:	fa1f f888 	uxth.w	r8, r8
 800ca0a:	e7e5      	b.n	800c9d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ca0c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ca0c:	b508      	push	{r3, lr}
 800ca0e:	6803      	ldr	r3, [r0, #0]
 800ca10:	68db      	ldr	r3, [r3, #12]
 800ca12:	4798      	blx	r3
 800ca14:	b128      	cbz	r0, 800ca22 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ca16:	7b43      	ldrb	r3, [r0, #13]
 800ca18:	7a80      	ldrb	r0, [r0, #10]
 800ca1a:	005b      	lsls	r3, r3, #1
 800ca1c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ca20:	4318      	orrs	r0, r3
 800ca22:	bd08      	pop	{r3, pc}

0800ca24 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ca24:	b40e      	push	{r1, r2, r3}
 800ca26:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca28:	b09c      	sub	sp, #112	; 0x70
 800ca2a:	ab21      	add	r3, sp, #132	; 0x84
 800ca2c:	4605      	mov	r5, r0
 800ca2e:	f853 4b04 	ldr.w	r4, [r3], #4
 800ca32:	9303      	str	r3, [sp, #12]
 800ca34:	a805      	add	r0, sp, #20
 800ca36:	f000 fd7c 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800ca3a:	682b      	ldr	r3, [r5, #0]
 800ca3c:	4628      	mov	r0, r5
 800ca3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ca40:	4798      	blx	r3
 800ca42:	682b      	ldr	r3, [r5, #0]
 800ca44:	4606      	mov	r6, r0
 800ca46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ca48:	4628      	mov	r0, r5
 800ca4a:	4798      	blx	r3
 800ca4c:	4633      	mov	r3, r6
 800ca4e:	ae1c      	add	r6, sp, #112	; 0x70
 800ca50:	4621      	mov	r1, r4
 800ca52:	9000      	str	r0, [sp, #0]
 800ca54:	9a03      	ldr	r2, [sp, #12]
 800ca56:	2400      	movs	r4, #0
 800ca58:	a805      	add	r0, sp, #20
 800ca5a:	f000 fdb7 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ca5e:	f846 4d60 	str.w	r4, [r6, #-96]!
 800ca62:	462a      	mov	r2, r5
 800ca64:	4633      	mov	r3, r6
 800ca66:	4621      	mov	r1, r4
 800ca68:	a805      	add	r0, sp, #20
 800ca6a:	f001 f8ab 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ca6e:	b1f0      	cbz	r0, 800caae <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800ca70:	280a      	cmp	r0, #10
 800ca72:	d018      	beq.n	800caa6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ca74:	9f04      	ldr	r7, [sp, #16]
 800ca76:	b1b7      	cbz	r7, 800caa6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ca78:	7b78      	ldrb	r0, [r7, #13]
 800ca7a:	7a3b      	ldrb	r3, [r7, #8]
 800ca7c:	88aa      	ldrh	r2, [r5, #4]
 800ca7e:	00c1      	lsls	r1, r0, #3
 800ca80:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ca84:	4319      	orrs	r1, r3
 800ca86:	0643      	lsls	r3, r0, #25
 800ca88:	bf44      	itt	mi
 800ca8a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800ca8e:	b219      	sxthmi	r1, r3
 800ca90:	0100      	lsls	r0, r0, #4
 800ca92:	79fb      	ldrb	r3, [r7, #7]
 800ca94:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ca98:	4303      	orrs	r3, r0
 800ca9a:	4413      	add	r3, r2
 800ca9c:	1a5b      	subs	r3, r3, r1
 800ca9e:	b29b      	uxth	r3, r3
 800caa0:	42a3      	cmp	r3, r4
 800caa2:	bfc8      	it	gt
 800caa4:	b21c      	sxthgt	r4, r3
 800caa6:	4633      	mov	r3, r6
 800caa8:	462a      	mov	r2, r5
 800caaa:	2100      	movs	r1, #0
 800caac:	e7dc      	b.n	800ca68 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800caae:	b2a0      	uxth	r0, r4
 800cab0:	b01c      	add	sp, #112	; 0x70
 800cab2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800cab6:	b003      	add	sp, #12
 800cab8:	4770      	bx	lr

0800caba <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800caba:	b40e      	push	{r1, r2, r3}
 800cabc:	b570      	push	{r4, r5, r6, lr}
 800cabe:	b09b      	sub	sp, #108	; 0x6c
 800cac0:	ab1f      	add	r3, sp, #124	; 0x7c
 800cac2:	4604      	mov	r4, r0
 800cac4:	f853 5b04 	ldr.w	r5, [r3], #4
 800cac8:	9302      	str	r3, [sp, #8]
 800caca:	a803      	add	r0, sp, #12
 800cacc:	f000 fd31 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800cad0:	6823      	ldr	r3, [r4, #0]
 800cad2:	4620      	mov	r0, r4
 800cad4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cad6:	4798      	blx	r3
 800cad8:	6823      	ldr	r3, [r4, #0]
 800cada:	4606      	mov	r6, r0
 800cadc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cade:	4620      	mov	r0, r4
 800cae0:	4798      	blx	r3
 800cae2:	4633      	mov	r3, r6
 800cae4:	9000      	str	r0, [sp, #0]
 800cae6:	9a02      	ldr	r2, [sp, #8]
 800cae8:	4629      	mov	r1, r5
 800caea:	a803      	add	r0, sp, #12
 800caec:	f000 fd6e 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800caf0:	a803      	add	r0, sp, #12
 800caf2:	f001 f95f 	bl	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800caf6:	2401      	movs	r4, #1
 800caf8:	b2a3      	uxth	r3, r4
 800cafa:	b140      	cbz	r0, 800cb0e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800cafc:	280a      	cmp	r0, #10
 800cafe:	bf08      	it	eq
 800cb00:	3301      	addeq	r3, #1
 800cb02:	a803      	add	r0, sp, #12
 800cb04:	bf08      	it	eq
 800cb06:	b21c      	sxtheq	r4, r3
 800cb08:	f001 f954 	bl	800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800cb0c:	e7f4      	b.n	800caf8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800cb0e:	4618      	mov	r0, r3
 800cb10:	b01b      	add	sp, #108	; 0x6c
 800cb12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb16:	b003      	add	sp, #12
 800cb18:	4770      	bx	lr

0800cb1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800cb1a:	b40e      	push	{r1, r2, r3}
 800cb1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb1e:	b09c      	sub	sp, #112	; 0x70
 800cb20:	ab21      	add	r3, sp, #132	; 0x84
 800cb22:	4604      	mov	r4, r0
 800cb24:	f853 5b04 	ldr.w	r5, [r3], #4
 800cb28:	9303      	str	r3, [sp, #12]
 800cb2a:	a805      	add	r0, sp, #20
 800cb2c:	f000 fd01 	bl	800d532 <_ZN8touchgfx12TextProviderC1Ev>
 800cb30:	6823      	ldr	r3, [r4, #0]
 800cb32:	4620      	mov	r0, r4
 800cb34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cb36:	4798      	blx	r3
 800cb38:	6823      	ldr	r3, [r4, #0]
 800cb3a:	4606      	mov	r6, r0
 800cb3c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cb3e:	4620      	mov	r0, r4
 800cb40:	4798      	blx	r3
 800cb42:	4633      	mov	r3, r6
 800cb44:	4629      	mov	r1, r5
 800cb46:	9000      	str	r0, [sp, #0]
 800cb48:	9a03      	ldr	r2, [sp, #12]
 800cb4a:	a805      	add	r0, sp, #20
 800cb4c:	ad1c      	add	r5, sp, #112	; 0x70
 800cb4e:	f000 fd3d 	bl	800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800cb52:	2100      	movs	r1, #0
 800cb54:	f845 1d60 	str.w	r1, [r5, #-96]!
 800cb58:	4622      	mov	r2, r4
 800cb5a:	462b      	mov	r3, r5
 800cb5c:	a805      	add	r0, sp, #20
 800cb5e:	f001 f831 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cb62:	26ff      	movs	r6, #255	; 0xff
 800cb64:	b1d8      	cbz	r0, 800cb9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800cb66:	280a      	cmp	r0, #10
 800cb68:	d012      	beq.n	800cb90 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800cb6a:	9804      	ldr	r0, [sp, #16]
 800cb6c:	b180      	cbz	r0, 800cb90 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800cb6e:	7b47      	ldrb	r7, [r0, #13]
 800cb70:	7922      	ldrb	r2, [r4, #4]
 800cb72:	00fb      	lsls	r3, r7, #3
 800cb74:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800cb78:	7a03      	ldrb	r3, [r0, #8]
 800cb7a:	430b      	orrs	r3, r1
 800cb7c:	0679      	lsls	r1, r7, #25
 800cb7e:	bf44      	itt	mi
 800cb80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cb84:	b21b      	sxthmi	r3, r3
 800cb86:	1ad3      	subs	r3, r2, r3
 800cb88:	b2db      	uxtb	r3, r3
 800cb8a:	429e      	cmp	r6, r3
 800cb8c:	bf28      	it	cs
 800cb8e:	461e      	movcs	r6, r3
 800cb90:	462b      	mov	r3, r5
 800cb92:	4622      	mov	r2, r4
 800cb94:	2100      	movs	r1, #0
 800cb96:	a805      	add	r0, sp, #20
 800cb98:	f001 f814 	bl	800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cb9c:	e7e2      	b.n	800cb64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800cb9e:	4630      	mov	r0, r6
 800cba0:	b01c      	add	sp, #112	; 0x70
 800cba2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800cba6:	b003      	add	sp, #12
 800cba8:	4770      	bx	lr

0800cbaa <_ZNK8touchgfx8Drawable10invalidateEv>:
 800cbaa:	b513      	push	{r0, r1, r4, lr}
 800cbac:	1d01      	adds	r1, r0, #4
 800cbae:	4603      	mov	r3, r0
 800cbb0:	c903      	ldmia	r1, {r0, r1}
 800cbb2:	466a      	mov	r2, sp
 800cbb4:	e882 0003 	stmia.w	r2, {r0, r1}
 800cbb8:	2100      	movs	r1, #0
 800cbba:	9100      	str	r1, [sp, #0]
 800cbbc:	6819      	ldr	r1, [r3, #0]
 800cbbe:	4618      	mov	r0, r3
 800cbc0:	690c      	ldr	r4, [r1, #16]
 800cbc2:	4611      	mov	r1, r2
 800cbc4:	47a0      	blx	r4
 800cbc6:	b002      	add	sp, #8
 800cbc8:	bd10      	pop	{r4, pc}

0800cbca <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800cbca:	b538      	push	{r3, r4, r5, lr}
 800cbcc:	680b      	ldr	r3, [r1, #0]
 800cbce:	460c      	mov	r4, r1
 800cbd0:	68db      	ldr	r3, [r3, #12]
 800cbd2:	4605      	mov	r5, r0
 800cbd4:	4798      	blx	r3
 800cbd6:	6823      	ldr	r3, [r4, #0]
 800cbd8:	4620      	mov	r0, r4
 800cbda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cbdc:	4629      	mov	r1, r5
 800cbde:	4798      	blx	r3
 800cbe0:	4628      	mov	r0, r5
 800cbe2:	bd38      	pop	{r3, r4, r5, pc}

0800cbe4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800cbe4:	b410      	push	{r4}
 800cbe6:	880a      	ldrh	r2, [r1, #0]
 800cbe8:	8884      	ldrh	r4, [r0, #4]
 800cbea:	4422      	add	r2, r4
 800cbec:	800a      	strh	r2, [r1, #0]
 800cbee:	88c4      	ldrh	r4, [r0, #6]
 800cbf0:	884a      	ldrh	r2, [r1, #2]
 800cbf2:	4422      	add	r2, r4
 800cbf4:	804a      	strh	r2, [r1, #2]
 800cbf6:	6940      	ldr	r0, [r0, #20]
 800cbf8:	b120      	cbz	r0, 800cc04 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800cbfa:	6803      	ldr	r3, [r0, #0]
 800cbfc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc02:	4718      	bx	r3
 800cc04:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc08:	4770      	bx	lr

0800cc0a <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800cc0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc0c:	460b      	mov	r3, r1
 800cc0e:	b085      	sub	sp, #20
 800cc10:	4604      	mov	r4, r0
 800cc12:	b901      	cbnz	r1, 800cc16 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800cc14:	b322      	cbz	r2, 800cc60 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800cc16:	1d27      	adds	r7, r4, #4
 800cc18:	e897 0003 	ldmia.w	r7, {r0, r1}
 800cc1c:	466e      	mov	r6, sp
 800cc1e:	e886 0003 	stmia.w	r6, {r0, r1}
 800cc22:	88a1      	ldrh	r1, [r4, #4]
 800cc24:	88e5      	ldrh	r5, [r4, #6]
 800cc26:	4419      	add	r1, r3
 800cc28:	6823      	ldr	r3, [r4, #0]
 800cc2a:	442a      	add	r2, r5
 800cc2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc2e:	b209      	sxth	r1, r1
 800cc30:	4620      	mov	r0, r4
 800cc32:	b215      	sxth	r5, r2
 800cc34:	4798      	blx	r3
 800cc36:	6823      	ldr	r3, [r4, #0]
 800cc38:	4629      	mov	r1, r5
 800cc3a:	4620      	mov	r0, r4
 800cc3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc3e:	4798      	blx	r3
 800cc40:	e897 0003 	ldmia.w	r7, {r0, r1}
 800cc44:	ad02      	add	r5, sp, #8
 800cc46:	e885 0003 	stmia.w	r5, {r0, r1}
 800cc4a:	6960      	ldr	r0, [r4, #20]
 800cc4c:	b150      	cbz	r0, 800cc64 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800cc4e:	6803      	ldr	r3, [r0, #0]
 800cc50:	4631      	mov	r1, r6
 800cc52:	691b      	ldr	r3, [r3, #16]
 800cc54:	4798      	blx	r3
 800cc56:	6960      	ldr	r0, [r4, #20]
 800cc58:	6803      	ldr	r3, [r0, #0]
 800cc5a:	691b      	ldr	r3, [r3, #16]
 800cc5c:	4629      	mov	r1, r5
 800cc5e:	4798      	blx	r3
 800cc60:	b005      	add	sp, #20
 800cc62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc64:	f7ff f82a 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 800cc68:	6803      	ldr	r3, [r0, #0]
 800cc6a:	4631      	mov	r1, r6
 800cc6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cc6e:	4798      	blx	r3
 800cc70:	f7ff f824 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 800cc74:	6803      	ldr	r3, [r0, #0]
 800cc76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cc78:	e7f0      	b.n	800cc5c <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800cc7a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800cc7a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cc7c:	8882      	ldrh	r2, [r0, #4]
 800cc7e:	880b      	ldrh	r3, [r1, #0]
 800cc80:	4413      	add	r3, r2
 800cc82:	800b      	strh	r3, [r1, #0]
 800cc84:	88c2      	ldrh	r2, [r0, #6]
 800cc86:	884b      	ldrh	r3, [r1, #2]
 800cc88:	4413      	add	r3, r2
 800cc8a:	4602      	mov	r2, r0
 800cc8c:	804b      	strh	r3, [r1, #2]
 800cc8e:	4605      	mov	r5, r0
 800cc90:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cc94:	460c      	mov	r4, r1
 800cc96:	6851      	ldr	r1, [r2, #4]
 800cc98:	466b      	mov	r3, sp
 800cc9a:	c303      	stmia	r3!, {r0, r1}
 800cc9c:	4621      	mov	r1, r4
 800cc9e:	4668      	mov	r0, sp
 800cca0:	f7fc f896 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800cca4:	466b      	mov	r3, sp
 800cca6:	cb03      	ldmia	r3!, {r0, r1}
 800cca8:	6020      	str	r0, [r4, #0]
 800ccaa:	6061      	str	r1, [r4, #4]
 800ccac:	6968      	ldr	r0, [r5, #20]
 800ccae:	b128      	cbz	r0, 800ccbc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800ccb0:	6803      	ldr	r3, [r0, #0]
 800ccb2:	691b      	ldr	r3, [r3, #16]
 800ccb4:	4621      	mov	r1, r4
 800ccb6:	4798      	blx	r3
 800ccb8:	b003      	add	sp, #12
 800ccba:	bd30      	pop	{r4, r5, pc}
 800ccbc:	f7fe fffe 	bl	800bcbc <_ZN8touchgfx11Application11getInstanceEv>
 800ccc0:	6803      	ldr	r3, [r0, #0]
 800ccc2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ccc4:	e7f6      	b.n	800ccb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800ccc6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ccc6:	b570      	push	{r4, r5, r6, lr}
 800ccc8:	8882      	ldrh	r2, [r0, #4]
 800ccca:	880b      	ldrh	r3, [r1, #0]
 800cccc:	4413      	add	r3, r2
 800ccce:	800b      	strh	r3, [r1, #0]
 800ccd0:	88c2      	ldrh	r2, [r0, #6]
 800ccd2:	884b      	ldrh	r3, [r1, #2]
 800ccd4:	460c      	mov	r4, r1
 800ccd6:	4413      	add	r3, r2
 800ccd8:	804b      	strh	r3, [r1, #2]
 800ccda:	4605      	mov	r5, r0
 800ccdc:	1d01      	adds	r1, r0, #4
 800ccde:	4620      	mov	r0, r4
 800cce0:	f7fc f876 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800cce4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800cce8:	2b00      	cmp	r3, #0
 800ccea:	dd0b      	ble.n	800cd04 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ccec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ccf0:	2b00      	cmp	r3, #0
 800ccf2:	dd07      	ble.n	800cd04 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ccf4:	6968      	ldr	r0, [r5, #20]
 800ccf6:	b128      	cbz	r0, 800cd04 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ccf8:	6803      	ldr	r3, [r0, #0]
 800ccfa:	4621      	mov	r1, r4
 800ccfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd02:	4718      	bx	r3
 800cd04:	bd70      	pop	{r4, r5, r6, pc}

0800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800cd06:	b510      	push	{r4, lr}
 800cd08:	4604      	mov	r4, r0
 800cd0a:	4608      	mov	r0, r1
 800cd0c:	2300      	movs	r3, #0
 800cd0e:	8023      	strh	r3, [r4, #0]
 800cd10:	8063      	strh	r3, [r4, #2]
 800cd12:	6803      	ldr	r3, [r0, #0]
 800cd14:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800cd18:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800cd1c:	80a1      	strh	r1, [r4, #4]
 800cd1e:	80e2      	strh	r2, [r4, #6]
 800cd20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd22:	4621      	mov	r1, r4
 800cd24:	4798      	blx	r3
 800cd26:	4620      	mov	r0, r4
 800cd28:	bd10      	pop	{r4, pc}
	...

0800cd2c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800cd2c:	b530      	push	{r4, r5, lr}
 800cd2e:	8083      	strh	r3, [r0, #4]
 800cd30:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800cd34:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800cd38:	7183      	strb	r3, [r0, #6]
 800cd3a:	79c3      	ldrb	r3, [r0, #7]
 800cd3c:	6101      	str	r1, [r0, #16]
 800cd3e:	f365 0306 	bfi	r3, r5, #0, #7
 800cd42:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800cd46:	8282      	strh	r2, [r0, #20]
 800cd48:	f365 13c7 	bfi	r3, r5, #7, #1
 800cd4c:	71c3      	strb	r3, [r0, #7]
 800cd4e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800cd52:	7203      	strb	r3, [r0, #8]
 800cd54:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800cd58:	7243      	strb	r3, [r0, #9]
 800cd5a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800cd5e:	8143      	strh	r3, [r0, #10]
 800cd60:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800cd64:	8183      	strh	r3, [r0, #12]
 800cd66:	4b01      	ldr	r3, [pc, #4]	; (800cd6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800cd68:	6003      	str	r3, [r0, #0]
 800cd6a:	bd30      	pop	{r4, r5, pc}
 800cd6c:	0801d2a8 	.word	0x0801d2a8

0800cd70 <_ZNK8touchgfx9ConstFont4findEt>:
 800cd70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd72:	6904      	ldr	r4, [r0, #16]
 800cd74:	b3bc      	cbz	r4, 800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cd76:	88a3      	ldrh	r3, [r4, #4]
 800cd78:	8a82      	ldrh	r2, [r0, #20]
 800cd7a:	1acb      	subs	r3, r1, r3
 800cd7c:	f102 32ff 	add.w	r2, r2, #4294967295
 800cd80:	d431      	bmi.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cd82:	4293      	cmp	r3, r2
 800cd84:	dd0c      	ble.n	800cda0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800cd86:	230e      	movs	r3, #14
 800cd88:	fb03 4302 	mla	r3, r3, r2, r4
 800cd8c:	889b      	ldrh	r3, [r3, #4]
 800cd8e:	1a5b      	subs	r3, r3, r1
 800cd90:	1ad3      	subs	r3, r2, r3
 800cd92:	429a      	cmp	r2, r3
 800cd94:	db27      	blt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cd96:	2b00      	cmp	r3, #0
 800cd98:	bfbc      	itt	lt
 800cd9a:	2302      	movlt	r3, #2
 800cd9c:	fb92 f3f3 	sdivlt	r3, r2, r3
 800cda0:	2500      	movs	r5, #0
 800cda2:	260e      	movs	r6, #14
 800cda4:	4295      	cmp	r5, r2
 800cda6:	dc1e      	bgt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cda8:	fb06 4003 	mla	r0, r6, r3, r4
 800cdac:	8887      	ldrh	r7, [r0, #4]
 800cdae:	42b9      	cmp	r1, r7
 800cdb0:	d01a      	beq.n	800cde8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800cdb2:	d20d      	bcs.n	800cdd0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800cdb4:	1e5a      	subs	r2, r3, #1
 800cdb6:	4295      	cmp	r5, r2
 800cdb8:	dc15      	bgt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cdba:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800cdbe:	1a5b      	subs	r3, r3, r1
 800cdc0:	1ad3      	subs	r3, r2, r3
 800cdc2:	429a      	cmp	r2, r3
 800cdc4:	db0f      	blt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cdc6:	429d      	cmp	r5, r3
 800cdc8:	ddec      	ble.n	800cda4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800cdca:	1953      	adds	r3, r2, r5
 800cdcc:	105b      	asrs	r3, r3, #1
 800cdce:	e7e9      	b.n	800cda4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800cdd0:	1c5d      	adds	r5, r3, #1
 800cdd2:	42aa      	cmp	r2, r5
 800cdd4:	db07      	blt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cdd6:	8a43      	ldrh	r3, [r0, #18]
 800cdd8:	1acb      	subs	r3, r1, r3
 800cdda:	442b      	add	r3, r5
 800cddc:	429d      	cmp	r5, r3
 800cdde:	dc02      	bgt.n	800cde6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800cde0:	429a      	cmp	r2, r3
 800cde2:	dadf      	bge.n	800cda4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800cde4:	e7f1      	b.n	800cdca <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800cde6:	2000      	movs	r0, #0
 800cde8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cdea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800cdea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdec:	4604      	mov	r4, r0
 800cdee:	4617      	mov	r7, r2
 800cdf0:	461e      	mov	r6, r3
 800cdf2:	b911      	cbnz	r1, 800cdfa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800cdf4:	2500      	movs	r5, #0
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdfa:	290a      	cmp	r1, #10
 800cdfc:	d0fa      	beq.n	800cdf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800cdfe:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ce02:	4291      	cmp	r1, r2
 800ce04:	d0f6      	beq.n	800cdf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ce06:	f242 020b 	movw	r2, #8203	; 0x200b
 800ce0a:	4291      	cmp	r1, r2
 800ce0c:	d0f2      	beq.n	800cdf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ce0e:	f7ff ffaf 	bl	800cd70 <_ZNK8touchgfx9ConstFont4findEt>
 800ce12:	4605      	mov	r5, r0
 800ce14:	b950      	cbnz	r0, 800ce2c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800ce16:	6823      	ldr	r3, [r4, #0]
 800ce18:	4620      	mov	r0, r4
 800ce1a:	691b      	ldr	r3, [r3, #16]
 800ce1c:	4798      	blx	r3
 800ce1e:	4601      	mov	r1, r0
 800ce20:	4620      	mov	r0, r4
 800ce22:	f7ff ffa5 	bl	800cd70 <_ZNK8touchgfx9ConstFont4findEt>
 800ce26:	4605      	mov	r5, r0
 800ce28:	2800      	cmp	r0, #0
 800ce2a:	d0e3      	beq.n	800cdf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ce2c:	6823      	ldr	r3, [r4, #0]
 800ce2e:	4629      	mov	r1, r5
 800ce30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ce32:	4620      	mov	r0, r4
 800ce34:	4798      	blx	r3
 800ce36:	6038      	str	r0, [r7, #0]
 800ce38:	6823      	ldr	r3, [r4, #0]
 800ce3a:	4620      	mov	r0, r4
 800ce3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ce3e:	4798      	blx	r3
 800ce40:	7030      	strb	r0, [r6, #0]
 800ce42:	e7d8      	b.n	800cdf6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ce44 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800ce44:	2000      	movs	r0, #0
 800ce46:	4770      	bx	lr

0800ce48 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800ce48:	2001      	movs	r0, #1
 800ce4a:	4770      	bx	lr

0800ce4c <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800ce4c:	2002      	movs	r0, #2
 800ce4e:	4770      	bx	lr

0800ce50 <_ZN8touchgfx6ScreenD1Ev>:
 800ce50:	4770      	bx	lr

0800ce52 <_ZN8touchgfx12GestureEventD1Ev>:
 800ce52:	4770      	bx	lr

0800ce54 <_ZN8touchgfx9DragEventD1Ev>:
 800ce54:	4770      	bx	lr

0800ce56 <_ZN8touchgfx10ClickEventD1Ev>:
 800ce56:	4770      	bx	lr

0800ce58 <_ZN8touchgfx10ClickEventD0Ev>:
 800ce58:	b510      	push	{r4, lr}
 800ce5a:	210c      	movs	r1, #12
 800ce5c:	4604      	mov	r4, r0
 800ce5e:	f00d fa7c 	bl	801a35a <_ZdlPvj>
 800ce62:	4620      	mov	r0, r4
 800ce64:	bd10      	pop	{r4, pc}

0800ce66 <_ZN8touchgfx9DragEventD0Ev>:
 800ce66:	b510      	push	{r4, lr}
 800ce68:	2110      	movs	r1, #16
 800ce6a:	4604      	mov	r4, r0
 800ce6c:	f00d fa75 	bl	801a35a <_ZdlPvj>
 800ce70:	4620      	mov	r0, r4
 800ce72:	bd10      	pop	{r4, pc}

0800ce74 <_ZN8touchgfx12GestureEventD0Ev>:
 800ce74:	b510      	push	{r4, lr}
 800ce76:	210c      	movs	r1, #12
 800ce78:	4604      	mov	r4, r0
 800ce7a:	f00d fa6e 	bl	801a35a <_ZdlPvj>
 800ce7e:	4620      	mov	r0, r4
 800ce80:	bd10      	pop	{r4, pc}

0800ce82 <_ZN8touchgfx6ScreenD0Ev>:
 800ce82:	b510      	push	{r4, lr}
 800ce84:	213c      	movs	r1, #60	; 0x3c
 800ce86:	4604      	mov	r4, r0
 800ce88:	f00d fa67 	bl	801a35a <_ZdlPvj>
 800ce8c:	4620      	mov	r0, r4
 800ce8e:	bd10      	pop	{r4, pc}

0800ce90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ce90:	b530      	push	{r4, r5, lr}
 800ce92:	460d      	mov	r5, r1
 800ce94:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ce96:	b087      	sub	sp, #28
 800ce98:	4604      	mov	r4, r0
 800ce9a:	b301      	cbz	r1, 800cede <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ce9c:	a801      	add	r0, sp, #4
 800ce9e:	f7ff ff32 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cea2:	892a      	ldrh	r2, [r5, #8]
 800cea4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cea8:	7928      	ldrb	r0, [r5, #4]
 800ceaa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ceae:	f88d 0010 	strb.w	r0, [sp, #16]
 800ceb2:	1ad2      	subs	r2, r2, r3
 800ceb4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ceb6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ceb8:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cebc:	441a      	add	r2, r3
 800cebe:	896b      	ldrh	r3, [r5, #10]
 800cec0:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800cec4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cec8:	1b5b      	subs	r3, r3, r5
 800ceca:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800cecc:	442b      	add	r3, r5
 800cece:	4d05      	ldr	r5, [pc, #20]	; (800cee4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ced0:	9503      	str	r5, [sp, #12]
 800ced2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ced6:	6803      	ldr	r3, [r0, #0]
 800ced8:	a903      	add	r1, sp, #12
 800ceda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cedc:	4798      	blx	r3
 800cede:	b007      	add	sp, #28
 800cee0:	bd30      	pop	{r4, r5, pc}
 800cee2:	bf00      	nop
 800cee4:	0801d328 	.word	0x0801d328

0800cee8 <_ZNK8touchgfx4Rect9intersectEss>:
 800cee8:	b510      	push	{r4, lr}
 800ceea:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ceee:	428b      	cmp	r3, r1
 800cef0:	dc10      	bgt.n	800cf14 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cef2:	8884      	ldrh	r4, [r0, #4]
 800cef4:	4423      	add	r3, r4
 800cef6:	b21b      	sxth	r3, r3
 800cef8:	4299      	cmp	r1, r3
 800cefa:	da0b      	bge.n	800cf14 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cefc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cf00:	4293      	cmp	r3, r2
 800cf02:	dc07      	bgt.n	800cf14 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cf04:	88c0      	ldrh	r0, [r0, #6]
 800cf06:	4418      	add	r0, r3
 800cf08:	b200      	sxth	r0, r0
 800cf0a:	4282      	cmp	r2, r0
 800cf0c:	bfac      	ite	ge
 800cf0e:	2000      	movge	r0, #0
 800cf10:	2001      	movlt	r0, #1
 800cf12:	bd10      	pop	{r4, pc}
 800cf14:	2000      	movs	r0, #0
 800cf16:	e7fc      	b.n	800cf12 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800cf18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800cf18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf1a:	460c      	mov	r4, r1
 800cf1c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800cf1e:	b089      	sub	sp, #36	; 0x24
 800cf20:	4605      	mov	r5, r0
 800cf22:	2900      	cmp	r1, #0
 800cf24:	d054      	beq.n	800cfd0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800cf26:	4668      	mov	r0, sp
 800cf28:	f7ff feed 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cf2c:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800cf2e:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800cf30:	8922      	ldrh	r2, [r4, #8]
 800cf32:	88e1      	ldrh	r1, [r4, #6]
 800cf34:	443a      	add	r2, r7
 800cf36:	4431      	add	r1, r6
 800cf38:	b212      	sxth	r2, r2
 800cf3a:	b209      	sxth	r1, r1
 800cf3c:	4668      	mov	r0, sp
 800cf3e:	f7ff ffd3 	bl	800cee8 <_ZNK8touchgfx4Rect9intersectEss>
 800cf42:	b1d0      	cbz	r0, 800cf7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cf44:	89a2      	ldrh	r2, [r4, #12]
 800cf46:	8961      	ldrh	r1, [r4, #10]
 800cf48:	443a      	add	r2, r7
 800cf4a:	4431      	add	r1, r6
 800cf4c:	b212      	sxth	r2, r2
 800cf4e:	b209      	sxth	r1, r1
 800cf50:	4668      	mov	r0, sp
 800cf52:	f7ff ffc9 	bl	800cee8 <_ZNK8touchgfx4Rect9intersectEss>
 800cf56:	4603      	mov	r3, r0
 800cf58:	b978      	cbnz	r0, 800cf7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cf5a:	4a1e      	ldr	r2, [pc, #120]	; (800cfd4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800cf5c:	9204      	str	r2, [sp, #16]
 800cf5e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cf60:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cf64:	2202      	movs	r2, #2
 800cf66:	f88d 2014 	strb.w	r2, [sp, #20]
 800cf6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cf6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cf72:	6803      	ldr	r3, [r0, #0]
 800cf74:	a904      	add	r1, sp, #16
 800cf76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cf78:	4798      	blx	r3
 800cf7a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800cf7c:	a802      	add	r0, sp, #8
 800cf7e:	f7ff fec2 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cf82:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800cf86:	88e0      	ldrh	r0, [r4, #6]
 800cf88:	8961      	ldrh	r1, [r4, #10]
 800cf8a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800cf8e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800cf92:	8923      	ldrh	r3, [r4, #8]
 800cf94:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800cf96:	7927      	ldrb	r7, [r4, #4]
 800cf98:	f88d 7014 	strb.w	r7, [sp, #20]
 800cf9c:	1a80      	subs	r0, r0, r2
 800cf9e:	1a89      	subs	r1, r1, r2
 800cfa0:	89a2      	ldrh	r2, [r4, #12]
 800cfa2:	4c0d      	ldr	r4, [pc, #52]	; (800cfd8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800cfa4:	9404      	str	r4, [sp, #16]
 800cfa6:	4460      	add	r0, ip
 800cfa8:	eba3 030e 	sub.w	r3, r3, lr
 800cfac:	eba2 020e 	sub.w	r2, r2, lr
 800cfb0:	f8ad 0016 	strh.w	r0, [sp, #22]
 800cfb4:	4433      	add	r3, r6
 800cfb6:	4461      	add	r1, ip
 800cfb8:	4432      	add	r2, r6
 800cfba:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cfbc:	f8ad 101a 	strh.w	r1, [sp, #26]
 800cfc0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cfc4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cfc8:	6803      	ldr	r3, [r0, #0]
 800cfca:	a904      	add	r1, sp, #16
 800cfcc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cfce:	4798      	blx	r3
 800cfd0:	b009      	add	sp, #36	; 0x24
 800cfd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfd4:	0801d300 	.word	0x0801d300
 800cfd8:	0801d314 	.word	0x0801d314

0800cfdc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800cfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfe0:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800cfe4:	790b      	ldrb	r3, [r1, #4]
 800cfe6:	b0a1      	sub	sp, #132	; 0x84
 800cfe8:	4604      	mov	r4, r0
 800cfea:	460d      	mov	r5, r1
 800cfec:	f1b9 0f00 	cmp.w	r9, #0
 800cff0:	d00f      	beq.n	800d012 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800cff2:	2b00      	cmp	r3, #0
 800cff4:	f040 80a0 	bne.w	800d138 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800cff8:	b021      	add	sp, #132	; 0x84
 800cffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cffe:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800d002:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800d006:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d00a:	1d20      	adds	r0, r4, #4
 800d00c:	f7fb fe26 	bl	8008c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d010:	e092      	b.n	800d138 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800d012:	2b00      	cmp	r3, #0
 800d014:	d1f0      	bne.n	800cff8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800d016:	4b5e      	ldr	r3, [pc, #376]	; (800d190 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800d018:	681b      	ldr	r3, [r3, #0]
 800d01a:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800d01e:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800d022:	f1ba 0f03 	cmp.w	sl, #3
 800d026:	ddea      	ble.n	800cffe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800d028:	f1ba 0f0c 	cmp.w	sl, #12
 800d02c:	f04f 0303 	mov.w	r3, #3
 800d030:	bfdc      	itt	le
 800d032:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800d036:	fb92 f3f3 	sdivle	r3, r2, r3
 800d03a:	9301      	str	r3, [sp, #4]
 800d03c:	4b55      	ldr	r3, [pc, #340]	; (800d194 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800d03e:	4956      	ldr	r1, [pc, #344]	; (800d198 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800d040:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d044:	4b55      	ldr	r3, [pc, #340]	; (800d19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800d046:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d04a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d04e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d052:	ab0e      	add	r3, sp, #56	; 0x38
 800d054:	2248      	movs	r2, #72	; 0x48
 800d056:	2600      	movs	r6, #0
 800d058:	4618      	mov	r0, r3
 800d05a:	960a      	str	r6, [sp, #40]	; 0x28
 800d05c:	f00d fa2a 	bl	801a4b4 <memcpy>
 800d060:	f04f 32ff 	mov.w	r2, #4294967295
 800d064:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800d068:	f8cd a008 	str.w	sl, [sp, #8]
 800d06c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800d070:	fb93 f3f2 	sdiv	r3, r3, r2
 800d074:	b29b      	uxth	r3, r3
 800d076:	46b3      	mov	fp, r6
 800d078:	9303      	str	r3, [sp, #12]
 800d07a:	2300      	movs	r3, #0
 800d07c:	9309      	str	r3, [sp, #36]	; 0x24
 800d07e:	9b07      	ldr	r3, [sp, #28]
 800d080:	9a03      	ldr	r2, [sp, #12]
 800d082:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800d086:	88ef      	ldrh	r7, [r5, #6]
 800d088:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800d08c:	fb13 f302 	smulbb	r3, r3, r2
 800d090:	b29b      	uxth	r3, r3
 800d092:	9304      	str	r3, [sp, #16]
 800d094:	9b07      	ldr	r3, [sp, #28]
 800d096:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800d09a:	a80a      	add	r0, sp, #40	; 0x28
 800d09c:	685b      	ldr	r3, [r3, #4]
 800d09e:	fb13 f302 	smulbb	r3, r3, r2
 800d0a2:	b29b      	uxth	r3, r3
 800d0a4:	9305      	str	r3, [sp, #20]
 800d0a6:	9b04      	ldr	r3, [sp, #16]
 800d0a8:	441f      	add	r7, r3
 800d0aa:	9b05      	ldr	r3, [sp, #20]
 800d0ac:	4498      	add	r8, r3
 800d0ae:	b23f      	sxth	r7, r7
 800d0b0:	fa0f f888 	sxth.w	r8, r8
 800d0b4:	4642      	mov	r2, r8
 800d0b6:	4639      	mov	r1, r7
 800d0b8:	f7ff ff16 	bl	800cee8 <_ZNK8touchgfx4Rect9intersectEss>
 800d0bc:	b380      	cbz	r0, 800d120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800d0be:	4639      	mov	r1, r7
 800d0c0:	ab09      	add	r3, sp, #36	; 0x24
 800d0c2:	4642      	mov	r2, r8
 800d0c4:	1d20      	adds	r0, r4, #4
 800d0c6:	f7fb fdc9 	bl	8008c5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d0ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d0cc:	b341      	cbz	r1, 800d120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800d0ce:	4549      	cmp	r1, r9
 800d0d0:	d026      	beq.n	800d120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800d0d2:	a80c      	add	r0, sp, #48	; 0x30
 800d0d4:	f7ff fe17 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d0d8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800d0dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d0e0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800d0e4:	2002      	movs	r0, #2
 800d0e6:	fb92 f2f0 	sdiv	r2, r2, r0
 800d0ea:	440a      	add	r2, r1
 800d0ec:	1a99      	subs	r1, r3, r2
 800d0ee:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800d0f2:	fb93 f3f0 	sdiv	r3, r3, r0
 800d0f6:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800d0fa:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800d0fe:	4403      	add	r3, r0
 800d100:	1ad3      	subs	r3, r2, r3
 800d102:	435b      	muls	r3, r3
 800d104:	9a06      	ldr	r2, [sp, #24]
 800d106:	fb01 3301 	mla	r3, r1, r1, r3
 800d10a:	4293      	cmp	r3, r2
 800d10c:	d208      	bcs.n	800d120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800d10e:	9a04      	ldr	r2, [sp, #16]
 800d110:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800d114:	86a2      	strh	r2, [r4, #52]	; 0x34
 800d116:	9a05      	ldr	r2, [sp, #20]
 800d118:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800d11c:	86e2      	strh	r2, [r4, #54]	; 0x36
 800d11e:	9306      	str	r3, [sp, #24]
 800d120:	f10b 0b02 	add.w	fp, fp, #2
 800d124:	f1bb 0f08 	cmp.w	fp, #8
 800d128:	dda7      	ble.n	800d07a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d12a:	9b02      	ldr	r3, [sp, #8]
 800d12c:	4453      	add	r3, sl
 800d12e:	9302      	str	r3, [sp, #8]
 800d130:	9b01      	ldr	r3, [sp, #4]
 800d132:	3601      	adds	r6, #1
 800d134:	42b3      	cmp	r3, r6
 800d136:	d199      	bne.n	800d06c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800d138:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d13a:	2900      	cmp	r1, #0
 800d13c:	f43f af5c 	beq.w	800cff8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800d140:	a80c      	add	r0, sp, #48	; 0x30
 800d142:	f7ff fde0 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d146:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800d14a:	88ea      	ldrh	r2, [r5, #6]
 800d14c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800d150:	7929      	ldrb	r1, [r5, #4]
 800d152:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800d156:	1ad2      	subs	r2, r2, r3
 800d158:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d15a:	441a      	add	r2, r3
 800d15c:	892b      	ldrh	r3, [r5, #8]
 800d15e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800d162:	1a1b      	subs	r3, r3, r0
 800d164:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800d166:	4403      	add	r3, r0
 800d168:	480d      	ldr	r0, [pc, #52]	; (800d1a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800d16a:	900e      	str	r0, [sp, #56]	; 0x38
 800d16c:	2600      	movs	r6, #0
 800d16e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d170:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800d174:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800d178:	6803      	ldr	r3, [r0, #0]
 800d17a:	a90e      	add	r1, sp, #56	; 0x38
 800d17c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d17e:	4798      	blx	r3
 800d180:	792b      	ldrb	r3, [r5, #4]
 800d182:	2b00      	cmp	r3, #0
 800d184:	f43f af38 	beq.w	800cff8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800d188:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800d18c:	e734      	b.n	800cff8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800d18e:	bf00      	nop
 800d190:	2000a094 	.word	0x2000a094
 800d194:	2000a088 	.word	0x2000a088
 800d198:	0801b4c4 	.word	0x0801b4c4
 800d19c:	2000a08a 	.word	0x2000a08a
 800d1a0:	0801d300 	.word	0x0801d300

0800d1a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800d1a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d1a6:	4604      	mov	r4, r0
 800d1a8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800d1ac:	3201      	adds	r2, #1
 800d1ae:	d112      	bne.n	800d1d6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800d1b0:	6803      	ldr	r3, [r0, #0]
 800d1b2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d1b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d1ba:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d1be:	2500      	movs	r5, #0
 800d1c0:	9500      	str	r5, [sp, #0]
 800d1c2:	466d      	mov	r5, sp
 800d1c4:	4629      	mov	r1, r5
 800d1c6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d1ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d1cc:	4798      	blx	r3
 800d1ce:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d1d2:	e884 0003 	stmia.w	r4, {r0, r1}
 800d1d6:	4620      	mov	r0, r4
 800d1d8:	b003      	add	sp, #12
 800d1da:	bd30      	pop	{r4, r5, pc}

0800d1dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800d1dc:	b513      	push	{r0, r1, r4, lr}
 800d1de:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800d1e2:	3301      	adds	r3, #1
 800d1e4:	4604      	mov	r4, r0
 800d1e6:	d109      	bne.n	800d1fc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800d1e8:	4601      	mov	r1, r0
 800d1ea:	4668      	mov	r0, sp
 800d1ec:	f7ff fd8b 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d1f0:	f8bd 3000 	ldrh.w	r3, [sp]
 800d1f4:	8423      	strh	r3, [r4, #32]
 800d1f6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d1fa:	8463      	strh	r3, [r4, #34]	; 0x22
 800d1fc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800d200:	b002      	add	sp, #8
 800d202:	bd10      	pop	{r4, pc}

0800d204 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800d204:	b513      	push	{r0, r1, r4, lr}
 800d206:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800d20a:	3301      	adds	r3, #1
 800d20c:	4604      	mov	r4, r0
 800d20e:	d109      	bne.n	800d224 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800d210:	4601      	mov	r1, r0
 800d212:	4668      	mov	r0, sp
 800d214:	f7ff fd77 	bl	800cd06 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d218:	f8bd 3000 	ldrh.w	r3, [sp]
 800d21c:	8423      	strh	r3, [r4, #32]
 800d21e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d222:	8463      	strh	r3, [r4, #34]	; 0x22
 800d224:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800d228:	b002      	add	sp, #8
 800d22a:	bd10      	pop	{r4, pc}

0800d22c <_ZN8touchgfx6ScreenC1Ev>:
 800d22c:	b570      	push	{r4, r5, r6, lr}
 800d22e:	4605      	mov	r5, r0
 800d230:	4b16      	ldr	r3, [pc, #88]	; (800d28c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800d232:	f845 3b04 	str.w	r3, [r5], #4
 800d236:	2300      	movs	r3, #0
 800d238:	8103      	strh	r3, [r0, #8]
 800d23a:	8143      	strh	r3, [r0, #10]
 800d23c:	8183      	strh	r3, [r0, #12]
 800d23e:	81c3      	strh	r3, [r0, #14]
 800d240:	8203      	strh	r3, [r0, #16]
 800d242:	8243      	strh	r3, [r0, #18]
 800d244:	8283      	strh	r3, [r0, #20]
 800d246:	82c3      	strh	r3, [r0, #22]
 800d248:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d24c:	6203      	str	r3, [r0, #32]
 800d24e:	8483      	strh	r3, [r0, #36]	; 0x24
 800d250:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d252:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800d256:	4a0e      	ldr	r2, [pc, #56]	; (800d290 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800d258:	6343      	str	r3, [r0, #52]	; 0x34
 800d25a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800d25e:	4b0d      	ldr	r3, [pc, #52]	; (800d294 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800d260:	6042      	str	r2, [r0, #4]
 800d262:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d266:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800d268:	4a0b      	ldr	r2, [pc, #44]	; (800d298 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800d26a:	4604      	mov	r4, r0
 800d26c:	2101      	movs	r1, #1
 800d26e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800d272:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800d276:	f9b2 1000 	ldrsh.w	r1, [r2]
 800d27a:	4628      	mov	r0, r5
 800d27c:	4798      	blx	r3
 800d27e:	6863      	ldr	r3, [r4, #4]
 800d280:	4628      	mov	r0, r5
 800d282:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d284:	4631      	mov	r1, r6
 800d286:	4798      	blx	r3
 800d288:	4620      	mov	r0, r4
 800d28a:	bd70      	pop	{r4, r5, r6, pc}
 800d28c:	0801d33c 	.word	0x0801d33c
 800d290:	0801c6f8 	.word	0x0801c6f8
 800d294:	2000a08a 	.word	0x2000a08a
 800d298:	2000a088 	.word	0x2000a088

0800d29c <_ZN8touchgfx6Screen4drawEv>:
 800d29c:	b507      	push	{r0, r1, r2, lr}
 800d29e:	4b09      	ldr	r3, [pc, #36]	; (800d2c4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800d2a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d2a4:	4b08      	ldr	r3, [pc, #32]	; (800d2c8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800d2a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d2aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d2ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d2b2:	6803      	ldr	r3, [r0, #0]
 800d2b4:	2100      	movs	r1, #0
 800d2b6:	9100      	str	r1, [sp, #0]
 800d2b8:	689b      	ldr	r3, [r3, #8]
 800d2ba:	4669      	mov	r1, sp
 800d2bc:	4798      	blx	r3
 800d2be:	b003      	add	sp, #12
 800d2c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800d2c4:	2000a088 	.word	0x2000a088
 800d2c8:	2000a08a 	.word	0x2000a08a

0800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800d2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d2d4:	2b00      	cmp	r3, #0
 800d2d6:	b089      	sub	sp, #36	; 0x24
 800d2d8:	4680      	mov	r8, r0
 800d2da:	460c      	mov	r4, r1
 800d2dc:	4615      	mov	r5, r2
 800d2de:	dd0e      	ble.n	800d2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d2e0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d2e4:	2b00      	cmp	r3, #0
 800d2e6:	dd0a      	ble.n	800d2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d2e8:	4628      	mov	r0, r5
 800d2ea:	f7ff ff5b 	bl	800d1a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d2ee:	4621      	mov	r1, r4
 800d2f0:	f7fe fc5a 	bl	800bba8 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2f4:	69eb      	ldr	r3, [r5, #28]
 800d2f6:	b928      	cbnz	r0, 800d304 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800d2f8:	461d      	mov	r5, r3
 800d2fa:	2b00      	cmp	r3, #0
 800d2fc:	d1f4      	bne.n	800d2e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800d2fe:	b009      	add	sp, #36	; 0x24
 800d300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d304:	ae04      	add	r6, sp, #16
 800d306:	2b00      	cmp	r3, #0
 800d308:	f000 80b5 	beq.w	800d476 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d30c:	682b      	ldr	r3, [r5, #0]
 800d30e:	4629      	mov	r1, r5
 800d310:	68db      	ldr	r3, [r3, #12]
 800d312:	a802      	add	r0, sp, #8
 800d314:	4798      	blx	r3
 800d316:	4628      	mov	r0, r5
 800d318:	f7ff ff60 	bl	800d1dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d31c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800d320:	4407      	add	r7, r0
 800d322:	4628      	mov	r0, r5
 800d324:	f7ff ff6e 	bl	800d204 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d328:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d32c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d330:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d334:	4418      	add	r0, r3
 800d336:	4621      	mov	r1, r4
 800d338:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d33c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d340:	b23f      	sxth	r7, r7
 800d342:	4630      	mov	r0, r6
 800d344:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d348:	f8ad 7010 	strh.w	r7, [sp, #16]
 800d34c:	f7fb fd40 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800d350:	4628      	mov	r0, r5
 800d352:	f7ff ff27 	bl	800d1a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d356:	4602      	mov	r2, r0
 800d358:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d35c:	ab06      	add	r3, sp, #24
 800d35e:	e883 0003 	stmia.w	r3, {r0, r1}
 800d362:	4611      	mov	r1, r2
 800d364:	4618      	mov	r0, r3
 800d366:	f7fb fd33 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800d36a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d36e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d372:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800d376:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800d37a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800d37e:	4299      	cmp	r1, r3
 800d380:	d10b      	bne.n	800d39a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d382:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d386:	4552      	cmp	r2, sl
 800d388:	d107      	bne.n	800d39a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d38a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800d38e:	455a      	cmp	r2, fp
 800d390:	d103      	bne.n	800d39a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d392:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d396:	454a      	cmp	r2, r9
 800d398:	d06d      	beq.n	800d476 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d39a:	f1bb 0f00 	cmp.w	fp, #0
 800d39e:	dd65      	ble.n	800d46c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d3a0:	f1b9 0f00 	cmp.w	r9, #0
 800d3a4:	dd62      	ble.n	800d46c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d3a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d3aa:	fa1f f08a 	uxth.w	r0, sl
 800d3ae:	4552      	cmp	r2, sl
 800d3b0:	9000      	str	r0, [sp, #0]
 800d3b2:	da12      	bge.n	800d3da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800d3b4:	9301      	str	r3, [sp, #4]
 800d3b6:	9b00      	ldr	r3, [sp, #0]
 800d3b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d3bc:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d3c0:	1a9a      	subs	r2, r3, r2
 800d3c2:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d3c6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d3ca:	f8ad 2016 	strh.w	r2, [sp, #22]
 800d3ce:	69ea      	ldr	r2, [r5, #28]
 800d3d0:	4631      	mov	r1, r6
 800d3d2:	4640      	mov	r0, r8
 800d3d4:	f7ff ff7a 	bl	800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d3d8:	9b01      	ldr	r3, [sp, #4]
 800d3da:	f9b4 2000 	ldrsh.w	r2, [r4]
 800d3de:	429a      	cmp	r2, r3
 800d3e0:	b29f      	uxth	r7, r3
 800d3e2:	da0d      	bge.n	800d400 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800d3e4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d3e8:	1aba      	subs	r2, r7, r2
 800d3ea:	f8ad a012 	strh.w	sl, [sp, #18]
 800d3ee:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d3f2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d3f6:	69ea      	ldr	r2, [r5, #28]
 800d3f8:	4631      	mov	r1, r6
 800d3fa:	4640      	mov	r0, r8
 800d3fc:	f7ff ff66 	bl	800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d400:	8822      	ldrh	r2, [r4, #0]
 800d402:	88a3      	ldrh	r3, [r4, #4]
 800d404:	445f      	add	r7, fp
 800d406:	4413      	add	r3, r2
 800d408:	b29b      	uxth	r3, r3
 800d40a:	b2bf      	uxth	r7, r7
 800d40c:	b23a      	sxth	r2, r7
 800d40e:	b219      	sxth	r1, r3
 800d410:	4291      	cmp	r1, r2
 800d412:	dd0d      	ble.n	800d430 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800d414:	1bdb      	subs	r3, r3, r7
 800d416:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d41a:	f8ad a012 	strh.w	sl, [sp, #18]
 800d41e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d422:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d426:	69ea      	ldr	r2, [r5, #28]
 800d428:	4631      	mov	r1, r6
 800d42a:	4640      	mov	r0, r8
 800d42c:	f7ff ff4e 	bl	800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d430:	88e2      	ldrh	r2, [r4, #6]
 800d432:	8863      	ldrh	r3, [r4, #2]
 800d434:	4413      	add	r3, r2
 800d436:	9a00      	ldr	r2, [sp, #0]
 800d438:	444a      	add	r2, r9
 800d43a:	b29b      	uxth	r3, r3
 800d43c:	fa1f f982 	uxth.w	r9, r2
 800d440:	fa0f f289 	sxth.w	r2, r9
 800d444:	b219      	sxth	r1, r3
 800d446:	428a      	cmp	r2, r1
 800d448:	da15      	bge.n	800d476 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d44a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d44e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d452:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d456:	eba3 0309 	sub.w	r3, r3, r9
 800d45a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d45e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d462:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d466:	69ea      	ldr	r2, [r5, #28]
 800d468:	4631      	mov	r1, r6
 800d46a:	e001      	b.n	800d470 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800d46c:	69ea      	ldr	r2, [r5, #28]
 800d46e:	4621      	mov	r1, r4
 800d470:	4640      	mov	r0, r8
 800d472:	f7ff ff2b 	bl	800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d476:	4628      	mov	r0, r5
 800d478:	f7ff fe94 	bl	800d1a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d47c:	6861      	ldr	r1, [r4, #4]
 800d47e:	4602      	mov	r2, r0
 800d480:	6820      	ldr	r0, [r4, #0]
 800d482:	4633      	mov	r3, r6
 800d484:	c303      	stmia	r3!, {r0, r1}
 800d486:	4611      	mov	r1, r2
 800d488:	4630      	mov	r0, r6
 800d48a:	f7fb fca1 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800d48e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d492:	2b00      	cmp	r3, #0
 800d494:	f77f af33 	ble.w	800d2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d498:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d49c:	2b00      	cmp	r3, #0
 800d49e:	f77f af2e 	ble.w	800d2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d4a2:	4628      	mov	r0, r5
 800d4a4:	f7ff fe9a 	bl	800d1dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d4a8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d4ac:	1a18      	subs	r0, r3, r0
 800d4ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d4b2:	4628      	mov	r0, r5
 800d4b4:	f7ff fea6 	bl	800d204 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d4b8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d4bc:	1a18      	subs	r0, r3, r0
 800d4be:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d4c2:	682b      	ldr	r3, [r5, #0]
 800d4c4:	4631      	mov	r1, r6
 800d4c6:	689b      	ldr	r3, [r3, #8]
 800d4c8:	4628      	mov	r0, r5
 800d4ca:	4798      	blx	r3
 800d4cc:	e717      	b.n	800d2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800d4ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800d4ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4d0:	aa02      	add	r2, sp, #8
 800d4d2:	2300      	movs	r3, #0
 800d4d4:	f842 3d04 	str.w	r3, [r2, #-4]!
 800d4d8:	4604      	mov	r4, r0
 800d4da:	3004      	adds	r0, #4
 800d4dc:	460d      	mov	r5, r1
 800d4de:	f7fb fd4f 	bl	8008f80 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800d4e2:	9a01      	ldr	r2, [sp, #4]
 800d4e4:	b11a      	cbz	r2, 800d4ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800d4e6:	4629      	mov	r1, r5
 800d4e8:	4620      	mov	r0, r4
 800d4ea:	f7ff feef 	bl	800d2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d4ee:	b003      	add	sp, #12
 800d4f0:	bd30      	pop	{r4, r5, pc}

0800d4f2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800d4f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4f4:	4602      	mov	r2, r0
 800d4f6:	4604      	mov	r4, r0
 800d4f8:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800d4fc:	460d      	mov	r5, r1
 800d4fe:	6851      	ldr	r1, [r2, #4]
 800d500:	466b      	mov	r3, sp
 800d502:	c303      	stmia	r3!, {r0, r1}
 800d504:	4629      	mov	r1, r5
 800d506:	4668      	mov	r0, sp
 800d508:	f7fb fc62 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 800d50c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d510:	4669      	mov	r1, sp
 800d512:	b123      	cbz	r3, 800d51e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800d514:	4620      	mov	r0, r4
 800d516:	f7ff ffda 	bl	800d4ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800d51a:	b003      	add	sp, #12
 800d51c:	bd30      	pop	{r4, r5, pc}
 800d51e:	1d20      	adds	r0, r4, #4
 800d520:	f7fb fcf5 	bl	8008f0e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800d524:	e7f9      	b.n	800d51a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800d526 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800d526:	680a      	ldr	r2, [r1, #0]
 800d528:	460b      	mov	r3, r1
 800d52a:	6992      	ldr	r2, [r2, #24]
 800d52c:	1d01      	adds	r1, r0, #4
 800d52e:	4618      	mov	r0, r3
 800d530:	4710      	bx	r2

0800d532 <_ZN8touchgfx12TextProviderC1Ev>:
 800d532:	b538      	push	{r3, r4, r5, lr}
 800d534:	2500      	movs	r5, #0
 800d536:	4604      	mov	r4, r0
 800d538:	e9c0 5500 	strd	r5, r5, [r0]
 800d53c:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800d540:	7405      	strb	r5, [r0, #16]
 800d542:	82c5      	strh	r5, [r0, #22]
 800d544:	8305      	strh	r5, [r0, #24]
 800d546:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800d548:	8605      	strh	r5, [r0, #48]	; 0x30
 800d54a:	86c5      	strh	r5, [r0, #54]	; 0x36
 800d54c:	8705      	strh	r5, [r0, #56]	; 0x38
 800d54e:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 800d552:	220e      	movs	r2, #14
 800d554:	4629      	mov	r1, r5
 800d556:	3044      	adds	r0, #68	; 0x44
 800d558:	f00c ffba 	bl	801a4d0 <memset>
 800d55c:	2301      	movs	r3, #1
 800d55e:	4620      	mov	r0, r4
 800d560:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 800d564:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800d568:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 800d56c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800d570:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 800d574:	f7f5 f8fa 	bl	800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800d578:	4620      	mov	r0, r4
 800d57a:	bd38      	pop	{r3, r4, r5, pc}

0800d57c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800d57c:	b530      	push	{r4, r5, lr}
 800d57e:	2500      	movs	r5, #0
 800d580:	2401      	movs	r4, #1
 800d582:	6843      	ldr	r3, [r0, #4]
 800d584:	b913      	cbnz	r3, 800d58c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800d586:	6803      	ldr	r3, [r0, #0]
 800d588:	b1f3      	cbz	r3, 800d5c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d58a:	6043      	str	r3, [r0, #4]
 800d58c:	7c03      	ldrb	r3, [r0, #16]
 800d58e:	b143      	cbz	r3, 800d5a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800d590:	68c3      	ldr	r3, [r0, #12]
 800d592:	b12b      	cbz	r3, 800d5a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d594:	881a      	ldrh	r2, [r3, #0]
 800d596:	b11a      	cbz	r2, 800d5a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d598:	1c9a      	adds	r2, r3, #2
 800d59a:	60c2      	str	r2, [r0, #12]
 800d59c:	8818      	ldrh	r0, [r3, #0]
 800d59e:	bd30      	pop	{r4, r5, pc}
 800d5a0:	7405      	strb	r5, [r0, #16]
 800d5a2:	6843      	ldr	r3, [r0, #4]
 800d5a4:	8819      	ldrh	r1, [r3, #0]
 800d5a6:	b179      	cbz	r1, 800d5c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d5a8:	1c9a      	adds	r2, r3, #2
 800d5aa:	2902      	cmp	r1, #2
 800d5ac:	6042      	str	r2, [r0, #4]
 800d5ae:	d1f5      	bne.n	800d59c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800d5b0:	6883      	ldr	r3, [r0, #8]
 800d5b2:	1d1a      	adds	r2, r3, #4
 800d5b4:	6082      	str	r2, [r0, #8]
 800d5b6:	681b      	ldr	r3, [r3, #0]
 800d5b8:	60c3      	str	r3, [r0, #12]
 800d5ba:	2b00      	cmp	r3, #0
 800d5bc:	d0e1      	beq.n	800d582 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d5be:	881b      	ldrh	r3, [r3, #0]
 800d5c0:	2b00      	cmp	r3, #0
 800d5c2:	d0de      	beq.n	800d582 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d5c4:	7404      	strb	r4, [r0, #16]
 800d5c6:	e7dc      	b.n	800d582 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d5c8:	2000      	movs	r0, #0
 800d5ca:	e7e8      	b.n	800d59e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800d5cc <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800d5cc:	b410      	push	{r4}
 800d5ce:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d5d0:	9b01      	ldr	r3, [sp, #4]
 800d5d2:	6403      	str	r3, [r0, #64]	; 0x40
 800d5d4:	2300      	movs	r3, #0
 800d5d6:	6082      	str	r2, [r0, #8]
 800d5d8:	6001      	str	r1, [r0, #0]
 800d5da:	6043      	str	r3, [r0, #4]
 800d5dc:	60c3      	str	r3, [r0, #12]
 800d5de:	7403      	strb	r3, [r0, #16]
 800d5e0:	8603      	strh	r3, [r0, #48]	; 0x30
 800d5e2:	8303      	strh	r3, [r0, #24]
 800d5e4:	8703      	strh	r3, [r0, #56]	; 0x38
 800d5e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d5ea:	f7f5 b8bf 	b.w	800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800d5ee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800d5ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5f0:	4605      	mov	r5, r0
 800d5f2:	4608      	mov	r0, r1
 800d5f4:	b1e9      	cbz	r1, 800d632 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800d5f6:	f105 0444 	add.w	r4, r5, #68	; 0x44
 800d5fa:	460b      	mov	r3, r1
 800d5fc:	f101 0708 	add.w	r7, r1, #8
 800d600:	4622      	mov	r2, r4
 800d602:	6818      	ldr	r0, [r3, #0]
 800d604:	6859      	ldr	r1, [r3, #4]
 800d606:	4626      	mov	r6, r4
 800d608:	c603      	stmia	r6!, {r0, r1}
 800d60a:	3308      	adds	r3, #8
 800d60c:	42bb      	cmp	r3, r7
 800d60e:	4634      	mov	r4, r6
 800d610:	d1f7      	bne.n	800d602 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800d612:	6818      	ldr	r0, [r3, #0]
 800d614:	6030      	str	r0, [r6, #0]
 800d616:	889b      	ldrh	r3, [r3, #4]
 800d618:	80b3      	strh	r3, [r6, #4]
 800d61a:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 800d61e:	015b      	lsls	r3, r3, #5
 800d620:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d624:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 800d628:	430b      	orrs	r3, r1
 800d62a:	425b      	negs	r3, r3
 800d62c:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 800d630:	4610      	mov	r0, r2
 800d632:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800d634:	b538      	push	{r3, r4, r5, lr}
 800d636:	460c      	mov	r4, r1
 800d638:	6811      	ldr	r1, [r2, #0]
 800d63a:	4610      	mov	r0, r2
 800d63c:	68cd      	ldr	r5, [r1, #12]
 800d63e:	4619      	mov	r1, r3
 800d640:	47a8      	blx	r5
 800d642:	2800      	cmp	r0, #0
 800d644:	bf08      	it	eq
 800d646:	4620      	moveq	r0, r4
 800d648:	bd38      	pop	{r3, r4, r5, pc}
	...

0800d64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800d64c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d64e:	4604      	mov	r4, r0
 800d650:	4615      	mov	r5, r2
 800d652:	4608      	mov	r0, r1
 800d654:	b93a      	cbnz	r2, 800d666 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800d656:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800d65a:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 800d65e:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 800d662:	4628      	mov	r0, r5
 800d664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d666:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800d66a:	8893      	ldrh	r3, [r2, #4]
 800d66c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800d670:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d674:	79ee      	ldrb	r6, [r5, #7]
 800d676:	4316      	orrs	r6, r2
 800d678:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800d67c:	189a      	adds	r2, r3, r2
 800d67e:	b291      	uxth	r1, r2
 800d680:	291d      	cmp	r1, #29
 800d682:	b2b7      	uxth	r7, r6
 800d684:	f200 8083 	bhi.w	800d78e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d688:	2201      	movs	r2, #1
 800d68a:	408a      	lsls	r2, r1
 800d68c:	4978      	ldr	r1, [pc, #480]	; (800d870 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800d68e:	420a      	tst	r2, r1
 800d690:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800d694:	d12d      	bne.n	800d6f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800d696:	f412 7f60 	tst.w	r2, #896	; 0x380
 800d69a:	d078      	beq.n	800d78e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d69c:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800d6a0:	462b      	mov	r3, r5
 800d6a2:	f105 0e08 	add.w	lr, r5, #8
 800d6a6:	4615      	mov	r5, r2
 800d6a8:	6818      	ldr	r0, [r3, #0]
 800d6aa:	6859      	ldr	r1, [r3, #4]
 800d6ac:	4694      	mov	ip, r2
 800d6ae:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d6b2:	3308      	adds	r3, #8
 800d6b4:	4573      	cmp	r3, lr
 800d6b6:	4662      	mov	r2, ip
 800d6b8:	d1f6      	bne.n	800d6a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800d6ba:	6818      	ldr	r0, [r3, #0]
 800d6bc:	f8cc 0000 	str.w	r0, [ip]
 800d6c0:	889b      	ldrh	r3, [r3, #4]
 800d6c2:	f8ac 3004 	strh.w	r3, [ip, #4]
 800d6c6:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 800d6ca:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800d6ce:	b2b3      	uxth	r3, r6
 800d6d0:	1aca      	subs	r2, r1, r3
 800d6d2:	b292      	uxth	r2, r2
 800d6d4:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800d6d8:	10d2      	asrs	r2, r2, #3
 800d6da:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800d6de:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800d6e2:	4302      	orrs	r2, r0
 800d6e4:	1bcf      	subs	r7, r1, r7
 800d6e6:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800d6ea:	1afb      	subs	r3, r7, r3
 800d6ec:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800d6f0:	e7b7      	b.n	800d662 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d6f2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d6f4:	b92b      	cbnz	r3, 800d702 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800d6f6:	4b5f      	ldr	r3, [pc, #380]	; (800d874 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800d6f8:	4a5f      	ldr	r2, [pc, #380]	; (800d878 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800d6fa:	4860      	ldr	r0, [pc, #384]	; (800d87c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800d6fc:	21bf      	movs	r1, #191	; 0xbf
 800d6fe:	f00c fe5b 	bl	801a3b8 <__assert_func>
 800d702:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d704:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d708:	8b59      	ldrh	r1, [r3, #26]
 800d70a:	f640 6333 	movw	r3, #3635	; 0xe33
 800d70e:	4299      	cmp	r1, r3
 800d710:	d110      	bne.n	800d734 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800d712:	6803      	ldr	r3, [r0, #0]
 800d714:	68db      	ldr	r3, [r3, #12]
 800d716:	4798      	blx	r3
 800d718:	7b41      	ldrb	r1, [r0, #13]
 800d71a:	00cb      	lsls	r3, r1, #3
 800d71c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d720:	7a03      	ldrb	r3, [r0, #8]
 800d722:	0648      	lsls	r0, r1, #25
 800d724:	ea43 0302 	orr.w	r3, r3, r2
 800d728:	bf44      	itt	mi
 800d72a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d72e:	b21b      	sxthmi	r3, r3
 800d730:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d734:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800d738:	443b      	add	r3, r7
 800d73a:	4433      	add	r3, r6
 800d73c:	b29b      	uxth	r3, r3
 800d73e:	f104 0644 	add.w	r6, r4, #68	; 0x44
 800d742:	462a      	mov	r2, r5
 800d744:	f105 0c08 	add.w	ip, r5, #8
 800d748:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d74c:	4635      	mov	r5, r6
 800d74e:	6810      	ldr	r0, [r2, #0]
 800d750:	6851      	ldr	r1, [r2, #4]
 800d752:	4637      	mov	r7, r6
 800d754:	c703      	stmia	r7!, {r0, r1}
 800d756:	3208      	adds	r2, #8
 800d758:	4562      	cmp	r2, ip
 800d75a:	463e      	mov	r6, r7
 800d75c:	d1f7      	bne.n	800d74e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800d75e:	6810      	ldr	r0, [r2, #0]
 800d760:	6038      	str	r0, [r7, #0]
 800d762:	8892      	ldrh	r2, [r2, #4]
 800d764:	80ba      	strh	r2, [r7, #4]
 800d766:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800d76a:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800d76e:	10db      	asrs	r3, r3, #3
 800d770:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d774:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d778:	4313      	orrs	r3, r2
 800d77a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800d77e:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 800d782:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 800d786:	1a9b      	subs	r3, r3, r2
 800d788:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d78c:	e769      	b.n	800d662 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d78e:	f023 0204 	bic.w	r2, r3, #4
 800d792:	f640 611b 	movw	r1, #3611	; 0xe1b
 800d796:	428a      	cmp	r2, r1
 800d798:	d003      	beq.n	800d7a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800d79a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800d79e:	4293      	cmp	r3, r2
 800d7a0:	d120      	bne.n	800d7e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800d7a2:	3b01      	subs	r3, #1
 800d7a4:	4602      	mov	r2, r0
 800d7a6:	b29b      	uxth	r3, r3
 800d7a8:	4629      	mov	r1, r5
 800d7aa:	4620      	mov	r0, r4
 800d7ac:	f7ff ff42 	bl	800d634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d7b0:	7b41      	ldrb	r1, [r0, #13]
 800d7b2:	00cb      	lsls	r3, r1, #3
 800d7b4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d7b8:	7a03      	ldrb	r3, [r0, #8]
 800d7ba:	0649      	lsls	r1, r1, #25
 800d7bc:	ea43 0302 	orr.w	r3, r3, r2
 800d7c0:	bf44      	itt	mi
 800d7c2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d7c6:	b21b      	sxthmi	r3, r3
 800d7c8:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d7cc:	7b6b      	ldrb	r3, [r5, #13]
 800d7ce:	7aaa      	ldrb	r2, [r5, #10]
 800d7d0:	005b      	lsls	r3, r3, #1
 800d7d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d7d6:	4313      	orrs	r3, r2
 800d7d8:	115a      	asrs	r2, r3, #5
 800d7da:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d7de:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800d7e2:	e036      	b.n	800d852 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d7e4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d7e8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d7ec:	7a2a      	ldrb	r2, [r5, #8]
 800d7ee:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d7f2:	ea42 0201 	orr.w	r2, r2, r1
 800d7f6:	bf1c      	itt	ne
 800d7f8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d7fc:	b212      	sxthne	r2, r2
 800d7fe:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800d802:	f640 6109 	movw	r1, #3593	; 0xe09
 800d806:	f023 0210 	bic.w	r2, r3, #16
 800d80a:	428a      	cmp	r2, r1
 800d80c:	d003      	beq.n	800d816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d80e:	f640 6213 	movw	r2, #3603	; 0xe13
 800d812:	4293      	cmp	r3, r2
 800d814:	d12a      	bne.n	800d86c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d816:	7b6e      	ldrb	r6, [r5, #13]
 800d818:	0076      	lsls	r6, r6, #1
 800d81a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d81e:	7aae      	ldrb	r6, [r5, #10]
 800d820:	4316      	orrs	r6, r2
 800d822:	f640 6213 	movw	r2, #3603	; 0xe13
 800d826:	4293      	cmp	r3, r2
 800d828:	bf18      	it	ne
 800d82a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d82e:	4602      	mov	r2, r0
 800d830:	bf14      	ite	ne
 800d832:	b29b      	uxthne	r3, r3
 800d834:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d838:	4629      	mov	r1, r5
 800d83a:	4620      	mov	r0, r4
 800d83c:	f7ff fefa 	bl	800d634 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d840:	7b43      	ldrb	r3, [r0, #13]
 800d842:	7a82      	ldrb	r2, [r0, #10]
 800d844:	005b      	lsls	r3, r3, #1
 800d846:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d84a:	4313      	orrs	r3, r2
 800d84c:	1af6      	subs	r6, r6, r3
 800d84e:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 800d852:	7b69      	ldrb	r1, [r5, #13]
 800d854:	00cb      	lsls	r3, r1, #3
 800d856:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d85a:	7a2b      	ldrb	r3, [r5, #8]
 800d85c:	4313      	orrs	r3, r2
 800d85e:	064a      	lsls	r2, r1, #25
 800d860:	bf44      	itt	mi
 800d862:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d866:	b21b      	sxthmi	r3, r3
 800d868:	1bdb      	subs	r3, r3, r7
 800d86a:	e73f      	b.n	800d6ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d86c:	2300      	movs	r3, #0
 800d86e:	e7b6      	b.n	800d7de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d870:	3fc00079 	.word	0x3fc00079
 800d874:	0801bff4 	.word	0x0801bff4
 800d878:	0801d597 	.word	0x0801d597
 800d87c:	0801c0c6 	.word	0x0801c0c6

0800d880 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d884:	4604      	mov	r4, r0
 800d886:	b942      	cbnz	r2, 800d89a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d888:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d88c:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800d890:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 800d894:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800d898:	e046      	b.n	800d928 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d89a:	7b51      	ldrb	r1, [r2, #13]
 800d89c:	8893      	ldrh	r3, [r2, #4]
 800d89e:	010f      	lsls	r7, r1, #4
 800d8a0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d8a4:	79d7      	ldrb	r7, [r2, #7]
 800d8a6:	4307      	orrs	r7, r0
 800d8a8:	2f04      	cmp	r7, #4
 800d8aa:	b2bd      	uxth	r5, r7
 800d8ac:	bfcc      	ite	gt
 800d8ae:	08bf      	lsrgt	r7, r7, #2
 800d8b0:	2701      	movle	r7, #1
 800d8b2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d8b6:	f200 80ab 	bhi.w	800da10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d8ba:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d8be:	4283      	cmp	r3, r0
 800d8c0:	d216      	bcs.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d8c2:	f240 605b 	movw	r0, #1627	; 0x65b
 800d8c6:	4283      	cmp	r3, r0
 800d8c8:	d859      	bhi.n	800d97e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d8ca:	f240 6057 	movw	r0, #1623	; 0x657
 800d8ce:	4283      	cmp	r3, r0
 800d8d0:	d20e      	bcs.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d8d2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d8d6:	d24a      	bcs.n	800d96e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d8d8:	f240 604e 	movw	r0, #1614	; 0x64e
 800d8dc:	4283      	cmp	r3, r0
 800d8de:	d207      	bcs.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d8e0:	f240 601a 	movw	r0, #1562	; 0x61a
 800d8e4:	4283      	cmp	r3, r0
 800d8e6:	d02a      	beq.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d8e8:	d821      	bhi.n	800d92e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d8ea:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d8ee:	d35b      	bcc.n	800d9a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d8f0:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 800d8f4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d8f8:	f040 80d0 	bne.w	800da9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d8fc:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 800d900:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d904:	f040 80ca 	bne.w	800da9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d908:	00cb      	lsls	r3, r1, #3
 800d90a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d90e:	7a13      	ldrb	r3, [r2, #8]
 800d910:	0649      	lsls	r1, r1, #25
 800d912:	ea43 0300 	orr.w	r3, r3, r0
 800d916:	bf44      	itt	mi
 800d918:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d91c:	b21b      	sxthmi	r3, r3
 800d91e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d922:	1b5d      	subs	r5, r3, r5
 800d924:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800d928:	4610      	mov	r0, r2
 800d92a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d92e:	f240 604b 	movw	r0, #1611	; 0x64b
 800d932:	4283      	cmp	r3, r0
 800d934:	d338      	bcc.n	800d9a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d936:	f240 604c 	movw	r0, #1612	; 0x64c
 800d93a:	4283      	cmp	r3, r0
 800d93c:	d9d8      	bls.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d93e:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d942:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 800d946:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d94a:	f040 80f1 	bne.w	800db30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d94e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d952:	f040 80ed 	bne.w	800db30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d956:	00cb      	lsls	r3, r1, #3
 800d958:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d95c:	7a13      	ldrb	r3, [r2, #8]
 800d95e:	064e      	lsls	r6, r1, #25
 800d960:	ea43 0300 	orr.w	r3, r3, r0
 800d964:	bf44      	itt	mi
 800d966:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d96a:	b21b      	sxthmi	r3, r3
 800d96c:	e7d9      	b.n	800d922 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d96e:	f240 6054 	movw	r0, #1620	; 0x654
 800d972:	4283      	cmp	r3, r0
 800d974:	d8e3      	bhi.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d976:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d97a:	d9e0      	bls.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d97c:	e7b8      	b.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d97e:	f240 6074 	movw	r0, #1652	; 0x674
 800d982:	4283      	cmp	r3, r0
 800d984:	d0b4      	beq.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d986:	d82d      	bhi.n	800d9e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d988:	f240 605e 	movw	r0, #1630	; 0x65e
 800d98c:	4283      	cmp	r3, r0
 800d98e:	d804      	bhi.n	800d99a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d990:	f240 605d 	movw	r0, #1629	; 0x65d
 800d994:	4283      	cmp	r3, r0
 800d996:	d3d2      	bcc.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d998:	e7aa      	b.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d99a:	f240 605f 	movw	r0, #1631	; 0x65f
 800d99e:	4283      	cmp	r3, r0
 800d9a0:	d0cd      	beq.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d9a2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d9a6:	d0a3      	beq.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d9a8:	00cb      	lsls	r3, r1, #3
 800d9aa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d9ae:	7a13      	ldrb	r3, [r2, #8]
 800d9b0:	0649      	lsls	r1, r1, #25
 800d9b2:	ea43 0300 	orr.w	r3, r3, r0
 800d9b6:	bf44      	itt	mi
 800d9b8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d9bc:	b21b      	sxthmi	r3, r3
 800d9be:	1b5d      	subs	r5, r3, r5
 800d9c0:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d9c4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800d9c8:	7b53      	ldrb	r3, [r2, #13]
 800d9ca:	015b      	lsls	r3, r3, #5
 800d9cc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d9d0:	7993      	ldrb	r3, [r2, #6]
 800d9d2:	430b      	orrs	r3, r1
 800d9d4:	005b      	lsls	r3, r3, #1
 800d9d6:	2105      	movs	r1, #5
 800d9d8:	fb93 f3f1 	sdiv	r3, r3, r1
 800d9dc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d9e0:	440b      	add	r3, r1
 800d9e2:	e757      	b.n	800d894 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d9e4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d9e8:	4283      	cmp	r3, r0
 800d9ea:	d809      	bhi.n	800da00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d9ec:	f240 60df 	movw	r0, #1759	; 0x6df
 800d9f0:	4283      	cmp	r3, r0
 800d9f2:	f4bf af7d 	bcs.w	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d9f6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d9fa:	2b05      	cmp	r3, #5
 800d9fc:	d8d4      	bhi.n	800d9a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d9fe:	e777      	b.n	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800da00:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800da04:	4283      	cmp	r3, r0
 800da06:	d09a      	beq.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da08:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800da0c:	4283      	cmp	r3, r0
 800da0e:	e7ca      	b.n	800d9a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800da10:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800da14:	d22b      	bcs.n	800da6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800da16:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800da1a:	4283      	cmp	r3, r0
 800da1c:	d28f      	bcs.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da1e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800da22:	4283      	cmp	r3, r0
 800da24:	d816      	bhi.n	800da54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800da26:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800da2a:	4283      	cmp	r3, r0
 800da2c:	f4bf af60 	bcs.w	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800da30:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800da34:	4283      	cmp	r3, r0
 800da36:	d80a      	bhi.n	800da4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800da38:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800da3c:	4283      	cmp	r3, r0
 800da3e:	f4bf af57 	bcs.w	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800da42:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800da46:	4283      	cmp	r3, r0
 800da48:	f43f af79 	beq.w	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da4c:	e7ac      	b.n	800d9a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800da4e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800da52:	e7f8      	b.n	800da46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800da54:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800da58:	4283      	cmp	r3, r0
 800da5a:	d802      	bhi.n	800da62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800da5c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800da60:	e798      	b.n	800d994 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800da62:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800da66:	4283      	cmp	r3, r0
 800da68:	f47f af42 	bne.w	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800da6c:	e767      	b.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da6e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800da72:	4283      	cmp	r3, r0
 800da74:	f43f af63 	beq.w	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da78:	d802      	bhi.n	800da80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800da7a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800da7e:	e7f2      	b.n	800da66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800da80:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800da84:	4283      	cmp	r3, r0
 800da86:	d805      	bhi.n	800da94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800da88:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800da8c:	4283      	cmp	r3, r0
 800da8e:	f4ff af2f 	bcc.w	800d8f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800da92:	e754      	b.n	800d93e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800da94:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800da98:	4283      	cmp	r3, r0
 800da9a:	e7af      	b.n	800d9fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800da9c:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 800daa0:	4617      	mov	r7, r2
 800daa2:	f102 0808 	add.w	r8, r2, #8
 800daa6:	4666      	mov	r6, ip
 800daa8:	6838      	ldr	r0, [r7, #0]
 800daaa:	6879      	ldr	r1, [r7, #4]
 800daac:	46e6      	mov	lr, ip
 800daae:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800dab2:	3708      	adds	r7, #8
 800dab4:	4547      	cmp	r7, r8
 800dab6:	46f4      	mov	ip, lr
 800dab8:	d1f6      	bne.n	800daa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800daba:	6838      	ldr	r0, [r7, #0]
 800dabc:	f8ce 0000 	str.w	r0, [lr]
 800dac0:	88b9      	ldrh	r1, [r7, #4]
 800dac2:	f8ae 1004 	strh.w	r1, [lr, #4]
 800dac6:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800daca:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800dace:	d009      	beq.n	800dae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800dad0:	7b51      	ldrb	r1, [r2, #13]
 800dad2:	7992      	ldrb	r2, [r2, #6]
 800dad4:	0149      	lsls	r1, r1, #5
 800dad6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800dada:	4311      	orrs	r1, r2
 800dadc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800dae0:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800dae4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800dae8:	d00d      	beq.n	800db06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800daea:	442b      	add	r3, r5
 800daec:	b29b      	uxth	r3, r3
 800daee:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800daf2:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800daf6:	10db      	asrs	r3, r3, #3
 800daf8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800dafc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800db00:	4313      	orrs	r3, r2
 800db02:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800db06:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800db0a:	00cb      	lsls	r3, r1, #3
 800db0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800db10:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800db14:	064f      	lsls	r7, r1, #25
 800db16:	ea43 0302 	orr.w	r3, r3, r2
 800db1a:	bf44      	itt	mi
 800db1c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800db20:	b21b      	sxthmi	r3, r3
 800db22:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800db26:	1b5d      	subs	r5, r3, r5
 800db28:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800db2c:	4632      	mov	r2, r6
 800db2e:	e6fb      	b.n	800d928 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800db30:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 800db34:	4694      	mov	ip, r2
 800db36:	f102 0908 	add.w	r9, r2, #8
 800db3a:	4676      	mov	r6, lr
 800db3c:	f8dc 0000 	ldr.w	r0, [ip]
 800db40:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800db44:	46f0      	mov	r8, lr
 800db46:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800db4a:	f10c 0c08 	add.w	ip, ip, #8
 800db4e:	45cc      	cmp	ip, r9
 800db50:	46c6      	mov	lr, r8
 800db52:	d1f3      	bne.n	800db3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800db54:	f8dc 0000 	ldr.w	r0, [ip]
 800db58:	f8c8 0000 	str.w	r0, [r8]
 800db5c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800db60:	f8a8 1004 	strh.w	r1, [r8, #4]
 800db64:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800db68:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800db6c:	d009      	beq.n	800db82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800db6e:	7b51      	ldrb	r1, [r2, #13]
 800db70:	7992      	ldrb	r2, [r2, #6]
 800db72:	0149      	lsls	r1, r1, #5
 800db74:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800db78:	4311      	orrs	r1, r2
 800db7a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800db7e:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800db82:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800db86:	d00d      	beq.n	800dba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800db88:	1bdb      	subs	r3, r3, r7
 800db8a:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800db8e:	b29b      	uxth	r3, r3
 800db90:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800db94:	10db      	asrs	r3, r3, #3
 800db96:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800db9a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800db9e:	4313      	orrs	r3, r2
 800dba0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800dba4:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800dba8:	00cb      	lsls	r3, r1, #3
 800dbaa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dbae:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800dbb2:	0648      	lsls	r0, r1, #25
 800dbb4:	ea43 0302 	orr.w	r3, r3, r2
 800dbb8:	bf44      	itt	mi
 800dbba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dbbe:	b21b      	sxthmi	r3, r3
 800dbc0:	e7b1      	b.n	800db26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800dbc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800dbc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbc8:	461e      	mov	r6, r3
 800dbca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800dbcc:	4604      	mov	r4, r0
 800dbce:	4617      	mov	r7, r2
 800dbd0:	b92b      	cbnz	r3, 800dbde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800dbd2:	4b25      	ldr	r3, [pc, #148]	; (800dc68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800dbd4:	4a25      	ldr	r2, [pc, #148]	; (800dc6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800dbd6:	4826      	ldr	r0, [pc, #152]	; (800dc70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800dbd8:	21bf      	movs	r1, #191	; 0xbf
 800dbda:	f00c fbed 	bl	801a3b8 <__assert_func>
 800dbde:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800dbe0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800dbe4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800dbe8:	f7f4 fd7e 	bl	80026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dbec:	4605      	mov	r5, r0
 800dbee:	b918      	cbnz	r0, 800dbf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800dbf0:	6030      	str	r0, [r6, #0]
 800dbf2:	4628      	mov	r0, r5
 800dbf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbf8:	683b      	ldr	r3, [r7, #0]
 800dbfa:	4601      	mov	r1, r0
 800dbfc:	68db      	ldr	r3, [r3, #12]
 800dbfe:	4638      	mov	r0, r7
 800dc00:	4798      	blx	r3
 800dc02:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800dc06:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800dc0a:	4602      	mov	r2, r0
 800dc0c:	6030      	str	r0, [r6, #0]
 800dc0e:	d213      	bcs.n	800dc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800dc10:	4643      	mov	r3, r8
 800dc12:	4639      	mov	r1, r7
 800dc14:	4620      	mov	r0, r4
 800dc16:	f7ff fe33 	bl	800d880 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800dc1a:	6030      	str	r0, [r6, #0]
 800dc1c:	6833      	ldr	r3, [r6, #0]
 800dc1e:	b143      	cbz	r3, 800dc32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800dc20:	7b5a      	ldrb	r2, [r3, #13]
 800dc22:	7a9b      	ldrb	r3, [r3, #10]
 800dc24:	0052      	lsls	r2, r2, #1
 800dc26:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800dc2a:	4313      	orrs	r3, r2
 800dc2c:	bf0c      	ite	eq
 800dc2e:	2301      	moveq	r3, #1
 800dc30:	2300      	movne	r3, #0
 800dc32:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800dc36:	e7dc      	b.n	800dbf2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800dc38:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800dc3c:	b29b      	uxth	r3, r3
 800dc3e:	2b7f      	cmp	r3, #127	; 0x7f
 800dc40:	d804      	bhi.n	800dc4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800dc42:	4639      	mov	r1, r7
 800dc44:	4620      	mov	r0, r4
 800dc46:	f7ff fd01 	bl	800d64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800dc4a:	e7e6      	b.n	800dc1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800dc4c:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800dc50:	2b00      	cmp	r3, #0
 800dc52:	d0e3      	beq.n	800dc1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800dc54:	f640 1302 	movw	r3, #2306	; 0x902
 800dc58:	429d      	cmp	r5, r3
 800dc5a:	d1df      	bne.n	800dc1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800dc5c:	4601      	mov	r1, r0
 800dc5e:	4620      	mov	r0, r4
 800dc60:	f7ff fcc5 	bl	800d5ee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800dc64:	e7d9      	b.n	800dc1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800dc66:	bf00      	nop
 800dc68:	0801bff4 	.word	0x0801bff4
 800dc6c:	0801d597 	.word	0x0801d597
 800dc70:	0801c0c6 	.word	0x0801c0c6

0800dc74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800dc74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc78:	461e      	mov	r6, r3
 800dc7a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800dc7c:	4604      	mov	r4, r0
 800dc7e:	4617      	mov	r7, r2
 800dc80:	b92b      	cbnz	r3, 800dc8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800dc82:	4b26      	ldr	r3, [pc, #152]	; (800dd1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800dc84:	4a26      	ldr	r2, [pc, #152]	; (800dd20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800dc86:	4827      	ldr	r0, [pc, #156]	; (800dd24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800dc88:	21bf      	movs	r1, #191	; 0xbf
 800dc8a:	f00c fb95 	bl	801a3b8 <__assert_func>
 800dc8e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800dc90:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800dc94:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800dc98:	f7f4 fd26 	bl	80026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc9c:	4605      	mov	r5, r0
 800dc9e:	b918      	cbnz	r0, 800dca8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800dca0:	6030      	str	r0, [r6, #0]
 800dca2:	4628      	mov	r0, r5
 800dca4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dca8:	683b      	ldr	r3, [r7, #0]
 800dcaa:	4601      	mov	r1, r0
 800dcac:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800dcb0:	4638      	mov	r0, r7
 800dcb2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800dcb6:	47c8      	blx	r9
 800dcb8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800dcbc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800dcc0:	4602      	mov	r2, r0
 800dcc2:	6030      	str	r0, [r6, #0]
 800dcc4:	d213      	bcs.n	800dcee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800dcc6:	4643      	mov	r3, r8
 800dcc8:	4639      	mov	r1, r7
 800dcca:	4620      	mov	r0, r4
 800dccc:	f7ff fdd8 	bl	800d880 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800dcd0:	6030      	str	r0, [r6, #0]
 800dcd2:	6833      	ldr	r3, [r6, #0]
 800dcd4:	b143      	cbz	r3, 800dce8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800dcd6:	7b5a      	ldrb	r2, [r3, #13]
 800dcd8:	7a9b      	ldrb	r3, [r3, #10]
 800dcda:	0052      	lsls	r2, r2, #1
 800dcdc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800dce0:	4313      	orrs	r3, r2
 800dce2:	bf0c      	ite	eq
 800dce4:	2301      	moveq	r3, #1
 800dce6:	2300      	movne	r3, #0
 800dce8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800dcec:	e7d9      	b.n	800dca2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800dcee:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800dcf2:	b29b      	uxth	r3, r3
 800dcf4:	2b7f      	cmp	r3, #127	; 0x7f
 800dcf6:	d804      	bhi.n	800dd02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800dcf8:	4639      	mov	r1, r7
 800dcfa:	4620      	mov	r0, r4
 800dcfc:	f7ff fca6 	bl	800d64c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800dd00:	e7e6      	b.n	800dcd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800dd02:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800dd06:	2b00      	cmp	r3, #0
 800dd08:	d0e3      	beq.n	800dcd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800dd0a:	f640 1302 	movw	r3, #2306	; 0x902
 800dd0e:	429d      	cmp	r5, r3
 800dd10:	d1df      	bne.n	800dcd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800dd12:	4601      	mov	r1, r0
 800dd14:	4620      	mov	r0, r4
 800dd16:	f7ff fc6a 	bl	800d5ee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800dd1a:	e7d9      	b.n	800dcd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800dd1c:	0801bff4 	.word	0x0801bff4
 800dd20:	0801d597 	.word	0x0801d597
 800dd24:	0801c0c6 	.word	0x0801c0c6

0800dd28 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800dd28:	b510      	push	{r4, lr}
 800dd2a:	4604      	mov	r4, r0
 800dd2c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800dd2e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dd30:	b9d9      	cbnz	r1, 800dd6a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800dd32:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dd34:	2b0a      	cmp	r3, #10
 800dd36:	d036      	beq.n	800dda6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800dd38:	4620      	mov	r0, r4
 800dd3a:	f7ff fc1f 	bl	800d57c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800dd3e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dd40:	2b09      	cmp	r3, #9
 800dd42:	d906      	bls.n	800dd52 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800dd44:	4b18      	ldr	r3, [pc, #96]	; (800dda8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800dd46:	4a19      	ldr	r2, [pc, #100]	; (800ddac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800dd48:	4819      	ldr	r0, [pc, #100]	; (800ddb0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800dd4a:	f240 1103 	movw	r1, #259	; 0x103
 800dd4e:	f00c fb33 	bl	801a3b8 <__assert_func>
 800dd52:	1c5a      	adds	r2, r3, #1
 800dd54:	8622      	strh	r2, [r4, #48]	; 0x30
 800dd56:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800dd58:	4413      	add	r3, r2
 800dd5a:	b29b      	uxth	r3, r3
 800dd5c:	2b09      	cmp	r3, #9
 800dd5e:	bf88      	it	hi
 800dd60:	3b0a      	subhi	r3, #10
 800dd62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800dd66:	8358      	strh	r0, [r3, #26]
 800dd68:	e7e3      	b.n	800dd32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800dd6a:	2b0a      	cmp	r3, #10
 800dd6c:	d01b      	beq.n	800dda6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800dd6e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800dd70:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800dd74:	3901      	subs	r1, #1
 800dd76:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800dd78:	8721      	strh	r1, [r4, #56]	; 0x38
 800dd7a:	1c51      	adds	r1, r2, #1
 800dd7c:	b289      	uxth	r1, r1
 800dd7e:	2901      	cmp	r1, #1
 800dd80:	bf8a      	itet	hi
 800dd82:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800dd86:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800dd88:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800dd8a:	2b09      	cmp	r3, #9
 800dd8c:	d8da      	bhi.n	800dd44 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800dd8e:	1c5a      	adds	r2, r3, #1
 800dd90:	8622      	strh	r2, [r4, #48]	; 0x30
 800dd92:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800dd94:	4413      	add	r3, r2
 800dd96:	b29b      	uxth	r3, r3
 800dd98:	2b09      	cmp	r3, #9
 800dd9a:	bf88      	it	hi
 800dd9c:	3b0a      	subhi	r3, #10
 800dd9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800dda2:	8358      	strh	r0, [r3, #26]
 800dda4:	e7c2      	b.n	800dd2c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800dda6:	bd10      	pop	{r4, pc}
 800dda8:	0801d368 	.word	0x0801d368
 800ddac:	0801d6ed 	.word	0x0801d6ed
 800ddb0:	0801c0c6 	.word	0x0801c0c6

0800ddb4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ddb4:	b538      	push	{r3, r4, r5, lr}
 800ddb6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ddb8:	4604      	mov	r4, r0
 800ddba:	b92a      	cbnz	r2, 800ddc8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ddbc:	4b13      	ldr	r3, [pc, #76]	; (800de0c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ddbe:	4a14      	ldr	r2, [pc, #80]	; (800de10 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ddc0:	4814      	ldr	r0, [pc, #80]	; (800de14 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ddc2:	21d4      	movs	r1, #212	; 0xd4
 800ddc4:	f00c faf8 	bl	801a3b8 <__assert_func>
 800ddc8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ddca:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ddce:	3a01      	subs	r2, #1
 800ddd0:	8b4d      	ldrh	r5, [r1, #26]
 800ddd2:	8602      	strh	r2, [r0, #48]	; 0x30
 800ddd4:	1c5a      	adds	r2, r3, #1
 800ddd6:	b292      	uxth	r2, r2
 800ddd8:	2a09      	cmp	r2, #9
 800ddda:	bf86      	itte	hi
 800dddc:	3b09      	subhi	r3, #9
 800ddde:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800dde0:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800dde2:	f7ff ffa1 	bl	800dd28 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800dde6:	8b23      	ldrh	r3, [r4, #24]
 800dde8:	2b01      	cmp	r3, #1
 800ddea:	bf9c      	itt	ls
 800ddec:	3301      	addls	r3, #1
 800ddee:	8323      	strhls	r3, [r4, #24]
 800ddf0:	8ae3      	ldrh	r3, [r4, #22]
 800ddf2:	b90b      	cbnz	r3, 800ddf8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ddf4:	2302      	movs	r3, #2
 800ddf6:	82e3      	strh	r3, [r4, #22]
 800ddf8:	8ae3      	ldrh	r3, [r4, #22]
 800ddfa:	3b01      	subs	r3, #1
 800ddfc:	b29b      	uxth	r3, r3
 800ddfe:	82e3      	strh	r3, [r4, #22]
 800de00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800de04:	4628      	mov	r0, r5
 800de06:	8265      	strh	r5, [r4, #18]
 800de08:	bd38      	pop	{r3, r4, r5, pc}
 800de0a:	bf00      	nop
 800de0c:	0801bff4 	.word	0x0801bff4
 800de10:	0801d642 	.word	0x0801d642
 800de14:	0801c0c6 	.word	0x0801c0c6

0800de18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800de18:	b538      	push	{r3, r4, r5, lr}
 800de1a:	428a      	cmp	r2, r1
 800de1c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800de1e:	d90c      	bls.n	800de3a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800de20:	b92c      	cbnz	r4, 800de2e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800de22:	4b1c      	ldr	r3, [pc, #112]	; (800de94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800de24:	4a1c      	ldr	r2, [pc, #112]	; (800de98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800de26:	21e0      	movs	r1, #224	; 0xe0
 800de28:	481c      	ldr	r0, [pc, #112]	; (800de9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800de2a:	f00c fac5 	bl	801a3b8 <__assert_func>
 800de2e:	3c01      	subs	r4, #1
 800de30:	8604      	strh	r4, [r0, #48]	; 0x30
 800de32:	4b1b      	ldr	r3, [pc, #108]	; (800dea0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800de34:	4a1b      	ldr	r2, [pc, #108]	; (800dea4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800de36:	21c4      	movs	r1, #196	; 0xc4
 800de38:	e7f6      	b.n	800de28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800de3a:	428c      	cmp	r4, r1
 800de3c:	d203      	bcs.n	800de46 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800de3e:	4b1a      	ldr	r3, [pc, #104]	; (800dea8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800de40:	4a1a      	ldr	r2, [pc, #104]	; (800deac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800de42:	21ca      	movs	r1, #202	; 0xca
 800de44:	e7f0      	b.n	800de28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800de46:	1a64      	subs	r4, r4, r1
 800de48:	8604      	strh	r4, [r0, #48]	; 0x30
 800de4a:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800de4c:	4421      	add	r1, r4
 800de4e:	b289      	uxth	r1, r1
 800de50:	2909      	cmp	r1, #9
 800de52:	bf88      	it	hi
 800de54:	390a      	subhi	r1, #10
 800de56:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800de58:	250a      	movs	r5, #10
 800de5a:	b1ba      	cbz	r2, 800de8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800de5c:	3a01      	subs	r2, #1
 800de5e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800de60:	b292      	uxth	r2, r2
 800de62:	2909      	cmp	r1, #9
 800de64:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800de68:	d903      	bls.n	800de72 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800de6a:	4b11      	ldr	r3, [pc, #68]	; (800deb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800de6c:	4a11      	ldr	r2, [pc, #68]	; (800deb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800de6e:	21e5      	movs	r1, #229	; 0xe5
 800de70:	e7da      	b.n	800de28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800de72:	3101      	adds	r1, #1
 800de74:	8601      	strh	r1, [r0, #48]	; 0x30
 800de76:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800de78:	b901      	cbnz	r1, 800de7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800de7a:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800de7c:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800de7e:	3901      	subs	r1, #1
 800de80:	b289      	uxth	r1, r1
 800de82:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800de84:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800de88:	834c      	strh	r4, [r1, #26]
 800de8a:	e7e6      	b.n	800de5a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800de8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de90:	f7ff bf4a 	b.w	800dd28 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800de94:	0801bff4 	.word	0x0801bff4
 800de98:	0801d41b 	.word	0x0801d41b
 800de9c:	0801c0c6 	.word	0x0801c0c6
 800dea0:	0801c0f2 	.word	0x0801c0f2
 800dea4:	0801d4c5 	.word	0x0801d4c5
 800dea8:	0801d374 	.word	0x0801d374
 800deac:	0801d79c 	.word	0x0801d79c
 800deb0:	0801d380 	.word	0x0801d380
 800deb4:	0801d393 	.word	0x0801d393

0800deb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800deb8:	3a01      	subs	r2, #1
 800deba:	b570      	push	{r4, r5, r6, lr}
 800debc:	b292      	uxth	r2, r2
 800debe:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800dec2:	42b2      	cmp	r2, r6
 800dec4:	d019      	beq.n	800defa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800dec6:	8b04      	ldrh	r4, [r0, #24]
 800dec8:	f831 5b02 	ldrh.w	r5, [r1], #2
 800decc:	4294      	cmp	r4, r2
 800dece:	d805      	bhi.n	800dedc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800ded0:	4b19      	ldr	r3, [pc, #100]	; (800df38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ded2:	4a1a      	ldr	r2, [pc, #104]	; (800df3c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800ded4:	481a      	ldr	r0, [pc, #104]	; (800df40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800ded6:	21c4      	movs	r1, #196	; 0xc4
 800ded8:	f00c fa6e 	bl	801a3b8 <__assert_func>
 800dedc:	8ac4      	ldrh	r4, [r0, #22]
 800dede:	4414      	add	r4, r2
 800dee0:	b2a4      	uxth	r4, r4
 800dee2:	2c01      	cmp	r4, #1
 800dee4:	bf88      	it	hi
 800dee6:	3c02      	subhi	r4, #2
 800dee8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800deec:	3a01      	subs	r2, #1
 800deee:	8a64      	ldrh	r4, [r4, #18]
 800def0:	42ac      	cmp	r4, r5
 800def2:	b292      	uxth	r2, r2
 800def4:	d0e5      	beq.n	800dec2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800def6:	2000      	movs	r0, #0
 800def8:	bd70      	pop	{r4, r5, r6, pc}
 800defa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800defe:	2400      	movs	r4, #0
 800df00:	4413      	add	r3, r2
 800df02:	b2a2      	uxth	r2, r4
 800df04:	429a      	cmp	r2, r3
 800df06:	da14      	bge.n	800df32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800df08:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800df0a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800df0e:	4296      	cmp	r6, r2
 800df10:	d802      	bhi.n	800df18 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800df12:	4b09      	ldr	r3, [pc, #36]	; (800df38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800df14:	4a0b      	ldr	r2, [pc, #44]	; (800df44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800df16:	e7dd      	b.n	800ded4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800df18:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800df1a:	4432      	add	r2, r6
 800df1c:	b292      	uxth	r2, r2
 800df1e:	2a09      	cmp	r2, #9
 800df20:	bf88      	it	hi
 800df22:	3a0a      	subhi	r2, #10
 800df24:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800df28:	3401      	adds	r4, #1
 800df2a:	8b52      	ldrh	r2, [r2, #26]
 800df2c:	42aa      	cmp	r2, r5
 800df2e:	d0e8      	beq.n	800df02 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800df30:	e7e1      	b.n	800def6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800df32:	2001      	movs	r0, #1
 800df34:	e7e0      	b.n	800def8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800df36:	bf00      	nop
 800df38:	0801c0f2 	.word	0x0801c0f2
 800df3c:	0801d820 	.word	0x0801d820
 800df40:	0801c0c6 	.word	0x0801c0c6
 800df44:	0801d4c5 	.word	0x0801d4c5

0800df48 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800df48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df4c:	4605      	mov	r5, r0
 800df4e:	4616      	mov	r6, r2
 800df50:	1c8c      	adds	r4, r1, #2
 800df52:	8809      	ldrh	r1, [r1, #0]
 800df54:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800df58:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800df5c:	42b3      	cmp	r3, r6
 800df5e:	d124      	bne.n	800dfaa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800df60:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800df64:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800df68:	f001 070f 	and.w	r7, r1, #15
 800df6c:	f8cd 8000 	str.w	r8, [sp]
 800df70:	464b      	mov	r3, r9
 800df72:	4652      	mov	r2, sl
 800df74:	4621      	mov	r1, r4
 800df76:	4628      	mov	r0, r5
 800df78:	f7ff ff9e 	bl	800deb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800df7c:	4683      	mov	fp, r0
 800df7e:	b168      	cbz	r0, 800df9c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800df80:	eb0a 0109 	add.w	r1, sl, r9
 800df84:	4441      	add	r1, r8
 800df86:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800df8a:	463a      	mov	r2, r7
 800df8c:	4649      	mov	r1, r9
 800df8e:	4628      	mov	r0, r5
 800df90:	f7ff ff42 	bl	800de18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800df94:	4658      	mov	r0, fp
 800df96:	b003      	add	sp, #12
 800df98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df9c:	eb07 010a 	add.w	r1, r7, sl
 800dfa0:	4449      	add	r1, r9
 800dfa2:	4441      	add	r1, r8
 800dfa4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800dfa8:	e7d2      	b.n	800df50 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800dfaa:	f04f 0b00 	mov.w	fp, #0
 800dfae:	e7f1      	b.n	800df94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800dfb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800dfb0:	b570      	push	{r4, r5, r6, lr}
 800dfb2:	8810      	ldrh	r0, [r2, #0]
 800dfb4:	4298      	cmp	r0, r3
 800dfb6:	d817      	bhi.n	800dfe8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dfb8:	1e48      	subs	r0, r1, #1
 800dfba:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800dfbe:	4298      	cmp	r0, r3
 800dfc0:	d312      	bcc.n	800dfe8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dfc2:	2400      	movs	r4, #0
 800dfc4:	428c      	cmp	r4, r1
 800dfc6:	d20f      	bcs.n	800dfe8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dfc8:	1860      	adds	r0, r4, r1
 800dfca:	1040      	asrs	r0, r0, #1
 800dfcc:	0085      	lsls	r5, r0, #2
 800dfce:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800dfd2:	42b3      	cmp	r3, r6
 800dfd4:	d902      	bls.n	800dfdc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800dfd6:	3001      	adds	r0, #1
 800dfd8:	b284      	uxth	r4, r0
 800dfda:	e7f3      	b.n	800dfc4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dfdc:	d201      	bcs.n	800dfe2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800dfde:	b281      	uxth	r1, r0
 800dfe0:	e7f0      	b.n	800dfc4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dfe2:	442a      	add	r2, r5
 800dfe4:	8850      	ldrh	r0, [r2, #2]
 800dfe6:	bd70      	pop	{r4, r5, r6, pc}
 800dfe8:	2000      	movs	r0, #0
 800dfea:	e7fc      	b.n	800dfe6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800dfec <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800dfec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dff0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800dff2:	886f      	ldrh	r7, [r5, #2]
 800dff4:	4604      	mov	r4, r0
 800dff6:	087f      	lsrs	r7, r7, #1
 800dff8:	260b      	movs	r6, #11
 800dffa:	3e01      	subs	r6, #1
 800dffc:	d01b      	beq.n	800e036 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800dffe:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e000:	b92b      	cbnz	r3, 800e00e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800e002:	4b0e      	ldr	r3, [pc, #56]	; (800e03c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800e004:	4a0e      	ldr	r2, [pc, #56]	; (800e040 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800e006:	480f      	ldr	r0, [pc, #60]	; (800e044 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800e008:	21bf      	movs	r1, #191	; 0xbf
 800e00a:	f00c f9d5 	bl	801a3b8 <__assert_func>
 800e00e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e010:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e014:	462a      	mov	r2, r5
 800e016:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e01a:	4639      	mov	r1, r7
 800e01c:	4643      	mov	r3, r8
 800e01e:	4620      	mov	r0, r4
 800e020:	f7ff ffc6 	bl	800dfb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800e024:	b138      	cbz	r0, 800e036 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800e026:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800e02a:	4642      	mov	r2, r8
 800e02c:	4620      	mov	r0, r4
 800e02e:	f7ff ff8b 	bl	800df48 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800e032:	2800      	cmp	r0, #0
 800e034:	d1e1      	bne.n	800dffa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800e036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e03a:	bf00      	nop
 800e03c:	0801bff4 	.word	0x0801bff4
 800e040:	0801d597 	.word	0x0801d597
 800e044:	0801c0c6 	.word	0x0801c0c6

0800e048 <_ZN8touchgfx8ceil28_4El>:
 800e048:	f110 030f 	adds.w	r3, r0, #15
 800e04c:	d401      	bmi.n	800e052 <_ZN8touchgfx8ceil28_4El+0xa>
 800e04e:	1118      	asrs	r0, r3, #4
 800e050:	4770      	bx	lr
 800e052:	f1c0 0001 	rsb	r0, r0, #1
 800e056:	f010 000f 	ands.w	r0, r0, #15
 800e05a:	bf18      	it	ne
 800e05c:	2001      	movne	r0, #1
 800e05e:	2210      	movs	r2, #16
 800e060:	fb93 f3f2 	sdiv	r3, r3, r2
 800e064:	1a18      	subs	r0, r3, r0
 800e066:	4770      	bx	lr

0800e068 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800e068:	2900      	cmp	r1, #0
 800e06a:	b538      	push	{r3, r4, r5, lr}
 800e06c:	dc05      	bgt.n	800e07a <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800e06e:	4b0f      	ldr	r3, [pc, #60]	; (800e0ac <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800e070:	4a0f      	ldr	r2, [pc, #60]	; (800e0b0 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800e072:	4810      	ldr	r0, [pc, #64]	; (800e0b4 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800e074:	21f7      	movs	r1, #247	; 0xf7
 800e076:	f00c f99f 	bl	801a3b8 <__assert_func>
 800e07a:	2800      	cmp	r0, #0
 800e07c:	db06      	blt.n	800e08c <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800e07e:	fb90 f4f1 	sdiv	r4, r0, r1
 800e082:	6014      	str	r4, [r2, #0]
 800e084:	fb01 0114 	mls	r1, r1, r4, r0
 800e088:	6019      	str	r1, [r3, #0]
 800e08a:	bd38      	pop	{r3, r4, r5, pc}
 800e08c:	4240      	negs	r0, r0
 800e08e:	fb90 f4f1 	sdiv	r4, r0, r1
 800e092:	4265      	negs	r5, r4
 800e094:	fb01 0014 	mls	r0, r1, r4, r0
 800e098:	6015      	str	r5, [r2, #0]
 800e09a:	6018      	str	r0, [r3, #0]
 800e09c:	2800      	cmp	r0, #0
 800e09e:	d0f4      	beq.n	800e08a <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800e0a0:	6810      	ldr	r0, [r2, #0]
 800e0a2:	3801      	subs	r0, #1
 800e0a4:	6010      	str	r0, [r2, #0]
 800e0a6:	6818      	ldr	r0, [r3, #0]
 800e0a8:	1a09      	subs	r1, r1, r0
 800e0aa:	e7ed      	b.n	800e088 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800e0ac:	0801d8f1 	.word	0x0801d8f1
 800e0b0:	0801d930 	.word	0x0801d930
 800e0b4:	0801d901 	.word	0x0801d901

0800e0b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800e0b8:	b570      	push	{r4, r5, r6, lr}
 800e0ba:	694a      	ldr	r2, [r1, #20]
 800e0bc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800e0be:	684b      	ldr	r3, [r1, #4]
 800e0c0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800e0c2:	1b54      	subs	r4, r2, r5
 800e0c4:	f000 8106 	beq.w	800e2d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800e0c8:	1b9b      	subs	r3, r3, r6
 800e0ca:	d003      	beq.n	800e0d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800e0cc:	4363      	muls	r3, r4
 800e0ce:	2210      	movs	r2, #16
 800e0d0:	fb93 f3f2 	sdiv	r3, r3, r2
 800e0d4:	680c      	ldr	r4, [r1, #0]
 800e0d6:	698a      	ldr	r2, [r1, #24]
 800e0d8:	1b65      	subs	r5, r4, r5
 800e0da:	f000 80fd 	beq.w	800e2d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800e0de:	1b92      	subs	r2, r2, r6
 800e0e0:	d003      	beq.n	800e0ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800e0e2:	436a      	muls	r2, r5
 800e0e4:	2410      	movs	r4, #16
 800e0e6:	fb92 f2f4 	sdiv	r2, r2, r4
 800e0ea:	1a9b      	subs	r3, r3, r2
 800e0ec:	ee07 3a90 	vmov	s15, r3
 800e0f0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800e314 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800e0f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e0f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e0fc:	ee67 7a84 	vmul.f32	s15, s15, s8
 800e100:	460a      	mov	r2, r1
 800e102:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800e106:	4603      	mov	r3, r0
 800e108:	f100 040c 	add.w	r4, r0, #12
 800e10c:	eeb1 6a43 	vneg.f32	s12, s6
 800e110:	edd2 7a02 	vldr	s15, [r2, #8]
 800e114:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800e118:	3214      	adds	r2, #20
 800e11a:	ece3 6a01 	vstmia	r3!, {s13}
 800e11e:	ed52 7a02 	vldr	s15, [r2, #-8]
 800e122:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e126:	429c      	cmp	r4, r3
 800e128:	edc3 7a02 	vstr	s15, [r3, #8]
 800e12c:	ed52 7a01 	vldr	s15, [r2, #-4]
 800e130:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e134:	edc3 7a05 	vstr	s15, [r3, #20]
 800e138:	d1ea      	bne.n	800e110 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800e13a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e13c:	698b      	ldr	r3, [r1, #24]
 800e13e:	edd0 4a02 	vldr	s9, [r0, #8]
 800e142:	edd0 3a00 	vldr	s7, [r0]
 800e146:	edd0 6a01 	vldr	s13, [r0, #4]
 800e14a:	ed90 5a05 	vldr	s10, [r0, #20]
 800e14e:	ed90 2a03 	vldr	s4, [r0, #12]
 800e152:	edd0 5a04 	vldr	s11, [r0, #16]
 800e156:	ed90 1a07 	vldr	s2, [r0, #28]
 800e15a:	edd0 2a06 	vldr	s5, [r0, #24]
 800e15e:	1a9b      	subs	r3, r3, r2
 800e160:	ee07 3a90 	vmov	s15, r3
 800e164:	684b      	ldr	r3, [r1, #4]
 800e166:	1a9b      	subs	r3, r3, r2
 800e168:	ee07 3a10 	vmov	s14, r3
 800e16c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e170:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800e174:	ee67 7a84 	vmul.f32	s15, s15, s8
 800e178:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800e17c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e180:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800e184:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e188:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800e18c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e190:	ee32 5a45 	vsub.f32	s10, s4, s10
 800e194:	ee67 7a83 	vmul.f32	s15, s15, s6
 800e198:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800e19c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e19e:	694a      	ldr	r2, [r1, #20]
 800e1a0:	1b13      	subs	r3, r2, r4
 800e1a2:	ee07 3a10 	vmov	s14, r3
 800e1a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e1aa:	680b      	ldr	r3, [r1, #0]
 800e1ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e1b0:	1b1b      	subs	r3, r3, r4
 800e1b2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800e1b6:	ee07 3a10 	vmov	s14, r3
 800e1ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e1be:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e1c2:	eee6 4a87 	vfma.f32	s9, s13, s14
 800e1c6:	ee64 4a86 	vmul.f32	s9, s9, s12
 800e1ca:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800e1ce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e1d0:	698b      	ldr	r3, [r1, #24]
 800e1d2:	1a9b      	subs	r3, r3, r2
 800e1d4:	ee06 3a90 	vmov	s13, r3
 800e1d8:	684b      	ldr	r3, [r1, #4]
 800e1da:	1a9b      	subs	r3, r3, r2
 800e1dc:	ee07 3a10 	vmov	s14, r3
 800e1e0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e1e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e1e8:	ee66 6a84 	vmul.f32	s13, s13, s8
 800e1ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e1f0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800e1f4:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e1f8:	ee66 6a83 	vmul.f32	s13, s13, s6
 800e1fc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800e200:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e202:	694a      	ldr	r2, [r1, #20]
 800e204:	1b13      	subs	r3, r2, r4
 800e206:	ee07 3a10 	vmov	s14, r3
 800e20a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e20e:	680b      	ldr	r3, [r1, #0]
 800e210:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e214:	1b1b      	subs	r3, r3, r4
 800e216:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800e21a:	ee07 3a10 	vmov	s14, r3
 800e21e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e222:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e226:	eea5 5a87 	vfma.f32	s10, s11, s14
 800e22a:	edd0 5a08 	vldr	s11, [r0, #32]
 800e22e:	ee25 5a06 	vmul.f32	s10, s10, s12
 800e232:	ee31 1a65 	vsub.f32	s2, s2, s11
 800e236:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800e23a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e23c:	698b      	ldr	r3, [r1, #24]
 800e23e:	1a9b      	subs	r3, r3, r2
 800e240:	ee07 3a10 	vmov	s14, r3
 800e244:	684b      	ldr	r3, [r1, #4]
 800e246:	1a9b      	subs	r3, r3, r2
 800e248:	ee01 3a90 	vmov	s3, r3
 800e24c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e250:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800e254:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e258:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800e25c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800e260:	ee61 1a84 	vmul.f32	s3, s3, s8
 800e264:	eea1 7a21 	vfma.f32	s14, s2, s3
 800e268:	ee27 7a03 	vmul.f32	s14, s14, s6
 800e26c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800e270:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e272:	694a      	ldr	r2, [r1, #20]
 800e274:	1b13      	subs	r3, r2, r4
 800e276:	ee03 3a10 	vmov	s6, r3
 800e27a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800e27e:	680b      	ldr	r3, [r1, #0]
 800e280:	ee23 3a04 	vmul.f32	s6, s6, s8
 800e284:	1b1b      	subs	r3, r3, r4
 800e286:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800e28a:	ee03 3a10 	vmov	s6, r3
 800e28e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800e292:	ee23 4a04 	vmul.f32	s8, s6, s8
 800e296:	eee1 5a04 	vfma.f32	s11, s2, s8
 800e29a:	ee25 6a86 	vmul.f32	s12, s11, s12
 800e29e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800e2a2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800e2a6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800e2aa:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800e2ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e2b2:	dd13      	ble.n	800e2dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800e2b4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e2b8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800e2bc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e2be:	eee3 7a87 	vfma.f32	s15, s7, s14
 800e2c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e2ca:	dd15      	ble.n	800e2f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800e2cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e2d0:	6403      	str	r3, [r0, #64]	; 0x40
 800e2d2:	bd70      	pop	{r4, r5, r6, pc}
 800e2d4:	4623      	mov	r3, r4
 800e2d6:	e6fd      	b.n	800e0d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800e2d8:	462a      	mov	r2, r5
 800e2da:	e706      	b.n	800e0ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800e2dc:	d502      	bpl.n	800e2e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800e2de:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e2e2:	e7e9      	b.n	800e2b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800e2e4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800e2e8:	eea3 2a85 	vfma.f32	s4, s7, s10
 800e2ec:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800e2f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e2f4:	dade      	bge.n	800e2b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800e2f6:	e7f2      	b.n	800e2de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800e2f8:	d502      	bpl.n	800e300 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800e2fa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e2fe:	e7e7      	b.n	800e2d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800e300:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800e304:	eee3 4a86 	vfma.f32	s9, s7, s12
 800e308:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800e30c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e310:	dadc      	bge.n	800e2cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800e312:	e7f2      	b.n	800e2fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800e314:	3d800000 	.word	0x3d800000

0800e318 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800e318:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e31c:	f04f 0814 	mov.w	r8, #20
 800e320:	fb08 f903 	mul.w	r9, r8, r3
 800e324:	eb02 0a09 	add.w	sl, r2, r9
 800e328:	4604      	mov	r4, r0
 800e32a:	f8da 0004 	ldr.w	r0, [sl, #4]
 800e32e:	4617      	mov	r7, r2
 800e330:	460d      	mov	r5, r1
 800e332:	461e      	mov	r6, r3
 800e334:	f7ff fe88 	bl	800e048 <_ZN8touchgfx8ceil28_4El>
 800e338:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e33a:	6160      	str	r0, [r4, #20]
 800e33c:	fb08 f803 	mul.w	r8, r8, r3
 800e340:	eb07 0b08 	add.w	fp, r7, r8
 800e344:	9001      	str	r0, [sp, #4]
 800e346:	f8db 0004 	ldr.w	r0, [fp, #4]
 800e34a:	f7ff fe7d 	bl	800e048 <_ZN8touchgfx8ceil28_4El>
 800e34e:	9a01      	ldr	r2, [sp, #4]
 800e350:	1a80      	subs	r0, r0, r2
 800e352:	61a0      	str	r0, [r4, #24]
 800e354:	2800      	cmp	r0, #0
 800e356:	f000 8088 	beq.w	800e46a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800e35a:	f857 3009 	ldr.w	r3, [r7, r9]
 800e35e:	f857 c008 	ldr.w	ip, [r7, r8]
 800e362:	f8da 1004 	ldr.w	r1, [sl, #4]
 800e366:	f8db 0004 	ldr.w	r0, [fp, #4]
 800e36a:	ebac 0c03 	sub.w	ip, ip, r3
 800e36e:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800e372:	fb0b f202 	mul.w	r2, fp, r2
 800e376:	fb0c 2211 	mls	r2, ip, r1, r2
 800e37a:	1a40      	subs	r0, r0, r1
 800e37c:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800e380:	fb00 2003 	mla	r0, r0, r3, r2
 800e384:	3801      	subs	r0, #1
 800e386:	f104 0310 	add.w	r3, r4, #16
 800e38a:	4622      	mov	r2, r4
 800e38c:	4641      	mov	r1, r8
 800e38e:	4440      	add	r0, r8
 800e390:	f7ff fe6a 	bl	800e068 <_ZN8touchgfx11floorDivModEllRlS0_>
 800e394:	f104 0308 	add.w	r3, r4, #8
 800e398:	1d22      	adds	r2, r4, #4
 800e39a:	4641      	mov	r1, r8
 800e39c:	4658      	mov	r0, fp
 800e39e:	f7ff fe63 	bl	800e068 <_ZN8touchgfx11floorDivModEllRlS0_>
 800e3a2:	f8c4 800c 	str.w	r8, [r4, #12]
 800e3a6:	f8da 3004 	ldr.w	r3, [sl, #4]
 800e3aa:	6962      	ldr	r2, [r4, #20]
 800e3ac:	eddf 6a31 	vldr	s13, [pc, #196]	; 800e474 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800e3b0:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800e3b4:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800e3b8:	ee07 3a10 	vmov	s14, r3
 800e3bc:	6822      	ldr	r2, [r4, #0]
 800e3be:	f857 3009 	ldr.w	r3, [r7, r9]
 800e3c2:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800e3c6:	ee07 3a90 	vmov	s15, r3
 800e3ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e3ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e3d2:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800e3d6:	ee27 7a26 	vmul.f32	s14, s14, s13
 800e3da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e3de:	edd3 6a00 	vldr	s13, [r3]
 800e3e2:	eee6 6a07 	vfma.f32	s13, s12, s14
 800e3e6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e3ea:	eee6 6a27 	vfma.f32	s13, s12, s15
 800e3ee:	edc4 6a07 	vstr	s13, [r4, #28]
 800e3f2:	edd4 6a01 	vldr	s13, [r4, #4]
 800e3f6:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800e3fa:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800e3fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e402:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e406:	ed84 6a08 	vstr	s12, [r4, #32]
 800e40a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800e40c:	6262      	str	r2, [r4, #36]	; 0x24
 800e40e:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800e412:	ed93 6a03 	vldr	s12, [r3, #12]
 800e416:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e41a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e41e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800e422:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800e426:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e42a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800e42e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e432:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800e436:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800e438:	6322      	str	r2, [r4, #48]	; 0x30
 800e43a:	ed93 6a06 	vldr	s12, [r3, #24]
 800e43e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800e442:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e446:	eeb0 7a46 	vmov.f32	s14, s12
 800e44a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800e44e:	eea6 7a27 	vfma.f32	s14, s12, s15
 800e452:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800e456:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800e45a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800e45e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e462:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800e466:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800e468:	63e3      	str	r3, [r4, #60]	; 0x3c
 800e46a:	4620      	mov	r0, r4
 800e46c:	b003      	add	sp, #12
 800e46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e472:	bf00      	nop
 800e474:	3d800000 	.word	0x3d800000

0800e478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800e478:	4b01      	ldr	r3, [pc, #4]	; (800e480 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800e47a:	6018      	str	r0, [r3, #0]
 800e47c:	4770      	bx	lr
 800e47e:	bf00      	nop
 800e480:	2000a0f4 	.word	0x2000a0f4

0800e484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800e484:	4b06      	ldr	r3, [pc, #24]	; (800e4a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800e486:	881a      	ldrh	r2, [r3, #0]
 800e488:	4282      	cmp	r2, r0
 800e48a:	d807      	bhi.n	800e49c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800e48c:	4b05      	ldr	r3, [pc, #20]	; (800e4a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800e48e:	881b      	ldrh	r3, [r3, #0]
 800e490:	4413      	add	r3, r2
 800e492:	4298      	cmp	r0, r3
 800e494:	bfac      	ite	ge
 800e496:	2000      	movge	r0, #0
 800e498:	2001      	movlt	r0, #1
 800e49a:	4770      	bx	lr
 800e49c:	2000      	movs	r0, #0
 800e49e:	4770      	bx	lr
 800e4a0:	2000a114 	.word	0x2000a114
 800e4a4:	2000a118 	.word	0x2000a118

0800e4a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800e4a8:	b508      	push	{r3, lr}
 800e4aa:	4601      	mov	r1, r0
 800e4ac:	f7ff ffea 	bl	800e484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800e4b0:	b118      	cbz	r0, 800e4ba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800e4b2:	4b02      	ldr	r3, [pc, #8]	; (800e4bc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800e4b4:	681b      	ldr	r3, [r3, #0]
 800e4b6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800e4ba:	bd08      	pop	{r3, pc}
 800e4bc:	2000a0f8 	.word	0x2000a0f8

0800e4c0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800e4c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4c4:	4d28      	ldr	r5, [pc, #160]	; (800e568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800e4c6:	682b      	ldr	r3, [r5, #0]
 800e4c8:	2b00      	cmp	r3, #0
 800e4ca:	d04a      	beq.n	800e562 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e4cc:	4a27      	ldr	r2, [pc, #156]	; (800e56c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800e4ce:	4e28      	ldr	r6, [pc, #160]	; (800e570 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800e4d0:	8810      	ldrh	r0, [r2, #0]
 800e4d2:	f8b6 8000 	ldrh.w	r8, [r6]
 800e4d6:	4c27      	ldr	r4, [pc, #156]	; (800e574 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800e4d8:	4f27      	ldr	r7, [pc, #156]	; (800e578 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800e4da:	4440      	add	r0, r8
 800e4dc:	1c41      	adds	r1, r0, #1
 800e4de:	f021 0101 	bic.w	r1, r1, #1
 800e4e2:	0409      	lsls	r1, r1, #16
 800e4e4:	0c09      	lsrs	r1, r1, #16
 800e4e6:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800e4ea:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800e4ee:	eb03 020e 	add.w	r2, r3, lr
 800e4f2:	eb0e 010c 	add.w	r1, lr, ip
 800e4f6:	6022      	str	r2, [r4, #0]
 800e4f8:	185a      	adds	r2, r3, r1
 800e4fa:	603a      	str	r2, [r7, #0]
 800e4fc:	220e      	movs	r2, #14
 800e4fe:	fb02 f208 	mul.w	r2, r2, r8
 800e502:	3203      	adds	r2, #3
 800e504:	f022 0203 	bic.w	r2, r2, #3
 800e508:	4411      	add	r1, r2
 800e50a:	440b      	add	r3, r1
 800e50c:	491b      	ldr	r1, [pc, #108]	; (800e57c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800e50e:	600b      	str	r3, [r1, #0]
 800e510:	491b      	ldr	r1, [pc, #108]	; (800e580 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800e512:	2300      	movs	r3, #0
 800e514:	800b      	strh	r3, [r1, #0]
 800e516:	491b      	ldr	r1, [pc, #108]	; (800e584 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800e518:	6809      	ldr	r1, [r1, #0]
 800e51a:	eba1 010e 	sub.w	r1, r1, lr
 800e51e:	eba1 010c 	sub.w	r1, r1, ip
 800e522:	1a8a      	subs	r2, r1, r2
 800e524:	4918      	ldr	r1, [pc, #96]	; (800e588 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800e526:	600a      	str	r2, [r1, #0]
 800e528:	4a18      	ldr	r2, [pc, #96]	; (800e58c <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800e52a:	469c      	mov	ip, r3
 800e52c:	8013      	strh	r3, [r2, #0]
 800e52e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e532:	4283      	cmp	r3, r0
 800e534:	d10d      	bne.n	800e552 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800e536:	8835      	ldrh	r5, [r6, #0]
 800e538:	6838      	ldr	r0, [r7, #0]
 800e53a:	2300      	movs	r3, #0
 800e53c:	240e      	movs	r4, #14
 800e53e:	429d      	cmp	r5, r3
 800e540:	d90f      	bls.n	800e562 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e542:	fb04 0203 	mla	r2, r4, r3, r0
 800e546:	3301      	adds	r3, #1
 800e548:	7b11      	ldrb	r1, [r2, #12]
 800e54a:	f36f 1145 	bfc	r1, #5, #1
 800e54e:	7311      	strb	r1, [r2, #12]
 800e550:	e7f5      	b.n	800e53e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800e552:	682a      	ldr	r2, [r5, #0]
 800e554:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800e558:	6822      	ldr	r2, [r4, #0]
 800e55a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800e55e:	3301      	adds	r3, #1
 800e560:	e7e7      	b.n	800e532 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800e562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e566:	bf00      	nop
 800e568:	2000a0f8 	.word	0x2000a0f8
 800e56c:	2000a114 	.word	0x2000a114
 800e570:	2000a118 	.word	0x2000a118
 800e574:	2000a10c 	.word	0x2000a10c
 800e578:	2000a0fc 	.word	0x2000a0fc
 800e57c:	2000a104 	.word	0x2000a104
 800e580:	2000a116 	.word	0x2000a116
 800e584:	2000a100 	.word	0x2000a100
 800e588:	2000a110 	.word	0x2000a110
 800e58c:	2000a108 	.word	0x2000a108

0800e590 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e590:	b510      	push	{r4, lr}
 800e592:	4b10      	ldr	r3, [pc, #64]	; (800e5d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800e594:	681b      	ldr	r3, [r3, #0]
 800e596:	b9db      	cbnz	r3, 800e5d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e598:	b1d1      	cbz	r1, 800e5d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e59a:	4b0f      	ldr	r3, [pc, #60]	; (800e5d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800e59c:	801a      	strh	r2, [r3, #0]
 800e59e:	4b0f      	ldr	r3, [pc, #60]	; (800e5dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800e5a0:	881b      	ldrh	r3, [r3, #0]
 800e5a2:	b292      	uxth	r2, r2
 800e5a4:	240e      	movs	r4, #14
 800e5a6:	4413      	add	r3, r2
 800e5a8:	4362      	muls	r2, r4
 800e5aa:	2406      	movs	r4, #6
 800e5ac:	fb04 2203 	mla	r2, r4, r3, r2
 800e5b0:	428a      	cmp	r2, r1
 800e5b2:	d305      	bcc.n	800e5c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800e5b4:	4b0a      	ldr	r3, [pc, #40]	; (800e5e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800e5b6:	4a0b      	ldr	r2, [pc, #44]	; (800e5e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800e5b8:	480b      	ldr	r0, [pc, #44]	; (800e5e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800e5ba:	2135      	movs	r1, #53	; 0x35
 800e5bc:	f00b fefc 	bl	801a3b8 <__assert_func>
 800e5c0:	4b0a      	ldr	r3, [pc, #40]	; (800e5ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800e5c2:	6019      	str	r1, [r3, #0]
 800e5c4:	4b0a      	ldr	r3, [pc, #40]	; (800e5f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800e5c6:	6018      	str	r0, [r3, #0]
 800e5c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5cc:	f7ff bf78 	b.w	800e4c0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e5d0:	bd10      	pop	{r4, pc}
 800e5d2:	bf00      	nop
 800e5d4:	2000a104 	.word	0x2000a104
 800e5d8:	2000a118 	.word	0x2000a118
 800e5dc:	2000a114 	.word	0x2000a114
 800e5e0:	0801d9ce 	.word	0x0801d9ce
 800e5e4:	0801da63 	.word	0x0801da63
 800e5e8:	0801d9a9 	.word	0x0801d9a9
 800e5ec:	2000a100 	.word	0x2000a100
 800e5f0:	2000a0f8 	.word	0x2000a0f8

0800e5f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e5f4:	b470      	push	{r4, r5, r6}
 800e5f6:	4c07      	ldr	r4, [pc, #28]	; (800e614 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e5f8:	6826      	ldr	r6, [r4, #0]
 800e5fa:	4605      	mov	r5, r0
 800e5fc:	4610      	mov	r0, r2
 800e5fe:	9a03      	ldr	r2, [sp, #12]
 800e600:	b936      	cbnz	r6, 800e610 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e602:	6025      	str	r5, [r4, #0]
 800e604:	4c04      	ldr	r4, [pc, #16]	; (800e618 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e606:	8021      	strh	r1, [r4, #0]
 800e608:	bc70      	pop	{r4, r5, r6}
 800e60a:	4619      	mov	r1, r3
 800e60c:	f7ff bfc0 	b.w	800e590 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e610:	bc70      	pop	{r4, r5, r6}
 800e612:	4770      	bx	lr
 800e614:	2000a11c 	.word	0x2000a11c
 800e618:	2000a114 	.word	0x2000a114

0800e61c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e61c:	b508      	push	{r3, lr}
 800e61e:	4b14      	ldr	r3, [pc, #80]	; (800e670 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800e620:	6819      	ldr	r1, [r3, #0]
 800e622:	b931      	cbnz	r1, 800e632 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800e624:	4b13      	ldr	r3, [pc, #76]	; (800e674 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800e626:	4a14      	ldr	r2, [pc, #80]	; (800e678 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800e628:	4814      	ldr	r0, [pc, #80]	; (800e67c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e62a:	f240 4186 	movw	r1, #1158	; 0x486
 800e62e:	f00b fec3 	bl	801a3b8 <__assert_func>
 800e632:	4a13      	ldr	r2, [pc, #76]	; (800e680 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e634:	8803      	ldrh	r3, [r0, #0]
 800e636:	8812      	ldrh	r2, [r2, #0]
 800e638:	4293      	cmp	r3, r2
 800e63a:	d204      	bcs.n	800e646 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800e63c:	2214      	movs	r2, #20
 800e63e:	fb02 1303 	mla	r3, r2, r3, r1
 800e642:	8918      	ldrh	r0, [r3, #8]
 800e644:	bd08      	pop	{r3, pc}
 800e646:	490f      	ldr	r1, [pc, #60]	; (800e684 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800e648:	8809      	ldrh	r1, [r1, #0]
 800e64a:	4411      	add	r1, r2
 800e64c:	428b      	cmp	r3, r1
 800e64e:	da06      	bge.n	800e65e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800e650:	1a9b      	subs	r3, r3, r2
 800e652:	4a0d      	ldr	r2, [pc, #52]	; (800e688 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800e654:	6812      	ldr	r2, [r2, #0]
 800e656:	210e      	movs	r1, #14
 800e658:	fb01 2303 	mla	r3, r1, r3, r2
 800e65c:	e7f1      	b.n	800e642 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800e65e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e662:	4293      	cmp	r3, r2
 800e664:	bf0a      	itet	eq
 800e666:	4b09      	ldreq	r3, [pc, #36]	; (800e68c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800e668:	2000      	movne	r0, #0
 800e66a:	8818      	ldrheq	r0, [r3, #0]
 800e66c:	e7ea      	b.n	800e644 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800e66e:	bf00      	nop
 800e670:	2000a11c 	.word	0x2000a11c
 800e674:	0801da27 	.word	0x0801da27
 800e678:	0801db10 	.word	0x0801db10
 800e67c:	0801d9a9 	.word	0x0801d9a9
 800e680:	2000a114 	.word	0x2000a114
 800e684:	2000a118 	.word	0x2000a118
 800e688:	2000a0fc 	.word	0x2000a0fc
 800e68c:	2000a088 	.word	0x2000a088

0800e690 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800e690:	b508      	push	{r3, lr}
 800e692:	4b14      	ldr	r3, [pc, #80]	; (800e6e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800e694:	6819      	ldr	r1, [r3, #0]
 800e696:	b931      	cbnz	r1, 800e6a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800e698:	4b13      	ldr	r3, [pc, #76]	; (800e6e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800e69a:	4a14      	ldr	r2, [pc, #80]	; (800e6ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800e69c:	4814      	ldr	r0, [pc, #80]	; (800e6f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800e69e:	f240 419a 	movw	r1, #1178	; 0x49a
 800e6a2:	f00b fe89 	bl	801a3b8 <__assert_func>
 800e6a6:	4a13      	ldr	r2, [pc, #76]	; (800e6f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800e6a8:	8803      	ldrh	r3, [r0, #0]
 800e6aa:	8812      	ldrh	r2, [r2, #0]
 800e6ac:	4293      	cmp	r3, r2
 800e6ae:	d204      	bcs.n	800e6ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800e6b0:	2214      	movs	r2, #20
 800e6b2:	fb02 1303 	mla	r3, r2, r3, r1
 800e6b6:	8958      	ldrh	r0, [r3, #10]
 800e6b8:	bd08      	pop	{r3, pc}
 800e6ba:	490f      	ldr	r1, [pc, #60]	; (800e6f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800e6bc:	8809      	ldrh	r1, [r1, #0]
 800e6be:	4411      	add	r1, r2
 800e6c0:	428b      	cmp	r3, r1
 800e6c2:	da06      	bge.n	800e6d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800e6c4:	1a9b      	subs	r3, r3, r2
 800e6c6:	4a0d      	ldr	r2, [pc, #52]	; (800e6fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800e6c8:	6812      	ldr	r2, [r2, #0]
 800e6ca:	210e      	movs	r1, #14
 800e6cc:	fb01 2303 	mla	r3, r1, r3, r2
 800e6d0:	e7f1      	b.n	800e6b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800e6d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e6d6:	4293      	cmp	r3, r2
 800e6d8:	bf0a      	itet	eq
 800e6da:	4b09      	ldreq	r3, [pc, #36]	; (800e700 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800e6dc:	2000      	movne	r0, #0
 800e6de:	8818      	ldrheq	r0, [r3, #0]
 800e6e0:	e7ea      	b.n	800e6b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800e6e2:	bf00      	nop
 800e6e4:	2000a11c 	.word	0x2000a11c
 800e6e8:	0801da27 	.word	0x0801da27
 800e6ec:	0801db3c 	.word	0x0801db3c
 800e6f0:	0801d9a9 	.word	0x0801d9a9
 800e6f4:	2000a114 	.word	0x2000a114
 800e6f8:	2000a118 	.word	0x2000a118
 800e6fc:	2000a0fc 	.word	0x2000a0fc
 800e700:	2000a08a 	.word	0x2000a08a

0800e704 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800e704:	b510      	push	{r4, lr}
 800e706:	4b23      	ldr	r3, [pc, #140]	; (800e794 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800e708:	681c      	ldr	r4, [r3, #0]
 800e70a:	b934      	cbnz	r4, 800e71a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800e70c:	4b22      	ldr	r3, [pc, #136]	; (800e798 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800e70e:	4a23      	ldr	r2, [pc, #140]	; (800e79c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800e710:	4823      	ldr	r0, [pc, #140]	; (800e7a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800e712:	f240 41ae 	movw	r1, #1198	; 0x4ae
 800e716:	f00b fe4f 	bl	801a3b8 <__assert_func>
 800e71a:	4a22      	ldr	r2, [pc, #136]	; (800e7a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800e71c:	880b      	ldrh	r3, [r1, #0]
 800e71e:	8812      	ldrh	r2, [r2, #0]
 800e720:	4293      	cmp	r3, r2
 800e722:	d211      	bcs.n	800e748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800e724:	2214      	movs	r2, #20
 800e726:	fb02 4303 	mla	r3, r2, r3, r4
 800e72a:	8a1a      	ldrh	r2, [r3, #16]
 800e72c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800e730:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800e734:	8a5b      	ldrh	r3, [r3, #18]
 800e736:	8004      	strh	r4, [r0, #0]
 800e738:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e73c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e740:	8041      	strh	r1, [r0, #2]
 800e742:	8082      	strh	r2, [r0, #4]
 800e744:	80c3      	strh	r3, [r0, #6]
 800e746:	e00e      	b.n	800e766 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e748:	4917      	ldr	r1, [pc, #92]	; (800e7a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800e74a:	8809      	ldrh	r1, [r1, #0]
 800e74c:	4411      	add	r1, r2
 800e74e:	428b      	cmp	r3, r1
 800e750:	da0a      	bge.n	800e768 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800e752:	1a9b      	subs	r3, r3, r2
 800e754:	4a15      	ldr	r2, [pc, #84]	; (800e7ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800e756:	6812      	ldr	r2, [r2, #0]
 800e758:	210e      	movs	r1, #14
 800e75a:	fb01 2303 	mla	r3, r1, r3, r2
 800e75e:	681a      	ldr	r2, [r3, #0]
 800e760:	6002      	str	r2, [r0, #0]
 800e762:	685a      	ldr	r2, [r3, #4]
 800e764:	6042      	str	r2, [r0, #4]
 800e766:	bd10      	pop	{r4, pc}
 800e768:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e76c:	4293      	cmp	r3, r2
 800e76e:	d10b      	bne.n	800e788 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800e770:	4b0f      	ldr	r3, [pc, #60]	; (800e7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800e772:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e776:	4b0f      	ldr	r3, [pc, #60]	; (800e7b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800e778:	8081      	strh	r1, [r0, #4]
 800e77a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e77e:	80c2      	strh	r2, [r0, #6]
 800e780:	2300      	movs	r3, #0
 800e782:	8003      	strh	r3, [r0, #0]
 800e784:	8043      	strh	r3, [r0, #2]
 800e786:	e7ee      	b.n	800e766 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e788:	2300      	movs	r3, #0
 800e78a:	8003      	strh	r3, [r0, #0]
 800e78c:	8043      	strh	r3, [r0, #2]
 800e78e:	8083      	strh	r3, [r0, #4]
 800e790:	e7d8      	b.n	800e744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800e792:	bf00      	nop
 800e794:	2000a11c 	.word	0x2000a11c
 800e798:	0801da27 	.word	0x0801da27
 800e79c:	0801daa9 	.word	0x0801daa9
 800e7a0:	0801d9a9 	.word	0x0801d9a9
 800e7a4:	2000a114 	.word	0x2000a114
 800e7a8:	2000a118 	.word	0x2000a118
 800e7ac:	2000a0fc 	.word	0x2000a0fc
 800e7b0:	2000a088 	.word	0x2000a088
 800e7b4:	2000a08a 	.word	0x2000a08a

0800e7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800e7b8:	4b18      	ldr	r3, [pc, #96]	; (800e81c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800e7ba:	681b      	ldr	r3, [r3, #0]
 800e7bc:	b34b      	cbz	r3, 800e812 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e7be:	4a18      	ldr	r2, [pc, #96]	; (800e820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800e7c0:	8800      	ldrh	r0, [r0, #0]
 800e7c2:	8812      	ldrh	r2, [r2, #0]
 800e7c4:	4290      	cmp	r0, r2
 800e7c6:	d211      	bcs.n	800e7ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800e7c8:	2214      	movs	r2, #20
 800e7ca:	fb02 3300 	mla	r3, r2, r0, r3
 800e7ce:	8a1a      	ldrh	r2, [r3, #16]
 800e7d0:	8919      	ldrh	r1, [r3, #8]
 800e7d2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e7d6:	428a      	cmp	r2, r1
 800e7d8:	db1d      	blt.n	800e816 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e7da:	8a58      	ldrh	r0, [r3, #18]
 800e7dc:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800e7e0:	895b      	ldrh	r3, [r3, #10]
 800e7e2:	4298      	cmp	r0, r3
 800e7e4:	bfac      	ite	ge
 800e7e6:	2000      	movge	r0, #0
 800e7e8:	2001      	movlt	r0, #1
 800e7ea:	4770      	bx	lr
 800e7ec:	4b0d      	ldr	r3, [pc, #52]	; (800e824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800e7ee:	881b      	ldrh	r3, [r3, #0]
 800e7f0:	4413      	add	r3, r2
 800e7f2:	4298      	cmp	r0, r3
 800e7f4:	da0d      	bge.n	800e812 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e7f6:	4b0c      	ldr	r3, [pc, #48]	; (800e828 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800e7f8:	681b      	ldr	r3, [r3, #0]
 800e7fa:	1a80      	subs	r0, r0, r2
 800e7fc:	220e      	movs	r2, #14
 800e7fe:	fb02 3300 	mla	r3, r2, r0, r3
 800e802:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800e806:	891a      	ldrh	r2, [r3, #8]
 800e808:	4291      	cmp	r1, r2
 800e80a:	db04      	blt.n	800e816 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e80c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800e810:	e7e6      	b.n	800e7e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800e812:	2000      	movs	r0, #0
 800e814:	4770      	bx	lr
 800e816:	2001      	movs	r0, #1
 800e818:	4770      	bx	lr
 800e81a:	bf00      	nop
 800e81c:	2000a11c 	.word	0x2000a11c
 800e820:	2000a114 	.word	0x2000a114
 800e824:	2000a118 	.word	0x2000a118
 800e828:	2000a0fc 	.word	0x2000a0fc

0800e82c <_ZNK8touchgfx6Bitmap7getDataEv>:
 800e82c:	b508      	push	{r3, lr}
 800e82e:	4b12      	ldr	r3, [pc, #72]	; (800e878 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800e830:	6819      	ldr	r1, [r3, #0]
 800e832:	b931      	cbnz	r1, 800e842 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800e834:	4b11      	ldr	r3, [pc, #68]	; (800e87c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e836:	4a12      	ldr	r2, [pc, #72]	; (800e880 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800e838:	4812      	ldr	r0, [pc, #72]	; (800e884 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800e83a:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800e83e:	f00b fdbb 	bl	801a3b8 <__assert_func>
 800e842:	8803      	ldrh	r3, [r0, #0]
 800e844:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e848:	4293      	cmp	r3, r2
 800e84a:	d012      	beq.n	800e872 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800e84c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e850:	4293      	cmp	r3, r2
 800e852:	d103      	bne.n	800e85c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800e854:	4b0c      	ldr	r3, [pc, #48]	; (800e888 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800e856:	681b      	ldr	r3, [r3, #0]
 800e858:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800e85a:	bd08      	pop	{r3, pc}
 800e85c:	4a0b      	ldr	r2, [pc, #44]	; (800e88c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800e85e:	6812      	ldr	r2, [r2, #0]
 800e860:	b11a      	cbz	r2, 800e86a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800e862:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e866:	2800      	cmp	r0, #0
 800e868:	d1f7      	bne.n	800e85a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e86a:	2214      	movs	r2, #20
 800e86c:	4353      	muls	r3, r2
 800e86e:	58c8      	ldr	r0, [r1, r3]
 800e870:	e7f3      	b.n	800e85a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e872:	2000      	movs	r0, #0
 800e874:	e7f1      	b.n	800e85a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e876:	bf00      	nop
 800e878:	2000a11c 	.word	0x2000a11c
 800e87c:	0801da27 	.word	0x0801da27
 800e880:	0801dadf 	.word	0x0801dadf
 800e884:	0801d9a9 	.word	0x0801d9a9
 800e888:	2000a094 	.word	0x2000a094
 800e88c:	2000a0f8 	.word	0x2000a0f8

0800e890 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800e890:	8802      	ldrh	r2, [r0, #0]
 800e892:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800e896:	429a      	cmp	r2, r3
 800e898:	d845      	bhi.n	800e926 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e89a:	4b24      	ldr	r3, [pc, #144]	; (800e92c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e89c:	8818      	ldrh	r0, [r3, #0]
 800e89e:	4282      	cmp	r2, r0
 800e8a0:	d221      	bcs.n	800e8e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800e8a2:	4b23      	ldr	r3, [pc, #140]	; (800e930 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e8a4:	6819      	ldr	r1, [r3, #0]
 800e8a6:	2314      	movs	r3, #20
 800e8a8:	fb03 1302 	mla	r3, r3, r2, r1
 800e8ac:	6858      	ldr	r0, [r3, #4]
 800e8ae:	2800      	cmp	r0, #0
 800e8b0:	d03a      	beq.n	800e928 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e8b2:	4920      	ldr	r1, [pc, #128]	; (800e934 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e8b4:	6809      	ldr	r1, [r1, #0]
 800e8b6:	2900      	cmp	r1, #0
 800e8b8:	d036      	beq.n	800e928 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e8ba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800e8be:	2900      	cmp	r1, #0
 800e8c0:	d032      	beq.n	800e928 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e8c2:	891a      	ldrh	r2, [r3, #8]
 800e8c4:	8958      	ldrh	r0, [r3, #10]
 800e8c6:	4350      	muls	r0, r2
 800e8c8:	7c5a      	ldrb	r2, [r3, #17]
 800e8ca:	7cdb      	ldrb	r3, [r3, #19]
 800e8cc:	0952      	lsrs	r2, r2, #5
 800e8ce:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800e8d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800e8d6:	2b0b      	cmp	r3, #11
 800e8d8:	bf18      	it	ne
 800e8da:	0040      	lslne	r0, r0, #1
 800e8dc:	3003      	adds	r0, #3
 800e8de:	f020 0003 	bic.w	r0, r0, #3
 800e8e2:	4408      	add	r0, r1
 800e8e4:	4770      	bx	lr
 800e8e6:	4b14      	ldr	r3, [pc, #80]	; (800e938 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800e8e8:	881b      	ldrh	r3, [r3, #0]
 800e8ea:	4403      	add	r3, r0
 800e8ec:	429a      	cmp	r2, r3
 800e8ee:	da1a      	bge.n	800e926 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e8f0:	4b12      	ldr	r3, [pc, #72]	; (800e93c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800e8f2:	681b      	ldr	r3, [r3, #0]
 800e8f4:	1a10      	subs	r0, r2, r0
 800e8f6:	210e      	movs	r1, #14
 800e8f8:	fb01 3000 	mla	r0, r1, r0, r3
 800e8fc:	7b03      	ldrb	r3, [r0, #12]
 800e8fe:	f003 031f 	and.w	r3, r3, #31
 800e902:	2b0b      	cmp	r3, #11
 800e904:	d10b      	bne.n	800e91e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e906:	8903      	ldrh	r3, [r0, #8]
 800e908:	8940      	ldrh	r0, [r0, #10]
 800e90a:	4358      	muls	r0, r3
 800e90c:	4b09      	ldr	r3, [pc, #36]	; (800e934 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e90e:	6819      	ldr	r1, [r3, #0]
 800e910:	3003      	adds	r0, #3
 800e912:	f020 0303 	bic.w	r3, r0, #3
 800e916:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800e91a:	4418      	add	r0, r3
 800e91c:	4770      	bx	lr
 800e91e:	2b0d      	cmp	r3, #13
 800e920:	d101      	bne.n	800e926 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e922:	300d      	adds	r0, #13
 800e924:	4770      	bx	lr
 800e926:	2000      	movs	r0, #0
 800e928:	4770      	bx	lr
 800e92a:	bf00      	nop
 800e92c:	2000a114 	.word	0x2000a114
 800e930:	2000a11c 	.word	0x2000a11c
 800e934:	2000a0f8 	.word	0x2000a0f8
 800e938:	2000a118 	.word	0x2000a118
 800e93c:	2000a0fc 	.word	0x2000a0fc

0800e940 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800e940:	b510      	push	{r4, lr}
 800e942:	4b17      	ldr	r3, [pc, #92]	; (800e9a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800e944:	6819      	ldr	r1, [r3, #0]
 800e946:	8803      	ldrh	r3, [r0, #0]
 800e948:	b1e9      	cbz	r1, 800e986 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800e94a:	4a16      	ldr	r2, [pc, #88]	; (800e9a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800e94c:	8812      	ldrh	r2, [r2, #0]
 800e94e:	429a      	cmp	r2, r3
 800e950:	d90a      	bls.n	800e968 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800e952:	2214      	movs	r2, #20
 800e954:	fb02 1303 	mla	r3, r2, r3, r1
 800e958:	7c58      	ldrb	r0, [r3, #17]
 800e95a:	0942      	lsrs	r2, r0, #5
 800e95c:	7cd8      	ldrb	r0, [r3, #19]
 800e95e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800e962:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800e966:	bd10      	pop	{r4, pc}
 800e968:	490f      	ldr	r1, [pc, #60]	; (800e9a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800e96a:	8809      	ldrh	r1, [r1, #0]
 800e96c:	4411      	add	r1, r2
 800e96e:	428b      	cmp	r3, r1
 800e970:	da09      	bge.n	800e986 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800e972:	1a9b      	subs	r3, r3, r2
 800e974:	4a0d      	ldr	r2, [pc, #52]	; (800e9ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800e976:	6812      	ldr	r2, [r2, #0]
 800e978:	210e      	movs	r1, #14
 800e97a:	fb01 2303 	mla	r3, r1, r3, r2
 800e97e:	7b18      	ldrb	r0, [r3, #12]
 800e980:	f000 001f 	and.w	r0, r0, #31
 800e984:	e7ef      	b.n	800e966 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800e986:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e98a:	4293      	cmp	r3, r2
 800e98c:	d106      	bne.n	800e99c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800e98e:	f7fa fcf7 	bl	8009380 <_ZN8touchgfx3HAL3lcdEv>
 800e992:	6803      	ldr	r3, [r0, #0]
 800e994:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e998:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e99a:	4718      	bx	r3
 800e99c:	2000      	movs	r0, #0
 800e99e:	e7e2      	b.n	800e966 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800e9a0:	2000a11c 	.word	0x2000a11c
 800e9a4:	2000a114 	.word	0x2000a114
 800e9a8:	2000a118 	.word	0x2000a118
 800e9ac:	2000a0fc 	.word	0x2000a0fc

0800e9b0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800e9b0:	2010      	movs	r0, #16
 800e9b2:	4770      	bx	lr

0800e9b4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800e9b4:	2000      	movs	r0, #0
 800e9b6:	4770      	bx	lr

0800e9b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800e9b8:	2bff      	cmp	r3, #255	; 0xff
 800e9ba:	d050      	beq.n	800ea5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800e9bc:	2a0b      	cmp	r2, #11
 800e9be:	d04a      	beq.n	800ea56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e9c0:	d80e      	bhi.n	800e9e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800e9c2:	2a03      	cmp	r2, #3
 800e9c4:	d03f      	beq.n	800ea46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800e9c6:	d804      	bhi.n	800e9d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800e9c8:	2a01      	cmp	r2, #1
 800e9ca:	d03e      	beq.n	800ea4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800e9cc:	d93f      	bls.n	800ea4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800e9ce:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800e9d0:	4770      	bx	lr
 800e9d2:	2a09      	cmp	r2, #9
 800e9d4:	d03f      	beq.n	800ea56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e9d6:	d83c      	bhi.n	800ea52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e9d8:	2a08      	cmp	r2, #8
 800e9da:	d03a      	beq.n	800ea52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e9dc:	2000      	movs	r0, #0
 800e9de:	4770      	bx	lr
 800e9e0:	2a2f      	cmp	r2, #47	; 0x2f
 800e9e2:	d024      	beq.n	800ea2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800e9e4:	d80d      	bhi.n	800ea02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800e9e6:	2a2d      	cmp	r2, #45	; 0x2d
 800e9e8:	d014      	beq.n	800ea14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800e9ea:	d826      	bhi.n	800ea3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800e9ec:	2a2c      	cmp	r2, #44	; 0x2c
 800e9ee:	d1f5      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e9f0:	684b      	ldr	r3, [r1, #4]
 800e9f2:	781b      	ldrb	r3, [r3, #0]
 800e9f4:	2b01      	cmp	r3, #1
 800e9f6:	d018      	beq.n	800ea2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800e9f8:	d323      	bcc.n	800ea42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800e9fa:	2b02      	cmp	r3, #2
 800e9fc:	d1ee      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e9fe:	6880      	ldr	r0, [r0, #8]
 800ea00:	4770      	bx	lr
 800ea02:	2a31      	cmp	r2, #49	; 0x31
 800ea04:	d004      	beq.n	800ea10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800ea06:	d328      	bcc.n	800ea5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800ea08:	2a32      	cmp	r2, #50	; 0x32
 800ea0a:	d026      	beq.n	800ea5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800ea0c:	2a33      	cmp	r2, #51	; 0x33
 800ea0e:	d1e5      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea10:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800ea12:	4770      	bx	lr
 800ea14:	684b      	ldr	r3, [r1, #4]
 800ea16:	781b      	ldrb	r3, [r3, #0]
 800ea18:	2b01      	cmp	r3, #1
 800ea1a:	d004      	beq.n	800ea26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800ea1c:	d30b      	bcc.n	800ea36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800ea1e:	2b02      	cmp	r3, #2
 800ea20:	d1dc      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea22:	6900      	ldr	r0, [r0, #16]
 800ea24:	4770      	bx	lr
 800ea26:	6a00      	ldr	r0, [r0, #32]
 800ea28:	4770      	bx	lr
 800ea2a:	6980      	ldr	r0, [r0, #24]
 800ea2c:	4770      	bx	lr
 800ea2e:	684b      	ldr	r3, [r1, #4]
 800ea30:	781b      	ldrb	r3, [r3, #0]
 800ea32:	2b00      	cmp	r3, #0
 800ea34:	d1d2      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea36:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ea38:	4770      	bx	lr
 800ea3a:	684b      	ldr	r3, [r1, #4]
 800ea3c:	781b      	ldrb	r3, [r3, #0]
 800ea3e:	2b00      	cmp	r3, #0
 800ea40:	d1cc      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea42:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ea44:	4770      	bx	lr
 800ea46:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ea48:	4770      	bx	lr
 800ea4a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ea4c:	4770      	bx	lr
 800ea4e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800ea50:	4770      	bx	lr
 800ea52:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800ea54:	4770      	bx	lr
 800ea56:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800ea58:	4770      	bx	lr
 800ea5a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800ea5c:	4770      	bx	lr
 800ea5e:	2a0b      	cmp	r2, #11
 800ea60:	d049      	beq.n	800eaf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ea62:	d80e      	bhi.n	800ea82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800ea64:	2a03      	cmp	r2, #3
 800ea66:	d040      	beq.n	800eaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800ea68:	d804      	bhi.n	800ea74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800ea6a:	2a01      	cmp	r2, #1
 800ea6c:	d03f      	beq.n	800eaee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800ea6e:	d940      	bls.n	800eaf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800ea70:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ea72:	4770      	bx	lr
 800ea74:	2a09      	cmp	r2, #9
 800ea76:	d03e      	beq.n	800eaf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ea78:	d801      	bhi.n	800ea7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800ea7a:	2a08      	cmp	r2, #8
 800ea7c:	d1ae      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea7e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800ea80:	4770      	bx	lr
 800ea82:	2a2f      	cmp	r2, #47	; 0x2f
 800ea84:	d024      	beq.n	800ead0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800ea86:	d80d      	bhi.n	800eaa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800ea88:	2a2d      	cmp	r2, #45	; 0x2d
 800ea8a:	d014      	beq.n	800eab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800ea8c:	d826      	bhi.n	800eadc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800ea8e:	2a2c      	cmp	r2, #44	; 0x2c
 800ea90:	d1a4      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ea92:	684b      	ldr	r3, [r1, #4]
 800ea94:	781b      	ldrb	r3, [r3, #0]
 800ea96:	2b01      	cmp	r3, #1
 800ea98:	d018      	beq.n	800eacc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800ea9a:	d324      	bcc.n	800eae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800ea9c:	2b02      	cmp	r3, #2
 800ea9e:	d19d      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eaa0:	68c0      	ldr	r0, [r0, #12]
 800eaa2:	4770      	bx	lr
 800eaa4:	2a31      	cmp	r2, #49	; 0x31
 800eaa6:	d004      	beq.n	800eab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800eaa8:	d327      	bcc.n	800eafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800eaaa:	2a32      	cmp	r2, #50	; 0x32
 800eaac:	d025      	beq.n	800eafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800eaae:	2a33      	cmp	r2, #51	; 0x33
 800eab0:	d194      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eab2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800eab4:	4770      	bx	lr
 800eab6:	684b      	ldr	r3, [r1, #4]
 800eab8:	781b      	ldrb	r3, [r3, #0]
 800eaba:	2b01      	cmp	r3, #1
 800eabc:	d004      	beq.n	800eac8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800eabe:	d30b      	bcc.n	800ead8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800eac0:	2b02      	cmp	r3, #2
 800eac2:	d18b      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eac4:	6940      	ldr	r0, [r0, #20]
 800eac6:	4770      	bx	lr
 800eac8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800eaca:	4770      	bx	lr
 800eacc:	69c0      	ldr	r0, [r0, #28]
 800eace:	4770      	bx	lr
 800ead0:	684b      	ldr	r3, [r1, #4]
 800ead2:	781b      	ldrb	r3, [r3, #0]
 800ead4:	2b00      	cmp	r3, #0
 800ead6:	d181      	bne.n	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ead8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800eada:	4770      	bx	lr
 800eadc:	684b      	ldr	r3, [r1, #4]
 800eade:	781b      	ldrb	r3, [r3, #0]
 800eae0:	2b00      	cmp	r3, #0
 800eae2:	f47f af7b 	bne.w	800e9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eae6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800eae8:	4770      	bx	lr
 800eaea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800eaec:	4770      	bx	lr
 800eaee:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800eaf0:	4770      	bx	lr
 800eaf2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800eaf4:	4770      	bx	lr
 800eaf6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800eaf8:	4770      	bx	lr
 800eafa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800eafc:	4770      	bx	lr

0800eafe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800eafe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb02:	b087      	sub	sp, #28
 800eb04:	9815      	ldr	r0, [sp, #84]	; 0x54
 800eb06:	9205      	str	r2, [sp, #20]
 800eb08:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800eb0c:	9202      	str	r2, [sp, #8]
 800eb0e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800eb12:	9101      	str	r1, [sp, #4]
 800eb14:	6841      	ldr	r1, [r0, #4]
 800eb16:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800eb1a:	fb01 2404 	mla	r4, r1, r4, r2
 800eb1e:	6802      	ldr	r2, [r0, #0]
 800eb20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eb24:	f8de 2000 	ldr.w	r2, [lr]
 800eb28:	9203      	str	r2, [sp, #12]
 800eb2a:	f8de 2004 	ldr.w	r2, [lr, #4]
 800eb2e:	3204      	adds	r2, #4
 800eb30:	9204      	str	r2, [sp, #16]
 800eb32:	9a02      	ldr	r2, [sp, #8]
 800eb34:	43d6      	mvns	r6, r2
 800eb36:	b2f6      	uxtb	r6, r6
 800eb38:	9a01      	ldr	r2, [sp, #4]
 800eb3a:	2a00      	cmp	r2, #0
 800eb3c:	dc03      	bgt.n	800eb46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800eb3e:	9a05      	ldr	r2, [sp, #20]
 800eb40:	2a00      	cmp	r2, #0
 800eb42:	f340 8129 	ble.w	800ed98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800eb46:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eb48:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800eb4c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800eb50:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800eb54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800eb56:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800eb5a:	2b00      	cmp	r3, #0
 800eb5c:	dd0e      	ble.n	800eb7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800eb5e:	1408      	asrs	r0, r1, #16
 800eb60:	d405      	bmi.n	800eb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800eb62:	4560      	cmp	r0, ip
 800eb64:	da03      	bge.n	800eb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800eb66:	1410      	asrs	r0, r2, #16
 800eb68:	d401      	bmi.n	800eb6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800eb6a:	42b8      	cmp	r0, r7
 800eb6c:	db07      	blt.n	800eb7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800eb6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eb70:	4401      	add	r1, r0
 800eb72:	9814      	ldr	r0, [sp, #80]	; 0x50
 800eb74:	3b01      	subs	r3, #1
 800eb76:	4402      	add	r2, r0
 800eb78:	3402      	adds	r4, #2
 800eb7a:	e7ee      	b.n	800eb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800eb7c:	d071      	beq.n	800ec62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800eb7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800eb80:	1e58      	subs	r0, r3, #1
 800eb82:	fb05 1500 	mla	r5, r5, r0, r1
 800eb86:	142d      	asrs	r5, r5, #16
 800eb88:	d45f      	bmi.n	800ec4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800eb8a:	4565      	cmp	r5, ip
 800eb8c:	da5d      	bge.n	800ec4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800eb8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800eb90:	fb05 2000 	mla	r0, r5, r0, r2
 800eb94:	1400      	asrs	r0, r0, #16
 800eb96:	d458      	bmi.n	800ec4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800eb98:	42b8      	cmp	r0, r7
 800eb9a:	da56      	bge.n	800ec4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800eb9c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800eba0:	4699      	mov	r9, r3
 800eba2:	46a2      	mov	sl, r4
 800eba4:	f1b9 0f00 	cmp.w	r9, #0
 800eba8:	dd57      	ble.n	800ec5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ebaa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ebae:	9803      	ldr	r0, [sp, #12]
 800ebb0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ebb4:	140d      	asrs	r5, r1, #16
 800ebb6:	fb07 000c 	mla	r0, r7, ip, r0
 800ebba:	f109 39ff 	add.w	r9, r9, #4294967295
 800ebbe:	5d40      	ldrb	r0, [r0, r5]
 800ebc0:	9d04      	ldr	r5, [sp, #16]
 800ebc2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ebc6:	f8ba 5000 	ldrh.w	r5, [sl]
 800ebca:	122f      	asrs	r7, r5, #8
 800ebcc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ebd0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ebd4:	fb17 f706 	smulbb	r7, r7, r6
 800ebd8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ebdc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ebe0:	00ed      	lsls	r5, r5, #3
 800ebe2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ebe6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ebea:	10c7      	asrs	r7, r0, #3
 800ebec:	b2ed      	uxtb	r5, r5
 800ebee:	00c0      	lsls	r0, r0, #3
 800ebf0:	fb18 f806 	smulbb	r8, r8, r6
 800ebf4:	fb15 f506 	smulbb	r5, r5, r6
 800ebf8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ebfc:	b2c0      	uxtb	r0, r0
 800ebfe:	fa1f fc8c 	uxth.w	ip, ip
 800ec02:	fb07 870b 	mla	r7, r7, fp, r8
 800ec06:	fb00 500b 	mla	r0, r0, fp, r5
 800ec0a:	b280      	uxth	r0, r0
 800ec0c:	b2bf      	uxth	r7, r7
 800ec0e:	f10c 0501 	add.w	r5, ip, #1
 800ec12:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ec16:	f107 0801 	add.w	r8, r7, #1
 800ec1a:	1c45      	adds	r5, r0, #1
 800ec1c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ec20:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800ec24:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ec26:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ec2a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ec2e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800ec32:	ea45 0c0c 	orr.w	ip, r5, ip
 800ec36:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800ec3a:	4401      	add	r1, r0
 800ec3c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ec3e:	ea4c 0c08 	orr.w	ip, ip, r8
 800ec42:	f82a cb02 	strh.w	ip, [sl], #2
 800ec46:	4402      	add	r2, r0
 800ec48:	e7ac      	b.n	800eba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800ec4a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800ec4e:	f04f 0800 	mov.w	r8, #0
 800ec52:	eb03 0008 	add.w	r0, r3, r8
 800ec56:	2800      	cmp	r0, #0
 800ec58:	dc41      	bgt.n	800ecde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800ec5a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ec5e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ec62:	9b01      	ldr	r3, [sp, #4]
 800ec64:	2b00      	cmp	r3, #0
 800ec66:	f340 8097 	ble.w	800ed98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ec6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ec6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ec72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800ec76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ec78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ec7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ec80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ec84:	eef0 6a62 	vmov.f32	s13, s5
 800ec88:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ec8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ec90:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ec94:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800ec98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ec9c:	eef0 6a43 	vmov.f32	s13, s6
 800eca0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eca4:	ee12 2a90 	vmov	r2, s5
 800eca8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ecac:	fb92 f3f3 	sdiv	r3, r2, r3
 800ecb0:	ee13 2a10 	vmov	r2, s6
 800ecb4:	9313      	str	r3, [sp, #76]	; 0x4c
 800ecb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecb8:	fb92 f3f3 	sdiv	r3, r2, r3
 800ecbc:	9314      	str	r3, [sp, #80]	; 0x50
 800ecbe:	9b01      	ldr	r3, [sp, #4]
 800ecc0:	9a05      	ldr	r2, [sp, #20]
 800ecc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ecc6:	3b01      	subs	r3, #1
 800ecc8:	9301      	str	r3, [sp, #4]
 800ecca:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800ecce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecd0:	eeb0 3a67 	vmov.f32	s6, s15
 800ecd4:	bf08      	it	eq
 800ecd6:	4613      	moveq	r3, r2
 800ecd8:	eef0 2a47 	vmov.f32	s5, s14
 800ecdc:	e72c      	b.n	800eb38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800ecde:	140f      	asrs	r7, r1, #16
 800ece0:	d453      	bmi.n	800ed8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800ece2:	f8de 5008 	ldr.w	r5, [lr, #8]
 800ece6:	42bd      	cmp	r5, r7
 800ece8:	dd4f      	ble.n	800ed8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800ecea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800ecee:	d44c      	bmi.n	800ed8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800ecf0:	f8de 000c 	ldr.w	r0, [lr, #12]
 800ecf4:	4560      	cmp	r0, ip
 800ecf6:	dd48      	ble.n	800ed8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800ecf8:	9803      	ldr	r0, [sp, #12]
 800ecfa:	b22d      	sxth	r5, r5
 800ecfc:	fb0c 0505 	mla	r5, ip, r5, r0
 800ed00:	5de8      	ldrb	r0, [r5, r7]
 800ed02:	9d04      	ldr	r5, [sp, #16]
 800ed04:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ed08:	f06f 0501 	mvn.w	r5, #1
 800ed0c:	fb05 fb08 	mul.w	fp, r5, r8
 800ed10:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ed14:	f834 500b 	ldrh.w	r5, [r4, fp]
 800ed18:	122f      	asrs	r7, r5, #8
 800ed1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ed1e:	fb17 f706 	smulbb	r7, r7, r6
 800ed22:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800ed26:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ed2a:	00ed      	lsls	r5, r5, #3
 800ed2c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800ed30:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ed34:	10c7      	asrs	r7, r0, #3
 800ed36:	b2ed      	uxtb	r5, r5
 800ed38:	00c0      	lsls	r0, r0, #3
 800ed3a:	fb19 f906 	smulbb	r9, r9, r6
 800ed3e:	fb15 f506 	smulbb	r5, r5, r6
 800ed42:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ed46:	b2c0      	uxtb	r0, r0
 800ed48:	fa1f fc8c 	uxth.w	ip, ip
 800ed4c:	fb07 970a 	mla	r7, r7, sl, r9
 800ed50:	fb00 500a 	mla	r0, r0, sl, r5
 800ed54:	b2bf      	uxth	r7, r7
 800ed56:	b280      	uxth	r0, r0
 800ed58:	f10c 0501 	add.w	r5, ip, #1
 800ed5c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ed60:	f107 0901 	add.w	r9, r7, #1
 800ed64:	1c45      	adds	r5, r0, #1
 800ed66:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ed6a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ed6e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ed72:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ed76:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ed7a:	ea45 0c0c 	orr.w	ip, r5, ip
 800ed7e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ed82:	ea4c 0c09 	orr.w	ip, ip, r9
 800ed86:	f824 c00b 	strh.w	ip, [r4, fp]
 800ed8a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ed8c:	4401      	add	r1, r0
 800ed8e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ed90:	f108 38ff 	add.w	r8, r8, #4294967295
 800ed94:	4402      	add	r2, r0
 800ed96:	e75c      	b.n	800ec52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800ed98:	b007      	add	sp, #28
 800ed9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ed9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ed9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eda2:	b085      	sub	sp, #20
 800eda4:	4693      	mov	fp, r2
 800eda6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800eda8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800edaa:	6870      	ldr	r0, [r6, #4]
 800edac:	9100      	str	r1, [sp, #0]
 800edae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800edb2:	fb00 2404 	mla	r4, r0, r4, r2
 800edb6:	6832      	ldr	r2, [r6, #0]
 800edb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800edbc:	682a      	ldr	r2, [r5, #0]
 800edbe:	9201      	str	r2, [sp, #4]
 800edc0:	686a      	ldr	r2, [r5, #4]
 800edc2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800edc6:	3204      	adds	r2, #4
 800edc8:	9202      	str	r2, [sp, #8]
 800edca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800edce:	9a00      	ldr	r2, [sp, #0]
 800edd0:	2a00      	cmp	r2, #0
 800edd2:	dc03      	bgt.n	800eddc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800edd4:	f1bb 0f00 	cmp.w	fp, #0
 800edd8:	f340 80a0 	ble.w	800ef1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800eddc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800edde:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ede2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800ede6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800edea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800edec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800edf0:	2b00      	cmp	r3, #0
 800edf2:	dd0c      	ble.n	800ee0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800edf4:	1406      	asrs	r6, r0, #16
 800edf6:	d405      	bmi.n	800ee04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800edf8:	454e      	cmp	r6, r9
 800edfa:	da03      	bge.n	800ee04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800edfc:	1416      	asrs	r6, r2, #16
 800edfe:	d401      	bmi.n	800ee04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ee00:	4546      	cmp	r6, r8
 800ee02:	db05      	blt.n	800ee10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ee04:	4470      	add	r0, lr
 800ee06:	4462      	add	r2, ip
 800ee08:	3b01      	subs	r3, #1
 800ee0a:	3402      	adds	r4, #2
 800ee0c:	e7f0      	b.n	800edf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ee0e:	d00f      	beq.n	800ee30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ee10:	1e5e      	subs	r6, r3, #1
 800ee12:	fb0e 0706 	mla	r7, lr, r6, r0
 800ee16:	143f      	asrs	r7, r7, #16
 800ee18:	d541      	bpl.n	800ee9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800ee1a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800ee1e:	4698      	mov	r8, r3
 800ee20:	9603      	str	r6, [sp, #12]
 800ee22:	f1b8 0f00 	cmp.w	r8, #0
 800ee26:	dc59      	bgt.n	800eedc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ee28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ee2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ee30:	9b00      	ldr	r3, [sp, #0]
 800ee32:	2b00      	cmp	r3, #0
 800ee34:	dd72      	ble.n	800ef1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ee36:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ee3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ee3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ee42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee44:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ee48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ee4c:	eeb0 6a62 	vmov.f32	s12, s5
 800ee50:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ee54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ee58:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ee5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ee60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ee64:	eeb0 6a43 	vmov.f32	s12, s6
 800ee68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ee6c:	ee12 2a90 	vmov	r2, s5
 800ee70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ee74:	fb92 fef3 	sdiv	lr, r2, r3
 800ee78:	ee13 2a10 	vmov	r2, s6
 800ee7c:	fb92 fcf3 	sdiv	ip, r2, r3
 800ee80:	9b00      	ldr	r3, [sp, #0]
 800ee82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ee86:	3b01      	subs	r3, #1
 800ee88:	9300      	str	r3, [sp, #0]
 800ee8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800ee8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee90:	eeb0 3a67 	vmov.f32	s6, s15
 800ee94:	bf08      	it	eq
 800ee96:	465b      	moveq	r3, fp
 800ee98:	eef0 2a47 	vmov.f32	s5, s14
 800ee9c:	e797      	b.n	800edce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800ee9e:	454f      	cmp	r7, r9
 800eea0:	dabb      	bge.n	800ee1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eea2:	fb0c 2606 	mla	r6, ip, r6, r2
 800eea6:	1436      	asrs	r6, r6, #16
 800eea8:	d4b7      	bmi.n	800ee1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eeaa:	4546      	cmp	r6, r8
 800eeac:	dab5      	bge.n	800ee1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eeae:	461e      	mov	r6, r3
 800eeb0:	46a0      	mov	r8, r4
 800eeb2:	2e00      	cmp	r6, #0
 800eeb4:	ddb8      	ble.n	800ee28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800eeb6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800eeba:	9901      	ldr	r1, [sp, #4]
 800eebc:	1417      	asrs	r7, r2, #16
 800eebe:	ea4f 4920 	mov.w	r9, r0, asr #16
 800eec2:	fb0a 1707 	mla	r7, sl, r7, r1
 800eec6:	9902      	ldr	r1, [sp, #8]
 800eec8:	f817 7009 	ldrb.w	r7, [r7, r9]
 800eecc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800eed0:	f828 7b02 	strh.w	r7, [r8], #2
 800eed4:	4470      	add	r0, lr
 800eed6:	4462      	add	r2, ip
 800eed8:	3e01      	subs	r6, #1
 800eeda:	e7ea      	b.n	800eeb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800eedc:	ea5f 4920 	movs.w	r9, r0, asr #16
 800eee0:	d417      	bmi.n	800ef12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eee2:	68ae      	ldr	r6, [r5, #8]
 800eee4:	454e      	cmp	r6, r9
 800eee6:	dd14      	ble.n	800ef12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eee8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800eeec:	d411      	bmi.n	800ef12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eeee:	68ef      	ldr	r7, [r5, #12]
 800eef0:	4557      	cmp	r7, sl
 800eef2:	dd0e      	ble.n	800ef12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eef4:	9f01      	ldr	r7, [sp, #4]
 800eef6:	b236      	sxth	r6, r6
 800eef8:	fb0a 7606 	mla	r6, sl, r6, r7
 800eefc:	9f02      	ldr	r7, [sp, #8]
 800eefe:	f816 6009 	ldrb.w	r6, [r6, r9]
 800ef02:	f06f 0101 	mvn.w	r1, #1
 800ef06:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800ef0a:	fb01 f608 	mul.w	r6, r1, r8
 800ef0e:	9903      	ldr	r1, [sp, #12]
 800ef10:	538f      	strh	r7, [r1, r6]
 800ef12:	4470      	add	r0, lr
 800ef14:	4462      	add	r2, ip
 800ef16:	f108 38ff 	add.w	r8, r8, #4294967295
 800ef1a:	e782      	b.n	800ee22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800ef1c:	b005      	add	sp, #20
 800ef1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ef22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ef22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef26:	b087      	sub	sp, #28
 800ef28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800ef2a:	9205      	str	r2, [sp, #20]
 800ef2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ef30:	9203      	str	r2, [sp, #12]
 800ef32:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800ef36:	9102      	str	r1, [sp, #8]
 800ef38:	6861      	ldr	r1, [r4, #4]
 800ef3a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800ef3e:	fb01 2000 	mla	r0, r1, r0, r2
 800ef42:	6822      	ldr	r2, [r4, #0]
 800ef44:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800ef48:	9200      	str	r2, [sp, #0]
 800ef4a:	f8dc 2000 	ldr.w	r2, [ip]
 800ef4e:	9204      	str	r2, [sp, #16]
 800ef50:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800ef54:	3204      	adds	r2, #4
 800ef56:	9201      	str	r2, [sp, #4]
 800ef58:	9a03      	ldr	r2, [sp, #12]
 800ef5a:	43d5      	mvns	r5, r2
 800ef5c:	b2ed      	uxtb	r5, r5
 800ef5e:	9a02      	ldr	r2, [sp, #8]
 800ef60:	2a00      	cmp	r2, #0
 800ef62:	dc03      	bgt.n	800ef6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800ef64:	9a05      	ldr	r2, [sp, #20]
 800ef66:	2a00      	cmp	r2, #0
 800ef68:	f340 812c 	ble.w	800f1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800ef6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef6e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800ef72:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800ef76:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ef80:	2b00      	cmp	r3, #0
 800ef82:	dd10      	ble.n	800efa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800ef84:	140c      	asrs	r4, r1, #16
 800ef86:	d405      	bmi.n	800ef94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ef88:	4574      	cmp	r4, lr
 800ef8a:	da03      	bge.n	800ef94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ef8c:	1414      	asrs	r4, r2, #16
 800ef8e:	d401      	bmi.n	800ef94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ef90:	42bc      	cmp	r4, r7
 800ef92:	db09      	blt.n	800efa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800ef94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ef96:	9800      	ldr	r0, [sp, #0]
 800ef98:	4421      	add	r1, r4
 800ef9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ef9c:	3002      	adds	r0, #2
 800ef9e:	4422      	add	r2, r4
 800efa0:	3b01      	subs	r3, #1
 800efa2:	9000      	str	r0, [sp, #0]
 800efa4:	e7ec      	b.n	800ef80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800efa6:	d071      	beq.n	800f08c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800efa8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800efaa:	1e5c      	subs	r4, r3, #1
 800efac:	fb06 1604 	mla	r6, r6, r4, r1
 800efb0:	1436      	asrs	r6, r6, #16
 800efb2:	d45d      	bmi.n	800f070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800efb4:	4576      	cmp	r6, lr
 800efb6:	da5b      	bge.n	800f070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800efb8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800efba:	fb06 2404 	mla	r4, r6, r4, r2
 800efbe:	1424      	asrs	r4, r4, #16
 800efc0:	d456      	bmi.n	800f070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800efc2:	42bc      	cmp	r4, r7
 800efc4:	da54      	bge.n	800f070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800efc6:	f8dd 9000 	ldr.w	r9, [sp]
 800efca:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800efce:	4698      	mov	r8, r3
 800efd0:	f1b8 0f00 	cmp.w	r8, #0
 800efd4:	dd54      	ble.n	800f080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800efd6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800efda:	9804      	ldr	r0, [sp, #16]
 800efdc:	1414      	asrs	r4, r2, #16
 800efde:	fb07 0404 	mla	r4, r7, r4, r0
 800efe2:	140e      	asrs	r6, r1, #16
 800efe4:	9801      	ldr	r0, [sp, #4]
 800efe6:	f814 e006 	ldrb.w	lr, [r4, r6]
 800efea:	f8b9 4000 	ldrh.w	r4, [r9]
 800efee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800eff2:	eb00 0b0e 	add.w	fp, r0, lr
 800eff6:	1227      	asrs	r7, r4, #8
 800eff8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800effc:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f000:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800f004:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f006:	fb16 f60a 	smulbb	r6, r6, sl
 800f00a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f00e:	fb07 6705 	mla	r7, r7, r5, r6
 800f012:	10e6      	asrs	r6, r4, #3
 800f014:	00e4      	lsls	r4, r4, #3
 800f016:	b2e4      	uxtb	r4, r4
 800f018:	fb1b fb0a 	smulbb	fp, fp, sl
 800f01c:	fb14 f405 	smulbb	r4, r4, r5
 800f020:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f024:	b2bf      	uxth	r7, r7
 800f026:	fb06 b605 	mla	r6, r6, r5, fp
 800f02a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800f02e:	b2b6      	uxth	r6, r6
 800f030:	fa1f fe8e 	uxth.w	lr, lr
 800f034:	1c7c      	adds	r4, r7, #1
 800f036:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800f03a:	f106 0b01 	add.w	fp, r6, #1
 800f03e:	f10e 0401 	add.w	r4, lr, #1
 800f042:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800f046:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f04a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f04e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800f052:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f056:	4327      	orrs	r7, r4
 800f058:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f05c:	4401      	add	r1, r0
 800f05e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f060:	ea47 070b 	orr.w	r7, r7, fp
 800f064:	f829 7b02 	strh.w	r7, [r9], #2
 800f068:	4402      	add	r2, r0
 800f06a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f06e:	e7af      	b.n	800efd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800f070:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800f074:	f04f 0e00 	mov.w	lr, #0
 800f078:	eb03 040e 	add.w	r4, r3, lr
 800f07c:	2c00      	cmp	r4, #0
 800f07e:	dc43      	bgt.n	800f108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800f080:	9a00      	ldr	r2, [sp, #0]
 800f082:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f086:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800f08a:	9300      	str	r3, [sp, #0]
 800f08c:	9b02      	ldr	r3, [sp, #8]
 800f08e:	2b00      	cmp	r3, #0
 800f090:	f340 8098 	ble.w	800f1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800f094:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f098:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f09c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f0a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f0a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f0aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f0ae:	eef0 6a62 	vmov.f32	s13, s5
 800f0b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f0b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f0ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f0be:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f0c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f0c6:	eef0 6a43 	vmov.f32	s13, s6
 800f0ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f0ce:	ee12 2a90 	vmov	r2, s5
 800f0d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f0d6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f0da:	ee13 2a10 	vmov	r2, s6
 800f0de:	9313      	str	r3, [sp, #76]	; 0x4c
 800f0e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0e2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f0e6:	9314      	str	r3, [sp, #80]	; 0x50
 800f0e8:	9b02      	ldr	r3, [sp, #8]
 800f0ea:	9a05      	ldr	r2, [sp, #20]
 800f0ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f0f0:	3b01      	subs	r3, #1
 800f0f2:	9302      	str	r3, [sp, #8]
 800f0f4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f0f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0fa:	eeb0 3a67 	vmov.f32	s6, s15
 800f0fe:	bf08      	it	eq
 800f100:	4613      	moveq	r3, r2
 800f102:	eef0 2a47 	vmov.f32	s5, s14
 800f106:	e72a      	b.n	800ef5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800f108:	140f      	asrs	r7, r1, #16
 800f10a:	d454      	bmi.n	800f1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f10c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800f110:	42be      	cmp	r6, r7
 800f112:	dd50      	ble.n	800f1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f114:	ea5f 4822 	movs.w	r8, r2, asr #16
 800f118:	d44d      	bmi.n	800f1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f11a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800f11e:	4544      	cmp	r4, r8
 800f120:	dd49      	ble.n	800f1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f122:	9c04      	ldr	r4, [sp, #16]
 800f124:	b236      	sxth	r6, r6
 800f126:	fb08 4606 	mla	r6, r8, r6, r4
 800f12a:	f06f 0001 	mvn.w	r0, #1
 800f12e:	f816 8007 	ldrb.w	r8, [r6, r7]
 800f132:	9c01      	ldr	r4, [sp, #4]
 800f134:	fb00 fa0e 	mul.w	sl, r0, lr
 800f138:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f13c:	9800      	ldr	r0, [sp, #0]
 800f13e:	eb04 0b08 	add.w	fp, r4, r8
 800f142:	f830 400a 	ldrh.w	r4, [r0, sl]
 800f146:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f14a:	9801      	ldr	r0, [sp, #4]
 800f14c:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f150:	f810 8008 	ldrb.w	r8, [r0, r8]
 800f154:	9800      	ldr	r0, [sp, #0]
 800f156:	1227      	asrs	r7, r4, #8
 800f158:	fb16 f609 	smulbb	r6, r6, r9
 800f15c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f160:	fb07 6705 	mla	r7, r7, r5, r6
 800f164:	10e6      	asrs	r6, r4, #3
 800f166:	00e4      	lsls	r4, r4, #3
 800f168:	b2e4      	uxtb	r4, r4
 800f16a:	fb1b fb09 	smulbb	fp, fp, r9
 800f16e:	fb14 f405 	smulbb	r4, r4, r5
 800f172:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f176:	b2bf      	uxth	r7, r7
 800f178:	fb06 b605 	mla	r6, r6, r5, fp
 800f17c:	fb08 4809 	mla	r8, r8, r9, r4
 800f180:	b2b6      	uxth	r6, r6
 800f182:	fa1f f888 	uxth.w	r8, r8
 800f186:	1c7c      	adds	r4, r7, #1
 800f188:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800f18c:	f106 0b01 	add.w	fp, r6, #1
 800f190:	f108 0401 	add.w	r4, r8, #1
 800f194:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800f198:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f19c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f1a0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800f1a4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f1a8:	4327      	orrs	r7, r4
 800f1aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f1ae:	ea47 070b 	orr.w	r7, r7, fp
 800f1b2:	f820 700a 	strh.w	r7, [r0, sl]
 800f1b6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f1b8:	4401      	add	r1, r0
 800f1ba:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f1bc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f1c0:	4402      	add	r2, r0
 800f1c2:	e759      	b.n	800f078 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800f1c4:	b007      	add	sp, #28
 800f1c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f1cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1d0:	b085      	sub	sp, #20
 800f1d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f1d6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f1d8:	9203      	str	r2, [sp, #12]
 800f1da:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f1de:	6870      	ldr	r0, [r6, #4]
 800f1e0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f1e2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800f1e6:	686f      	ldr	r7, [r5, #4]
 800f1e8:	9101      	str	r1, [sp, #4]
 800f1ea:	fb00 2404 	mla	r4, r0, r4, r2
 800f1ee:	6832      	ldr	r2, [r6, #0]
 800f1f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f1f4:	682a      	ldr	r2, [r5, #0]
 800f1f6:	9202      	str	r2, [sp, #8]
 800f1f8:	3704      	adds	r7, #4
 800f1fa:	9a01      	ldr	r2, [sp, #4]
 800f1fc:	2a00      	cmp	r2, #0
 800f1fe:	dc03      	bgt.n	800f208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800f200:	9a03      	ldr	r2, [sp, #12]
 800f202:	2a00      	cmp	r2, #0
 800f204:	f340 80cc 	ble.w	800f3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800f208:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f20a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f20e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800f212:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f216:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f218:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f21c:	2b00      	cmp	r3, #0
 800f21e:	dd0d      	ble.n	800f23c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800f220:	1406      	asrs	r6, r0, #16
 800f222:	d405      	bmi.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f224:	454e      	cmp	r6, r9
 800f226:	da03      	bge.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f228:	1416      	asrs	r6, r2, #16
 800f22a:	d401      	bmi.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f22c:	4546      	cmp	r6, r8
 800f22e:	db06      	blt.n	800f23e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f230:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800f232:	4460      	add	r0, ip
 800f234:	4432      	add	r2, r6
 800f236:	3b01      	subs	r3, #1
 800f238:	3402      	adds	r4, #2
 800f23a:	e7ef      	b.n	800f21c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800f23c:	d00f      	beq.n	800f25e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800f23e:	1e5e      	subs	r6, r3, #1
 800f240:	fb0c 0e06 	mla	lr, ip, r6, r0
 800f244:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f248:	d543      	bpl.n	800f2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800f24a:	4698      	mov	r8, r3
 800f24c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800f250:	f1b8 0f00 	cmp.w	r8, #0
 800f254:	dc71      	bgt.n	800f33a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800f256:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f25a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f25e:	9b01      	ldr	r3, [sp, #4]
 800f260:	2b00      	cmp	r3, #0
 800f262:	f340 809d 	ble.w	800f3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800f266:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f26a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f26e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f272:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f274:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f278:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f27c:	eeb0 6a62 	vmov.f32	s12, s5
 800f280:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f284:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f288:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f28c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f290:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f294:	eeb0 6a43 	vmov.f32	s12, s6
 800f298:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f29c:	ee12 2a90 	vmov	r2, s5
 800f2a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f2a4:	fb92 fcf3 	sdiv	ip, r2, r3
 800f2a8:	ee13 2a10 	vmov	r2, s6
 800f2ac:	fb92 f3f3 	sdiv	r3, r2, r3
 800f2b0:	9312      	str	r3, [sp, #72]	; 0x48
 800f2b2:	9b01      	ldr	r3, [sp, #4]
 800f2b4:	9a03      	ldr	r2, [sp, #12]
 800f2b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f2ba:	3b01      	subs	r3, #1
 800f2bc:	9301      	str	r3, [sp, #4]
 800f2be:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f2c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2c4:	eeb0 3a67 	vmov.f32	s6, s15
 800f2c8:	bf08      	it	eq
 800f2ca:	4613      	moveq	r3, r2
 800f2cc:	eef0 2a47 	vmov.f32	s5, s14
 800f2d0:	e793      	b.n	800f1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800f2d2:	45ce      	cmp	lr, r9
 800f2d4:	dab9      	bge.n	800f24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f2d6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f2d8:	fb01 2606 	mla	r6, r1, r6, r2
 800f2dc:	1436      	asrs	r6, r6, #16
 800f2de:	d4b4      	bmi.n	800f24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f2e0:	4546      	cmp	r6, r8
 800f2e2:	dab2      	bge.n	800f24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f2e4:	4698      	mov	r8, r3
 800f2e6:	46a2      	mov	sl, r4
 800f2e8:	f1b8 0f00 	cmp.w	r8, #0
 800f2ec:	ddb3      	ble.n	800f256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800f2ee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f2f2:	9902      	ldr	r1, [sp, #8]
 800f2f4:	1416      	asrs	r6, r2, #16
 800f2f6:	fb09 1606 	mla	r6, r9, r6, r1
 800f2fa:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800f2fe:	492a      	ldr	r1, [pc, #168]	; (800f3a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800f300:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800f304:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800f308:	eb07 0b0e 	add.w	fp, r7, lr
 800f30c:	4460      	add	r0, ip
 800f30e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800f312:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800f316:	00f6      	lsls	r6, r6, #3
 800f318:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800f31c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f320:	ea49 0606 	orr.w	r6, r9, r6
 800f324:	f817 900e 	ldrb.w	r9, [r7, lr]
 800f328:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f32a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800f32e:	f82a 6b02 	strh.w	r6, [sl], #2
 800f332:	440a      	add	r2, r1
 800f334:	f108 38ff 	add.w	r8, r8, #4294967295
 800f338:	e7d6      	b.n	800f2e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f33a:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f33e:	d429      	bmi.n	800f394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f340:	68ae      	ldr	r6, [r5, #8]
 800f342:	454e      	cmp	r6, r9
 800f344:	dd26      	ble.n	800f394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f346:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800f34a:	d423      	bmi.n	800f394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f34c:	68e9      	ldr	r1, [r5, #12]
 800f34e:	4559      	cmp	r1, fp
 800f350:	dd20      	ble.n	800f394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f352:	9902      	ldr	r1, [sp, #8]
 800f354:	fa0f fe86 	sxth.w	lr, r6
 800f358:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800f35c:	f06f 0101 	mvn.w	r1, #1
 800f360:	f81e e009 	ldrb.w	lr, [lr, r9]
 800f364:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800f368:	eb07 060e 	add.w	r6, r7, lr
 800f36c:	fb01 f908 	mul.w	r9, r1, r8
 800f370:	f896 b002 	ldrb.w	fp, [r6, #2]
 800f374:	7876      	ldrb	r6, [r6, #1]
 800f376:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800f37a:	00f6      	lsls	r6, r6, #3
 800f37c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800f380:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f384:	ea4b 0606 	orr.w	r6, fp, r6
 800f388:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800f38c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800f390:	f82a 6009 	strh.w	r6, [sl, r9]
 800f394:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f396:	4460      	add	r0, ip
 800f398:	440a      	add	r2, r1
 800f39a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f39e:	e757      	b.n	800f250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f3a0:	b005      	add	sp, #20
 800f3a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3a6:	bf00      	nop
 800f3a8:	fffff800 	.word	0xfffff800

0800f3ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3b0:	b087      	sub	sp, #28
 800f3b2:	468b      	mov	fp, r1
 800f3b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f3b6:	9204      	str	r2, [sp, #16]
 800f3b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f3bc:	9205      	str	r2, [sp, #20]
 800f3be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f3c2:	6841      	ldr	r1, [r0, #4]
 800f3c4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800f3c8:	fb01 2404 	mla	r4, r1, r4, r2
 800f3cc:	6802      	ldr	r2, [r0, #0]
 800f3ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f3d2:	f8dc 2000 	ldr.w	r2, [ip]
 800f3d6:	9201      	str	r2, [sp, #4]
 800f3d8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800f3dc:	3204      	adds	r2, #4
 800f3de:	9202      	str	r2, [sp, #8]
 800f3e0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f3e4:	f1bb 0f00 	cmp.w	fp, #0
 800f3e8:	dc03      	bgt.n	800f3f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800f3ea:	9a04      	ldr	r2, [sp, #16]
 800f3ec:	2a00      	cmp	r2, #0
 800f3ee:	f340 8138 	ble.w	800f662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f3f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f3f4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800f3f8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800f3fc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f400:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f402:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f406:	2b00      	cmp	r3, #0
 800f408:	dd0e      	ble.n	800f428 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f40a:	1402      	asrs	r2, r0, #16
 800f40c:	d405      	bmi.n	800f41a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f40e:	42ba      	cmp	r2, r7
 800f410:	da03      	bge.n	800f41a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f412:	140a      	asrs	r2, r1, #16
 800f414:	d401      	bmi.n	800f41a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f416:	42b2      	cmp	r2, r6
 800f418:	db07      	blt.n	800f42a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f41a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f41c:	4410      	add	r0, r2
 800f41e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f420:	3b01      	subs	r3, #1
 800f422:	4411      	add	r1, r2
 800f424:	3402      	adds	r4, #2
 800f426:	e7ee      	b.n	800f406 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800f428:	d019      	beq.n	800f45e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800f42a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f42c:	1e5a      	subs	r2, r3, #1
 800f42e:	fb05 0502 	mla	r5, r5, r2, r0
 800f432:	142d      	asrs	r5, r5, #16
 800f434:	d409      	bmi.n	800f44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f436:	42bd      	cmp	r5, r7
 800f438:	da07      	bge.n	800f44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f43a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f43c:	fb05 1202 	mla	r2, r5, r2, r1
 800f440:	1412      	asrs	r2, r2, #16
 800f442:	d402      	bmi.n	800f44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f444:	42b2      	cmp	r2, r6
 800f446:	f2c0 80ac 	blt.w	800f5a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800f44a:	f04f 0e00 	mov.w	lr, #0
 800f44e:	eb03 020e 	add.w	r2, r3, lr
 800f452:	2a00      	cmp	r2, #0
 800f454:	dc3e      	bgt.n	800f4d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800f456:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f45a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f45e:	f1bb 0f00 	cmp.w	fp, #0
 800f462:	f340 80fe 	ble.w	800f662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f466:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f46a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f46e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f472:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f474:	f1bb 0b01 	subs.w	fp, fp, #1
 800f478:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f47c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f480:	eeb0 6a62 	vmov.f32	s12, s5
 800f484:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f488:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f48c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f490:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f494:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f498:	eeb0 6a43 	vmov.f32	s12, s6
 800f49c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f4a0:	ee12 2a90 	vmov	r2, s5
 800f4a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f4a8:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4ac:	ee13 2a10 	vmov	r2, s6
 800f4b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f4b4:	9313      	str	r3, [sp, #76]	; 0x4c
 800f4b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4b8:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4bc:	9a04      	ldr	r2, [sp, #16]
 800f4be:	9314      	str	r3, [sp, #80]	; 0x50
 800f4c0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f4c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4c6:	eeb0 3a67 	vmov.f32	s6, s15
 800f4ca:	bf08      	it	eq
 800f4cc:	4613      	moveq	r3, r2
 800f4ce:	eef0 2a47 	vmov.f32	s5, s14
 800f4d2:	e787      	b.n	800f3e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f4d4:	1406      	asrs	r6, r0, #16
 800f4d6:	d45d      	bmi.n	800f594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f4d8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800f4dc:	42b5      	cmp	r5, r6
 800f4de:	dd59      	ble.n	800f594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f4e0:	140f      	asrs	r7, r1, #16
 800f4e2:	d457      	bmi.n	800f594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f4e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800f4e8:	42ba      	cmp	r2, r7
 800f4ea:	dd53      	ble.n	800f594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f4ec:	9a01      	ldr	r2, [sp, #4]
 800f4ee:	b22d      	sxth	r5, r5
 800f4f0:	fb07 2505 	mla	r5, r7, r5, r2
 800f4f4:	5daa      	ldrb	r2, [r5, r6]
 800f4f6:	9d02      	ldr	r5, [sp, #8]
 800f4f8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f4fc:	0e2e      	lsrs	r6, r5, #24
 800f4fe:	d049      	beq.n	800f594 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f500:	f06f 0201 	mvn.w	r2, #1
 800f504:	fb02 f20e 	mul.w	r2, r2, lr
 800f508:	9203      	str	r2, [sp, #12]
 800f50a:	f834 8002 	ldrh.w	r8, [r4, r2]
 800f50e:	9a05      	ldr	r2, [sp, #20]
 800f510:	4356      	muls	r6, r2
 800f512:	1c72      	adds	r2, r6, #1
 800f514:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f518:	1212      	asrs	r2, r2, #8
 800f51a:	fa1f f982 	uxth.w	r9, r2
 800f51e:	ea4f 2728 	mov.w	r7, r8, asr #8
 800f522:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f526:	43d2      	mvns	r2, r2
 800f528:	b2d2      	uxtb	r2, r2
 800f52a:	fb16 f609 	smulbb	r6, r6, r9
 800f52e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f532:	fb07 6702 	mla	r7, r7, r2, r6
 800f536:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f53a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f53e:	b2ed      	uxtb	r5, r5
 800f540:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f544:	fa5f f888 	uxtb.w	r8, r8
 800f548:	fb15 f509 	smulbb	r5, r5, r9
 800f54c:	fb08 5502 	mla	r5, r8, r2, r5
 800f550:	b2bf      	uxth	r7, r7
 800f552:	fb1a fa09 	smulbb	sl, sl, r9
 800f556:	b2ad      	uxth	r5, r5
 800f558:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f55c:	fb06 a602 	mla	r6, r6, r2, sl
 800f560:	1c7a      	adds	r2, r7, #1
 800f562:	f105 0a01 	add.w	sl, r5, #1
 800f566:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f56a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f56e:	b2b6      	uxth	r6, r6
 800f570:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f574:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f578:	ea4a 0707 	orr.w	r7, sl, r7
 800f57c:	f106 0a01 	add.w	sl, r6, #1
 800f580:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f584:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f588:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f58c:	9a03      	ldr	r2, [sp, #12]
 800f58e:	ea47 070a 	orr.w	r7, r7, sl
 800f592:	52a7      	strh	r7, [r4, r2]
 800f594:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f596:	4410      	add	r0, r2
 800f598:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f59a:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f59e:	4411      	add	r1, r2
 800f5a0:	e755      	b.n	800f44e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f5a2:	f04f 0800 	mov.w	r8, #0
 800f5a6:	eba3 0208 	sub.w	r2, r3, r8
 800f5aa:	2a00      	cmp	r2, #0
 800f5ac:	f77f af53 	ble.w	800f456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800f5b0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800f5b4:	9f01      	ldr	r7, [sp, #4]
 800f5b6:	140a      	asrs	r2, r1, #16
 800f5b8:	1405      	asrs	r5, r0, #16
 800f5ba:	fb06 7202 	mla	r2, r6, r2, r7
 800f5be:	5d52      	ldrb	r2, [r2, r5]
 800f5c0:	9d02      	ldr	r5, [sp, #8]
 800f5c2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f5c6:	0e2e      	lsrs	r6, r5, #24
 800f5c8:	d044      	beq.n	800f654 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800f5ca:	9a05      	ldr	r2, [sp, #20]
 800f5cc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800f5d0:	4356      	muls	r6, r2
 800f5d2:	1c72      	adds	r2, r6, #1
 800f5d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f5d8:	1212      	asrs	r2, r2, #8
 800f5da:	fa1f f982 	uxth.w	r9, r2
 800f5de:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f5e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f5e6:	43d2      	mvns	r2, r2
 800f5e8:	b2d2      	uxtb	r2, r2
 800f5ea:	fb16 f609 	smulbb	r6, r6, r9
 800f5ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f5f2:	fb07 6702 	mla	r7, r7, r2, r6
 800f5f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f5fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f5fe:	b2ed      	uxtb	r5, r5
 800f600:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f604:	fa5f fe8e 	uxtb.w	lr, lr
 800f608:	fb15 f509 	smulbb	r5, r5, r9
 800f60c:	fb0e 5502 	mla	r5, lr, r2, r5
 800f610:	b2bf      	uxth	r7, r7
 800f612:	fb1a fa09 	smulbb	sl, sl, r9
 800f616:	b2ad      	uxth	r5, r5
 800f618:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f61c:	fb06 a602 	mla	r6, r6, r2, sl
 800f620:	1c7a      	adds	r2, r7, #1
 800f622:	f105 0a01 	add.w	sl, r5, #1
 800f626:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f62a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f62e:	b2b6      	uxth	r6, r6
 800f630:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f634:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f638:	ea4a 0707 	orr.w	r7, sl, r7
 800f63c:	f106 0a01 	add.w	sl, r6, #1
 800f640:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f644:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f648:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f64c:	ea47 070a 	orr.w	r7, r7, sl
 800f650:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f654:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f656:	4410      	add	r0, r2
 800f658:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f65a:	f108 0801 	add.w	r8, r8, #1
 800f65e:	4411      	add	r1, r2
 800f660:	e7a1      	b.n	800f5a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800f662:	b007      	add	sp, #28
 800f664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f668 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f66c:	b085      	sub	sp, #20
 800f66e:	468b      	mov	fp, r1
 800f670:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f672:	9203      	str	r2, [sp, #12]
 800f674:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f678:	6841      	ldr	r1, [r0, #4]
 800f67a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800f67e:	fb01 2404 	mla	r4, r1, r4, r2
 800f682:	6802      	ldr	r2, [r0, #0]
 800f684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f688:	f8de 2000 	ldr.w	r2, [lr]
 800f68c:	9200      	str	r2, [sp, #0]
 800f68e:	f8de 2004 	ldr.w	r2, [lr, #4]
 800f692:	3204      	adds	r2, #4
 800f694:	9201      	str	r2, [sp, #4]
 800f696:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f69a:	f1bb 0f00 	cmp.w	fp, #0
 800f69e:	dc03      	bgt.n	800f6a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800f6a0:	9a03      	ldr	r2, [sp, #12]
 800f6a2:	2a00      	cmp	r2, #0
 800f6a4:	f340 8153 	ble.w	800f94e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800f6a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f6aa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f6ae:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800f6b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f6b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f6b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f6bc:	2b00      	cmp	r3, #0
 800f6be:	dd0e      	ble.n	800f6de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f6c0:	1408      	asrs	r0, r1, #16
 800f6c2:	d405      	bmi.n	800f6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f6c4:	42b8      	cmp	r0, r7
 800f6c6:	da03      	bge.n	800f6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f6c8:	1410      	asrs	r0, r2, #16
 800f6ca:	d401      	bmi.n	800f6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f6cc:	42b0      	cmp	r0, r6
 800f6ce:	db07      	blt.n	800f6e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800f6d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f6d2:	4401      	add	r1, r0
 800f6d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f6d6:	3b01      	subs	r3, #1
 800f6d8:	4402      	add	r2, r0
 800f6da:	3402      	adds	r4, #2
 800f6dc:	e7ee      	b.n	800f6bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800f6de:	d017      	beq.n	800f710 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800f6e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f6e2:	1e58      	subs	r0, r3, #1
 800f6e4:	fb05 1500 	mla	r5, r5, r0, r1
 800f6e8:	142d      	asrs	r5, r5, #16
 800f6ea:	d409      	bmi.n	800f700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f6ec:	42bd      	cmp	r5, r7
 800f6ee:	da07      	bge.n	800f700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f6f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f6f2:	fb05 2000 	mla	r0, r5, r0, r2
 800f6f6:	1400      	asrs	r0, r0, #16
 800f6f8:	d402      	bmi.n	800f700 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f6fa:	42b0      	cmp	r0, r6
 800f6fc:	f2c0 80bc 	blt.w	800f878 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800f700:	2600      	movs	r6, #0
 800f702:	1998      	adds	r0, r3, r6
 800f704:	2800      	cmp	r0, #0
 800f706:	dc3e      	bgt.n	800f786 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800f708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f70c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f710:	f1bb 0f00 	cmp.w	fp, #0
 800f714:	f340 811b 	ble.w	800f94e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800f718:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f71c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f726:	f1bb 0b01 	subs.w	fp, fp, #1
 800f72a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f72e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f732:	eeb0 6a62 	vmov.f32	s12, s5
 800f736:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f73a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f73e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f742:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f74a:	eeb0 6a43 	vmov.f32	s12, s6
 800f74e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f752:	ee12 2a90 	vmov	r2, s5
 800f756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f75a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f75e:	ee13 2a10 	vmov	r2, s6
 800f762:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f766:	9311      	str	r3, [sp, #68]	; 0x44
 800f768:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f76a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f76e:	9a03      	ldr	r2, [sp, #12]
 800f770:	9312      	str	r3, [sp, #72]	; 0x48
 800f772:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f778:	eeb0 3a67 	vmov.f32	s6, s15
 800f77c:	bf08      	it	eq
 800f77e:	4613      	moveq	r3, r2
 800f780:	eef0 2a47 	vmov.f32	s5, s14
 800f784:	e789      	b.n	800f69a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f786:	140f      	asrs	r7, r1, #16
 800f788:	d45e      	bmi.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f78a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f78e:	42bd      	cmp	r5, r7
 800f790:	dd5a      	ble.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f792:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f796:	d457      	bmi.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f798:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f79c:	4560      	cmp	r0, ip
 800f79e:	dd53      	ble.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f7a0:	9800      	ldr	r0, [sp, #0]
 800f7a2:	b22d      	sxth	r5, r5
 800f7a4:	fb0c 0505 	mla	r5, ip, r5, r0
 800f7a8:	5de8      	ldrb	r0, [r5, r7]
 800f7aa:	9d01      	ldr	r5, [sp, #4]
 800f7ac:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f7b0:	0e07      	lsrs	r7, r0, #24
 800f7b2:	2fff      	cmp	r7, #255	; 0xff
 800f7b4:	d04e      	beq.n	800f854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800f7b6:	b2fd      	uxtb	r5, r7
 800f7b8:	2f00      	cmp	r7, #0
 800f7ba:	d045      	beq.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f7bc:	f06f 0701 	mvn.w	r7, #1
 800f7c0:	4377      	muls	r7, r6
 800f7c2:	fa1f f985 	uxth.w	r9, r5
 800f7c6:	f834 8007 	ldrh.w	r8, [r4, r7]
 800f7ca:	9702      	str	r7, [sp, #8]
 800f7cc:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f7d0:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800f7d4:	43ed      	mvns	r5, r5
 800f7d6:	b2ed      	uxtb	r5, r5
 800f7d8:	fb17 f709 	smulbb	r7, r7, r9
 800f7dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f7e0:	fb0c 7c05 	mla	ip, ip, r5, r7
 800f7e4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f7e8:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f7ec:	b2c0      	uxtb	r0, r0
 800f7ee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f7f2:	fa5f f888 	uxtb.w	r8, r8
 800f7f6:	fb10 f009 	smulbb	r0, r0, r9
 800f7fa:	fb08 0005 	mla	r0, r8, r5, r0
 800f7fe:	b280      	uxth	r0, r0
 800f800:	fa1f fc8c 	uxth.w	ip, ip
 800f804:	fb1a fa09 	smulbb	sl, sl, r9
 800f808:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f80c:	fb07 a705 	mla	r7, r7, r5, sl
 800f810:	f100 0a01 	add.w	sl, r0, #1
 800f814:	f10c 0501 	add.w	r5, ip, #1
 800f818:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f81c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f820:	b2bf      	uxth	r7, r7
 800f822:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f826:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f82a:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f82e:	f107 0a01 	add.w	sl, r7, #1
 800f832:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f836:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f83a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f83e:	9802      	ldr	r0, [sp, #8]
 800f840:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f844:	f824 c000 	strh.w	ip, [r4, r0]
 800f848:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f84a:	4401      	add	r1, r0
 800f84c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f84e:	3e01      	subs	r6, #1
 800f850:	4402      	add	r2, r0
 800f852:	e756      	b.n	800f702 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800f854:	f06f 0501 	mvn.w	r5, #1
 800f858:	fb05 f706 	mul.w	r7, r5, r6
 800f85c:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800f860:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800f864:	0945      	lsrs	r5, r0, #5
 800f866:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f86a:	ea4c 0505 	orr.w	r5, ip, r5
 800f86e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f872:	4305      	orrs	r5, r0
 800f874:	53e5      	strh	r5, [r4, r7]
 800f876:	e7e7      	b.n	800f848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f878:	f04f 0800 	mov.w	r8, #0
 800f87c:	eba3 0008 	sub.w	r0, r3, r8
 800f880:	2800      	cmp	r0, #0
 800f882:	f77f af41 	ble.w	800f708 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f886:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f88a:	9f00      	ldr	r7, [sp, #0]
 800f88c:	1410      	asrs	r0, r2, #16
 800f88e:	140d      	asrs	r5, r1, #16
 800f890:	fb06 7000 	mla	r0, r6, r0, r7
 800f894:	5d40      	ldrb	r0, [r0, r5]
 800f896:	9d01      	ldr	r5, [sp, #4]
 800f898:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f89c:	0e06      	lsrs	r6, r0, #24
 800f89e:	2eff      	cmp	r6, #255	; 0xff
 800f8a0:	d048      	beq.n	800f934 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 800f8a2:	b2f5      	uxtb	r5, r6
 800f8a4:	2e00      	cmp	r6, #0
 800f8a6:	d03e      	beq.n	800f926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800f8a8:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800f8ac:	fa1f f985 	uxth.w	r9, r5
 800f8b0:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f8b4:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800f8b8:	43ed      	mvns	r5, r5
 800f8ba:	b2ed      	uxtb	r5, r5
 800f8bc:	fb16 f609 	smulbb	r6, r6, r9
 800f8c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f8c4:	fb07 6705 	mla	r7, r7, r5, r6
 800f8c8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f8cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f8d0:	b2c0      	uxtb	r0, r0
 800f8d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f8d6:	fa5f fc8c 	uxtb.w	ip, ip
 800f8da:	fb10 f009 	smulbb	r0, r0, r9
 800f8de:	fb0c 0005 	mla	r0, ip, r5, r0
 800f8e2:	b2bf      	uxth	r7, r7
 800f8e4:	fb1a fa09 	smulbb	sl, sl, r9
 800f8e8:	b280      	uxth	r0, r0
 800f8ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f8ee:	fb06 a605 	mla	r6, r6, r5, sl
 800f8f2:	1c7d      	adds	r5, r7, #1
 800f8f4:	f100 0a01 	add.w	sl, r0, #1
 800f8f8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f8fc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f900:	b2b6      	uxth	r6, r6
 800f902:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f906:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f90a:	ea4a 0707 	orr.w	r7, sl, r7
 800f90e:	f106 0a01 	add.w	sl, r6, #1
 800f912:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f916:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f91a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f91e:	ea47 070a 	orr.w	r7, r7, sl
 800f922:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f926:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f928:	4401      	add	r1, r0
 800f92a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f92c:	f108 0801 	add.w	r8, r8, #1
 800f930:	4402      	add	r2, r0
 800f932:	e7a3      	b.n	800f87c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800f934:	4d07      	ldr	r5, [pc, #28]	; (800f954 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800f936:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800f93a:	0945      	lsrs	r5, r0, #5
 800f93c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f940:	4335      	orrs	r5, r6
 800f942:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f946:	4305      	orrs	r5, r0
 800f948:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 800f94c:	e7eb      	b.n	800f926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800f94e:	b005      	add	sp, #20
 800f950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f954:	fffff800 	.word	0xfffff800

0800f958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f95c:	b087      	sub	sp, #28
 800f95e:	468b      	mov	fp, r1
 800f960:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f962:	9204      	str	r2, [sp, #16]
 800f964:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f968:	9205      	str	r2, [sp, #20]
 800f96a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f96e:	6861      	ldr	r1, [r4, #4]
 800f970:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800f974:	fb01 2000 	mla	r0, r1, r0, r2
 800f978:	6822      	ldr	r2, [r4, #0]
 800f97a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f97e:	f8de 2000 	ldr.w	r2, [lr]
 800f982:	9201      	str	r2, [sp, #4]
 800f984:	f8de 2004 	ldr.w	r2, [lr, #4]
 800f988:	9202      	str	r2, [sp, #8]
 800f98a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f98e:	f1bb 0f00 	cmp.w	fp, #0
 800f992:	dc03      	bgt.n	800f99c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800f994:	9a04      	ldr	r2, [sp, #16]
 800f996:	2a00      	cmp	r2, #0
 800f998:	f340 8142 	ble.w	800fc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800f99c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f99e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f9a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800f9a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f9aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f9ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f9b0:	2b00      	cmp	r3, #0
 800f9b2:	dd0e      	ble.n	800f9d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800f9b4:	140c      	asrs	r4, r1, #16
 800f9b6:	d405      	bmi.n	800f9c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f9b8:	42bc      	cmp	r4, r7
 800f9ba:	da03      	bge.n	800f9c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f9bc:	1414      	asrs	r4, r2, #16
 800f9be:	d401      	bmi.n	800f9c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f9c0:	42b4      	cmp	r4, r6
 800f9c2:	db07      	blt.n	800f9d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f9c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f9c6:	4421      	add	r1, r4
 800f9c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f9ca:	3b01      	subs	r3, #1
 800f9cc:	4422      	add	r2, r4
 800f9ce:	3002      	adds	r0, #2
 800f9d0:	e7ee      	b.n	800f9b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800f9d2:	d019      	beq.n	800fa08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800f9d4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f9d6:	1e5c      	subs	r4, r3, #1
 800f9d8:	fb05 1504 	mla	r5, r5, r4, r1
 800f9dc:	142d      	asrs	r5, r5, #16
 800f9de:	d409      	bmi.n	800f9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f9e0:	42bd      	cmp	r5, r7
 800f9e2:	da07      	bge.n	800f9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f9e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f9e6:	fb05 2404 	mla	r4, r5, r4, r2
 800f9ea:	1424      	asrs	r4, r4, #16
 800f9ec:	d402      	bmi.n	800f9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f9ee:	42b4      	cmp	r4, r6
 800f9f0:	f2c0 80b1 	blt.w	800fb56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800f9f4:	f04f 0800 	mov.w	r8, #0
 800f9f8:	eb03 0408 	add.w	r4, r3, r8
 800f9fc:	2c00      	cmp	r4, #0
 800f9fe:	dc3e      	bgt.n	800fa7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800fa00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fa08:	f1bb 0f00 	cmp.w	fp, #0
 800fa0c:	f340 8108 	ble.w	800fc20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800fa10:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fa14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fa18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fa1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa1e:	f1bb 0b01 	subs.w	fp, fp, #1
 800fa22:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fa26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fa2a:	eeb0 6a62 	vmov.f32	s12, s5
 800fa2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fa32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa36:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fa3a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fa3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fa42:	eeb0 6a43 	vmov.f32	s12, s6
 800fa46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fa4a:	ee12 2a90 	vmov	r2, s5
 800fa4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fa52:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa56:	ee13 2a10 	vmov	r2, s6
 800fa5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa5e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fa60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa62:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa66:	9a04      	ldr	r2, [sp, #16]
 800fa68:	9314      	str	r3, [sp, #80]	; 0x50
 800fa6a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fa6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa70:	eeb0 3a67 	vmov.f32	s6, s15
 800fa74:	bf08      	it	eq
 800fa76:	4613      	moveq	r3, r2
 800fa78:	eef0 2a47 	vmov.f32	s5, s14
 800fa7c:	e787      	b.n	800f98e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800fa7e:	140e      	asrs	r6, r1, #16
 800fa80:	d462      	bmi.n	800fb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fa82:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fa86:	42b5      	cmp	r5, r6
 800fa88:	dd5e      	ble.n	800fb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fa8a:	1417      	asrs	r7, r2, #16
 800fa8c:	d45c      	bmi.n	800fb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fa8e:	f8de 400c 	ldr.w	r4, [lr, #12]
 800fa92:	42bc      	cmp	r4, r7
 800fa94:	dd58      	ble.n	800fb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fa96:	b22d      	sxth	r5, r5
 800fa98:	fb07 6505 	mla	r5, r7, r5, r6
 800fa9c:	9c02      	ldr	r4, [sp, #8]
 800fa9e:	5d66      	ldrb	r6, [r4, r5]
 800faa0:	2e00      	cmp	r6, #0
 800faa2:	d051      	beq.n	800fb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800faa4:	9c01      	ldr	r4, [sp, #4]
 800faa6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800faaa:	f06f 0401 	mvn.w	r4, #1
 800faae:	fb04 f408 	mul.w	r4, r4, r8
 800fab2:	9403      	str	r4, [sp, #12]
 800fab4:	5b05      	ldrh	r5, [r0, r4]
 800fab6:	9c05      	ldr	r4, [sp, #20]
 800fab8:	4366      	muls	r6, r4
 800faba:	1c74      	adds	r4, r6, #1
 800fabc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800fac0:	1224      	asrs	r4, r4, #8
 800fac2:	b2a7      	uxth	r7, r4
 800fac4:	122e      	asrs	r6, r5, #8
 800fac6:	43e4      	mvns	r4, r4
 800fac8:	b2e4      	uxtb	r4, r4
 800faca:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800face:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fad2:	fb16 f604 	smulbb	r6, r6, r4
 800fad6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fada:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fade:	00ed      	lsls	r5, r5, #3
 800fae0:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fae4:	b2ed      	uxtb	r5, r5
 800fae6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800faea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800faee:	fb15 f504 	smulbb	r5, r5, r4
 800faf2:	fa5f f989 	uxtb.w	r9, r9
 800faf6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fafa:	fb09 5507 	mla	r5, r9, r7, r5
 800fafe:	fb1a fa04 	smulbb	sl, sl, r4
 800fb02:	fa1f fc8c 	uxth.w	ip, ip
 800fb06:	b2ad      	uxth	r5, r5
 800fb08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fb0c:	fb06 a607 	mla	r6, r6, r7, sl
 800fb10:	f10c 0401 	add.w	r4, ip, #1
 800fb14:	f105 0a01 	add.w	sl, r5, #1
 800fb18:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800fb1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fb20:	b2b6      	uxth	r6, r6
 800fb22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fb26:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fb2a:	ea4a 0c0c 	orr.w	ip, sl, ip
 800fb2e:	f106 0a01 	add.w	sl, r6, #1
 800fb32:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fb36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fb3a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fb3e:	9c03      	ldr	r4, [sp, #12]
 800fb40:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fb44:	f820 c004 	strh.w	ip, [r0, r4]
 800fb48:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fb4a:	4421      	add	r1, r4
 800fb4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fb4e:	f108 38ff 	add.w	r8, r8, #4294967295
 800fb52:	4422      	add	r2, r4
 800fb54:	e750      	b.n	800f9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800fb56:	f04f 0900 	mov.w	r9, #0
 800fb5a:	eba3 0409 	sub.w	r4, r3, r9
 800fb5e:	2c00      	cmp	r4, #0
 800fb60:	f77f af4e 	ble.w	800fa00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800fb64:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800fb68:	140d      	asrs	r5, r1, #16
 800fb6a:	1414      	asrs	r4, r2, #16
 800fb6c:	fb06 5404 	mla	r4, r6, r4, r5
 800fb70:	9d02      	ldr	r5, [sp, #8]
 800fb72:	5d2e      	ldrb	r6, [r5, r4]
 800fb74:	2e00      	cmp	r6, #0
 800fb76:	d04c      	beq.n	800fc12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800fb78:	9d01      	ldr	r5, [sp, #4]
 800fb7a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800fb7e:	9c05      	ldr	r4, [sp, #20]
 800fb80:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800fb84:	4366      	muls	r6, r4
 800fb86:	1c74      	adds	r4, r6, #1
 800fb88:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800fb8c:	1224      	asrs	r4, r4, #8
 800fb8e:	b2a7      	uxth	r7, r4
 800fb90:	122e      	asrs	r6, r5, #8
 800fb92:	43e4      	mvns	r4, r4
 800fb94:	b2e4      	uxtb	r4, r4
 800fb96:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800fb9a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fb9e:	fb16 f604 	smulbb	r6, r6, r4
 800fba2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fba6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fbaa:	00ed      	lsls	r5, r5, #3
 800fbac:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fbb0:	b2ed      	uxtb	r5, r5
 800fbb2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800fbb6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800fbba:	fb15 f504 	smulbb	r5, r5, r4
 800fbbe:	fa5f f888 	uxtb.w	r8, r8
 800fbc2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fbc6:	fb08 5507 	mla	r5, r8, r7, r5
 800fbca:	fb1a fa04 	smulbb	sl, sl, r4
 800fbce:	fa1f fc8c 	uxth.w	ip, ip
 800fbd2:	b2ad      	uxth	r5, r5
 800fbd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fbd8:	fb06 a607 	mla	r6, r6, r7, sl
 800fbdc:	f10c 0401 	add.w	r4, ip, #1
 800fbe0:	f105 0a01 	add.w	sl, r5, #1
 800fbe4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800fbe8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fbec:	b2b6      	uxth	r6, r6
 800fbee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fbf2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fbf6:	ea4a 0c0c 	orr.w	ip, sl, ip
 800fbfa:	f106 0a01 	add.w	sl, r6, #1
 800fbfe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fc02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fc06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fc0a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fc0e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800fc12:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fc14:	4421      	add	r1, r4
 800fc16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fc18:	f109 0901 	add.w	r9, r9, #1
 800fc1c:	4422      	add	r2, r4
 800fc1e:	e79c      	b.n	800fb5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 800fc20:	b007      	add	sp, #28
 800fc22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fc26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fc26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc2a:	b085      	sub	sp, #20
 800fc2c:	468b      	mov	fp, r1
 800fc2e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fc30:	9203      	str	r2, [sp, #12]
 800fc32:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 800fc36:	6861      	ldr	r1, [r4, #4]
 800fc38:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800fc3c:	fb01 2000 	mla	r0, r1, r0, r2
 800fc40:	6822      	ldr	r2, [r4, #0]
 800fc42:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800fc46:	f8d8 2000 	ldr.w	r2, [r8]
 800fc4a:	9200      	str	r2, [sp, #0]
 800fc4c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800fc50:	9201      	str	r2, [sp, #4]
 800fc52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fc56:	f1bb 0f00 	cmp.w	fp, #0
 800fc5a:	dc03      	bgt.n	800fc64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800fc5c:	9a03      	ldr	r2, [sp, #12]
 800fc5e:	2a00      	cmp	r2, #0
 800fc60:	f340 8146 	ble.w	800fef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800fc64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fc66:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800fc6a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800fc6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fc72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fc74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fc78:	2b00      	cmp	r3, #0
 800fc7a:	dd0e      	ble.n	800fc9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800fc7c:	140c      	asrs	r4, r1, #16
 800fc7e:	d405      	bmi.n	800fc8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc80:	42bc      	cmp	r4, r7
 800fc82:	da03      	bge.n	800fc8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc84:	1414      	asrs	r4, r2, #16
 800fc86:	d401      	bmi.n	800fc8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800fc88:	42b4      	cmp	r4, r6
 800fc8a:	db07      	blt.n	800fc9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fc8c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800fc8e:	4421      	add	r1, r4
 800fc90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800fc92:	3b01      	subs	r3, #1
 800fc94:	4422      	add	r2, r4
 800fc96:	3002      	adds	r0, #2
 800fc98:	e7ee      	b.n	800fc78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800fc9a:	d017      	beq.n	800fccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800fc9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fc9e:	1e5c      	subs	r4, r3, #1
 800fca0:	fb05 1504 	mla	r5, r5, r4, r1
 800fca4:	142d      	asrs	r5, r5, #16
 800fca6:	d409      	bmi.n	800fcbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fca8:	42bd      	cmp	r5, r7
 800fcaa:	da07      	bge.n	800fcbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fcac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fcae:	fb05 2404 	mla	r4, r5, r4, r2
 800fcb2:	1424      	asrs	r4, r4, #16
 800fcb4:	d402      	bmi.n	800fcbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800fcb6:	42b4      	cmp	r4, r6
 800fcb8:	f2c0 80b3 	blt.w	800fe22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fcbc:	2600      	movs	r6, #0
 800fcbe:	199c      	adds	r4, r3, r6
 800fcc0:	2c00      	cmp	r4, #0
 800fcc2:	dc3e      	bgt.n	800fd42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800fcc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fcc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fccc:	f1bb 0f00 	cmp.w	fp, #0
 800fcd0:	f340 810e 	ble.w	800fef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800fcd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fcd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fcdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fce2:	f1bb 0b01 	subs.w	fp, fp, #1
 800fce6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fcea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fcee:	eeb0 6a62 	vmov.f32	s12, s5
 800fcf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fcf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fcfe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fd02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fd06:	eeb0 6a43 	vmov.f32	s12, s6
 800fd0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fd0e:	ee12 2a90 	vmov	r2, s5
 800fd12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fd16:	fb92 f3f3 	sdiv	r3, r2, r3
 800fd1a:	ee13 2a10 	vmov	r2, s6
 800fd1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fd22:	9311      	str	r3, [sp, #68]	; 0x44
 800fd24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fd26:	fb92 f3f3 	sdiv	r3, r2, r3
 800fd2a:	9a03      	ldr	r2, [sp, #12]
 800fd2c:	9312      	str	r3, [sp, #72]	; 0x48
 800fd2e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fd32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fd34:	eeb0 3a67 	vmov.f32	s6, s15
 800fd38:	bf08      	it	eq
 800fd3a:	4613      	moveq	r3, r2
 800fd3c:	eef0 2a47 	vmov.f32	s5, s14
 800fd40:	e789      	b.n	800fc56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800fd42:	140f      	asrs	r7, r1, #16
 800fd44:	d45f      	bmi.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd46:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800fd4a:	42bd      	cmp	r5, r7
 800fd4c:	dd5b      	ble.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd4e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fd52:	d458      	bmi.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd54:	f8d8 400c 	ldr.w	r4, [r8, #12]
 800fd58:	4564      	cmp	r4, ip
 800fd5a:	dd54      	ble.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd5c:	b22d      	sxth	r5, r5
 800fd5e:	fb0c 7505 	mla	r5, ip, r5, r7
 800fd62:	9c01      	ldr	r4, [sp, #4]
 800fd64:	5d64      	ldrb	r4, [r4, r5]
 800fd66:	2cff      	cmp	r4, #255	; 0xff
 800fd68:	d053      	beq.n	800fe12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800fd6a:	2c00      	cmp	r4, #0
 800fd6c:	d04b      	beq.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fd6e:	9f00      	ldr	r7, [sp, #0]
 800fd70:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 800fd74:	f06f 0501 	mvn.w	r5, #1
 800fd78:	4375      	muls	r5, r6
 800fd7a:	9502      	str	r5, [sp, #8]
 800fd7c:	5b45      	ldrh	r5, [r0, r5]
 800fd7e:	fa1f fc84 	uxth.w	ip, r4
 800fd82:	122f      	asrs	r7, r5, #8
 800fd84:	43e4      	mvns	r4, r4
 800fd86:	b2e4      	uxtb	r4, r4
 800fd88:	ea4f 2e29 	mov.w	lr, r9, asr #8
 800fd8c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd90:	fb17 f704 	smulbb	r7, r7, r4
 800fd94:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fd98:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800fd9c:	00ed      	lsls	r5, r5, #3
 800fd9e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800fda2:	b2ed      	uxtb	r5, r5
 800fda4:	ea4f 07e9 	mov.w	r7, r9, asr #3
 800fda8:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800fdac:	fb15 f504 	smulbb	r5, r5, r4
 800fdb0:	fa5f f989 	uxtb.w	r9, r9
 800fdb4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fdb8:	fb09 550c 	mla	r5, r9, ip, r5
 800fdbc:	fb1a fa04 	smulbb	sl, sl, r4
 800fdc0:	fa1f fe8e 	uxth.w	lr, lr
 800fdc4:	b2ad      	uxth	r5, r5
 800fdc6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fdca:	fb07 a70c 	mla	r7, r7, ip, sl
 800fdce:	f10e 0401 	add.w	r4, lr, #1
 800fdd2:	f105 0a01 	add.w	sl, r5, #1
 800fdd6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800fdda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fdde:	b2bf      	uxth	r7, r7
 800fde0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fde4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800fde8:	ea4a 0e0e 	orr.w	lr, sl, lr
 800fdec:	f107 0a01 	add.w	sl, r7, #1
 800fdf0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fdf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fdf8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fdfc:	9c02      	ldr	r4, [sp, #8]
 800fdfe:	ea4e 0e0a 	orr.w	lr, lr, sl
 800fe02:	f820 e004 	strh.w	lr, [r0, r4]
 800fe06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800fe08:	4421      	add	r1, r4
 800fe0a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800fe0c:	3e01      	subs	r6, #1
 800fe0e:	4422      	add	r2, r4
 800fe10:	e755      	b.n	800fcbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fe12:	9c00      	ldr	r4, [sp, #0]
 800fe14:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800fe18:	f06f 0401 	mvn.w	r4, #1
 800fe1c:	4374      	muls	r4, r6
 800fe1e:	5305      	strh	r5, [r0, r4]
 800fe20:	e7f1      	b.n	800fe06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fe22:	f04f 0900 	mov.w	r9, #0
 800fe26:	eba3 0409 	sub.w	r4, r3, r9
 800fe2a:	2c00      	cmp	r4, #0
 800fe2c:	f77f af4a 	ble.w	800fcc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fe30:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800fe34:	1414      	asrs	r4, r2, #16
 800fe36:	140d      	asrs	r5, r1, #16
 800fe38:	fb06 5504 	mla	r5, r6, r4, r5
 800fe3c:	9c01      	ldr	r4, [sp, #4]
 800fe3e:	5d64      	ldrb	r4, [r4, r5]
 800fe40:	2cff      	cmp	r4, #255	; 0xff
 800fe42:	d04f      	beq.n	800fee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800fe44:	2c00      	cmp	r4, #0
 800fe46:	d046      	beq.n	800fed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800fe48:	9e00      	ldr	r6, [sp, #0]
 800fe4a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800fe4e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800fe52:	b2a7      	uxth	r7, r4
 800fe54:	122e      	asrs	r6, r5, #8
 800fe56:	43e4      	mvns	r4, r4
 800fe58:	b2e4      	uxtb	r4, r4
 800fe5a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fe5e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fe62:	fb16 f604 	smulbb	r6, r6, r4
 800fe66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fe6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fe6e:	00ed      	lsls	r5, r5, #3
 800fe70:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fe74:	b2ed      	uxtb	r5, r5
 800fe76:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800fe7a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fe7e:	fb15 f504 	smulbb	r5, r5, r4
 800fe82:	fa5f fe8e 	uxtb.w	lr, lr
 800fe86:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fe8a:	fb0e 5507 	mla	r5, lr, r7, r5
 800fe8e:	fb1a fa04 	smulbb	sl, sl, r4
 800fe92:	fa1f fc8c 	uxth.w	ip, ip
 800fe96:	b2ad      	uxth	r5, r5
 800fe98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fe9c:	fb06 a607 	mla	r6, r6, r7, sl
 800fea0:	f10c 0401 	add.w	r4, ip, #1
 800fea4:	f105 0a01 	add.w	sl, r5, #1
 800fea8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800feac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800feb0:	b2b6      	uxth	r6, r6
 800feb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800feb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800feba:	ea4a 0c0c 	orr.w	ip, sl, ip
 800febe:	f106 0a01 	add.w	sl, r6, #1
 800fec2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fec6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800feca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fece:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fed2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800fed6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800fed8:	4421      	add	r1, r4
 800feda:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800fedc:	f109 0901 	add.w	r9, r9, #1
 800fee0:	4422      	add	r2, r4
 800fee2:	e7a0      	b.n	800fe26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 800fee4:	9c00      	ldr	r4, [sp, #0]
 800fee6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800feea:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 800feee:	e7f2      	b.n	800fed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800fef0:	b005      	add	sp, #20
 800fef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fef6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fef6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fefa:	b085      	sub	sp, #20
 800fefc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fefe:	9203      	str	r2, [sp, #12]
 800ff00:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800ff04:	9201      	str	r2, [sp, #4]
 800ff06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ff0a:	9100      	str	r1, [sp, #0]
 800ff0c:	6841      	ldr	r1, [r0, #4]
 800ff0e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800ff12:	fb01 2404 	mla	r4, r1, r4, r2
 800ff16:	6802      	ldr	r2, [r0, #0]
 800ff18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff1c:	f8de 2000 	ldr.w	r2, [lr]
 800ff20:	9202      	str	r2, [sp, #8]
 800ff22:	9a01      	ldr	r2, [sp, #4]
 800ff24:	43d6      	mvns	r6, r2
 800ff26:	b2f6      	uxtb	r6, r6
 800ff28:	9a00      	ldr	r2, [sp, #0]
 800ff2a:	2a00      	cmp	r2, #0
 800ff2c:	dc03      	bgt.n	800ff36 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800ff2e:	9a03      	ldr	r2, [sp, #12]
 800ff30:	2a00      	cmp	r2, #0
 800ff32:	f340 8124 	ble.w	801017e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800ff36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ff38:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800ff3c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ff40:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ff46:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff4a:	2b00      	cmp	r3, #0
 800ff4c:	dd0e      	ble.n	800ff6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800ff4e:	1408      	asrs	r0, r1, #16
 800ff50:	d405      	bmi.n	800ff5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ff52:	4560      	cmp	r0, ip
 800ff54:	da03      	bge.n	800ff5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ff56:	1410      	asrs	r0, r2, #16
 800ff58:	d401      	bmi.n	800ff5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ff5a:	42b8      	cmp	r0, r7
 800ff5c:	db07      	blt.n	800ff6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800ff5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ff60:	4401      	add	r1, r0
 800ff62:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ff64:	3b01      	subs	r3, #1
 800ff66:	4402      	add	r2, r0
 800ff68:	3402      	adds	r4, #2
 800ff6a:	e7ee      	b.n	800ff4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800ff6c:	d06e      	beq.n	801004c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800ff6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ff70:	1e58      	subs	r0, r3, #1
 800ff72:	fb05 1500 	mla	r5, r5, r0, r1
 800ff76:	142d      	asrs	r5, r5, #16
 800ff78:	d45c      	bmi.n	8010034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ff7a:	4565      	cmp	r5, ip
 800ff7c:	da5a      	bge.n	8010034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ff7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ff80:	fb05 2000 	mla	r0, r5, r0, r2
 800ff84:	1400      	asrs	r0, r0, #16
 800ff86:	d455      	bmi.n	8010034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ff88:	42b8      	cmp	r0, r7
 800ff8a:	da53      	bge.n	8010034 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ff8c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 800ff90:	4699      	mov	r9, r3
 800ff92:	46a2      	mov	sl, r4
 800ff94:	f1b9 0f00 	cmp.w	r9, #0
 800ff98:	dd54      	ble.n	8010044 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ff9a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ff9e:	140d      	asrs	r5, r1, #16
 800ffa0:	1410      	asrs	r0, r2, #16
 800ffa2:	fb07 5000 	mla	r0, r7, r0, r5
 800ffa6:	9d02      	ldr	r5, [sp, #8]
 800ffa8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ffac:	f8ba 5000 	ldrh.w	r5, [sl]
 800ffb0:	122f      	asrs	r7, r5, #8
 800ffb2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ffb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ffba:	fb17 f706 	smulbb	r7, r7, r6
 800ffbe:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ffc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ffc6:	00ed      	lsls	r5, r5, #3
 800ffc8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ffcc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ffd0:	10c7      	asrs	r7, r0, #3
 800ffd2:	b2ed      	uxtb	r5, r5
 800ffd4:	00c0      	lsls	r0, r0, #3
 800ffd6:	fb18 f806 	smulbb	r8, r8, r6
 800ffda:	fb15 f506 	smulbb	r5, r5, r6
 800ffde:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ffe2:	b2c0      	uxtb	r0, r0
 800ffe4:	fa1f fc8c 	uxth.w	ip, ip
 800ffe8:	fb07 870b 	mla	r7, r7, fp, r8
 800ffec:	fb00 500b 	mla	r0, r0, fp, r5
 800fff0:	b280      	uxth	r0, r0
 800fff2:	b2bf      	uxth	r7, r7
 800fff4:	f10c 0501 	add.w	r5, ip, #1
 800fff8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fffc:	f107 0801 	add.w	r8, r7, #1
 8010000:	1c45      	adds	r5, r0, #1
 8010002:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010006:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801000a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801000c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010010:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010014:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8010018:	ea45 0c0c 	orr.w	ip, r5, ip
 801001c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010020:	4401      	add	r1, r0
 8010022:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010024:	ea4c 0c08 	orr.w	ip, ip, r8
 8010028:	f82a cb02 	strh.w	ip, [sl], #2
 801002c:	4402      	add	r2, r0
 801002e:	f109 39ff 	add.w	r9, r9, #4294967295
 8010032:	e7af      	b.n	800ff94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010034:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8010038:	f04f 0800 	mov.w	r8, #0
 801003c:	eb03 0008 	add.w	r0, r3, r8
 8010040:	2800      	cmp	r0, #0
 8010042:	dc41      	bgt.n	80100c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8010044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010048:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801004c:	9b00      	ldr	r3, [sp, #0]
 801004e:	2b00      	cmp	r3, #0
 8010050:	f340 8095 	ble.w	801017e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8010054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010058:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801005c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010060:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010062:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010066:	ee31 1a05 	vadd.f32	s2, s2, s10
 801006a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801006e:	eef0 6a62 	vmov.f32	s13, s5
 8010072:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010076:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801007a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801007e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8010082:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010086:	eef0 6a43 	vmov.f32	s13, s6
 801008a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801008e:	ee12 2a90 	vmov	r2, s5
 8010092:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010096:	fb92 f3f3 	sdiv	r3, r2, r3
 801009a:	ee13 2a10 	vmov	r2, s6
 801009e:	9311      	str	r3, [sp, #68]	; 0x44
 80100a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80100a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80100a6:	9312      	str	r3, [sp, #72]	; 0x48
 80100a8:	9b00      	ldr	r3, [sp, #0]
 80100aa:	9a03      	ldr	r2, [sp, #12]
 80100ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100b0:	3b01      	subs	r3, #1
 80100b2:	9300      	str	r3, [sp, #0]
 80100b4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80100b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80100ba:	eeb0 3a67 	vmov.f32	s6, s15
 80100be:	bf08      	it	eq
 80100c0:	4613      	moveq	r3, r2
 80100c2:	eef0 2a47 	vmov.f32	s5, s14
 80100c6:	e72f      	b.n	800ff28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80100c8:	140f      	asrs	r7, r1, #16
 80100ca:	d451      	bmi.n	8010170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80100cc:	f8de 5008 	ldr.w	r5, [lr, #8]
 80100d0:	42bd      	cmp	r5, r7
 80100d2:	dd4d      	ble.n	8010170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80100d4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80100d8:	d44a      	bmi.n	8010170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80100da:	f8de 000c 	ldr.w	r0, [lr, #12]
 80100de:	4560      	cmp	r0, ip
 80100e0:	dd46      	ble.n	8010170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80100e2:	b22d      	sxth	r5, r5
 80100e4:	fb0c 7505 	mla	r5, ip, r5, r7
 80100e8:	9802      	ldr	r0, [sp, #8]
 80100ea:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80100ee:	f06f 0501 	mvn.w	r5, #1
 80100f2:	fb05 fb08 	mul.w	fp, r5, r8
 80100f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80100fa:	f834 500b 	ldrh.w	r5, [r4, fp]
 80100fe:	122f      	asrs	r7, r5, #8
 8010100:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010104:	fb17 f706 	smulbb	r7, r7, r6
 8010108:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801010c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010110:	00ed      	lsls	r5, r5, #3
 8010112:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010116:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801011a:	10c7      	asrs	r7, r0, #3
 801011c:	b2ed      	uxtb	r5, r5
 801011e:	00c0      	lsls	r0, r0, #3
 8010120:	fb19 f906 	smulbb	r9, r9, r6
 8010124:	fb15 f506 	smulbb	r5, r5, r6
 8010128:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801012c:	b2c0      	uxtb	r0, r0
 801012e:	fa1f fc8c 	uxth.w	ip, ip
 8010132:	fb07 970a 	mla	r7, r7, sl, r9
 8010136:	fb00 500a 	mla	r0, r0, sl, r5
 801013a:	b2bf      	uxth	r7, r7
 801013c:	b280      	uxth	r0, r0
 801013e:	f10c 0501 	add.w	r5, ip, #1
 8010142:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010146:	f107 0901 	add.w	r9, r7, #1
 801014a:	1c45      	adds	r5, r0, #1
 801014c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010150:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010154:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010158:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801015c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010160:	ea45 0c0c 	orr.w	ip, r5, ip
 8010164:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010168:	ea4c 0c09 	orr.w	ip, ip, r9
 801016c:	f824 c00b 	strh.w	ip, [r4, fp]
 8010170:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010172:	4401      	add	r1, r0
 8010174:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010176:	f108 38ff 	add.w	r8, r8, #4294967295
 801017a:	4402      	add	r2, r0
 801017c:	e75e      	b.n	801003c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801017e:	b005      	add	sp, #20
 8010180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010188:	b085      	sub	sp, #20
 801018a:	4693      	mov	fp, r2
 801018c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801018e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010190:	6870      	ldr	r0, [r6, #4]
 8010192:	9101      	str	r1, [sp, #4]
 8010194:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010198:	fb00 2404 	mla	r4, r0, r4, r2
 801019c:	6832      	ldr	r2, [r6, #0]
 801019e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80101a2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101a6:	682a      	ldr	r2, [r5, #0]
 80101a8:	9202      	str	r2, [sp, #8]
 80101aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80101ae:	9a01      	ldr	r2, [sp, #4]
 80101b0:	2a00      	cmp	r2, #0
 80101b2:	dc03      	bgt.n	80101bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80101b4:	f1bb 0f00 	cmp.w	fp, #0
 80101b8:	f340 809a 	ble.w	80102f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80101bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80101be:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80101c2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80101c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80101ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80101cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80101d0:	2b00      	cmp	r3, #0
 80101d2:	dd0c      	ble.n	80101ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80101d4:	1406      	asrs	r6, r0, #16
 80101d6:	d405      	bmi.n	80101e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80101d8:	454e      	cmp	r6, r9
 80101da:	da03      	bge.n	80101e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80101dc:	1416      	asrs	r6, r2, #16
 80101de:	d401      	bmi.n	80101e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80101e0:	4546      	cmp	r6, r8
 80101e2:	db05      	blt.n	80101f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80101e4:	4470      	add	r0, lr
 80101e6:	4462      	add	r2, ip
 80101e8:	3b01      	subs	r3, #1
 80101ea:	3402      	adds	r4, #2
 80101ec:	e7f0      	b.n	80101d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80101ee:	d00f      	beq.n	8010210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80101f0:	1e5e      	subs	r6, r3, #1
 80101f2:	fb0e 0706 	mla	r7, lr, r6, r0
 80101f6:	143f      	asrs	r7, r7, #16
 80101f8:	d541      	bpl.n	801027e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80101fa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80101fe:	4698      	mov	r8, r3
 8010200:	9603      	str	r6, [sp, #12]
 8010202:	f1b8 0f00 	cmp.w	r8, #0
 8010206:	dc56      	bgt.n	80102b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8010208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801020c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010210:	9b01      	ldr	r3, [sp, #4]
 8010212:	2b00      	cmp	r3, #0
 8010214:	dd6c      	ble.n	80102f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8010216:	ee30 0a04 	vadd.f32	s0, s0, s8
 801021a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801021e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010222:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010224:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010228:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801022c:	eeb0 6a62 	vmov.f32	s12, s5
 8010230:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010234:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010238:	ee77 2a62 	vsub.f32	s5, s14, s5
 801023c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010240:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010244:	eeb0 6a43 	vmov.f32	s12, s6
 8010248:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801024c:	ee12 2a90 	vmov	r2, s5
 8010250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010254:	fb92 fef3 	sdiv	lr, r2, r3
 8010258:	ee13 2a10 	vmov	r2, s6
 801025c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010260:	9b01      	ldr	r3, [sp, #4]
 8010262:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010266:	3b01      	subs	r3, #1
 8010268:	9301      	str	r3, [sp, #4]
 801026a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801026e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010270:	eeb0 3a67 	vmov.f32	s6, s15
 8010274:	bf08      	it	eq
 8010276:	465b      	moveq	r3, fp
 8010278:	eef0 2a47 	vmov.f32	s5, s14
 801027c:	e797      	b.n	80101ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801027e:	454f      	cmp	r7, r9
 8010280:	dabb      	bge.n	80101fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010282:	fb0c 2606 	mla	r6, ip, r6, r2
 8010286:	1436      	asrs	r6, r6, #16
 8010288:	d4b7      	bmi.n	80101fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801028a:	4546      	cmp	r6, r8
 801028c:	dab5      	bge.n	80101fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801028e:	461e      	mov	r6, r3
 8010290:	46a0      	mov	r8, r4
 8010292:	2e00      	cmp	r6, #0
 8010294:	ddb8      	ble.n	8010208 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010296:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801029a:	9902      	ldr	r1, [sp, #8]
 801029c:	1417      	asrs	r7, r2, #16
 801029e:	ea4f 4920 	mov.w	r9, r0, asr #16
 80102a2:	fb0a 9707 	mla	r7, sl, r7, r9
 80102a6:	4470      	add	r0, lr
 80102a8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80102ac:	f828 7b02 	strh.w	r7, [r8], #2
 80102b0:	4462      	add	r2, ip
 80102b2:	3e01      	subs	r6, #1
 80102b4:	e7ed      	b.n	8010292 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80102b6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80102ba:	d414      	bmi.n	80102e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80102bc:	68ae      	ldr	r6, [r5, #8]
 80102be:	454e      	cmp	r6, r9
 80102c0:	dd11      	ble.n	80102e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80102c2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80102c6:	d40e      	bmi.n	80102e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80102c8:	68ef      	ldr	r7, [r5, #12]
 80102ca:	4557      	cmp	r7, sl
 80102cc:	dd0b      	ble.n	80102e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80102ce:	b236      	sxth	r6, r6
 80102d0:	fb0a 9606 	mla	r6, sl, r6, r9
 80102d4:	9f02      	ldr	r7, [sp, #8]
 80102d6:	f06f 0101 	mvn.w	r1, #1
 80102da:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80102de:	fb01 f608 	mul.w	r6, r1, r8
 80102e2:	9903      	ldr	r1, [sp, #12]
 80102e4:	538f      	strh	r7, [r1, r6]
 80102e6:	4470      	add	r0, lr
 80102e8:	4462      	add	r2, ip
 80102ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80102ee:	e788      	b.n	8010202 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80102f0:	b005      	add	sp, #20
 80102f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102fa:	b085      	sub	sp, #20
 80102fc:	468b      	mov	fp, r1
 80102fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010300:	9202      	str	r2, [sp, #8]
 8010302:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8010306:	9203      	str	r2, [sp, #12]
 8010308:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801030c:	6841      	ldr	r1, [r0, #4]
 801030e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010312:	fb01 2404 	mla	r4, r1, r4, r2
 8010316:	6802      	ldr	r2, [r0, #0]
 8010318:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801031c:	f8d8 2000 	ldr.w	r2, [r8]
 8010320:	9200      	str	r2, [sp, #0]
 8010322:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010326:	f1bb 0f00 	cmp.w	fp, #0
 801032a:	dc03      	bgt.n	8010334 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801032c:	9a02      	ldr	r2, [sp, #8]
 801032e:	2a00      	cmp	r2, #0
 8010330:	f340 8134 	ble.w	801059c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8010334:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010336:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801033a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801033e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010342:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010344:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010348:	2b00      	cmp	r3, #0
 801034a:	dd0e      	ble.n	801036a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801034c:	1402      	asrs	r2, r0, #16
 801034e:	d405      	bmi.n	801035c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010350:	42ba      	cmp	r2, r7
 8010352:	da03      	bge.n	801035c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010354:	140a      	asrs	r2, r1, #16
 8010356:	d401      	bmi.n	801035c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010358:	42b2      	cmp	r2, r6
 801035a:	db07      	blt.n	801036c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801035c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801035e:	4410      	add	r0, r2
 8010360:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010362:	3b01      	subs	r3, #1
 8010364:	4411      	add	r1, r2
 8010366:	3402      	adds	r4, #2
 8010368:	e7ee      	b.n	8010348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801036a:	d019      	beq.n	80103a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801036c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801036e:	1e5a      	subs	r2, r3, #1
 8010370:	fb05 0502 	mla	r5, r5, r2, r0
 8010374:	142d      	asrs	r5, r5, #16
 8010376:	d409      	bmi.n	801038c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010378:	42bd      	cmp	r5, r7
 801037a:	da07      	bge.n	801038c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801037c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801037e:	fb05 1202 	mla	r2, r5, r2, r1
 8010382:	1412      	asrs	r2, r2, #16
 8010384:	d402      	bmi.n	801038c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010386:	42b2      	cmp	r2, r6
 8010388:	f2c0 80aa 	blt.w	80104e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801038c:	f04f 0c00 	mov.w	ip, #0
 8010390:	eb03 020c 	add.w	r2, r3, ip
 8010394:	2a00      	cmp	r2, #0
 8010396:	dc3e      	bgt.n	8010416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8010398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801039c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80103a0:	f1bb 0f00 	cmp.w	fp, #0
 80103a4:	f340 80fa 	ble.w	801059c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80103a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80103ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80103b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80103b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80103ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80103be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80103c2:	eeb0 6a62 	vmov.f32	s12, s5
 80103c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80103ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80103d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80103d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80103da:	eeb0 6a43 	vmov.f32	s12, s6
 80103de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80103e2:	ee12 2a90 	vmov	r2, s5
 80103e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80103ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80103ee:	ee13 2a10 	vmov	r2, s6
 80103f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103f6:	9311      	str	r3, [sp, #68]	; 0x44
 80103f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80103fe:	9a02      	ldr	r2, [sp, #8]
 8010400:	9312      	str	r3, [sp, #72]	; 0x48
 8010402:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010406:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010408:	eeb0 3a67 	vmov.f32	s6, s15
 801040c:	bf08      	it	eq
 801040e:	4613      	moveq	r3, r2
 8010410:	eef0 2a47 	vmov.f32	s5, s14
 8010414:	e787      	b.n	8010326 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010416:	1406      	asrs	r6, r0, #16
 8010418:	d45b      	bmi.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801041a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801041e:	42b5      	cmp	r5, r6
 8010420:	dd57      	ble.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8010422:	140f      	asrs	r7, r1, #16
 8010424:	d455      	bmi.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8010426:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801042a:	42ba      	cmp	r2, r7
 801042c:	dd51      	ble.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801042e:	b22d      	sxth	r5, r5
 8010430:	fb07 6505 	mla	r5, r7, r5, r6
 8010434:	9a00      	ldr	r2, [sp, #0]
 8010436:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 801043a:	0e2e      	lsrs	r6, r5, #24
 801043c:	d049      	beq.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801043e:	f06f 0201 	mvn.w	r2, #1
 8010442:	fb02 f20c 	mul.w	r2, r2, ip
 8010446:	9201      	str	r2, [sp, #4]
 8010448:	f834 e002 	ldrh.w	lr, [r4, r2]
 801044c:	9a03      	ldr	r2, [sp, #12]
 801044e:	4356      	muls	r6, r2
 8010450:	1c72      	adds	r2, r6, #1
 8010452:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010456:	1212      	asrs	r2, r2, #8
 8010458:	fa1f f982 	uxth.w	r9, r2
 801045c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010460:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010464:	43d2      	mvns	r2, r2
 8010466:	b2d2      	uxtb	r2, r2
 8010468:	fb16 f609 	smulbb	r6, r6, r9
 801046c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010470:	fb07 6702 	mla	r7, r7, r2, r6
 8010474:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010478:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801047c:	b2ed      	uxtb	r5, r5
 801047e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010482:	fa5f fe8e 	uxtb.w	lr, lr
 8010486:	fb15 f509 	smulbb	r5, r5, r9
 801048a:	fb0e 5502 	mla	r5, lr, r2, r5
 801048e:	b2bf      	uxth	r7, r7
 8010490:	fb1a fa09 	smulbb	sl, sl, r9
 8010494:	b2ad      	uxth	r5, r5
 8010496:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801049a:	fb06 a602 	mla	r6, r6, r2, sl
 801049e:	1c7a      	adds	r2, r7, #1
 80104a0:	f105 0a01 	add.w	sl, r5, #1
 80104a4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80104a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80104ac:	b2b6      	uxth	r6, r6
 80104ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80104b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80104b6:	ea4a 0707 	orr.w	r7, sl, r7
 80104ba:	f106 0a01 	add.w	sl, r6, #1
 80104be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80104c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80104c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80104ca:	9a01      	ldr	r2, [sp, #4]
 80104cc:	ea47 070a 	orr.w	r7, r7, sl
 80104d0:	52a7      	strh	r7, [r4, r2]
 80104d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80104d4:	4410      	add	r0, r2
 80104d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80104d8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80104dc:	4411      	add	r1, r2
 80104de:	e757      	b.n	8010390 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80104e0:	f04f 0e00 	mov.w	lr, #0
 80104e4:	eba3 020e 	sub.w	r2, r3, lr
 80104e8:	2a00      	cmp	r2, #0
 80104ea:	f77f af55 	ble.w	8010398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80104ee:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80104f2:	1405      	asrs	r5, r0, #16
 80104f4:	140a      	asrs	r2, r1, #16
 80104f6:	fb06 5202 	mla	r2, r6, r2, r5
 80104fa:	9d00      	ldr	r5, [sp, #0]
 80104fc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010500:	0e2e      	lsrs	r6, r5, #24
 8010502:	d044      	beq.n	801058e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8010504:	9a03      	ldr	r2, [sp, #12]
 8010506:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801050a:	4356      	muls	r6, r2
 801050c:	1c72      	adds	r2, r6, #1
 801050e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010512:	1212      	asrs	r2, r2, #8
 8010514:	fa1f f982 	uxth.w	r9, r2
 8010518:	ea4f 272c 	mov.w	r7, ip, asr #8
 801051c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010520:	43d2      	mvns	r2, r2
 8010522:	b2d2      	uxtb	r2, r2
 8010524:	fb16 f609 	smulbb	r6, r6, r9
 8010528:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801052c:	fb07 6702 	mla	r7, r7, r2, r6
 8010530:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010534:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010538:	b2ed      	uxtb	r5, r5
 801053a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801053e:	fa5f fc8c 	uxtb.w	ip, ip
 8010542:	fb15 f509 	smulbb	r5, r5, r9
 8010546:	fb0c 5502 	mla	r5, ip, r2, r5
 801054a:	b2bf      	uxth	r7, r7
 801054c:	fb1a fa09 	smulbb	sl, sl, r9
 8010550:	b2ad      	uxth	r5, r5
 8010552:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010556:	fb06 a602 	mla	r6, r6, r2, sl
 801055a:	1c7a      	adds	r2, r7, #1
 801055c:	f105 0a01 	add.w	sl, r5, #1
 8010560:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010564:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010568:	b2b6      	uxth	r6, r6
 801056a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801056e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010572:	ea4a 0707 	orr.w	r7, sl, r7
 8010576:	f106 0a01 	add.w	sl, r6, #1
 801057a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801057e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010582:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010586:	ea47 070a 	orr.w	r7, r7, sl
 801058a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801058e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010590:	4410      	add	r0, r2
 8010592:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010594:	f10e 0e01 	add.w	lr, lr, #1
 8010598:	4411      	add	r1, r2
 801059a:	e7a3      	b.n	80104e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801059c:	b005      	add	sp, #20
 801059e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080105a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80105a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105a8:	b085      	sub	sp, #20
 80105aa:	468b      	mov	fp, r1
 80105ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80105ae:	9203      	str	r2, [sp, #12]
 80105b0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80105b4:	6861      	ldr	r1, [r4, #4]
 80105b6:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80105ba:	fb01 2000 	mla	r0, r1, r0, r2
 80105be:	6822      	ldr	r2, [r4, #0]
 80105c0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80105c4:	f8d9 2000 	ldr.w	r2, [r9]
 80105c8:	9200      	str	r2, [sp, #0]
 80105ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105ce:	f1bb 0f00 	cmp.w	fp, #0
 80105d2:	dc03      	bgt.n	80105dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80105d4:	9a03      	ldr	r2, [sp, #12]
 80105d6:	2a00      	cmp	r2, #0
 80105d8:	f340 814a 	ble.w	8010870 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80105dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80105de:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80105e2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80105e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80105ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80105ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105f0:	2b00      	cmp	r3, #0
 80105f2:	dd0e      	ble.n	8010612 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80105f4:	140c      	asrs	r4, r1, #16
 80105f6:	d405      	bmi.n	8010604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80105f8:	42bc      	cmp	r4, r7
 80105fa:	da03      	bge.n	8010604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80105fc:	1414      	asrs	r4, r2, #16
 80105fe:	d401      	bmi.n	8010604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010600:	42b4      	cmp	r4, r6
 8010602:	db07      	blt.n	8010614 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010604:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010606:	4421      	add	r1, r4
 8010608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801060a:	3b01      	subs	r3, #1
 801060c:	4422      	add	r2, r4
 801060e:	3002      	adds	r0, #2
 8010610:	e7ee      	b.n	80105f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8010612:	d017      	beq.n	8010644 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010614:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010616:	1e5c      	subs	r4, r3, #1
 8010618:	fb05 1504 	mla	r5, r5, r4, r1
 801061c:	142d      	asrs	r5, r5, #16
 801061e:	d409      	bmi.n	8010634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010620:	42bd      	cmp	r5, r7
 8010622:	da07      	bge.n	8010634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010624:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010626:	fb05 2404 	mla	r4, r5, r4, r2
 801062a:	1424      	asrs	r4, r4, #16
 801062c:	d402      	bmi.n	8010634 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801062e:	42b4      	cmp	r4, r6
 8010630:	f2c0 80ba 	blt.w	80107a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8010634:	2700      	movs	r7, #0
 8010636:	19dc      	adds	r4, r3, r7
 8010638:	2c00      	cmp	r4, #0
 801063a:	dc3e      	bgt.n	80106ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801063c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010640:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010644:	f1bb 0f00 	cmp.w	fp, #0
 8010648:	f340 8112 	ble.w	8010870 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801064c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010650:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010654:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801065a:	f1bb 0b01 	subs.w	fp, fp, #1
 801065e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010662:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010666:	eeb0 6a62 	vmov.f32	s12, s5
 801066a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801066e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010672:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010676:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801067a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801067e:	eeb0 6a43 	vmov.f32	s12, s6
 8010682:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010686:	ee12 2a90 	vmov	r2, s5
 801068a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801068e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010692:	ee13 2a10 	vmov	r2, s6
 8010696:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801069a:	9311      	str	r3, [sp, #68]	; 0x44
 801069c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801069e:	fb92 f3f3 	sdiv	r3, r2, r3
 80106a2:	9a03      	ldr	r2, [sp, #12]
 80106a4:	9312      	str	r3, [sp, #72]	; 0x48
 80106a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80106aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106ac:	eeb0 3a67 	vmov.f32	s6, s15
 80106b0:	bf08      	it	eq
 80106b2:	4613      	moveq	r3, r2
 80106b4:	eef0 2a47 	vmov.f32	s5, s14
 80106b8:	e789      	b.n	80105ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80106ba:	140e      	asrs	r6, r1, #16
 80106bc:	d45f      	bmi.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80106be:	f8d9 5008 	ldr.w	r5, [r9, #8]
 80106c2:	42b5      	cmp	r5, r6
 80106c4:	dd5b      	ble.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80106c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80106ca:	d458      	bmi.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80106cc:	f8d9 400c 	ldr.w	r4, [r9, #12]
 80106d0:	4564      	cmp	r4, ip
 80106d2:	dd54      	ble.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80106d4:	b22d      	sxth	r5, r5
 80106d6:	fb0c 6505 	mla	r5, ip, r5, r6
 80106da:	9c00      	ldr	r4, [sp, #0]
 80106dc:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 80106e0:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 80106e4:	d04b      	beq.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80106e6:	fa5f f48e 	uxtb.w	r4, lr
 80106ea:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80106ee:	9401      	str	r4, [sp, #4]
 80106f0:	ea4f 461c 	mov.w	r6, ip, lsr #16
 80106f4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80106f8:	f06f 0401 	mvn.w	r4, #1
 80106fc:	fa5f fc8c 	uxtb.w	ip, ip
 8010700:	d043      	beq.n	801078a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8010702:	437c      	muls	r4, r7
 8010704:	9402      	str	r4, [sp, #8]
 8010706:	f830 8004 	ldrh.w	r8, [r0, r4]
 801070a:	9c01      	ldr	r4, [sp, #4]
 801070c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8010710:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010714:	43e4      	mvns	r4, r4
 8010716:	b2f6      	uxtb	r6, r6
 8010718:	b2e4      	uxtb	r4, r4
 801071a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801071e:	fb16 f60a 	smulbb	r6, r6, sl
 8010722:	fb0e 6604 	mla	r6, lr, r4, r6
 8010726:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 801072a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801072e:	fa5f f888 	uxtb.w	r8, r8
 8010732:	fb1c fc0a 	smulbb	ip, ip, sl
 8010736:	fb08 cc04 	mla	ip, r8, r4, ip
 801073a:	b2ed      	uxtb	r5, r5
 801073c:	b2b6      	uxth	r6, r6
 801073e:	fb15 f50a 	smulbb	r5, r5, sl
 8010742:	fa1f fc8c 	uxth.w	ip, ip
 8010746:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801074a:	fb0e 5e04 	mla	lr, lr, r4, r5
 801074e:	1c74      	adds	r4, r6, #1
 8010750:	f10c 0501 	add.w	r5, ip, #1
 8010754:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8010758:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 801075c:	fa1f fe8e 	uxth.w	lr, lr
 8010760:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010764:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010768:	432e      	orrs	r6, r5
 801076a:	f10e 0501 	add.w	r5, lr, #1
 801076e:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8010772:	096d      	lsrs	r5, r5, #5
 8010774:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010778:	9c02      	ldr	r4, [sp, #8]
 801077a:	432e      	orrs	r6, r5
 801077c:	5306      	strh	r6, [r0, r4]
 801077e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010780:	4421      	add	r1, r4
 8010782:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010784:	3f01      	subs	r7, #1
 8010786:	4422      	add	r2, r4
 8010788:	e755      	b.n	8010636 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801078a:	fb04 fe07 	mul.w	lr, r4, r7
 801078e:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 8010792:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 8010796:	00ed      	lsls	r5, r5, #3
 8010798:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 801079c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80107a0:	432e      	orrs	r6, r5
 80107a2:	f820 600e 	strh.w	r6, [r0, lr]
 80107a6:	e7ea      	b.n	801077e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 80107a8:	f04f 0800 	mov.w	r8, #0
 80107ac:	eba3 0408 	sub.w	r4, r3, r8
 80107b0:	2c00      	cmp	r4, #0
 80107b2:	f77f af43 	ble.w	801063c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80107b6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80107ba:	140d      	asrs	r5, r1, #16
 80107bc:	1414      	asrs	r4, r2, #16
 80107be:	fb06 5404 	mla	r4, r6, r4, r5
 80107c2:	9d00      	ldr	r5, [sp, #0]
 80107c4:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 80107c8:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 80107cc:	d042      	beq.n	8010854 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80107ce:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80107d2:	ea4f 4517 	mov.w	r5, r7, lsr #16
 80107d6:	ea4f 2617 	mov.w	r6, r7, lsr #8
 80107da:	fa5f f48c 	uxtb.w	r4, ip
 80107de:	b2ff      	uxtb	r7, r7
 80107e0:	d03f      	beq.n	8010862 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80107e2:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 80107e6:	fa1f fa84 	uxth.w	sl, r4
 80107ea:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80107ee:	43e4      	mvns	r4, r4
 80107f0:	b2ed      	uxtb	r5, r5
 80107f2:	b2e4      	uxtb	r4, r4
 80107f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80107f8:	fb15 f50a 	smulbb	r5, r5, sl
 80107fc:	fb0c 5504 	mla	r5, ip, r4, r5
 8010800:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010804:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010808:	fa5f fe8e 	uxtb.w	lr, lr
 801080c:	fb17 f70a 	smulbb	r7, r7, sl
 8010810:	fb0e 7704 	mla	r7, lr, r4, r7
 8010814:	b2f6      	uxtb	r6, r6
 8010816:	b2ad      	uxth	r5, r5
 8010818:	fb16 f60a 	smulbb	r6, r6, sl
 801081c:	b2bf      	uxth	r7, r7
 801081e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010822:	fb0c 6c04 	mla	ip, ip, r4, r6
 8010826:	1c6c      	adds	r4, r5, #1
 8010828:	1c7e      	adds	r6, r7, #1
 801082a:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801082e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8010832:	fa1f fc8c 	uxth.w	ip, ip
 8010836:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801083a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801083e:	4335      	orrs	r5, r6
 8010840:	f10c 0601 	add.w	r6, ip, #1
 8010844:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010848:	0976      	lsrs	r6, r6, #5
 801084a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801084e:	4335      	orrs	r5, r6
 8010850:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 8010854:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010856:	4421      	add	r1, r4
 8010858:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801085a:	f108 0801 	add.w	r8, r8, #1
 801085e:	4422      	add	r2, r4
 8010860:	e7a4      	b.n	80107ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8010862:	4c05      	ldr	r4, [pc, #20]	; (8010878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 8010864:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 8010868:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 801086c:	00f6      	lsls	r6, r6, #3
 801086e:	e7ec      	b.n	801084a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8010870:	b005      	add	sp, #20
 8010872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010876:	bf00      	nop
 8010878:	fffff800 	.word	0xfffff800

0801087c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801087c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010880:	b087      	sub	sp, #28
 8010882:	468b      	mov	fp, r1
 8010884:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010886:	9204      	str	r2, [sp, #16]
 8010888:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801088c:	9205      	str	r2, [sp, #20]
 801088e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010892:	6841      	ldr	r1, [r0, #4]
 8010894:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8010898:	fb01 2404 	mla	r4, r1, r4, r2
 801089c:	6802      	ldr	r2, [r0, #0]
 801089e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80108a2:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80108a6:	3201      	adds	r2, #1
 80108a8:	f022 0201 	bic.w	r2, r2, #1
 80108ac:	9201      	str	r2, [sp, #4]
 80108ae:	f8d8 2000 	ldr.w	r2, [r8]
 80108b2:	9202      	str	r2, [sp, #8]
 80108b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80108b8:	f1bb 0f00 	cmp.w	fp, #0
 80108bc:	dc03      	bgt.n	80108c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80108be:	9a04      	ldr	r2, [sp, #16]
 80108c0:	2a00      	cmp	r2, #0
 80108c2:	f340 8146 	ble.w	8010b52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80108c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80108c8:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80108cc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80108d0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80108d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80108d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80108da:	2b00      	cmp	r3, #0
 80108dc:	dd0e      	ble.n	80108fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80108de:	1402      	asrs	r2, r0, #16
 80108e0:	d405      	bmi.n	80108ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80108e2:	42ba      	cmp	r2, r7
 80108e4:	da03      	bge.n	80108ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80108e6:	140a      	asrs	r2, r1, #16
 80108e8:	d401      	bmi.n	80108ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80108ea:	42b2      	cmp	r2, r6
 80108ec:	db07      	blt.n	80108fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80108ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80108f0:	4410      	add	r0, r2
 80108f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80108f4:	3b01      	subs	r3, #1
 80108f6:	4411      	add	r1, r2
 80108f8:	3402      	adds	r4, #2
 80108fa:	e7ee      	b.n	80108da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80108fc:	d017      	beq.n	801092e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80108fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010900:	1e5a      	subs	r2, r3, #1
 8010902:	fb05 0502 	mla	r5, r5, r2, r0
 8010906:	142d      	asrs	r5, r5, #16
 8010908:	d409      	bmi.n	801091e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801090a:	42bd      	cmp	r5, r7
 801090c:	da07      	bge.n	801091e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801090e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010910:	fb05 1202 	mla	r2, r5, r2, r1
 8010914:	1412      	asrs	r2, r2, #16
 8010916:	d402      	bmi.n	801091e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010918:	42b2      	cmp	r2, r6
 801091a:	f2c0 80b3 	blt.w	8010a84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801091e:	2700      	movs	r7, #0
 8010920:	19da      	adds	r2, r3, r7
 8010922:	2a00      	cmp	r2, #0
 8010924:	dc3e      	bgt.n	80109a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010926:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801092a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801092e:	f1bb 0f00 	cmp.w	fp, #0
 8010932:	f340 810e 	ble.w	8010b52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8010936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801093a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801093e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010942:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010944:	f1bb 0b01 	subs.w	fp, fp, #1
 8010948:	ee31 1a05 	vadd.f32	s2, s2, s10
 801094c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010950:	eeb0 6a62 	vmov.f32	s12, s5
 8010954:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010958:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801095c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010960:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010964:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010968:	eeb0 6a43 	vmov.f32	s12, s6
 801096c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010970:	ee12 2a90 	vmov	r2, s5
 8010974:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010978:	fb92 f3f3 	sdiv	r3, r2, r3
 801097c:	ee13 2a10 	vmov	r2, s6
 8010980:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010984:	9313      	str	r3, [sp, #76]	; 0x4c
 8010986:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010988:	fb92 f3f3 	sdiv	r3, r2, r3
 801098c:	9a04      	ldr	r2, [sp, #16]
 801098e:	9314      	str	r3, [sp, #80]	; 0x50
 8010990:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010994:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010996:	eeb0 3a67 	vmov.f32	s6, s15
 801099a:	bf08      	it	eq
 801099c:	4613      	moveq	r3, r2
 801099e:	eef0 2a47 	vmov.f32	s5, s14
 80109a2:	e789      	b.n	80108b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80109a4:	1405      	asrs	r5, r0, #16
 80109a6:	d467      	bmi.n	8010a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80109a8:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80109ac:	42aa      	cmp	r2, r5
 80109ae:	dd63      	ble.n	8010a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80109b0:	140e      	asrs	r6, r1, #16
 80109b2:	d461      	bmi.n	8010a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80109b4:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80109b8:	42b2      	cmp	r2, r6
 80109ba:	dd5d      	ble.n	8010a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80109bc:	9a01      	ldr	r2, [sp, #4]
 80109be:	fb06 5502 	mla	r5, r6, r2, r5
 80109c2:	086a      	lsrs	r2, r5, #1
 80109c4:	9e02      	ldr	r6, [sp, #8]
 80109c6:	5cb2      	ldrb	r2, [r6, r2]
 80109c8:	07ee      	lsls	r6, r5, #31
 80109ca:	bf54      	ite	pl
 80109cc:	f002 020f 	andpl.w	r2, r2, #15
 80109d0:	1112      	asrmi	r2, r2, #4
 80109d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80109d6:	b2d2      	uxtb	r2, r2
 80109d8:	2a00      	cmp	r2, #0
 80109da:	d04d      	beq.n	8010a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80109dc:	4d5e      	ldr	r5, [pc, #376]	; (8010b58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80109de:	f8d5 c000 	ldr.w	ip, [r5]
 80109e2:	f06f 0501 	mvn.w	r5, #1
 80109e6:	437d      	muls	r5, r7
 80109e8:	9503      	str	r5, [sp, #12]
 80109ea:	f834 e005 	ldrh.w	lr, [r4, r5]
 80109ee:	9d05      	ldr	r5, [sp, #20]
 80109f0:	436a      	muls	r2, r5
 80109f2:	1c55      	adds	r5, r2, #1
 80109f4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80109f8:	1212      	asrs	r2, r2, #8
 80109fa:	fa1f f982 	uxth.w	r9, r2
 80109fe:	ea4f 262e 	mov.w	r6, lr, asr #8
 8010a02:	f3cc 4507 	ubfx	r5, ip, #16, #8
 8010a06:	43d2      	mvns	r2, r2
 8010a08:	b2d2      	uxtb	r2, r2
 8010a0a:	fb15 f509 	smulbb	r5, r5, r9
 8010a0e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010a12:	fb06 5602 	mla	r6, r6, r2, r5
 8010a16:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8010a1a:	ea4f 05ee 	mov.w	r5, lr, asr #3
 8010a1e:	fa5f fc8c 	uxtb.w	ip, ip
 8010a22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010a26:	fa5f fe8e 	uxtb.w	lr, lr
 8010a2a:	fb1c fc09 	smulbb	ip, ip, r9
 8010a2e:	fb0e cc02 	mla	ip, lr, r2, ip
 8010a32:	b2b6      	uxth	r6, r6
 8010a34:	fb1a fa09 	smulbb	sl, sl, r9
 8010a38:	fa1f fc8c 	uxth.w	ip, ip
 8010a3c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010a40:	fb05 a502 	mla	r5, r5, r2, sl
 8010a44:	1c72      	adds	r2, r6, #1
 8010a46:	f10c 0a01 	add.w	sl, ip, #1
 8010a4a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010a4e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8010a52:	b2ad      	uxth	r5, r5
 8010a54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a58:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010a5c:	ea4a 0606 	orr.w	r6, sl, r6
 8010a60:	f105 0a01 	add.w	sl, r5, #1
 8010a64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010a68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a70:	9a03      	ldr	r2, [sp, #12]
 8010a72:	ea46 060a 	orr.w	r6, r6, sl
 8010a76:	52a6      	strh	r6, [r4, r2]
 8010a78:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a7a:	4410      	add	r0, r2
 8010a7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a7e:	3f01      	subs	r7, #1
 8010a80:	4411      	add	r1, r2
 8010a82:	e74d      	b.n	8010920 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8010a84:	f04f 0e00 	mov.w	lr, #0
 8010a88:	eba3 020e 	sub.w	r2, r3, lr
 8010a8c:	2a00      	cmp	r2, #0
 8010a8e:	f77f af4a 	ble.w	8010926 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010a92:	9e01      	ldr	r6, [sp, #4]
 8010a94:	1402      	asrs	r2, r0, #16
 8010a96:	140d      	asrs	r5, r1, #16
 8010a98:	fb06 2505 	mla	r5, r6, r5, r2
 8010a9c:	086a      	lsrs	r2, r5, #1
 8010a9e:	9e02      	ldr	r6, [sp, #8]
 8010aa0:	5cb2      	ldrb	r2, [r6, r2]
 8010aa2:	07ed      	lsls	r5, r5, #31
 8010aa4:	bf54      	ite	pl
 8010aa6:	f002 020f 	andpl.w	r2, r2, #15
 8010aaa:	1112      	asrmi	r2, r2, #4
 8010aac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010ab0:	b2d2      	uxtb	r2, r2
 8010ab2:	2a00      	cmp	r2, #0
 8010ab4:	d046      	beq.n	8010b44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010ab6:	4d28      	ldr	r5, [pc, #160]	; (8010b58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8010ab8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010abc:	682f      	ldr	r7, [r5, #0]
 8010abe:	9d05      	ldr	r5, [sp, #20]
 8010ac0:	436a      	muls	r2, r5
 8010ac2:	1c55      	adds	r5, r2, #1
 8010ac4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8010ac8:	1212      	asrs	r2, r2, #8
 8010aca:	fa1f f982 	uxth.w	r9, r2
 8010ace:	ea4f 262c 	mov.w	r6, ip, asr #8
 8010ad2:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8010ad6:	43d2      	mvns	r2, r2
 8010ad8:	b2d2      	uxtb	r2, r2
 8010ada:	fb15 f509 	smulbb	r5, r5, r9
 8010ade:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010ae2:	fb06 5602 	mla	r6, r6, r2, r5
 8010ae6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8010aea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8010aee:	b2ff      	uxtb	r7, r7
 8010af0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010af4:	fa5f fc8c 	uxtb.w	ip, ip
 8010af8:	fb17 f709 	smulbb	r7, r7, r9
 8010afc:	fb0c 7702 	mla	r7, ip, r2, r7
 8010b00:	b2b6      	uxth	r6, r6
 8010b02:	fb1a fa09 	smulbb	sl, sl, r9
 8010b06:	b2bf      	uxth	r7, r7
 8010b08:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010b0c:	fb05 a502 	mla	r5, r5, r2, sl
 8010b10:	1c72      	adds	r2, r6, #1
 8010b12:	f107 0a01 	add.w	sl, r7, #1
 8010b16:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010b1a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010b1e:	b2ad      	uxth	r5, r5
 8010b20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010b24:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010b28:	ea4a 0606 	orr.w	r6, sl, r6
 8010b2c:	f105 0a01 	add.w	sl, r5, #1
 8010b30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010b34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010b38:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010b3c:	ea46 060a 	orr.w	r6, r6, sl
 8010b40:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8010b44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010b46:	4410      	add	r0, r2
 8010b48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010b4a:	f10e 0e01 	add.w	lr, lr, #1
 8010b4e:	4411      	add	r1, r2
 8010b50:	e79a      	b.n	8010a88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8010b52:	b007      	add	sp, #28
 8010b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b58:	2000a09c 	.word	0x2000a09c

08010b5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b60:	b087      	sub	sp, #28
 8010b62:	468b      	mov	fp, r1
 8010b64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010b66:	9205      	str	r2, [sp, #20]
 8010b68:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010b6c:	6841      	ldr	r1, [r0, #4]
 8010b6e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8010b72:	fb01 2404 	mla	r4, r1, r4, r2
 8010b76:	6802      	ldr	r2, [r0, #0]
 8010b78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010b7c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8010b80:	3201      	adds	r2, #1
 8010b82:	f022 0201 	bic.w	r2, r2, #1
 8010b86:	9201      	str	r2, [sp, #4]
 8010b88:	f8d8 2000 	ldr.w	r2, [r8]
 8010b8c:	9202      	str	r2, [sp, #8]
 8010b8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b92:	f1bb 0f00 	cmp.w	fp, #0
 8010b96:	dc03      	bgt.n	8010ba0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010b98:	9a05      	ldr	r2, [sp, #20]
 8010b9a:	2a00      	cmp	r2, #0
 8010b9c:	f340 8159 	ble.w	8010e52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8010ba0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010ba2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010ba6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010baa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010bae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010bb0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010bb4:	2b00      	cmp	r3, #0
 8010bb6:	dd0e      	ble.n	8010bd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010bb8:	1402      	asrs	r2, r0, #16
 8010bba:	d405      	bmi.n	8010bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010bbc:	42ba      	cmp	r2, r7
 8010bbe:	da03      	bge.n	8010bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010bc0:	140a      	asrs	r2, r1, #16
 8010bc2:	d401      	bmi.n	8010bc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010bc4:	42b2      	cmp	r2, r6
 8010bc6:	db07      	blt.n	8010bd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010bc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010bca:	4410      	add	r0, r2
 8010bcc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010bce:	3b01      	subs	r3, #1
 8010bd0:	4411      	add	r1, r2
 8010bd2:	3402      	adds	r4, #2
 8010bd4:	e7ee      	b.n	8010bb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010bd6:	d017      	beq.n	8010c08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8010bd8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010bda:	1e5a      	subs	r2, r3, #1
 8010bdc:	fb05 0502 	mla	r5, r5, r2, r0
 8010be0:	142d      	asrs	r5, r5, #16
 8010be2:	d409      	bmi.n	8010bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010be4:	42bd      	cmp	r5, r7
 8010be6:	da07      	bge.n	8010bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010be8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010bea:	fb05 1202 	mla	r2, r5, r2, r1
 8010bee:	1412      	asrs	r2, r2, #16
 8010bf0:	d402      	bmi.n	8010bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010bf2:	42b2      	cmp	r2, r6
 8010bf4:	f2c0 80c3 	blt.w	8010d7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8010bf8:	2700      	movs	r7, #0
 8010bfa:	19da      	adds	r2, r3, r7
 8010bfc:	2a00      	cmp	r2, #0
 8010bfe:	dc3e      	bgt.n	8010c7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8010c00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c04:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c08:	f1bb 0f00 	cmp.w	fp, #0
 8010c0c:	f340 8121 	ble.w	8010e52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8010c10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c14:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c18:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c1e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010c22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c2a:	eeb0 6a62 	vmov.f32	s12, s5
 8010c2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c3a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010c3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c42:	eeb0 6a43 	vmov.f32	s12, s6
 8010c46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c4a:	ee12 2a90 	vmov	r2, s5
 8010c4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c52:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c56:	ee13 2a10 	vmov	r2, s6
 8010c5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c62:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c66:	9a05      	ldr	r2, [sp, #20]
 8010c68:	9314      	str	r3, [sp, #80]	; 0x50
 8010c6a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010c6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c70:	eeb0 3a67 	vmov.f32	s6, s15
 8010c74:	bf08      	it	eq
 8010c76:	4613      	moveq	r3, r2
 8010c78:	eef0 2a47 	vmov.f32	s5, s14
 8010c7c:	e789      	b.n	8010b92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010c7e:	1405      	asrs	r5, r0, #16
 8010c80:	d465      	bmi.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010c82:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8010c86:	42aa      	cmp	r2, r5
 8010c88:	dd61      	ble.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010c8a:	140e      	asrs	r6, r1, #16
 8010c8c:	d45f      	bmi.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010c8e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8010c92:	42b2      	cmp	r2, r6
 8010c94:	dd5b      	ble.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010c96:	9a01      	ldr	r2, [sp, #4]
 8010c98:	fb06 5502 	mla	r5, r6, r2, r5
 8010c9c:	086a      	lsrs	r2, r5, #1
 8010c9e:	9e02      	ldr	r6, [sp, #8]
 8010ca0:	5cb2      	ldrb	r2, [r6, r2]
 8010ca2:	07ee      	lsls	r6, r5, #31
 8010ca4:	bf54      	ite	pl
 8010ca6:	f002 020f 	andpl.w	r2, r2, #15
 8010caa:	1112      	asrmi	r2, r2, #4
 8010cac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010cb0:	b2d2      	uxtb	r2, r2
 8010cb2:	2a00      	cmp	r2, #0
 8010cb4:	d04b      	beq.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010cb6:	4d68      	ldr	r5, [pc, #416]	; (8010e58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010cb8:	f8d5 9000 	ldr.w	r9, [r5]
 8010cbc:	2aff      	cmp	r2, #255	; 0xff
 8010cbe:	ea4f 2519 	mov.w	r5, r9, lsr #8
 8010cc2:	ea4f 4619 	mov.w	r6, r9, lsr #16
 8010cc6:	9503      	str	r5, [sp, #12]
 8010cc8:	fa5f f989 	uxtb.w	r9, r9
 8010ccc:	d045      	beq.n	8010d5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010cce:	f06f 0501 	mvn.w	r5, #1
 8010cd2:	437d      	muls	r5, r7
 8010cd4:	fa1f fa82 	uxth.w	sl, r2
 8010cd8:	f834 e005 	ldrh.w	lr, [r4, r5]
 8010cdc:	9504      	str	r5, [sp, #16]
 8010cde:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010ce2:	43d2      	mvns	r2, r2
 8010ce4:	b2f6      	uxtb	r6, r6
 8010ce6:	b2d2      	uxtb	r2, r2
 8010ce8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010cec:	fb16 f60a 	smulbb	r6, r6, sl
 8010cf0:	fb0c 6602 	mla	r6, ip, r2, r6
 8010cf4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010cf8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010cfc:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8010d00:	fa5f fe8e 	uxtb.w	lr, lr
 8010d04:	fb19 f90a 	smulbb	r9, r9, sl
 8010d08:	fb0e 9902 	mla	r9, lr, r2, r9
 8010d0c:	b2b6      	uxth	r6, r6
 8010d0e:	fb15 f50a 	smulbb	r5, r5, sl
 8010d12:	fa1f f989 	uxth.w	r9, r9
 8010d16:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010d1a:	fb0c 5c02 	mla	ip, ip, r2, r5
 8010d1e:	1c72      	adds	r2, r6, #1
 8010d20:	f109 0501 	add.w	r5, r9, #1
 8010d24:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010d28:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8010d2c:	fa1f fc8c 	uxth.w	ip, ip
 8010d30:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010d34:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010d38:	432e      	orrs	r6, r5
 8010d3a:	f10c 0501 	add.w	r5, ip, #1
 8010d3e:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 8010d42:	096d      	lsrs	r5, r5, #5
 8010d44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010d48:	9a04      	ldr	r2, [sp, #16]
 8010d4a:	432e      	orrs	r6, r5
 8010d4c:	52a6      	strh	r6, [r4, r2]
 8010d4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010d50:	4410      	add	r0, r2
 8010d52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010d54:	3f01      	subs	r7, #1
 8010d56:	4411      	add	r1, r2
 8010d58:	e74f      	b.n	8010bfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010d5a:	f06f 0201 	mvn.w	r2, #1
 8010d5e:	fb02 fc07 	mul.w	ip, r2, r7
 8010d62:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 8010d66:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 8010d6a:	9a03      	ldr	r2, [sp, #12]
 8010d6c:	00d5      	lsls	r5, r2, #3
 8010d6e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010d72:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010d76:	432e      	orrs	r6, r5
 8010d78:	f824 600c 	strh.w	r6, [r4, ip]
 8010d7c:	e7e7      	b.n	8010d4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8010d7e:	f04f 0e00 	mov.w	lr, #0
 8010d82:	eba3 020e 	sub.w	r2, r3, lr
 8010d86:	2a00      	cmp	r2, #0
 8010d88:	f77f af3a 	ble.w	8010c00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8010d8c:	9e01      	ldr	r6, [sp, #4]
 8010d8e:	1402      	asrs	r2, r0, #16
 8010d90:	140d      	asrs	r5, r1, #16
 8010d92:	fb06 2505 	mla	r5, r6, r5, r2
 8010d96:	086a      	lsrs	r2, r5, #1
 8010d98:	9e02      	ldr	r6, [sp, #8]
 8010d9a:	5cb2      	ldrb	r2, [r6, r2]
 8010d9c:	07ed      	lsls	r5, r5, #31
 8010d9e:	bf54      	ite	pl
 8010da0:	f002 020f 	andpl.w	r2, r2, #15
 8010da4:	1112      	asrmi	r2, r2, #4
 8010da6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010daa:	b2d2      	uxtb	r2, r2
 8010dac:	2a00      	cmp	r2, #0
 8010dae:	d042      	beq.n	8010e36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8010db0:	4d29      	ldr	r5, [pc, #164]	; (8010e58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010db2:	682f      	ldr	r7, [r5, #0]
 8010db4:	2aff      	cmp	r2, #255	; 0xff
 8010db6:	ea4f 4517 	mov.w	r5, r7, lsr #16
 8010dba:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8010dbe:	fa5f f987 	uxtb.w	r9, r7
 8010dc2:	d03f      	beq.n	8010e44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8010dc4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010dc8:	fa1f fa82 	uxth.w	sl, r2
 8010dcc:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010dd0:	43d2      	mvns	r2, r2
 8010dd2:	b2ed      	uxtb	r5, r5
 8010dd4:	b2d2      	uxtb	r2, r2
 8010dd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010dda:	fb15 f50a 	smulbb	r5, r5, sl
 8010dde:	fb07 5502 	mla	r5, r7, r2, r5
 8010de2:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8010de6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010dea:	fa5f fc8c 	uxtb.w	ip, ip
 8010dee:	fb19 f90a 	smulbb	r9, r9, sl
 8010df2:	fb0c 9902 	mla	r9, ip, r2, r9
 8010df6:	b2f6      	uxtb	r6, r6
 8010df8:	b2ad      	uxth	r5, r5
 8010dfa:	fb16 f60a 	smulbb	r6, r6, sl
 8010dfe:	fa1f f989 	uxth.w	r9, r9
 8010e02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010e06:	fb07 6702 	mla	r7, r7, r2, r6
 8010e0a:	1c6a      	adds	r2, r5, #1
 8010e0c:	f109 0601 	add.w	r6, r9, #1
 8010e10:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8010e14:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8010e18:	b2bf      	uxth	r7, r7
 8010e1a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010e1e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8010e22:	4335      	orrs	r5, r6
 8010e24:	1c7e      	adds	r6, r7, #1
 8010e26:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8010e2a:	0976      	lsrs	r6, r6, #5
 8010e2c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010e30:	4335      	orrs	r5, r6
 8010e32:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8010e36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010e38:	4410      	add	r0, r2
 8010e3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010e3c:	f10e 0e01 	add.w	lr, lr, #1
 8010e40:	4411      	add	r1, r2
 8010e42:	e79e      	b.n	8010d82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8010e44:	4a05      	ldr	r2, [pc, #20]	; (8010e5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 8010e46:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 8010e4a:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8010e4e:	00f6      	lsls	r6, r6, #3
 8010e50:	e7ec      	b.n	8010e2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8010e52:	b007      	add	sp, #28
 8010e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e58:	2000a09c 	.word	0x2000a09c
 8010e5c:	fffff800 	.word	0xfffff800

08010e60 <_ZN8touchgfx8LCD16bppD1Ev>:
 8010e60:	4770      	bx	lr

08010e62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8010e62:	4770      	bx	lr

08010e64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8010e64:	4770      	bx	lr

08010e66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8010e66:	4770      	bx	lr

08010e68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8010e68:	4770      	bx	lr

08010e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010e6a:	4770      	bx	lr

08010e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010e6c:	4770      	bx	lr

08010e6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010e6e:	4770      	bx	lr

08010e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010e70:	4770      	bx	lr

08010e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010e72:	4770      	bx	lr

08010e74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010e74:	4770      	bx	lr

08010e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010e76:	4770      	bx	lr

08010e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010e78:	4770      	bx	lr

08010e7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010e7a:	4770      	bx	lr

08010e7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010e7c:	4770      	bx	lr

08010e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010e7e:	4770      	bx	lr

08010e80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010e80:	4770      	bx	lr

08010e82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010e82:	4770      	bx	lr

08010e84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010e84:	4770      	bx	lr

08010e86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010e86:	4770      	bx	lr

08010e88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010e88:	4770      	bx	lr

08010e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010e8a:	4770      	bx	lr

08010e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8010e8c:	4770      	bx	lr

08010e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010e8e:	4770      	bx	lr

08010e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8010e90:	4770      	bx	lr

08010e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010e92:	4770      	bx	lr

08010e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010e94:	4770      	bx	lr

08010e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010e96:	4770      	bx	lr

08010e98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010e98:	4770      	bx	lr
	...

08010e9c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010e9c:	b508      	push	{r3, lr}
 8010e9e:	4b06      	ldr	r3, [pc, #24]	; (8010eb8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8010ea0:	8818      	ldrh	r0, [r3, #0]
 8010ea2:	b928      	cbnz	r0, 8010eb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8010ea4:	4b05      	ldr	r3, [pc, #20]	; (8010ebc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8010ea6:	4a06      	ldr	r2, [pc, #24]	; (8010ec0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8010ea8:	4806      	ldr	r0, [pc, #24]	; (8010ec4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8010eaa:	2150      	movs	r1, #80	; 0x50
 8010eac:	f009 fa84 	bl	801a3b8 <__assert_func>
 8010eb0:	0040      	lsls	r0, r0, #1
 8010eb2:	b280      	uxth	r0, r0
 8010eb4:	bd08      	pop	{r3, pc}
 8010eb6:	bf00      	nop
 8010eb8:	2000a08e 	.word	0x2000a08e
 8010ebc:	0801dec0 	.word	0x0801dec0
 8010ec0:	0801e4b8 	.word	0x0801e4b8
 8010ec4:	0801df02 	.word	0x0801df02

08010ec8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8010ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ecc:	b08b      	sub	sp, #44	; 0x2c
 8010ece:	460f      	mov	r7, r1
 8010ed0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8010ed4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8010ed8:	4616      	mov	r6, r2
 8010eda:	f1bb 0f00 	cmp.w	fp, #0
 8010ede:	d046      	beq.n	8010f6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010ee0:	6810      	ldr	r0, [r2, #0]
 8010ee2:	6851      	ldr	r1, [r2, #4]
 8010ee4:	ad06      	add	r5, sp, #24
 8010ee6:	c503      	stmia	r5!, {r0, r1}
 8010ee8:	6818      	ldr	r0, [r3, #0]
 8010eea:	6859      	ldr	r1, [r3, #4]
 8010eec:	ad08      	add	r5, sp, #32
 8010eee:	c503      	stmia	r5!, {r0, r1}
 8010ef0:	a806      	add	r0, sp, #24
 8010ef2:	f7fa fd4f 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ef6:	4631      	mov	r1, r6
 8010ef8:	a808      	add	r0, sp, #32
 8010efa:	f7fa fd33 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010efe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010f02:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010f06:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8010f0a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010f0e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8010f12:	fb16 2103 	smlabb	r1, r6, r3, r2
 8010f16:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010f1a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8010f1e:	4f5e      	ldr	r7, [pc, #376]	; (8011098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8010f20:	440a      	add	r2, r1
 8010f22:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010f26:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010f2a:	6838      	ldr	r0, [r7, #0]
 8010f2c:	4413      	add	r3, r2
 8010f2e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010f32:	6803      	ldr	r3, [r0, #0]
 8010f34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010f36:	4798      	blx	r3
 8010f38:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010f3c:	46b9      	mov	r9, r7
 8010f3e:	d019      	beq.n	8010f74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8010f40:	f010 0f04 	tst.w	r0, #4
 8010f44:	d01a      	beq.n	8010f7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8010f46:	f8d9 0000 	ldr.w	r0, [r9]
 8010f4a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010f4e:	6801      	ldr	r1, [r0, #0]
 8010f50:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8010f54:	e9cd b403 	strd	fp, r4, [sp, #12]
 8010f58:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8010f5c:	9402      	str	r4, [sp, #8]
 8010f5e:	b2ad      	uxth	r5, r5
 8010f60:	fa1f f488 	uxth.w	r4, r8
 8010f64:	9501      	str	r5, [sp, #4]
 8010f66:	9400      	str	r4, [sp, #0]
 8010f68:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8010f6a:	4631      	mov	r1, r6
 8010f6c:	47a0      	blx	r4
 8010f6e:	b00b      	add	sp, #44	; 0x2c
 8010f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f74:	b914      	cbnz	r4, 8010f7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8010f76:	f010 0f01 	tst.w	r0, #1
 8010f7a:	e7e3      	b.n	8010f44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8010f7c:	f8d9 0000 	ldr.w	r0, [r9]
 8010f80:	6803      	ldr	r3, [r0, #0]
 8010f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f84:	4798      	blx	r3
 8010f86:	4b45      	ldr	r3, [pc, #276]	; (801109c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8010f88:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8010f8c:	881a      	ldrh	r2, [r3, #0]
 8010f8e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010f92:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010f96:	fb02 1404 	mla	r4, r2, r4, r1
 8010f9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010f9e:	469a      	mov	sl, r3
 8010fa0:	fb05 f502 	mul.w	r5, r5, r2
 8010fa4:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8010fa8:	d059      	beq.n	801105e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 8010faa:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8010fae:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010fb2:	fa1f f28b 	uxth.w	r2, fp
 8010fb6:	fa1f f989 	uxth.w	r9, r9
 8010fba:	469e      	mov	lr, r3
 8010fbc:	42ac      	cmp	r4, r5
 8010fbe:	d264      	bcs.n	801108a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8010fc0:	eb04 0a07 	add.w	sl, r4, r7
 8010fc4:	4554      	cmp	r4, sl
 8010fc6:	d23d      	bcs.n	8011044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 8010fc8:	8821      	ldrh	r1, [r4, #0]
 8010fca:	f836 3b02 	ldrh.w	r3, [r6], #2
 8010fce:	1208      	asrs	r0, r1, #8
 8010fd0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8010fd4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010fd8:	fb10 f009 	smulbb	r0, r0, r9
 8010fdc:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8010fe0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010fe4:	00c9      	lsls	r1, r1, #3
 8010fe6:	fb0c 0c02 	mla	ip, ip, r2, r0
 8010fea:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8010fee:	10d8      	asrs	r0, r3, #3
 8010ff0:	b2c9      	uxtb	r1, r1
 8010ff2:	00db      	lsls	r3, r3, #3
 8010ff4:	fa1f fc8c 	uxth.w	ip, ip
 8010ff8:	fb1b fb09 	smulbb	fp, fp, r9
 8010ffc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8011000:	b2db      	uxtb	r3, r3
 8011002:	fb11 f109 	smulbb	r1, r1, r9
 8011006:	fb00 b002 	mla	r0, r0, r2, fp
 801100a:	fb03 1302 	mla	r3, r3, r2, r1
 801100e:	f10c 0b01 	add.w	fp, ip, #1
 8011012:	b29b      	uxth	r3, r3
 8011014:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8011018:	b280      	uxth	r0, r0
 801101a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801101e:	f103 0c01 	add.w	ip, r3, #1
 8011022:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8011026:	1c43      	adds	r3, r0, #1
 8011028:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801102c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011030:	0940      	lsrs	r0, r0, #5
 8011032:	ea4c 0c0b 	orr.w	ip, ip, fp
 8011036:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801103a:	ea4c 0c00 	orr.w	ip, ip, r0
 801103e:	f824 cb02 	strh.w	ip, [r4], #2
 8011042:	e7bf      	b.n	8010fc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8011044:	f8be 3000 	ldrh.w	r3, [lr]
 8011048:	eba3 0308 	sub.w	r3, r3, r8
 801104c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011050:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011054:	eba3 0308 	sub.w	r3, r3, r8
 8011058:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801105c:	e7ae      	b.n	8010fbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 801105e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8011062:	f8d9 0000 	ldr.w	r0, [r9]
 8011066:	42ac      	cmp	r4, r5
 8011068:	6803      	ldr	r3, [r0, #0]
 801106a:	d20e      	bcs.n	801108a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 801106c:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 8011070:	4632      	mov	r2, r6
 8011072:	463b      	mov	r3, r7
 8011074:	4621      	mov	r1, r4
 8011076:	47c0      	blx	r8
 8011078:	f8ba 3000 	ldrh.w	r3, [sl]
 801107c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011080:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011084:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8011088:	e7eb      	b.n	8011062 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 801108a:	4b03      	ldr	r3, [pc, #12]	; (8011098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 801108c:	6818      	ldr	r0, [r3, #0]
 801108e:	6803      	ldr	r3, [r0, #0]
 8011090:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011092:	4798      	blx	r3
 8011094:	e76b      	b.n	8010f6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011096:	bf00      	nop
 8011098:	2000a094 	.word	0x2000a094
 801109c:	2000a08e 	.word	0x2000a08e

080110a0 <_ZN8touchgfx8LCD16bppD0Ev>:
 80110a0:	b510      	push	{r4, lr}
 80110a2:	2178      	movs	r1, #120	; 0x78
 80110a4:	4604      	mov	r4, r0
 80110a6:	f009 f958 	bl	801a35a <_ZdlPvj>
 80110aa:	4620      	mov	r0, r4
 80110ac:	bd10      	pop	{r4, pc}

080110ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80110ae:	b510      	push	{r4, lr}
 80110b0:	2104      	movs	r1, #4
 80110b2:	4604      	mov	r4, r0
 80110b4:	f009 f951 	bl	801a35a <_ZdlPvj>
 80110b8:	4620      	mov	r0, r4
 80110ba:	bd10      	pop	{r4, pc}

080110bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80110bc:	b510      	push	{r4, lr}
 80110be:	2104      	movs	r1, #4
 80110c0:	4604      	mov	r4, r0
 80110c2:	f009 f94a 	bl	801a35a <_ZdlPvj>
 80110c6:	4620      	mov	r0, r4
 80110c8:	bd10      	pop	{r4, pc}

080110ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80110ca:	b510      	push	{r4, lr}
 80110cc:	2104      	movs	r1, #4
 80110ce:	4604      	mov	r4, r0
 80110d0:	f009 f943 	bl	801a35a <_ZdlPvj>
 80110d4:	4620      	mov	r0, r4
 80110d6:	bd10      	pop	{r4, pc}

080110d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80110d8:	b510      	push	{r4, lr}
 80110da:	2104      	movs	r1, #4
 80110dc:	4604      	mov	r4, r0
 80110de:	f009 f93c 	bl	801a35a <_ZdlPvj>
 80110e2:	4620      	mov	r0, r4
 80110e4:	bd10      	pop	{r4, pc}

080110e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80110e6:	b510      	push	{r4, lr}
 80110e8:	2104      	movs	r1, #4
 80110ea:	4604      	mov	r4, r0
 80110ec:	f009 f935 	bl	801a35a <_ZdlPvj>
 80110f0:	4620      	mov	r0, r4
 80110f2:	bd10      	pop	{r4, pc}

080110f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80110f4:	b510      	push	{r4, lr}
 80110f6:	2104      	movs	r1, #4
 80110f8:	4604      	mov	r4, r0
 80110fa:	f009 f92e 	bl	801a35a <_ZdlPvj>
 80110fe:	4620      	mov	r0, r4
 8011100:	bd10      	pop	{r4, pc}

08011102 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011102:	b510      	push	{r4, lr}
 8011104:	2104      	movs	r1, #4
 8011106:	4604      	mov	r4, r0
 8011108:	f009 f927 	bl	801a35a <_ZdlPvj>
 801110c:	4620      	mov	r0, r4
 801110e:	bd10      	pop	{r4, pc}

08011110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8011110:	b510      	push	{r4, lr}
 8011112:	2104      	movs	r1, #4
 8011114:	4604      	mov	r4, r0
 8011116:	f009 f920 	bl	801a35a <_ZdlPvj>
 801111a:	4620      	mov	r0, r4
 801111c:	bd10      	pop	{r4, pc}

0801111e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801111e:	b510      	push	{r4, lr}
 8011120:	2104      	movs	r1, #4
 8011122:	4604      	mov	r4, r0
 8011124:	f009 f919 	bl	801a35a <_ZdlPvj>
 8011128:	4620      	mov	r0, r4
 801112a:	bd10      	pop	{r4, pc}

0801112c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801112c:	b510      	push	{r4, lr}
 801112e:	2104      	movs	r1, #4
 8011130:	4604      	mov	r4, r0
 8011132:	f009 f912 	bl	801a35a <_ZdlPvj>
 8011136:	4620      	mov	r0, r4
 8011138:	bd10      	pop	{r4, pc}

0801113a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801113a:	b510      	push	{r4, lr}
 801113c:	2104      	movs	r1, #4
 801113e:	4604      	mov	r4, r0
 8011140:	f009 f90b 	bl	801a35a <_ZdlPvj>
 8011144:	4620      	mov	r0, r4
 8011146:	bd10      	pop	{r4, pc}

08011148 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011148:	b510      	push	{r4, lr}
 801114a:	2104      	movs	r1, #4
 801114c:	4604      	mov	r4, r0
 801114e:	f009 f904 	bl	801a35a <_ZdlPvj>
 8011152:	4620      	mov	r0, r4
 8011154:	bd10      	pop	{r4, pc}

08011156 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011156:	b510      	push	{r4, lr}
 8011158:	2104      	movs	r1, #4
 801115a:	4604      	mov	r4, r0
 801115c:	f009 f8fd 	bl	801a35a <_ZdlPvj>
 8011160:	4620      	mov	r0, r4
 8011162:	bd10      	pop	{r4, pc}

08011164 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011164:	b510      	push	{r4, lr}
 8011166:	2104      	movs	r1, #4
 8011168:	4604      	mov	r4, r0
 801116a:	f009 f8f6 	bl	801a35a <_ZdlPvj>
 801116e:	4620      	mov	r0, r4
 8011170:	bd10      	pop	{r4, pc}

08011172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011172:	b510      	push	{r4, lr}
 8011174:	2104      	movs	r1, #4
 8011176:	4604      	mov	r4, r0
 8011178:	f009 f8ef 	bl	801a35a <_ZdlPvj>
 801117c:	4620      	mov	r0, r4
 801117e:	bd10      	pop	{r4, pc}

08011180 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011180:	b510      	push	{r4, lr}
 8011182:	2104      	movs	r1, #4
 8011184:	4604      	mov	r4, r0
 8011186:	f009 f8e8 	bl	801a35a <_ZdlPvj>
 801118a:	4620      	mov	r0, r4
 801118c:	bd10      	pop	{r4, pc}

0801118e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801118e:	b510      	push	{r4, lr}
 8011190:	2104      	movs	r1, #4
 8011192:	4604      	mov	r4, r0
 8011194:	f009 f8e1 	bl	801a35a <_ZdlPvj>
 8011198:	4620      	mov	r0, r4
 801119a:	bd10      	pop	{r4, pc}

0801119c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801119c:	b510      	push	{r4, lr}
 801119e:	2104      	movs	r1, #4
 80111a0:	4604      	mov	r4, r0
 80111a2:	f009 f8da 	bl	801a35a <_ZdlPvj>
 80111a6:	4620      	mov	r0, r4
 80111a8:	bd10      	pop	{r4, pc}

080111aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80111aa:	b510      	push	{r4, lr}
 80111ac:	2104      	movs	r1, #4
 80111ae:	4604      	mov	r4, r0
 80111b0:	f009 f8d3 	bl	801a35a <_ZdlPvj>
 80111b4:	4620      	mov	r0, r4
 80111b6:	bd10      	pop	{r4, pc}

080111b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80111b8:	b510      	push	{r4, lr}
 80111ba:	2104      	movs	r1, #4
 80111bc:	4604      	mov	r4, r0
 80111be:	f009 f8cc 	bl	801a35a <_ZdlPvj>
 80111c2:	4620      	mov	r0, r4
 80111c4:	bd10      	pop	{r4, pc}

080111c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80111c6:	b510      	push	{r4, lr}
 80111c8:	2104      	movs	r1, #4
 80111ca:	4604      	mov	r4, r0
 80111cc:	f009 f8c5 	bl	801a35a <_ZdlPvj>
 80111d0:	4620      	mov	r0, r4
 80111d2:	bd10      	pop	{r4, pc}

080111d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80111d4:	b510      	push	{r4, lr}
 80111d6:	2104      	movs	r1, #4
 80111d8:	4604      	mov	r4, r0
 80111da:	f009 f8be 	bl	801a35a <_ZdlPvj>
 80111de:	4620      	mov	r0, r4
 80111e0:	bd10      	pop	{r4, pc}

080111e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80111e2:	b510      	push	{r4, lr}
 80111e4:	2104      	movs	r1, #4
 80111e6:	4604      	mov	r4, r0
 80111e8:	f009 f8b7 	bl	801a35a <_ZdlPvj>
 80111ec:	4620      	mov	r0, r4
 80111ee:	bd10      	pop	{r4, pc}

080111f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80111f0:	b510      	push	{r4, lr}
 80111f2:	2104      	movs	r1, #4
 80111f4:	4604      	mov	r4, r0
 80111f6:	f009 f8b0 	bl	801a35a <_ZdlPvj>
 80111fa:	4620      	mov	r0, r4
 80111fc:	bd10      	pop	{r4, pc}

080111fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80111fe:	b510      	push	{r4, lr}
 8011200:	2104      	movs	r1, #4
 8011202:	4604      	mov	r4, r0
 8011204:	f009 f8a9 	bl	801a35a <_ZdlPvj>
 8011208:	4620      	mov	r0, r4
 801120a:	bd10      	pop	{r4, pc}

0801120c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801120c:	b510      	push	{r4, lr}
 801120e:	2104      	movs	r1, #4
 8011210:	4604      	mov	r4, r0
 8011212:	f009 f8a2 	bl	801a35a <_ZdlPvj>
 8011216:	4620      	mov	r0, r4
 8011218:	bd10      	pop	{r4, pc}

0801121a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801121a:	b510      	push	{r4, lr}
 801121c:	2104      	movs	r1, #4
 801121e:	4604      	mov	r4, r0
 8011220:	f009 f89b 	bl	801a35a <_ZdlPvj>
 8011224:	4620      	mov	r0, r4
 8011226:	bd10      	pop	{r4, pc}

08011228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011228:	b510      	push	{r4, lr}
 801122a:	2104      	movs	r1, #4
 801122c:	4604      	mov	r4, r0
 801122e:	f009 f894 	bl	801a35a <_ZdlPvj>
 8011232:	4620      	mov	r0, r4
 8011234:	bd10      	pop	{r4, pc}
	...

08011238 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801123c:	4f97      	ldr	r7, [pc, #604]	; (801149c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801123e:	4616      	mov	r6, r2
 8011240:	683a      	ldr	r2, [r7, #0]
 8011242:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011246:	2a02      	cmp	r2, #2
 8011248:	b08f      	sub	sp, #60	; 0x3c
 801124a:	4604      	mov	r4, r0
 801124c:	4689      	mov	r9, r1
 801124e:	d106      	bne.n	801125e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011250:	4b93      	ldr	r3, [pc, #588]	; (80114a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8011252:	4a94      	ldr	r2, [pc, #592]	; (80114a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8011254:	f240 310f 	movw	r1, #783	; 0x30f
 8011258:	4893      	ldr	r0, [pc, #588]	; (80114a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801125a:	f009 f8ad 	bl	801a3b8 <__assert_func>
 801125e:	ad0e      	add	r5, sp, #56	; 0x38
 8011260:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8011264:	4628      	mov	r0, r5
 8011266:	f7fd fb6b 	bl	800e940 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801126a:	6823      	ldr	r3, [r4, #0]
 801126c:	4680      	mov	r8, r0
 801126e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011270:	4620      	mov	r0, r4
 8011272:	4798      	blx	r3
 8011274:	4580      	cmp	r8, r0
 8011276:	d004      	beq.n	8011282 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011278:	4b8c      	ldr	r3, [pc, #560]	; (80114ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801127a:	4a8a      	ldr	r2, [pc, #552]	; (80114a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801127c:	f240 3111 	movw	r1, #785	; 0x311
 8011280:	e7ea      	b.n	8011258 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011282:	4628      	mov	r0, r5
 8011284:	f7fd fad2 	bl	800e82c <_ZNK8touchgfx6Bitmap7getDataEv>
 8011288:	4680      	mov	r8, r0
 801128a:	b920      	cbnz	r0, 8011296 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801128c:	4b88      	ldr	r3, [pc, #544]	; (80114b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801128e:	4a85      	ldr	r2, [pc, #532]	; (80114a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8011290:	f240 3113 	movw	r1, #787	; 0x313
 8011294:	e7e0      	b.n	8011258 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011296:	6830      	ldr	r0, [r6, #0]
 8011298:	6871      	ldr	r1, [r6, #4]
 801129a:	f9b6 a000 	ldrsh.w	sl, [r6]
 801129e:	ab06      	add	r3, sp, #24
 80112a0:	c303      	stmia	r3!, {r0, r1}
 80112a2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80112a6:	f8d9 0000 	ldr.w	r0, [r9]
 80112aa:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80112ae:	ab08      	add	r3, sp, #32
 80112b0:	c303      	stmia	r3!, {r0, r1}
 80112b2:	4628      	mov	r0, r5
 80112b4:	f7fd f9b2 	bl	800e61c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80112b8:	4606      	mov	r6, r0
 80112ba:	4628      	mov	r0, r5
 80112bc:	f7fd f9e8 	bl	800e690 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80112c0:	f10d 0b20 	add.w	fp, sp, #32
 80112c4:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80112c8:	a806      	add	r0, sp, #24
 80112ca:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80112ce:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80112d2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80112d6:	f7fa fb5d 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80112da:	4658      	mov	r0, fp
 80112dc:	f7fa fb5a 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80112e0:	a80a      	add	r0, sp, #40	; 0x28
 80112e2:	f7fa fb57 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80112e6:	4d73      	ldr	r5, [pc, #460]	; (80114b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80112e8:	4b73      	ldr	r3, [pc, #460]	; (80114b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80112ea:	f9b5 2000 	ldrsh.w	r2, [r5]
 80112ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112f2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80112f6:	2100      	movs	r1, #0
 80112f8:	910c      	str	r1, [sp, #48]	; 0x30
 80112fa:	4658      	mov	r0, fp
 80112fc:	a90c      	add	r1, sp, #48	; 0x30
 80112fe:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011302:	f7f7 fd65 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 8011306:	4658      	mov	r0, fp
 8011308:	f7f7 fda5 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 801130c:	2800      	cmp	r0, #0
 801130e:	f040 8099 	bne.w	8011444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8011312:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8011316:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801131a:	4288      	cmp	r0, r1
 801131c:	db37      	blt.n	801138e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801131e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8011322:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011326:	429a      	cmp	r2, r3
 8011328:	db31      	blt.n	801138e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801132a:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801132e:	4430      	add	r0, r6
 8011330:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8011334:	4431      	add	r1, r6
 8011336:	b200      	sxth	r0, r0
 8011338:	b209      	sxth	r1, r1
 801133a:	4288      	cmp	r0, r1
 801133c:	dc27      	bgt.n	801138e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801133e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011342:	440a      	add	r2, r1
 8011344:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011348:	440b      	add	r3, r1
 801134a:	b212      	sxth	r2, r2
 801134c:	b21b      	sxth	r3, r3
 801134e:	429a      	cmp	r2, r3
 8011350:	dc1d      	bgt.n	801138e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8011352:	6823      	ldr	r3, [r4, #0]
 8011354:	4620      	mov	r0, r4
 8011356:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011358:	4798      	blx	r3
 801135a:	4682      	mov	sl, r0
 801135c:	6838      	ldr	r0, [r7, #0]
 801135e:	6803      	ldr	r3, [r0, #0]
 8011360:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011362:	4798      	blx	r3
 8011364:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011368:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801136c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011370:	1a5b      	subs	r3, r3, r1
 8011372:	b29b      	uxth	r3, r3
 8011374:	b21c      	sxth	r4, r3
 8011376:	2c00      	cmp	r4, #0
 8011378:	dc0e      	bgt.n	8011398 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801137a:	bf1f      	itttt	ne
 801137c:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8011380:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8011384:	185b      	addne	r3, r3, r1
 8011386:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801138a:	4644      	mov	r4, r8
 801138c:	e009      	b.n	80113a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801138e:	4b4b      	ldr	r3, [pc, #300]	; (80114bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8011390:	4a44      	ldr	r2, [pc, #272]	; (80114a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8011392:	f240 3121 	movw	r1, #801	; 0x321
 8011396:	e75f      	b.n	8011258 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011398:	1ad3      	subs	r3, r2, r3
 801139a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801139e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80113a2:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 80113a6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80113aa:	1b9b      	subs	r3, r3, r6
 80113ac:	b29b      	uxth	r3, r3
 80113ae:	b219      	sxth	r1, r3
 80113b0:	2900      	cmp	r1, #0
 80113b2:	dd4b      	ble.n	801144c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80113b4:	4351      	muls	r1, r2
 80113b6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80113ba:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80113be:	1acb      	subs	r3, r1, r3
 80113c0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80113c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80113c8:	2e00      	cmp	r6, #0
 80113ca:	dd3b      	ble.n	8011444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80113cc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80113d0:	2b00      	cmp	r3, #0
 80113d2:	dd37      	ble.n	8011444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80113d4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80113d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80113dc:	fb0a f90c 	mul.w	r9, sl, ip
 80113e0:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 80113e4:	4481      	add	r9, r0
 80113e6:	8828      	ldrh	r0, [r5, #0]
 80113e8:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 80113ec:	42ae      	cmp	r6, r5
 80113ee:	bfa8      	it	ge
 80113f0:	462e      	movge	r6, r5
 80113f2:	1a41      	subs	r1, r0, r1
 80113f4:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80113f8:	428e      	cmp	r6, r1
 80113fa:	bfa8      	it	ge
 80113fc:	460e      	movge	r6, r1
 80113fe:	429d      	cmp	r5, r3
 8011400:	bfa8      	it	ge
 8011402:	461d      	movge	r5, r3
 8011404:	4b2c      	ldr	r3, [pc, #176]	; (80114b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011406:	881b      	ldrh	r3, [r3, #0]
 8011408:	eba3 030c 	sub.w	r3, r3, ip
 801140c:	429d      	cmp	r5, r3
 801140e:	bfa8      	it	ge
 8011410:	461d      	movge	r5, r3
 8011412:	42b0      	cmp	r0, r6
 8011414:	d12c      	bne.n	8011470 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8011416:	4290      	cmp	r0, r2
 8011418:	d12a      	bne.n	8011470 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801141a:	6838      	ldr	r0, [r7, #0]
 801141c:	9203      	str	r2, [sp, #12]
 801141e:	6803      	ldr	r3, [r0, #0]
 8011420:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011422:	4798      	blx	r3
 8011424:	07c3      	lsls	r3, r0, #31
 8011426:	d51a      	bpl.n	801145e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8011428:	9a03      	ldr	r2, [sp, #12]
 801142a:	6838      	ldr	r0, [r7, #0]
 801142c:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8011430:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8011434:	6803      	ldr	r3, [r0, #0]
 8011436:	9200      	str	r2, [sp, #0]
 8011438:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 801143a:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801143e:	4623      	mov	r3, r4
 8011440:	47a8      	blx	r5
 8011442:	4680      	mov	r8, r0
 8011444:	4640      	mov	r0, r8
 8011446:	b00f      	add	sp, #60	; 0x3c
 8011448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801144c:	bf1f      	itttt	ne
 801144e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8011452:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8011456:	185b      	addne	r3, r3, r1
 8011458:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801145c:	e7b2      	b.n	80113c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801145e:	6838      	ldr	r0, [r7, #0]
 8011460:	6803      	ldr	r3, [r0, #0]
 8011462:	464a      	mov	r2, r9
 8011464:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8011466:	4621      	mov	r1, r4
 8011468:	fb05 f30a 	mul.w	r3, r5, sl
 801146c:	47b0      	blx	r6
 801146e:	e7e9      	b.n	8011444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8011470:	4355      	muls	r5, r2
 8011472:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8011476:	9303      	str	r3, [sp, #12]
 8011478:	0076      	lsls	r6, r6, #1
 801147a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801147e:	9b03      	ldr	r3, [sp, #12]
 8011480:	429c      	cmp	r4, r3
 8011482:	d2df      	bcs.n	8011444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8011484:	6838      	ldr	r0, [r7, #0]
 8011486:	6803      	ldr	r3, [r0, #0]
 8011488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801148a:	464a      	mov	r2, r9
 801148c:	461d      	mov	r5, r3
 801148e:	4621      	mov	r1, r4
 8011490:	4633      	mov	r3, r6
 8011492:	47a8      	blx	r5
 8011494:	44d1      	add	r9, sl
 8011496:	445c      	add	r4, fp
 8011498:	e7f1      	b.n	801147e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801149a:	bf00      	nop
 801149c:	2000a094 	.word	0x2000a094
 80114a0:	0801dcb8 	.word	0x0801dcb8
 80114a4:	0801e568 	.word	0x0801e568
 80114a8:	0801dd6a 	.word	0x0801dd6a
 80114ac:	0801dd9c 	.word	0x0801dd9c
 80114b0:	0801ddf1 	.word	0x0801ddf1
 80114b4:	2000a08e 	.word	0x2000a08e
 80114b8:	2000a090 	.word	0x2000a090
 80114bc:	0801de2f 	.word	0x0801de2f

080114c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80114c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114c2:	4607      	mov	r7, r0
 80114c4:	b087      	sub	sp, #28
 80114c6:	460d      	mov	r5, r1
 80114c8:	4614      	mov	r4, r2
 80114ca:	461e      	mov	r6, r3
 80114cc:	b373      	cbz	r3, 801152c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80114ce:	4608      	mov	r0, r1
 80114d0:	f7f7 fcc1 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 80114d4:	bb50      	cbnz	r0, 801152c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80114d6:	6828      	ldr	r0, [r5, #0]
 80114d8:	6869      	ldr	r1, [r5, #4]
 80114da:	4d1f      	ldr	r5, [pc, #124]	; (8011558 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 80114dc:	ab04      	add	r3, sp, #16
 80114de:	c303      	stmia	r3!, {r0, r1}
 80114e0:	a804      	add	r0, sp, #16
 80114e2:	f7fa fa57 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80114e6:	6828      	ldr	r0, [r5, #0]
 80114e8:	6803      	ldr	r3, [r0, #0]
 80114ea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80114ec:	4798      	blx	r3
 80114ee:	2eff      	cmp	r6, #255	; 0xff
 80114f0:	d01e      	beq.n	8011530 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 80114f2:	f010 0f08 	tst.w	r0, #8
 80114f6:	6828      	ldr	r0, [r5, #0]
 80114f8:	6803      	ldr	r3, [r0, #0]
 80114fa:	d01c      	beq.n	8011536 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 80114fc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80114fe:	4b17      	ldr	r3, [pc, #92]	; (801155c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 8011500:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011504:	9602      	str	r6, [sp, #8]
 8011506:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 801150a:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 801150e:	0964      	lsrs	r4, r4, #5
 8011510:	4319      	orrs	r1, r3
 8011512:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8011516:	4321      	orrs	r1, r4
 8011518:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801151c:	9401      	str	r4, [sp, #4]
 801151e:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8011522:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011526:	9400      	str	r4, [sp, #0]
 8011528:	b289      	uxth	r1, r1
 801152a:	47a8      	blx	r5
 801152c:	b007      	add	sp, #28
 801152e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011530:	f010 0f02 	tst.w	r0, #2
 8011534:	e7df      	b.n	80114f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8011536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011538:	4798      	blx	r3
 801153a:	4b09      	ldr	r3, [pc, #36]	; (8011560 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 801153c:	881a      	ldrh	r2, [r3, #0]
 801153e:	683b      	ldr	r3, [r7, #0]
 8011540:	e9cd 4600 	strd	r4, r6, [sp]
 8011544:	4601      	mov	r1, r0
 8011546:	69dc      	ldr	r4, [r3, #28]
 8011548:	4638      	mov	r0, r7
 801154a:	ab04      	add	r3, sp, #16
 801154c:	47a0      	blx	r4
 801154e:	6828      	ldr	r0, [r5, #0]
 8011550:	6803      	ldr	r3, [r0, #0]
 8011552:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011554:	4798      	blx	r3
 8011556:	e7e9      	b.n	801152c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8011558:	2000a094 	.word	0x2000a094
 801155c:	fffff800 	.word	0xfffff800
 8011560:	2000a08e 	.word	0x2000a08e

08011564 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8011564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011568:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 801156c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8011570:	460f      	mov	r7, r1
 8011572:	4614      	mov	r4, r2
 8011574:	461d      	mov	r5, r3
 8011576:	2e00      	cmp	r6, #0
 8011578:	f000 80b6 	beq.w	80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801157c:	4618      	mov	r0, r3
 801157e:	f7f7 fc6a 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011582:	2800      	cmp	r0, #0
 8011584:	f040 80b0 	bne.w	80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8011588:	f9b5 1000 	ldrsh.w	r1, [r5]
 801158c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011590:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8011594:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8011598:	fb04 1303 	mla	r3, r4, r3, r1
 801159c:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 80115a0:	4365      	muls	r5, r4
 80115a2:	2eff      	cmp	r6, #255	; 0xff
 80115a4:	eba4 0c00 	sub.w	ip, r4, r0
 80115a8:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80115ac:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 80115b0:	ea4f 2718 	mov.w	r7, r8, lsr #8
 80115b4:	fa5f f288 	uxtb.w	r2, r8
 80115b8:	d04a      	beq.n	8011650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 80115ba:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 80115be:	fa5f fe8e 	uxtb.w	lr, lr
 80115c2:	b2b6      	uxth	r6, r6
 80115c4:	b2ff      	uxtb	r7, r7
 80115c6:	0040      	lsls	r0, r0, #1
 80115c8:	fb0e fe06 	mul.w	lr, lr, r6
 80115cc:	4377      	muls	r7, r6
 80115ce:	fb02 f306 	mul.w	r3, r2, r6
 80115d2:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 80115d6:	fa1f f888 	uxth.w	r8, r8
 80115da:	42a9      	cmp	r1, r5
 80115dc:	f080 8084 	bcs.w	80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80115e0:	eb01 0900 	add.w	r9, r1, r0
 80115e4:	4549      	cmp	r1, r9
 80115e6:	d231      	bcs.n	801164c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 80115e8:	880a      	ldrh	r2, [r1, #0]
 80115ea:	1214      	asrs	r4, r2, #8
 80115ec:	10d6      	asrs	r6, r2, #3
 80115ee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80115f2:	00d2      	lsls	r2, r2, #3
 80115f4:	b2d2      	uxtb	r2, r2
 80115f6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80115fa:	fb14 f408 	smulbb	r4, r4, r8
 80115fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8011602:	4474      	add	r4, lr
 8011604:	fb12 f208 	smulbb	r2, r2, r8
 8011608:	b2a4      	uxth	r4, r4
 801160a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801160e:	441a      	add	r2, r3
 8011610:	b292      	uxth	r2, r2
 8011612:	f104 0a01 	add.w	sl, r4, #1
 8011616:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801161a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801161e:	fb16 f608 	smulbb	r6, r6, r8
 8011622:	f102 0a01 	add.w	sl, r2, #1
 8011626:	443e      	add	r6, r7
 8011628:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801162c:	b2b6      	uxth	r6, r6
 801162e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011632:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011636:	4322      	orrs	r2, r4
 8011638:	1c74      	adds	r4, r6, #1
 801163a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801163e:	0976      	lsrs	r6, r6, #5
 8011640:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011644:	4332      	orrs	r2, r6
 8011646:	f821 2b02 	strh.w	r2, [r1], #2
 801164a:	e7cb      	b.n	80115e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 801164c:	4461      	add	r1, ip
 801164e:	e7c4      	b.n	80115da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8011650:	4b26      	ldr	r3, [pc, #152]	; (80116ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8011652:	00ff      	lsls	r7, r7, #3
 8011654:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 8011658:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801165c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011660:	433b      	orrs	r3, r7
 8011662:	07e2      	lsls	r2, r4, #31
 8011664:	b29b      	uxth	r3, r3
 8011666:	d50c      	bpl.n	8011682 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8011668:	0040      	lsls	r0, r0, #1
 801166a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801166e:	42a9      	cmp	r1, r5
 8011670:	d23a      	bcs.n	80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8011672:	180a      	adds	r2, r1, r0
 8011674:	4291      	cmp	r1, r2
 8011676:	d202      	bcs.n	801167e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 8011678:	f821 3b02 	strh.w	r3, [r1], #2
 801167c:	e7fa      	b.n	8011674 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801167e:	4461      	add	r1, ip
 8011680:	e7f5      	b.n	801166e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8011682:	078f      	lsls	r7, r1, #30
 8011684:	d008      	beq.n	8011698 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 8011686:	0066      	lsls	r6, r4, #1
 8011688:	460a      	mov	r2, r1
 801168a:	42aa      	cmp	r2, r5
 801168c:	d202      	bcs.n	8011694 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 801168e:	8013      	strh	r3, [r2, #0]
 8011690:	4432      	add	r2, r6
 8011692:	e7fa      	b.n	801168a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8011694:	3102      	adds	r1, #2
 8011696:	3801      	subs	r0, #1
 8011698:	07c6      	lsls	r6, r0, #31
 801169a:	d50b      	bpl.n	80116b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 801169c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80116a0:	3a01      	subs	r2, #1
 80116a2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80116a6:	0066      	lsls	r6, r4, #1
 80116a8:	42aa      	cmp	r2, r5
 80116aa:	d202      	bcs.n	80116b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 80116ac:	8013      	strh	r3, [r2, #0]
 80116ae:	4432      	add	r2, r6
 80116b0:	e7fa      	b.n	80116a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80116b2:	3801      	subs	r0, #1
 80116b4:	b1c0      	cbz	r0, 80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80116b6:	1040      	asrs	r0, r0, #1
 80116b8:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80116bc:	0080      	lsls	r0, r0, #2
 80116be:	0064      	lsls	r4, r4, #1
 80116c0:	42a9      	cmp	r1, r5
 80116c2:	d211      	bcs.n	80116e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80116c4:	078a      	lsls	r2, r1, #30
 80116c6:	d006      	beq.n	80116d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 80116c8:	4b09      	ldr	r3, [pc, #36]	; (80116f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 80116ca:	4a0a      	ldr	r2, [pc, #40]	; (80116f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 80116cc:	480a      	ldr	r0, [pc, #40]	; (80116f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 80116ce:	f240 31d6 	movw	r1, #982	; 0x3d6
 80116d2:	f008 fe71 	bl	801a3b8 <__assert_func>
 80116d6:	180e      	adds	r6, r1, r0
 80116d8:	460a      	mov	r2, r1
 80116da:	42b2      	cmp	r2, r6
 80116dc:	d202      	bcs.n	80116e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 80116de:	f842 3b04 	str.w	r3, [r2], #4
 80116e2:	e7fa      	b.n	80116da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 80116e4:	4421      	add	r1, r4
 80116e6:	e7eb      	b.n	80116c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 80116e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80116ec:	fffff800 	.word	0xfffff800
 80116f0:	0801db69 	.word	0x0801db69
 80116f4:	0801e1b4 	.word	0x0801e1b4
 80116f8:	0801dd6a 	.word	0x0801dd6a

080116fc <_ZN8touchgfx8LCD16bppC1Ev>:
 80116fc:	2200      	movs	r2, #0
 80116fe:	4910      	ldr	r1, [pc, #64]	; (8011740 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8011700:	6042      	str	r2, [r0, #4]
 8011702:	6001      	str	r1, [r0, #0]
 8011704:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8011708:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801170c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8011710:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8011714:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8011718:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801171c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8011720:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8011724:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8011728:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801172c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011730:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011734:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8011738:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801173c:	4770      	bx	lr
 801173e:	bf00      	nop
 8011740:	0801e170 	.word	0x0801e170

08011744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011748:	460d      	mov	r5, r1
 801174a:	b08b      	sub	sp, #44	; 0x2c
 801174c:	4604      	mov	r4, r0
 801174e:	6808      	ldr	r0, [r1, #0]
 8011750:	6849      	ldr	r1, [r1, #4]
 8011752:	4699      	mov	r9, r3
 8011754:	ab06      	add	r3, sp, #24
 8011756:	c303      	stmia	r3!, {r0, r1}
 8011758:	6810      	ldr	r0, [r2, #0]
 801175a:	6851      	ldr	r1, [r2, #4]
 801175c:	ab08      	add	r3, sp, #32
 801175e:	c303      	stmia	r3!, {r0, r1}
 8011760:	a806      	add	r0, sp, #24
 8011762:	f7fa f917 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011766:	4629      	mov	r1, r5
 8011768:	a808      	add	r0, sp, #32
 801176a:	f7fa f8fb 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801176e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011772:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011776:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801177a:	4d62      	ldr	r5, [pc, #392]	; (8011904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 801177c:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011780:	6828      	ldr	r0, [r5, #0]
 8011782:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8011786:	fb11 2103 	smlabb	r1, r1, r3, r2
 801178a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801178e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8011792:	440a      	add	r2, r1
 8011794:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011798:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801179c:	4413      	add	r3, r2
 801179e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80117a2:	6803      	ldr	r3, [r0, #0]
 80117a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80117a6:	4798      	blx	r3
 80117a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80117ac:	d118      	bne.n	80117e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 80117ae:	f010 0f20 	tst.w	r0, #32
 80117b2:	6828      	ldr	r0, [r5, #0]
 80117b4:	d017      	beq.n	80117e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 80117b6:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80117ba:	6801      	ldr	r1, [r0, #0]
 80117bc:	9502      	str	r5, [sp, #8]
 80117be:	b2b6      	uxth	r6, r6
 80117c0:	fa1f f588 	uxth.w	r5, r8
 80117c4:	f8cd 900c 	str.w	r9, [sp, #12]
 80117c8:	9601      	str	r6, [sp, #4]
 80117ca:	9500      	str	r5, [sp, #0]
 80117cc:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 80117ce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80117d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80117d6:	4621      	mov	r1, r4
 80117d8:	47a8      	blx	r5
 80117da:	b00b      	add	sp, #44	; 0x2c
 80117dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117e0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80117e4:	e7e5      	b.n	80117b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80117e6:	6803      	ldr	r3, [r0, #0]
 80117e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80117ea:	4798      	blx	r3
 80117ec:	4946      	ldr	r1, [pc, #280]	; (8011908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80117ee:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80117f2:	880b      	ldrh	r3, [r1, #0]
 80117f4:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 80117f8:	fb03 5202 	mla	r2, r3, r2, r5
 80117fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011800:	4373      	muls	r3, r6
 8011802:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011806:	9305      	str	r3, [sp, #20]
 8011808:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801180c:	9304      	str	r3, [sp, #16]
 801180e:	468a      	mov	sl, r1
 8011810:	9b05      	ldr	r3, [sp, #20]
 8011812:	4298      	cmp	r0, r3
 8011814:	d26f      	bcs.n	80118f6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 8011816:	9b04      	ldr	r3, [sp, #16]
 8011818:	4621      	mov	r1, r4
 801181a:	eb00 0b03 	add.w	fp, r0, r3
 801181e:	4558      	cmp	r0, fp
 8011820:	d25c      	bcs.n	80118dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 8011822:	f851 2b04 	ldr.w	r2, [r1], #4
 8011826:	0e14      	lsrs	r4, r2, #24
 8011828:	d016      	beq.n	8011858 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 801182a:	2cff      	cmp	r4, #255	; 0xff
 801182c:	b2d3      	uxtb	r3, r2
 801182e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8011832:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8011836:	d111      	bne.n	801185c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 8011838:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801183c:	d10e      	bne.n	801185c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 801183e:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 8011842:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 8011846:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801184a:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 801184e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011852:	ea43 030c 	orr.w	r3, r3, ip
 8011856:	8003      	strh	r3, [r0, #0]
 8011858:	3002      	adds	r0, #2
 801185a:	e7e0      	b.n	801181e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 801185c:	fb09 f404 	mul.w	r4, r9, r4
 8011860:	8807      	ldrh	r7, [r0, #0]
 8011862:	1c65      	adds	r5, r4, #1
 8011864:	eb05 2424 	add.w	r4, r5, r4, asr #8
 8011868:	1224      	asrs	r4, r4, #8
 801186a:	123e      	asrs	r6, r7, #8
 801186c:	fa1f fe84 	uxth.w	lr, r4
 8011870:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011874:	43e4      	mvns	r4, r4
 8011876:	b2d2      	uxtb	r2, r2
 8011878:	b2e4      	uxtb	r4, r4
 801187a:	10fd      	asrs	r5, r7, #3
 801187c:	fb12 f20e 	smulbb	r2, r2, lr
 8011880:	00ff      	lsls	r7, r7, #3
 8011882:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011886:	fb06 2604 	mla	r6, r6, r4, r2
 801188a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801188e:	b2ff      	uxtb	r7, r7
 8011890:	fa5f fc8c 	uxtb.w	ip, ip
 8011894:	b2b6      	uxth	r6, r6
 8011896:	fb1c fc0e 	smulbb	ip, ip, lr
 801189a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801189e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80118a2:	fb13 f30e 	smulbb	r3, r3, lr
 80118a6:	fb05 c504 	mla	r5, r5, r4, ip
 80118aa:	1c72      	adds	r2, r6, #1
 80118ac:	fb07 3704 	mla	r7, r7, r4, r3
 80118b0:	b2ad      	uxth	r5, r5
 80118b2:	b2bf      	uxth	r7, r7
 80118b4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80118b8:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 80118bc:	f105 0c01 	add.w	ip, r5, #1
 80118c0:	1c7e      	adds	r6, r7, #1
 80118c2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80118c6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80118ca:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80118ce:	096d      	lsrs	r5, r5, #5
 80118d0:	4316      	orrs	r6, r2
 80118d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80118d6:	432e      	orrs	r6, r5
 80118d8:	8006      	strh	r6, [r0, #0]
 80118da:	e7bd      	b.n	8011858 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 80118dc:	f8ba 3000 	ldrh.w	r3, [sl]
 80118e0:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 80118e4:	eba3 0308 	sub.w	r3, r3, r8
 80118e8:	eba4 0408 	sub.w	r4, r4, r8
 80118ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80118f0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80118f4:	e78c      	b.n	8011810 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 80118f6:	4b03      	ldr	r3, [pc, #12]	; (8011904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 80118f8:	6818      	ldr	r0, [r3, #0]
 80118fa:	6803      	ldr	r3, [r0, #0]
 80118fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118fe:	4798      	blx	r3
 8011900:	e76b      	b.n	80117da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8011902:	bf00      	nop
 8011904:	2000a094 	.word	0x2000a094
 8011908:	2000a08e 	.word	0x2000a08e

0801190c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801190c:	b570      	push	{r4, r5, r6, lr}
 801190e:	9d04      	ldr	r5, [sp, #16]
 8011910:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8011914:	460c      	mov	r4, r1
 8011916:	4619      	mov	r1, r3
 8011918:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801191c:	2a0d      	cmp	r2, #13
 801191e:	d820      	bhi.n	8011962 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8011920:	e8df f002 	tbb	[pc, r2]
 8011924:	18121807 	.word	0x18121807
 8011928:	18181818 	.word	0x18181818
 801192c:	18181818 	.word	0x18181818
 8011930:	1818      	.short	0x1818
 8011932:	6802      	ldr	r2, [r0, #0]
 8011934:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8011938:	68d6      	ldr	r6, [r2, #12]
 801193a:	462b      	mov	r3, r5
 801193c:	460a      	mov	r2, r1
 801193e:	46b4      	mov	ip, r6
 8011940:	4621      	mov	r1, r4
 8011942:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011946:	4760      	bx	ip
 8011948:	462a      	mov	r2, r5
 801194a:	4620      	mov	r0, r4
 801194c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011950:	f7ff bef8 	b.w	8011744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011954:	4b03      	ldr	r3, [pc, #12]	; (8011964 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8011956:	4a04      	ldr	r2, [pc, #16]	; (8011968 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8011958:	4804      	ldr	r0, [pc, #16]	; (801196c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 801195a:	f44f 7142 	mov.w	r1, #776	; 0x308
 801195e:	f008 fd2b 	bl	801a3b8 <__assert_func>
 8011962:	bd70      	pop	{r4, r5, r6, pc}
 8011964:	0801de8f 	.word	0x0801de8f
 8011968:	0801e5ee 	.word	0x0801e5ee
 801196c:	0801dd6a 	.word	0x0801dd6a

08011970 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8011970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011974:	460e      	mov	r6, r1
 8011976:	b08c      	sub	sp, #48	; 0x30
 8011978:	4604      	mov	r4, r0
 801197a:	6808      	ldr	r0, [r1, #0]
 801197c:	6849      	ldr	r1, [r1, #4]
 801197e:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8011b50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8011982:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8011b54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 8011986:	461d      	mov	r5, r3
 8011988:	ab08      	add	r3, sp, #32
 801198a:	c303      	stmia	r3!, {r0, r1}
 801198c:	6810      	ldr	r0, [r2, #0]
 801198e:	6851      	ldr	r1, [r2, #4]
 8011990:	ab0a      	add	r3, sp, #40	; 0x28
 8011992:	c303      	stmia	r3!, {r0, r1}
 8011994:	a808      	add	r0, sp, #32
 8011996:	f7f9 fffd 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801199a:	4631      	mov	r1, r6
 801199c:	a80a      	add	r0, sp, #40	; 0x28
 801199e:	f7f9 ffe1 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80119a2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80119a6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80119aa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80119ae:	f8d8 0000 	ldr.w	r0, [r8]
 80119b2:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 80119b6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80119ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80119be:	440c      	add	r4, r1
 80119c0:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80119c4:	440a      	add	r2, r1
 80119c6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80119ca:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80119ce:	4413      	add	r3, r2
 80119d0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80119d4:	6803      	ldr	r3, [r0, #0]
 80119d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80119d8:	4798      	blx	r3
 80119da:	2dff      	cmp	r5, #255	; 0xff
 80119dc:	d122      	bne.n	8011a24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 80119de:	f010 0f01 	tst.w	r0, #1
 80119e2:	f8d8 0000 	ldr.w	r0, [r8]
 80119e6:	d020      	beq.n	8011a2a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 80119e8:	2100      	movs	r1, #0
 80119ea:	f04f 0e01 	mov.w	lr, #1
 80119ee:	f8d0 c000 	ldr.w	ip, [r0]
 80119f2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80119f6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80119fa:	e9cd e106 	strd	lr, r1, [sp, #24]
 80119fe:	f8b9 e000 	ldrh.w	lr, [r9]
 8011a02:	9503      	str	r5, [sp, #12]
 8011a04:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8011a08:	b2b6      	uxth	r6, r6
 8011a0a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8011a0e:	9102      	str	r1, [sp, #8]
 8011a10:	b2bf      	uxth	r7, r7
 8011a12:	9601      	str	r6, [sp, #4]
 8011a14:	9700      	str	r7, [sp, #0]
 8011a16:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 8011a1a:	4621      	mov	r1, r4
 8011a1c:	47a8      	blx	r5
 8011a1e:	b00c      	add	sp, #48	; 0x30
 8011a20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011a24:	f010 0f04 	tst.w	r0, #4
 8011a28:	e7db      	b.n	80119e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 8011a2a:	6803      	ldr	r3, [r0, #0]
 8011a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a2e:	4798      	blx	r3
 8011a30:	f8b9 3000 	ldrh.w	r3, [r9]
 8011a34:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8011a38:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011a3c:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 8011a40:	fb03 1202 	mla	r2, r3, r2, r1
 8011a44:	ebac 0c07 	sub.w	ip, ip, r7
 8011a48:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011a4c:	435e      	muls	r6, r3
 8011a4e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8011a52:	2dff      	cmp	r5, #255	; 0xff
 8011a54:	eba3 0707 	sub.w	r7, r3, r7
 8011a58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011a5c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8011a60:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8011a64:	d049      	beq.n	8011afa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 8011a66:	43eb      	mvns	r3, r5
 8011a68:	fa1f f985 	uxth.w	r9, r5
 8011a6c:	b2db      	uxtb	r3, r3
 8011a6e:	42b0      	cmp	r0, r6
 8011a70:	d266      	bcs.n	8011b40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8011a72:	eb00 0a0e 	add.w	sl, r0, lr
 8011a76:	4550      	cmp	r0, sl
 8011a78:	4621      	mov	r1, r4
 8011a7a:	f104 0403 	add.w	r4, r4, #3
 8011a7e:	d25b      	bcs.n	8011b38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8011a80:	8802      	ldrh	r2, [r0, #0]
 8011a82:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8011a86:	ea4f 2822 	mov.w	r8, r2, asr #8
 8011a8a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8011a8e:	fb11 f109 	smulbb	r1, r1, r9
 8011a92:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8011a96:	10d5      	asrs	r5, r2, #3
 8011a98:	fb08 1803 	mla	r8, r8, r3, r1
 8011a9c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8011aa0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011aa4:	fb11 f109 	smulbb	r1, r1, r9
 8011aa8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8011aac:	fb05 1503 	mla	r5, r5, r3, r1
 8011ab0:	00d2      	lsls	r2, r2, #3
 8011ab2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8011ab6:	b2d2      	uxtb	r2, r2
 8011ab8:	fb11 f109 	smulbb	r1, r1, r9
 8011abc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8011ac0:	fa1f f888 	uxth.w	r8, r8
 8011ac4:	fb02 1203 	mla	r2, r2, r3, r1
 8011ac8:	b292      	uxth	r2, r2
 8011aca:	f108 0101 	add.w	r1, r8, #1
 8011ace:	b2ad      	uxth	r5, r5
 8011ad0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8011ad4:	1c51      	adds	r1, r2, #1
 8011ad6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8011ada:	1c69      	adds	r1, r5, #1
 8011adc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8011ae0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8011ae4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011ae8:	096d      	lsrs	r5, r5, #5
 8011aea:	ea42 0208 	orr.w	r2, r2, r8
 8011aee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011af2:	432a      	orrs	r2, r5
 8011af4:	f820 2b02 	strh.w	r2, [r0], #2
 8011af8:	e7bd      	b.n	8011a76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8011afa:	4a14      	ldr	r2, [pc, #80]	; (8011b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 8011afc:	42b0      	cmp	r0, r6
 8011afe:	d21f      	bcs.n	8011b40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8011b00:	eb00 050e 	add.w	r5, r0, lr
 8011b04:	42a8      	cmp	r0, r5
 8011b06:	4621      	mov	r1, r4
 8011b08:	f104 0403 	add.w	r4, r4, #3
 8011b0c:	d210      	bcs.n	8011b30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 8011b0e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8011b12:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8011b16:	00db      	lsls	r3, r3, #3
 8011b18:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8011b1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011b20:	430b      	orrs	r3, r1
 8011b22:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8011b26:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8011b2a:	f820 3b02 	strh.w	r3, [r0], #2
 8011b2e:	e7e9      	b.n	8011b04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8011b30:	4438      	add	r0, r7
 8011b32:	eb01 040c 	add.w	r4, r1, ip
 8011b36:	e7e1      	b.n	8011afc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 8011b38:	4438      	add	r0, r7
 8011b3a:	eb01 040c 	add.w	r4, r1, ip
 8011b3e:	e796      	b.n	8011a6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 8011b40:	4b03      	ldr	r3, [pc, #12]	; (8011b50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 8011b42:	6818      	ldr	r0, [r3, #0]
 8011b44:	6803      	ldr	r3, [r0, #0]
 8011b46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011b48:	4798      	blx	r3
 8011b4a:	e768      	b.n	8011a1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 8011b4c:	fffff800 	.word	0xfffff800
 8011b50:	2000a094 	.word	0x2000a094
 8011b54:	2000a08e 	.word	0x2000a08e

08011b58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8011b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b5c:	b093      	sub	sp, #76	; 0x4c
 8011b5e:	880e      	ldrh	r6, [r1, #0]
 8011b60:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011b64:	4681      	mov	r9, r0
 8011b66:	4688      	mov	r8, r1
 8011b68:	4615      	mov	r5, r2
 8011b6a:	b136      	cbz	r6, 8011b7a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8011b6c:	4b70      	ldr	r3, [pc, #448]	; (8011d30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8011b6e:	4a71      	ldr	r2, [pc, #452]	; (8011d34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011b70:	4871      	ldr	r0, [pc, #452]	; (8011d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8011b72:	f44f 719a 	mov.w	r1, #308	; 0x134
 8011b76:	f008 fc1f 	bl	801a3b8 <__assert_func>
 8011b7a:	6810      	ldr	r0, [r2, #0]
 8011b7c:	6851      	ldr	r1, [r2, #4]
 8011b7e:	4f6f      	ldr	r7, [pc, #444]	; (8011d3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011b80:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8011d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8011b84:	ac0e      	add	r4, sp, #56	; 0x38
 8011b86:	c403      	stmia	r4!, {r0, r1}
 8011b88:	6818      	ldr	r0, [r3, #0]
 8011b8a:	6859      	ldr	r1, [r3, #4]
 8011b8c:	ac10      	add	r4, sp, #64	; 0x40
 8011b8e:	c403      	stmia	r4!, {r0, r1}
 8011b90:	a80e      	add	r0, sp, #56	; 0x38
 8011b92:	f7f9 feff 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011b96:	4629      	mov	r1, r5
 8011b98:	a810      	add	r0, sp, #64	; 0x40
 8011b9a:	f7f9 fee3 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011b9e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011ba2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011ba6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011baa:	6838      	ldr	r0, [r7, #0]
 8011bac:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8011bb0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8011bb4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011bb8:	4489      	add	r9, r1
 8011bba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011bbe:	440a      	add	r2, r1
 8011bc0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8011bc4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011bc8:	4413      	add	r3, r2
 8011bca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011bce:	6803      	ldr	r3, [r0, #0]
 8011bd0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011bd2:	4798      	blx	r3
 8011bd4:	f010 0f80 	tst.w	r0, #128	; 0x80
 8011bd8:	6838      	ldr	r0, [r7, #0]
 8011bda:	d01c      	beq.n	8011c16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8011bdc:	210b      	movs	r1, #11
 8011bde:	6802      	ldr	r2, [r0, #0]
 8011be0:	9608      	str	r6, [sp, #32]
 8011be2:	9107      	str	r1, [sp, #28]
 8011be4:	f8bb 1000 	ldrh.w	r1, [fp]
 8011be8:	9106      	str	r1, [sp, #24]
 8011bea:	2101      	movs	r1, #1
 8011bec:	e9cd a104 	strd	sl, r1, [sp, #16]
 8011bf0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011bf4:	9103      	str	r1, [sp, #12]
 8011bf6:	b2a4      	uxth	r4, r4
 8011bf8:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8011bfc:	9100      	str	r1, [sp, #0]
 8011bfe:	b2ad      	uxth	r5, r5
 8011c00:	9502      	str	r5, [sp, #8]
 8011c02:	9401      	str	r4, [sp, #4]
 8011c04:	6b94      	ldr	r4, [r2, #56]	; 0x38
 8011c06:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011c0a:	4642      	mov	r2, r8
 8011c0c:	4649      	mov	r1, r9
 8011c0e:	47a0      	blx	r4
 8011c10:	b013      	add	sp, #76	; 0x4c
 8011c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c16:	6803      	ldr	r3, [r0, #0]
 8011c18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c1a:	4798      	blx	r3
 8011c1c:	f8bb 3000 	ldrh.w	r3, [fp]
 8011c20:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8011c24:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8011c28:	fb03 1202 	mla	r2, r3, r2, r1
 8011c2c:	435d      	muls	r5, r3
 8011c2e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011c32:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8011c36:	920c      	str	r2, [sp, #48]	; 0x30
 8011c38:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8011c3c:	1b12      	subs	r2, r2, r4
 8011c3e:	920d      	str	r2, [sp, #52]	; 0x34
 8011c40:	0062      	lsls	r2, r4, #1
 8011c42:	1b1c      	subs	r4, r3, r4
 8011c44:	0063      	lsls	r3, r4, #1
 8011c46:	920a      	str	r2, [sp, #40]	; 0x28
 8011c48:	930b      	str	r3, [sp, #44]	; 0x2c
 8011c4a:	f04f 0e04 	mov.w	lr, #4
 8011c4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011c50:	4298      	cmp	r0, r3
 8011c52:	d266      	bcs.n	8011d22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 8011c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011c56:	eb00 0b03 	add.w	fp, r0, r3
 8011c5a:	4558      	cmp	r0, fp
 8011c5c:	d25c      	bcs.n	8011d18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8011c5e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8011c62:	fb1e e303 	smlabb	r3, lr, r3, lr
 8011c66:	f858 2003 	ldr.w	r2, [r8, r3]
 8011c6a:	0e11      	lsrs	r1, r2, #24
 8011c6c:	d012      	beq.n	8011c94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8011c6e:	29ff      	cmp	r1, #255	; 0xff
 8011c70:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8011c74:	d110      	bne.n	8011c98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8011c76:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011c7a:	d10d      	bne.n	8011c98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8011c7c:	0953      	lsrs	r3, r2, #5
 8011c7e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8011c82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011c86:	f027 0707 	bic.w	r7, r7, #7
 8011c8a:	431f      	orrs	r7, r3
 8011c8c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011c90:	433a      	orrs	r2, r7
 8011c92:	8002      	strh	r2, [r0, #0]
 8011c94:	3002      	adds	r0, #2
 8011c96:	e7e0      	b.n	8011c5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 8011c98:	fb0a f101 	mul.w	r1, sl, r1
 8011c9c:	8806      	ldrh	r6, [r0, #0]
 8011c9e:	1c4b      	adds	r3, r1, #1
 8011ca0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8011ca4:	1235      	asrs	r5, r6, #8
 8011ca6:	10f4      	asrs	r4, r6, #3
 8011ca8:	121b      	asrs	r3, r3, #8
 8011caa:	00f6      	lsls	r6, r6, #3
 8011cac:	b299      	uxth	r1, r3
 8011cae:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8011cb2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8011cb6:	b2f6      	uxtb	r6, r6
 8011cb8:	43db      	mvns	r3, r3
 8011cba:	b2d2      	uxtb	r2, r2
 8011cbc:	b2db      	uxtb	r3, r3
 8011cbe:	fb1c fc01 	smulbb	ip, ip, r1
 8011cc2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8011cc6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011cca:	fb12 f201 	smulbb	r2, r2, r1
 8011cce:	fb05 c503 	mla	r5, r5, r3, ip
 8011cd2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8011cd6:	b2ff      	uxtb	r7, r7
 8011cd8:	fb06 2203 	mla	r2, r6, r3, r2
 8011cdc:	b2ad      	uxth	r5, r5
 8011cde:	fb17 f701 	smulbb	r7, r7, r1
 8011ce2:	b292      	uxth	r2, r2
 8011ce4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8011ce8:	fb04 7403 	mla	r4, r4, r3, r7
 8011cec:	f105 0c01 	add.w	ip, r5, #1
 8011cf0:	1c57      	adds	r7, r2, #1
 8011cf2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8011cf6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8011cfa:	b2a4      	uxth	r4, r4
 8011cfc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011d00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8011d04:	433d      	orrs	r5, r7
 8011d06:	1c67      	adds	r7, r4, #1
 8011d08:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8011d0c:	0964      	lsrs	r4, r4, #5
 8011d0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8011d12:	4325      	orrs	r5, r4
 8011d14:	8005      	strh	r5, [r0, #0]
 8011d16:	e7bd      	b.n	8011c94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8011d18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011d1a:	4418      	add	r0, r3
 8011d1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011d1e:	4499      	add	r9, r3
 8011d20:	e795      	b.n	8011c4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 8011d22:	4b06      	ldr	r3, [pc, #24]	; (8011d3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011d24:	6818      	ldr	r0, [r3, #0]
 8011d26:	6803      	ldr	r3, [r0, #0]
 8011d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011d2a:	4798      	blx	r3
 8011d2c:	e770      	b.n	8011c10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8011d2e:	bf00      	nop
 8011d30:	0801dc68 	.word	0x0801dc68
 8011d34:	0801e3bf 	.word	0x0801e3bf
 8011d38:	0801dd6a 	.word	0x0801dd6a
 8011d3c:	2000a094 	.word	0x2000a094
 8011d40:	2000a08e 	.word	0x2000a08e

08011d44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8011d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d48:	4614      	mov	r4, r2
 8011d4a:	880a      	ldrh	r2, [r1, #0]
 8011d4c:	b087      	sub	sp, #28
 8011d4e:	2a02      	cmp	r2, #2
 8011d50:	4680      	mov	r8, r0
 8011d52:	460d      	mov	r5, r1
 8011d54:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8011d58:	d006      	beq.n	8011d68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8011d5a:	4b63      	ldr	r3, [pc, #396]	; (8011ee8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8011d5c:	4a63      	ldr	r2, [pc, #396]	; (8011eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8011d5e:	4864      	ldr	r0, [pc, #400]	; (8011ef0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8011d60:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8011d64:	f008 fb28 	bl	801a3b8 <__assert_func>
 8011d68:	2e00      	cmp	r6, #0
 8011d6a:	f000 80b9 	beq.w	8011ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8011d6e:	6820      	ldr	r0, [r4, #0]
 8011d70:	6861      	ldr	r1, [r4, #4]
 8011d72:	af02      	add	r7, sp, #8
 8011d74:	c703      	stmia	r7!, {r0, r1}
 8011d76:	6818      	ldr	r0, [r3, #0]
 8011d78:	6859      	ldr	r1, [r3, #4]
 8011d7a:	af04      	add	r7, sp, #16
 8011d7c:	c703      	stmia	r7!, {r0, r1}
 8011d7e:	a802      	add	r0, sp, #8
 8011d80:	f7f9 fe08 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011d84:	4621      	mov	r1, r4
 8011d86:	a804      	add	r0, sp, #16
 8011d88:	f7f9 fdec 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011d8c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011d90:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011d94:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8011d98:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8011d9c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8011da0:	eb08 0401 	add.w	r4, r8, r1
 8011da4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011da8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8011dac:	440a      	add	r2, r1
 8011dae:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011db2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011db6:	4413      	add	r3, r2
 8011db8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011dbc:	4b4d      	ldr	r3, [pc, #308]	; (8011ef4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8011dbe:	6818      	ldr	r0, [r3, #0]
 8011dc0:	6803      	ldr	r3, [r0, #0]
 8011dc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dc4:	4798      	blx	r3
 8011dc6:	4b4c      	ldr	r3, [pc, #304]	; (8011ef8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8011dc8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8011dcc:	881a      	ldrh	r2, [r3, #0]
 8011dce:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8011dd2:	2eff      	cmp	r6, #255	; 0xff
 8011dd4:	fb02 c101 	mla	r1, r2, r1, ip
 8011dd8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8011ddc:	fb02 f207 	mul.w	r2, r2, r7
 8011de0:	f105 0104 	add.w	r1, r5, #4
 8011de4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8011de8:	461d      	mov	r5, r3
 8011dea:	d05a      	beq.n	8011ea2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8011dec:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8011df0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011df4:	b2b6      	uxth	r6, r6
 8011df6:	fa1f fe8e 	uxth.w	lr, lr
 8011dfa:	9301      	str	r3, [sp, #4]
 8011dfc:	4282      	cmp	r2, r0
 8011dfe:	d96a      	bls.n	8011ed6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8011e00:	eb00 0b0a 	add.w	fp, r0, sl
 8011e04:	4583      	cmp	fp, r0
 8011e06:	d940      	bls.n	8011e8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8011e08:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011e0c:	8805      	ldrh	r5, [r0, #0]
 8011e0e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8011e12:	122f      	asrs	r7, r5, #8
 8011e14:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8011e18:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e1c:	fb17 f70e 	smulbb	r7, r7, lr
 8011e20:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011e24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011e28:	00ed      	lsls	r5, r5, #3
 8011e2a:	fb0c 7c06 	mla	ip, ip, r6, r7
 8011e2e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011e32:	10df      	asrs	r7, r3, #3
 8011e34:	b2ed      	uxtb	r5, r5
 8011e36:	00db      	lsls	r3, r3, #3
 8011e38:	fa1f fc8c 	uxth.w	ip, ip
 8011e3c:	fb19 f90e 	smulbb	r9, r9, lr
 8011e40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011e44:	b2db      	uxtb	r3, r3
 8011e46:	fb15 f50e 	smulbb	r5, r5, lr
 8011e4a:	fb07 9706 	mla	r7, r7, r6, r9
 8011e4e:	fb03 5306 	mla	r3, r3, r6, r5
 8011e52:	f10c 0901 	add.w	r9, ip, #1
 8011e56:	b29b      	uxth	r3, r3
 8011e58:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011e5c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011e60:	f103 0c01 	add.w	ip, r3, #1
 8011e64:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8011e68:	b2bf      	uxth	r7, r7
 8011e6a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011e6e:	ea4c 0c09 	orr.w	ip, ip, r9
 8011e72:	f107 0901 	add.w	r9, r7, #1
 8011e76:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011e7a:	097f      	lsrs	r7, r7, #5
 8011e7c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011e80:	ea4c 0c07 	orr.w	ip, ip, r7
 8011e84:	f820 cb02 	strh.w	ip, [r0], #2
 8011e88:	e7bc      	b.n	8011e04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011e8a:	9b01      	ldr	r3, [sp, #4]
 8011e8c:	881b      	ldrh	r3, [r3, #0]
 8011e8e:	eba3 0308 	sub.w	r3, r3, r8
 8011e92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011e96:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011e9a:	eba3 0308 	sub.w	r3, r3, r8
 8011e9e:	441c      	add	r4, r3
 8011ea0:	e7ac      	b.n	8011dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8011ea2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011ea6:	4282      	cmp	r2, r0
 8011ea8:	d915      	bls.n	8011ed6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8011eaa:	eb00 060a 	add.w	r6, r0, sl
 8011eae:	4286      	cmp	r6, r0
 8011eb0:	d906      	bls.n	8011ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8011eb2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011eb6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8011eba:	f820 3b02 	strh.w	r3, [r0], #2
 8011ebe:	e7f6      	b.n	8011eae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8011ec0:	882b      	ldrh	r3, [r5, #0]
 8011ec2:	eba3 0308 	sub.w	r3, r3, r8
 8011ec6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011eca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011ece:	eba3 0308 	sub.w	r3, r3, r8
 8011ed2:	441c      	add	r4, r3
 8011ed4:	e7e7      	b.n	8011ea6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8011ed6:	4b07      	ldr	r3, [pc, #28]	; (8011ef4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8011ed8:	6818      	ldr	r0, [r3, #0]
 8011eda:	6803      	ldr	r3, [r0, #0]
 8011edc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011ede:	4798      	blx	r3
 8011ee0:	b007      	add	sp, #28
 8011ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ee6:	bf00      	nop
 8011ee8:	0801db98 	.word	0x0801db98
 8011eec:	0801e229 	.word	0x0801e229
 8011ef0:	0801dd6a 	.word	0x0801dd6a
 8011ef4:	2000a094 	.word	0x2000a094
 8011ef8:	2000a08e 	.word	0x2000a08e

08011efc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8011efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f00:	f8b1 9000 	ldrh.w	r9, [r1]
 8011f04:	b091      	sub	sp, #68	; 0x44
 8011f06:	f1b9 0f01 	cmp.w	r9, #1
 8011f0a:	4604      	mov	r4, r0
 8011f0c:	460f      	mov	r7, r1
 8011f0e:	4690      	mov	r8, r2
 8011f10:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8011f14:	d006      	beq.n	8011f24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8011f16:	4b84      	ldr	r3, [pc, #528]	; (8012128 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8011f18:	4a84      	ldr	r2, [pc, #528]	; (801212c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8011f1a:	4885      	ldr	r0, [pc, #532]	; (8012130 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8011f1c:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 8011f20:	f008 fa4a 	bl	801a3b8 <__assert_func>
 8011f24:	2d00      	cmp	r5, #0
 8011f26:	d04f      	beq.n	8011fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8011f28:	6810      	ldr	r0, [r2, #0]
 8011f2a:	6851      	ldr	r1, [r2, #4]
 8011f2c:	f8df b208 	ldr.w	fp, [pc, #520]	; 8012138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8011f30:	ae0c      	add	r6, sp, #48	; 0x30
 8011f32:	c603      	stmia	r6!, {r0, r1}
 8011f34:	6818      	ldr	r0, [r3, #0]
 8011f36:	6859      	ldr	r1, [r3, #4]
 8011f38:	ae0e      	add	r6, sp, #56	; 0x38
 8011f3a:	c603      	stmia	r6!, {r0, r1}
 8011f3c:	a80c      	add	r0, sp, #48	; 0x30
 8011f3e:	f7f9 fd29 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011f42:	4641      	mov	r1, r8
 8011f44:	a80e      	add	r0, sp, #56	; 0x38
 8011f46:	f7f9 fd0d 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011f4a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8011f4e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8011f52:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8011f56:	f8db 0000 	ldr.w	r0, [fp]
 8011f5a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8011f5e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8011f62:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801213c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8011f66:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011f6a:	440c      	add	r4, r1
 8011f6c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8011f70:	440a      	add	r2, r1
 8011f72:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8011f76:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011f7a:	4413      	add	r3, r2
 8011f7c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8011f80:	6803      	ldr	r3, [r0, #0]
 8011f82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011f84:	4798      	blx	r3
 8011f86:	f010 0f80 	tst.w	r0, #128	; 0x80
 8011f8a:	f8db 0000 	ldr.w	r0, [fp]
 8011f8e:	d01e      	beq.n	8011fce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8011f90:	210b      	movs	r1, #11
 8011f92:	f04f 0c00 	mov.w	ip, #0
 8011f96:	6802      	ldr	r2, [r0, #0]
 8011f98:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011f9c:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 8011fa0:	f8b8 1000 	ldrh.w	r1, [r8]
 8011fa4:	9504      	str	r5, [sp, #16]
 8011fa6:	e9cd 9105 	strd	r9, r1, [sp, #20]
 8011faa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8011fae:	9103      	str	r1, [sp, #12]
 8011fb0:	fa1f f18a 	uxth.w	r1, sl
 8011fb4:	9102      	str	r1, [sp, #8]
 8011fb6:	b2b6      	uxth	r6, r6
 8011fb8:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 8011fbc:	9100      	str	r1, [sp, #0]
 8011fbe:	9601      	str	r6, [sp, #4]
 8011fc0:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8011fc2:	4621      	mov	r1, r4
 8011fc4:	463a      	mov	r2, r7
 8011fc6:	47a8      	blx	r5
 8011fc8:	b011      	add	sp, #68	; 0x44
 8011fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011fce:	6803      	ldr	r3, [r0, #0]
 8011fd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011fd2:	4798      	blx	r3
 8011fd4:	f8b8 2000 	ldrh.w	r2, [r8]
 8011fd8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8011fdc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8011fe0:	2dff      	cmp	r5, #255	; 0xff
 8011fe2:	fb02 1303 	mla	r3, r2, r3, r1
 8011fe6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011fea:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8011fee:	fb0a fa02 	mul.w	sl, sl, r2
 8011ff2:	d062      	beq.n	80120ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8011ff4:	ea6f 0c05 	mvn.w	ip, r5
 8011ff8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8011ffc:	930a      	str	r3, [sp, #40]	; 0x28
 8011ffe:	b2ad      	uxth	r5, r5
 8012000:	fa5f fc8c 	uxtb.w	ip, ip
 8012004:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8012008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801200a:	4298      	cmp	r0, r3
 801200c:	f080 8085 	bcs.w	801211a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8012010:	eb00 0b09 	add.w	fp, r0, r9
 8012014:	4558      	cmp	r0, fp
 8012016:	d246      	bcs.n	80120a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8012018:	f814 eb01 	ldrb.w	lr, [r4], #1
 801201c:	2303      	movs	r3, #3
 801201e:	2204      	movs	r2, #4
 8012020:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8012024:	eb07 0a0e 	add.w	sl, r7, lr
 8012028:	8803      	ldrh	r3, [r0, #0]
 801202a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801202e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8012032:	1219      	asrs	r1, r3, #8
 8012034:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012038:	fb18 f805 	smulbb	r8, r8, r5
 801203c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8012040:	10da      	asrs	r2, r3, #3
 8012042:	fb01 810c 	mla	r1, r1, ip, r8
 8012046:	00db      	lsls	r3, r3, #3
 8012048:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801204c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012050:	b2db      	uxtb	r3, r3
 8012052:	fb18 f805 	smulbb	r8, r8, r5
 8012056:	fb1e fe05 	smulbb	lr, lr, r5
 801205a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801205e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8012062:	b289      	uxth	r1, r1
 8012064:	fb02 820c 	mla	r2, r2, ip, r8
 8012068:	fb03 e30c 	mla	r3, r3, ip, lr
 801206c:	b292      	uxth	r2, r2
 801206e:	b29b      	uxth	r3, r3
 8012070:	f101 0801 	add.w	r8, r1, #1
 8012074:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8012078:	f103 0e01 	add.w	lr, r3, #1
 801207c:	f102 0801 	add.w	r8, r2, #1
 8012080:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8012084:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8012088:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801208c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012090:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012094:	ea4e 0101 	orr.w	r1, lr, r1
 8012098:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801209c:	ea41 0108 	orr.w	r1, r1, r8
 80120a0:	f820 1b02 	strh.w	r1, [r0], #2
 80120a4:	e7b6      	b.n	8012014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80120a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80120a8:	881b      	ldrh	r3, [r3, #0]
 80120aa:	1b9b      	subs	r3, r3, r6
 80120ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80120b0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80120b4:	1b9b      	subs	r3, r3, r6
 80120b6:	441c      	add	r4, r3
 80120b8:	e7a6      	b.n	8012008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80120ba:	491e      	ldr	r1, [pc, #120]	; (8012134 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80120bc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80120c0:	2203      	movs	r2, #3
 80120c2:	2504      	movs	r5, #4
 80120c4:	4550      	cmp	r0, sl
 80120c6:	d228      	bcs.n	801211a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80120c8:	eb00 0c09 	add.w	ip, r0, r9
 80120cc:	4560      	cmp	r0, ip
 80120ce:	4623      	mov	r3, r4
 80120d0:	d219      	bcs.n	8012106 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80120d2:	f893 e000 	ldrb.w	lr, [r3]
 80120d6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80120da:	eb07 0b0e 	add.w	fp, r7, lr
 80120de:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80120e2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80120e6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80120ea:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80120ee:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80120f2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80120f6:	ea43 030b 	orr.w	r3, r3, fp
 80120fa:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80120fe:	3401      	adds	r4, #1
 8012100:	f820 3b02 	strh.w	r3, [r0], #2
 8012104:	e7e2      	b.n	80120cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8012106:	f8b8 3000 	ldrh.w	r3, [r8]
 801210a:	1b9b      	subs	r3, r3, r6
 801210c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012110:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012114:	1b9b      	subs	r3, r3, r6
 8012116:	441c      	add	r4, r3
 8012118:	e7d4      	b.n	80120c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801211a:	4b07      	ldr	r3, [pc, #28]	; (8012138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801211c:	6818      	ldr	r0, [r3, #0]
 801211e:	6803      	ldr	r3, [r0, #0]
 8012120:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012122:	4798      	blx	r3
 8012124:	e750      	b.n	8011fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8012126:	bf00      	nop
 8012128:	0801dbe6 	.word	0x0801dbe6
 801212c:	0801e2b2 	.word	0x0801e2b2
 8012130:	0801dd6a 	.word	0x0801dd6a
 8012134:	fffff800 	.word	0xfffff800
 8012138:	2000a094 	.word	0x2000a094
 801213c:	2000a08e 	.word	0x2000a08e

08012140 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8012140:	b430      	push	{r4, r5}
 8012142:	780d      	ldrb	r5, [r1, #0]
 8012144:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8012148:	2d01      	cmp	r5, #1
 801214a:	d00a      	beq.n	8012162 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801214c:	d305      	bcc.n	801215a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801214e:	2d02      	cmp	r5, #2
 8012150:	d10b      	bne.n	801216a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8012152:	9402      	str	r4, [sp, #8]
 8012154:	bc30      	pop	{r4, r5}
 8012156:	f7ff bdf5 	b.w	8011d44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801215a:	9402      	str	r4, [sp, #8]
 801215c:	bc30      	pop	{r4, r5}
 801215e:	f7ff bcfb 	b.w	8011b58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8012162:	9402      	str	r4, [sp, #8]
 8012164:	bc30      	pop	{r4, r5}
 8012166:	f7ff bec9 	b.w	8011efc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801216a:	bc30      	pop	{r4, r5}
 801216c:	4770      	bx	lr
	...

08012170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8012170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012174:	4604      	mov	r4, r0
 8012176:	b087      	sub	sp, #28
 8012178:	6810      	ldr	r0, [r2, #0]
 801217a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801217e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80123b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8012182:	460e      	mov	r6, r1
 8012184:	6851      	ldr	r1, [r2, #4]
 8012186:	ad02      	add	r5, sp, #8
 8012188:	c503      	stmia	r5!, {r0, r1}
 801218a:	6818      	ldr	r0, [r3, #0]
 801218c:	6859      	ldr	r1, [r3, #4]
 801218e:	ad04      	add	r5, sp, #16
 8012190:	4617      	mov	r7, r2
 8012192:	c503      	stmia	r5!, {r0, r1}
 8012194:	a802      	add	r0, sp, #8
 8012196:	f7f9 fbfd 	bl	800b994 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801219a:	4639      	mov	r1, r7
 801219c:	a804      	add	r0, sp, #16
 801219e:	f7f9 fbe1 	bl	800b964 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80121a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80121a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80121aa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80121ae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80121b2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80121b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80121ba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80121be:	440e      	add	r6, r1
 80121c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80121c4:	440a      	add	r2, r1
 80121c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80121ca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80121ce:	4413      	add	r3, r2
 80121d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80121d4:	4b77      	ldr	r3, [pc, #476]	; (80123b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80121d6:	6818      	ldr	r0, [r3, #0]
 80121d8:	6803      	ldr	r3, [r0, #0]
 80121da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80121dc:	4798      	blx	r3
 80121de:	f8b9 b000 	ldrh.w	fp, [r9]
 80121e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80121e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80121ea:	fb0b 2303 	mla	r3, fp, r3, r2
 80121ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80121f2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80121f6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80121fa:	fb05 f50b 	mul.w	r5, r5, fp
 80121fe:	9300      	str	r3, [sp, #0]
 8012200:	d069      	beq.n	80122d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8012202:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8012206:	4558      	cmp	r0, fp
 8012208:	f080 80cc 	bcs.w	80123a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801220c:	9b00      	ldr	r3, [sp, #0]
 801220e:	18c3      	adds	r3, r0, r3
 8012210:	9301      	str	r3, [sp, #4]
 8012212:	4631      	mov	r1, r6
 8012214:	9b01      	ldr	r3, [sp, #4]
 8012216:	4298      	cmp	r0, r3
 8012218:	d24f      	bcs.n	80122ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801221a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801221e:	2a00      	cmp	r2, #0
 8012220:	d048      	beq.n	80122b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8012222:	fb0a f202 	mul.w	r2, sl, r2
 8012226:	1c53      	adds	r3, r2, #1
 8012228:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801222c:	121b      	asrs	r3, r3, #8
 801222e:	d041      	beq.n	80122b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8012230:	8802      	ldrh	r2, [r0, #0]
 8012232:	f8b4 c000 	ldrh.w	ip, [r4]
 8012236:	b29e      	uxth	r6, r3
 8012238:	1215      	asrs	r5, r2, #8
 801223a:	43db      	mvns	r3, r3
 801223c:	b2db      	uxtb	r3, r3
 801223e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012242:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012246:	fb15 f503 	smulbb	r5, r5, r3
 801224a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801224e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012252:	00d2      	lsls	r2, r2, #3
 8012254:	fb07 5706 	mla	r7, r7, r6, r5
 8012258:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801225c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012260:	b2d2      	uxtb	r2, r2
 8012262:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012266:	b2bf      	uxth	r7, r7
 8012268:	fb1e fe03 	smulbb	lr, lr, r3
 801226c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012270:	fa5f fc8c 	uxtb.w	ip, ip
 8012274:	fb12 f203 	smulbb	r2, r2, r3
 8012278:	fb05 e506 	mla	r5, r5, r6, lr
 801227c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8012280:	f107 0e01 	add.w	lr, r7, #1
 8012284:	fa1f fc8c 	uxth.w	ip, ip
 8012288:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801228c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8012290:	f10c 0701 	add.w	r7, ip, #1
 8012294:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8012298:	b2ad      	uxth	r5, r5
 801229a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801229e:	ea47 070e 	orr.w	r7, r7, lr
 80122a2:	f105 0e01 	add.w	lr, r5, #1
 80122a6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80122aa:	096d      	lsrs	r5, r5, #5
 80122ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80122b0:	432f      	orrs	r7, r5
 80122b2:	8007      	strh	r7, [r0, #0]
 80122b4:	3002      	adds	r0, #2
 80122b6:	3402      	adds	r4, #2
 80122b8:	e7ac      	b.n	8012214 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80122ba:	f8b9 3000 	ldrh.w	r3, [r9]
 80122be:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80122c2:	eba3 0308 	sub.w	r3, r3, r8
 80122c6:	eba6 0608 	sub.w	r6, r6, r8
 80122ca:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80122ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80122d2:	440e      	add	r6, r1
 80122d4:	e797      	b.n	8012206 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80122d6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80122da:	42a8      	cmp	r0, r5
 80122dc:	d262      	bcs.n	80123a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80122de:	9b00      	ldr	r3, [sp, #0]
 80122e0:	4631      	mov	r1, r6
 80122e2:	eb00 0b03 	add.w	fp, r0, r3
 80122e6:	4558      	cmp	r0, fp
 80122e8:	d24e      	bcs.n	8012388 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80122ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80122ee:	b12b      	cbz	r3, 80122fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80122f0:	2bff      	cmp	r3, #255	; 0xff
 80122f2:	f8b4 e000 	ldrh.w	lr, [r4]
 80122f6:	d104      	bne.n	8012302 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80122f8:	f8a0 e000 	strh.w	lr, [r0]
 80122fc:	3002      	adds	r0, #2
 80122fe:	3402      	adds	r4, #2
 8012300:	e7f1      	b.n	80122e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8012302:	8802      	ldrh	r2, [r0, #0]
 8012304:	b29f      	uxth	r7, r3
 8012306:	1216      	asrs	r6, r2, #8
 8012308:	43db      	mvns	r3, r3
 801230a:	b2db      	uxtb	r3, r3
 801230c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012310:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012314:	fb16 f603 	smulbb	r6, r6, r3
 8012318:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801231c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012320:	00d2      	lsls	r2, r2, #3
 8012322:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012326:	b2d2      	uxtb	r2, r2
 8012328:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801232c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012330:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012334:	fb1a fa03 	smulbb	sl, sl, r3
 8012338:	fa1f fc8c 	uxth.w	ip, ip
 801233c:	fb12 f303 	smulbb	r3, r2, r3
 8012340:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012344:	fa5f fe8e 	uxtb.w	lr, lr
 8012348:	fb06 a607 	mla	r6, r6, r7, sl
 801234c:	f10c 0201 	add.w	r2, ip, #1
 8012350:	fb0e 3307 	mla	r3, lr, r7, r3
 8012354:	b2b6      	uxth	r6, r6
 8012356:	b29b      	uxth	r3, r3
 8012358:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801235c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8012360:	f106 0a01 	add.w	sl, r6, #1
 8012364:	f103 0c01 	add.w	ip, r3, #1
 8012368:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801236c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8012370:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012374:	0976      	lsrs	r6, r6, #5
 8012376:	ea4c 0c02 	orr.w	ip, ip, r2
 801237a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801237e:	ea4c 0c06 	orr.w	ip, ip, r6
 8012382:	f8a0 c000 	strh.w	ip, [r0]
 8012386:	e7b9      	b.n	80122fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8012388:	f8b9 3000 	ldrh.w	r3, [r9]
 801238c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8012390:	eba3 0308 	sub.w	r3, r3, r8
 8012394:	eba6 0608 	sub.w	r6, r6, r8
 8012398:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801239c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80123a0:	440e      	add	r6, r1
 80123a2:	e79a      	b.n	80122da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80123a4:	4b03      	ldr	r3, [pc, #12]	; (80123b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80123a6:	6818      	ldr	r0, [r3, #0]
 80123a8:	6803      	ldr	r3, [r0, #0]
 80123aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80123ac:	4798      	blx	r3
 80123ae:	b007      	add	sp, #28
 80123b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123b4:	2000a094 	.word	0x2000a094
 80123b8:	2000a08e 	.word	0x2000a08e

080123bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80123bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123c0:	b089      	sub	sp, #36	; 0x24
 80123c2:	4682      	mov	sl, r0
 80123c4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80123c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80123ca:	4689      	mov	r9, r1
 80123cc:	4690      	mov	r8, r2
 80123ce:	461f      	mov	r7, r3
 80123d0:	b355      	cbz	r5, 8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80123d2:	4608      	mov	r0, r1
 80123d4:	f7fc f922 	bl	800e61c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123d8:	4606      	mov	r6, r0
 80123da:	4648      	mov	r0, r9
 80123dc:	f7fc f958 	bl	800e690 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123e0:	f8ad 000e 	strh.w	r0, [sp, #14]
 80123e4:	4648      	mov	r0, r9
 80123e6:	f8ad 8008 	strh.w	r8, [sp, #8]
 80123ea:	f8ad 600c 	strh.w	r6, [sp, #12]
 80123ee:	f8ad 700a 	strh.w	r7, [sp, #10]
 80123f2:	f7fc fa1b 	bl	800e82c <_ZNK8touchgfx6Bitmap7getDataEv>
 80123f6:	4606      	mov	r6, r0
 80123f8:	4648      	mov	r0, r9
 80123fa:	f7fc fa49 	bl	800e890 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80123fe:	4680      	mov	r8, r0
 8012400:	4648      	mov	r0, r9
 8012402:	f7fc fa9d 	bl	800e940 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012406:	280b      	cmp	r0, #11
 8012408:	f200 80ca 	bhi.w	80125a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 801240c:	e8df f000 	tbb	[pc, r0]
 8012410:	c8060f1e 	.word	0xc8060f1e
 8012414:	c8c8c8c8 	.word	0xc8c8c8c8
 8012418:	16c8c8c8 	.word	0x16c8c8c8
 801241c:	462b      	mov	r3, r5
 801241e:	4622      	mov	r2, r4
 8012420:	a902      	add	r1, sp, #8
 8012422:	4630      	mov	r0, r6
 8012424:	f7ff f98e 	bl	8011744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012428:	b009      	add	sp, #36	; 0x24
 801242a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801242e:	462b      	mov	r3, r5
 8012430:	4622      	mov	r2, r4
 8012432:	a902      	add	r1, sp, #8
 8012434:	4630      	mov	r0, r6
 8012436:	f7ff fa9b 	bl	8011970 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801243a:	e7f5      	b.n	8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801243c:	9500      	str	r5, [sp, #0]
 801243e:	4623      	mov	r3, r4
 8012440:	aa02      	add	r2, sp, #8
 8012442:	4641      	mov	r1, r8
 8012444:	4630      	mov	r0, r6
 8012446:	f7ff fe7b 	bl	8012140 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801244a:	e7ed      	b.n	8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801244c:	4648      	mov	r0, r9
 801244e:	f7fc f9b3 	bl	800e7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012452:	b950      	cbnz	r0, 801246a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8012454:	e9cd 5000 	strd	r5, r0, [sp]
 8012458:	f8da 3000 	ldr.w	r3, [sl]
 801245c:	aa02      	add	r2, sp, #8
 801245e:	68dd      	ldr	r5, [r3, #12]
 8012460:	4631      	mov	r1, r6
 8012462:	4623      	mov	r3, r4
 8012464:	4650      	mov	r0, sl
 8012466:	47a8      	blx	r5
 8012468:	e7de      	b.n	8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801246a:	af06      	add	r7, sp, #24
 801246c:	4649      	mov	r1, r9
 801246e:	4638      	mov	r0, r7
 8012470:	f7fc f948 	bl	800e704 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012474:	e897 0003 	ldmia.w	r7, {r0, r1}
 8012478:	f10d 0910 	add.w	r9, sp, #16
 801247c:	e889 0003 	stmia.w	r9, {r0, r1}
 8012480:	4648      	mov	r0, r9
 8012482:	4621      	mov	r1, r4
 8012484:	f7f6 fca4 	bl	8008dd0 <_ZN8touchgfx4RectaNERKS0_>
 8012488:	4648      	mov	r0, r9
 801248a:	f7f6 fce4 	bl	8008e56 <_ZNK8touchgfx4Rect7isEmptyEv>
 801248e:	b138      	cbz	r0, 80124a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 8012490:	9500      	str	r5, [sp, #0]
 8012492:	4623      	mov	r3, r4
 8012494:	aa02      	add	r2, sp, #8
 8012496:	4641      	mov	r1, r8
 8012498:	4630      	mov	r0, r6
 801249a:	f7ff fe69 	bl	8012170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801249e:	e7c3      	b.n	8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80124a0:	e9cd 5000 	strd	r5, r0, [sp]
 80124a4:	f8da 3000 	ldr.w	r3, [sl]
 80124a8:	aa02      	add	r2, sp, #8
 80124aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80124ae:	4631      	mov	r1, r6
 80124b0:	464b      	mov	r3, r9
 80124b2:	4650      	mov	r0, sl
 80124b4:	47d8      	blx	fp
 80124b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80124ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80124be:	4293      	cmp	r3, r2
 80124c0:	dd13      	ble.n	80124ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 80124c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80124c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80124ca:	f8ad 0018 	strh.w	r0, [sp, #24]
 80124ce:	1a9b      	subs	r3, r3, r2
 80124d0:	f8ad 201a 	strh.w	r2, [sp, #26]
 80124d4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80124d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80124dc:	9500      	str	r5, [sp, #0]
 80124de:	463b      	mov	r3, r7
 80124e0:	aa02      	add	r2, sp, #8
 80124e2:	4641      	mov	r1, r8
 80124e4:	4630      	mov	r0, r6
 80124e6:	f7ff fe43 	bl	8012170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80124ea:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80124ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 80124f2:	4293      	cmp	r3, r2
 80124f4:	dd13      	ble.n	801251e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 80124f6:	1a9b      	subs	r3, r3, r2
 80124f8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80124fc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012500:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012504:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012508:	f8ad 301c 	strh.w	r3, [sp, #28]
 801250c:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012510:	9500      	str	r5, [sp, #0]
 8012512:	463b      	mov	r3, r7
 8012514:	aa02      	add	r2, sp, #8
 8012516:	4641      	mov	r1, r8
 8012518:	4630      	mov	r0, r6
 801251a:	f7ff fe29 	bl	8012170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801251e:	88a2      	ldrh	r2, [r4, #4]
 8012520:	8823      	ldrh	r3, [r4, #0]
 8012522:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012526:	4413      	add	r3, r2
 8012528:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801252c:	440a      	add	r2, r1
 801252e:	b29b      	uxth	r3, r3
 8012530:	b292      	uxth	r2, r2
 8012532:	b211      	sxth	r1, r2
 8012534:	b218      	sxth	r0, r3
 8012536:	4288      	cmp	r0, r1
 8012538:	dd13      	ble.n	8012562 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 801253a:	1a9b      	subs	r3, r3, r2
 801253c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012540:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 8012544:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012548:	f8ad 301c 	strh.w	r3, [sp, #28]
 801254c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012550:	9500      	str	r5, [sp, #0]
 8012552:	463b      	mov	r3, r7
 8012554:	aa02      	add	r2, sp, #8
 8012556:	4641      	mov	r1, r8
 8012558:	4630      	mov	r0, r6
 801255a:	f8ad c01a 	strh.w	ip, [sp, #26]
 801255e:	f7ff fe07 	bl	8012170 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012562:	88e2      	ldrh	r2, [r4, #6]
 8012564:	8863      	ldrh	r3, [r4, #2]
 8012566:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801256a:	4413      	add	r3, r2
 801256c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012570:	440a      	add	r2, r1
 8012572:	b29b      	uxth	r3, r3
 8012574:	b292      	uxth	r2, r2
 8012576:	b211      	sxth	r1, r2
 8012578:	b218      	sxth	r0, r3
 801257a:	4288      	cmp	r0, r1
 801257c:	f77f af54 	ble.w	8012428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8012580:	f9b4 c000 	ldrsh.w	ip, [r4]
 8012584:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012588:	f8ad c018 	strh.w	ip, [sp, #24]
 801258c:	1a9b      	subs	r3, r3, r2
 801258e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012592:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012596:	f8ad 001c 	strh.w	r0, [sp, #28]
 801259a:	9500      	str	r5, [sp, #0]
 801259c:	463b      	mov	r3, r7
 801259e:	e779      	b.n	8012494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 80125a0:	4b02      	ldr	r3, [pc, #8]	; (80125ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 80125a2:	4a03      	ldr	r2, [pc, #12]	; (80125b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 80125a4:	4803      	ldr	r0, [pc, #12]	; (80125b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80125a6:	2181      	movs	r1, #129	; 0x81
 80125a8:	f007 ff06 	bl	801a3b8 <__assert_func>
 80125ac:	0801dc34 	.word	0x0801dc34
 80125b0:	0801e33b 	.word	0x0801e33b
 80125b4:	0801dd6a 	.word	0x0801dd6a

080125b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80125b8:	b508      	push	{r3, lr}
 80125ba:	b180      	cbz	r0, 80125de <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 80125bc:	2902      	cmp	r1, #2
 80125be:	d014      	beq.n	80125ea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 80125c0:	2903      	cmp	r1, #3
 80125c2:	d01d      	beq.n	8012600 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80125c4:	2901      	cmp	r1, #1
 80125c6:	d101      	bne.n	80125cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80125c8:	2001      	movs	r0, #1
 80125ca:	bd08      	pop	{r3, pc}
 80125cc:	4b0e      	ldr	r3, [pc, #56]	; (8012608 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80125ce:	8818      	ldrh	r0, [r3, #0]
 80125d0:	b990      	cbnz	r0, 80125f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80125d2:	4b0e      	ldr	r3, [pc, #56]	; (801260c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 80125d4:	4a0e      	ldr	r2, [pc, #56]	; (8012610 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 80125d6:	480f      	ldr	r0, [pc, #60]	; (8012614 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 80125d8:	2150      	movs	r1, #80	; 0x50
 80125da:	f007 feed 	bl	801a3b8 <__assert_func>
 80125de:	2902      	cmp	r1, #2
 80125e0:	d00e      	beq.n	8012600 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80125e2:	2903      	cmp	r1, #3
 80125e4:	d0f2      	beq.n	80125cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80125e6:	2901      	cmp	r1, #1
 80125e8:	d1ee      	bne.n	80125c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80125ea:	4b07      	ldr	r3, [pc, #28]	; (8012608 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80125ec:	8818      	ldrh	r0, [r3, #0]
 80125ee:	2800      	cmp	r0, #0
 80125f0:	d0ef      	beq.n	80125d2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80125f2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80125f6:	e7e8      	b.n	80125ca <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80125f8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80125fc:	4240      	negs	r0, r0
 80125fe:	e7e4      	b.n	80125ca <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012600:	f04f 30ff 	mov.w	r0, #4294967295
 8012604:	e7e1      	b.n	80125ca <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012606:	bf00      	nop
 8012608:	2000a08e 	.word	0x2000a08e
 801260c:	0801dec0 	.word	0x0801dec0
 8012610:	0801e4b8 	.word	0x0801e4b8
 8012614:	0801df02 	.word	0x0801df02

08012618 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012618:	b508      	push	{r3, lr}
 801261a:	b180      	cbz	r0, 801263e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801261c:	2902      	cmp	r1, #2
 801261e:	d014      	beq.n	801264a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012620:	2903      	cmp	r1, #3
 8012622:	d018      	beq.n	8012656 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012624:	2901      	cmp	r1, #1
 8012626:	d001      	beq.n	801262c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012628:	2001      	movs	r0, #1
 801262a:	e013      	b.n	8012654 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801262c:	4b0e      	ldr	r3, [pc, #56]	; (8012668 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801262e:	8818      	ldrh	r0, [r3, #0]
 8012630:	b970      	cbnz	r0, 8012650 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012632:	4b0e      	ldr	r3, [pc, #56]	; (801266c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012634:	4a0e      	ldr	r2, [pc, #56]	; (8012670 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012636:	480f      	ldr	r0, [pc, #60]	; (8012674 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012638:	2150      	movs	r1, #80	; 0x50
 801263a:	f007 febd 	bl	801a3b8 <__assert_func>
 801263e:	2902      	cmp	r1, #2
 8012640:	d009      	beq.n	8012656 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012642:	2903      	cmp	r1, #3
 8012644:	d0f0      	beq.n	8012628 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012646:	2901      	cmp	r1, #1
 8012648:	d1f0      	bne.n	801262c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801264a:	f04f 30ff 	mov.w	r0, #4294967295
 801264e:	e001      	b.n	8012654 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012650:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012654:	bd08      	pop	{r3, pc}
 8012656:	4b04      	ldr	r3, [pc, #16]	; (8012668 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012658:	8818      	ldrh	r0, [r3, #0]
 801265a:	2800      	cmp	r0, #0
 801265c:	d0e9      	beq.n	8012632 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801265e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012662:	4240      	negs	r0, r0
 8012664:	e7f6      	b.n	8012654 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012666:	bf00      	nop
 8012668:	2000a08e 	.word	0x2000a08e
 801266c:	0801dec0 	.word	0x0801dec0
 8012670:	0801e4b8 	.word	0x0801e4b8
 8012674:	0801df02 	.word	0x0801df02

08012678 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801267c:	b097      	sub	sp, #92	; 0x5c
 801267e:	9109      	str	r1, [sp, #36]	; 0x24
 8012680:	a912      	add	r1, sp, #72	; 0x48
 8012682:	e881 000c 	stmia.w	r1, {r2, r3}
 8012686:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801268a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801268e:	9308      	str	r3, [sp, #32]
 8012690:	f891 900d 	ldrb.w	r9, [r1, #13]
 8012694:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012698:	930f      	str	r3, [sp, #60]	; 0x3c
 801269a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801269e:	930a      	str	r3, [sp, #40]	; 0x28
 80126a0:	7988      	ldrb	r0, [r1, #6]
 80126a2:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 80126a6:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 80126aa:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 80126ae:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80126b2:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 80126b6:	ea4f 1349 	mov.w	r3, r9, lsl #5
 80126ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80126be:	4303      	orrs	r3, r0
 80126c0:	9307      	str	r3, [sp, #28]
 80126c2:	f000 81b3 	beq.w	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80126c6:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80126ca:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80126ce:	f891 9007 	ldrb.w	r9, [r1, #7]
 80126d2:	ea59 0903 	orrs.w	r9, r9, r3
 80126d6:	f000 81a9 	beq.w	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80126da:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80126de:	b29b      	uxth	r3, r3
 80126e0:	2e00      	cmp	r6, #0
 80126e2:	f000 8137 	beq.w	8012954 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80126e6:	1af6      	subs	r6, r6, r3
 80126e8:	b2b6      	uxth	r6, r6
 80126ea:	0434      	lsls	r4, r6, #16
 80126ec:	d502      	bpl.n	80126f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80126ee:	1bad      	subs	r5, r5, r6
 80126f0:	b22d      	sxth	r5, r5
 80126f2:	2600      	movs	r6, #0
 80126f4:	f9b2 1000 	ldrsh.w	r1, [r2]
 80126f8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80126fc:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8012700:	428d      	cmp	r5, r1
 8012702:	b28b      	uxth	r3, r1
 8012704:	bfbf      	itttt	lt
 8012706:	18f6      	addlt	r6, r6, r3
 8012708:	1b75      	sublt	r5, r6, r5
 801270a:	b2ae      	uxthlt	r6, r5
 801270c:	460d      	movlt	r5, r1
 801270e:	8891      	ldrh	r1, [r2, #4]
 8012710:	440b      	add	r3, r1
 8012712:	b21b      	sxth	r3, r3
 8012714:	930e      	str	r3, [sp, #56]	; 0x38
 8012716:	88d3      	ldrh	r3, [r2, #6]
 8012718:	8852      	ldrh	r2, [r2, #2]
 801271a:	4413      	add	r3, r2
 801271c:	b21b      	sxth	r3, r3
 801271e:	930d      	str	r3, [sp, #52]	; 0x34
 8012720:	4b8e      	ldr	r3, [pc, #568]	; (801295c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 8012722:	9a08      	ldr	r2, [sp, #32]
 8012724:	f893 b000 	ldrb.w	fp, [r3]
 8012728:	f10b 30ff 	add.w	r0, fp, #4294967295
 801272c:	4243      	negs	r3, r0
 801272e:	4143      	adcs	r3, r0
 8012730:	930c      	str	r3, [sp, #48]	; 0x30
 8012732:	4629      	mov	r1, r5
 8012734:	4653      	mov	r3, sl
 8012736:	a812      	add	r0, sp, #72	; 0x48
 8012738:	f7f8 ff84 	bl	800b644 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801273c:	4629      	mov	r1, r5
 801273e:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8012742:	4653      	mov	r3, sl
 8012744:	9a08      	ldr	r2, [sp, #32]
 8012746:	a812      	add	r0, sp, #72	; 0x48
 8012748:	f7f8 ff94 	bl	800b674 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801274c:	a916      	add	r1, sp, #88	; 0x58
 801274e:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012752:	a815      	add	r0, sp, #84	; 0x54
 8012754:	f7f9 f8f0 	bl	800b938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012758:	f1ba 0f00 	cmp.w	sl, #0
 801275c:	f040 8106 	bne.w	801296c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 8012760:	f1bb 0f01 	cmp.w	fp, #1
 8012764:	f040 810a 	bne.w	801297c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8012768:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801276a:	b153      	cbz	r3, 8012782 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 801276c:	9a07      	ldr	r2, [sp, #28]
 801276e:	2408      	movs	r4, #8
 8012770:	fb94 f3f8 	sdiv	r3, r4, r8
 8012774:	1e5c      	subs	r4, r3, #1
 8012776:	4414      	add	r4, r2
 8012778:	fb94 f4f3 	sdiv	r4, r4, r3
 801277c:	fb14 f403 	smulbb	r4, r4, r3
 8012780:	b2a4      	uxth	r4, r4
 8012782:	b906      	cbnz	r6, 8012786 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8012784:	b16f      	cbz	r7, 80127a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8012786:	fb07 6304 	mla	r3, r7, r4, r6
 801278a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801278c:	fb08 f303 	mul.w	r3, r8, r3
 8012790:	463a      	mov	r2, r7
 8012792:	f003 0707 	and.w	r7, r3, #7
 8012796:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801279a:	9326      	str	r3, [sp, #152]	; 0x98
 801279c:	eba9 0302 	sub.w	r3, r9, r2
 80127a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80127a2:	4651      	mov	r1, sl
 80127a4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80127a6:	f7ff ff07 	bl	80125b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80127aa:	4651      	mov	r1, sl
 80127ac:	4681      	mov	r9, r0
 80127ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80127b0:	f7ff ff32 	bl	8012618 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80127b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80127b6:	9a08      	ldr	r2, [sp, #32]
 80127b8:	eba3 0a02 	sub.w	sl, r3, r2
 80127bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127be:	459a      	cmp	sl, r3
 80127c0:	bfa8      	it	ge
 80127c2:	469a      	movge	sl, r3
 80127c4:	f1ba 0f00 	cmp.w	sl, #0
 80127c8:	4683      	mov	fp, r0
 80127ca:	f340 812f 	ble.w	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80127ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80127d0:	1bad      	subs	r5, r5, r6
 80127d2:	1b5d      	subs	r5, r3, r5
 80127d4:	9b07      	ldr	r3, [sp, #28]
 80127d6:	429d      	cmp	r5, r3
 80127d8:	bfd4      	ite	le
 80127da:	ebc6 0605 	rsble	r6, r6, r5
 80127de:	ebc6 0603 	rsbgt	r6, r6, r3
 80127e2:	2e00      	cmp	r6, #0
 80127e4:	f340 8122 	ble.w	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80127e8:	1ba4      	subs	r4, r4, r6
 80127ea:	fb08 f304 	mul.w	r3, r8, r4
 80127ee:	930d      	str	r3, [sp, #52]	; 0x34
 80127f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80127f2:	2b00      	cmp	r3, #0
 80127f4:	f040 811f 	bne.w	8012a36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 80127f8:	4b59      	ldr	r3, [pc, #356]	; (8012960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 80127fa:	6818      	ldr	r0, [r3, #0]
 80127fc:	6803      	ldr	r3, [r0, #0]
 80127fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012800:	4798      	blx	r3
 8012802:	2301      	movs	r3, #1
 8012804:	fa03 f308 	lsl.w	r3, r3, r8
 8012808:	4a56      	ldr	r2, [pc, #344]	; (8012964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 801280a:	3b01      	subs	r3, #1
 801280c:	b2db      	uxtb	r3, r3
 801280e:	8811      	ldrh	r1, [r2, #0]
 8012810:	930c      	str	r3, [sp, #48]	; 0x30
 8012812:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8012816:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801281a:	fb01 2303 	mla	r3, r1, r3, r2
 801281e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012822:	9308      	str	r3, [sp, #32]
 8012824:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012826:	0c1a      	lsrs	r2, r3, #16
 8012828:	b2d3      	uxtb	r3, r2
 801282a:	9311      	str	r3, [sp, #68]	; 0x44
 801282c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801282e:	0a1b      	lsrs	r3, r3, #8
 8012830:	b2d9      	uxtb	r1, r3
 8012832:	9110      	str	r1, [sp, #64]	; 0x40
 8012834:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012836:	b2c9      	uxtb	r1, r1
 8012838:	910e      	str	r1, [sp, #56]	; 0x38
 801283a:	494b      	ldr	r1, [pc, #300]	; (8012968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 801283c:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 8012840:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012842:	00db      	lsls	r3, r3, #3
 8012844:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012848:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801284c:	431a      	orrs	r2, r3
 801284e:	b293      	uxth	r3, r2
 8012850:	930f      	str	r3, [sp, #60]	; 0x3c
 8012852:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012854:	781a      	ldrb	r2, [r3, #0]
 8012856:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801285a:	413a      	asrs	r2, r7
 801285c:	fb06 b919 	mls	r9, r6, r9, fp
 8012860:	fb03 fb06 	mul.w	fp, r3, r6
 8012864:	b2d2      	uxtb	r2, r2
 8012866:	930b      	str	r3, [sp, #44]	; 0x2c
 8012868:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801286c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8012870:	f0c0 80f6 	bcc.w	8012a60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8012874:	f8dd c020 	ldr.w	ip, [sp, #32]
 8012878:	46b6      	mov	lr, r6
 801287a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801287e:	f0c0 80de 	bcc.w	8012a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8012882:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012884:	4013      	ands	r3, r2
 8012886:	d055      	beq.n	8012934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 8012888:	20ff      	movs	r0, #255	; 0xff
 801288a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801288c:	fb90 f1f1 	sdiv	r1, r0, r1
 8012890:	434b      	muls	r3, r1
 8012892:	2bfe      	cmp	r3, #254	; 0xfe
 8012894:	dd03      	ble.n	801289e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8012896:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012898:	4281      	cmp	r1, r0
 801289a:	f000 80ce 	beq.w	8012a3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 801289e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80128a0:	f8bc 4000 	ldrh.w	r4, [ip]
 80128a4:	fb11 f303 	smulbb	r3, r1, r3
 80128a8:	b29b      	uxth	r3, r3
 80128aa:	1c59      	adds	r1, r3, #1
 80128ac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80128b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80128b4:	b29d      	uxth	r5, r3
 80128b6:	43db      	mvns	r3, r3
 80128b8:	b2db      	uxtb	r3, r3
 80128ba:	9307      	str	r3, [sp, #28]
 80128bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80128be:	1220      	asrs	r0, r4, #8
 80128c0:	fb13 f905 	smulbb	r9, r3, r5
 80128c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80128c8:	9b07      	ldr	r3, [sp, #28]
 80128ca:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80128ce:	fb00 9003 	mla	r0, r0, r3, r9
 80128d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80128d4:	10e1      	asrs	r1, r4, #3
 80128d6:	fb13 f905 	smulbb	r9, r3, r5
 80128da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80128de:	9b07      	ldr	r3, [sp, #28]
 80128e0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80128e4:	fb01 9103 	mla	r1, r1, r3, r9
 80128e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128ea:	00e4      	lsls	r4, r4, #3
 80128ec:	fb13 f505 	smulbb	r5, r3, r5
 80128f0:	b2e4      	uxtb	r4, r4
 80128f2:	9b07      	ldr	r3, [sp, #28]
 80128f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80128f8:	fb04 5403 	mla	r4, r4, r3, r5
 80128fc:	b280      	uxth	r0, r0
 80128fe:	b2a4      	uxth	r4, r4
 8012900:	1c43      	adds	r3, r0, #1
 8012902:	f104 0901 	add.w	r9, r4, #1
 8012906:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801290a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801290e:	b289      	uxth	r1, r1
 8012910:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8012914:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012918:	ea49 0000 	orr.w	r0, r9, r0
 801291c:	f101 0901 	add.w	r9, r1, #1
 8012920:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8012924:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012928:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801292c:	ea40 0009 	orr.w	r0, r0, r9
 8012930:	f8ac 0000 	strh.w	r0, [ip]
 8012934:	4447      	add	r7, r8
 8012936:	b2bf      	uxth	r7, r7
 8012938:	2f07      	cmp	r7, #7
 801293a:	bf81      	itttt	hi
 801293c:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 801293e:	785a      	ldrbhi	r2, [r3, #1]
 8012940:	3301      	addhi	r3, #1
 8012942:	9326      	strhi	r3, [sp, #152]	; 0x98
 8012944:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012946:	bf9a      	itte	ls
 8012948:	fa42 f208 	asrls.w	r2, r2, r8
 801294c:	b2d2      	uxtbls	r2, r2
 801294e:	2700      	movhi	r7, #0
 8012950:	449c      	add	ip, r3
 8012952:	e792      	b.n	801287a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8012954:	441d      	add	r5, r3
 8012956:	b22d      	sxth	r5, r5
 8012958:	e6cc      	b.n	80126f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801295a:	bf00      	nop
 801295c:	2000a08c 	.word	0x2000a08c
 8012960:	2000a094 	.word	0x2000a094
 8012964:	2000a08e 	.word	0x2000a08e
 8012968:	fffff800 	.word	0xfffff800
 801296c:	f1ba 0f01 	cmp.w	sl, #1
 8012970:	f47f aefa 	bne.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012974:	f1bb 0f01 	cmp.w	fp, #1
 8012978:	f47f aef6 	bne.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801297c:	f8df b104 	ldr.w	fp, [pc, #260]	; 8012a84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8012980:	f8db 0000 	ldr.w	r0, [fp]
 8012984:	6803      	ldr	r3, [r0, #0]
 8012986:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012988:	4798      	blx	r3
 801298a:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801298e:	465a      	mov	r2, fp
 8012990:	d006      	beq.n	80129a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8012992:	f1b8 0f04 	cmp.w	r8, #4
 8012996:	d14c      	bne.n	8012a32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8012998:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801299a:	3300      	adds	r3, #0
 801299c:	bf18      	it	ne
 801299e:	2301      	movne	r3, #1
 80129a0:	0581      	lsls	r1, r0, #22
 80129a2:	d566      	bpl.n	8012a72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 80129a4:	f1b8 0f08 	cmp.w	r8, #8
 80129a8:	d163      	bne.n	8012a72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 80129aa:	2b00      	cmp	r3, #0
 80129ac:	bf0c      	ite	eq
 80129ae:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 80129b2:	f44f 7c80 	movne.w	ip, #256	; 0x100
 80129b6:	2e00      	cmp	r6, #0
 80129b8:	f47f aed6 	bne.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129bc:	2f00      	cmp	r7, #0
 80129be:	f47f aed3 	bne.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129c2:	9b07      	ldr	r3, [sp, #28]
 80129c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80129c6:	18eb      	adds	r3, r5, r3
 80129c8:	428b      	cmp	r3, r1
 80129ca:	f73f aecd 	bgt.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129ce:	9b08      	ldr	r3, [sp, #32]
 80129d0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80129d2:	444b      	add	r3, r9
 80129d4:	428b      	cmp	r3, r1
 80129d6:	f73f aec7 	bgt.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129da:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80129dc:	4e28      	ldr	r6, [pc, #160]	; (8012a80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 80129de:	6810      	ldr	r0, [r2, #0]
 80129e0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80129e4:	6803      	ldr	r3, [r0, #0]
 80129e6:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 80129ea:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80129ee:	4331      	orrs	r1, r6
 80129f0:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 80129f2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80129f4:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80129f8:	f8cd c014 	str.w	ip, [sp, #20]
 80129fc:	f1b8 0f08 	cmp.w	r8, #8
 8012a00:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8012a04:	bf18      	it	ne
 8012a06:	3401      	addne	r4, #1
 8012a08:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a0c:	bf18      	it	ne
 8012a0e:	f024 0401 	bicne.w	r4, r4, #1
 8012a12:	ea41 0106 	orr.w	r1, r1, r6
 8012a16:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012a18:	bf18      	it	ne
 8012a1a:	b2a4      	uxthne	r4, r4
 8012a1c:	b289      	uxth	r1, r1
 8012a1e:	e9cd 1603 	strd	r1, r6, [sp, #12]
 8012a22:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8012a26:	9400      	str	r4, [sp, #0]
 8012a28:	9926      	ldr	r1, [sp, #152]	; 0x98
 8012a2a:	47a8      	blx	r5
 8012a2c:	b017      	add	sp, #92	; 0x5c
 8012a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a32:	2300      	movs	r3, #0
 8012a34:	e7b4      	b.n	80129a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8012a36:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012a38:	e6e3      	b.n	8012802 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 8012a3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012a3c:	e778      	b.n	8012930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 8012a3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a40:	b153      	cbz	r3, 8012a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 8012a42:	441f      	add	r7, r3
 8012a44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012a46:	b2bf      	uxth	r7, r7
 8012a48:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8012a4c:	f007 0707 	and.w	r7, r7, #7
 8012a50:	781a      	ldrb	r2, [r3, #0]
 8012a52:	9326      	str	r3, [sp, #152]	; 0x98
 8012a54:	413a      	asrs	r2, r7
 8012a56:	b2d2      	uxtb	r2, r2
 8012a58:	9b08      	ldr	r3, [sp, #32]
 8012a5a:	445b      	add	r3, fp
 8012a5c:	9308      	str	r3, [sp, #32]
 8012a5e:	e705      	b.n	801286c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8012a60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a62:	2b00      	cmp	r3, #0
 8012a64:	d1e2      	bne.n	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8012a66:	4b07      	ldr	r3, [pc, #28]	; (8012a84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 8012a68:	6818      	ldr	r0, [r3, #0]
 8012a6a:	6803      	ldr	r3, [r0, #0]
 8012a6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012a6e:	4798      	blx	r3
 8012a70:	e7dc      	b.n	8012a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8012a72:	2b00      	cmp	r3, #0
 8012a74:	f43f ae78 	beq.w	8012768 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012a78:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8012a7c:	e79b      	b.n	80129b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8012a7e:	bf00      	nop
 8012a80:	fffff800 	.word	0xfffff800
 8012a84:	2000a094 	.word	0x2000a094

08012a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8012a88:	b538      	push	{r3, r4, r5, lr}
 8012a8a:	4c15      	ldr	r4, [pc, #84]	; (8012ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8012a8c:	7823      	ldrb	r3, [r4, #0]
 8012a8e:	f3bf 8f5b 	dmb	ish
 8012a92:	07da      	lsls	r2, r3, #31
 8012a94:	4605      	mov	r5, r0
 8012a96:	d40b      	bmi.n	8012ab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012a98:	4620      	mov	r0, r4
 8012a9a:	f007 fc60 	bl	801a35e <__cxa_guard_acquire>
 8012a9e:	b138      	cbz	r0, 8012ab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012aa0:	4620      	mov	r0, r4
 8012aa2:	f007 fc68 	bl	801a376 <__cxa_guard_release>
 8012aa6:	4a0f      	ldr	r2, [pc, #60]	; (8012ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012aa8:	490f      	ldr	r1, [pc, #60]	; (8012ae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8012aaa:	4810      	ldr	r0, [pc, #64]	; (8012aec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012aac:	f007 fc50 	bl	801a350 <__aeabi_atexit>
 8012ab0:	4c0f      	ldr	r4, [pc, #60]	; (8012af0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8012ab2:	7823      	ldrb	r3, [r4, #0]
 8012ab4:	f3bf 8f5b 	dmb	ish
 8012ab8:	07db      	lsls	r3, r3, #31
 8012aba:	d40b      	bmi.n	8012ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012abc:	4620      	mov	r0, r4
 8012abe:	f007 fc4e 	bl	801a35e <__cxa_guard_acquire>
 8012ac2:	b138      	cbz	r0, 8012ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012ac4:	4620      	mov	r0, r4
 8012ac6:	f007 fc56 	bl	801a376 <__cxa_guard_release>
 8012aca:	4a06      	ldr	r2, [pc, #24]	; (8012ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012acc:	4909      	ldr	r1, [pc, #36]	; (8012af4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8012ace:	480a      	ldr	r0, [pc, #40]	; (8012af8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012ad0:	f007 fc3e 	bl	801a350 <__aeabi_atexit>
 8012ad4:	4b05      	ldr	r3, [pc, #20]	; (8012aec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012ad6:	612b      	str	r3, [r5, #16]
 8012ad8:	4b07      	ldr	r3, [pc, #28]	; (8012af8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012ada:	616b      	str	r3, [r5, #20]
 8012adc:	bd38      	pop	{r3, r4, r5, pc}
 8012ade:	bf00      	nop
 8012ae0:	2000a160 	.word	0x2000a160
 8012ae4:	20000000 	.word	0x20000000
 8012ae8:	08010e95 	.word	0x08010e95
 8012aec:	200000a4 	.word	0x200000a4
 8012af0:	2000a164 	.word	0x2000a164
 8012af4:	08010e93 	.word	0x08010e93
 8012af8:	200000a8 	.word	0x200000a8

08012afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8012afc:	b538      	push	{r3, r4, r5, lr}
 8012afe:	4c15      	ldr	r4, [pc, #84]	; (8012b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8012b00:	7823      	ldrb	r3, [r4, #0]
 8012b02:	f3bf 8f5b 	dmb	ish
 8012b06:	07da      	lsls	r2, r3, #31
 8012b08:	4605      	mov	r5, r0
 8012b0a:	d40b      	bmi.n	8012b24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012b0c:	4620      	mov	r0, r4
 8012b0e:	f007 fc26 	bl	801a35e <__cxa_guard_acquire>
 8012b12:	b138      	cbz	r0, 8012b24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012b14:	4620      	mov	r0, r4
 8012b16:	f007 fc2e 	bl	801a376 <__cxa_guard_release>
 8012b1a:	4a0f      	ldr	r2, [pc, #60]	; (8012b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012b1c:	490f      	ldr	r1, [pc, #60]	; (8012b5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8012b1e:	4810      	ldr	r0, [pc, #64]	; (8012b60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012b20:	f007 fc16 	bl	801a350 <__aeabi_atexit>
 8012b24:	4c0f      	ldr	r4, [pc, #60]	; (8012b64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8012b26:	7823      	ldrb	r3, [r4, #0]
 8012b28:	f3bf 8f5b 	dmb	ish
 8012b2c:	07db      	lsls	r3, r3, #31
 8012b2e:	d40b      	bmi.n	8012b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012b30:	4620      	mov	r0, r4
 8012b32:	f007 fc14 	bl	801a35e <__cxa_guard_acquire>
 8012b36:	b138      	cbz	r0, 8012b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012b38:	4620      	mov	r0, r4
 8012b3a:	f007 fc1c 	bl	801a376 <__cxa_guard_release>
 8012b3e:	4a06      	ldr	r2, [pc, #24]	; (8012b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012b40:	4909      	ldr	r1, [pc, #36]	; (8012b68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8012b42:	480a      	ldr	r0, [pc, #40]	; (8012b6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012b44:	f007 fc04 	bl	801a350 <__aeabi_atexit>
 8012b48:	4b05      	ldr	r3, [pc, #20]	; (8012b60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012b4a:	60ab      	str	r3, [r5, #8]
 8012b4c:	4b07      	ldr	r3, [pc, #28]	; (8012b6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012b4e:	60eb      	str	r3, [r5, #12]
 8012b50:	bd38      	pop	{r3, r4, r5, pc}
 8012b52:	bf00      	nop
 8012b54:	2000a138 	.word	0x2000a138
 8012b58:	20000000 	.word	0x20000000
 8012b5c:	08010e99 	.word	0x08010e99
 8012b60:	2000007c 	.word	0x2000007c
 8012b64:	2000a13c 	.word	0x2000a13c
 8012b68:	08010e97 	.word	0x08010e97
 8012b6c:	20000080 	.word	0x20000080

08012b70 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8012b70:	b510      	push	{r4, lr}
 8012b72:	4604      	mov	r4, r0
 8012b74:	f7ff ff88 	bl	8012a88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8012b78:	4620      	mov	r0, r4
 8012b7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b7e:	f7ff bfbd 	b.w	8012afc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08012b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8012b84:	b538      	push	{r3, r4, r5, lr}
 8012b86:	4c15      	ldr	r4, [pc, #84]	; (8012bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8012b88:	7823      	ldrb	r3, [r4, #0]
 8012b8a:	f3bf 8f5b 	dmb	ish
 8012b8e:	07da      	lsls	r2, r3, #31
 8012b90:	4605      	mov	r5, r0
 8012b92:	d40b      	bmi.n	8012bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012b94:	4620      	mov	r0, r4
 8012b96:	f007 fbe2 	bl	801a35e <__cxa_guard_acquire>
 8012b9a:	b138      	cbz	r0, 8012bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012b9c:	4620      	mov	r0, r4
 8012b9e:	f007 fbea 	bl	801a376 <__cxa_guard_release>
 8012ba2:	4a0f      	ldr	r2, [pc, #60]	; (8012be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012ba4:	490f      	ldr	r1, [pc, #60]	; (8012be4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8012ba6:	4810      	ldr	r0, [pc, #64]	; (8012be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012ba8:	f007 fbd2 	bl	801a350 <__aeabi_atexit>
 8012bac:	4c0f      	ldr	r4, [pc, #60]	; (8012bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8012bae:	7823      	ldrb	r3, [r4, #0]
 8012bb0:	f3bf 8f5b 	dmb	ish
 8012bb4:	07db      	lsls	r3, r3, #31
 8012bb6:	d40b      	bmi.n	8012bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012bb8:	4620      	mov	r0, r4
 8012bba:	f007 fbd0 	bl	801a35e <__cxa_guard_acquire>
 8012bbe:	b138      	cbz	r0, 8012bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012bc0:	4620      	mov	r0, r4
 8012bc2:	f007 fbd8 	bl	801a376 <__cxa_guard_release>
 8012bc6:	4a06      	ldr	r2, [pc, #24]	; (8012be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012bc8:	4909      	ldr	r1, [pc, #36]	; (8012bf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8012bca:	480a      	ldr	r0, [pc, #40]	; (8012bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8012bcc:	f007 fbc0 	bl	801a350 <__aeabi_atexit>
 8012bd0:	4b05      	ldr	r3, [pc, #20]	; (8012be8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012bd2:	622b      	str	r3, [r5, #32]
 8012bd4:	4b07      	ldr	r3, [pc, #28]	; (8012bf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8012bd6:	626b      	str	r3, [r5, #36]	; 0x24
 8012bd8:	bd38      	pop	{r3, r4, r5, pc}
 8012bda:	bf00      	nop
 8012bdc:	2000a168 	.word	0x2000a168
 8012be0:	20000000 	.word	0x20000000
 8012be4:	08010e8d 	.word	0x08010e8d
 8012be8:	200000ac 	.word	0x200000ac
 8012bec:	2000a16c 	.word	0x2000a16c
 8012bf0:	08010e8b 	.word	0x08010e8b
 8012bf4:	200000b0 	.word	0x200000b0

08012bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8012bf8:	b538      	push	{r3, r4, r5, lr}
 8012bfa:	4c15      	ldr	r4, [pc, #84]	; (8012c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8012bfc:	7823      	ldrb	r3, [r4, #0]
 8012bfe:	f3bf 8f5b 	dmb	ish
 8012c02:	07da      	lsls	r2, r3, #31
 8012c04:	4605      	mov	r5, r0
 8012c06:	d40b      	bmi.n	8012c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012c08:	4620      	mov	r0, r4
 8012c0a:	f007 fba8 	bl	801a35e <__cxa_guard_acquire>
 8012c0e:	b138      	cbz	r0, 8012c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012c10:	4620      	mov	r0, r4
 8012c12:	f007 fbb0 	bl	801a376 <__cxa_guard_release>
 8012c16:	4a0f      	ldr	r2, [pc, #60]	; (8012c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012c18:	490f      	ldr	r1, [pc, #60]	; (8012c58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8012c1a:	4810      	ldr	r0, [pc, #64]	; (8012c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012c1c:	f007 fb98 	bl	801a350 <__aeabi_atexit>
 8012c20:	4c0f      	ldr	r4, [pc, #60]	; (8012c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8012c22:	7823      	ldrb	r3, [r4, #0]
 8012c24:	f3bf 8f5b 	dmb	ish
 8012c28:	07db      	lsls	r3, r3, #31
 8012c2a:	d40b      	bmi.n	8012c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012c2c:	4620      	mov	r0, r4
 8012c2e:	f007 fb96 	bl	801a35e <__cxa_guard_acquire>
 8012c32:	b138      	cbz	r0, 8012c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012c34:	4620      	mov	r0, r4
 8012c36:	f007 fb9e 	bl	801a376 <__cxa_guard_release>
 8012c3a:	4a06      	ldr	r2, [pc, #24]	; (8012c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012c3c:	4909      	ldr	r1, [pc, #36]	; (8012c64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8012c3e:	480a      	ldr	r0, [pc, #40]	; (8012c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012c40:	f007 fb86 	bl	801a350 <__aeabi_atexit>
 8012c44:	4b05      	ldr	r3, [pc, #20]	; (8012c5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012c46:	61ab      	str	r3, [r5, #24]
 8012c48:	4b07      	ldr	r3, [pc, #28]	; (8012c68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012c4a:	61eb      	str	r3, [r5, #28]
 8012c4c:	bd38      	pop	{r3, r4, r5, pc}
 8012c4e:	bf00      	nop
 8012c50:	2000a140 	.word	0x2000a140
 8012c54:	20000000 	.word	0x20000000
 8012c58:	08010e91 	.word	0x08010e91
 8012c5c:	20000084 	.word	0x20000084
 8012c60:	2000a144 	.word	0x2000a144
 8012c64:	08010e8f 	.word	0x08010e8f
 8012c68:	20000088 	.word	0x20000088

08012c6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8012c6c:	b510      	push	{r4, lr}
 8012c6e:	4604      	mov	r4, r0
 8012c70:	f7ff ff88 	bl	8012b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8012c74:	4620      	mov	r0, r4
 8012c76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c7a:	f7ff bfbd 	b.w	8012bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08012c80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8012c80:	b538      	push	{r3, r4, r5, lr}
 8012c82:	4c15      	ldr	r4, [pc, #84]	; (8012cd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8012c84:	7823      	ldrb	r3, [r4, #0]
 8012c86:	f3bf 8f5b 	dmb	ish
 8012c8a:	07da      	lsls	r2, r3, #31
 8012c8c:	4605      	mov	r5, r0
 8012c8e:	d40b      	bmi.n	8012ca8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012c90:	4620      	mov	r0, r4
 8012c92:	f007 fb64 	bl	801a35e <__cxa_guard_acquire>
 8012c96:	b138      	cbz	r0, 8012ca8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012c98:	4620      	mov	r0, r4
 8012c9a:	f007 fb6c 	bl	801a376 <__cxa_guard_release>
 8012c9e:	4a0f      	ldr	r2, [pc, #60]	; (8012cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012ca0:	490f      	ldr	r1, [pc, #60]	; (8012ce0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8012ca2:	4810      	ldr	r0, [pc, #64]	; (8012ce4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8012ca4:	f007 fb54 	bl	801a350 <__aeabi_atexit>
 8012ca8:	4c0f      	ldr	r4, [pc, #60]	; (8012ce8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8012caa:	7823      	ldrb	r3, [r4, #0]
 8012cac:	f3bf 8f5b 	dmb	ish
 8012cb0:	07db      	lsls	r3, r3, #31
 8012cb2:	d40b      	bmi.n	8012ccc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012cb4:	4620      	mov	r0, r4
 8012cb6:	f007 fb52 	bl	801a35e <__cxa_guard_acquire>
 8012cba:	b138      	cbz	r0, 8012ccc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012cbc:	4620      	mov	r0, r4
 8012cbe:	f007 fb5a 	bl	801a376 <__cxa_guard_release>
 8012cc2:	4a06      	ldr	r2, [pc, #24]	; (8012cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012cc4:	4909      	ldr	r1, [pc, #36]	; (8012cec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8012cc6:	480a      	ldr	r0, [pc, #40]	; (8012cf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012cc8:	f007 fb42 	bl	801a350 <__aeabi_atexit>
 8012ccc:	4b05      	ldr	r3, [pc, #20]	; (8012ce4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8012cce:	632b      	str	r3, [r5, #48]	; 0x30
 8012cd0:	4b07      	ldr	r3, [pc, #28]	; (8012cf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012cd2:	636b      	str	r3, [r5, #52]	; 0x34
 8012cd4:	bd38      	pop	{r3, r4, r5, pc}
 8012cd6:	bf00      	nop
 8012cd8:	2000a178 	.word	0x2000a178
 8012cdc:	20000000 	.word	0x20000000
 8012ce0:	08010e85 	.word	0x08010e85
 8012ce4:	200000bc 	.word	0x200000bc
 8012ce8:	2000a17c 	.word	0x2000a17c
 8012cec:	08010e83 	.word	0x08010e83
 8012cf0:	200000c0 	.word	0x200000c0

08012cf4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8012cf4:	b538      	push	{r3, r4, r5, lr}
 8012cf6:	4c15      	ldr	r4, [pc, #84]	; (8012d4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8012cf8:	7823      	ldrb	r3, [r4, #0]
 8012cfa:	f3bf 8f5b 	dmb	ish
 8012cfe:	07da      	lsls	r2, r3, #31
 8012d00:	4605      	mov	r5, r0
 8012d02:	d40b      	bmi.n	8012d1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012d04:	4620      	mov	r0, r4
 8012d06:	f007 fb2a 	bl	801a35e <__cxa_guard_acquire>
 8012d0a:	b138      	cbz	r0, 8012d1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012d0c:	4620      	mov	r0, r4
 8012d0e:	f007 fb32 	bl	801a376 <__cxa_guard_release>
 8012d12:	4a0f      	ldr	r2, [pc, #60]	; (8012d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012d14:	490f      	ldr	r1, [pc, #60]	; (8012d54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8012d16:	4810      	ldr	r0, [pc, #64]	; (8012d58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012d18:	f007 fb1a 	bl	801a350 <__aeabi_atexit>
 8012d1c:	4c0f      	ldr	r4, [pc, #60]	; (8012d5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8012d1e:	7823      	ldrb	r3, [r4, #0]
 8012d20:	f3bf 8f5b 	dmb	ish
 8012d24:	07db      	lsls	r3, r3, #31
 8012d26:	d40b      	bmi.n	8012d40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012d28:	4620      	mov	r0, r4
 8012d2a:	f007 fb18 	bl	801a35e <__cxa_guard_acquire>
 8012d2e:	b138      	cbz	r0, 8012d40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012d30:	4620      	mov	r0, r4
 8012d32:	f007 fb20 	bl	801a376 <__cxa_guard_release>
 8012d36:	4a06      	ldr	r2, [pc, #24]	; (8012d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012d38:	4909      	ldr	r1, [pc, #36]	; (8012d60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8012d3a:	480a      	ldr	r0, [pc, #40]	; (8012d64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012d3c:	f007 fb08 	bl	801a350 <__aeabi_atexit>
 8012d40:	4b05      	ldr	r3, [pc, #20]	; (8012d58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012d42:	62ab      	str	r3, [r5, #40]	; 0x28
 8012d44:	4b07      	ldr	r3, [pc, #28]	; (8012d64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012d46:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012d48:	bd38      	pop	{r3, r4, r5, pc}
 8012d4a:	bf00      	nop
 8012d4c:	2000a148 	.word	0x2000a148
 8012d50:	20000000 	.word	0x20000000
 8012d54:	08010e89 	.word	0x08010e89
 8012d58:	2000008c 	.word	0x2000008c
 8012d5c:	2000a14c 	.word	0x2000a14c
 8012d60:	08010e87 	.word	0x08010e87
 8012d64:	20000090 	.word	0x20000090

08012d68 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8012d68:	b510      	push	{r4, lr}
 8012d6a:	4604      	mov	r4, r0
 8012d6c:	f7ff ff88 	bl	8012c80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8012d70:	4620      	mov	r0, r4
 8012d72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d76:	f7ff bfbd 	b.w	8012cf4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08012d7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8012d7c:	b538      	push	{r3, r4, r5, lr}
 8012d7e:	4c15      	ldr	r4, [pc, #84]	; (8012dd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8012d80:	7823      	ldrb	r3, [r4, #0]
 8012d82:	f3bf 8f5b 	dmb	ish
 8012d86:	07da      	lsls	r2, r3, #31
 8012d88:	4605      	mov	r5, r0
 8012d8a:	d40b      	bmi.n	8012da4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012d8c:	4620      	mov	r0, r4
 8012d8e:	f007 fae6 	bl	801a35e <__cxa_guard_acquire>
 8012d92:	b138      	cbz	r0, 8012da4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012d94:	4620      	mov	r0, r4
 8012d96:	f007 faee 	bl	801a376 <__cxa_guard_release>
 8012d9a:	4a0f      	ldr	r2, [pc, #60]	; (8012dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012d9c:	490f      	ldr	r1, [pc, #60]	; (8012ddc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8012d9e:	4810      	ldr	r0, [pc, #64]	; (8012de0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012da0:	f007 fad6 	bl	801a350 <__aeabi_atexit>
 8012da4:	4c0f      	ldr	r4, [pc, #60]	; (8012de4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8012da6:	7823      	ldrb	r3, [r4, #0]
 8012da8:	f3bf 8f5b 	dmb	ish
 8012dac:	07db      	lsls	r3, r3, #31
 8012dae:	d40b      	bmi.n	8012dc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012db0:	4620      	mov	r0, r4
 8012db2:	f007 fad4 	bl	801a35e <__cxa_guard_acquire>
 8012db6:	b138      	cbz	r0, 8012dc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012db8:	4620      	mov	r0, r4
 8012dba:	f007 fadc 	bl	801a376 <__cxa_guard_release>
 8012dbe:	4a06      	ldr	r2, [pc, #24]	; (8012dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012dc0:	4909      	ldr	r1, [pc, #36]	; (8012de8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8012dc2:	480a      	ldr	r0, [pc, #40]	; (8012dec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012dc4:	f007 fac4 	bl	801a350 <__aeabi_atexit>
 8012dc8:	4b05      	ldr	r3, [pc, #20]	; (8012de0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012dca:	652b      	str	r3, [r5, #80]	; 0x50
 8012dcc:	4b07      	ldr	r3, [pc, #28]	; (8012dec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012dce:	656b      	str	r3, [r5, #84]	; 0x54
 8012dd0:	bd38      	pop	{r3, r4, r5, pc}
 8012dd2:	bf00      	nop
 8012dd4:	2000a180 	.word	0x2000a180
 8012dd8:	20000000 	.word	0x20000000
 8012ddc:	08010e75 	.word	0x08010e75
 8012de0:	200000c4 	.word	0x200000c4
 8012de4:	2000a184 	.word	0x2000a184
 8012de8:	08010e73 	.word	0x08010e73
 8012dec:	200000c8 	.word	0x200000c8

08012df0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8012df0:	b538      	push	{r3, r4, r5, lr}
 8012df2:	4c15      	ldr	r4, [pc, #84]	; (8012e48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8012df4:	7823      	ldrb	r3, [r4, #0]
 8012df6:	f3bf 8f5b 	dmb	ish
 8012dfa:	07da      	lsls	r2, r3, #31
 8012dfc:	4605      	mov	r5, r0
 8012dfe:	d40b      	bmi.n	8012e18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012e00:	4620      	mov	r0, r4
 8012e02:	f007 faac 	bl	801a35e <__cxa_guard_acquire>
 8012e06:	b138      	cbz	r0, 8012e18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012e08:	4620      	mov	r0, r4
 8012e0a:	f007 fab4 	bl	801a376 <__cxa_guard_release>
 8012e0e:	4a0f      	ldr	r2, [pc, #60]	; (8012e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012e10:	490f      	ldr	r1, [pc, #60]	; (8012e50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8012e12:	4810      	ldr	r0, [pc, #64]	; (8012e54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012e14:	f007 fa9c 	bl	801a350 <__aeabi_atexit>
 8012e18:	4c0f      	ldr	r4, [pc, #60]	; (8012e58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8012e1a:	7823      	ldrb	r3, [r4, #0]
 8012e1c:	f3bf 8f5b 	dmb	ish
 8012e20:	07db      	lsls	r3, r3, #31
 8012e22:	d40b      	bmi.n	8012e3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012e24:	4620      	mov	r0, r4
 8012e26:	f007 fa9a 	bl	801a35e <__cxa_guard_acquire>
 8012e2a:	b138      	cbz	r0, 8012e3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012e2c:	4620      	mov	r0, r4
 8012e2e:	f007 faa2 	bl	801a376 <__cxa_guard_release>
 8012e32:	4a06      	ldr	r2, [pc, #24]	; (8012e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012e34:	4909      	ldr	r1, [pc, #36]	; (8012e5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8012e36:	480a      	ldr	r0, [pc, #40]	; (8012e60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012e38:	f007 fa8a 	bl	801a350 <__aeabi_atexit>
 8012e3c:	4b05      	ldr	r3, [pc, #20]	; (8012e54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012e3e:	64ab      	str	r3, [r5, #72]	; 0x48
 8012e40:	4b07      	ldr	r3, [pc, #28]	; (8012e60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012e42:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012e44:	bd38      	pop	{r3, r4, r5, pc}
 8012e46:	bf00      	nop
 8012e48:	2000a188 	.word	0x2000a188
 8012e4c:	20000000 	.word	0x20000000
 8012e50:	08010e79 	.word	0x08010e79
 8012e54:	200000cc 	.word	0x200000cc
 8012e58:	2000a18c 	.word	0x2000a18c
 8012e5c:	08010e77 	.word	0x08010e77
 8012e60:	200000d0 	.word	0x200000d0

08012e64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8012e64:	b538      	push	{r3, r4, r5, lr}
 8012e66:	4c15      	ldr	r4, [pc, #84]	; (8012ebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8012e68:	7823      	ldrb	r3, [r4, #0]
 8012e6a:	f3bf 8f5b 	dmb	ish
 8012e6e:	07da      	lsls	r2, r3, #31
 8012e70:	4605      	mov	r5, r0
 8012e72:	d40b      	bmi.n	8012e8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012e74:	4620      	mov	r0, r4
 8012e76:	f007 fa72 	bl	801a35e <__cxa_guard_acquire>
 8012e7a:	b138      	cbz	r0, 8012e8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012e7c:	4620      	mov	r0, r4
 8012e7e:	f007 fa7a 	bl	801a376 <__cxa_guard_release>
 8012e82:	4a0f      	ldr	r2, [pc, #60]	; (8012ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012e84:	490f      	ldr	r1, [pc, #60]	; (8012ec4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8012e86:	4810      	ldr	r0, [pc, #64]	; (8012ec8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012e88:	f007 fa62 	bl	801a350 <__aeabi_atexit>
 8012e8c:	4c0f      	ldr	r4, [pc, #60]	; (8012ecc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8012e8e:	7823      	ldrb	r3, [r4, #0]
 8012e90:	f3bf 8f5b 	dmb	ish
 8012e94:	07db      	lsls	r3, r3, #31
 8012e96:	d40b      	bmi.n	8012eb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012e98:	4620      	mov	r0, r4
 8012e9a:	f007 fa60 	bl	801a35e <__cxa_guard_acquire>
 8012e9e:	b138      	cbz	r0, 8012eb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012ea0:	4620      	mov	r0, r4
 8012ea2:	f007 fa68 	bl	801a376 <__cxa_guard_release>
 8012ea6:	4a06      	ldr	r2, [pc, #24]	; (8012ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012ea8:	4909      	ldr	r1, [pc, #36]	; (8012ed0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8012eaa:	480a      	ldr	r0, [pc, #40]	; (8012ed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012eac:	f007 fa50 	bl	801a350 <__aeabi_atexit>
 8012eb0:	4b05      	ldr	r3, [pc, #20]	; (8012ec8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012eb2:	642b      	str	r3, [r5, #64]	; 0x40
 8012eb4:	4b07      	ldr	r3, [pc, #28]	; (8012ed4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012eb6:	646b      	str	r3, [r5, #68]	; 0x44
 8012eb8:	bd38      	pop	{r3, r4, r5, pc}
 8012eba:	bf00      	nop
 8012ebc:	2000a150 	.word	0x2000a150
 8012ec0:	20000000 	.word	0x20000000
 8012ec4:	08010e7d 	.word	0x08010e7d
 8012ec8:	20000094 	.word	0x20000094
 8012ecc:	2000a154 	.word	0x2000a154
 8012ed0:	08010e7b 	.word	0x08010e7b
 8012ed4:	20000098 	.word	0x20000098

08012ed8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8012ed8:	b538      	push	{r3, r4, r5, lr}
 8012eda:	4c15      	ldr	r4, [pc, #84]	; (8012f30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8012edc:	7823      	ldrb	r3, [r4, #0]
 8012ede:	f3bf 8f5b 	dmb	ish
 8012ee2:	07da      	lsls	r2, r3, #31
 8012ee4:	4605      	mov	r5, r0
 8012ee6:	d40b      	bmi.n	8012f00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012ee8:	4620      	mov	r0, r4
 8012eea:	f007 fa38 	bl	801a35e <__cxa_guard_acquire>
 8012eee:	b138      	cbz	r0, 8012f00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012ef0:	4620      	mov	r0, r4
 8012ef2:	f007 fa40 	bl	801a376 <__cxa_guard_release>
 8012ef6:	4a0f      	ldr	r2, [pc, #60]	; (8012f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012ef8:	490f      	ldr	r1, [pc, #60]	; (8012f38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8012efa:	4810      	ldr	r0, [pc, #64]	; (8012f3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012efc:	f007 fa28 	bl	801a350 <__aeabi_atexit>
 8012f00:	4c0f      	ldr	r4, [pc, #60]	; (8012f40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8012f02:	7823      	ldrb	r3, [r4, #0]
 8012f04:	f3bf 8f5b 	dmb	ish
 8012f08:	07db      	lsls	r3, r3, #31
 8012f0a:	d40b      	bmi.n	8012f24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012f0c:	4620      	mov	r0, r4
 8012f0e:	f007 fa26 	bl	801a35e <__cxa_guard_acquire>
 8012f12:	b138      	cbz	r0, 8012f24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012f14:	4620      	mov	r0, r4
 8012f16:	f007 fa2e 	bl	801a376 <__cxa_guard_release>
 8012f1a:	4a06      	ldr	r2, [pc, #24]	; (8012f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012f1c:	4909      	ldr	r1, [pc, #36]	; (8012f44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8012f1e:	480a      	ldr	r0, [pc, #40]	; (8012f48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012f20:	f007 fa16 	bl	801a350 <__aeabi_atexit>
 8012f24:	4b05      	ldr	r3, [pc, #20]	; (8012f3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012f26:	63ab      	str	r3, [r5, #56]	; 0x38
 8012f28:	4b07      	ldr	r3, [pc, #28]	; (8012f48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012f2a:	63eb      	str	r3, [r5, #60]	; 0x3c
 8012f2c:	bd38      	pop	{r3, r4, r5, pc}
 8012f2e:	bf00      	nop
 8012f30:	2000a170 	.word	0x2000a170
 8012f34:	20000000 	.word	0x20000000
 8012f38:	08010e81 	.word	0x08010e81
 8012f3c:	200000b4 	.word	0x200000b4
 8012f40:	2000a174 	.word	0x2000a174
 8012f44:	08010e7f 	.word	0x08010e7f
 8012f48:	200000b8 	.word	0x200000b8

08012f4c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8012f4c:	b510      	push	{r4, lr}
 8012f4e:	4604      	mov	r4, r0
 8012f50:	f7ff ff14 	bl	8012d7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8012f54:	4620      	mov	r0, r4
 8012f56:	f7ff ff85 	bl	8012e64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8012f5a:	4620      	mov	r0, r4
 8012f5c:	f7ff ff48 	bl	8012df0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8012f60:	4620      	mov	r0, r4
 8012f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f66:	f7ff bfb7 	b.w	8012ed8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08012f6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8012f6c:	b538      	push	{r3, r4, r5, lr}
 8012f6e:	4c15      	ldr	r4, [pc, #84]	; (8012fc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8012f70:	7823      	ldrb	r3, [r4, #0]
 8012f72:	f3bf 8f5b 	dmb	ish
 8012f76:	07da      	lsls	r2, r3, #31
 8012f78:	4605      	mov	r5, r0
 8012f7a:	d40b      	bmi.n	8012f94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012f7c:	4620      	mov	r0, r4
 8012f7e:	f007 f9ee 	bl	801a35e <__cxa_guard_acquire>
 8012f82:	b138      	cbz	r0, 8012f94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012f84:	4620      	mov	r0, r4
 8012f86:	f007 f9f6 	bl	801a376 <__cxa_guard_release>
 8012f8a:	4a0f      	ldr	r2, [pc, #60]	; (8012fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012f8c:	490f      	ldr	r1, [pc, #60]	; (8012fcc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8012f8e:	4810      	ldr	r0, [pc, #64]	; (8012fd0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012f90:	f007 f9de 	bl	801a350 <__aeabi_atexit>
 8012f94:	4c0f      	ldr	r4, [pc, #60]	; (8012fd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8012f96:	7823      	ldrb	r3, [r4, #0]
 8012f98:	f3bf 8f5b 	dmb	ish
 8012f9c:	07db      	lsls	r3, r3, #31
 8012f9e:	d40b      	bmi.n	8012fb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012fa0:	4620      	mov	r0, r4
 8012fa2:	f007 f9dc 	bl	801a35e <__cxa_guard_acquire>
 8012fa6:	b138      	cbz	r0, 8012fb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012fa8:	4620      	mov	r0, r4
 8012faa:	f007 f9e4 	bl	801a376 <__cxa_guard_release>
 8012fae:	4a06      	ldr	r2, [pc, #24]	; (8012fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012fb0:	4909      	ldr	r1, [pc, #36]	; (8012fd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8012fb2:	480a      	ldr	r0, [pc, #40]	; (8012fdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012fb4:	f007 f9cc 	bl	801a350 <__aeabi_atexit>
 8012fb8:	4b05      	ldr	r3, [pc, #20]	; (8012fd0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012fba:	662b      	str	r3, [r5, #96]	; 0x60
 8012fbc:	4b07      	ldr	r3, [pc, #28]	; (8012fdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012fbe:	666b      	str	r3, [r5, #100]	; 0x64
 8012fc0:	bd38      	pop	{r3, r4, r5, pc}
 8012fc2:	bf00      	nop
 8012fc4:	2000a158 	.word	0x2000a158
 8012fc8:	20000000 	.word	0x20000000
 8012fcc:	08010e6d 	.word	0x08010e6d
 8012fd0:	2000009c 	.word	0x2000009c
 8012fd4:	2000a15c 	.word	0x2000a15c
 8012fd8:	08010e6b 	.word	0x08010e6b
 8012fdc:	200000a0 	.word	0x200000a0

08012fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8012fe0:	b538      	push	{r3, r4, r5, lr}
 8012fe2:	4c15      	ldr	r4, [pc, #84]	; (8013038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8012fe4:	7823      	ldrb	r3, [r4, #0]
 8012fe6:	f3bf 8f5b 	dmb	ish
 8012fea:	07da      	lsls	r2, r3, #31
 8012fec:	4605      	mov	r5, r0
 8012fee:	d40b      	bmi.n	8013008 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012ff0:	4620      	mov	r0, r4
 8012ff2:	f007 f9b4 	bl	801a35e <__cxa_guard_acquire>
 8012ff6:	b138      	cbz	r0, 8013008 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012ff8:	4620      	mov	r0, r4
 8012ffa:	f007 f9bc 	bl	801a376 <__cxa_guard_release>
 8012ffe:	4a0f      	ldr	r2, [pc, #60]	; (801303c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013000:	490f      	ldr	r1, [pc, #60]	; (8013040 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013002:	4810      	ldr	r0, [pc, #64]	; (8013044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013004:	f007 f9a4 	bl	801a350 <__aeabi_atexit>
 8013008:	4c0f      	ldr	r4, [pc, #60]	; (8013048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801300a:	7823      	ldrb	r3, [r4, #0]
 801300c:	f3bf 8f5b 	dmb	ish
 8013010:	07db      	lsls	r3, r3, #31
 8013012:	d40b      	bmi.n	801302c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013014:	4620      	mov	r0, r4
 8013016:	f007 f9a2 	bl	801a35e <__cxa_guard_acquire>
 801301a:	b138      	cbz	r0, 801302c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801301c:	4620      	mov	r0, r4
 801301e:	f007 f9aa 	bl	801a376 <__cxa_guard_release>
 8013022:	4a06      	ldr	r2, [pc, #24]	; (801303c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013024:	4909      	ldr	r1, [pc, #36]	; (801304c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8013026:	480a      	ldr	r0, [pc, #40]	; (8013050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013028:	f007 f992 	bl	801a350 <__aeabi_atexit>
 801302c:	4b05      	ldr	r3, [pc, #20]	; (8013044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801302e:	65ab      	str	r3, [r5, #88]	; 0x58
 8013030:	4b07      	ldr	r3, [pc, #28]	; (8013050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013032:	65eb      	str	r3, [r5, #92]	; 0x5c
 8013034:	bd38      	pop	{r3, r4, r5, pc}
 8013036:	bf00      	nop
 8013038:	2000a130 	.word	0x2000a130
 801303c:	20000000 	.word	0x20000000
 8013040:	08010e71 	.word	0x08010e71
 8013044:	20000074 	.word	0x20000074
 8013048:	2000a134 	.word	0x2000a134
 801304c:	08010e6f 	.word	0x08010e6f
 8013050:	20000078 	.word	0x20000078

08013054 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8013054:	b510      	push	{r4, lr}
 8013056:	4604      	mov	r4, r0
 8013058:	f7ff ff88 	bl	8012f6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801305c:	4620      	mov	r0, r4
 801305e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013062:	f7ff bfbd 	b.w	8012fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013068:	b538      	push	{r3, r4, r5, lr}
 801306a:	4c15      	ldr	r4, [pc, #84]	; (80130c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801306c:	7823      	ldrb	r3, [r4, #0]
 801306e:	f3bf 8f5b 	dmb	ish
 8013072:	07da      	lsls	r2, r3, #31
 8013074:	4605      	mov	r5, r0
 8013076:	d40b      	bmi.n	8013090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013078:	4620      	mov	r0, r4
 801307a:	f007 f970 	bl	801a35e <__cxa_guard_acquire>
 801307e:	b138      	cbz	r0, 8013090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013080:	4620      	mov	r0, r4
 8013082:	f007 f978 	bl	801a376 <__cxa_guard_release>
 8013086:	4a0f      	ldr	r2, [pc, #60]	; (80130c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013088:	490f      	ldr	r1, [pc, #60]	; (80130c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801308a:	4810      	ldr	r0, [pc, #64]	; (80130cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801308c:	f007 f960 	bl	801a350 <__aeabi_atexit>
 8013090:	4c0f      	ldr	r4, [pc, #60]	; (80130d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8013092:	7823      	ldrb	r3, [r4, #0]
 8013094:	f3bf 8f5b 	dmb	ish
 8013098:	07db      	lsls	r3, r3, #31
 801309a:	d40b      	bmi.n	80130b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801309c:	4620      	mov	r0, r4
 801309e:	f007 f95e 	bl	801a35e <__cxa_guard_acquire>
 80130a2:	b138      	cbz	r0, 80130b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80130a4:	4620      	mov	r0, r4
 80130a6:	f007 f966 	bl	801a376 <__cxa_guard_release>
 80130aa:	4a06      	ldr	r2, [pc, #24]	; (80130c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80130ac:	4909      	ldr	r1, [pc, #36]	; (80130d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80130ae:	480a      	ldr	r0, [pc, #40]	; (80130d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80130b0:	f007 f94e 	bl	801a350 <__aeabi_atexit>
 80130b4:	4b05      	ldr	r3, [pc, #20]	; (80130cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80130b6:	672b      	str	r3, [r5, #112]	; 0x70
 80130b8:	4b07      	ldr	r3, [pc, #28]	; (80130d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80130ba:	676b      	str	r3, [r5, #116]	; 0x74
 80130bc:	bd38      	pop	{r3, r4, r5, pc}
 80130be:	bf00      	nop
 80130c0:	2000a128 	.word	0x2000a128
 80130c4:	20000000 	.word	0x20000000
 80130c8:	08010e65 	.word	0x08010e65
 80130cc:	2000006c 	.word	0x2000006c
 80130d0:	2000a12c 	.word	0x2000a12c
 80130d4:	08010e63 	.word	0x08010e63
 80130d8:	20000070 	.word	0x20000070

080130dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80130dc:	b538      	push	{r3, r4, r5, lr}
 80130de:	4c15      	ldr	r4, [pc, #84]	; (8013134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80130e0:	7823      	ldrb	r3, [r4, #0]
 80130e2:	f3bf 8f5b 	dmb	ish
 80130e6:	07da      	lsls	r2, r3, #31
 80130e8:	4605      	mov	r5, r0
 80130ea:	d40b      	bmi.n	8013104 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80130ec:	4620      	mov	r0, r4
 80130ee:	f007 f936 	bl	801a35e <__cxa_guard_acquire>
 80130f2:	b138      	cbz	r0, 8013104 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80130f4:	4620      	mov	r0, r4
 80130f6:	f007 f93e 	bl	801a376 <__cxa_guard_release>
 80130fa:	4a0f      	ldr	r2, [pc, #60]	; (8013138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80130fc:	490f      	ldr	r1, [pc, #60]	; (801313c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80130fe:	4810      	ldr	r0, [pc, #64]	; (8013140 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013100:	f007 f926 	bl	801a350 <__aeabi_atexit>
 8013104:	4c0f      	ldr	r4, [pc, #60]	; (8013144 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8013106:	7823      	ldrb	r3, [r4, #0]
 8013108:	f3bf 8f5b 	dmb	ish
 801310c:	07db      	lsls	r3, r3, #31
 801310e:	d40b      	bmi.n	8013128 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013110:	4620      	mov	r0, r4
 8013112:	f007 f924 	bl	801a35e <__cxa_guard_acquire>
 8013116:	b138      	cbz	r0, 8013128 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013118:	4620      	mov	r0, r4
 801311a:	f007 f92c 	bl	801a376 <__cxa_guard_release>
 801311e:	4a06      	ldr	r2, [pc, #24]	; (8013138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013120:	4909      	ldr	r1, [pc, #36]	; (8013148 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8013122:	480a      	ldr	r0, [pc, #40]	; (801314c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8013124:	f007 f914 	bl	801a350 <__aeabi_atexit>
 8013128:	4b05      	ldr	r3, [pc, #20]	; (8013140 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801312a:	66ab      	str	r3, [r5, #104]	; 0x68
 801312c:	4b07      	ldr	r3, [pc, #28]	; (801314c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801312e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8013130:	bd38      	pop	{r3, r4, r5, pc}
 8013132:	bf00      	nop
 8013134:	2000a120 	.word	0x2000a120
 8013138:	20000000 	.word	0x20000000
 801313c:	08010e69 	.word	0x08010e69
 8013140:	20000064 	.word	0x20000064
 8013144:	2000a124 	.word	0x2000a124
 8013148:	08010e67 	.word	0x08010e67
 801314c:	20000068 	.word	0x20000068

08013150 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8013150:	b510      	push	{r4, lr}
 8013152:	4604      	mov	r4, r0
 8013154:	f7ff ff88 	bl	8013068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8013158:	4620      	mov	r0, r4
 801315a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801315e:	f7ff bfbd 	b.w	80130dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08013162 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8013162:	b510      	push	{r4, lr}
 8013164:	4604      	mov	r4, r0
 8013166:	f7ff fff3 	bl	8013150 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801316a:	4620      	mov	r0, r4
 801316c:	f7ff ff72 	bl	8013054 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8013170:	4620      	mov	r0, r4
 8013172:	f7ff fdf9 	bl	8012d68 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8013176:	4620      	mov	r0, r4
 8013178:	f7ff fcfa 	bl	8012b70 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801317c:	4620      	mov	r0, r4
 801317e:	f7ff fd75 	bl	8012c6c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8013182:	4620      	mov	r0, r4
 8013184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013188:	f7ff bee0 	b.w	8012f4c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801318c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801318c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013190:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8013194:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8013198:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801319c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80131a0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80131a4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80131a8:	8808      	ldrh	r0, [r1, #0]
 80131aa:	fb0e 4708 	mla	r7, lr, r8, r4
 80131ae:	f1be 0f00 	cmp.w	lr, #0
 80131b2:	eb02 0a07 	add.w	sl, r2, r7
 80131b6:	db37      	blt.n	8013228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80131b8:	45f3      	cmp	fp, lr
 80131ba:	dd35      	ble.n	8013228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80131bc:	2c00      	cmp	r4, #0
 80131be:	db31      	blt.n	8013224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80131c0:	45a0      	cmp	r8, r4
 80131c2:	dd2f      	ble.n	8013224 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80131c4:	5dd2      	ldrb	r2, [r2, r7]
 80131c6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80131ca:	1c62      	adds	r2, r4, #1
 80131cc:	d42f      	bmi.n	801322e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80131ce:	4590      	cmp	r8, r2
 80131d0:	dd2d      	ble.n	801322e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80131d2:	b366      	cbz	r6, 801322e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80131d4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80131d8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80131dc:	f11e 0e01 	adds.w	lr, lr, #1
 80131e0:	d429      	bmi.n	8013236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80131e2:	45f3      	cmp	fp, lr
 80131e4:	dd27      	ble.n	8013236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80131e6:	f1bc 0f00 	cmp.w	ip, #0
 80131ea:	f000 80a1 	beq.w	8013330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80131ee:	2c00      	cmp	r4, #0
 80131f0:	db1f      	blt.n	8013232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80131f2:	45a0      	cmp	r8, r4
 80131f4:	dd1d      	ble.n	8013232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80131f6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80131fa:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80131fe:	3401      	adds	r4, #1
 8013200:	d41c      	bmi.n	801323c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013202:	45a0      	cmp	r8, r4
 8013204:	dd1a      	ble.n	801323c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013206:	b1de      	cbz	r6, 8013240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8013208:	44d0      	add	r8, sl
 801320a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801320e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8013212:	2e0f      	cmp	r6, #15
 8013214:	d915      	bls.n	8013242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8013216:	4b49      	ldr	r3, [pc, #292]	; (801333c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8013218:	4a49      	ldr	r2, [pc, #292]	; (8013340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801321a:	484a      	ldr	r0, [pc, #296]	; (8013344 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801321c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8013220:	f007 f8ca 	bl	801a3b8 <__assert_func>
 8013224:	4681      	mov	r9, r0
 8013226:	e7d0      	b.n	80131ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8013228:	4607      	mov	r7, r0
 801322a:	4681      	mov	r9, r0
 801322c:	e7d6      	b.n	80131dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801322e:	4607      	mov	r7, r0
 8013230:	e7d4      	b.n	80131dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013232:	4686      	mov	lr, r0
 8013234:	e7e3      	b.n	80131fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8013236:	4603      	mov	r3, r0
 8013238:	4686      	mov	lr, r0
 801323a:	e7ea      	b.n	8013212 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801323c:	4603      	mov	r3, r0
 801323e:	e7e8      	b.n	8013212 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013240:	4603      	mov	r3, r0
 8013242:	f1bc 0f0f 	cmp.w	ip, #15
 8013246:	d8e6      	bhi.n	8013216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013248:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801324c:	fb16 f80c 	smulbb	r8, r6, ip
 8013250:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013254:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8013258:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801325c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8013260:	ea44 0909 	orr.w	r9, r4, r9
 8013264:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8013268:	f1cc 0410 	rsb	r4, ip, #16
 801326c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013270:	1ba4      	subs	r4, r4, r6
 8013272:	041a      	lsls	r2, r3, #16
 8013274:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8013278:	ea4a 0707 	orr.w	r7, sl, r7
 801327c:	4377      	muls	r7, r6
 801327e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013282:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8013286:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801328a:	fb04 7409 	mla	r4, r4, r9, r7
 801328e:	4313      	orrs	r3, r2
 8013290:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8013294:	fb08 4303 	mla	r3, r8, r3, r4
 8013298:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801329c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80132a0:	4322      	orrs	r2, r4
 80132a2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80132a6:	fb0c 3202 	mla	r2, ip, r2, r3
 80132aa:	0d53      	lsrs	r3, r2, #21
 80132ac:	0952      	lsrs	r2, r2, #5
 80132ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80132b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80132b6:	431a      	orrs	r2, r3
 80132b8:	b293      	uxth	r3, r2
 80132ba:	b2af      	uxth	r7, r5
 80132bc:	1202      	asrs	r2, r0, #8
 80132be:	43ed      	mvns	r5, r5
 80132c0:	b2ed      	uxtb	r5, r5
 80132c2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80132c6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80132ca:	fb12 f205 	smulbb	r2, r2, r5
 80132ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80132d2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80132d6:	00dc      	lsls	r4, r3, #3
 80132d8:	10da      	asrs	r2, r3, #3
 80132da:	10c6      	asrs	r6, r0, #3
 80132dc:	00c3      	lsls	r3, r0, #3
 80132de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80132e2:	b2db      	uxtb	r3, r3
 80132e4:	fb16 f605 	smulbb	r6, r6, r5
 80132e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80132ec:	b2e4      	uxtb	r4, r4
 80132ee:	fb13 f305 	smulbb	r3, r3, r5
 80132f2:	fa1f fc8c 	uxth.w	ip, ip
 80132f6:	fb02 6207 	mla	r2, r2, r7, r6
 80132fa:	fb04 3307 	mla	r3, r4, r7, r3
 80132fe:	b296      	uxth	r6, r2
 8013300:	b29a      	uxth	r2, r3
 8013302:	f10c 0301 	add.w	r3, ip, #1
 8013306:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801330a:	1c53      	adds	r3, r2, #1
 801330c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013310:	1c72      	adds	r2, r6, #1
 8013312:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8013316:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801331a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801331e:	0952      	lsrs	r2, r2, #5
 8013320:	ea43 030c 	orr.w	r3, r3, ip
 8013324:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013328:	4313      	orrs	r3, r2
 801332a:	800b      	strh	r3, [r1, #0]
 801332c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013330:	2e0f      	cmp	r6, #15
 8013332:	f63f af70 	bhi.w	8013216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013336:	4603      	mov	r3, r0
 8013338:	4686      	mov	lr, r0
 801333a:	e785      	b.n	8013248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801333c:	0801de7e 	.word	0x0801de7e
 8013340:	0801e4f3 	.word	0x0801e4f3
 8013344:	0801df02 	.word	0x0801df02

08013348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801334c:	ed2d 8b08 	vpush	{d8-d11}
 8013350:	b099      	sub	sp, #100	; 0x64
 8013352:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8013356:	9215      	str	r2, [sp, #84]	; 0x54
 8013358:	9309      	str	r3, [sp, #36]	; 0x24
 801335a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801335c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8013360:	930d      	str	r3, [sp, #52]	; 0x34
 8013362:	910c      	str	r1, [sp, #48]	; 0x30
 8013364:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8013368:	9016      	str	r0, [sp, #88]	; 0x58
 801336a:	6850      	ldr	r0, [r2, #4]
 801336c:	6812      	ldr	r2, [r2, #0]
 801336e:	fb00 1303 	mla	r3, r0, r3, r1
 8013372:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8013376:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013378:	681b      	ldr	r3, [r3, #0]
 801337a:	930b      	str	r3, [sp, #44]	; 0x2c
 801337c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801337e:	685e      	ldr	r6, [r3, #4]
 8013380:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013382:	43db      	mvns	r3, r3
 8013384:	b2db      	uxtb	r3, r3
 8013386:	eeb0 aa40 	vmov.f32	s20, s0
 801338a:	eef0 9a60 	vmov.f32	s19, s1
 801338e:	eeb0 9a41 	vmov.f32	s18, s2
 8013392:	eeb0 8a62 	vmov.f32	s16, s5
 8013396:	eef0 8a43 	vmov.f32	s17, s6
 801339a:	eef0 ba44 	vmov.f32	s23, s8
 801339e:	eeb0 ba64 	vmov.f32	s22, s9
 80133a2:	eef0 aa45 	vmov.f32	s21, s10
 80133a6:	3604      	adds	r6, #4
 80133a8:	930a      	str	r3, [sp, #40]	; 0x28
 80133aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80133ac:	2b00      	cmp	r3, #0
 80133ae:	dc03      	bgt.n	80133b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80133b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80133b2:	2b00      	cmp	r3, #0
 80133b4:	f340 8225 	ble.w	8013802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80133b8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80133ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80133be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80133c2:	1e48      	subs	r0, r1, #1
 80133c4:	1e57      	subs	r7, r2, #1
 80133c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80133c8:	2b00      	cmp	r3, #0
 80133ca:	f340 80e3 	ble.w	8013594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80133ce:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80133d2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80133d6:	d406      	bmi.n	80133e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80133d8:	4584      	cmp	ip, r0
 80133da:	da04      	bge.n	80133e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80133dc:	2b00      	cmp	r3, #0
 80133de:	db02      	blt.n	80133e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80133e0:	42bb      	cmp	r3, r7
 80133e2:	f2c0 80d8 	blt.w	8013596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80133e6:	f11c 0c01 	adds.w	ip, ip, #1
 80133ea:	f100 80c9 	bmi.w	8013580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80133ee:	4561      	cmp	r1, ip
 80133f0:	f2c0 80c6 	blt.w	8013580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80133f4:	3301      	adds	r3, #1
 80133f6:	f100 80c3 	bmi.w	8013580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80133fa:	429a      	cmp	r2, r3
 80133fc:	f2c0 80c0 	blt.w	8013580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8013400:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013404:	4647      	mov	r7, r8
 8013406:	f1bb 0f00 	cmp.w	fp, #0
 801340a:	f340 80e3 	ble.w	80135d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801340e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013410:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013412:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8013416:	689b      	ldr	r3, [r3, #8]
 8013418:	ea5f 422a 	movs.w	r2, sl, asr #16
 801341c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8013420:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8013424:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8013428:	f100 8121 	bmi.w	801366e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801342c:	f103 39ff 	add.w	r9, r3, #4294967295
 8013430:	454a      	cmp	r2, r9
 8013432:	f280 811c 	bge.w	801366e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013436:	f1bc 0f00 	cmp.w	ip, #0
 801343a:	f2c0 8118 	blt.w	801366e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801343e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8013442:	45cc      	cmp	ip, r9
 8013444:	f280 8113 	bge.w	801366e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013448:	b21b      	sxth	r3, r3
 801344a:	fb0c 2203 	mla	r2, ip, r3, r2
 801344e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013450:	eb04 0902 	add.w	r9, r4, r2
 8013454:	5ca2      	ldrb	r2, [r4, r2]
 8013456:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801345a:	2800      	cmp	r0, #0
 801345c:	f000 80fe 	beq.w	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013460:	f899 2001 	ldrb.w	r2, [r9, #1]
 8013464:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013468:	9211      	str	r2, [sp, #68]	; 0x44
 801346a:	b151      	cbz	r1, 8013482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801346c:	eb09 0203 	add.w	r2, r9, r3
 8013470:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013474:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013478:	930f      	str	r3, [sp, #60]	; 0x3c
 801347a:	7853      	ldrb	r3, [r2, #1]
 801347c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013480:	9312      	str	r3, [sp, #72]	; 0x48
 8013482:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013484:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013486:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801348a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801348e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013492:	ea4c 0c03 	orr.w	ip, ip, r3
 8013496:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013498:	041b      	lsls	r3, r3, #16
 801349a:	fb10 f201 	smulbb	r2, r0, r1
 801349e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80134a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80134a6:	10d2      	asrs	r2, r2, #3
 80134a8:	4323      	orrs	r3, r4
 80134aa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80134ae:	4353      	muls	r3, r2
 80134b0:	fb09 330c 	mla	r3, r9, ip, r3
 80134b4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80134b8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80134bc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80134c0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80134c4:	f1c1 0c10 	rsb	ip, r1, #16
 80134c8:	ebac 0c00 	sub.w	ip, ip, r0
 80134cc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80134d0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80134d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80134d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80134d8:	0418      	lsls	r0, r3, #16
 80134da:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80134de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80134e2:	4318      	orrs	r0, r3
 80134e4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80134e8:	fb02 c200 	mla	r2, r2, r0, ip
 80134ec:	0d53      	lsrs	r3, r2, #21
 80134ee:	0952      	lsrs	r2, r2, #5
 80134f0:	8838      	ldrh	r0, [r7, #0]
 80134f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80134f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80134fa:	431a      	orrs	r2, r3
 80134fc:	b292      	uxth	r2, r2
 80134fe:	1201      	asrs	r1, r0, #8
 8013500:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8013504:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8013508:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801350c:	fb11 f104 	smulbb	r1, r1, r4
 8013510:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8013514:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013518:	00c0      	lsls	r0, r0, #3
 801351a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801351e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013522:	10d1      	asrs	r1, r2, #3
 8013524:	b2c0      	uxtb	r0, r0
 8013526:	00d2      	lsls	r2, r2, #3
 8013528:	b2d2      	uxtb	r2, r2
 801352a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801352e:	fb1e fe04 	smulbb	lr, lr, r4
 8013532:	fb10 f004 	smulbb	r0, r0, r4
 8013536:	fa1f fc8c 	uxth.w	ip, ip
 801353a:	fb01 e103 	mla	r1, r1, r3, lr
 801353e:	fb02 0303 	mla	r3, r2, r3, r0
 8013542:	b29a      	uxth	r2, r3
 8013544:	f10c 0301 	add.w	r3, ip, #1
 8013548:	b289      	uxth	r1, r1
 801354a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801354e:	1c53      	adds	r3, r2, #1
 8013550:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013554:	1c4a      	adds	r2, r1, #1
 8013556:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801355a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801355e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8013562:	0949      	lsrs	r1, r1, #5
 8013564:	ea43 030c 	orr.w	r3, r3, ip
 8013568:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801356c:	430b      	orrs	r3, r1
 801356e:	803b      	strh	r3, [r7, #0]
 8013570:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013572:	449a      	add	sl, r3
 8013574:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013576:	3702      	adds	r7, #2
 8013578:	441d      	add	r5, r3
 801357a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801357e:	e742      	b.n	8013406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8013580:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013582:	449a      	add	sl, r3
 8013584:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013586:	441d      	add	r5, r3
 8013588:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801358a:	3b01      	subs	r3, #1
 801358c:	9309      	str	r3, [sp, #36]	; 0x24
 801358e:	f108 0802 	add.w	r8, r8, #2
 8013592:	e718      	b.n	80133c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013594:	d023      	beq.n	80135de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8013596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013598:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801359a:	3b01      	subs	r3, #1
 801359c:	fb00 a003 	mla	r0, r0, r3, sl
 80135a0:	1400      	asrs	r0, r0, #16
 80135a2:	f53f af2d 	bmi.w	8013400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80135a6:	3901      	subs	r1, #1
 80135a8:	4288      	cmp	r0, r1
 80135aa:	f6bf af29 	bge.w	8013400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80135ae:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80135b0:	fb01 5303 	mla	r3, r1, r3, r5
 80135b4:	141b      	asrs	r3, r3, #16
 80135b6:	f53f af23 	bmi.w	8013400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80135ba:	3a01      	subs	r2, #1
 80135bc:	4293      	cmp	r3, r2
 80135be:	f6bf af1f 	bge.w	8013400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80135c2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80135c6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80135ca:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80135ce:	f1be 0f00 	cmp.w	lr, #0
 80135d2:	dc6c      	bgt.n	80136ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 80135d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135d6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80135da:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80135de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80135e0:	2b00      	cmp	r3, #0
 80135e2:	f340 810e 	ble.w	8013802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80135e6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80135ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80135ee:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80135f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80135f4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80135f8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80135fc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013600:	eef0 6a48 	vmov.f32	s13, s16
 8013604:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013608:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801360c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013610:	ee16 aa90 	vmov	sl, s13
 8013614:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013618:	eef0 6a68 	vmov.f32	s13, s17
 801361c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013620:	ee18 2a10 	vmov	r2, s16
 8013624:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013628:	fb92 f3f3 	sdiv	r3, r2, r3
 801362c:	ee18 2a90 	vmov	r2, s17
 8013630:	932d      	str	r3, [sp, #180]	; 0xb4
 8013632:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013634:	fb92 f3f3 	sdiv	r3, r2, r3
 8013638:	932e      	str	r3, [sp, #184]	; 0xb8
 801363a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801363c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801363e:	3b01      	subs	r3, #1
 8013640:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013644:	930c      	str	r3, [sp, #48]	; 0x30
 8013646:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013648:	bf08      	it	eq
 801364a:	4613      	moveq	r3, r2
 801364c:	ee16 5a90 	vmov	r5, s13
 8013650:	9309      	str	r3, [sp, #36]	; 0x24
 8013652:	eef0 8a67 	vmov.f32	s17, s15
 8013656:	eeb0 8a47 	vmov.f32	s16, s14
 801365a:	e6a6      	b.n	80133aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801365c:	2900      	cmp	r1, #0
 801365e:	f43f af10 	beq.w	8013482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013662:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013666:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801366a:	930f      	str	r3, [sp, #60]	; 0x3c
 801366c:	e709      	b.n	8013482 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801366e:	f112 0901 	adds.w	r9, r2, #1
 8013672:	f53f af7d 	bmi.w	8013570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013676:	454b      	cmp	r3, r9
 8013678:	f6ff af7a 	blt.w	8013570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801367c:	f11c 0901 	adds.w	r9, ip, #1
 8013680:	f53f af76 	bmi.w	8013570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013684:	45ce      	cmp	lr, r9
 8013686:	f6ff af73 	blt.w	8013570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801368a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801368c:	9202      	str	r2, [sp, #8]
 801368e:	b21b      	sxth	r3, r3
 8013690:	fa0f f28e 	sxth.w	r2, lr
 8013694:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8013698:	e9cd c003 	strd	ip, r0, [sp, #12]
 801369c:	9201      	str	r2, [sp, #4]
 801369e:	9300      	str	r3, [sp, #0]
 80136a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80136a2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80136a4:	4633      	mov	r3, r6
 80136a6:	4639      	mov	r1, r7
 80136a8:	f7ff fd70 	bl	801318c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80136ac:	e760      	b.n	8013570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80136ae:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80136b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80136b2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80136b6:	ea4f 422a 	mov.w	r2, sl, asr #16
 80136ba:	1429      	asrs	r1, r5, #16
 80136bc:	fb03 2101 	mla	r1, r3, r1, r2
 80136c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80136c2:	440a      	add	r2, r1
 80136c4:	5c61      	ldrb	r1, [r4, r1]
 80136c6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80136ca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80136ce:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80136d2:	f1bc 0f00 	cmp.w	ip, #0
 80136d6:	f000 808c 	beq.w	80137f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80136da:	7857      	ldrb	r7, [r2, #1]
 80136dc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80136e0:	9413      	str	r4, [sp, #76]	; 0x4c
 80136e2:	b140      	cbz	r0, 80136f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80136e4:	18d7      	adds	r7, r2, r3
 80136e6:	5cd3      	ldrb	r3, [r2, r3]
 80136e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80136ec:	9310      	str	r3, [sp, #64]	; 0x40
 80136ee:	787b      	ldrb	r3, [r7, #1]
 80136f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80136f4:	9314      	str	r3, [sp, #80]	; 0x50
 80136f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80136f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80136fa:	fb1c f200 	smulbb	r2, ip, r0
 80136fe:	041f      	lsls	r7, r3, #16
 8013700:	10d2      	asrs	r2, r2, #3
 8013702:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013706:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801370a:	431f      	orrs	r7, r3
 801370c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013710:	9317      	str	r3, [sp, #92]	; 0x5c
 8013712:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013714:	041b      	lsls	r3, r3, #16
 8013716:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801371a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801371e:	ea43 030b 	orr.w	r3, r3, fp
 8013722:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8013724:	4353      	muls	r3, r2
 8013726:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801372a:	fb04 3707 	mla	r7, r4, r7, r3
 801372e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013732:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013736:	ea43 0b01 	orr.w	fp, r3, r1
 801373a:	f1c0 0110 	rsb	r1, r0, #16
 801373e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013740:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013742:	eba1 0c0c 	sub.w	ip, r1, ip
 8013746:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801374a:	fb0c 770b 	mla	r7, ip, fp, r7
 801374e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013752:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013756:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801375a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801375e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013762:	fb02 770c 	mla	r7, r2, ip, r7
 8013766:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013768:	0d79      	lsrs	r1, r7, #21
 801376a:	097f      	lsrs	r7, r7, #5
 801376c:	8812      	ldrh	r2, [r2, #0]
 801376e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013772:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013776:	430f      	orrs	r7, r1
 8013778:	b2bb      	uxth	r3, r7
 801377a:	1211      	asrs	r1, r2, #8
 801377c:	1218      	asrs	r0, r3, #8
 801377e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013782:	fb11 f104 	smulbb	r1, r1, r4
 8013786:	10d7      	asrs	r7, r2, #3
 8013788:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801378c:	00d2      	lsls	r2, r2, #3
 801378e:	fb00 1009 	mla	r0, r0, r9, r1
 8013792:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013796:	10d9      	asrs	r1, r3, #3
 8013798:	b2d2      	uxtb	r2, r2
 801379a:	00db      	lsls	r3, r3, #3
 801379c:	fb17 f704 	smulbb	r7, r7, r4
 80137a0:	fb12 f204 	smulbb	r2, r2, r4
 80137a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80137a8:	b2db      	uxtb	r3, r3
 80137aa:	b280      	uxth	r0, r0
 80137ac:	fb01 7109 	mla	r1, r1, r9, r7
 80137b0:	fb03 2309 	mla	r3, r3, r9, r2
 80137b4:	b29b      	uxth	r3, r3
 80137b6:	b289      	uxth	r1, r1
 80137b8:	1c42      	adds	r2, r0, #1
 80137ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80137be:	1c4f      	adds	r7, r1, #1
 80137c0:	1c5a      	adds	r2, r3, #1
 80137c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80137c6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80137ca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80137ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80137d2:	0949      	lsrs	r1, r1, #5
 80137d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80137d6:	4310      	orrs	r0, r2
 80137d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80137dc:	4308      	orrs	r0, r1
 80137de:	f823 0b02 	strh.w	r0, [r3], #2
 80137e2:	930e      	str	r3, [sp, #56]	; 0x38
 80137e4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80137e6:	449a      	add	sl, r3
 80137e8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80137ea:	f10e 3eff 	add.w	lr, lr, #4294967295
 80137ee:	441d      	add	r5, r3
 80137f0:	e6ed      	b.n	80135ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 80137f2:	2800      	cmp	r0, #0
 80137f4:	f43f af7f 	beq.w	80136f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80137f8:	5cd3      	ldrb	r3, [r2, r3]
 80137fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80137fe:	9310      	str	r3, [sp, #64]	; 0x40
 8013800:	e779      	b.n	80136f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8013802:	b019      	add	sp, #100	; 0x64
 8013804:	ecbd 8b08 	vpop	{d8-d11}
 8013808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801380c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801380c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013810:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013814:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8013818:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801381c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013820:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013824:	8808      	ldrh	r0, [r1, #0]
 8013826:	fb06 570e 	mla	r7, r6, lr, r5
 801382a:	2e00      	cmp	r6, #0
 801382c:	eb02 0807 	add.w	r8, r2, r7
 8013830:	db38      	blt.n	80138a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013832:	45b1      	cmp	r9, r6
 8013834:	dd36      	ble.n	80138a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013836:	2d00      	cmp	r5, #0
 8013838:	db32      	blt.n	80138a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801383a:	45ae      	cmp	lr, r5
 801383c:	dd30      	ble.n	80138a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801383e:	5dd2      	ldrb	r2, [r2, r7]
 8013840:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013844:	1c6a      	adds	r2, r5, #1
 8013846:	d430      	bmi.n	80138aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013848:	4596      	cmp	lr, r2
 801384a:	dd2e      	ble.n	80138aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801384c:	b36c      	cbz	r4, 80138aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801384e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013852:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013856:	3601      	adds	r6, #1
 8013858:	d42b      	bmi.n	80138b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801385a:	45b1      	cmp	r9, r6
 801385c:	dd29      	ble.n	80138b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801385e:	f1bc 0f00 	cmp.w	ip, #0
 8013862:	d028      	beq.n	80138b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013864:	2d00      	cmp	r5, #0
 8013866:	db22      	blt.n	80138ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013868:	45ae      	cmp	lr, r5
 801386a:	dd20      	ble.n	80138ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801386c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013870:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013874:	3501      	adds	r5, #1
 8013876:	d407      	bmi.n	8013888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013878:	45ae      	cmp	lr, r5
 801387a:	dd05      	ble.n	8013888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801387c:	b134      	cbz	r4, 801388c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801387e:	44c6      	add	lr, r8
 8013880:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013884:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013888:	2c0f      	cmp	r4, #15
 801388a:	d802      	bhi.n	8013892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801388c:	f1bc 0f0f 	cmp.w	ip, #15
 8013890:	d914      	bls.n	80138bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8013892:	4b26      	ldr	r3, [pc, #152]	; (801392c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013894:	4a26      	ldr	r2, [pc, #152]	; (8013930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013896:	4827      	ldr	r0, [pc, #156]	; (8013934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013898:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801389c:	f006 fd8c 	bl	801a3b8 <__assert_func>
 80138a0:	4607      	mov	r7, r0
 80138a2:	e7cf      	b.n	8013844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80138a4:	4602      	mov	r2, r0
 80138a6:	4607      	mov	r7, r0
 80138a8:	e7d5      	b.n	8013856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80138aa:	4602      	mov	r2, r0
 80138ac:	e7d3      	b.n	8013856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80138ae:	4606      	mov	r6, r0
 80138b0:	e7e0      	b.n	8013874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80138b2:	4606      	mov	r6, r0
 80138b4:	e7e8      	b.n	8013888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80138b6:	2c0f      	cmp	r4, #15
 80138b8:	d8eb      	bhi.n	8013892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80138ba:	4606      	mov	r6, r0
 80138bc:	043d      	lsls	r5, r7, #16
 80138be:	fb14 f30c 	smulbb	r3, r4, ip
 80138c2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80138c6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80138ca:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80138ce:	10db      	asrs	r3, r3, #3
 80138d0:	432f      	orrs	r7, r5
 80138d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80138d6:	f1cc 0510 	rsb	r5, ip, #16
 80138da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80138de:	1b2d      	subs	r5, r5, r4
 80138e0:	ea4e 0202 	orr.w	r2, lr, r2
 80138e4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80138e8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80138ec:	4354      	muls	r4, r2
 80138ee:	fb05 4507 	mla	r5, r5, r7, r4
 80138f2:	0404      	lsls	r4, r0, #16
 80138f4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80138f8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80138fc:	4320      	orrs	r0, r4
 80138fe:	fb03 5400 	mla	r4, r3, r0, r5
 8013902:	0430      	lsls	r0, r6, #16
 8013904:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013908:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801390c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8013910:	4330      	orrs	r0, r6
 8013912:	fb03 4000 	mla	r0, r3, r0, r4
 8013916:	0d43      	lsrs	r3, r0, #21
 8013918:	0940      	lsrs	r0, r0, #5
 801391a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801391e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013922:	4318      	orrs	r0, r3
 8013924:	8008      	strh	r0, [r1, #0]
 8013926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801392a:	bf00      	nop
 801392c:	0801de7e 	.word	0x0801de7e
 8013930:	0801e4f3 	.word	0x0801e4f3
 8013934:	0801df02 	.word	0x0801df02

08013938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801393c:	ed2d 8b0a 	vpush	{d8-d12}
 8013940:	b093      	sub	sp, #76	; 0x4c
 8013942:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8013946:	920f      	str	r2, [sp, #60]	; 0x3c
 8013948:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801394a:	9108      	str	r1, [sp, #32]
 801394c:	9306      	str	r3, [sp, #24]
 801394e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8013952:	9010      	str	r0, [sp, #64]	; 0x40
 8013954:	6850      	ldr	r0, [r2, #4]
 8013956:	6812      	ldr	r2, [r2, #0]
 8013958:	fb00 1303 	mla	r3, r0, r3, r1
 801395c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8013960:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013962:	681b      	ldr	r3, [r3, #0]
 8013964:	9307      	str	r3, [sp, #28]
 8013966:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013968:	685f      	ldr	r7, [r3, #4]
 801396a:	eeb0 aa40 	vmov.f32	s20, s0
 801396e:	eef0 9a60 	vmov.f32	s19, s1
 8013972:	eeb0 9a41 	vmov.f32	s18, s2
 8013976:	eeb0 8a62 	vmov.f32	s16, s5
 801397a:	eef0 8a43 	vmov.f32	s17, s6
 801397e:	eeb0 ca44 	vmov.f32	s24, s8
 8013982:	eef0 ba64 	vmov.f32	s23, s9
 8013986:	eeb0 ba45 	vmov.f32	s22, s10
 801398a:	3704      	adds	r7, #4
 801398c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013990:	9b08      	ldr	r3, [sp, #32]
 8013992:	2b00      	cmp	r3, #0
 8013994:	dc03      	bgt.n	801399e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013996:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013998:	2b00      	cmp	r3, #0
 801399a:	f340 81b2 	ble.w	8013d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801399e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80139a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80139a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80139a8:	1e48      	subs	r0, r1, #1
 80139aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80139ae:	9b06      	ldr	r3, [sp, #24]
 80139b0:	2b00      	cmp	r3, #0
 80139b2:	f340 80a9 	ble.w	8013b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80139b6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80139ba:	ea4f 4326 	mov.w	r3, r6, asr #16
 80139be:	d406      	bmi.n	80139ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80139c0:	4586      	cmp	lr, r0
 80139c2:	da04      	bge.n	80139ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80139c4:	2b00      	cmp	r3, #0
 80139c6:	db02      	blt.n	80139ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80139c8:	4563      	cmp	r3, ip
 80139ca:	f2c0 809e 	blt.w	8013b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80139ce:	f11e 0e01 	adds.w	lr, lr, #1
 80139d2:	f100 808f 	bmi.w	8013af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80139d6:	4571      	cmp	r1, lr
 80139d8:	f2c0 808c 	blt.w	8013af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80139dc:	3301      	adds	r3, #1
 80139de:	f100 8089 	bmi.w	8013af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80139e2:	429a      	cmp	r2, r3
 80139e4:	f2c0 8086 	blt.w	8013af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80139e8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80139ec:	46c8      	mov	r8, r9
 80139ee:	f1bb 0f00 	cmp.w	fp, #0
 80139f2:	f340 80a6 	ble.w	8013b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80139f6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80139f8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80139fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80139fe:	689b      	ldr	r3, [r3, #8]
 8013a00:	1422      	asrs	r2, r4, #16
 8013a02:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8013a06:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8013a0a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8013a0e:	f100 80e3 	bmi.w	8013bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013a12:	f103 3aff 	add.w	sl, r3, #4294967295
 8013a16:	4552      	cmp	r2, sl
 8013a18:	f280 80de 	bge.w	8013bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013a1c:	f1bc 0f00 	cmp.w	ip, #0
 8013a20:	f2c0 80da 	blt.w	8013bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013a24:	f10e 3aff 	add.w	sl, lr, #4294967295
 8013a28:	45d4      	cmp	ip, sl
 8013a2a:	f280 80d5 	bge.w	8013bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013a2e:	b21b      	sxth	r3, r3
 8013a30:	fb0c 2203 	mla	r2, ip, r3, r2
 8013a34:	9d07      	ldr	r5, [sp, #28]
 8013a36:	eb05 0a02 	add.w	sl, r5, r2
 8013a3a:	5caa      	ldrb	r2, [r5, r2]
 8013a3c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8013a40:	2800      	cmp	r0, #0
 8013a42:	f000 80c0 	beq.w	8013bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8013a46:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013a4a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8013a4e:	920b      	str	r2, [sp, #44]	; 0x2c
 8013a50:	b151      	cbz	r1, 8013a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8013a52:	eb0a 0203 	add.w	r2, sl, r3
 8013a56:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8013a5a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013a5e:	9309      	str	r3, [sp, #36]	; 0x24
 8013a60:	7853      	ldrb	r3, [r2, #1]
 8013a62:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013a66:	930c      	str	r3, [sp, #48]	; 0x30
 8013a68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013a6c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013a70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013a74:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013a78:	ea4c 0c03 	orr.w	ip, ip, r3
 8013a7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a7e:	041b      	lsls	r3, r3, #16
 8013a80:	fb10 f201 	smulbb	r2, r0, r1
 8013a84:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013a88:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013a8c:	10d2      	asrs	r2, r2, #3
 8013a8e:	432b      	orrs	r3, r5
 8013a90:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8013a94:	4353      	muls	r3, r2
 8013a96:	fb0a 330c 	mla	r3, sl, ip, r3
 8013a9a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013a9e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013aa2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013aa6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013aaa:	f1c1 0c10 	rsb	ip, r1, #16
 8013aae:	ebac 0c00 	sub.w	ip, ip, r0
 8013ab2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013ab6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013aba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013abc:	0418      	lsls	r0, r3, #16
 8013abe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013ac2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013ac6:	4318      	orrs	r0, r3
 8013ac8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013acc:	fb02 c200 	mla	r2, r2, r0, ip
 8013ad0:	0d53      	lsrs	r3, r2, #21
 8013ad2:	0952      	lsrs	r2, r2, #5
 8013ad4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013ad8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013adc:	431a      	orrs	r2, r3
 8013ade:	f8a8 2000 	strh.w	r2, [r8]
 8013ae2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013ae4:	441c      	add	r4, r3
 8013ae6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013ae8:	f108 0802 	add.w	r8, r8, #2
 8013aec:	441e      	add	r6, r3
 8013aee:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013af2:	e77c      	b.n	80139ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013af4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013af6:	441c      	add	r4, r3
 8013af8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013afa:	441e      	add	r6, r3
 8013afc:	9b06      	ldr	r3, [sp, #24]
 8013afe:	3b01      	subs	r3, #1
 8013b00:	9306      	str	r3, [sp, #24]
 8013b02:	f109 0902 	add.w	r9, r9, #2
 8013b06:	e752      	b.n	80139ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013b08:	d020      	beq.n	8013b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013b0a:	9b06      	ldr	r3, [sp, #24]
 8013b0c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013b0e:	3b01      	subs	r3, #1
 8013b10:	fb00 4003 	mla	r0, r0, r3, r4
 8013b14:	1400      	asrs	r0, r0, #16
 8013b16:	f53f af67 	bmi.w	80139e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013b1a:	3901      	subs	r1, #1
 8013b1c:	4288      	cmp	r0, r1
 8013b1e:	f6bf af63 	bge.w	80139e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013b22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013b24:	fb01 6303 	mla	r3, r1, r3, r6
 8013b28:	141b      	asrs	r3, r3, #16
 8013b2a:	f53f af5d 	bmi.w	80139e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013b2e:	3a01      	subs	r2, #1
 8013b30:	4293      	cmp	r3, r2
 8013b32:	f6bf af59 	bge.w	80139e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013b36:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8013b3a:	46ca      	mov	sl, r9
 8013b3c:	f1b8 0f00 	cmp.w	r8, #0
 8013b40:	dc67      	bgt.n	8013c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8013b42:	9b06      	ldr	r3, [sp, #24]
 8013b44:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013b48:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8013b4c:	9b08      	ldr	r3, [sp, #32]
 8013b4e:	2b00      	cmp	r3, #0
 8013b50:	f340 80d7 	ble.w	8013d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8013b54:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8013b58:	ee79 9aab 	vadd.f32	s19, s19, s23
 8013b5c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013b60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013b62:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8013b66:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013b6a:	eef0 6a48 	vmov.f32	s13, s16
 8013b6e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013b72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b76:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013b7a:	ee16 4a90 	vmov	r4, s13
 8013b7e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013b82:	eef0 6a68 	vmov.f32	s13, s17
 8013b86:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013b8a:	ee18 2a10 	vmov	r2, s16
 8013b8e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b96:	ee18 2a90 	vmov	r2, s17
 8013b9a:	9329      	str	r3, [sp, #164]	; 0xa4
 8013b9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ba2:	932a      	str	r3, [sp, #168]	; 0xa8
 8013ba4:	9b08      	ldr	r3, [sp, #32]
 8013ba6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ba8:	3b01      	subs	r3, #1
 8013baa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013bae:	9308      	str	r3, [sp, #32]
 8013bb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013bb2:	bf08      	it	eq
 8013bb4:	4613      	moveq	r3, r2
 8013bb6:	ee16 6a90 	vmov	r6, s13
 8013bba:	9306      	str	r3, [sp, #24]
 8013bbc:	eef0 8a67 	vmov.f32	s17, s15
 8013bc0:	eeb0 8a47 	vmov.f32	s16, s14
 8013bc4:	e6e4      	b.n	8013990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013bc6:	2900      	cmp	r1, #0
 8013bc8:	f43f af4e 	beq.w	8013a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8013bcc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8013bd0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013bd4:	9309      	str	r3, [sp, #36]	; 0x24
 8013bd6:	e747      	b.n	8013a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8013bd8:	f112 0a01 	adds.w	sl, r2, #1
 8013bdc:	d481      	bmi.n	8013ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013bde:	4553      	cmp	r3, sl
 8013be0:	f6ff af7f 	blt.w	8013ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013be4:	f11c 0a01 	adds.w	sl, ip, #1
 8013be8:	f53f af7b 	bmi.w	8013ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013bec:	45d6      	cmp	lr, sl
 8013bee:	f6ff af78 	blt.w	8013ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013bf2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8013bf6:	b21b      	sxth	r3, r3
 8013bf8:	fa0f f28e 	sxth.w	r2, lr
 8013bfc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013c00:	9201      	str	r2, [sp, #4]
 8013c02:	9300      	str	r3, [sp, #0]
 8013c04:	9a07      	ldr	r2, [sp, #28]
 8013c06:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013c08:	463b      	mov	r3, r7
 8013c0a:	4641      	mov	r1, r8
 8013c0c:	f7ff fdfe 	bl	801380c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8013c10:	e767      	b.n	8013ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013c12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013c14:	9d07      	ldr	r5, [sp, #28]
 8013c16:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8013c1a:	1422      	asrs	r2, r4, #16
 8013c1c:	1431      	asrs	r1, r6, #16
 8013c1e:	fb03 2101 	mla	r1, r3, r1, r2
 8013c22:	9a07      	ldr	r2, [sp, #28]
 8013c24:	440a      	add	r2, r1
 8013c26:	5c69      	ldrb	r1, [r5, r1]
 8013c28:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8013c2c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8013c30:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8013c34:	f1be 0f00 	cmp.w	lr, #0
 8013c38:	d05c      	beq.n	8013cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8013c3a:	f892 c001 	ldrb.w	ip, [r2, #1]
 8013c3e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8013c42:	950d      	str	r5, [sp, #52]	; 0x34
 8013c44:	b150      	cbz	r0, 8013c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013c46:	eb02 0c03 	add.w	ip, r2, r3
 8013c4a:	5cd3      	ldrb	r3, [r2, r3]
 8013c4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013c50:	930a      	str	r3, [sp, #40]	; 0x28
 8013c52:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8013c56:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013c5a:	930e      	str	r3, [sp, #56]	; 0x38
 8013c5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c5e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013c60:	fb1e f200 	smulbb	r2, lr, r0
 8013c64:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013c68:	10d2      	asrs	r2, r2, #3
 8013c6a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013c6e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013c72:	ea4c 0c03 	orr.w	ip, ip, r3
 8013c76:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8013c7a:	9311      	str	r3, [sp, #68]	; 0x44
 8013c7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c7e:	041b      	lsls	r3, r3, #16
 8013c80:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013c84:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013c88:	ea43 030b 	orr.w	r3, r3, fp
 8013c8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013c8e:	4353      	muls	r3, r2
 8013c90:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013c94:	fb05 3c0c 	mla	ip, r5, ip, r3
 8013c98:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013c9c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013ca0:	ea43 0b01 	orr.w	fp, r3, r1
 8013ca4:	f1c0 0110 	rsb	r1, r0, #16
 8013ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013caa:	eba1 0e0e 	sub.w	lr, r1, lr
 8013cae:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8013cb2:	fb0e cc0b 	mla	ip, lr, fp, ip
 8013cb6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8013cba:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8013cbe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8013cc2:	ea4b 0e0e 	orr.w	lr, fp, lr
 8013cc6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013cca:	fb02 cc0e 	mla	ip, r2, lr, ip
 8013cce:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8013cd2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8013cd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013cda:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8013cde:	ea43 0c0c 	orr.w	ip, r3, ip
 8013ce2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013ce4:	f82a cb02 	strh.w	ip, [sl], #2
 8013ce8:	441c      	add	r4, r3
 8013cea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013cec:	f108 38ff 	add.w	r8, r8, #4294967295
 8013cf0:	441e      	add	r6, r3
 8013cf2:	e723      	b.n	8013b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8013cf4:	2800      	cmp	r0, #0
 8013cf6:	d0b1      	beq.n	8013c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013cf8:	5cd3      	ldrb	r3, [r2, r3]
 8013cfa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013cfe:	930a      	str	r3, [sp, #40]	; 0x28
 8013d00:	e7ac      	b.n	8013c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013d02:	b013      	add	sp, #76	; 0x4c
 8013d04:	ecbd 8b0a 	vpop	{d8-d12}
 8013d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8013d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d10:	468b      	mov	fp, r1
 8013d12:	8809      	ldrh	r1, [r1, #0]
 8013d14:	b089      	sub	sp, #36	; 0x24
 8013d16:	10cd      	asrs	r5, r1, #3
 8013d18:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8013d1c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013d20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013d24:	00c9      	lsls	r1, r1, #3
 8013d26:	9500      	str	r5, [sp, #0]
 8013d28:	b2c9      	uxtb	r1, r1
 8013d2a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8013d2e:	9101      	str	r1, [sp, #4]
 8013d30:	9900      	ldr	r1, [sp, #0]
 8013d32:	9202      	str	r2, [sp, #8]
 8013d34:	fb04 650e 	mla	r5, r4, lr, r6
 8013d38:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013d3c:	eb02 0805 	add.w	r8, r2, r5
 8013d40:	0209      	lsls	r1, r1, #8
 8013d42:	9a01      	ldr	r2, [sp, #4]
 8013d44:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8013d48:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8013d4c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8013d50:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8013d54:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8013d58:	4311      	orrs	r1, r2
 8013d5a:	2c00      	cmp	r4, #0
 8013d5c:	9107      	str	r1, [sp, #28]
 8013d5e:	db43      	blt.n	8013de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013d60:	45a2      	cmp	sl, r4
 8013d62:	dd41      	ble.n	8013de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013d64:	2e00      	cmp	r6, #0
 8013d66:	db3d      	blt.n	8013de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013d68:	45b6      	cmp	lr, r6
 8013d6a:	dd3b      	ble.n	8013de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013d6c:	9a02      	ldr	r2, [sp, #8]
 8013d6e:	5d55      	ldrb	r5, [r2, r5]
 8013d70:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013d74:	441d      	add	r5, r3
 8013d76:	1c72      	adds	r2, r6, #1
 8013d78:	d439      	bmi.n	8013dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013d7a:	4596      	cmp	lr, r2
 8013d7c:	dd37      	ble.n	8013dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013d7e:	2f00      	cmp	r7, #0
 8013d80:	d035      	beq.n	8013dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013d82:	f898 1001 	ldrb.w	r1, [r8, #1]
 8013d86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013d8a:	4419      	add	r1, r3
 8013d8c:	3401      	adds	r4, #1
 8013d8e:	d432      	bmi.n	8013df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013d90:	45a2      	cmp	sl, r4
 8013d92:	dd30      	ble.n	8013df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013d94:	b378      	cbz	r0, 8013df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013d96:	2e00      	cmp	r6, #0
 8013d98:	db2b      	blt.n	8013df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8013d9a:	45b6      	cmp	lr, r6
 8013d9c:	dd29      	ble.n	8013df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8013d9e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8013da2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013da6:	441c      	add	r4, r3
 8013da8:	3601      	adds	r6, #1
 8013daa:	d427      	bmi.n	8013dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013dac:	45b6      	cmp	lr, r6
 8013dae:	dd25      	ble.n	8013dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013db0:	b327      	cbz	r7, 8013dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013db2:	44c6      	add	lr, r8
 8013db4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8013db8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013dbc:	4413      	add	r3, r2
 8013dbe:	782a      	ldrb	r2, [r5, #0]
 8013dc0:	9202      	str	r2, [sp, #8]
 8013dc2:	780a      	ldrb	r2, [r1, #0]
 8013dc4:	9203      	str	r2, [sp, #12]
 8013dc6:	7822      	ldrb	r2, [r4, #0]
 8013dc8:	9204      	str	r2, [sp, #16]
 8013dca:	2f0f      	cmp	r7, #15
 8013dcc:	781a      	ldrb	r2, [r3, #0]
 8013dce:	9205      	str	r2, [sp, #20]
 8013dd0:	d801      	bhi.n	8013dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8013dd2:	280f      	cmp	r0, #15
 8013dd4:	d914      	bls.n	8013e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8013dd6:	4b3f      	ldr	r3, [pc, #252]	; (8013ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8013dd8:	4a3f      	ldr	r2, [pc, #252]	; (8013ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8013dda:	4840      	ldr	r0, [pc, #256]	; (8013edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8013ddc:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8013de0:	f006 faea 	bl	801a3b8 <__assert_func>
 8013de4:	ad07      	add	r5, sp, #28
 8013de6:	e7c6      	b.n	8013d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8013de8:	a907      	add	r1, sp, #28
 8013dea:	460d      	mov	r5, r1
 8013dec:	e7ce      	b.n	8013d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013dee:	a907      	add	r1, sp, #28
 8013df0:	e7cc      	b.n	8013d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013df2:	ac07      	add	r4, sp, #28
 8013df4:	e7d8      	b.n	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8013df6:	ab07      	add	r3, sp, #28
 8013df8:	461c      	mov	r4, r3
 8013dfa:	e7e0      	b.n	8013dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013dfc:	ab07      	add	r3, sp, #28
 8013dfe:	e7de      	b.n	8013dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013e00:	b2ba      	uxth	r2, r7
 8013e02:	b280      	uxth	r0, r0
 8013e04:	fb02 fa00 	mul.w	sl, r2, r0
 8013e08:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8013e0c:	0112      	lsls	r2, r2, #4
 8013e0e:	b280      	uxth	r0, r0
 8013e10:	f891 8002 	ldrb.w	r8, [r1, #2]
 8013e14:	7849      	ldrb	r1, [r1, #1]
 8013e16:	78ae      	ldrb	r6, [r5, #2]
 8013e18:	786d      	ldrb	r5, [r5, #1]
 8013e1a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8013e1e:	eba2 020a 	sub.w	r2, r2, sl
 8013e22:	b292      	uxth	r2, r2
 8013e24:	ebae 0e00 	sub.w	lr, lr, r0
 8013e28:	fa1f fe8e 	uxth.w	lr, lr
 8013e2c:	4351      	muls	r1, r2
 8013e2e:	fb02 f808 	mul.w	r8, r2, r8
 8013e32:	fb0e 8806 	mla	r8, lr, r6, r8
 8013e36:	fb0e 1505 	mla	r5, lr, r5, r1
 8013e3a:	78a6      	ldrb	r6, [r4, #2]
 8013e3c:	7861      	ldrb	r1, [r4, #1]
 8013e3e:	fa1f f78c 	uxth.w	r7, ip
 8013e42:	fb00 8806 	mla	r8, r0, r6, r8
 8013e46:	fb00 5501 	mla	r5, r0, r1, r5
 8013e4a:	789e      	ldrb	r6, [r3, #2]
 8013e4c:	7859      	ldrb	r1, [r3, #1]
 8013e4e:	9b00      	ldr	r3, [sp, #0]
 8013e50:	ea6f 0c0c 	mvn.w	ip, ip
 8013e54:	fa5f fc8c 	uxtb.w	ip, ip
 8013e58:	fb0a 5101 	mla	r1, sl, r1, r5
 8013e5c:	fb13 f50c 	smulbb	r5, r3, ip
 8013e60:	9b03      	ldr	r3, [sp, #12]
 8013e62:	435a      	muls	r2, r3
 8013e64:	9b02      	ldr	r3, [sp, #8]
 8013e66:	fb0e 2203 	mla	r2, lr, r3, r2
 8013e6a:	9b04      	ldr	r3, [sp, #16]
 8013e6c:	fb00 2003 	mla	r0, r0, r3, r2
 8013e70:	9b05      	ldr	r3, [sp, #20]
 8013e72:	fb0a 8606 	mla	r6, sl, r6, r8
 8013e76:	fb19 f90c 	smulbb	r9, r9, ip
 8013e7a:	fb0a 0a03 	mla	sl, sl, r3, r0
 8013e7e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013e82:	9b01      	ldr	r3, [sp, #4]
 8013e84:	fb06 9607 	mla	r6, r6, r7, r9
 8013e88:	b2b6      	uxth	r6, r6
 8013e8a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8013e8e:	fb13 fc0c 	smulbb	ip, r3, ip
 8013e92:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013e96:	fb01 5107 	mla	r1, r1, r7, r5
 8013e9a:	f106 0901 	add.w	r9, r6, #1
 8013e9e:	fb0a c707 	mla	r7, sl, r7, ip
 8013ea2:	b2bf      	uxth	r7, r7
 8013ea4:	b289      	uxth	r1, r1
 8013ea6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013eaa:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8013eae:	1c4d      	adds	r5, r1, #1
 8013eb0:	1c7e      	adds	r6, r7, #1
 8013eb2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013eb6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8013eba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013ebe:	0949      	lsrs	r1, r1, #5
 8013ec0:	ea46 0609 	orr.w	r6, r6, r9
 8013ec4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013ec8:	430e      	orrs	r6, r1
 8013eca:	f8ab 6000 	strh.w	r6, [fp]
 8013ece:	b009      	add	sp, #36	; 0x24
 8013ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ed4:	0801de7e 	.word	0x0801de7e
 8013ed8:	0801e44a 	.word	0x0801e44a
 8013edc:	0801df02 	.word	0x0801df02

08013ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ee4:	ed2d 8b08 	vpush	{d8-d11}
 8013ee8:	b095      	sub	sp, #84	; 0x54
 8013eea:	eeb0 aa40 	vmov.f32	s20, s0
 8013eee:	9212      	str	r2, [sp, #72]	; 0x48
 8013ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8013ef2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013ef4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8013ef8:	930f      	str	r3, [sp, #60]	; 0x3c
 8013efa:	910e      	str	r1, [sp, #56]	; 0x38
 8013efc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8013f00:	9013      	str	r0, [sp, #76]	; 0x4c
 8013f02:	6850      	ldr	r0, [r2, #4]
 8013f04:	6812      	ldr	r2, [r2, #0]
 8013f06:	fb00 1303 	mla	r3, r0, r3, r1
 8013f0a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013f0e:	930a      	str	r3, [sp, #40]	; 0x28
 8013f10:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013f12:	681b      	ldr	r3, [r3, #0]
 8013f14:	930d      	str	r3, [sp, #52]	; 0x34
 8013f16:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013f18:	685c      	ldr	r4, [r3, #4]
 8013f1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f1c:	43db      	mvns	r3, r3
 8013f1e:	b2db      	uxtb	r3, r3
 8013f20:	eef0 9a60 	vmov.f32	s19, s1
 8013f24:	eeb0 9a41 	vmov.f32	s18, s2
 8013f28:	eeb0 8a62 	vmov.f32	s16, s5
 8013f2c:	eef0 8a43 	vmov.f32	s17, s6
 8013f30:	eef0 ba44 	vmov.f32	s23, s8
 8013f34:	eeb0 ba64 	vmov.f32	s22, s9
 8013f38:	eef0 aa45 	vmov.f32	s21, s10
 8013f3c:	3404      	adds	r4, #4
 8013f3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f42:	2b00      	cmp	r3, #0
 8013f44:	dc03      	bgt.n	8013f4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013f48:	2b00      	cmp	r3, #0
 8013f4a:	f340 8255 	ble.w	80143f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8013f4e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013f50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8013f54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013f58:	1e48      	subs	r0, r1, #1
 8013f5a:	1e55      	subs	r5, r2, #1
 8013f5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f5e:	2b00      	cmp	r3, #0
 8013f60:	f340 80f9 	ble.w	8014156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013f64:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8013f66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f68:	1436      	asrs	r6, r6, #16
 8013f6a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013f6e:	d406      	bmi.n	8013f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013f70:	4286      	cmp	r6, r0
 8013f72:	da04      	bge.n	8013f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013f74:	2b00      	cmp	r3, #0
 8013f76:	db02      	blt.n	8013f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013f78:	42ab      	cmp	r3, r5
 8013f7a:	f2c0 80ed 	blt.w	8014158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8013f7e:	3601      	adds	r6, #1
 8013f80:	f100 80da 	bmi.w	8014138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013f84:	42b1      	cmp	r1, r6
 8013f86:	f2c0 80d7 	blt.w	8014138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013f8a:	3301      	adds	r3, #1
 8013f8c:	f100 80d4 	bmi.w	8014138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013f90:	429a      	cmp	r2, r3
 8013f92:	f2c0 80d1 	blt.w	8014138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f98:	9311      	str	r3, [sp, #68]	; 0x44
 8013f9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f9c:	930c      	str	r3, [sp, #48]	; 0x30
 8013f9e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013fa0:	2b00      	cmp	r3, #0
 8013fa2:	f340 80fa 	ble.w	801419a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013fa6:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8013fa8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013faa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013fac:	68c6      	ldr	r6, [r0, #12]
 8013fae:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8013fb0:	141d      	asrs	r5, r3, #16
 8013fb2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013fb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013fb8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013fba:	1400      	asrs	r0, r0, #16
 8013fbc:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013fc0:	6892      	ldr	r2, [r2, #8]
 8013fc2:	f100 813e 	bmi.w	8014242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013fc6:	1e57      	subs	r7, r2, #1
 8013fc8:	42b8      	cmp	r0, r7
 8013fca:	f280 813a 	bge.w	8014242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013fce:	2d00      	cmp	r5, #0
 8013fd0:	f2c0 8137 	blt.w	8014242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013fd4:	1e77      	subs	r7, r6, #1
 8013fd6:	42bd      	cmp	r5, r7
 8013fd8:	f280 8133 	bge.w	8014242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013fdc:	b212      	sxth	r2, r2
 8013fde:	fb05 0002 	mla	r0, r5, r2, r0
 8013fe2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013fe4:	f815 a000 	ldrb.w	sl, [r5, r0]
 8013fe8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8013fec:	182e      	adds	r6, r5, r0
 8013fee:	eb04 050a 	add.w	r5, r4, sl
 8013ff2:	2b00      	cmp	r3, #0
 8013ff4:	f000 8117 	beq.w	8014226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8013ff8:	f896 c001 	ldrb.w	ip, [r6, #1]
 8013ffc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014000:	44a4      	add	ip, r4
 8014002:	2900      	cmp	r1, #0
 8014004:	f000 8117 	beq.w	8014236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8014008:	18b0      	adds	r0, r6, r2
 801400a:	5cb2      	ldrb	r2, [r6, r2]
 801400c:	7840      	ldrb	r0, [r0, #1]
 801400e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014012:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014016:	4422      	add	r2, r4
 8014018:	4420      	add	r0, r4
 801401a:	b29b      	uxth	r3, r3
 801401c:	b289      	uxth	r1, r1
 801401e:	fb03 f901 	mul.w	r9, r3, r1
 8014022:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014026:	011b      	lsls	r3, r3, #4
 8014028:	b289      	uxth	r1, r1
 801402a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801402e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8014032:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8014034:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8014038:	f8b6 e000 	ldrh.w	lr, [r6]
 801403c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8014040:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8014044:	eba3 0309 	sub.w	r3, r3, r9
 8014048:	b29b      	uxth	r3, r3
 801404a:	eba8 0801 	sub.w	r8, r8, r1
 801404e:	fa1f f888 	uxth.w	r8, r8
 8014052:	435f      	muls	r7, r3
 8014054:	fb08 770b 	mla	r7, r8, fp, r7
 8014058:	f892 b002 	ldrb.w	fp, [r2, #2]
 801405c:	9310      	str	r3, [sp, #64]	; 0x40
 801405e:	fb01 770b 	mla	r7, r1, fp, r7
 8014062:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014068:	fb09 770b 	mla	r7, r9, fp, r7
 801406c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014070:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014074:	fb1b fb03 	smulbb	fp, fp, r3
 8014078:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801407c:	fb07 b706 	mla	r7, r7, r6, fp
 8014080:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014082:	f895 b001 	ldrb.w	fp, [r5, #1]
 8014086:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801408a:	f89c c000 	ldrb.w	ip, [ip]
 801408e:	435d      	muls	r5, r3
 8014090:	fb08 550b 	mla	r5, r8, fp, r5
 8014094:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014098:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801409a:	fb01 550b 	mla	r5, r1, fp, r5
 801409e:	f890 b001 	ldrb.w	fp, [r0, #1]
 80140a2:	fb09 550b 	mla	r5, r9, fp, r5
 80140a6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80140aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80140ae:	fb1b fb03 	smulbb	fp, fp, r3
 80140b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80140b4:	fb03 f30c 	mul.w	r3, r3, ip
 80140b8:	f892 c000 	ldrb.w	ip, [r2]
 80140bc:	fb08 330a 	mla	r3, r8, sl, r3
 80140c0:	fb01 330c 	mla	r3, r1, ip, r3
 80140c4:	f890 c000 	ldrb.w	ip, [r0]
 80140c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80140cc:	fb09 3c0c 	mla	ip, r9, ip, r3
 80140d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140d2:	fa5f fe8e 	uxtb.w	lr, lr
 80140d6:	b2bf      	uxth	r7, r7
 80140d8:	fb1e fe03 	smulbb	lr, lr, r3
 80140dc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80140e0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80140e4:	fb05 b506 	mla	r5, r5, r6, fp
 80140e8:	1c7b      	adds	r3, r7, #1
 80140ea:	fb0c e606 	mla	r6, ip, r6, lr
 80140ee:	b2ad      	uxth	r5, r5
 80140f0:	b2b6      	uxth	r6, r6
 80140f2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80140f6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80140fa:	f105 0b01 	add.w	fp, r5, #1
 80140fe:	1c77      	adds	r7, r6, #1
 8014100:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8014104:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8014108:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801410c:	096d      	lsrs	r5, r5, #5
 801410e:	431f      	orrs	r7, r3
 8014110:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014114:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014116:	433d      	orrs	r5, r7
 8014118:	801d      	strh	r5, [r3, #0]
 801411a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801411c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801411e:	3302      	adds	r3, #2
 8014120:	930c      	str	r3, [sp, #48]	; 0x30
 8014122:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014124:	4413      	add	r3, r2
 8014126:	9327      	str	r3, [sp, #156]	; 0x9c
 8014128:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801412a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801412c:	4413      	add	r3, r2
 801412e:	9328      	str	r3, [sp, #160]	; 0xa0
 8014130:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014132:	3b01      	subs	r3, #1
 8014134:	9311      	str	r3, [sp, #68]	; 0x44
 8014136:	e732      	b.n	8013f9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014138:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801413a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801413c:	4433      	add	r3, r6
 801413e:	9327      	str	r3, [sp, #156]	; 0x9c
 8014140:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8014142:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014144:	4433      	add	r3, r6
 8014146:	9328      	str	r3, [sp, #160]	; 0xa0
 8014148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801414a:	3b01      	subs	r3, #1
 801414c:	9309      	str	r3, [sp, #36]	; 0x24
 801414e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014150:	3302      	adds	r3, #2
 8014152:	930a      	str	r3, [sp, #40]	; 0x28
 8014154:	e702      	b.n	8013f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014156:	d027      	beq.n	80141a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801415a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801415c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801415e:	3b01      	subs	r3, #1
 8014160:	fb00 5003 	mla	r0, r0, r3, r5
 8014164:	1400      	asrs	r0, r0, #16
 8014166:	f53f af16 	bmi.w	8013f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801416a:	3901      	subs	r1, #1
 801416c:	4288      	cmp	r0, r1
 801416e:	f6bf af12 	bge.w	8013f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014172:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014174:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014176:	fb01 0303 	mla	r3, r1, r3, r0
 801417a:	141b      	asrs	r3, r3, #16
 801417c:	f53f af0b 	bmi.w	8013f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014180:	3a01      	subs	r2, #1
 8014182:	4293      	cmp	r3, r2
 8014184:	f6bf af07 	bge.w	8013f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801418a:	9311      	str	r3, [sp, #68]	; 0x44
 801418c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8014190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014192:	930c      	str	r3, [sp, #48]	; 0x30
 8014194:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014196:	2b00      	cmp	r3, #0
 8014198:	dc70      	bgt.n	801427c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801419a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801419c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801419e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80141a6:	930a      	str	r3, [sp, #40]	; 0x28
 80141a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80141aa:	2b00      	cmp	r3, #0
 80141ac:	f340 8124 	ble.w	80143f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80141b0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80141b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80141b8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80141bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80141be:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80141c2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80141c6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80141ca:	eef0 6a48 	vmov.f32	s13, s16
 80141ce:	ee69 7a27 	vmul.f32	s15, s18, s15
 80141d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80141d6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80141da:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80141de:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80141e2:	eef0 6a68 	vmov.f32	s13, s17
 80141e6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80141ea:	ee18 2a10 	vmov	r2, s16
 80141ee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80141f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80141f6:	ee18 2a90 	vmov	r2, s17
 80141fa:	9329      	str	r3, [sp, #164]	; 0xa4
 80141fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80141fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014202:	932a      	str	r3, [sp, #168]	; 0xa8
 8014204:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014206:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014208:	3b01      	subs	r3, #1
 801420a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801420e:	930e      	str	r3, [sp, #56]	; 0x38
 8014210:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014212:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8014216:	bf08      	it	eq
 8014218:	4613      	moveq	r3, r2
 801421a:	9309      	str	r3, [sp, #36]	; 0x24
 801421c:	eef0 8a67 	vmov.f32	s17, s15
 8014220:	eeb0 8a47 	vmov.f32	s16, s14
 8014224:	e68c      	b.n	8013f40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014226:	b149      	cbz	r1, 801423c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8014228:	5cb2      	ldrb	r2, [r6, r2]
 801422a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801422e:	4422      	add	r2, r4
 8014230:	4628      	mov	r0, r5
 8014232:	46ac      	mov	ip, r5
 8014234:	e6f1      	b.n	801401a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014236:	4628      	mov	r0, r5
 8014238:	462a      	mov	r2, r5
 801423a:	e6ee      	b.n	801401a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801423c:	4628      	mov	r0, r5
 801423e:	462a      	mov	r2, r5
 8014240:	e7f7      	b.n	8014232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8014242:	1c47      	adds	r7, r0, #1
 8014244:	f53f af69 	bmi.w	801411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014248:	42ba      	cmp	r2, r7
 801424a:	f6ff af66 	blt.w	801411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801424e:	1c6f      	adds	r7, r5, #1
 8014250:	f53f af63 	bmi.w	801411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014254:	42be      	cmp	r6, r7
 8014256:	f6ff af60 	blt.w	801411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801425a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801425c:	9002      	str	r0, [sp, #8]
 801425e:	b236      	sxth	r6, r6
 8014260:	b212      	sxth	r2, r2
 8014262:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8014266:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801426a:	9200      	str	r2, [sp, #0]
 801426c:	9601      	str	r6, [sp, #4]
 801426e:	4623      	mov	r3, r4
 8014270:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8014274:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014276:	f7ff fd49 	bl	8013d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801427a:	e74e      	b.n	801411a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801427c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801427e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014280:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8014282:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014284:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014288:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801428a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801428e:	142d      	asrs	r5, r5, #16
 8014290:	1400      	asrs	r0, r0, #16
 8014292:	fb02 5000 	mla	r0, r2, r0, r5
 8014296:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8014298:	f815 9000 	ldrb.w	r9, [r5, r0]
 801429c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80142a0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80142a4:	182e      	adds	r6, r5, r0
 80142a6:	eb04 0509 	add.w	r5, r4, r9
 80142aa:	2b00      	cmp	r3, #0
 80142ac:	f000 8096 	beq.w	80143dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80142b0:	7877      	ldrb	r7, [r6, #1]
 80142b2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80142b6:	4427      	add	r7, r4
 80142b8:	2900      	cmp	r1, #0
 80142ba:	f000 8097 	beq.w	80143ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80142be:	18b0      	adds	r0, r6, r2
 80142c0:	5cb2      	ldrb	r2, [r6, r2]
 80142c2:	7840      	ldrb	r0, [r0, #1]
 80142c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80142cc:	4422      	add	r2, r4
 80142ce:	4420      	add	r0, r4
 80142d0:	b29b      	uxth	r3, r3
 80142d2:	b289      	uxth	r1, r1
 80142d4:	fb03 f801 	mul.w	r8, r3, r1
 80142d8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80142da:	f895 b002 	ldrb.w	fp, [r5, #2]
 80142de:	f8b6 c000 	ldrh.w	ip, [r6]
 80142e2:	78be      	ldrb	r6, [r7, #2]
 80142e4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80142e8:	011b      	lsls	r3, r3, #4
 80142ea:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80142ee:	b289      	uxth	r1, r1
 80142f0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80142f4:	eba3 0308 	sub.w	r3, r3, r8
 80142f8:	b29b      	uxth	r3, r3
 80142fa:	ebae 0e01 	sub.w	lr, lr, r1
 80142fe:	fa1f fe8e 	uxth.w	lr, lr
 8014302:	435e      	muls	r6, r3
 8014304:	fb0e 660b 	mla	r6, lr, fp, r6
 8014308:	f892 b002 	ldrb.w	fp, [r2, #2]
 801430c:	9310      	str	r3, [sp, #64]	; 0x40
 801430e:	fb01 660b 	mla	r6, r1, fp, r6
 8014312:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014316:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014318:	fb08 660b 	mla	r6, r8, fp, r6
 801431c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8014320:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014324:	fb1b fb03 	smulbb	fp, fp, r3
 8014328:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801432c:	fb06 b60a 	mla	r6, r6, sl, fp
 8014330:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014332:	f895 b001 	ldrb.w	fp, [r5, #1]
 8014336:	787d      	ldrb	r5, [r7, #1]
 8014338:	783f      	ldrb	r7, [r7, #0]
 801433a:	435d      	muls	r5, r3
 801433c:	fb0e 550b 	mla	r5, lr, fp, r5
 8014340:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014344:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014346:	fb01 550b 	mla	r5, r1, fp, r5
 801434a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801434e:	fb08 550b 	mla	r5, r8, fp, r5
 8014352:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8014356:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801435a:	fb1b fb03 	smulbb	fp, fp, r3
 801435e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014360:	437b      	muls	r3, r7
 8014362:	7817      	ldrb	r7, [r2, #0]
 8014364:	fb0e 3309 	mla	r3, lr, r9, r3
 8014368:	fb01 3307 	mla	r3, r1, r7, r3
 801436c:	7807      	ldrb	r7, [r0, #0]
 801436e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014372:	fb08 3707 	mla	r7, r8, r7, r3
 8014376:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014378:	fa5f fc8c 	uxtb.w	ip, ip
 801437c:	fb1c fc03 	smulbb	ip, ip, r3
 8014380:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8014384:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014388:	fb05 b50a 	mla	r5, r5, sl, fp
 801438c:	fb07 c70a 	mla	r7, r7, sl, ip
 8014390:	b2b6      	uxth	r6, r6
 8014392:	b2ad      	uxth	r5, r5
 8014394:	b2bf      	uxth	r7, r7
 8014396:	1c73      	adds	r3, r6, #1
 8014398:	1c7a      	adds	r2, r7, #1
 801439a:	f105 0b01 	add.w	fp, r5, #1
 801439e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80143a2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80143a6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80143aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80143ae:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80143b2:	096d      	lsrs	r5, r5, #5
 80143b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80143b6:	4316      	orrs	r6, r2
 80143b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80143bc:	432e      	orrs	r6, r5
 80143be:	f823 6b02 	strh.w	r6, [r3], #2
 80143c2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80143c4:	930c      	str	r3, [sp, #48]	; 0x30
 80143c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80143c8:	4413      	add	r3, r2
 80143ca:	9327      	str	r3, [sp, #156]	; 0x9c
 80143cc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80143ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80143d0:	4413      	add	r3, r2
 80143d2:	9328      	str	r3, [sp, #160]	; 0xa0
 80143d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80143d6:	3b01      	subs	r3, #1
 80143d8:	9311      	str	r3, [sp, #68]	; 0x44
 80143da:	e6db      	b.n	8014194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80143dc:	b149      	cbz	r1, 80143f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80143de:	5cb2      	ldrb	r2, [r6, r2]
 80143e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80143e4:	4422      	add	r2, r4
 80143e6:	4628      	mov	r0, r5
 80143e8:	462f      	mov	r7, r5
 80143ea:	e771      	b.n	80142d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80143ec:	4628      	mov	r0, r5
 80143ee:	462a      	mov	r2, r5
 80143f0:	e76e      	b.n	80142d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80143f2:	4628      	mov	r0, r5
 80143f4:	462a      	mov	r2, r5
 80143f6:	e7f7      	b.n	80143e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80143f8:	b015      	add	sp, #84	; 0x54
 80143fa:	ecbd 8b08 	vpop	{d8-d11}
 80143fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014408:	880e      	ldrh	r6, [r1, #0]
 801440a:	b085      	sub	sp, #20
 801440c:	0230      	lsls	r0, r6, #8
 801440e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014412:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014416:	0170      	lsls	r0, r6, #5
 8014418:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801441c:	9101      	str	r1, [sp, #4]
 801441e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014422:	00f6      	lsls	r6, r6, #3
 8014424:	ea4b 0000 	orr.w	r0, fp, r0
 8014428:	b2f6      	uxtb	r6, r6
 801442a:	4691      	mov	r9, r2
 801442c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014430:	4306      	orrs	r6, r0
 8014432:	2d00      	cmp	r5, #0
 8014434:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014438:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801443c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014440:	9603      	str	r6, [sp, #12]
 8014442:	eb09 0e0a 	add.w	lr, r9, sl
 8014446:	db42      	blt.n	80144ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8014448:	45a8      	cmp	r8, r5
 801444a:	dd40      	ble.n	80144ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801444c:	2f00      	cmp	r7, #0
 801444e:	db3c      	blt.n	80144ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8014450:	45bc      	cmp	ip, r7
 8014452:	dd3a      	ble.n	80144ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8014454:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014458:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801445c:	441e      	add	r6, r3
 801445e:	1c78      	adds	r0, r7, #1
 8014460:	d438      	bmi.n	80144d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014462:	4584      	cmp	ip, r0
 8014464:	dd36      	ble.n	80144d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014466:	b3aa      	cbz	r2, 80144d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014468:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801446c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014470:	4418      	add	r0, r3
 8014472:	3501      	adds	r5, #1
 8014474:	d432      	bmi.n	80144dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8014476:	45a8      	cmp	r8, r5
 8014478:	dd30      	ble.n	80144dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801447a:	b37c      	cbz	r4, 80144dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801447c:	2f00      	cmp	r7, #0
 801447e:	db2b      	blt.n	80144d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8014480:	45bc      	cmp	ip, r7
 8014482:	dd29      	ble.n	80144d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8014484:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014488:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801448c:	441d      	add	r5, r3
 801448e:	3701      	adds	r7, #1
 8014490:	d427      	bmi.n	80144e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014492:	45bc      	cmp	ip, r7
 8014494:	dd25      	ble.n	80144e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014496:	b322      	cbz	r2, 80144e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014498:	44f4      	add	ip, lr
 801449a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801449e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80144a2:	443b      	add	r3, r7
 80144a4:	781f      	ldrb	r7, [r3, #0]
 80144a6:	f896 9000 	ldrb.w	r9, [r6]
 80144aa:	f890 a000 	ldrb.w	sl, [r0]
 80144ae:	f895 8000 	ldrb.w	r8, [r5]
 80144b2:	2a0f      	cmp	r2, #15
 80144b4:	4639      	mov	r1, r7
 80144b6:	d801      	bhi.n	80144bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 80144b8:	2c0f      	cmp	r4, #15
 80144ba:	d914      	bls.n	80144e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 80144bc:	4b2c      	ldr	r3, [pc, #176]	; (8014570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80144be:	4a2d      	ldr	r2, [pc, #180]	; (8014574 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80144c0:	482d      	ldr	r0, [pc, #180]	; (8014578 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 80144c2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 80144c6:	f005 ff77 	bl	801a3b8 <__assert_func>
 80144ca:	ae03      	add	r6, sp, #12
 80144cc:	e7c7      	b.n	801445e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 80144ce:	a803      	add	r0, sp, #12
 80144d0:	4606      	mov	r6, r0
 80144d2:	e7ce      	b.n	8014472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80144d4:	a803      	add	r0, sp, #12
 80144d6:	e7cc      	b.n	8014472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80144d8:	ad03      	add	r5, sp, #12
 80144da:	e7d8      	b.n	801448e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 80144dc:	ab03      	add	r3, sp, #12
 80144de:	461d      	mov	r5, r3
 80144e0:	e7e0      	b.n	80144a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80144e2:	ab03      	add	r3, sp, #12
 80144e4:	e7de      	b.n	80144a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80144e6:	b292      	uxth	r2, r2
 80144e8:	b2a4      	uxth	r4, r4
 80144ea:	fb02 fe04 	mul.w	lr, r2, r4
 80144ee:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 80144f2:	0112      	lsls	r2, r2, #4
 80144f4:	b2a4      	uxth	r4, r4
 80144f6:	f890 c002 	ldrb.w	ip, [r0, #2]
 80144fa:	f896 b002 	ldrb.w	fp, [r6, #2]
 80144fe:	7840      	ldrb	r0, [r0, #1]
 8014500:	7876      	ldrb	r6, [r6, #1]
 8014502:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8014506:	eba2 020e 	sub.w	r2, r2, lr
 801450a:	b292      	uxth	r2, r2
 801450c:	1b3f      	subs	r7, r7, r4
 801450e:	b2bf      	uxth	r7, r7
 8014510:	fb02 fc0c 	mul.w	ip, r2, ip
 8014514:	fb07 cc0b 	mla	ip, r7, fp, ip
 8014518:	f895 b002 	ldrb.w	fp, [r5, #2]
 801451c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8014520:	f893 b002 	ldrb.w	fp, [r3, #2]
 8014524:	785b      	ldrb	r3, [r3, #1]
 8014526:	fb0e cc0b 	mla	ip, lr, fp, ip
 801452a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801452e:	fb02 fc0a 	mul.w	ip, r2, sl
 8014532:	4342      	muls	r2, r0
 8014534:	7868      	ldrb	r0, [r5, #1]
 8014536:	fb07 cc09 	mla	ip, r7, r9, ip
 801453a:	fb07 2206 	mla	r2, r7, r6, r2
 801453e:	fb04 cc08 	mla	ip, r4, r8, ip
 8014542:	fb04 2400 	mla	r4, r4, r0, r2
 8014546:	fb0e cc01 	mla	ip, lr, r1, ip
 801454a:	fb0e 4e03 	mla	lr, lr, r3, r4
 801454e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014552:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8014556:	ea4c 0c0b 	orr.w	ip, ip, fp
 801455a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801455e:	9b01      	ldr	r3, [sp, #4]
 8014560:	ea4c 0c0e 	orr.w	ip, ip, lr
 8014564:	f8a3 c000 	strh.w	ip, [r3]
 8014568:	b005      	add	sp, #20
 801456a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801456e:	bf00      	nop
 8014570:	0801de7e 	.word	0x0801de7e
 8014574:	0801e44a 	.word	0x0801e44a
 8014578:	0801df02 	.word	0x0801df02

0801457c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801457c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014580:	ed2d 8b08 	vpush	{d8-d11}
 8014584:	b08f      	sub	sp, #60	; 0x3c
 8014586:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801458a:	920c      	str	r2, [sp, #48]	; 0x30
 801458c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801458e:	910a      	str	r1, [sp, #40]	; 0x28
 8014590:	9306      	str	r3, [sp, #24]
 8014592:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8014596:	900d      	str	r0, [sp, #52]	; 0x34
 8014598:	6850      	ldr	r0, [r2, #4]
 801459a:	6812      	ldr	r2, [r2, #0]
 801459c:	fb00 1303 	mla	r3, r0, r3, r1
 80145a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80145a4:	9307      	str	r3, [sp, #28]
 80145a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80145a8:	681b      	ldr	r3, [r3, #0]
 80145aa:	9308      	str	r3, [sp, #32]
 80145ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80145ae:	685c      	ldr	r4, [r3, #4]
 80145b0:	eeb0 aa40 	vmov.f32	s20, s0
 80145b4:	eef0 9a60 	vmov.f32	s19, s1
 80145b8:	eeb0 9a41 	vmov.f32	s18, s2
 80145bc:	eeb0 8a62 	vmov.f32	s16, s5
 80145c0:	eef0 8a43 	vmov.f32	s17, s6
 80145c4:	eef0 ba44 	vmov.f32	s23, s8
 80145c8:	eeb0 ba64 	vmov.f32	s22, s9
 80145cc:	eef0 aa45 	vmov.f32	s21, s10
 80145d0:	3404      	adds	r4, #4
 80145d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80145d4:	2b00      	cmp	r3, #0
 80145d6:	dc03      	bgt.n	80145e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80145d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145da:	2b00      	cmp	r3, #0
 80145dc:	f340 81d6 	ble.w	801498c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80145e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80145e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80145e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80145ea:	1e48      	subs	r0, r1, #1
 80145ec:	1e56      	subs	r6, r2, #1
 80145ee:	9b06      	ldr	r3, [sp, #24]
 80145f0:	2b00      	cmp	r3, #0
 80145f2:	f340 80b7 	ble.w	8014764 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80145f6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80145fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80145fe:	d406      	bmi.n	801460e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014600:	4287      	cmp	r7, r0
 8014602:	da04      	bge.n	801460e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014604:	2b00      	cmp	r3, #0
 8014606:	db02      	blt.n	801460e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014608:	42b3      	cmp	r3, r6
 801460a:	f2c0 80ac 	blt.w	8014766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801460e:	3701      	adds	r7, #1
 8014610:	f100 809d 	bmi.w	801474e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014614:	42b9      	cmp	r1, r7
 8014616:	f2c0 809a 	blt.w	801474e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801461a:	3301      	adds	r3, #1
 801461c:	f100 8097 	bmi.w	801474e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014620:	429a      	cmp	r2, r3
 8014622:	f2c0 8094 	blt.w	801474e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014626:	9b06      	ldr	r3, [sp, #24]
 8014628:	930b      	str	r3, [sp, #44]	; 0x2c
 801462a:	9b07      	ldr	r3, [sp, #28]
 801462c:	9309      	str	r3, [sp, #36]	; 0x24
 801462e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014630:	2b00      	cmp	r3, #0
 8014632:	f340 80b5 	ble.w	80147a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8014636:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014638:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801463a:	68c7      	ldr	r7, [r0, #12]
 801463c:	6892      	ldr	r2, [r2, #8]
 801463e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8014642:	ea4f 4625 	mov.w	r6, r5, asr #16
 8014646:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801464a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801464e:	f100 80fb 	bmi.w	8014848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014652:	f102 3cff 	add.w	ip, r2, #4294967295
 8014656:	4560      	cmp	r0, ip
 8014658:	f280 80f6 	bge.w	8014848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801465c:	2e00      	cmp	r6, #0
 801465e:	f2c0 80f3 	blt.w	8014848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014662:	f107 3cff 	add.w	ip, r7, #4294967295
 8014666:	4566      	cmp	r6, ip
 8014668:	f280 80ee 	bge.w	8014848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801466c:	b212      	sxth	r2, r2
 801466e:	fb06 0002 	mla	r0, r6, r2, r0
 8014672:	9e08      	ldr	r6, [sp, #32]
 8014674:	1837      	adds	r7, r6, r0
 8014676:	5c30      	ldrb	r0, [r6, r0]
 8014678:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801467c:	eb04 0c08 	add.w	ip, r4, r8
 8014680:	2b00      	cmp	r3, #0
 8014682:	f000 80d3 	beq.w	801482c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8014686:	787e      	ldrb	r6, [r7, #1]
 8014688:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801468c:	4426      	add	r6, r4
 801468e:	2900      	cmp	r1, #0
 8014690:	f000 80d4 	beq.w	801483c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8014694:	18b8      	adds	r0, r7, r2
 8014696:	5cba      	ldrb	r2, [r7, r2]
 8014698:	7840      	ldrb	r0, [r0, #1]
 801469a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801469e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80146a2:	4422      	add	r2, r4
 80146a4:	4420      	add	r0, r4
 80146a6:	b29b      	uxth	r3, r3
 80146a8:	b289      	uxth	r1, r1
 80146aa:	fb03 f901 	mul.w	r9, r3, r1
 80146ae:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80146b2:	011b      	lsls	r3, r3, #4
 80146b4:	b289      	uxth	r1, r1
 80146b6:	78b7      	ldrb	r7, [r6, #2]
 80146b8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80146bc:	f89c c001 	ldrb.w	ip, [ip, #1]
 80146c0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80146c4:	eba3 0309 	sub.w	r3, r3, r9
 80146c8:	b29b      	uxth	r3, r3
 80146ca:	ebae 0e01 	sub.w	lr, lr, r1
 80146ce:	fa1f fe8e 	uxth.w	lr, lr
 80146d2:	435f      	muls	r7, r3
 80146d4:	fb0e 770a 	mla	r7, lr, sl, r7
 80146d8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80146dc:	fb01 770a 	mla	r7, r1, sl, r7
 80146e0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80146e4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80146e8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80146ec:	f896 8000 	ldrb.w	r8, [r6]
 80146f0:	7876      	ldrb	r6, [r6, #1]
 80146f2:	fb03 f808 	mul.w	r8, r3, r8
 80146f6:	fb0e 8807 	mla	r8, lr, r7, r8
 80146fa:	7817      	ldrb	r7, [r2, #0]
 80146fc:	fb01 8807 	mla	r8, r1, r7, r8
 8014700:	7807      	ldrb	r7, [r0, #0]
 8014702:	fb09 8707 	mla	r7, r9, r7, r8
 8014706:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801470a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801470e:	ea47 070a 	orr.w	r7, r7, sl
 8014712:	4373      	muls	r3, r6
 8014714:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014718:	fb0e 330c 	mla	r3, lr, ip, r3
 801471c:	fb01 310a 	mla	r1, r1, sl, r3
 8014720:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014724:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014726:	fb09 1a0a 	mla	sl, r9, sl, r1
 801472a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801472e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014732:	ea47 070a 	orr.w	r7, r7, sl
 8014736:	801f      	strh	r7, [r3, #0]
 8014738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801473a:	3302      	adds	r3, #2
 801473c:	9309      	str	r3, [sp, #36]	; 0x24
 801473e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014740:	449b      	add	fp, r3
 8014742:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014744:	441d      	add	r5, r3
 8014746:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014748:	3b01      	subs	r3, #1
 801474a:	930b      	str	r3, [sp, #44]	; 0x2c
 801474c:	e76f      	b.n	801462e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801474e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014750:	449b      	add	fp, r3
 8014752:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014754:	441d      	add	r5, r3
 8014756:	9b06      	ldr	r3, [sp, #24]
 8014758:	3b01      	subs	r3, #1
 801475a:	9306      	str	r3, [sp, #24]
 801475c:	9b07      	ldr	r3, [sp, #28]
 801475e:	3302      	adds	r3, #2
 8014760:	9307      	str	r3, [sp, #28]
 8014762:	e744      	b.n	80145ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014764:	d023      	beq.n	80147ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8014766:	9b06      	ldr	r3, [sp, #24]
 8014768:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801476a:	3b01      	subs	r3, #1
 801476c:	fb00 b003 	mla	r0, r0, r3, fp
 8014770:	1400      	asrs	r0, r0, #16
 8014772:	f53f af58 	bmi.w	8014626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014776:	3901      	subs	r1, #1
 8014778:	4288      	cmp	r0, r1
 801477a:	f6bf af54 	bge.w	8014626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801477e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8014780:	fb01 5303 	mla	r3, r1, r3, r5
 8014784:	141b      	asrs	r3, r3, #16
 8014786:	f53f af4e 	bmi.w	8014626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801478a:	3a01      	subs	r2, #1
 801478c:	4293      	cmp	r3, r2
 801478e:	f6bf af4a 	bge.w	8014626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014792:	9b06      	ldr	r3, [sp, #24]
 8014794:	9309      	str	r3, [sp, #36]	; 0x24
 8014796:	9b07      	ldr	r3, [sp, #28]
 8014798:	930b      	str	r3, [sp, #44]	; 0x2c
 801479a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801479c:	2b00      	cmp	r3, #0
 801479e:	dc70      	bgt.n	8014882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80147a0:	9b06      	ldr	r3, [sp, #24]
 80147a2:	9a07      	ldr	r2, [sp, #28]
 80147a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80147a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80147ac:	9307      	str	r3, [sp, #28]
 80147ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147b0:	2b00      	cmp	r3, #0
 80147b2:	f340 80eb 	ble.w	801498c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80147b6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80147ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80147be:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80147c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80147c4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80147c8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80147cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80147d0:	eef0 6a48 	vmov.f32	s13, s16
 80147d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80147d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80147dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80147e0:	ee16 ba90 	vmov	fp, s13
 80147e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80147e8:	eef0 6a68 	vmov.f32	s13, s17
 80147ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80147f0:	ee18 2a10 	vmov	r2, s16
 80147f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80147f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80147fc:	ee18 2a90 	vmov	r2, s17
 8014800:	9323      	str	r3, [sp, #140]	; 0x8c
 8014802:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014804:	fb92 f3f3 	sdiv	r3, r2, r3
 8014808:	9324      	str	r3, [sp, #144]	; 0x90
 801480a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801480c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801480e:	3b01      	subs	r3, #1
 8014810:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014814:	930a      	str	r3, [sp, #40]	; 0x28
 8014816:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014818:	bf08      	it	eq
 801481a:	4613      	moveq	r3, r2
 801481c:	ee16 5a90 	vmov	r5, s13
 8014820:	9306      	str	r3, [sp, #24]
 8014822:	eef0 8a67 	vmov.f32	s17, s15
 8014826:	eeb0 8a47 	vmov.f32	s16, s14
 801482a:	e6d2      	b.n	80145d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801482c:	b149      	cbz	r1, 8014842 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801482e:	5cba      	ldrb	r2, [r7, r2]
 8014830:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014834:	4422      	add	r2, r4
 8014836:	4660      	mov	r0, ip
 8014838:	4666      	mov	r6, ip
 801483a:	e734      	b.n	80146a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801483c:	4660      	mov	r0, ip
 801483e:	4662      	mov	r2, ip
 8014840:	e731      	b.n	80146a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8014842:	4660      	mov	r0, ip
 8014844:	4662      	mov	r2, ip
 8014846:	e7f7      	b.n	8014838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8014848:	f110 0c01 	adds.w	ip, r0, #1
 801484c:	f53f af74 	bmi.w	8014738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014850:	4562      	cmp	r2, ip
 8014852:	f6ff af71 	blt.w	8014738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014856:	f116 0c01 	adds.w	ip, r6, #1
 801485a:	f53f af6d 	bmi.w	8014738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801485e:	4567      	cmp	r7, ip
 8014860:	f6ff af6a 	blt.w	8014738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014864:	b23f      	sxth	r7, r7
 8014866:	b212      	sxth	r2, r2
 8014868:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801486c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8014870:	9200      	str	r2, [sp, #0]
 8014872:	9701      	str	r7, [sp, #4]
 8014874:	4623      	mov	r3, r4
 8014876:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801487a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801487c:	f7ff fdc2 	bl	8014404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014880:	e75a      	b.n	8014738 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014882:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014884:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8014888:	ea4f 462b 	mov.w	r6, fp, asr #16
 801488c:	1428      	asrs	r0, r5, #16
 801488e:	fb02 6000 	mla	r0, r2, r0, r6
 8014892:	9e08      	ldr	r6, [sp, #32]
 8014894:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014898:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801489c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80148a0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80148a4:	1837      	adds	r7, r6, r0
 80148a6:	eb04 0c08 	add.w	ip, r4, r8
 80148aa:	2b00      	cmp	r3, #0
 80148ac:	d060      	beq.n	8014970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80148ae:	787e      	ldrb	r6, [r7, #1]
 80148b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80148b4:	4426      	add	r6, r4
 80148b6:	2900      	cmp	r1, #0
 80148b8:	d062      	beq.n	8014980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 80148ba:	18b8      	adds	r0, r7, r2
 80148bc:	5cba      	ldrb	r2, [r7, r2]
 80148be:	7840      	ldrb	r0, [r0, #1]
 80148c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80148c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80148c8:	4422      	add	r2, r4
 80148ca:	4420      	add	r0, r4
 80148cc:	b29b      	uxth	r3, r3
 80148ce:	b289      	uxth	r1, r1
 80148d0:	fb03 f901 	mul.w	r9, r3, r1
 80148d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80148d8:	011b      	lsls	r3, r3, #4
 80148da:	b289      	uxth	r1, r1
 80148dc:	78b7      	ldrb	r7, [r6, #2]
 80148de:	f89c a002 	ldrb.w	sl, [ip, #2]
 80148e2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80148e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80148ea:	eba3 0309 	sub.w	r3, r3, r9
 80148ee:	b29b      	uxth	r3, r3
 80148f0:	ebae 0e01 	sub.w	lr, lr, r1
 80148f4:	fa1f fe8e 	uxth.w	lr, lr
 80148f8:	435f      	muls	r7, r3
 80148fa:	fb0e 770a 	mla	r7, lr, sl, r7
 80148fe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014902:	fb01 770a 	mla	r7, r1, sl, r7
 8014906:	f890 a002 	ldrb.w	sl, [r0, #2]
 801490a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801490e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014912:	f896 8000 	ldrb.w	r8, [r6]
 8014916:	7876      	ldrb	r6, [r6, #1]
 8014918:	fb03 f808 	mul.w	r8, r3, r8
 801491c:	fb0e 8807 	mla	r8, lr, r7, r8
 8014920:	7817      	ldrb	r7, [r2, #0]
 8014922:	fb01 8807 	mla	r8, r1, r7, r8
 8014926:	7807      	ldrb	r7, [r0, #0]
 8014928:	fb09 8707 	mla	r7, r9, r7, r8
 801492c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014930:	4373      	muls	r3, r6
 8014932:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014936:	7856      	ldrb	r6, [r2, #1]
 8014938:	ea47 070a 	orr.w	r7, r7, sl
 801493c:	fb0e 330c 	mla	r3, lr, ip, r3
 8014940:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014944:	fb01 3306 	mla	r3, r1, r6, r3
 8014948:	fb09 3a0a 	mla	sl, r9, sl, r3
 801494c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014950:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014956:	ea47 070a 	orr.w	r7, r7, sl
 801495a:	f823 7b02 	strh.w	r7, [r3], #2
 801495e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014960:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014962:	449b      	add	fp, r3
 8014964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014966:	441d      	add	r5, r3
 8014968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801496a:	3b01      	subs	r3, #1
 801496c:	9309      	str	r3, [sp, #36]	; 0x24
 801496e:	e714      	b.n	801479a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8014970:	b149      	cbz	r1, 8014986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8014972:	5cba      	ldrb	r2, [r7, r2]
 8014974:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014978:	4422      	add	r2, r4
 801497a:	4660      	mov	r0, ip
 801497c:	4666      	mov	r6, ip
 801497e:	e7a5      	b.n	80148cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8014980:	4660      	mov	r0, ip
 8014982:	4662      	mov	r2, ip
 8014984:	e7a2      	b.n	80148cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8014986:	4660      	mov	r0, ip
 8014988:	4662      	mov	r2, ip
 801498a:	e7f7      	b.n	801497c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801498c:	b00f      	add	sp, #60	; 0x3c
 801498e:	ecbd 8b08 	vpop	{d8-d11}
 8014992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801499c:	880e      	ldrh	r6, [r1, #0]
 801499e:	b085      	sub	sp, #20
 80149a0:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80149a4:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80149a8:	4691      	mov	r9, r2
 80149aa:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80149ae:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80149b2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80149b6:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80149ba:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80149be:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80149c2:	9200      	str	r2, [sp, #0]
 80149c4:	00f6      	lsls	r6, r6, #3
 80149c6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80149ca:	9201      	str	r2, [sp, #4]
 80149cc:	2c00      	cmp	r4, #0
 80149ce:	b2f2      	uxtb	r2, r6
 80149d0:	fb04 560c 	mla	r6, r4, ip, r5
 80149d4:	9202      	str	r2, [sp, #8]
 80149d6:	eb09 0e06 	add.w	lr, r9, r6
 80149da:	db3e      	blt.n	8014a5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80149dc:	45a0      	cmp	r8, r4
 80149de:	dd3c      	ble.n	8014a5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80149e0:	2d00      	cmp	r5, #0
 80149e2:	db38      	blt.n	8014a56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80149e4:	45ac      	cmp	ip, r5
 80149e6:	dd36      	ble.n	8014a56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80149e8:	f819 2006 	ldrb.w	r2, [r9, r6]
 80149ec:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80149f0:	1c6e      	adds	r6, r5, #1
 80149f2:	d435      	bmi.n	8014a60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80149f4:	45b4      	cmp	ip, r6
 80149f6:	dd33      	ble.n	8014a60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80149f8:	b3a0      	cbz	r0, 8014a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80149fa:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80149fe:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8014a02:	3401      	adds	r4, #1
 8014a04:	d432      	bmi.n	8014a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8014a06:	45a0      	cmp	r8, r4
 8014a08:	dd30      	ble.n	8014a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8014a0a:	b397      	cbz	r7, 8014a72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014a0c:	2d00      	cmp	r5, #0
 8014a0e:	db2b      	blt.n	8014a68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014a10:	45ac      	cmp	ip, r5
 8014a12:	dd29      	ble.n	8014a68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014a14:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014a18:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8014a1c:	3501      	adds	r5, #1
 8014a1e:	d42b      	bmi.n	8014a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8014a20:	45ac      	cmp	ip, r5
 8014a22:	dd29      	ble.n	8014a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8014a24:	b350      	cbz	r0, 8014a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8014a26:	44f4      	add	ip, lr
 8014a28:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8014a2c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014a30:	280f      	cmp	r0, #15
 8014a32:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014a36:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014a3a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014a3e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014a42:	d801      	bhi.n	8014a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8014a44:	2f0f      	cmp	r7, #15
 8014a46:	d91b      	bls.n	8014a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8014a48:	4b84      	ldr	r3, [pc, #528]	; (8014c5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8014a4a:	4a85      	ldr	r2, [pc, #532]	; (8014c60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8014a4c:	4885      	ldr	r0, [pc, #532]	; (8014c64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8014a4e:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8014a52:	f005 fcb1 	bl	801a3b8 <__assert_func>
 8014a56:	2200      	movs	r2, #0
 8014a58:	e7ca      	b.n	80149f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8014a5a:	2600      	movs	r6, #0
 8014a5c:	4632      	mov	r2, r6
 8014a5e:	e7d0      	b.n	8014a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8014a60:	2600      	movs	r6, #0
 8014a62:	e7ce      	b.n	8014a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8014a64:	4606      	mov	r6, r0
 8014a66:	e7cc      	b.n	8014a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8014a68:	2400      	movs	r4, #0
 8014a6a:	e7d7      	b.n	8014a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8014a6c:	2300      	movs	r3, #0
 8014a6e:	461c      	mov	r4, r3
 8014a70:	e7de      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8014a72:	463b      	mov	r3, r7
 8014a74:	463c      	mov	r4, r7
 8014a76:	e7db      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8014a78:	2300      	movs	r3, #0
 8014a7a:	e7d9      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8014a7c:	4603      	mov	r3, r0
 8014a7e:	e7d7      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8014a80:	b280      	uxth	r0, r0
 8014a82:	b2bf      	uxth	r7, r7
 8014a84:	fb00 fe07 	mul.w	lr, r0, r7
 8014a88:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014a8c:	0100      	lsls	r0, r0, #4
 8014a8e:	eba0 0c0e 	sub.w	ip, r0, lr
 8014a92:	b2bf      	uxth	r7, r7
 8014a94:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8014a98:	fa1f fc8c 	uxth.w	ip, ip
 8014a9c:	1bed      	subs	r5, r5, r7
 8014a9e:	b2ad      	uxth	r5, r5
 8014aa0:	fb0c f00a 	mul.w	r0, ip, sl
 8014aa4:	fb05 000b 	mla	r0, r5, fp, r0
 8014aa8:	fb07 0009 	mla	r0, r7, r9, r0
 8014aac:	fb0e 0008 	mla	r0, lr, r8, r0
 8014ab0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014ab4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014ab8:	9003      	str	r0, [sp, #12]
 8014aba:	d018      	beq.n	8014aee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8014abc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014ac0:	fb0b f000 	mul.w	r0, fp, r0
 8014ac4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014ac8:	fb0b fb02 	mul.w	fp, fp, r2
 8014acc:	0a02      	lsrs	r2, r0, #8
 8014ace:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014ad2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8014ad6:	4402      	add	r2, r0
 8014ad8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8014adc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014ae0:	0a12      	lsrs	r2, r2, #8
 8014ae2:	0a00      	lsrs	r0, r0, #8
 8014ae4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014ae8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014aec:	4302      	orrs	r2, r0
 8014aee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014af2:	d019      	beq.n	8014b28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8014af4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014af8:	fb0a fb0b 	mul.w	fp, sl, fp
 8014afc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014b00:	fb0a fa06 	mul.w	sl, sl, r6
 8014b04:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014b08:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014b0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014b10:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8014b14:	445e      	add	r6, fp
 8014b16:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8014b1a:	0a36      	lsrs	r6, r6, #8
 8014b1c:	0a00      	lsrs	r0, r0, #8
 8014b1e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014b22:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014b26:	4306      	orrs	r6, r0
 8014b28:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014b2c:	d019      	beq.n	8014b62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8014b2e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014b32:	fb09 fa0a 	mul.w	sl, r9, sl
 8014b36:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014b3a:	fb09 f904 	mul.w	r9, r9, r4
 8014b3e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014b42:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014b46:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014b4a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8014b4e:	4454      	add	r4, sl
 8014b50:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8014b54:	0a24      	lsrs	r4, r4, #8
 8014b56:	0a00      	lsrs	r0, r0, #8
 8014b58:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014b5c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014b60:	4304      	orrs	r4, r0
 8014b62:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014b66:	d019      	beq.n	8014b9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8014b68:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8014b6c:	fb08 f909 	mul.w	r9, r8, r9
 8014b70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014b74:	fb08 f803 	mul.w	r8, r8, r3
 8014b78:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8014b7c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014b80:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014b84:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8014b88:	444b      	add	r3, r9
 8014b8a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8014b8e:	0a1b      	lsrs	r3, r3, #8
 8014b90:	0a00      	lsrs	r0, r0, #8
 8014b92:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014b96:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014b9a:	4303      	orrs	r3, r0
 8014b9c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014ba0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014ba4:	fb0c f808 	mul.w	r8, ip, r8
 8014ba8:	fb05 8800 	mla	r8, r5, r0, r8
 8014bac:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8014bb0:	fb07 8800 	mla	r8, r7, r0, r8
 8014bb4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8014bb8:	fb0e 8000 	mla	r0, lr, r0, r8
 8014bbc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014bc0:	fb0c f606 	mul.w	r6, ip, r6
 8014bc4:	0a00      	lsrs	r0, r0, #8
 8014bc6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014bca:	fb05 6202 	mla	r2, r5, r2, r6
 8014bce:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8014bd2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8014bd6:	fb07 2700 	mla	r7, r7, r0, r2
 8014bda:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8014bde:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014be2:	9c03      	ldr	r4, [sp, #12]
 8014be4:	9e01      	ldr	r6, [sp, #4]
 8014be6:	b29b      	uxth	r3, r3
 8014be8:	435c      	muls	r4, r3
 8014bea:	fb0e 7000 	mla	r0, lr, r0, r7
 8014bee:	1c62      	adds	r2, r4, #1
 8014bf0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8014bf4:	0a00      	lsrs	r0, r0, #8
 8014bf6:	9c00      	ldr	r4, [sp, #0]
 8014bf8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014bfc:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8014c00:	ea48 0000 	orr.w	r0, r8, r0
 8014c04:	b2d2      	uxtb	r2, r2
 8014c06:	fb14 f402 	smulbb	r4, r4, r2
 8014c0a:	0c05      	lsrs	r5, r0, #16
 8014c0c:	fb05 4503 	mla	r5, r5, r3, r4
 8014c10:	fb16 f602 	smulbb	r6, r6, r2
 8014c14:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8014c18:	fb04 6403 	mla	r4, r4, r3, r6
 8014c1c:	9e02      	ldr	r6, [sp, #8]
 8014c1e:	b2c0      	uxtb	r0, r0
 8014c20:	fb16 f202 	smulbb	r2, r6, r2
 8014c24:	fb00 2303 	mla	r3, r0, r3, r2
 8014c28:	b2ad      	uxth	r5, r5
 8014c2a:	b298      	uxth	r0, r3
 8014c2c:	1c43      	adds	r3, r0, #1
 8014c2e:	1c6a      	adds	r2, r5, #1
 8014c30:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014c34:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8014c38:	b2a4      	uxth	r4, r4
 8014c3a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8014c3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014c42:	4313      	orrs	r3, r2
 8014c44:	1c62      	adds	r2, r4, #1
 8014c46:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8014c4a:	0952      	lsrs	r2, r2, #5
 8014c4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014c50:	4313      	orrs	r3, r2
 8014c52:	800b      	strh	r3, [r1, #0]
 8014c54:	b005      	add	sp, #20
 8014c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c5a:	bf00      	nop
 8014c5c:	0801de7e 	.word	0x0801de7e
 8014c60:	0801e44a 	.word	0x0801e44a
 8014c64:	0801df02 	.word	0x0801df02

08014c68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c6c:	ed2d 8b08 	vpush	{d8-d11}
 8014c70:	b09f      	sub	sp, #124	; 0x7c
 8014c72:	eeb0 aa40 	vmov.f32	s20, s0
 8014c76:	921b      	str	r2, [sp, #108]	; 0x6c
 8014c78:	9309      	str	r3, [sp, #36]	; 0x24
 8014c7a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8014c7c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8014c80:	931c      	str	r3, [sp, #112]	; 0x70
 8014c82:	9119      	str	r1, [sp, #100]	; 0x64
 8014c84:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8014c88:	901d      	str	r0, [sp, #116]	; 0x74
 8014c8a:	6850      	ldr	r0, [r2, #4]
 8014c8c:	6812      	ldr	r2, [r2, #0]
 8014c8e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8014c90:	fb00 1303 	mla	r3, r0, r3, r1
 8014c94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014c98:	930c      	str	r3, [sp, #48]	; 0x30
 8014c9a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014c9c:	681b      	ldr	r3, [r3, #0]
 8014c9e:	9312      	str	r3, [sp, #72]	; 0x48
 8014ca0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014ca2:	685e      	ldr	r6, [r3, #4]
 8014ca4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8014ca8:	930d      	str	r3, [sp, #52]	; 0x34
 8014caa:	eef0 9a60 	vmov.f32	s19, s1
 8014cae:	eeb0 9a41 	vmov.f32	s18, s2
 8014cb2:	eeb0 8a62 	vmov.f32	s16, s5
 8014cb6:	eef0 8a43 	vmov.f32	s17, s6
 8014cba:	eef0 ba44 	vmov.f32	s23, s8
 8014cbe:	eeb0 ba64 	vmov.f32	s22, s9
 8014cc2:	eef0 aa45 	vmov.f32	s21, s10
 8014cc6:	3604      	adds	r6, #4
 8014cc8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014cca:	2b00      	cmp	r3, #0
 8014ccc:	dc03      	bgt.n	8014cd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014cce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014cd0:	2b00      	cmp	r3, #0
 8014cd2:	f340 8388 	ble.w	80153e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8014cd6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014cd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014cdc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014ce0:	1e48      	subs	r0, r1, #1
 8014ce2:	1e57      	subs	r7, r2, #1
 8014ce4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ce6:	2b00      	cmp	r3, #0
 8014ce8:	f340 8195 	ble.w	8015016 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014cec:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014cee:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8014cf2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014cf6:	d406      	bmi.n	8014d06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014cf8:	4584      	cmp	ip, r0
 8014cfa:	da04      	bge.n	8014d06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014cfc:	2b00      	cmp	r3, #0
 8014cfe:	db02      	blt.n	8014d06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014d00:	42bb      	cmp	r3, r7
 8014d02:	f2c0 8189 	blt.w	8015018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8014d06:	f11c 0c01 	adds.w	ip, ip, #1
 8014d0a:	f100 8177 	bmi.w	8014ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014d0e:	4561      	cmp	r1, ip
 8014d10:	f2c0 8174 	blt.w	8014ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014d14:	3301      	adds	r3, #1
 8014d16:	f100 8171 	bmi.w	8014ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014d1a:	429a      	cmp	r2, r3
 8014d1c:	f2c0 816e 	blt.w	8014ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d22:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014d24:	931a      	str	r3, [sp, #104]	; 0x68
 8014d26:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014d28:	2b00      	cmp	r3, #0
 8014d2a:	f340 8193 	ble.w	8015054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8014d2e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014d30:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014d34:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014d36:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8014d3a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014d3c:	141b      	asrs	r3, r3, #16
 8014d3e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014d42:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014d46:	f100 81d6 	bmi.w	80150f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014d4a:	f100 38ff 	add.w	r8, r0, #4294967295
 8014d4e:	4543      	cmp	r3, r8
 8014d50:	f280 81d1 	bge.w	80150f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014d54:	f1bc 0f00 	cmp.w	ip, #0
 8014d58:	f2c0 81cd 	blt.w	80150f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014d5c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8014d60:	45c4      	cmp	ip, r8
 8014d62:	f280 81c8 	bge.w	80150f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014d66:	b200      	sxth	r0, r0
 8014d68:	fb0c 3300 	mla	r3, ip, r0, r3
 8014d6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014d6e:	eb04 0803 	add.w	r8, r4, r3
 8014d72:	5ce3      	ldrb	r3, [r4, r3]
 8014d74:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014d78:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8014d7c:	2a00      	cmp	r2, #0
 8014d7e:	f000 81af 	beq.w	80150e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8014d82:	f898 c001 	ldrb.w	ip, [r8, #1]
 8014d86:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8014d8a:	940e      	str	r4, [sp, #56]	; 0x38
 8014d8c:	0e24      	lsrs	r4, r4, #24
 8014d8e:	9415      	str	r4, [sp, #84]	; 0x54
 8014d90:	b179      	cbz	r1, 8014db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014d92:	eb08 0c00 	add.w	ip, r8, r0
 8014d96:	f818 0000 	ldrb.w	r0, [r8, r0]
 8014d9a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014d9e:	900a      	str	r0, [sp, #40]	; 0x28
 8014da0:	0e00      	lsrs	r0, r0, #24
 8014da2:	9013      	str	r0, [sp, #76]	; 0x4c
 8014da4:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8014da8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014dac:	900f      	str	r0, [sp, #60]	; 0x3c
 8014dae:	0e00      	lsrs	r0, r0, #24
 8014db0:	9016      	str	r0, [sp, #88]	; 0x58
 8014db2:	b292      	uxth	r2, r2
 8014db4:	b289      	uxth	r1, r1
 8014db6:	fb02 f901 	mul.w	r9, r2, r1
 8014dba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014dbe:	0112      	lsls	r2, r2, #4
 8014dc0:	eba2 0809 	sub.w	r8, r2, r9
 8014dc4:	b289      	uxth	r1, r1
 8014dc6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8014dca:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014dcc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014dce:	fa1f f888 	uxth.w	r8, r8
 8014dd2:	1a52      	subs	r2, r2, r1
 8014dd4:	b292      	uxth	r2, r2
 8014dd6:	fb08 f000 	mul.w	r0, r8, r0
 8014dda:	fb02 000e 	mla	r0, r2, lr, r0
 8014dde:	fb01 0004 	mla	r0, r1, r4, r0
 8014de2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014de4:	fb09 0004 	mla	r0, r9, r4, r0
 8014de8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014dec:	2800      	cmp	r0, #0
 8014dee:	f000 80fa 	beq.w	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014df2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014df6:	d01b      	beq.n	8014e30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014df8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014dfc:	fb0e fa0a 	mul.w	sl, lr, sl
 8014e00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014e04:	fb0e fe03 	mul.w	lr, lr, r3
 8014e08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014e0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014e10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014e14:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8014e18:	4453      	add	r3, sl
 8014e1a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8014e1e:	0a1b      	lsrs	r3, r3, #8
 8014e20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014e24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014e28:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014e2c:	ea43 030c 	orr.w	r3, r3, ip
 8014e30:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014e32:	2cff      	cmp	r4, #255	; 0xff
 8014e34:	d021      	beq.n	8014e7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8014e36:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014e38:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014e3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014e3e:	fb04 fb0b 	mul.w	fp, r4, fp
 8014e42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014e44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014e48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014e4a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014e4e:	fb04 fa0a 	mul.w	sl, r4, sl
 8014e52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014e56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014e5a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014e5e:	44de      	add	lr, fp
 8014e60:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014e64:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014e68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014e6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014e70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014e74:	ea4e 040a 	orr.w	r4, lr, sl
 8014e78:	940e      	str	r4, [sp, #56]	; 0x38
 8014e7a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e7c:	2cff      	cmp	r4, #255	; 0xff
 8014e7e:	d021      	beq.n	8014ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8014e80:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014e82:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014e86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e88:	fb04 fb0b 	mul.w	fp, r4, fp
 8014e8c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014e8e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014e92:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014e98:	fb04 fa0a 	mul.w	sl, r4, sl
 8014e9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014ea0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014ea4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014ea8:	44de      	add	lr, fp
 8014eaa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014eae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014eb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014eb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014eba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014ebe:	ea4e 040a 	orr.w	r4, lr, sl
 8014ec2:	940a      	str	r4, [sp, #40]	; 0x28
 8014ec4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014ec6:	2cff      	cmp	r4, #255	; 0xff
 8014ec8:	d021      	beq.n	8014f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8014eca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014ecc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014ed0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014ed2:	fb04 fb0b 	mul.w	fp, r4, fp
 8014ed6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014ed8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014edc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014ede:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014ee2:	fb04 fa0a 	mul.w	sl, r4, sl
 8014ee6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014eea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014eee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014ef2:	44de      	add	lr, fp
 8014ef4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014ef8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014efc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014f00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014f04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014f08:	ea4e 040a 	orr.w	r4, lr, sl
 8014f0c:	940f      	str	r4, [sp, #60]	; 0x3c
 8014f0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014f10:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014f14:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014f16:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8014f1a:	fb08 fc0c 	mul.w	ip, r8, ip
 8014f1e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014f22:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8014f26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014f28:	fb01 cc0e 	mla	ip, r1, lr, ip
 8014f2c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8014f30:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014f32:	fb09 cc0e 	mla	ip, r9, lr, ip
 8014f36:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8014f3a:	fb08 f80e 	mul.w	r8, r8, lr
 8014f3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014f42:	fb02 8303 	mla	r3, r2, r3, r8
 8014f46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014f4a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8014f4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014f50:	fb01 330a 	mla	r3, r1, sl, r3
 8014f54:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8014f58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014f5a:	fb09 3901 	mla	r9, r9, r1, r3
 8014f5e:	4342      	muls	r2, r0
 8014f60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014f64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014f68:	883b      	ldrh	r3, [r7, #0]
 8014f6a:	1c50      	adds	r0, r2, #1
 8014f6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f70:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014f74:	ea4c 0c09 	orr.w	ip, ip, r9
 8014f78:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8014f7c:	1219      	asrs	r1, r3, #8
 8014f7e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8014f82:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8014f86:	b2c0      	uxtb	r0, r0
 8014f88:	fb12 f204 	smulbb	r2, r2, r4
 8014f8c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014f90:	fb01 2100 	mla	r1, r1, r0, r2
 8014f94:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8014f98:	10da      	asrs	r2, r3, #3
 8014f9a:	fa5f fc8c 	uxtb.w	ip, ip
 8014f9e:	00db      	lsls	r3, r3, #3
 8014fa0:	fb1c fc04 	smulbb	ip, ip, r4
 8014fa4:	b2db      	uxtb	r3, r3
 8014fa6:	b289      	uxth	r1, r1
 8014fa8:	fb03 c300 	mla	r3, r3, r0, ip
 8014fac:	fa1f fc83 	uxth.w	ip, r3
 8014fb0:	1c4b      	adds	r3, r1, #1
 8014fb2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014fb6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014fba:	fb1e fe04 	smulbb	lr, lr, r4
 8014fbe:	f10c 0301 	add.w	r3, ip, #1
 8014fc2:	fb02 e200 	mla	r2, r2, r0, lr
 8014fc6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8014fca:	b292      	uxth	r2, r2
 8014fcc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8014fd0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014fd4:	430b      	orrs	r3, r1
 8014fd6:	1c51      	adds	r1, r2, #1
 8014fd8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014fdc:	0952      	lsrs	r2, r2, #5
 8014fde:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014fe2:	4313      	orrs	r3, r2
 8014fe4:	803b      	strh	r3, [r7, #0]
 8014fe6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014fe8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014fea:	441a      	add	r2, r3
 8014fec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014fee:	9231      	str	r2, [sp, #196]	; 0xc4
 8014ff0:	441d      	add	r5, r3
 8014ff2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014ff4:	3b01      	subs	r3, #1
 8014ff6:	3702      	adds	r7, #2
 8014ff8:	931a      	str	r3, [sp, #104]	; 0x68
 8014ffa:	e694      	b.n	8014d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014ffc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014ffe:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015000:	441c      	add	r4, r3
 8015002:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015004:	9431      	str	r4, [sp, #196]	; 0xc4
 8015006:	441d      	add	r5, r3
 8015008:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801500a:	3b01      	subs	r3, #1
 801500c:	9309      	str	r3, [sp, #36]	; 0x24
 801500e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015010:	3302      	adds	r3, #2
 8015012:	930c      	str	r3, [sp, #48]	; 0x30
 8015014:	e666      	b.n	8014ce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015016:	d024      	beq.n	8015062 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8015018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801501a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801501c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801501e:	3b01      	subs	r3, #1
 8015020:	fb00 4003 	mla	r0, r0, r3, r4
 8015024:	1400      	asrs	r0, r0, #16
 8015026:	f53f ae7b 	bmi.w	8014d20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801502a:	3901      	subs	r1, #1
 801502c:	4288      	cmp	r0, r1
 801502e:	f6bf ae77 	bge.w	8014d20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015032:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8015034:	fb01 5303 	mla	r3, r1, r3, r5
 8015038:	141b      	asrs	r3, r3, #16
 801503a:	f53f ae71 	bmi.w	8014d20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801503e:	3a01      	subs	r2, #1
 8015040:	4293      	cmp	r3, r2
 8015042:	f6bf ae6d 	bge.w	8014d20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015046:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801504a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801504e:	f1bb 0f00 	cmp.w	fp, #0
 8015052:	dc70      	bgt.n	8015136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8015054:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015056:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801505a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801505c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015060:	930c      	str	r3, [sp, #48]	; 0x30
 8015062:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015064:	2b00      	cmp	r3, #0
 8015066:	f340 81be 	ble.w	80153e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801506a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801506e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015072:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015076:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015078:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801507c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015080:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015084:	eef0 6a48 	vmov.f32	s13, s16
 8015088:	ee69 7a27 	vmul.f32	s15, s18, s15
 801508c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015090:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015094:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8015098:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801509c:	eef0 6a68 	vmov.f32	s13, s17
 80150a0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80150a4:	ee18 2a10 	vmov	r2, s16
 80150a8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80150ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80150b0:	ee18 2a90 	vmov	r2, s17
 80150b4:	9333      	str	r3, [sp, #204]	; 0xcc
 80150b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80150b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80150bc:	9334      	str	r3, [sp, #208]	; 0xd0
 80150be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80150c0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80150c2:	3b01      	subs	r3, #1
 80150c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150c8:	9319      	str	r3, [sp, #100]	; 0x64
 80150ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80150cc:	bf08      	it	eq
 80150ce:	4613      	moveq	r3, r2
 80150d0:	ee16 5a90 	vmov	r5, s13
 80150d4:	9309      	str	r3, [sp, #36]	; 0x24
 80150d6:	eef0 8a67 	vmov.f32	s17, s15
 80150da:	eeb0 8a47 	vmov.f32	s16, s14
 80150de:	e5f3      	b.n	8014cc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80150e0:	2900      	cmp	r1, #0
 80150e2:	f43f ae66 	beq.w	8014db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80150e6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80150ea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80150ee:	900a      	str	r0, [sp, #40]	; 0x28
 80150f0:	0e00      	lsrs	r0, r0, #24
 80150f2:	9013      	str	r0, [sp, #76]	; 0x4c
 80150f4:	e65d      	b.n	8014db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80150f6:	f113 0801 	adds.w	r8, r3, #1
 80150fa:	f53f af74 	bmi.w	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80150fe:	4540      	cmp	r0, r8
 8015100:	f6ff af71 	blt.w	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015104:	f11c 0801 	adds.w	r8, ip, #1
 8015108:	f53f af6d 	bmi.w	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801510c:	45c6      	cmp	lr, r8
 801510e:	f6ff af6a 	blt.w	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015112:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8015114:	9302      	str	r3, [sp, #8]
 8015116:	b200      	sxth	r0, r0
 8015118:	fa0f f38e 	sxth.w	r3, lr
 801511c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015120:	e9cd c203 	strd	ip, r2, [sp, #12]
 8015124:	9301      	str	r3, [sp, #4]
 8015126:	9000      	str	r0, [sp, #0]
 8015128:	4633      	mov	r3, r6
 801512a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801512c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801512e:	4639      	mov	r1, r7
 8015130:	f7ff fc32 	bl	8014998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8015134:	e757      	b.n	8014fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015136:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015138:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801513a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801513e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015140:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015144:	1427      	asrs	r7, r4, #16
 8015146:	142b      	asrs	r3, r5, #16
 8015148:	fb01 7303 	mla	r3, r1, r3, r7
 801514c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801514e:	18e7      	adds	r7, r4, r3
 8015150:	5ce3      	ldrb	r3, [r4, r3]
 8015152:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015156:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801515a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801515e:	2a00      	cmp	r2, #0
 8015160:	f000 8137 	beq.w	80153d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8015164:	f897 e001 	ldrb.w	lr, [r7, #1]
 8015168:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801516c:	9410      	str	r4, [sp, #64]	; 0x40
 801516e:	0e24      	lsrs	r4, r4, #24
 8015170:	9417      	str	r4, [sp, #92]	; 0x5c
 8015172:	b170      	cbz	r0, 8015192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8015174:	eb07 0e01 	add.w	lr, r7, r1
 8015178:	5c79      	ldrb	r1, [r7, r1]
 801517a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801517e:	910b      	str	r1, [sp, #44]	; 0x2c
 8015180:	0e09      	lsrs	r1, r1, #24
 8015182:	9114      	str	r1, [sp, #80]	; 0x50
 8015184:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8015188:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801518c:	9111      	str	r1, [sp, #68]	; 0x44
 801518e:	0e09      	lsrs	r1, r1, #24
 8015190:	9118      	str	r1, [sp, #96]	; 0x60
 8015192:	b292      	uxth	r2, r2
 8015194:	b280      	uxth	r0, r0
 8015196:	fb02 f800 	mul.w	r8, r2, r0
 801519a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801519e:	0112      	lsls	r2, r2, #4
 80151a0:	eba2 0e08 	sub.w	lr, r2, r8
 80151a4:	b280      	uxth	r0, r0
 80151a6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80151aa:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80151ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80151ae:	fa1f fe8e 	uxth.w	lr, lr
 80151b2:	1a12      	subs	r2, r2, r0
 80151b4:	b292      	uxth	r2, r2
 80151b6:	fb0e f101 	mul.w	r1, lr, r1
 80151ba:	fb02 110c 	mla	r1, r2, ip, r1
 80151be:	fb00 1104 	mla	r1, r0, r4, r1
 80151c2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80151c4:	fb08 1104 	mla	r1, r8, r4, r1
 80151c8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80151cc:	2900      	cmp	r1, #0
 80151ce:	f000 80f5 	beq.w	80153bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80151d2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80151d6:	d019      	beq.n	801520c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80151d8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80151dc:	fb0c fa0a 	mul.w	sl, ip, sl
 80151e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80151e4:	fb0c fc03 	mul.w	ip, ip, r3
 80151e8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80151ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80151f0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80151f4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80151f8:	4453      	add	r3, sl
 80151fa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80151fe:	0a1b      	lsrs	r3, r3, #8
 8015200:	0a3f      	lsrs	r7, r7, #8
 8015202:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015206:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801520a:	433b      	orrs	r3, r7
 801520c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801520e:	2cff      	cmp	r4, #255	; 0xff
 8015210:	d020      	beq.n	8015254 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8015212:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015214:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015218:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801521a:	4367      	muls	r7, r4
 801521c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801521e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015222:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015224:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015228:	fb04 fa0a 	mul.w	sl, r4, sl
 801522c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015230:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015234:	44bc      	add	ip, r7
 8015236:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801523a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801523e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015242:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015246:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801524a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801524e:	ea4c 040a 	orr.w	r4, ip, sl
 8015252:	9410      	str	r4, [sp, #64]	; 0x40
 8015254:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015256:	2cff      	cmp	r4, #255	; 0xff
 8015258:	d020      	beq.n	801529c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801525a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801525c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015260:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015262:	4367      	muls	r7, r4
 8015264:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015266:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801526a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801526c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015270:	fb04 fa0a 	mul.w	sl, r4, sl
 8015274:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015278:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801527c:	44bc      	add	ip, r7
 801527e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015282:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015286:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801528a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801528e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015292:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015296:	ea4c 040a 	orr.w	r4, ip, sl
 801529a:	940b      	str	r4, [sp, #44]	; 0x2c
 801529c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801529e:	2cff      	cmp	r4, #255	; 0xff
 80152a0:	d020      	beq.n	80152e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80152a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80152a4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80152a8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80152aa:	4367      	muls	r7, r4
 80152ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80152ae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80152b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80152b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80152b8:	fb04 fa0a 	mul.w	sl, r4, sl
 80152bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80152c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80152c4:	44bc      	add	ip, r7
 80152c6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80152ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80152ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80152d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80152d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80152da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80152de:	ea4c 040a 	orr.w	r4, ip, sl
 80152e2:	9411      	str	r4, [sp, #68]	; 0x44
 80152e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80152e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80152ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80152ec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80152f0:	fb0e f707 	mul.w	r7, lr, r7
 80152f4:	fb02 770c 	mla	r7, r2, ip, r7
 80152f8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80152fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80152fe:	fb00 770c 	mla	r7, r0, ip, r7
 8015302:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015306:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015308:	fb08 770c 	mla	r7, r8, ip, r7
 801530c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8015310:	fb0e fe0c 	mul.w	lr, lr, ip
 8015314:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015318:	fb02 e303 	mla	r3, r2, r3, lr
 801531c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801531e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015320:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015324:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015326:	fb00 330a 	mla	r3, r0, sl, r3
 801532a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801532e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8015332:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015334:	f8b9 0000 	ldrh.w	r0, [r9]
 8015338:	434b      	muls	r3, r1
 801533a:	0a3f      	lsrs	r7, r7, #8
 801533c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015340:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015344:	1c59      	adds	r1, r3, #1
 8015346:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801534a:	ea47 070c 	orr.w	r7, r7, ip
 801534e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015352:	1202      	asrs	r2, r0, #8
 8015354:	0c3b      	lsrs	r3, r7, #16
 8015356:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801535a:	b2c9      	uxtb	r1, r1
 801535c:	fb13 f304 	smulbb	r3, r3, r4
 8015360:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015364:	fb02 3201 	mla	r2, r2, r1, r3
 8015368:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801536c:	10c3      	asrs	r3, r0, #3
 801536e:	b2ff      	uxtb	r7, r7
 8015370:	00c0      	lsls	r0, r0, #3
 8015372:	b292      	uxth	r2, r2
 8015374:	fb1c fc04 	smulbb	ip, ip, r4
 8015378:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801537c:	b2c0      	uxtb	r0, r0
 801537e:	fb17 f704 	smulbb	r7, r7, r4
 8015382:	fb03 c301 	mla	r3, r3, r1, ip
 8015386:	fb00 7001 	mla	r0, r0, r1, r7
 801538a:	f102 0c01 	add.w	ip, r2, #1
 801538e:	b280      	uxth	r0, r0
 8015390:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015394:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8015398:	1c42      	adds	r2, r0, #1
 801539a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801539e:	b29b      	uxth	r3, r3
 80153a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80153a4:	ea42 020c 	orr.w	r2, r2, ip
 80153a8:	f103 0c01 	add.w	ip, r3, #1
 80153ac:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80153b0:	095b      	lsrs	r3, r3, #5
 80153b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153b6:	431a      	orrs	r2, r3
 80153b8:	f8a9 2000 	strh.w	r2, [r9]
 80153bc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80153be:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80153c0:	441a      	add	r2, r3
 80153c2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80153c4:	9231      	str	r2, [sp, #196]	; 0xc4
 80153c6:	f109 0902 	add.w	r9, r9, #2
 80153ca:	441d      	add	r5, r3
 80153cc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80153d0:	e63d      	b.n	801504e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80153d2:	2800      	cmp	r0, #0
 80153d4:	f43f aedd 	beq.w	8015192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80153d8:	5c79      	ldrb	r1, [r7, r1]
 80153da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80153de:	910b      	str	r1, [sp, #44]	; 0x2c
 80153e0:	0e09      	lsrs	r1, r1, #24
 80153e2:	9114      	str	r1, [sp, #80]	; 0x50
 80153e4:	e6d5      	b.n	8015192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80153e6:	b01f      	add	sp, #124	; 0x7c
 80153e8:	ecbd 8b08 	vpop	{d8-d11}
 80153ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80153f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153f4:	880e      	ldrh	r6, [r1, #0]
 80153f6:	b085      	sub	sp, #20
 80153f8:	ea4f 2826 	mov.w	r8, r6, asr #8
 80153fc:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015400:	4691      	mov	r9, r2
 8015402:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015406:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 801540a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801540e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015412:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8015416:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801541a:	9200      	str	r2, [sp, #0]
 801541c:	00f6      	lsls	r6, r6, #3
 801541e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8015422:	9201      	str	r2, [sp, #4]
 8015424:	2c00      	cmp	r4, #0
 8015426:	b2f2      	uxtb	r2, r6
 8015428:	fb04 560c 	mla	r6, r4, ip, r5
 801542c:	9202      	str	r2, [sp, #8]
 801542e:	eb09 0806 	add.w	r8, r9, r6
 8015432:	db3f      	blt.n	80154b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8015434:	45a6      	cmp	lr, r4
 8015436:	dd3d      	ble.n	80154b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8015438:	2d00      	cmp	r5, #0
 801543a:	db39      	blt.n	80154b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801543c:	45ac      	cmp	ip, r5
 801543e:	dd37      	ble.n	80154b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8015440:	f819 2006 	ldrb.w	r2, [r9, r6]
 8015444:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015448:	1c6e      	adds	r6, r5, #1
 801544a:	d436      	bmi.n	80154ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801544c:	45b4      	cmp	ip, r6
 801544e:	dd34      	ble.n	80154ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8015450:	b3a8      	cbz	r0, 80154be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8015452:	f898 6001 	ldrb.w	r6, [r8, #1]
 8015456:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801545a:	3401      	adds	r4, #1
 801545c:	d433      	bmi.n	80154c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801545e:	45a6      	cmp	lr, r4
 8015460:	dd31      	ble.n	80154c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015462:	b39f      	cbz	r7, 80154cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8015464:	2d00      	cmp	r5, #0
 8015466:	eb08 0e0c 	add.w	lr, r8, ip
 801546a:	db2a      	blt.n	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801546c:	45ac      	cmp	ip, r5
 801546e:	dd28      	ble.n	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8015470:	f818 400c 	ldrb.w	r4, [r8, ip]
 8015474:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015478:	3501      	adds	r5, #1
 801547a:	d42a      	bmi.n	80154d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801547c:	45ac      	cmp	ip, r5
 801547e:	dd28      	ble.n	80154d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015480:	b348      	cbz	r0, 80154d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8015482:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8015486:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801548a:	280f      	cmp	r0, #15
 801548c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015490:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015494:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015498:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801549c:	d801      	bhi.n	80154a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801549e:	2f0f      	cmp	r7, #15
 80154a0:	d91b      	bls.n	80154da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 80154a2:	4b7d      	ldr	r3, [pc, #500]	; (8015698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80154a4:	4a7d      	ldr	r2, [pc, #500]	; (801569c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80154a6:	487e      	ldr	r0, [pc, #504]	; (80156a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80154a8:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 80154ac:	f004 ff84 	bl	801a3b8 <__assert_func>
 80154b0:	2200      	movs	r2, #0
 80154b2:	e7c9      	b.n	8015448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 80154b4:	2600      	movs	r6, #0
 80154b6:	4632      	mov	r2, r6
 80154b8:	e7cf      	b.n	801545a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80154ba:	2600      	movs	r6, #0
 80154bc:	e7cd      	b.n	801545a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80154be:	4606      	mov	r6, r0
 80154c0:	e7cb      	b.n	801545a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80154c2:	2400      	movs	r4, #0
 80154c4:	e7d8      	b.n	8015478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 80154c6:	2300      	movs	r3, #0
 80154c8:	461c      	mov	r4, r3
 80154ca:	e7de      	b.n	801548a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80154cc:	463b      	mov	r3, r7
 80154ce:	463c      	mov	r4, r7
 80154d0:	e7db      	b.n	801548a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80154d2:	2300      	movs	r3, #0
 80154d4:	e7d9      	b.n	801548a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80154d6:	4603      	mov	r3, r0
 80154d8:	e7d7      	b.n	801548a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80154da:	b280      	uxth	r0, r0
 80154dc:	b2bf      	uxth	r7, r7
 80154de:	fb00 fe07 	mul.w	lr, r0, r7
 80154e2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80154e6:	0100      	lsls	r0, r0, #4
 80154e8:	eba0 0c0e 	sub.w	ip, r0, lr
 80154ec:	b2bf      	uxth	r7, r7
 80154ee:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80154f2:	fa1f fc8c 	uxth.w	ip, ip
 80154f6:	1bed      	subs	r5, r5, r7
 80154f8:	b2ad      	uxth	r5, r5
 80154fa:	fb0c f00a 	mul.w	r0, ip, sl
 80154fe:	fb05 000b 	mla	r0, r5, fp, r0
 8015502:	fb07 0009 	mla	r0, r7, r9, r0
 8015506:	fb0e 0008 	mla	r0, lr, r8, r0
 801550a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801550e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015512:	9003      	str	r0, [sp, #12]
 8015514:	d018      	beq.n	8015548 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8015516:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801551a:	fb0b f000 	mul.w	r0, fp, r0
 801551e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015522:	fb0b fb02 	mul.w	fp, fp, r2
 8015526:	0a02      	lsrs	r2, r0, #8
 8015528:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801552c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015530:	4402      	add	r2, r0
 8015532:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015536:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801553a:	0a12      	lsrs	r2, r2, #8
 801553c:	0a00      	lsrs	r0, r0, #8
 801553e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015542:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015546:	4302      	orrs	r2, r0
 8015548:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801554c:	d019      	beq.n	8015582 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801554e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015552:	fb0a fb0b 	mul.w	fp, sl, fp
 8015556:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801555a:	fb0a fa06 	mul.w	sl, sl, r6
 801555e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015562:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015566:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801556a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801556e:	445e      	add	r6, fp
 8015570:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015574:	0a36      	lsrs	r6, r6, #8
 8015576:	0a00      	lsrs	r0, r0, #8
 8015578:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801557c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015580:	4306      	orrs	r6, r0
 8015582:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015586:	d019      	beq.n	80155bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8015588:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801558c:	fb09 fa0a 	mul.w	sl, r9, sl
 8015590:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015594:	fb09 f904 	mul.w	r9, r9, r4
 8015598:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801559c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80155a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80155a4:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80155a8:	4454      	add	r4, sl
 80155aa:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80155ae:	0a24      	lsrs	r4, r4, #8
 80155b0:	0a00      	lsrs	r0, r0, #8
 80155b2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80155b6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80155ba:	4304      	orrs	r4, r0
 80155bc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80155c0:	d019      	beq.n	80155f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 80155c2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80155c6:	fb08 f909 	mul.w	r9, r8, r9
 80155ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80155ce:	fb08 f803 	mul.w	r8, r8, r3
 80155d2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80155d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80155da:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80155de:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80155e2:	444b      	add	r3, r9
 80155e4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80155e8:	0a1b      	lsrs	r3, r3, #8
 80155ea:	0a00      	lsrs	r0, r0, #8
 80155ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80155f0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80155f4:	4303      	orrs	r3, r0
 80155f6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80155fa:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80155fe:	fb0c f808 	mul.w	r8, ip, r8
 8015602:	fb05 8800 	mla	r8, r5, r0, r8
 8015606:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801560a:	fb07 8800 	mla	r8, r7, r0, r8
 801560e:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015612:	fb0e 8000 	mla	r0, lr, r0, r8
 8015616:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801561a:	fb0c f606 	mul.w	r6, ip, r6
 801561e:	0a00      	lsrs	r0, r0, #8
 8015620:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015624:	fb05 6202 	mla	r2, r5, r2, r6
 8015628:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801562c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015630:	fb07 2700 	mla	r7, r7, r0, r2
 8015634:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015638:	9b03      	ldr	r3, [sp, #12]
 801563a:	9d00      	ldr	r5, [sp, #0]
 801563c:	9a02      	ldr	r2, [sp, #8]
 801563e:	fb0e 7000 	mla	r0, lr, r0, r7
 8015642:	43dc      	mvns	r4, r3
 8015644:	9b01      	ldr	r3, [sp, #4]
 8015646:	b2e4      	uxtb	r4, r4
 8015648:	0a00      	lsrs	r0, r0, #8
 801564a:	4363      	muls	r3, r4
 801564c:	4365      	muls	r5, r4
 801564e:	4362      	muls	r2, r4
 8015650:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015654:	ea48 0000 	orr.w	r0, r8, r0
 8015658:	4614      	mov	r4, r2
 801565a:	1c5e      	adds	r6, r3, #1
 801565c:	1c6a      	adds	r2, r5, #1
 801565e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8015662:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015666:	0a03      	lsrs	r3, r0, #8
 8015668:	0c02      	lsrs	r2, r0, #16
 801566a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801566e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015672:	00db      	lsls	r3, r3, #3
 8015674:	0212      	lsls	r2, r2, #8
 8015676:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801567a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801567e:	4313      	orrs	r3, r2
 8015680:	1c62      	adds	r2, r4, #1
 8015682:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015686:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801568a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801568e:	4318      	orrs	r0, r3
 8015690:	8008      	strh	r0, [r1, #0]
 8015692:	b005      	add	sp, #20
 8015694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015698:	0801de7e 	.word	0x0801de7e
 801569c:	0801e44a 	.word	0x0801e44a
 80156a0:	0801df02 	.word	0x0801df02

080156a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a8:	ed2d 8b08 	vpush	{d8-d11}
 80156ac:	b09b      	sub	sp, #108	; 0x6c
 80156ae:	eeb0 aa40 	vmov.f32	s20, s0
 80156b2:	9218      	str	r2, [sp, #96]	; 0x60
 80156b4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80156b6:	9116      	str	r1, [sp, #88]	; 0x58
 80156b8:	9307      	str	r3, [sp, #28]
 80156ba:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80156be:	9019      	str	r0, [sp, #100]	; 0x64
 80156c0:	6850      	ldr	r0, [r2, #4]
 80156c2:	6812      	ldr	r2, [r2, #0]
 80156c4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80156c6:	fb00 1303 	mla	r3, r0, r3, r1
 80156ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80156ce:	930a      	str	r3, [sp, #40]	; 0x28
 80156d0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80156d2:	681b      	ldr	r3, [r3, #0]
 80156d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80156d6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80156d8:	685e      	ldr	r6, [r3, #4]
 80156da:	eef0 9a60 	vmov.f32	s19, s1
 80156de:	eeb0 9a41 	vmov.f32	s18, s2
 80156e2:	eeb0 8a62 	vmov.f32	s16, s5
 80156e6:	eef0 8a43 	vmov.f32	s17, s6
 80156ea:	eef0 ba44 	vmov.f32	s23, s8
 80156ee:	eeb0 ba64 	vmov.f32	s22, s9
 80156f2:	eef0 aa45 	vmov.f32	s21, s10
 80156f6:	3604      	adds	r6, #4
 80156f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80156fa:	2b00      	cmp	r3, #0
 80156fc:	dc03      	bgt.n	8015706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80156fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015700:	2b00      	cmp	r3, #0
 8015702:	f340 8373 	ble.w	8015dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8015706:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015708:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801570c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015710:	1e48      	subs	r0, r1, #1
 8015712:	1e57      	subs	r7, r2, #1
 8015714:	9b07      	ldr	r3, [sp, #28]
 8015716:	2b00      	cmp	r3, #0
 8015718:	f340 8190 	ble.w	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801571c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801571e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015722:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015726:	d406      	bmi.n	8015736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015728:	4584      	cmp	ip, r0
 801572a:	da04      	bge.n	8015736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801572c:	2b00      	cmp	r3, #0
 801572e:	db02      	blt.n	8015736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015730:	42bb      	cmp	r3, r7
 8015732:	f2c0 8184 	blt.w	8015a3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8015736:	f11c 0c01 	adds.w	ip, ip, #1
 801573a:	f100 8172 	bmi.w	8015a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801573e:	4561      	cmp	r1, ip
 8015740:	f2c0 816f 	blt.w	8015a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015744:	3301      	adds	r3, #1
 8015746:	f100 816c 	bmi.w	8015a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801574a:	429a      	cmp	r2, r3
 801574c:	f2c0 8169 	blt.w	8015a22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015750:	9b07      	ldr	r3, [sp, #28]
 8015752:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015754:	9317      	str	r3, [sp, #92]	; 0x5c
 8015756:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015758:	2b00      	cmp	r3, #0
 801575a:	f340 818e 	ble.w	8015a7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801575e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015760:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015764:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015766:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801576a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801576c:	141b      	asrs	r3, r3, #16
 801576e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015772:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015776:	f100 81d1 	bmi.w	8015b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801577a:	f101 38ff 	add.w	r8, r1, #4294967295
 801577e:	4543      	cmp	r3, r8
 8015780:	f280 81cc 	bge.w	8015b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015784:	f1bc 0f00 	cmp.w	ip, #0
 8015788:	f2c0 81c8 	blt.w	8015b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801578c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015790:	45c4      	cmp	ip, r8
 8015792:	f280 81c3 	bge.w	8015b1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015796:	b209      	sxth	r1, r1
 8015798:	fb0c 3301 	mla	r3, ip, r1, r3
 801579c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801579e:	eb04 0803 	add.w	r8, r4, r3
 80157a2:	5ce3      	ldrb	r3, [r4, r3]
 80157a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80157a8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80157ac:	2a00      	cmp	r2, #0
 80157ae:	f000 81aa 	beq.w	8015b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 80157b2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80157b6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80157ba:	940b      	str	r4, [sp, #44]	; 0x2c
 80157bc:	0e24      	lsrs	r4, r4, #24
 80157be:	9412      	str	r4, [sp, #72]	; 0x48
 80157c0:	b178      	cbz	r0, 80157e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80157c2:	eb08 0c01 	add.w	ip, r8, r1
 80157c6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80157ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80157ce:	9108      	str	r1, [sp, #32]
 80157d0:	0e09      	lsrs	r1, r1, #24
 80157d2:	9110      	str	r1, [sp, #64]	; 0x40
 80157d4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80157d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80157dc:	910c      	str	r1, [sp, #48]	; 0x30
 80157de:	0e09      	lsrs	r1, r1, #24
 80157e0:	9113      	str	r1, [sp, #76]	; 0x4c
 80157e2:	b292      	uxth	r2, r2
 80157e4:	b280      	uxth	r0, r0
 80157e6:	fb02 f900 	mul.w	r9, r2, r0
 80157ea:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80157ee:	0112      	lsls	r2, r2, #4
 80157f0:	eba2 0809 	sub.w	r8, r2, r9
 80157f4:	b280      	uxth	r0, r0
 80157f6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80157fa:	9912      	ldr	r1, [sp, #72]	; 0x48
 80157fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80157fe:	fa1f f888 	uxth.w	r8, r8
 8015802:	1a12      	subs	r2, r2, r0
 8015804:	b292      	uxth	r2, r2
 8015806:	fb08 f101 	mul.w	r1, r8, r1
 801580a:	fb02 110e 	mla	r1, r2, lr, r1
 801580e:	fb00 1104 	mla	r1, r0, r4, r1
 8015812:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015814:	fb09 1104 	mla	r1, r9, r4, r1
 8015818:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801581c:	2900      	cmp	r1, #0
 801581e:	f000 80f5 	beq.w	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015822:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015826:	d01b      	beq.n	8015860 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015828:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801582c:	fb0e fa0a 	mul.w	sl, lr, sl
 8015830:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015834:	fb0e fe03 	mul.w	lr, lr, r3
 8015838:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801583c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015840:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015844:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015848:	4453      	add	r3, sl
 801584a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801584e:	0a1b      	lsrs	r3, r3, #8
 8015850:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015854:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015858:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801585c:	ea43 030c 	orr.w	r3, r3, ip
 8015860:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015862:	2cff      	cmp	r4, #255	; 0xff
 8015864:	d021      	beq.n	80158aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8015866:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015868:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801586c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801586e:	fb04 fb0b 	mul.w	fp, r4, fp
 8015872:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015874:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015878:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801587a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801587e:	fb04 fa0a 	mul.w	sl, r4, sl
 8015882:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015886:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801588a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801588e:	44de      	add	lr, fp
 8015890:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015894:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015898:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801589c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80158a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80158a4:	ea4e 040a 	orr.w	r4, lr, sl
 80158a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80158aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80158ac:	2cff      	cmp	r4, #255	; 0xff
 80158ae:	d021      	beq.n	80158f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80158b0:	9c08      	ldr	r4, [sp, #32]
 80158b2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80158b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80158b8:	fb04 fb0b 	mul.w	fp, r4, fp
 80158bc:	9c08      	ldr	r4, [sp, #32]
 80158be:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80158c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80158c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80158c8:	fb04 fa0a 	mul.w	sl, r4, sl
 80158cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80158d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80158d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80158d8:	44de      	add	lr, fp
 80158da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80158de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80158e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80158e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80158ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80158ee:	ea4e 040a 	orr.w	r4, lr, sl
 80158f2:	9408      	str	r4, [sp, #32]
 80158f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80158f6:	2cff      	cmp	r4, #255	; 0xff
 80158f8:	d021      	beq.n	801593e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80158fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80158fc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015900:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015902:	fb04 fb0b 	mul.w	fp, r4, fp
 8015906:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015908:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801590c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801590e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015912:	fb04 fa0a 	mul.w	sl, r4, sl
 8015916:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801591a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801591e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015922:	44de      	add	lr, fp
 8015924:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015928:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801592c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015930:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015934:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015938:	ea4e 040a 	orr.w	r4, lr, sl
 801593c:	940c      	str	r4, [sp, #48]	; 0x30
 801593e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015940:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015944:	9c08      	ldr	r4, [sp, #32]
 8015946:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801594a:	fb08 fc0c 	mul.w	ip, r8, ip
 801594e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015952:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015956:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015958:	fb00 cc0e 	mla	ip, r0, lr, ip
 801595c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015960:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015962:	fb09 cc0e 	mla	ip, r9, lr, ip
 8015966:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801596a:	fb08 f80e 	mul.w	r8, r8, lr
 801596e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015972:	fb02 8303 	mla	r3, r2, r3, r8
 8015976:	9a08      	ldr	r2, [sp, #32]
 8015978:	f8b7 8000 	ldrh.w	r8, [r7]
 801597c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015980:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015982:	fb00 330a 	mla	r3, r0, sl, r3
 8015986:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801598a:	fb09 3900 	mla	r9, r9, r0, r3
 801598e:	43c9      	mvns	r1, r1
 8015990:	ea4f 2228 	mov.w	r2, r8, asr #8
 8015994:	fa5f fe81 	uxtb.w	lr, r1
 8015998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801599c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80159a0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80159a4:	fb02 f20e 	mul.w	r2, r2, lr
 80159a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80159ac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80159b0:	ea4c 0c09 	orr.w	ip, ip, r9
 80159b4:	1c53      	adds	r3, r2, #1
 80159b6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80159ba:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80159be:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80159c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80159c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80159ca:	4a63      	ldr	r2, [pc, #396]	; (8015b58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 80159cc:	fb00 f00e 	mul.w	r0, r0, lr
 80159d0:	b2db      	uxtb	r3, r3
 80159d2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80159d6:	1c43      	adds	r3, r0, #1
 80159d8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80159dc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80159e0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80159e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80159e8:	b2c9      	uxtb	r1, r1
 80159ea:	00db      	lsls	r3, r3, #3
 80159ec:	fb01 f10e 	mul.w	r1, r1, lr
 80159f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80159f4:	4313      	orrs	r3, r2
 80159f6:	1c4a      	adds	r2, r1, #1
 80159f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80159fc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8015a00:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8015a04:	ea4c 0c03 	orr.w	ip, ip, r3
 8015a08:	f8a7 c000 	strh.w	ip, [r7]
 8015a0c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015a0e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015a10:	441a      	add	r2, r3
 8015a12:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015a14:	922d      	str	r2, [sp, #180]	; 0xb4
 8015a16:	441d      	add	r5, r3
 8015a18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015a1a:	3b01      	subs	r3, #1
 8015a1c:	3702      	adds	r7, #2
 8015a1e:	9317      	str	r3, [sp, #92]	; 0x5c
 8015a20:	e699      	b.n	8015756 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015a22:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015a24:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015a26:	441c      	add	r4, r3
 8015a28:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015a2a:	942d      	str	r4, [sp, #180]	; 0xb4
 8015a2c:	441d      	add	r5, r3
 8015a2e:	9b07      	ldr	r3, [sp, #28]
 8015a30:	3b01      	subs	r3, #1
 8015a32:	9307      	str	r3, [sp, #28]
 8015a34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015a36:	3302      	adds	r3, #2
 8015a38:	930a      	str	r3, [sp, #40]	; 0x28
 8015a3a:	e66b      	b.n	8015714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015a3c:	d024      	beq.n	8015a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8015a3e:	9b07      	ldr	r3, [sp, #28]
 8015a40:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8015a42:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015a44:	3b01      	subs	r3, #1
 8015a46:	fb00 4003 	mla	r0, r0, r3, r4
 8015a4a:	1400      	asrs	r0, r0, #16
 8015a4c:	f53f ae80 	bmi.w	8015750 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015a50:	3901      	subs	r1, #1
 8015a52:	4288      	cmp	r0, r1
 8015a54:	f6bf ae7c 	bge.w	8015750 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015a58:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8015a5a:	fb01 5303 	mla	r3, r1, r3, r5
 8015a5e:	141b      	asrs	r3, r3, #16
 8015a60:	f53f ae76 	bmi.w	8015750 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015a64:	3a01      	subs	r2, #1
 8015a66:	4293      	cmp	r3, r2
 8015a68:	f6bf ae72 	bge.w	8015750 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015a6c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8015a70:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8015a74:	f1bb 0f00 	cmp.w	fp, #0
 8015a78:	dc70      	bgt.n	8015b5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8015a7a:	9b07      	ldr	r3, [sp, #28]
 8015a7c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015a80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015a82:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015a86:	930a      	str	r3, [sp, #40]	; 0x28
 8015a88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015a8a:	2b00      	cmp	r3, #0
 8015a8c:	f340 81ae 	ble.w	8015dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8015a90:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015a94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015a98:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015a9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015a9e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015aa2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015aa6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015aaa:	eef0 6a48 	vmov.f32	s13, s16
 8015aae:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015ab2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ab6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015aba:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8015abe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015ac2:	eef0 6a68 	vmov.f32	s13, s17
 8015ac6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015aca:	ee18 2a10 	vmov	r2, s16
 8015ace:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015ad2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ad6:	ee18 2a90 	vmov	r2, s17
 8015ada:	932f      	str	r3, [sp, #188]	; 0xbc
 8015adc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015ade:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ae2:	9330      	str	r3, [sp, #192]	; 0xc0
 8015ae4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015ae6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015ae8:	3b01      	subs	r3, #1
 8015aea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015aee:	9316      	str	r3, [sp, #88]	; 0x58
 8015af0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015af2:	bf08      	it	eq
 8015af4:	4613      	moveq	r3, r2
 8015af6:	ee16 5a90 	vmov	r5, s13
 8015afa:	9307      	str	r3, [sp, #28]
 8015afc:	eef0 8a67 	vmov.f32	s17, s15
 8015b00:	eeb0 8a47 	vmov.f32	s16, s14
 8015b04:	e5f8      	b.n	80156f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015b06:	2800      	cmp	r0, #0
 8015b08:	f43f ae6b 	beq.w	80157e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015b0c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8015b10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015b14:	9108      	str	r1, [sp, #32]
 8015b16:	0e09      	lsrs	r1, r1, #24
 8015b18:	9110      	str	r1, [sp, #64]	; 0x40
 8015b1a:	e662      	b.n	80157e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015b1c:	f113 0801 	adds.w	r8, r3, #1
 8015b20:	f53f af74 	bmi.w	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015b24:	4541      	cmp	r1, r8
 8015b26:	f6ff af71 	blt.w	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015b2a:	f11c 0801 	adds.w	r8, ip, #1
 8015b2e:	f53f af6d 	bmi.w	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015b32:	45c6      	cmp	lr, r8
 8015b34:	f6ff af6a 	blt.w	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015b38:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8015b3c:	b209      	sxth	r1, r1
 8015b3e:	fa0f f38e 	sxth.w	r3, lr
 8015b42:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8015b46:	9301      	str	r3, [sp, #4]
 8015b48:	9100      	str	r1, [sp, #0]
 8015b4a:	4633      	mov	r3, r6
 8015b4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b4e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015b50:	4639      	mov	r1, r7
 8015b52:	f7ff fc4d 	bl	80153f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8015b56:	e759      	b.n	8015a0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015b58:	fffff800 	.word	0xfffff800
 8015b5c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015b5e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015b60:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015b64:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015b66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015b6a:	1427      	asrs	r7, r4, #16
 8015b6c:	142b      	asrs	r3, r5, #16
 8015b6e:	fb01 7303 	mla	r3, r1, r3, r7
 8015b72:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015b74:	18e7      	adds	r7, r4, r3
 8015b76:	5ce3      	ldrb	r3, [r4, r3]
 8015b78:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015b7c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015b80:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015b84:	2a00      	cmp	r2, #0
 8015b86:	f000 8127 	beq.w	8015dd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8015b8a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8015b8e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8015b92:	940d      	str	r4, [sp, #52]	; 0x34
 8015b94:	0e24      	lsrs	r4, r4, #24
 8015b96:	9414      	str	r4, [sp, #80]	; 0x50
 8015b98:	b170      	cbz	r0, 8015bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8015b9a:	eb07 0e01 	add.w	lr, r7, r1
 8015b9e:	5c79      	ldrb	r1, [r7, r1]
 8015ba0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015ba4:	9109      	str	r1, [sp, #36]	; 0x24
 8015ba6:	0e09      	lsrs	r1, r1, #24
 8015ba8:	9111      	str	r1, [sp, #68]	; 0x44
 8015baa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8015bae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015bb2:	910e      	str	r1, [sp, #56]	; 0x38
 8015bb4:	0e09      	lsrs	r1, r1, #24
 8015bb6:	9115      	str	r1, [sp, #84]	; 0x54
 8015bb8:	b292      	uxth	r2, r2
 8015bba:	b280      	uxth	r0, r0
 8015bbc:	fb02 f800 	mul.w	r8, r2, r0
 8015bc0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8015bc4:	0112      	lsls	r2, r2, #4
 8015bc6:	eba2 0e08 	sub.w	lr, r2, r8
 8015bca:	b280      	uxth	r0, r0
 8015bcc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8015bd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015bd2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015bd4:	fa1f fe8e 	uxth.w	lr, lr
 8015bd8:	1a09      	subs	r1, r1, r0
 8015bda:	b289      	uxth	r1, r1
 8015bdc:	fb0e f202 	mul.w	r2, lr, r2
 8015be0:	fb01 220c 	mla	r2, r1, ip, r2
 8015be4:	fb00 2204 	mla	r2, r0, r4, r2
 8015be8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015bea:	fb08 2204 	mla	r2, r8, r4, r2
 8015bee:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8015bf2:	2a00      	cmp	r2, #0
 8015bf4:	f000 80e5 	beq.w	8015dc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8015bf8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015bfc:	d019      	beq.n	8015c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8015bfe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015c02:	fb0c fa0a 	mul.w	sl, ip, sl
 8015c06:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c0a:	fb0c fc03 	mul.w	ip, ip, r3
 8015c0e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015c12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015c16:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015c1a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8015c1e:	4453      	add	r3, sl
 8015c20:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015c24:	0a1b      	lsrs	r3, r3, #8
 8015c26:	0a3f      	lsrs	r7, r7, #8
 8015c28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015c2c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015c30:	433b      	orrs	r3, r7
 8015c32:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015c34:	2cff      	cmp	r4, #255	; 0xff
 8015c36:	d020      	beq.n	8015c7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8015c38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015c3a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015c3e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015c40:	4367      	muls	r7, r4
 8015c42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015c44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015c48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015c4a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015c4e:	fb04 fa0a 	mul.w	sl, r4, sl
 8015c52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015c56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c5a:	44bc      	add	ip, r7
 8015c5c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015c60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015c64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015c68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015c6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015c74:	ea4c 040a 	orr.w	r4, ip, sl
 8015c78:	940d      	str	r4, [sp, #52]	; 0x34
 8015c7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c7c:	2cff      	cmp	r4, #255	; 0xff
 8015c7e:	d020      	beq.n	8015cc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8015c80:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015c82:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015c86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c88:	4367      	muls	r7, r4
 8015c8a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015c8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015c90:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c92:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015c96:	fb04 fa0a 	mul.w	sl, r4, sl
 8015c9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015c9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015ca2:	44bc      	add	ip, r7
 8015ca4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015ca8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015cac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015cb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015cb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015cb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015cbc:	ea4c 040a 	orr.w	r4, ip, sl
 8015cc0:	9409      	str	r4, [sp, #36]	; 0x24
 8015cc2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015cc4:	2cff      	cmp	r4, #255	; 0xff
 8015cc6:	d020      	beq.n	8015d0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8015cc8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015cca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015cce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015cd0:	4367      	muls	r7, r4
 8015cd2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015cd4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015cd8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015cda:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015cde:	fb04 fa0a 	mul.w	sl, r4, sl
 8015ce2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015ce6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015cea:	44bc      	add	ip, r7
 8015cec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015cf0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015cf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015cf8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015cfc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015d00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015d04:	ea4c 040a 	orr.w	r4, ip, sl
 8015d08:	940e      	str	r4, [sp, #56]	; 0x38
 8015d0a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015d0c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015d10:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015d12:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015d16:	fb0e f707 	mul.w	r7, lr, r7
 8015d1a:	fb01 770c 	mla	r7, r1, ip, r7
 8015d1e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015d22:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015d24:	fb00 770c 	mla	r7, r0, ip, r7
 8015d28:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015d2c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015d2e:	fb08 770c 	mla	r7, r8, ip, r7
 8015d32:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8015d36:	fb0e fe0c 	mul.w	lr, lr, ip
 8015d3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d3e:	fb01 e303 	mla	r3, r1, r3, lr
 8015d42:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015d44:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8015d48:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015d4a:	fb00 330a 	mla	r3, r0, sl, r3
 8015d4e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8015d52:	fb08 3c0c 	mla	ip, r8, ip, r3
 8015d56:	f8b9 3000 	ldrh.w	r3, [r9]
 8015d5a:	43d2      	mvns	r2, r2
 8015d5c:	1218      	asrs	r0, r3, #8
 8015d5e:	b2d2      	uxtb	r2, r2
 8015d60:	10d9      	asrs	r1, r3, #3
 8015d62:	0a3f      	lsrs	r7, r7, #8
 8015d64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015d68:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015d6c:	00db      	lsls	r3, r3, #3
 8015d6e:	4350      	muls	r0, r2
 8015d70:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015d74:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015d78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015d7c:	b2db      	uxtb	r3, r3
 8015d7e:	ea47 070c 	orr.w	r7, r7, ip
 8015d82:	4351      	muls	r1, r2
 8015d84:	4353      	muls	r3, r2
 8015d86:	1c42      	adds	r2, r0, #1
 8015d88:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015d8c:	0c3a      	lsrs	r2, r7, #16
 8015d8e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015d92:	4a19      	ldr	r2, [pc, #100]	; (8015df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8015d94:	b2c0      	uxtb	r0, r0
 8015d96:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8015d9a:	1c4a      	adds	r2, r1, #1
 8015d9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015da0:	0a3a      	lsrs	r2, r7, #8
 8015da2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015da6:	00c9      	lsls	r1, r1, #3
 8015da8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015dac:	4301      	orrs	r1, r0
 8015dae:	1c58      	adds	r0, r3, #1
 8015db0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015db4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8015db8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8015dbc:	4308      	orrs	r0, r1
 8015dbe:	f8a9 0000 	strh.w	r0, [r9]
 8015dc2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015dc4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015dc6:	441a      	add	r2, r3
 8015dc8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015dca:	922d      	str	r2, [sp, #180]	; 0xb4
 8015dcc:	f109 0902 	add.w	r9, r9, #2
 8015dd0:	441d      	add	r5, r3
 8015dd2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015dd6:	e64d      	b.n	8015a74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8015dd8:	2800      	cmp	r0, #0
 8015dda:	f43f aeed 	beq.w	8015bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8015dde:	5c79      	ldrb	r1, [r7, r1]
 8015de0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015de4:	9109      	str	r1, [sp, #36]	; 0x24
 8015de6:	0e09      	lsrs	r1, r1, #24
 8015de8:	9111      	str	r1, [sp, #68]	; 0x44
 8015dea:	e6e5      	b.n	8015bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8015dec:	b01b      	add	sp, #108	; 0x6c
 8015dee:	ecbd 8b08 	vpop	{d8-d11}
 8015df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015df6:	bf00      	nop
 8015df8:	fffff800 	.word	0xfffff800

08015dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8015dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e00:	b085      	sub	sp, #20
 8015e02:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015e06:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8015e0a:	9103      	str	r1, [sp, #12]
 8015e0c:	fb05 7106 	mla	r1, r5, r6, r7
 8015e10:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8015e14:	2d00      	cmp	r5, #0
 8015e16:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015e1a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8015e1e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8015e22:	9401      	str	r4, [sp, #4]
 8015e24:	eb03 0901 	add.w	r9, r3, r1
 8015e28:	f2c0 80c0 	blt.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015e2c:	45a8      	cmp	r8, r5
 8015e2e:	f340 80bd 	ble.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015e32:	2f00      	cmp	r7, #0
 8015e34:	f2c0 80b6 	blt.w	8015fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8015e38:	42be      	cmp	r6, r7
 8015e3a:	f340 80b3 	ble.w	8015fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8015e3e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8015e42:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8015e46:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015e4a:	d019      	beq.n	8015e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8015e4c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8015e50:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015e54:	435a      	muls	r2, r3
 8015e56:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8015e5a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8015e5e:	fb0c f403 	mul.w	r4, ip, r3
 8015e62:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8015e66:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015e6a:	441a      	add	r2, r3
 8015e6c:	f104 0320 	add.w	r3, r4, #32
 8015e70:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015e74:	0a1b      	lsrs	r3, r3, #8
 8015e76:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8015e7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015e7e:	4319      	orrs	r1, r3
 8015e80:	b289      	uxth	r1, r1
 8015e82:	1c7b      	adds	r3, r7, #1
 8015e84:	f100 8097 	bmi.w	8015fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8015e88:	429e      	cmp	r6, r3
 8015e8a:	f340 8094 	ble.w	8015fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8015e8e:	2800      	cmp	r0, #0
 8015e90:	f000 8094 	beq.w	8015fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8015e94:	f899 4001 	ldrb.w	r4, [r9, #1]
 8015e98:	9b01      	ldr	r3, [sp, #4]
 8015e9a:	2cff      	cmp	r4, #255	; 0xff
 8015e9c:	885b      	ldrh	r3, [r3, #2]
 8015e9e:	d01b      	beq.n	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8015ea0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015ea4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015ea8:	fb0a f202 	mul.w	r2, sl, r2
 8015eac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015eb0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015eb4:	fb04 fa03 	mul.w	sl, r4, r3
 8015eb8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8015ebc:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015ec0:	441a      	add	r2, r3
 8015ec2:	f10a 0320 	add.w	r3, sl, #32
 8015ec6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015eca:	0a1b      	lsrs	r3, r3, #8
 8015ecc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015ed0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015ed4:	ea4b 0303 	orr.w	r3, fp, r3
 8015ed8:	b29b      	uxth	r3, r3
 8015eda:	3501      	adds	r5, #1
 8015edc:	d474      	bmi.n	8015fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8015ede:	45a8      	cmp	r8, r5
 8015ee0:	dd72      	ble.n	8015fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8015ee2:	f1be 0f00 	cmp.w	lr, #0
 8015ee6:	f000 8120 	beq.w	801612a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8015eea:	2f00      	cmp	r7, #0
 8015eec:	db69      	blt.n	8015fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8015eee:	42be      	cmp	r6, r7
 8015ef0:	dd67      	ble.n	8015fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8015ef2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8015ef6:	9a01      	ldr	r2, [sp, #4]
 8015ef8:	2dff      	cmp	r5, #255	; 0xff
 8015efa:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8015efe:	d01c      	beq.n	8015f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8015f00:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8015f04:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015f08:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015f0c:	fb05 fa0b 	mul.w	sl, r5, fp
 8015f10:	fb08 f802 	mul.w	r8, r8, r2
 8015f14:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015f18:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8015f1c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015f20:	4490      	add	r8, r2
 8015f22:	f10a 0220 	add.w	r2, sl, #32
 8015f26:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8015f2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015f2e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8015f32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f36:	ea4b 0b0a 	orr.w	fp, fp, sl
 8015f3a:	fa1f fb8b 	uxth.w	fp, fp
 8015f3e:	3701      	adds	r7, #1
 8015f40:	d447      	bmi.n	8015fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8015f42:	42be      	cmp	r6, r7
 8015f44:	dd45      	ble.n	8015fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8015f46:	2800      	cmp	r0, #0
 8015f48:	d046      	beq.n	8015fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8015f4a:	3601      	adds	r6, #1
 8015f4c:	9a01      	ldr	r2, [sp, #4]
 8015f4e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8015f52:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8015f56:	2fff      	cmp	r7, #255	; 0xff
 8015f58:	d01a      	beq.n	8015f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8015f5a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8015f5e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015f62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015f66:	fb07 f902 	mul.w	r9, r7, r2
 8015f6a:	fb08 f806 	mul.w	r8, r8, r6
 8015f6e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8015f72:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8015f76:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015f7a:	44b0      	add	r8, r6
 8015f7c:	f109 0620 	add.w	r6, r9, #32
 8015f80:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8015f84:	0a36      	lsrs	r6, r6, #8
 8015f86:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8015f8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015f8e:	4332      	orrs	r2, r6
 8015f90:	b292      	uxth	r2, r2
 8015f92:	280f      	cmp	r0, #15
 8015f94:	d922      	bls.n	8015fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015f96:	4b69      	ldr	r3, [pc, #420]	; (801613c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8015f98:	4a69      	ldr	r2, [pc, #420]	; (8016140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8015f9a:	486a      	ldr	r0, [pc, #424]	; (8016144 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8015f9c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015fa0:	f004 fa0a 	bl	801a3b8 <__assert_func>
 8015fa4:	f04f 0c00 	mov.w	ip, #0
 8015fa8:	4661      	mov	r1, ip
 8015faa:	e76a      	b.n	8015e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8015fac:	2400      	movs	r4, #0
 8015fae:	46a4      	mov	ip, r4
 8015fb0:	4623      	mov	r3, r4
 8015fb2:	4621      	mov	r1, r4
 8015fb4:	e791      	b.n	8015eda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015fb6:	2400      	movs	r4, #0
 8015fb8:	4623      	mov	r3, r4
 8015fba:	e78e      	b.n	8015eda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015fbc:	4604      	mov	r4, r0
 8015fbe:	4603      	mov	r3, r0
 8015fc0:	e78b      	b.n	8015eda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015fc2:	2500      	movs	r5, #0
 8015fc4:	46ab      	mov	fp, r5
 8015fc6:	e7ba      	b.n	8015f3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8015fc8:	2700      	movs	r7, #0
 8015fca:	463d      	mov	r5, r7
 8015fcc:	463a      	mov	r2, r7
 8015fce:	46bb      	mov	fp, r7
 8015fd0:	e7df      	b.n	8015f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8015fd2:	2700      	movs	r7, #0
 8015fd4:	463a      	mov	r2, r7
 8015fd6:	e7dc      	b.n	8015f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8015fd8:	4607      	mov	r7, r0
 8015fda:	4602      	mov	r2, r0
 8015fdc:	f1be 0f0f 	cmp.w	lr, #15
 8015fe0:	d8d9      	bhi.n	8015f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8015fe2:	b286      	uxth	r6, r0
 8015fe4:	fa1f f98e 	uxth.w	r9, lr
 8015fe8:	fb06 f809 	mul.w	r8, r6, r9
 8015fec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015ff0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8015ff4:	0136      	lsls	r6, r6, #4
 8015ff6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015ffa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015ffe:	9601      	str	r6, [sp, #4]
 8016000:	ea4a 0101 	orr.w	r1, sl, r1
 8016004:	fa1f f689 	uxth.w	r6, r9
 8016008:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801600c:	fb10 f90e 	smulbb	r9, r0, lr
 8016010:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8016014:	9602      	str	r6, [sp, #8]
 8016016:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801601a:	460e      	mov	r6, r1
 801601c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016020:	f1ce 0110 	rsb	r1, lr, #16
 8016024:	1a09      	subs	r1, r1, r0
 8016026:	ea4a 0303 	orr.w	r3, sl, r3
 801602a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801602e:	4343      	muls	r3, r0
 8016030:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8016034:	9801      	ldr	r0, [sp, #4]
 8016036:	fb01 3106 	mla	r1, r1, r6, r3
 801603a:	9e02      	ldr	r6, [sp, #8]
 801603c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8016040:	1b80      	subs	r0, r0, r6
 8016042:	9e01      	ldr	r6, [sp, #4]
 8016044:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016048:	eba6 0608 	sub.w	r6, r6, r8
 801604c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016050:	b2b6      	uxth	r6, r6
 8016052:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016056:	ea4a 0202 	orr.w	r2, sl, r2
 801605a:	b280      	uxth	r0, r0
 801605c:	4374      	muls	r4, r6
 801605e:	fb09 1302 	mla	r3, r9, r2, r1
 8016062:	fb0c 4400 	mla	r4, ip, r0, r4
 8016066:	9a03      	ldr	r2, [sp, #12]
 8016068:	9802      	ldr	r0, [sp, #8]
 801606a:	8811      	ldrh	r1, [r2, #0]
 801606c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8016070:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8016074:	fb00 4505 	mla	r5, r0, r5, r4
 8016078:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801607c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016080:	fb08 5707 	mla	r7, r8, r7, r5
 8016084:	ea4a 0b0b 	orr.w	fp, sl, fp
 8016088:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801608c:	b292      	uxth	r2, r2
 801608e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8016092:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016096:	4357      	muls	r7, r2
 8016098:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801609c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80160a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80160a4:	f107 0801 	add.w	r8, r7, #1
 80160a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80160ac:	ea43 0e0e 	orr.w	lr, r3, lr
 80160b0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80160b4:	fa1f f38e 	uxth.w	r3, lr
 80160b8:	1208      	asrs	r0, r1, #8
 80160ba:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80160be:	b2ff      	uxtb	r7, r7
 80160c0:	121c      	asrs	r4, r3, #8
 80160c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80160c6:	fb10 f007 	smulbb	r0, r0, r7
 80160ca:	10cd      	asrs	r5, r1, #3
 80160cc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80160d0:	fb04 0402 	mla	r4, r4, r2, r0
 80160d4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80160d8:	10d8      	asrs	r0, r3, #3
 80160da:	fb15 f507 	smulbb	r5, r5, r7
 80160de:	00db      	lsls	r3, r3, #3
 80160e0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80160e4:	fb00 5002 	mla	r0, r0, r2, r5
 80160e8:	b2dd      	uxtb	r5, r3
 80160ea:	00cb      	lsls	r3, r1, #3
 80160ec:	b2db      	uxtb	r3, r3
 80160ee:	fb13 f307 	smulbb	r3, r3, r7
 80160f2:	fb05 3202 	mla	r2, r5, r2, r3
 80160f6:	b2a4      	uxth	r4, r4
 80160f8:	b292      	uxth	r2, r2
 80160fa:	1c63      	adds	r3, r4, #1
 80160fc:	b280      	uxth	r0, r0
 80160fe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8016102:	1c53      	adds	r3, r2, #1
 8016104:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016108:	1c42      	adds	r2, r0, #1
 801610a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801610e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8016112:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016116:	0940      	lsrs	r0, r0, #5
 8016118:	4323      	orrs	r3, r4
 801611a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801611e:	9a03      	ldr	r2, [sp, #12]
 8016120:	4303      	orrs	r3, r0
 8016122:	8013      	strh	r3, [r2, #0]
 8016124:	b005      	add	sp, #20
 8016126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801612a:	280f      	cmp	r0, #15
 801612c:	f63f af33 	bhi.w	8015f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8016130:	4677      	mov	r7, lr
 8016132:	4675      	mov	r5, lr
 8016134:	4672      	mov	r2, lr
 8016136:	46f3      	mov	fp, lr
 8016138:	e753      	b.n	8015fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801613a:	bf00      	nop
 801613c:	0801de7e 	.word	0x0801de7e
 8016140:	0801e44a 	.word	0x0801e44a
 8016144:	0801df02 	.word	0x0801df02

08016148 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801614c:	ed2d 8b08 	vpush	{d8-d11}
 8016150:	b097      	sub	sp, #92	; 0x5c
 8016152:	eeb0 aa40 	vmov.f32	s20, s0
 8016156:	9214      	str	r2, [sp, #80]	; 0x50
 8016158:	9308      	str	r3, [sp, #32]
 801615a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801615c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8016160:	9312      	str	r3, [sp, #72]	; 0x48
 8016162:	9111      	str	r1, [sp, #68]	; 0x44
 8016164:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8016168:	9015      	str	r0, [sp, #84]	; 0x54
 801616a:	6850      	ldr	r0, [r2, #4]
 801616c:	6812      	ldr	r2, [r2, #0]
 801616e:	fb00 1303 	mla	r3, r0, r3, r1
 8016172:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016176:	9309      	str	r3, [sp, #36]	; 0x24
 8016178:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801617a:	681b      	ldr	r3, [r3, #0]
 801617c:	930b      	str	r3, [sp, #44]	; 0x2c
 801617e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016180:	685b      	ldr	r3, [r3, #4]
 8016182:	930c      	str	r3, [sp, #48]	; 0x30
 8016184:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8016188:	930a      	str	r3, [sp, #40]	; 0x28
 801618a:	eef0 9a60 	vmov.f32	s19, s1
 801618e:	eeb0 9a41 	vmov.f32	s18, s2
 8016192:	eeb0 8a62 	vmov.f32	s16, s5
 8016196:	eef0 8a43 	vmov.f32	s17, s6
 801619a:	eef0 ba44 	vmov.f32	s23, s8
 801619e:	eeb0 ba64 	vmov.f32	s22, s9
 80161a2:	eef0 aa45 	vmov.f32	s21, s10
 80161a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80161a8:	2b00      	cmp	r3, #0
 80161aa:	dc03      	bgt.n	80161b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80161ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80161ae:	2b00      	cmp	r3, #0
 80161b0:	f340 83cb 	ble.w	801694a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80161b4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80161b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80161ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80161be:	1e48      	subs	r0, r1, #1
 80161c0:	1e55      	subs	r5, r2, #1
 80161c2:	9b08      	ldr	r3, [sp, #32]
 80161c4:	2b00      	cmp	r3, #0
 80161c6:	f340 81a3 	ble.w	8016510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80161ca:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80161cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80161ce:	1436      	asrs	r6, r6, #16
 80161d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80161d4:	d406      	bmi.n	80161e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80161d6:	4286      	cmp	r6, r0
 80161d8:	da04      	bge.n	80161e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80161da:	2b00      	cmp	r3, #0
 80161dc:	db02      	blt.n	80161e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80161de:	42ab      	cmp	r3, r5
 80161e0:	f2c0 8197 	blt.w	8016512 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80161e4:	3601      	adds	r6, #1
 80161e6:	f100 8184 	bmi.w	80164f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80161ea:	42b1      	cmp	r1, r6
 80161ec:	f2c0 8181 	blt.w	80164f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80161f0:	3301      	adds	r3, #1
 80161f2:	f100 817e 	bmi.w	80164f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80161f6:	429a      	cmp	r2, r3
 80161f8:	f2c0 817b 	blt.w	80164f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80161fc:	9b08      	ldr	r3, [sp, #32]
 80161fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016200:	9313      	str	r3, [sp, #76]	; 0x4c
 8016202:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016206:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016208:	2b00      	cmp	r3, #0
 801620a:	f340 81a4 	ble.w	8016556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801620e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016210:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8016212:	1418      	asrs	r0, r3, #16
 8016214:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016216:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801621a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801621c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016220:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016222:	142d      	asrs	r5, r5, #16
 8016224:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8016228:	f100 81f8 	bmi.w	801661c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801622c:	f102 3eff 	add.w	lr, r2, #4294967295
 8016230:	4575      	cmp	r5, lr
 8016232:	f280 81f3 	bge.w	801661c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016236:	2800      	cmp	r0, #0
 8016238:	f2c0 81f0 	blt.w	801661c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801623c:	f103 3eff 	add.w	lr, r3, #4294967295
 8016240:	4570      	cmp	r0, lr
 8016242:	f280 81eb 	bge.w	801661c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016246:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016248:	b212      	sxth	r2, r2
 801624a:	fb00 5002 	mla	r0, r0, r2, r5
 801624e:	fa1f fe81 	uxth.w	lr, r1
 8016252:	eb03 0a00 	add.w	sl, r3, r0
 8016256:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801625a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801625e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016262:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8016266:	b29b      	uxth	r3, r3
 8016268:	f1bc 0f00 	cmp.w	ip, #0
 801626c:	f000 81b9 	beq.w	80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8016270:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016274:	940d      	str	r4, [sp, #52]	; 0x34
 8016276:	eb0a 0b02 	add.w	fp, sl, r2
 801627a:	fa1f fa8c 	uxth.w	sl, ip
 801627e:	fb0a fe0e 	mul.w	lr, sl, lr
 8016282:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016286:	fa1f fa8a 	uxth.w	sl, sl
 801628a:	eba5 050e 	sub.w	r5, r5, lr
 801628e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016292:	940e      	str	r4, [sp, #56]	; 0x38
 8016294:	eba3 030a 	sub.w	r3, r3, sl
 8016298:	b2ad      	uxth	r5, r5
 801629a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801629c:	b29b      	uxth	r3, r3
 801629e:	fb08 f505 	mul.w	r5, r8, r5
 80162a2:	fb09 5303 	mla	r3, r9, r3, r5
 80162a6:	fb0a 3304 	mla	r3, sl, r4, r3
 80162aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80162ac:	fb0e 3304 	mla	r3, lr, r4, r3
 80162b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80162b4:	2b00      	cmp	r3, #0
 80162b6:	f000 810f 	beq.w	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80162ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80162bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80162c0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80162c4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80162c8:	f000 8190 	beq.w	80165ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80162cc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80162d0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80162d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80162d8:	fb09 f000 	mul.w	r0, r9, r0
 80162dc:	fb0a fe0e 	mul.w	lr, sl, lr
 80162e0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80162e4:	f100 0b20 	add.w	fp, r0, #32
 80162e8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80162ec:	44ce      	add	lr, r9
 80162ee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80162f2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80162f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80162fa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80162fe:	ea4e 0909 	orr.w	r9, lr, r9
 8016302:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016306:	8868      	ldrh	r0, [r5, #2]
 8016308:	d019      	beq.n	801633e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801630a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801630e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016312:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016316:	fb08 f800 	mul.w	r8, r8, r0
 801631a:	fb0a fe0e 	mul.w	lr, sl, lr
 801631e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8016322:	f108 0b20 	add.w	fp, r8, #32
 8016326:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801632a:	4486      	add	lr, r0
 801632c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8016330:	0a00      	lsrs	r0, r0, #8
 8016332:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016336:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801633a:	ea4e 0000 	orr.w	r0, lr, r0
 801633e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016342:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8016346:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801634a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801634e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016352:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016356:	ea4e 0909 	orr.w	r9, lr, r9
 801635a:	ea4a 0000 	orr.w	r0, sl, r0
 801635e:	f1bc 0f00 	cmp.w	ip, #0
 8016362:	f000 8145 	beq.w	80165f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8016366:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801636a:	3a01      	subs	r2, #1
 801636c:	0052      	lsls	r2, r2, #1
 801636e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016370:	3202      	adds	r2, #2
 8016372:	2cff      	cmp	r4, #255	; 0xff
 8016374:	eb05 0e02 	add.w	lr, r5, r2
 8016378:	5aaa      	ldrh	r2, [r5, r2]
 801637a:	d018      	beq.n	80163ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801637c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8016380:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016384:	fb04 fa02 	mul.w	sl, r4, r2
 8016388:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801638c:	fb08 f805 	mul.w	r8, r8, r5
 8016390:	f10a 0520 	add.w	r5, sl, #32
 8016394:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8016398:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801639c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80163a0:	4442      	add	r2, r8
 80163a2:	0a2d      	lsrs	r5, r5, #8
 80163a4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80163a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80163ac:	432a      	orrs	r2, r5
 80163ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80163b0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80163b4:	2cff      	cmp	r4, #255	; 0xff
 80163b6:	d01a      	beq.n	80163ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80163b8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80163bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80163c0:	fb04 fa05 	mul.w	sl, r4, r5
 80163c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80163c8:	fb08 f80e 	mul.w	r8, r8, lr
 80163cc:	f10a 0e20 	add.w	lr, sl, #32
 80163d0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80163d4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80163d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80163dc:	4445      	add	r5, r8
 80163de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80163e2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80163e6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80163ea:	ea45 050e 	orr.w	r5, r5, lr
 80163ee:	fb1c fe01 	smulbb	lr, ip, r1
 80163f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80163f6:	f1cc 0810 	rsb	r8, ip, #16
 80163fa:	eba8 0801 	sub.w	r8, r8, r1
 80163fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016402:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8016406:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801640a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801640e:	4341      	muls	r1, r0
 8016410:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016414:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016418:	ea4a 0202 	orr.w	r2, sl, r2
 801641c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8016420:	fb09 1108 	mla	r1, r9, r8, r1
 8016424:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016428:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801642c:	fb0c 1102 	mla	r1, ip, r2, r1
 8016430:	ea4b 0505 	orr.w	r5, fp, r5
 8016434:	fb0e 1e05 	mla	lr, lr, r5, r1
 8016438:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801643c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016440:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016444:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016448:	ea42 0e0e 	orr.w	lr, r2, lr
 801644c:	fa1f f28e 	uxth.w	r2, lr
 8016450:	2bff      	cmp	r3, #255	; 0xff
 8016452:	d103      	bne.n	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016454:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016456:	29ff      	cmp	r1, #255	; 0xff
 8016458:	f000 80de 	beq.w	8016618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801645c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801645e:	8838      	ldrh	r0, [r7, #0]
 8016460:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016462:	434b      	muls	r3, r1
 8016464:	f103 0c01 	add.w	ip, r3, #1
 8016468:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801646c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016470:	fa5f fc83 	uxtb.w	ip, r3
 8016474:	1203      	asrs	r3, r0, #8
 8016476:	1215      	asrs	r5, r2, #8
 8016478:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801647c:	fb13 f30c 	smulbb	r3, r3, ip
 8016480:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016484:	fb05 3501 	mla	r5, r5, r1, r3
 8016488:	10c3      	asrs	r3, r0, #3
 801648a:	10d1      	asrs	r1, r2, #3
 801648c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016490:	fb13 f30c 	smulbb	r3, r3, ip
 8016494:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016498:	fb01 3104 	mla	r1, r1, r4, r3
 801649c:	00c3      	lsls	r3, r0, #3
 801649e:	00d2      	lsls	r2, r2, #3
 80164a0:	b2db      	uxtb	r3, r3
 80164a2:	b2d2      	uxtb	r2, r2
 80164a4:	fb13 f30c 	smulbb	r3, r3, ip
 80164a8:	b2ad      	uxth	r5, r5
 80164aa:	fb02 3304 	mla	r3, r2, r4, r3
 80164ae:	b29a      	uxth	r2, r3
 80164b0:	1c6b      	adds	r3, r5, #1
 80164b2:	b289      	uxth	r1, r1
 80164b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80164b8:	1c53      	adds	r3, r2, #1
 80164ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80164be:	1c4a      	adds	r2, r1, #1
 80164c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80164c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80164c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80164cc:	0949      	lsrs	r1, r1, #5
 80164ce:	432b      	orrs	r3, r5
 80164d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80164d4:	430b      	orrs	r3, r1
 80164d6:	803b      	strh	r3, [r7, #0]
 80164d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80164da:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80164dc:	4413      	add	r3, r2
 80164de:	9329      	str	r3, [sp, #164]	; 0xa4
 80164e0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80164e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80164e4:	441a      	add	r2, r3
 80164e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80164e8:	922a      	str	r2, [sp, #168]	; 0xa8
 80164ea:	3b01      	subs	r3, #1
 80164ec:	3702      	adds	r7, #2
 80164ee:	9313      	str	r3, [sp, #76]	; 0x4c
 80164f0:	e689      	b.n	8016206 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80164f2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80164f4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80164f6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80164f8:	4433      	add	r3, r6
 80164fa:	9329      	str	r3, [sp, #164]	; 0xa4
 80164fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80164fe:	441c      	add	r4, r3
 8016500:	9b08      	ldr	r3, [sp, #32]
 8016502:	942a      	str	r4, [sp, #168]	; 0xa8
 8016504:	3b01      	subs	r3, #1
 8016506:	9308      	str	r3, [sp, #32]
 8016508:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801650a:	3302      	adds	r3, #2
 801650c:	9309      	str	r3, [sp, #36]	; 0x24
 801650e:	e658      	b.n	80161c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016510:	d028      	beq.n	8016564 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8016512:	9b08      	ldr	r3, [sp, #32]
 8016514:	982b      	ldr	r0, [sp, #172]	; 0xac
 8016516:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8016518:	3b01      	subs	r3, #1
 801651a:	fb00 5003 	mla	r0, r0, r3, r5
 801651e:	1400      	asrs	r0, r0, #16
 8016520:	f53f ae6c 	bmi.w	80161fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016524:	3901      	subs	r1, #1
 8016526:	4288      	cmp	r0, r1
 8016528:	f6bf ae68 	bge.w	80161fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801652c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801652e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8016530:	fb01 0303 	mla	r3, r1, r3, r0
 8016534:	141b      	asrs	r3, r3, #16
 8016536:	f53f ae61 	bmi.w	80161fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801653a:	3a01      	subs	r2, #1
 801653c:	4293      	cmp	r3, r2
 801653e:	f6bf ae5d 	bge.w	80161fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016542:	9b08      	ldr	r3, [sp, #32]
 8016544:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016548:	9313      	str	r3, [sp, #76]	; 0x4c
 801654a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801654e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016550:	2b00      	cmp	r3, #0
 8016552:	f300 8082 	bgt.w	801665a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016556:	9b08      	ldr	r3, [sp, #32]
 8016558:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801655c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801655e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016562:	9309      	str	r3, [sp, #36]	; 0x24
 8016564:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016566:	2b00      	cmp	r3, #0
 8016568:	f340 81ef 	ble.w	801694a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801656c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016570:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016574:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016578:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801657a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801657e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016582:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016586:	eef0 6a48 	vmov.f32	s13, s16
 801658a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801658e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016592:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016596:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801659a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801659e:	eef0 6a68 	vmov.f32	s13, s17
 80165a2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80165a6:	ee18 2a10 	vmov	r2, s16
 80165aa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80165ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80165b2:	ee18 2a90 	vmov	r2, s17
 80165b6:	932b      	str	r3, [sp, #172]	; 0xac
 80165b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80165ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80165be:	932c      	str	r3, [sp, #176]	; 0xb0
 80165c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80165c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80165c4:	3b01      	subs	r3, #1
 80165c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165ca:	9311      	str	r3, [sp, #68]	; 0x44
 80165cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80165ce:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80165d2:	bf08      	it	eq
 80165d4:	4613      	moveq	r3, r2
 80165d6:	9308      	str	r3, [sp, #32]
 80165d8:	eef0 8a67 	vmov.f32	s17, s15
 80165dc:	eeb0 8a47 	vmov.f32	s16, s14
 80165e0:	e5e1      	b.n	80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80165e2:	fb08 f505 	mul.w	r5, r8, r5
 80165e6:	fb09 5303 	mla	r3, r9, r3, r5
 80165ea:	e661      	b.n	80162b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80165ec:	4681      	mov	r9, r0
 80165ee:	e688      	b.n	8016302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80165f0:	f1c1 0210 	rsb	r2, r1, #16
 80165f4:	4341      	muls	r1, r0
 80165f6:	fb09 1902 	mla	r9, r9, r2, r1
 80165fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80165fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016602:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016606:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801660a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801660e:	ea42 0909 	orr.w	r9, r2, r9
 8016612:	fa1f f289 	uxth.w	r2, r9
 8016616:	e71b      	b.n	8016450 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8016618:	803a      	strh	r2, [r7, #0]
 801661a:	e75d      	b.n	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801661c:	f115 0e01 	adds.w	lr, r5, #1
 8016620:	f53f af5a 	bmi.w	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016624:	4572      	cmp	r2, lr
 8016626:	f6ff af57 	blt.w	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801662a:	f110 0e01 	adds.w	lr, r0, #1
 801662e:	f53f af53 	bmi.w	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016632:	4573      	cmp	r3, lr
 8016634:	f6ff af50 	blt.w	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016638:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801663a:	9502      	str	r5, [sp, #8]
 801663c:	b21b      	sxth	r3, r3
 801663e:	b212      	sxth	r2, r2
 8016640:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8016644:	9301      	str	r3, [sp, #4]
 8016646:	9200      	str	r2, [sp, #0]
 8016648:	e9cd c405 	strd	ip, r4, [sp, #20]
 801664c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8016650:	4639      	mov	r1, r7
 8016652:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016654:	f7ff fbd2 	bl	8015dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016658:	e73e      	b.n	80164d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801665a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801665c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016660:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016662:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016666:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016668:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801666c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801666e:	141f      	asrs	r7, r3, #16
 8016670:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016672:	141b      	asrs	r3, r3, #16
 8016674:	fb01 3707 	mla	r7, r1, r7, r3
 8016678:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801667a:	fa1f fc82 	uxth.w	ip, r2
 801667e:	eb03 0a07 	add.w	sl, r3, r7
 8016682:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016686:	f813 9007 	ldrb.w	r9, [r3, r7]
 801668a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801668e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016692:	b29b      	uxth	r3, r3
 8016694:	2d00      	cmp	r5, #0
 8016696:	f000 813d 	beq.w	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801669a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801669e:	940f      	str	r4, [sp, #60]	; 0x3c
 80166a0:	eb0a 0b01 	add.w	fp, sl, r1
 80166a4:	fa1f fa85 	uxth.w	sl, r5
 80166a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80166ac:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80166b0:	fa1f fa8a 	uxth.w	sl, sl
 80166b4:	eba0 000c 	sub.w	r0, r0, ip
 80166b8:	eba3 030a 	sub.w	r3, r3, sl
 80166bc:	b280      	uxth	r0, r0
 80166be:	fb08 f000 	mul.w	r0, r8, r0
 80166c2:	b29b      	uxth	r3, r3
 80166c4:	fb09 0303 	mla	r3, r9, r3, r0
 80166c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80166ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80166ce:	9410      	str	r4, [sp, #64]	; 0x40
 80166d0:	fb0a 3300 	mla	r3, sl, r0, r3
 80166d4:	fb0c 3304 	mla	r3, ip, r4, r3
 80166d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80166dc:	2b00      	cmp	r3, #0
 80166de:	f000 810b 	beq.w	80168f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80166e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80166e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80166e6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80166ea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80166ee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80166f2:	f000 8114 	beq.w	801691e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80166f6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80166fa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80166fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016702:	fb09 f707 	mul.w	r7, r9, r7
 8016706:	fb0a fc0c 	mul.w	ip, sl, ip
 801670a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801670e:	f107 0b20 	add.w	fp, r7, #32
 8016712:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016716:	44cc      	add	ip, r9
 8016718:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801671c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016720:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016724:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016728:	ea4c 0909 	orr.w	r9, ip, r9
 801672c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016730:	8847      	ldrh	r7, [r0, #2]
 8016732:	d019      	beq.n	8016768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8016734:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016738:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801673c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016740:	fb08 f807 	mul.w	r8, r8, r7
 8016744:	fb0a fc0c 	mul.w	ip, sl, ip
 8016748:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801674c:	f108 0b20 	add.w	fp, r8, #32
 8016750:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016754:	44bc      	add	ip, r7
 8016756:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801675a:	0a3f      	lsrs	r7, r7, #8
 801675c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016760:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016764:	ea4c 0707 	orr.w	r7, ip, r7
 8016768:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801676c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016770:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016774:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016778:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801677c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016780:	ea4c 0909 	orr.w	r9, ip, r9
 8016784:	ea4a 0707 	orr.w	r7, sl, r7
 8016788:	2d00      	cmp	r5, #0
 801678a:	f000 80ca 	beq.w	8016922 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801678e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016792:	3901      	subs	r1, #1
 8016794:	0049      	lsls	r1, r1, #1
 8016796:	3102      	adds	r1, #2
 8016798:	eb00 0c01 	add.w	ip, r0, r1
 801679c:	5a41      	ldrh	r1, [r0, r1]
 801679e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80167a0:	28ff      	cmp	r0, #255	; 0xff
 80167a2:	d019      	beq.n	80167d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 80167a4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80167a6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80167aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167ae:	fb04 fa01 	mul.w	sl, r4, r1
 80167b2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80167b6:	fb08 f800 	mul.w	r8, r8, r0
 80167ba:	f10a 0020 	add.w	r0, sl, #32
 80167be:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80167c2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80167c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80167ca:	4441      	add	r1, r8
 80167cc:	0a00      	lsrs	r0, r0, #8
 80167ce:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80167d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80167d6:	4301      	orrs	r1, r0
 80167d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80167da:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80167de:	2cff      	cmp	r4, #255	; 0xff
 80167e0:	d01a      	beq.n	8016818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80167e2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80167e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80167ea:	fb04 fa00 	mul.w	sl, r4, r0
 80167ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80167f2:	fb08 f80c 	mul.w	r8, r8, ip
 80167f6:	f10a 0c20 	add.w	ip, sl, #32
 80167fa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80167fe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8016802:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016806:	4440      	add	r0, r8
 8016808:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801680c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016810:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016814:	ea40 000c 	orr.w	r0, r0, ip
 8016818:	fb15 fc02 	smulbb	ip, r5, r2
 801681c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016820:	f1c5 0810 	rsb	r8, r5, #16
 8016824:	eba8 0802 	sub.w	r8, r8, r2
 8016828:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801682c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016830:	437a      	muls	r2, r7
 8016832:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016836:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801683a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801683e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016842:	fb09 2208 	mla	r2, r9, r8, r2
 8016846:	ea4a 0101 	orr.w	r1, sl, r1
 801684a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801684e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016852:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016856:	fb05 2201 	mla	r2, r5, r1, r2
 801685a:	ea4b 0000 	orr.w	r0, fp, r0
 801685e:	fb0c 2200 	mla	r2, ip, r0, r2
 8016862:	0d57      	lsrs	r7, r2, #21
 8016864:	0952      	lsrs	r2, r2, #5
 8016866:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801686a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801686e:	433a      	orrs	r2, r7
 8016870:	2bff      	cmp	r3, #255	; 0xff
 8016872:	b292      	uxth	r2, r2
 8016874:	d102      	bne.n	801687c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8016876:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016878:	29ff      	cmp	r1, #255	; 0xff
 801687a:	d063      	beq.n	8016944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801687c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801687e:	f8be 1000 	ldrh.w	r1, [lr]
 8016882:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016884:	4343      	muls	r3, r0
 8016886:	1c58      	adds	r0, r3, #1
 8016888:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801688c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016890:	1208      	asrs	r0, r1, #8
 8016892:	b2db      	uxtb	r3, r3
 8016894:	1215      	asrs	r5, r2, #8
 8016896:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801689a:	fb10 f003 	smulbb	r0, r0, r3
 801689e:	10cf      	asrs	r7, r1, #3
 80168a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80168a4:	00c9      	lsls	r1, r1, #3
 80168a6:	fb05 0504 	mla	r5, r5, r4, r0
 80168aa:	b2c9      	uxtb	r1, r1
 80168ac:	10d0      	asrs	r0, r2, #3
 80168ae:	00d2      	lsls	r2, r2, #3
 80168b0:	fb11 f103 	smulbb	r1, r1, r3
 80168b4:	b2d2      	uxtb	r2, r2
 80168b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80168ba:	fb02 1204 	mla	r2, r2, r4, r1
 80168be:	fb17 f703 	smulbb	r7, r7, r3
 80168c2:	b2ad      	uxth	r5, r5
 80168c4:	b292      	uxth	r2, r2
 80168c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80168ca:	fb00 7004 	mla	r0, r0, r4, r7
 80168ce:	1c6b      	adds	r3, r5, #1
 80168d0:	1c57      	adds	r7, r2, #1
 80168d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80168d6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80168da:	b280      	uxth	r0, r0
 80168dc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80168e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80168e4:	433d      	orrs	r5, r7
 80168e6:	1c47      	adds	r7, r0, #1
 80168e8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80168ec:	097f      	lsrs	r7, r7, #5
 80168ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80168f2:	433d      	orrs	r5, r7
 80168f4:	f8ae 5000 	strh.w	r5, [lr]
 80168f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80168fc:	4413      	add	r3, r2
 80168fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8016900:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016902:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016904:	441a      	add	r2, r3
 8016906:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016908:	922a      	str	r2, [sp, #168]	; 0xa8
 801690a:	3b01      	subs	r3, #1
 801690c:	f10e 0e02 	add.w	lr, lr, #2
 8016910:	9313      	str	r3, [sp, #76]	; 0x4c
 8016912:	e61c      	b.n	801654e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8016914:	fb08 f000 	mul.w	r0, r8, r0
 8016918:	fb09 0303 	mla	r3, r9, r3, r0
 801691c:	e6dc      	b.n	80166d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801691e:	46b9      	mov	r9, r7
 8016920:	e704      	b.n	801672c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8016922:	f1c2 0110 	rsb	r1, r2, #16
 8016926:	437a      	muls	r2, r7
 8016928:	fb09 2901 	mla	r9, r9, r1, r2
 801692c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016930:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016934:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016938:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801693c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016940:	4302      	orrs	r2, r0
 8016942:	e795      	b.n	8016870 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8016944:	f8ae 2000 	strh.w	r2, [lr]
 8016948:	e7d6      	b.n	80168f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801694a:	b017      	add	sp, #92	; 0x5c
 801694c:	ecbd 8b08 	vpop	{d8-d11}
 8016950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016954 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016958:	b085      	sub	sp, #20
 801695a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801695e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016962:	9103      	str	r1, [sp, #12]
 8016964:	fb05 7106 	mla	r1, r5, r6, r7
 8016968:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801696c:	2d00      	cmp	r5, #0
 801696e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016972:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016976:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801697a:	9401      	str	r4, [sp, #4]
 801697c:	eb02 0901 	add.w	r9, r2, r1
 8016980:	f2c0 80c0 	blt.w	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016984:	45a8      	cmp	r8, r5
 8016986:	f340 80bd 	ble.w	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801698a:	2f00      	cmp	r7, #0
 801698c:	f2c0 80b6 	blt.w	8016afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8016990:	42be      	cmp	r6, r7
 8016992:	f340 80b3 	ble.w	8016afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8016996:	f812 c001 	ldrb.w	ip, [r2, r1]
 801699a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801699e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80169a2:	d019      	beq.n	80169d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80169a4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80169a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80169ac:	435a      	muls	r2, r3
 80169ae:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80169b2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80169b6:	fb0c f403 	mul.w	r4, ip, r3
 80169ba:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80169be:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80169c2:	441a      	add	r2, r3
 80169c4:	f104 0320 	add.w	r3, r4, #32
 80169c8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80169cc:	0a1b      	lsrs	r3, r3, #8
 80169ce:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80169d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169d6:	4319      	orrs	r1, r3
 80169d8:	b289      	uxth	r1, r1
 80169da:	1c7b      	adds	r3, r7, #1
 80169dc:	f100 8097 	bmi.w	8016b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80169e0:	429e      	cmp	r6, r3
 80169e2:	f340 8094 	ble.w	8016b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80169e6:	2800      	cmp	r0, #0
 80169e8:	f000 8094 	beq.w	8016b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80169ec:	f899 4001 	ldrb.w	r4, [r9, #1]
 80169f0:	9b01      	ldr	r3, [sp, #4]
 80169f2:	2cff      	cmp	r4, #255	; 0xff
 80169f4:	885b      	ldrh	r3, [r3, #2]
 80169f6:	d01b      	beq.n	8016a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 80169f8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80169fc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016a00:	fb0a f202 	mul.w	r2, sl, r2
 8016a04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a08:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016a0c:	fb04 fa03 	mul.w	sl, r4, r3
 8016a10:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016a14:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016a18:	441a      	add	r2, r3
 8016a1a:	f10a 0320 	add.w	r3, sl, #32
 8016a1e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016a22:	0a1b      	lsrs	r3, r3, #8
 8016a24:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016a28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a2c:	ea4b 0303 	orr.w	r3, fp, r3
 8016a30:	b29b      	uxth	r3, r3
 8016a32:	3501      	adds	r5, #1
 8016a34:	d474      	bmi.n	8016b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8016a36:	45a8      	cmp	r8, r5
 8016a38:	dd72      	ble.n	8016b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8016a3a:	f1be 0f00 	cmp.w	lr, #0
 8016a3e:	f000 8110 	beq.w	8016c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8016a42:	2f00      	cmp	r7, #0
 8016a44:	db69      	blt.n	8016b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8016a46:	42be      	cmp	r6, r7
 8016a48:	dd67      	ble.n	8016b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8016a4a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8016a4e:	9a01      	ldr	r2, [sp, #4]
 8016a50:	2dff      	cmp	r5, #255	; 0xff
 8016a52:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8016a56:	d01c      	beq.n	8016a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8016a58:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8016a5c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016a60:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016a64:	fb05 fa0b 	mul.w	sl, r5, fp
 8016a68:	fb08 f802 	mul.w	r8, r8, r2
 8016a6c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016a70:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8016a74:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016a78:	4490      	add	r8, r2
 8016a7a:	f10a 0220 	add.w	r2, sl, #32
 8016a7e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8016a82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a86:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8016a8a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a8e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8016a92:	fa1f fb8b 	uxth.w	fp, fp
 8016a96:	3701      	adds	r7, #1
 8016a98:	d447      	bmi.n	8016b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8016a9a:	42be      	cmp	r6, r7
 8016a9c:	dd45      	ble.n	8016b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8016a9e:	2800      	cmp	r0, #0
 8016aa0:	d046      	beq.n	8016b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8016aa2:	3601      	adds	r6, #1
 8016aa4:	9a01      	ldr	r2, [sp, #4]
 8016aa6:	f819 7006 	ldrb.w	r7, [r9, r6]
 8016aaa:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8016aae:	2fff      	cmp	r7, #255	; 0xff
 8016ab0:	d01a      	beq.n	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8016ab2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8016ab6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016aba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016abe:	fb07 f902 	mul.w	r9, r7, r2
 8016ac2:	fb08 f806 	mul.w	r8, r8, r6
 8016ac6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8016aca:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8016ace:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016ad2:	44b0      	add	r8, r6
 8016ad4:	f109 0620 	add.w	r6, r9, #32
 8016ad8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8016adc:	0a36      	lsrs	r6, r6, #8
 8016ade:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8016ae2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016ae6:	4332      	orrs	r2, r6
 8016ae8:	b292      	uxth	r2, r2
 8016aea:	280f      	cmp	r0, #15
 8016aec:	d922      	bls.n	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016aee:	4b61      	ldr	r3, [pc, #388]	; (8016c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8016af0:	4a61      	ldr	r2, [pc, #388]	; (8016c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8016af2:	4862      	ldr	r0, [pc, #392]	; (8016c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8016af4:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8016af8:	f003 fc5e 	bl	801a3b8 <__assert_func>
 8016afc:	f04f 0c00 	mov.w	ip, #0
 8016b00:	4661      	mov	r1, ip
 8016b02:	e76a      	b.n	80169da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016b04:	2400      	movs	r4, #0
 8016b06:	46a4      	mov	ip, r4
 8016b08:	4623      	mov	r3, r4
 8016b0a:	4621      	mov	r1, r4
 8016b0c:	e791      	b.n	8016a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8016b0e:	2400      	movs	r4, #0
 8016b10:	4623      	mov	r3, r4
 8016b12:	e78e      	b.n	8016a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8016b14:	4604      	mov	r4, r0
 8016b16:	4603      	mov	r3, r0
 8016b18:	e78b      	b.n	8016a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8016b1a:	2500      	movs	r5, #0
 8016b1c:	46ab      	mov	fp, r5
 8016b1e:	e7ba      	b.n	8016a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8016b20:	2700      	movs	r7, #0
 8016b22:	463d      	mov	r5, r7
 8016b24:	463a      	mov	r2, r7
 8016b26:	46bb      	mov	fp, r7
 8016b28:	e7df      	b.n	8016aea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8016b2a:	2700      	movs	r7, #0
 8016b2c:	463a      	mov	r2, r7
 8016b2e:	e7dc      	b.n	8016aea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8016b30:	4607      	mov	r7, r0
 8016b32:	4602      	mov	r2, r0
 8016b34:	f1be 0f0f 	cmp.w	lr, #15
 8016b38:	d8d9      	bhi.n	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8016b3a:	b286      	uxth	r6, r0
 8016b3c:	fa1f f98e 	uxth.w	r9, lr
 8016b40:	fb06 f809 	mul.w	r8, r6, r9
 8016b44:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016b48:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8016b4c:	0136      	lsls	r6, r6, #4
 8016b4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016b52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016b56:	9601      	str	r6, [sp, #4]
 8016b58:	ea4a 0101 	orr.w	r1, sl, r1
 8016b5c:	fa1f f689 	uxth.w	r6, r9
 8016b60:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8016b64:	fb10 f90e 	smulbb	r9, r0, lr
 8016b68:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8016b6c:	9602      	str	r6, [sp, #8]
 8016b6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016b72:	460e      	mov	r6, r1
 8016b74:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016b78:	f1ce 0110 	rsb	r1, lr, #16
 8016b7c:	1a09      	subs	r1, r1, r0
 8016b7e:	ea4a 0303 	orr.w	r3, sl, r3
 8016b82:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8016b86:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016b8a:	4343      	muls	r3, r0
 8016b8c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8016b90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016b94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016b98:	fb01 3106 	mla	r1, r1, r6, r3
 8016b9c:	ea4a 0202 	orr.w	r2, sl, r2
 8016ba0:	fb09 1302 	mla	r3, r9, r2, r1
 8016ba4:	9a03      	ldr	r2, [sp, #12]
 8016ba6:	9802      	ldr	r0, [sp, #8]
 8016ba8:	8811      	ldrh	r1, [r2, #0]
 8016baa:	9a01      	ldr	r2, [sp, #4]
 8016bac:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016bb0:	1a12      	subs	r2, r2, r0
 8016bb2:	9801      	ldr	r0, [sp, #4]
 8016bb4:	eba0 0608 	sub.w	r6, r0, r8
 8016bb8:	b2b6      	uxth	r6, r6
 8016bba:	b292      	uxth	r2, r2
 8016bbc:	4374      	muls	r4, r6
 8016bbe:	fb0c 4402 	mla	r4, ip, r2, r4
 8016bc2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8016bc6:	9a02      	ldr	r2, [sp, #8]
 8016bc8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016bcc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016bd0:	fb02 4505 	mla	r5, r2, r5, r4
 8016bd4:	ea4a 0b0b 	orr.w	fp, sl, fp
 8016bd8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8016bdc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8016be0:	fb08 5707 	mla	r7, r8, r7, r5
 8016be4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016be8:	120a      	asrs	r2, r1, #8
 8016bea:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016bee:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8016bf2:	b2ff      	uxtb	r7, r7
 8016bf4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016bf8:	10c8      	asrs	r0, r1, #3
 8016bfa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016bfe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016c02:	00c9      	lsls	r1, r1, #3
 8016c04:	437a      	muls	r2, r7
 8016c06:	ea43 0e0e 	orr.w	lr, r3, lr
 8016c0a:	b2c9      	uxtb	r1, r1
 8016c0c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016c10:	fa1f f38e 	uxth.w	r3, lr
 8016c14:	4378      	muls	r0, r7
 8016c16:	434f      	muls	r7, r1
 8016c18:	1c51      	adds	r1, r2, #1
 8016c1a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8016c1e:	121a      	asrs	r2, r3, #8
 8016c20:	f022 0207 	bic.w	r2, r2, #7
 8016c24:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016c28:	1c41      	adds	r1, r0, #1
 8016c2a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8016c2e:	10d9      	asrs	r1, r3, #3
 8016c30:	f021 0103 	bic.w	r1, r1, #3
 8016c34:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016c38:	0212      	lsls	r2, r2, #8
 8016c3a:	00c9      	lsls	r1, r1, #3
 8016c3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016c40:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016c44:	430a      	orrs	r2, r1
 8016c46:	1c79      	adds	r1, r7, #1
 8016c48:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8016c4c:	00db      	lsls	r3, r3, #3
 8016c4e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8016c52:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8016c56:	4313      	orrs	r3, r2
 8016c58:	9a03      	ldr	r2, [sp, #12]
 8016c5a:	8013      	strh	r3, [r2, #0]
 8016c5c:	b005      	add	sp, #20
 8016c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c62:	280f      	cmp	r0, #15
 8016c64:	f63f af43 	bhi.w	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8016c68:	4677      	mov	r7, lr
 8016c6a:	4675      	mov	r5, lr
 8016c6c:	4672      	mov	r2, lr
 8016c6e:	46f3      	mov	fp, lr
 8016c70:	e763      	b.n	8016b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8016c72:	bf00      	nop
 8016c74:	0801de7e 	.word	0x0801de7e
 8016c78:	0801e44a 	.word	0x0801e44a
 8016c7c:	0801df02 	.word	0x0801df02

08016c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c84:	ed2d 8b08 	vpush	{d8-d11}
 8016c88:	b093      	sub	sp, #76	; 0x4c
 8016c8a:	eeb0 aa40 	vmov.f32	s20, s0
 8016c8e:	9210      	str	r2, [sp, #64]	; 0x40
 8016c90:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016c92:	910e      	str	r1, [sp, #56]	; 0x38
 8016c94:	9306      	str	r3, [sp, #24]
 8016c96:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8016c9a:	9011      	str	r0, [sp, #68]	; 0x44
 8016c9c:	6850      	ldr	r0, [r2, #4]
 8016c9e:	6812      	ldr	r2, [r2, #0]
 8016ca0:	fb00 1303 	mla	r3, r0, r3, r1
 8016ca4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016ca8:	9307      	str	r3, [sp, #28]
 8016caa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016cac:	681b      	ldr	r3, [r3, #0]
 8016cae:	9308      	str	r3, [sp, #32]
 8016cb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016cb2:	685b      	ldr	r3, [r3, #4]
 8016cb4:	9309      	str	r3, [sp, #36]	; 0x24
 8016cb6:	eef0 9a60 	vmov.f32	s19, s1
 8016cba:	eeb0 9a41 	vmov.f32	s18, s2
 8016cbe:	eeb0 8a62 	vmov.f32	s16, s5
 8016cc2:	eef0 8a43 	vmov.f32	s17, s6
 8016cc6:	eef0 ba44 	vmov.f32	s23, s8
 8016cca:	eeb0 ba64 	vmov.f32	s22, s9
 8016cce:	eef0 aa45 	vmov.f32	s21, s10
 8016cd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016cd4:	2b00      	cmp	r3, #0
 8016cd6:	dc03      	bgt.n	8016ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016cd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016cda:	2b00      	cmp	r3, #0
 8016cdc:	f340 83b7 	ble.w	801744e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8016ce0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ce2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016ce6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016cea:	1e48      	subs	r0, r1, #1
 8016cec:	1e55      	subs	r5, r2, #1
 8016cee:	9b06      	ldr	r3, [sp, #24]
 8016cf0:	2b00      	cmp	r3, #0
 8016cf2:	f340 819a 	ble.w	801702a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016cf6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8016cf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016cfa:	1436      	asrs	r6, r6, #16
 8016cfc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016d00:	d406      	bmi.n	8016d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016d02:	4286      	cmp	r6, r0
 8016d04:	da04      	bge.n	8016d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016d06:	2b00      	cmp	r3, #0
 8016d08:	db02      	blt.n	8016d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016d0a:	42ab      	cmp	r3, r5
 8016d0c:	f2c0 818e 	blt.w	801702c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8016d10:	3601      	adds	r6, #1
 8016d12:	f100 817b 	bmi.w	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016d16:	42b1      	cmp	r1, r6
 8016d18:	f2c0 8178 	blt.w	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016d1c:	3301      	adds	r3, #1
 8016d1e:	f100 8175 	bmi.w	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016d22:	429a      	cmp	r2, r3
 8016d24:	f2c0 8172 	blt.w	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016d28:	9b06      	ldr	r3, [sp, #24]
 8016d2a:	9f07      	ldr	r7, [sp, #28]
 8016d2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8016d2e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016d32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016d34:	2b00      	cmp	r3, #0
 8016d36:	f340 819b 	ble.w	8017070 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016d3a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016d3c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8016d3e:	1418      	asrs	r0, r3, #16
 8016d40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016d42:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8016d46:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016d48:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016d4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016d4e:	142d      	asrs	r5, r5, #16
 8016d50:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8016d54:	f100 81ef 	bmi.w	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8016d58:	f102 3eff 	add.w	lr, r2, #4294967295
 8016d5c:	4575      	cmp	r5, lr
 8016d5e:	f280 81ea 	bge.w	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8016d62:	2800      	cmp	r0, #0
 8016d64:	f2c0 81e7 	blt.w	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8016d68:	f103 3eff 	add.w	lr, r3, #4294967295
 8016d6c:	4570      	cmp	r0, lr
 8016d6e:	f280 81e2 	bge.w	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8016d72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d74:	b212      	sxth	r2, r2
 8016d76:	fb00 5002 	mla	r0, r0, r2, r5
 8016d7a:	fa1f fe81 	uxth.w	lr, r1
 8016d7e:	eb03 0a00 	add.w	sl, r3, r0
 8016d82:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8016d86:	f813 9000 	ldrb.w	r9, [r3, r0]
 8016d8a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016d8e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8016d92:	b29b      	uxth	r3, r3
 8016d94:	f1bc 0f00 	cmp.w	ip, #0
 8016d98:	f000 81b0 	beq.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8016d9c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016da0:	940a      	str	r4, [sp, #40]	; 0x28
 8016da2:	eb0a 0b02 	add.w	fp, sl, r2
 8016da6:	fa1f fa8c 	uxth.w	sl, ip
 8016daa:	fb0a fe0e 	mul.w	lr, sl, lr
 8016dae:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016db2:	fa1f fa8a 	uxth.w	sl, sl
 8016db6:	eba5 050e 	sub.w	r5, r5, lr
 8016dba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016dbe:	940b      	str	r4, [sp, #44]	; 0x2c
 8016dc0:	eba3 030a 	sub.w	r3, r3, sl
 8016dc4:	b2ad      	uxth	r5, r5
 8016dc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016dc8:	b29b      	uxth	r3, r3
 8016dca:	fb08 f505 	mul.w	r5, r8, r5
 8016dce:	fb09 5303 	mla	r3, r9, r3, r5
 8016dd2:	fb0a 3304 	mla	r3, sl, r4, r3
 8016dd6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016dd8:	fb0e 3304 	mla	r3, lr, r4, r3
 8016ddc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016de0:	2b00      	cmp	r3, #0
 8016de2:	f000 8106 	beq.w	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8016de6:	9c08      	ldr	r4, [sp, #32]
 8016de8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016dec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8016df0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8016df4:	f000 8187 	beq.w	8017106 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8016df8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8016dfc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016e00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016e04:	fb09 f000 	mul.w	r0, r9, r0
 8016e08:	fb0a fe0e 	mul.w	lr, sl, lr
 8016e0c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016e10:	f100 0b20 	add.w	fp, r0, #32
 8016e14:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016e18:	44ce      	add	lr, r9
 8016e1a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8016e1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016e22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016e26:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016e2a:	ea4e 0909 	orr.w	r9, lr, r9
 8016e2e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016e32:	8868      	ldrh	r0, [r5, #2]
 8016e34:	d019      	beq.n	8016e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016e36:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8016e3a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016e3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016e42:	fb08 f800 	mul.w	r8, r8, r0
 8016e46:	fb0a fe0e 	mul.w	lr, sl, lr
 8016e4a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8016e4e:	f108 0b20 	add.w	fp, r8, #32
 8016e52:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016e56:	4486      	add	lr, r0
 8016e58:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8016e5c:	0a00      	lsrs	r0, r0, #8
 8016e5e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016e62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016e66:	ea4e 0000 	orr.w	r0, lr, r0
 8016e6a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016e6e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8016e72:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016e76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016e7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016e7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016e82:	ea4e 0909 	orr.w	r9, lr, r9
 8016e86:	ea4a 0000 	orr.w	r0, sl, r0
 8016e8a:	f1bc 0f00 	cmp.w	ip, #0
 8016e8e:	f000 813c 	beq.w	801710a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8016e92:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8016e96:	3a01      	subs	r2, #1
 8016e98:	0052      	lsls	r2, r2, #1
 8016e9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016e9c:	3202      	adds	r2, #2
 8016e9e:	2cff      	cmp	r4, #255	; 0xff
 8016ea0:	eb05 0e02 	add.w	lr, r5, r2
 8016ea4:	5aaa      	ldrh	r2, [r5, r2]
 8016ea6:	d018      	beq.n	8016eda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8016ea8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8016eac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016eb0:	fb04 fa02 	mul.w	sl, r4, r2
 8016eb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016eb8:	fb08 f805 	mul.w	r8, r8, r5
 8016ebc:	f10a 0520 	add.w	r5, sl, #32
 8016ec0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8016ec4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8016ec8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016ecc:	4442      	add	r2, r8
 8016ece:	0a2d      	lsrs	r5, r5, #8
 8016ed0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8016ed4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016ed8:	432a      	orrs	r2, r5
 8016eda:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016edc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8016ee0:	2cff      	cmp	r4, #255	; 0xff
 8016ee2:	d01a      	beq.n	8016f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016ee4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8016ee8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016eec:	fb04 fa05 	mul.w	sl, r4, r5
 8016ef0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016ef4:	fb08 f80e 	mul.w	r8, r8, lr
 8016ef8:	f10a 0e20 	add.w	lr, sl, #32
 8016efc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8016f00:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8016f04:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016f08:	4445      	add	r5, r8
 8016f0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f0e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8016f12:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016f16:	ea45 050e 	orr.w	r5, r5, lr
 8016f1a:	fb1c fe01 	smulbb	lr, ip, r1
 8016f1e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016f22:	f1cc 0810 	rsb	r8, ip, #16
 8016f26:	eba8 0801 	sub.w	r8, r8, r1
 8016f2a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016f2e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8016f32:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8016f36:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8016f3a:	4341      	muls	r1, r0
 8016f3c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016f40:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016f44:	ea4a 0202 	orr.w	r2, sl, r2
 8016f48:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8016f4c:	fb09 1108 	mla	r1, r9, r8, r1
 8016f50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f54:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016f58:	fb0c 1102 	mla	r1, ip, r2, r1
 8016f5c:	ea4b 0505 	orr.w	r5, fp, r5
 8016f60:	fb0e 1e05 	mla	lr, lr, r5, r1
 8016f64:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8016f68:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016f6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016f70:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016f74:	ea42 0e0e 	orr.w	lr, r2, lr
 8016f78:	fa1f f28e 	uxth.w	r2, lr
 8016f7c:	2bff      	cmp	r3, #255	; 0xff
 8016f7e:	f000 80d8 	beq.w	8017132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8016f82:	f8b7 c000 	ldrh.w	ip, [r7]
 8016f86:	43db      	mvns	r3, r3
 8016f88:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016f8c:	fa5f fe83 	uxtb.w	lr, r3
 8016f90:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f94:	fb00 f00e 	mul.w	r0, r0, lr
 8016f98:	1c41      	adds	r1, r0, #1
 8016f9a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8016f9e:	1211      	asrs	r1, r2, #8
 8016fa0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016fa4:	f021 0107 	bic.w	r1, r1, #7
 8016fa8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016fac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016fb0:	486f      	ldr	r0, [pc, #444]	; (8017170 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8016fb2:	fb05 f50e 	mul.w	r5, r5, lr
 8016fb6:	b2c9      	uxtb	r1, r1
 8016fb8:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8016fbc:	1c69      	adds	r1, r5, #1
 8016fbe:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016fc2:	10d1      	asrs	r1, r2, #3
 8016fc4:	f021 0103 	bic.w	r1, r1, #3
 8016fc8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8016fcc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016fd0:	b2db      	uxtb	r3, r3
 8016fd2:	00c9      	lsls	r1, r1, #3
 8016fd4:	fb03 f30e 	mul.w	r3, r3, lr
 8016fd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016fdc:	4301      	orrs	r1, r0
 8016fde:	1c58      	adds	r0, r3, #1
 8016fe0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016fe4:	00d3      	lsls	r3, r2, #3
 8016fe6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016fea:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8016fee:	4319      	orrs	r1, r3
 8016ff0:	8039      	strh	r1, [r7, #0]
 8016ff2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016ff4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016ff6:	4413      	add	r3, r2
 8016ff8:	9325      	str	r3, [sp, #148]	; 0x94
 8016ffa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016ffc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016ffe:	441a      	add	r2, r3
 8017000:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017002:	9226      	str	r2, [sp, #152]	; 0x98
 8017004:	3b01      	subs	r3, #1
 8017006:	3702      	adds	r7, #2
 8017008:	930f      	str	r3, [sp, #60]	; 0x3c
 801700a:	e692      	b.n	8016d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801700c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801700e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8017010:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8017012:	4433      	add	r3, r6
 8017014:	9325      	str	r3, [sp, #148]	; 0x94
 8017016:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017018:	441c      	add	r4, r3
 801701a:	9b06      	ldr	r3, [sp, #24]
 801701c:	9426      	str	r4, [sp, #152]	; 0x98
 801701e:	3b01      	subs	r3, #1
 8017020:	9306      	str	r3, [sp, #24]
 8017022:	9b07      	ldr	r3, [sp, #28]
 8017024:	3302      	adds	r3, #2
 8017026:	9307      	str	r3, [sp, #28]
 8017028:	e661      	b.n	8016cee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801702a:	d028      	beq.n	801707e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 801702c:	9b06      	ldr	r3, [sp, #24]
 801702e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8017030:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017032:	3b01      	subs	r3, #1
 8017034:	fb00 5003 	mla	r0, r0, r3, r5
 8017038:	1400      	asrs	r0, r0, #16
 801703a:	f53f ae75 	bmi.w	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801703e:	3901      	subs	r1, #1
 8017040:	4288      	cmp	r0, r1
 8017042:	f6bf ae71 	bge.w	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017046:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017048:	9826      	ldr	r0, [sp, #152]	; 0x98
 801704a:	fb01 0303 	mla	r3, r1, r3, r0
 801704e:	141b      	asrs	r3, r3, #16
 8017050:	f53f ae6a 	bmi.w	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017054:	3a01      	subs	r2, #1
 8017056:	4293      	cmp	r3, r2
 8017058:	f6bf ae66 	bge.w	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801705c:	9b06      	ldr	r3, [sp, #24]
 801705e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8017062:	930f      	str	r3, [sp, #60]	; 0x3c
 8017064:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017068:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801706a:	2b00      	cmp	r3, #0
 801706c:	f300 8082 	bgt.w	8017174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8017070:	9b06      	ldr	r3, [sp, #24]
 8017072:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017076:	9b07      	ldr	r3, [sp, #28]
 8017078:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801707c:	9307      	str	r3, [sp, #28]
 801707e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017080:	2b00      	cmp	r3, #0
 8017082:	f340 81e4 	ble.w	801744e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8017086:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801708a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801708e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017092:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017094:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017098:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801709c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80170a0:	eef0 6a48 	vmov.f32	s13, s16
 80170a4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80170a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170ac:	ee37 8a48 	vsub.f32	s16, s14, s16
 80170b0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80170b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80170b8:	eef0 6a68 	vmov.f32	s13, s17
 80170bc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80170c0:	ee18 2a10 	vmov	r2, s16
 80170c4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80170c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80170cc:	ee18 2a90 	vmov	r2, s17
 80170d0:	9327      	str	r3, [sp, #156]	; 0x9c
 80170d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80170d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80170d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80170da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80170dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80170de:	3b01      	subs	r3, #1
 80170e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170e4:	930e      	str	r3, [sp, #56]	; 0x38
 80170e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80170e8:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80170ec:	bf08      	it	eq
 80170ee:	4613      	moveq	r3, r2
 80170f0:	9306      	str	r3, [sp, #24]
 80170f2:	eef0 8a67 	vmov.f32	s17, s15
 80170f6:	eeb0 8a47 	vmov.f32	s16, s14
 80170fa:	e5ea      	b.n	8016cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80170fc:	fb08 f505 	mul.w	r5, r8, r5
 8017100:	fb09 5303 	mla	r3, r9, r3, r5
 8017104:	e66a      	b.n	8016ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017106:	4681      	mov	r9, r0
 8017108:	e691      	b.n	8016e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801710a:	f1c1 0210 	rsb	r2, r1, #16
 801710e:	4341      	muls	r1, r0
 8017110:	fb09 1902 	mla	r9, r9, r2, r1
 8017114:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017118:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801711c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017120:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017124:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017128:	ea42 0909 	orr.w	r9, r2, r9
 801712c:	fa1f f289 	uxth.w	r2, r9
 8017130:	e724      	b.n	8016f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017132:	803a      	strh	r2, [r7, #0]
 8017134:	e75d      	b.n	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017136:	f115 0e01 	adds.w	lr, r5, #1
 801713a:	f53f af5a 	bmi.w	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801713e:	4572      	cmp	r2, lr
 8017140:	f6ff af57 	blt.w	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017144:	f110 0e01 	adds.w	lr, r0, #1
 8017148:	f53f af53 	bmi.w	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801714c:	4573      	cmp	r3, lr
 801714e:	f6ff af50 	blt.w	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017152:	b21b      	sxth	r3, r3
 8017154:	b212      	sxth	r2, r2
 8017156:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801715a:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801715e:	9301      	str	r3, [sp, #4]
 8017160:	9200      	str	r2, [sp, #0]
 8017162:	4639      	mov	r1, r7
 8017164:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8017168:	9811      	ldr	r0, [sp, #68]	; 0x44
 801716a:	f7ff fbf3 	bl	8016954 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801716e:	e740      	b.n	8016ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8017170:	fffff800 	.word	0xfffff800
 8017174:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017176:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801717a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801717c:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017180:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017182:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017186:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017188:	141f      	asrs	r7, r3, #16
 801718a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801718c:	141b      	asrs	r3, r3, #16
 801718e:	fb01 3707 	mla	r7, r1, r7, r3
 8017192:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017194:	fa1f fc82 	uxth.w	ip, r2
 8017198:	eb03 0a07 	add.w	sl, r3, r7
 801719c:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80171a0:	f813 9007 	ldrb.w	r9, [r3, r7]
 80171a4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80171a8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80171ac:	b29b      	uxth	r3, r3
 80171ae:	2d00      	cmp	r5, #0
 80171b0:	f000 8132 	beq.w	8017418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 80171b4:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80171b8:	940c      	str	r4, [sp, #48]	; 0x30
 80171ba:	eb0a 0b01 	add.w	fp, sl, r1
 80171be:	fa1f fa85 	uxth.w	sl, r5
 80171c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80171c6:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80171ca:	fa1f fa8a 	uxth.w	sl, sl
 80171ce:	eba0 000c 	sub.w	r0, r0, ip
 80171d2:	eba3 030a 	sub.w	r3, r3, sl
 80171d6:	b280      	uxth	r0, r0
 80171d8:	fb08 f000 	mul.w	r0, r8, r0
 80171dc:	b29b      	uxth	r3, r3
 80171de:	fb09 0303 	mla	r3, r9, r3, r0
 80171e2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80171e4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80171e8:	940d      	str	r4, [sp, #52]	; 0x34
 80171ea:	fb0a 3300 	mla	r3, sl, r0, r3
 80171ee:	fb0c 3304 	mla	r3, ip, r4, r3
 80171f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80171f6:	2b00      	cmp	r3, #0
 80171f8:	f000 8100 	beq.w	80173fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 80171fc:	9808      	ldr	r0, [sp, #32]
 80171fe:	9c08      	ldr	r4, [sp, #32]
 8017200:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017204:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017208:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801720c:	f000 8109 	beq.w	8017422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 8017210:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017214:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017218:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801721c:	fb09 f707 	mul.w	r7, r9, r7
 8017220:	fb0a fc0c 	mul.w	ip, sl, ip
 8017224:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017228:	f107 0b20 	add.w	fp, r7, #32
 801722c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017230:	44cc      	add	ip, r9
 8017232:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017236:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801723a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801723e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017242:	ea4c 0909 	orr.w	r9, ip, r9
 8017246:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801724a:	8847      	ldrh	r7, [r0, #2]
 801724c:	d019      	beq.n	8017282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801724e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017252:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017256:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801725a:	fb08 f807 	mul.w	r8, r8, r7
 801725e:	fb0a fc0c 	mul.w	ip, sl, ip
 8017262:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017266:	f108 0b20 	add.w	fp, r8, #32
 801726a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801726e:	44bc      	add	ip, r7
 8017270:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017274:	0a3f      	lsrs	r7, r7, #8
 8017276:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801727a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801727e:	ea4c 0707 	orr.w	r7, ip, r7
 8017282:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017286:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801728a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801728e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017292:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017296:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801729a:	ea4c 0909 	orr.w	r9, ip, r9
 801729e:	ea4a 0707 	orr.w	r7, sl, r7
 80172a2:	2d00      	cmp	r5, #0
 80172a4:	f000 80bf 	beq.w	8017426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 80172a8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80172ac:	3901      	subs	r1, #1
 80172ae:	0049      	lsls	r1, r1, #1
 80172b0:	3102      	adds	r1, #2
 80172b2:	eb00 0c01 	add.w	ip, r0, r1
 80172b6:	5a41      	ldrh	r1, [r0, r1]
 80172b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80172ba:	28ff      	cmp	r0, #255	; 0xff
 80172bc:	d019      	beq.n	80172f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 80172be:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80172c0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80172c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172c8:	fb04 fa01 	mul.w	sl, r4, r1
 80172cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80172d0:	fb08 f800 	mul.w	r8, r8, r0
 80172d4:	f10a 0020 	add.w	r0, sl, #32
 80172d8:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80172dc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80172e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80172e4:	4441      	add	r1, r8
 80172e6:	0a00      	lsrs	r0, r0, #8
 80172e8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80172ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80172f0:	4301      	orrs	r1, r0
 80172f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172f4:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80172f8:	2cff      	cmp	r4, #255	; 0xff
 80172fa:	d01a      	beq.n	8017332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80172fc:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017300:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017304:	fb04 fa00 	mul.w	sl, r4, r0
 8017308:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801730c:	fb08 f80c 	mul.w	r8, r8, ip
 8017310:	f10a 0c20 	add.w	ip, sl, #32
 8017314:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017318:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801731c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017320:	4440      	add	r0, r8
 8017322:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017326:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801732a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801732e:	ea40 000c 	orr.w	r0, r0, ip
 8017332:	fb15 fc02 	smulbb	ip, r5, r2
 8017336:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801733a:	f1c5 0810 	rsb	r8, r5, #16
 801733e:	eba8 0802 	sub.w	r8, r8, r2
 8017342:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017346:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801734a:	437a      	muls	r2, r7
 801734c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017350:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017354:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017358:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801735c:	fb09 2208 	mla	r2, r9, r8, r2
 8017360:	ea4a 0101 	orr.w	r1, sl, r1
 8017364:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017368:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801736c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017370:	fb05 2201 	mla	r2, r5, r1, r2
 8017374:	ea4b 0000 	orr.w	r0, fp, r0
 8017378:	fb0c 2200 	mla	r2, ip, r0, r2
 801737c:	0d57      	lsrs	r7, r2, #21
 801737e:	0952      	lsrs	r2, r2, #5
 8017380:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017384:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017388:	433a      	orrs	r2, r7
 801738a:	2bff      	cmp	r3, #255	; 0xff
 801738c:	b292      	uxth	r2, r2
 801738e:	d05b      	beq.n	8017448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8017390:	f8be 7000 	ldrh.w	r7, [lr]
 8017394:	4c30      	ldr	r4, [pc, #192]	; (8017458 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8017396:	43db      	mvns	r3, r3
 8017398:	1238      	asrs	r0, r7, #8
 801739a:	fa5f fc83 	uxtb.w	ip, r3
 801739e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80173a2:	10fd      	asrs	r5, r7, #3
 80173a4:	fb00 f00c 	mul.w	r0, r0, ip
 80173a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80173ac:	fb05 f10c 	mul.w	r1, r5, ip
 80173b0:	1c45      	adds	r5, r0, #1
 80173b2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80173b6:	1215      	asrs	r5, r2, #8
 80173b8:	f025 0507 	bic.w	r5, r5, #7
 80173bc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80173c0:	1c4d      	adds	r5, r1, #1
 80173c2:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80173c6:	10d1      	asrs	r1, r2, #3
 80173c8:	f021 0103 	bic.w	r1, r1, #3
 80173cc:	00fb      	lsls	r3, r7, #3
 80173ce:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80173d2:	b2db      	uxtb	r3, r3
 80173d4:	b2c0      	uxtb	r0, r0
 80173d6:	00c9      	lsls	r1, r1, #3
 80173d8:	fb03 f30c 	mul.w	r3, r3, ip
 80173dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80173e0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80173e4:	4308      	orrs	r0, r1
 80173e6:	1c59      	adds	r1, r3, #1
 80173e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80173ec:	00d2      	lsls	r2, r2, #3
 80173ee:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80173f2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80173f6:	4318      	orrs	r0, r3
 80173f8:	f8ae 0000 	strh.w	r0, [lr]
 80173fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80173fe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017400:	4413      	add	r3, r2
 8017402:	9325      	str	r3, [sp, #148]	; 0x94
 8017404:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017406:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017408:	441a      	add	r2, r3
 801740a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801740c:	9226      	str	r2, [sp, #152]	; 0x98
 801740e:	3b01      	subs	r3, #1
 8017410:	f10e 0e02 	add.w	lr, lr, #2
 8017414:	930f      	str	r3, [sp, #60]	; 0x3c
 8017416:	e627      	b.n	8017068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 8017418:	fb08 f000 	mul.w	r0, r8, r0
 801741c:	fb09 0303 	mla	r3, r9, r3, r0
 8017420:	e6e7      	b.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 8017422:	46b9      	mov	r9, r7
 8017424:	e70f      	b.n	8017246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8017426:	f1c2 0110 	rsb	r1, r2, #16
 801742a:	437a      	muls	r2, r7
 801742c:	fb09 2901 	mla	r9, r9, r1, r2
 8017430:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017434:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017438:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801743c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017440:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017444:	4302      	orrs	r2, r0
 8017446:	e7a0      	b.n	801738a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8017448:	f8ae 2000 	strh.w	r2, [lr]
 801744c:	e7d6      	b.n	80173fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 801744e:	b013      	add	sp, #76	; 0x4c
 8017450:	ecbd 8b08 	vpop	{d8-d11}
 8017454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017458:	fffff800 	.word	0xfffff800

0801745c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801745c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017460:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8017464:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017468:	f1bc 0f00 	cmp.w	ip, #0
 801746c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017470:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8017474:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017478:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801747c:	8808      	ldrh	r0, [r1, #0]
 801747e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8017482:	db2f      	blt.n	80174e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017484:	45e2      	cmp	sl, ip
 8017486:	dd2d      	ble.n	80174e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017488:	2c00      	cmp	r4, #0
 801748a:	db29      	blt.n	80174e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801748c:	42a3      	cmp	r3, r4
 801748e:	dd27      	ble.n	80174e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017490:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8017494:	1c62      	adds	r2, r4, #1
 8017496:	d428      	bmi.n	80174ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017498:	4293      	cmp	r3, r2
 801749a:	dd26      	ble.n	80174ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801749c:	b32f      	cbz	r7, 80174ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801749e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80174a2:	f11c 0c01 	adds.w	ip, ip, #1
 80174a6:	d424      	bmi.n	80174f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80174a8:	45e2      	cmp	sl, ip
 80174aa:	dd22      	ble.n	80174f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80174ac:	2e00      	cmp	r6, #0
 80174ae:	f000 809d 	beq.w	80175ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80174b2:	2c00      	cmp	r4, #0
 80174b4:	db1b      	blt.n	80174ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80174b6:	42a3      	cmp	r3, r4
 80174b8:	dd19      	ble.n	80174ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80174ba:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80174be:	3401      	adds	r4, #1
 80174c0:	d41a      	bmi.n	80174f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80174c2:	42a3      	cmp	r3, r4
 80174c4:	dd18      	ble.n	80174f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80174c6:	b1cf      	cbz	r7, 80174fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80174c8:	3301      	adds	r3, #1
 80174ca:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80174ce:	2f0f      	cmp	r7, #15
 80174d0:	d915      	bls.n	80174fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80174d2:	4b49      	ldr	r3, [pc, #292]	; (80175f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80174d4:	4a49      	ldr	r2, [pc, #292]	; (80175fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80174d6:	484a      	ldr	r0, [pc, #296]	; (8017600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80174d8:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 80174dc:	f002 ff6c 	bl	801a3b8 <__assert_func>
 80174e0:	4681      	mov	r9, r0
 80174e2:	e7d7      	b.n	8017494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80174e4:	4686      	mov	lr, r0
 80174e6:	4681      	mov	r9, r0
 80174e8:	e7db      	b.n	80174a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80174ea:	4686      	mov	lr, r0
 80174ec:	e7d9      	b.n	80174a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80174ee:	4684      	mov	ip, r0
 80174f0:	e7e5      	b.n	80174be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80174f2:	4603      	mov	r3, r0
 80174f4:	4684      	mov	ip, r0
 80174f6:	e7ea      	b.n	80174ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80174f8:	4603      	mov	r3, r0
 80174fa:	e7e8      	b.n	80174ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80174fc:	4603      	mov	r3, r0
 80174fe:	2e0f      	cmp	r6, #15
 8017500:	d8e7      	bhi.n	80174d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017502:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017506:	fb17 f806 	smulbb	r8, r7, r6
 801750a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801750e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8017512:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017516:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801751a:	ea44 0909 	orr.w	r9, r4, r9
 801751e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017522:	f1c6 0410 	rsb	r4, r6, #16
 8017526:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801752a:	1be4      	subs	r4, r4, r7
 801752c:	041a      	lsls	r2, r3, #16
 801752e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8017532:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017536:	fb07 fe0e 	mul.w	lr, r7, lr
 801753a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801753e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017542:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017546:	fb04 e409 	mla	r4, r4, r9, lr
 801754a:	4313      	orrs	r3, r2
 801754c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017550:	fb08 4303 	mla	r3, r8, r3, r4
 8017554:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017558:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801755c:	4322      	orrs	r2, r4
 801755e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017562:	fb06 3202 	mla	r2, r6, r2, r3
 8017566:	0d53      	lsrs	r3, r2, #21
 8017568:	0952      	lsrs	r2, r2, #5
 801756a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801756e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017572:	431a      	orrs	r2, r3
 8017574:	b293      	uxth	r3, r2
 8017576:	b2af      	uxth	r7, r5
 8017578:	1202      	asrs	r2, r0, #8
 801757a:	43ed      	mvns	r5, r5
 801757c:	b2ed      	uxtb	r5, r5
 801757e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017582:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017586:	fb12 f205 	smulbb	r2, r2, r5
 801758a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801758e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017592:	00dc      	lsls	r4, r3, #3
 8017594:	10da      	asrs	r2, r3, #3
 8017596:	10c6      	asrs	r6, r0, #3
 8017598:	00c3      	lsls	r3, r0, #3
 801759a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801759e:	b2db      	uxtb	r3, r3
 80175a0:	fb16 f605 	smulbb	r6, r6, r5
 80175a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80175a8:	b2e4      	uxtb	r4, r4
 80175aa:	fb13 f305 	smulbb	r3, r3, r5
 80175ae:	fa1f fc8c 	uxth.w	ip, ip
 80175b2:	fb02 6207 	mla	r2, r2, r7, r6
 80175b6:	fb04 3307 	mla	r3, r4, r7, r3
 80175ba:	b296      	uxth	r6, r2
 80175bc:	b29a      	uxth	r2, r3
 80175be:	f10c 0301 	add.w	r3, ip, #1
 80175c2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80175c6:	1c53      	adds	r3, r2, #1
 80175c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80175cc:	1c72      	adds	r2, r6, #1
 80175ce:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80175d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80175d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80175da:	0952      	lsrs	r2, r2, #5
 80175dc:	ea43 030c 	orr.w	r3, r3, ip
 80175e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175e4:	4313      	orrs	r3, r2
 80175e6:	800b      	strh	r3, [r1, #0]
 80175e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80175ec:	2f0f      	cmp	r7, #15
 80175ee:	f63f af70 	bhi.w	80174d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80175f2:	4603      	mov	r3, r0
 80175f4:	4684      	mov	ip, r0
 80175f6:	e784      	b.n	8017502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80175f8:	0801de7e 	.word	0x0801de7e
 80175fc:	0801e4f3 	.word	0x0801e4f3
 8017600:	0801df02 	.word	0x0801df02

08017604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017608:	ed2d 8b08 	vpush	{d8-d11}
 801760c:	b093      	sub	sp, #76	; 0x4c
 801760e:	461d      	mov	r5, r3
 8017610:	9210      	str	r2, [sp, #64]	; 0x40
 8017612:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017614:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8017618:	920b      	str	r2, [sp, #44]	; 0x2c
 801761a:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801761e:	910a      	str	r1, [sp, #40]	; 0x28
 8017620:	6859      	ldr	r1, [r3, #4]
 8017622:	681b      	ldr	r3, [r3, #0]
 8017624:	9011      	str	r0, [sp, #68]	; 0x44
 8017626:	fb01 2707 	mla	r7, r1, r7, r2
 801762a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801762e:	9307      	str	r3, [sp, #28]
 8017630:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017632:	681b      	ldr	r3, [r3, #0]
 8017634:	9309      	str	r3, [sp, #36]	; 0x24
 8017636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017638:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801763c:	43db      	mvns	r3, r3
 801763e:	b2db      	uxtb	r3, r3
 8017640:	eeb0 aa40 	vmov.f32	s20, s0
 8017644:	eef0 9a60 	vmov.f32	s19, s1
 8017648:	eeb0 9a41 	vmov.f32	s18, s2
 801764c:	eeb0 8a62 	vmov.f32	s16, s5
 8017650:	eef0 8a43 	vmov.f32	s17, s6
 8017654:	eef0 ba44 	vmov.f32	s23, s8
 8017658:	eeb0 ba64 	vmov.f32	s22, s9
 801765c:	eef0 aa45 	vmov.f32	s21, s10
 8017660:	9308      	str	r3, [sp, #32]
 8017662:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017664:	2b00      	cmp	r3, #0
 8017666:	dc03      	bgt.n	8017670 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017668:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801766a:	2b00      	cmp	r3, #0
 801766c:	f340 8203 	ble.w	8017a76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8017670:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017676:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801767a:	1e48      	subs	r0, r1, #1
 801767c:	f102 3cff 	add.w	ip, r2, #4294967295
 8017680:	2d00      	cmp	r5, #0
 8017682:	f340 80da 	ble.w	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017686:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801768a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801768e:	d406      	bmi.n	801769e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017690:	4586      	cmp	lr, r0
 8017692:	da04      	bge.n	801769e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017694:	2b00      	cmp	r3, #0
 8017696:	db02      	blt.n	801769e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017698:	4563      	cmp	r3, ip
 801769a:	f2c0 80cf 	blt.w	801783c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801769e:	f11e 0e01 	adds.w	lr, lr, #1
 80176a2:	f100 80c1 	bmi.w	8017828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80176a6:	4571      	cmp	r1, lr
 80176a8:	f2c0 80be 	blt.w	8017828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80176ac:	3301      	adds	r3, #1
 80176ae:	f100 80bb 	bmi.w	8017828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80176b2:	429a      	cmp	r2, r3
 80176b4:	f2c0 80b8 	blt.w	8017828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80176b8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80176bc:	46a9      	mov	r9, r5
 80176be:	f1b9 0f00 	cmp.w	r9, #0
 80176c2:	f340 80d8 	ble.w	8017876 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80176c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80176c8:	1421      	asrs	r1, r4, #16
 80176ca:	ea4f 4026 	mov.w	r0, r6, asr #16
 80176ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80176d2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80176d6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80176da:	f100 8111 	bmi.w	8017900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80176de:	f10e 3aff 	add.w	sl, lr, #4294967295
 80176e2:	4551      	cmp	r1, sl
 80176e4:	f280 810c 	bge.w	8017900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80176e8:	2800      	cmp	r0, #0
 80176ea:	f2c0 8109 	blt.w	8017900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80176ee:	f103 3aff 	add.w	sl, r3, #4294967295
 80176f2:	4550      	cmp	r0, sl
 80176f4:	f280 8104 	bge.w	8017900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80176f8:	fa0f f38e 	sxth.w	r3, lr
 80176fc:	fb00 1103 	mla	r1, r0, r3, r1
 8017700:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017702:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8017706:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801770a:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801770e:	f1bc 0f00 	cmp.w	ip, #0
 8017712:	d007      	beq.n	8017724 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8017714:	005b      	lsls	r3, r3, #1
 8017716:	eb0a 0003 	add.w	r0, sl, r3
 801771a:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801771e:	930c      	str	r3, [sp, #48]	; 0x30
 8017720:	8843      	ldrh	r3, [r0, #2]
 8017722:	930d      	str	r3, [sp, #52]	; 0x34
 8017724:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8017728:	fb12 f30c 	smulbb	r3, r2, ip
 801772c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017730:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017734:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017738:	10db      	asrs	r3, r3, #3
 801773a:	ea40 000e 	orr.w	r0, r0, lr
 801773e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017742:	f1cc 0e10 	rsb	lr, ip, #16
 8017746:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801774a:	ebae 0e02 	sub.w	lr, lr, r2
 801774e:	ea4a 0101 	orr.w	r1, sl, r1
 8017752:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017756:	4351      	muls	r1, r2
 8017758:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801775a:	9f08      	ldr	r7, [sp, #32]
 801775c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8017760:	fb0e 1e00 	mla	lr, lr, r0, r1
 8017764:	0410      	lsls	r0, r2, #16
 8017766:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801776a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801776e:	4310      	orrs	r0, r2
 8017770:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017772:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017774:	0412      	lsls	r2, r2, #16
 8017776:	fb03 e000 	mla	r0, r3, r0, lr
 801777a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801777e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017782:	ea42 020e 	orr.w	r2, r2, lr
 8017786:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801778a:	fb03 0302 	mla	r3, r3, r2, r0
 801778e:	0d5a      	lsrs	r2, r3, #21
 8017790:	095b      	lsrs	r3, r3, #5
 8017792:	f8b8 0000 	ldrh.w	r0, [r8]
 8017796:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801779a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801779e:	4313      	orrs	r3, r2
 80177a0:	b29b      	uxth	r3, r3
 80177a2:	1201      	asrs	r1, r0, #8
 80177a4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80177a8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80177ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80177b0:	fb11 f107 	smulbb	r1, r1, r7
 80177b4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80177b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80177bc:	00c0      	lsls	r0, r0, #3
 80177be:	fb0c 1c02 	mla	ip, ip, r2, r1
 80177c2:	b2c0      	uxtb	r0, r0
 80177c4:	10d9      	asrs	r1, r3, #3
 80177c6:	00db      	lsls	r3, r3, #3
 80177c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80177cc:	b2db      	uxtb	r3, r3
 80177ce:	fb10 f007 	smulbb	r0, r0, r7
 80177d2:	fa1f fc8c 	uxth.w	ip, ip
 80177d6:	fb03 0302 	mla	r3, r3, r2, r0
 80177da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80177de:	fb1e fe07 	smulbb	lr, lr, r7
 80177e2:	fb01 e102 	mla	r1, r1, r2, lr
 80177e6:	b29a      	uxth	r2, r3
 80177e8:	f10c 0301 	add.w	r3, ip, #1
 80177ec:	b289      	uxth	r1, r1
 80177ee:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80177f2:	1c53      	adds	r3, r2, #1
 80177f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80177f8:	1c4a      	adds	r2, r1, #1
 80177fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80177fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017802:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017806:	0949      	lsrs	r1, r1, #5
 8017808:	ea43 030c 	orr.w	r3, r3, ip
 801780c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017810:	430b      	orrs	r3, r1
 8017812:	f8a8 3000 	strh.w	r3, [r8]
 8017816:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017818:	441c      	add	r4, r3
 801781a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801781c:	f108 0802 	add.w	r8, r8, #2
 8017820:	441e      	add	r6, r3
 8017822:	f109 39ff 	add.w	r9, r9, #4294967295
 8017826:	e74a      	b.n	80176be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8017828:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801782a:	441c      	add	r4, r3
 801782c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801782e:	441e      	add	r6, r3
 8017830:	9b07      	ldr	r3, [sp, #28]
 8017832:	3302      	adds	r3, #2
 8017834:	3d01      	subs	r5, #1
 8017836:	9307      	str	r3, [sp, #28]
 8017838:	e722      	b.n	8017680 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801783a:	d022      	beq.n	8017882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801783c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801783e:	1e6b      	subs	r3, r5, #1
 8017840:	fb00 4003 	mla	r0, r0, r3, r4
 8017844:	1400      	asrs	r0, r0, #16
 8017846:	f53f af37 	bmi.w	80176b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801784a:	3901      	subs	r1, #1
 801784c:	4288      	cmp	r0, r1
 801784e:	f6bf af33 	bge.w	80176b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017852:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017854:	fb01 6303 	mla	r3, r1, r3, r6
 8017858:	141b      	asrs	r3, r3, #16
 801785a:	f53f af2d 	bmi.w	80176b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801785e:	3a01      	subs	r2, #1
 8017860:	4293      	cmp	r3, r2
 8017862:	f6bf af29 	bge.w	80176b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017866:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801786a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801786e:	46a8      	mov	r8, r5
 8017870:	f1b8 0f00 	cmp.w	r8, #0
 8017874:	dc5e      	bgt.n	8017934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017876:	9b07      	ldr	r3, [sp, #28]
 8017878:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801787c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8017880:	9307      	str	r3, [sp, #28]
 8017882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017884:	2b00      	cmp	r3, #0
 8017886:	f340 80f6 	ble.w	8017a76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801788a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801788e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017892:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017896:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017898:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801789c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80178a0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80178a4:	eef0 6a48 	vmov.f32	s13, s16
 80178a8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80178ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178b0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80178b4:	ee16 4a90 	vmov	r4, s13
 80178b8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80178bc:	eef0 6a68 	vmov.f32	s13, s17
 80178c0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80178c4:	ee18 2a10 	vmov	r2, s16
 80178c8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80178cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80178d0:	ee18 2a90 	vmov	r2, s17
 80178d4:	9327      	str	r3, [sp, #156]	; 0x9c
 80178d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80178d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80178dc:	9328      	str	r3, [sp, #160]	; 0xa0
 80178de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80178e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80178e2:	3b01      	subs	r3, #1
 80178e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178e8:	930a      	str	r3, [sp, #40]	; 0x28
 80178ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80178ec:	ee16 6a90 	vmov	r6, s13
 80178f0:	bf14      	ite	ne
 80178f2:	461d      	movne	r5, r3
 80178f4:	4615      	moveq	r5, r2
 80178f6:	eef0 8a67 	vmov.f32	s17, s15
 80178fa:	eeb0 8a47 	vmov.f32	s16, s14
 80178fe:	e6b0      	b.n	8017662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017900:	f111 0a01 	adds.w	sl, r1, #1
 8017904:	d487      	bmi.n	8017816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017906:	45d6      	cmp	lr, sl
 8017908:	db85      	blt.n	8017816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801790a:	f110 0a01 	adds.w	sl, r0, #1
 801790e:	d482      	bmi.n	8017816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017910:	4553      	cmp	r3, sl
 8017912:	db80      	blt.n	8017816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017914:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8017916:	9101      	str	r1, [sp, #4]
 8017918:	b21b      	sxth	r3, r3
 801791a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801791e:	9300      	str	r3, [sp, #0]
 8017920:	e9cd c704 	strd	ip, r7, [sp, #16]
 8017924:	fa0f f38e 	sxth.w	r3, lr
 8017928:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801792a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801792c:	4641      	mov	r1, r8
 801792e:	f7ff fd95 	bl	801745c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017932:	e770      	b.n	8017816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017936:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017938:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801793c:	1430      	asrs	r0, r6, #16
 801793e:	1423      	asrs	r3, r4, #16
 8017940:	fb01 3000 	mla	r0, r1, r0, r3
 8017944:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017946:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801794a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801794e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017952:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017956:	8858      	ldrh	r0, [r3, #2]
 8017958:	f1be 0f00 	cmp.w	lr, #0
 801795c:	d00b      	beq.n	8017976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801795e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017962:	3901      	subs	r1, #1
 8017964:	0049      	lsls	r1, r1, #1
 8017966:	3102      	adds	r1, #2
 8017968:	eb03 0b01 	add.w	fp, r3, r1
 801796c:	5a5b      	ldrh	r3, [r3, r1]
 801796e:	930e      	str	r3, [sp, #56]	; 0x38
 8017970:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017974:	930f      	str	r3, [sp, #60]	; 0x3c
 8017976:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801797a:	fb12 f30e 	smulbb	r3, r2, lr
 801797e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017982:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017986:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801798a:	10db      	asrs	r3, r3, #3
 801798c:	ea41 010c 	orr.w	r1, r1, ip
 8017990:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017994:	f1ce 0c10 	rsb	ip, lr, #16
 8017998:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801799c:	ebac 0c02 	sub.w	ip, ip, r2
 80179a0:	ea4b 0000 	orr.w	r0, fp, r0
 80179a4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80179a8:	4350      	muls	r0, r2
 80179aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179ac:	9f08      	ldr	r7, [sp, #32]
 80179ae:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80179b2:	fb0c 0c01 	mla	ip, ip, r1, r0
 80179b6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80179ba:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80179be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80179c0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80179c2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80179c6:	0412      	lsls	r2, r2, #16
 80179c8:	ea4b 0101 	orr.w	r1, fp, r1
 80179cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80179d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80179d4:	fb03 c101 	mla	r1, r3, r1, ip
 80179d8:	4302      	orrs	r2, r0
 80179da:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80179de:	fb03 1202 	mla	r2, r3, r2, r1
 80179e2:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80179e6:	0952      	lsrs	r2, r2, #5
 80179e8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80179ec:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80179f0:	f8b9 2000 	ldrh.w	r2, [r9]
 80179f4:	ea4b 0303 	orr.w	r3, fp, r3
 80179f8:	b29b      	uxth	r3, r3
 80179fa:	1211      	asrs	r1, r2, #8
 80179fc:	1218      	asrs	r0, r3, #8
 80179fe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017a02:	fb11 f107 	smulbb	r1, r1, r7
 8017a06:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017a0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a0e:	00d2      	lsls	r2, r2, #3
 8017a10:	fb00 100a 	mla	r0, r0, sl, r1
 8017a14:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017a18:	10d9      	asrs	r1, r3, #3
 8017a1a:	b2d2      	uxtb	r2, r2
 8017a1c:	00db      	lsls	r3, r3, #3
 8017a1e:	fb1c fc07 	smulbb	ip, ip, r7
 8017a22:	fb12 f207 	smulbb	r2, r2, r7
 8017a26:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017a2a:	b2db      	uxtb	r3, r3
 8017a2c:	b280      	uxth	r0, r0
 8017a2e:	fb01 c10a 	mla	r1, r1, sl, ip
 8017a32:	fb03 230a 	mla	r3, r3, sl, r2
 8017a36:	b29b      	uxth	r3, r3
 8017a38:	b289      	uxth	r1, r1
 8017a3a:	1c42      	adds	r2, r0, #1
 8017a3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017a40:	f101 0c01 	add.w	ip, r1, #1
 8017a44:	1c5a      	adds	r2, r3, #1
 8017a46:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017a4a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017a4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017a50:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017a54:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a58:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017a5c:	4310      	orrs	r0, r2
 8017a5e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017a62:	441c      	add	r4, r3
 8017a64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a66:	ea40 000c 	orr.w	r0, r0, ip
 8017a6a:	f829 0b02 	strh.w	r0, [r9], #2
 8017a6e:	441e      	add	r6, r3
 8017a70:	f108 38ff 	add.w	r8, r8, #4294967295
 8017a74:	e6fc      	b.n	8017870 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8017a76:	b013      	add	sp, #76	; 0x4c
 8017a78:	ecbd 8b08 	vpop	{d8-d11}
 8017a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8017a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a84:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8017a88:	fb06 5c03 	mla	ip, r6, r3, r5
 8017a8c:	2e00      	cmp	r6, #0
 8017a8e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8017a92:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8017a96:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8017a9a:	8808      	ldrh	r0, [r1, #0]
 8017a9c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8017aa0:	db2e      	blt.n	8017b00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017aa2:	45b0      	cmp	r8, r6
 8017aa4:	dd2c      	ble.n	8017b00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017aa6:	2d00      	cmp	r5, #0
 8017aa8:	db28      	blt.n	8017afc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017aaa:	42ab      	cmp	r3, r5
 8017aac:	dd26      	ble.n	8017afc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017aae:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8017ab2:	1c6a      	adds	r2, r5, #1
 8017ab4:	d427      	bmi.n	8017b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017ab6:	4293      	cmp	r3, r2
 8017ab8:	dd25      	ble.n	8017b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017aba:	b324      	cbz	r4, 8017b06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017abc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8017ac0:	3601      	adds	r6, #1
 8017ac2:	d424      	bmi.n	8017b0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017ac4:	45b0      	cmp	r8, r6
 8017ac6:	dd22      	ble.n	8017b0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017ac8:	b31f      	cbz	r7, 8017b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8017aca:	2d00      	cmp	r5, #0
 8017acc:	db1d      	blt.n	8017b0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017ace:	42ab      	cmp	r3, r5
 8017ad0:	dd1b      	ble.n	8017b0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017ad2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8017ad6:	3501      	adds	r5, #1
 8017ad8:	d405      	bmi.n	8017ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017ada:	42ab      	cmp	r3, r5
 8017adc:	dd03      	ble.n	8017ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017ade:	b124      	cbz	r4, 8017aea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8017ae0:	3301      	adds	r3, #1
 8017ae2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8017ae6:	2c0f      	cmp	r4, #15
 8017ae8:	d801      	bhi.n	8017aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017aea:	2f0f      	cmp	r7, #15
 8017aec:	d914      	bls.n	8017b18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8017aee:	4b27      	ldr	r3, [pc, #156]	; (8017b8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8017af0:	4a27      	ldr	r2, [pc, #156]	; (8017b90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8017af2:	4828      	ldr	r0, [pc, #160]	; (8017b94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8017af4:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8017af8:	f002 fc5e 	bl	801a3b8 <__assert_func>
 8017afc:	4684      	mov	ip, r0
 8017afe:	e7d8      	b.n	8017ab2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8017b00:	4602      	mov	r2, r0
 8017b02:	4684      	mov	ip, r0
 8017b04:	e7dc      	b.n	8017ac0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017b06:	4602      	mov	r2, r0
 8017b08:	e7da      	b.n	8017ac0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017b0a:	4606      	mov	r6, r0
 8017b0c:	e7e3      	b.n	8017ad6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8017b0e:	4606      	mov	r6, r0
 8017b10:	e7e9      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017b12:	2c0f      	cmp	r4, #15
 8017b14:	d8eb      	bhi.n	8017aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017b16:	4606      	mov	r6, r0
 8017b18:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8017b1c:	fb14 f307 	smulbb	r3, r4, r7
 8017b20:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017b24:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017b28:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017b2c:	10db      	asrs	r3, r3, #3
 8017b2e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017b32:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017b36:	f1c7 0510 	rsb	r5, r7, #16
 8017b3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b3e:	1b2d      	subs	r5, r5, r4
 8017b40:	ea4e 0202 	orr.w	r2, lr, r2
 8017b44:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8017b48:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8017b4c:	4354      	muls	r4, r2
 8017b4e:	fb05 450c 	mla	r5, r5, ip, r4
 8017b52:	0404      	lsls	r4, r0, #16
 8017b54:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017b58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017b5c:	4320      	orrs	r0, r4
 8017b5e:	fb03 5400 	mla	r4, r3, r0, r5
 8017b62:	0430      	lsls	r0, r6, #16
 8017b64:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017b68:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8017b6c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8017b70:	4330      	orrs	r0, r6
 8017b72:	fb07 4000 	mla	r0, r7, r0, r4
 8017b76:	0d43      	lsrs	r3, r0, #21
 8017b78:	0940      	lsrs	r0, r0, #5
 8017b7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017b82:	4318      	orrs	r0, r3
 8017b84:	8008      	strh	r0, [r1, #0]
 8017b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017b8a:	bf00      	nop
 8017b8c:	0801de7e 	.word	0x0801de7e
 8017b90:	0801e4f3 	.word	0x0801e4f3
 8017b94:	0801df02 	.word	0x0801df02

08017b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b9c:	ed2d 8b08 	vpush	{d8-d11}
 8017ba0:	b08f      	sub	sp, #60	; 0x3c
 8017ba2:	461d      	mov	r5, r3
 8017ba4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017ba6:	920c      	str	r2, [sp, #48]	; 0x30
 8017ba8:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8017bac:	9107      	str	r1, [sp, #28]
 8017bae:	6859      	ldr	r1, [r3, #4]
 8017bb0:	681b      	ldr	r3, [r3, #0]
 8017bb2:	900d      	str	r0, [sp, #52]	; 0x34
 8017bb4:	fb01 2707 	mla	r7, r1, r7, r2
 8017bb8:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8017bbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bbe:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8017bc2:	f8d3 8000 	ldr.w	r8, [r3]
 8017bc6:	eeb0 aa40 	vmov.f32	s20, s0
 8017bca:	eef0 9a60 	vmov.f32	s19, s1
 8017bce:	eeb0 9a41 	vmov.f32	s18, s2
 8017bd2:	eeb0 8a62 	vmov.f32	s16, s5
 8017bd6:	eef0 8a43 	vmov.f32	s17, s6
 8017bda:	eef0 ba44 	vmov.f32	s23, s8
 8017bde:	eeb0 ba64 	vmov.f32	s22, s9
 8017be2:	eef0 aa45 	vmov.f32	s21, s10
 8017be6:	9b07      	ldr	r3, [sp, #28]
 8017be8:	2b00      	cmp	r3, #0
 8017bea:	dc03      	bgt.n	8017bf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017bec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017bee:	2b00      	cmp	r3, #0
 8017bf0:	f340 8181 	ble.w	8017ef6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8017bf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017bfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017bfe:	1e48      	subs	r0, r1, #1
 8017c00:	f102 3cff 	add.w	ip, r2, #4294967295
 8017c04:	2d00      	cmp	r5, #0
 8017c06:	f340 809b 	ble.w	8017d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8017c0a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017c0e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017c12:	d406      	bmi.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017c14:	4586      	cmp	lr, r0
 8017c16:	da04      	bge.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017c18:	2b00      	cmp	r3, #0
 8017c1a:	db02      	blt.n	8017c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017c1c:	4563      	cmp	r3, ip
 8017c1e:	f2c0 8090 	blt.w	8017d42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8017c22:	f11e 0e01 	adds.w	lr, lr, #1
 8017c26:	f100 8084 	bmi.w	8017d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017c2a:	4571      	cmp	r1, lr
 8017c2c:	f2c0 8081 	blt.w	8017d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017c30:	3301      	adds	r3, #1
 8017c32:	d47e      	bmi.n	8017d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017c34:	429a      	cmp	r2, r3
 8017c36:	db7c      	blt.n	8017d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017c38:	46aa      	mov	sl, r5
 8017c3a:	46b9      	mov	r9, r7
 8017c3c:	f1ba 0f00 	cmp.w	sl, #0
 8017c40:	f340 8099 	ble.w	8017d76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8017c44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c46:	1421      	asrs	r1, r4, #16
 8017c48:	ea4f 4026 	mov.w	r0, r6, asr #16
 8017c4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017c50:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8017c54:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8017c58:	f100 80d0 	bmi.w	8017dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017c5c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8017c60:	4559      	cmp	r1, fp
 8017c62:	f280 80cb 	bge.w	8017dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017c66:	2800      	cmp	r0, #0
 8017c68:	f2c0 80c8 	blt.w	8017dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017c6c:	f103 3bff 	add.w	fp, r3, #4294967295
 8017c70:	4558      	cmp	r0, fp
 8017c72:	f280 80c3 	bge.w	8017dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017c76:	fa0f fe8e 	sxth.w	lr, lr
 8017c7a:	fb00 110e 	mla	r1, r0, lr, r1
 8017c7e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8017c82:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8017c86:	8841      	ldrh	r1, [r0, #2]
 8017c88:	f1bc 0f00 	cmp.w	ip, #0
 8017c8c:	d00b      	beq.n	8017ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8017c8e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8017c92:	3b01      	subs	r3, #1
 8017c94:	005b      	lsls	r3, r3, #1
 8017c96:	3302      	adds	r3, #2
 8017c98:	eb00 0e03 	add.w	lr, r0, r3
 8017c9c:	5ac3      	ldrh	r3, [r0, r3]
 8017c9e:	9308      	str	r3, [sp, #32]
 8017ca0:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8017ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8017ca6:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8017caa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017cae:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017cb2:	ea40 000b 	orr.w	r0, r0, fp
 8017cb6:	fb12 f30c 	smulbb	r3, r2, ip
 8017cba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017cbe:	10db      	asrs	r3, r3, #3
 8017cc0:	f1cc 0e10 	rsb	lr, ip, #16
 8017cc4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017cc8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017ccc:	ebae 0e02 	sub.w	lr, lr, r2
 8017cd0:	ea4b 0101 	orr.w	r1, fp, r1
 8017cd4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017cd8:	4351      	muls	r1, r2
 8017cda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017cdc:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8017ce0:	fb0e 1e00 	mla	lr, lr, r0, r1
 8017ce4:	0410      	lsls	r0, r2, #16
 8017ce6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017cea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017cee:	4310      	orrs	r0, r2
 8017cf0:	9a08      	ldr	r2, [sp, #32]
 8017cf2:	9908      	ldr	r1, [sp, #32]
 8017cf4:	0412      	lsls	r2, r2, #16
 8017cf6:	fb03 e000 	mla	r0, r3, r0, lr
 8017cfa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017cfe:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017d02:	ea42 020e 	orr.w	r2, r2, lr
 8017d06:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8017d0a:	fb03 0302 	mla	r3, r3, r2, r0
 8017d0e:	0d5a      	lsrs	r2, r3, #21
 8017d10:	095b      	lsrs	r3, r3, #5
 8017d12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017d16:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d1a:	4313      	orrs	r3, r2
 8017d1c:	f8a9 3000 	strh.w	r3, [r9]
 8017d20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017d22:	441c      	add	r4, r3
 8017d24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017d26:	f109 0902 	add.w	r9, r9, #2
 8017d2a:	441e      	add	r6, r3
 8017d2c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017d30:	e784      	b.n	8017c3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017d32:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017d34:	441c      	add	r4, r3
 8017d36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017d38:	3d01      	subs	r5, #1
 8017d3a:	441e      	add	r6, r3
 8017d3c:	3702      	adds	r7, #2
 8017d3e:	e761      	b.n	8017c04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017d40:	d01d      	beq.n	8017d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017d42:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017d44:	1e6b      	subs	r3, r5, #1
 8017d46:	fb00 4003 	mla	r0, r0, r3, r4
 8017d4a:	1400      	asrs	r0, r0, #16
 8017d4c:	f53f af74 	bmi.w	8017c38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d50:	3901      	subs	r1, #1
 8017d52:	4288      	cmp	r0, r1
 8017d54:	f6bf af70 	bge.w	8017c38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d58:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017d5a:	fb01 6303 	mla	r3, r1, r3, r6
 8017d5e:	141b      	asrs	r3, r3, #16
 8017d60:	f53f af6a 	bmi.w	8017c38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d64:	3a01      	subs	r2, #1
 8017d66:	4293      	cmp	r3, r2
 8017d68:	f6bf af66 	bge.w	8017c38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d6c:	46a9      	mov	r9, r5
 8017d6e:	46ba      	mov	sl, r7
 8017d70:	f1b9 0f00 	cmp.w	r9, #0
 8017d74:	dc5a      	bgt.n	8017e2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d76:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017d7a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8017d7e:	9b07      	ldr	r3, [sp, #28]
 8017d80:	2b00      	cmp	r3, #0
 8017d82:	f340 80b8 	ble.w	8017ef6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8017d86:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017d8a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017d8e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017d92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017d94:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017d98:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017d9c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017da0:	eef0 6a48 	vmov.f32	s13, s16
 8017da4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017da8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017dac:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017db0:	ee16 4a90 	vmov	r4, s13
 8017db4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017db8:	eef0 6a68 	vmov.f32	s13, s17
 8017dbc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017dc0:	ee18 2a10 	vmov	r2, s16
 8017dc4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017dc8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dcc:	ee18 2a90 	vmov	r2, s17
 8017dd0:	9323      	str	r3, [sp, #140]	; 0x8c
 8017dd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017dd4:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dd8:	9324      	str	r3, [sp, #144]	; 0x90
 8017dda:	9b07      	ldr	r3, [sp, #28]
 8017ddc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017dde:	3b01      	subs	r3, #1
 8017de0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017de4:	9307      	str	r3, [sp, #28]
 8017de6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017de8:	ee16 6a90 	vmov	r6, s13
 8017dec:	bf14      	ite	ne
 8017dee:	461d      	movne	r5, r3
 8017df0:	4615      	moveq	r5, r2
 8017df2:	eef0 8a67 	vmov.f32	s17, s15
 8017df6:	eeb0 8a47 	vmov.f32	s16, s14
 8017dfa:	e6f4      	b.n	8017be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017dfc:	f111 0b01 	adds.w	fp, r1, #1
 8017e00:	d48e      	bmi.n	8017d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017e02:	45de      	cmp	lr, fp
 8017e04:	db8c      	blt.n	8017d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017e06:	f110 0b01 	adds.w	fp, r0, #1
 8017e0a:	d489      	bmi.n	8017d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017e0c:	455b      	cmp	r3, fp
 8017e0e:	db87      	blt.n	8017d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017e10:	b21b      	sxth	r3, r3
 8017e12:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8017e16:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8017e1a:	9300      	str	r3, [sp, #0]
 8017e1c:	4642      	mov	r2, r8
 8017e1e:	fa0f f38e 	sxth.w	r3, lr
 8017e22:	4649      	mov	r1, r9
 8017e24:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017e26:	f7ff fe2b 	bl	8017a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8017e2a:	e779      	b.n	8017d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017e2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017e2e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017e32:	1420      	asrs	r0, r4, #16
 8017e34:	1431      	asrs	r1, r6, #16
 8017e36:	fb03 0101 	mla	r1, r3, r1, r0
 8017e3a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8017e3e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017e42:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8017e46:	8841      	ldrh	r1, [r0, #2]
 8017e48:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017e4c:	f1be 0f00 	cmp.w	lr, #0
 8017e50:	d00b      	beq.n	8017e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8017e52:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8017e56:	3b01      	subs	r3, #1
 8017e58:	005b      	lsls	r3, r3, #1
 8017e5a:	3302      	adds	r3, #2
 8017e5c:	eb00 0b03 	add.w	fp, r0, r3
 8017e60:	5ac3      	ldrh	r3, [r0, r3]
 8017e62:	930a      	str	r3, [sp, #40]	; 0x28
 8017e64:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017e68:	930b      	str	r3, [sp, #44]	; 0x2c
 8017e6a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017e6e:	fb12 f30e 	smulbb	r3, r2, lr
 8017e72:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017e76:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017e7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017e7e:	10db      	asrs	r3, r3, #3
 8017e80:	ea40 000c 	orr.w	r0, r0, ip
 8017e84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e88:	f1ce 0c10 	rsb	ip, lr, #16
 8017e8c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e90:	ebac 0c02 	sub.w	ip, ip, r2
 8017e94:	ea4b 0101 	orr.w	r1, fp, r1
 8017e98:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017e9c:	4351      	muls	r1, r2
 8017e9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017ea0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8017ea4:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017ea8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017eac:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8017eb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017eb2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017eb4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017eb8:	0412      	lsls	r2, r2, #16
 8017eba:	ea4b 0000 	orr.w	r0, fp, r0
 8017ebe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017ec2:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8017ec6:	fb03 c000 	mla	r0, r3, r0, ip
 8017eca:	ea42 0b0b 	orr.w	fp, r2, fp
 8017ece:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8017ed2:	fb03 000b 	mla	r0, r3, fp, r0
 8017ed6:	0d43      	lsrs	r3, r0, #21
 8017ed8:	0940      	lsrs	r0, r0, #5
 8017eda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ede:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017ee2:	4318      	orrs	r0, r3
 8017ee4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017ee6:	f82a 0b02 	strh.w	r0, [sl], #2
 8017eea:	441c      	add	r4, r3
 8017eec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017eee:	f109 39ff 	add.w	r9, r9, #4294967295
 8017ef2:	441e      	add	r6, r3
 8017ef4:	e73c      	b.n	8017d70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8017ef6:	b00f      	add	sp, #60	; 0x3c
 8017ef8:	ecbd 8b08 	vpop	{d8-d11}
 8017efc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8017f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f04:	880e      	ldrh	r6, [r1, #0]
 8017f06:	b085      	sub	sp, #20
 8017f08:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8017f0c:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8017f10:	4690      	mov	r8, r2
 8017f12:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8017f16:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8017f1a:	9200      	str	r2, [sp, #0]
 8017f1c:	00f6      	lsls	r6, r6, #3
 8017f1e:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8017f22:	9201      	str	r2, [sp, #4]
 8017f24:	2c00      	cmp	r4, #0
 8017f26:	b2f2      	uxtb	r2, r6
 8017f28:	fb04 5603 	mla	r6, r4, r3, r5
 8017f2c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8017f30:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8017f34:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017f38:	9202      	str	r2, [sp, #8]
 8017f3a:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 8017f3e:	db36      	blt.n	8017fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8017f40:	45a6      	cmp	lr, r4
 8017f42:	dd34      	ble.n	8017fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8017f44:	2d00      	cmp	r5, #0
 8017f46:	db30      	blt.n	8017faa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8017f48:	42ab      	cmp	r3, r5
 8017f4a:	dd2e      	ble.n	8017faa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8017f4c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8017f50:	1c6e      	adds	r6, r5, #1
 8017f52:	d42f      	bmi.n	8017fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8017f54:	42b3      	cmp	r3, r6
 8017f56:	dd2d      	ble.n	8017fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8017f58:	b370      	cbz	r0, 8017fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 8017f5a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8017f5e:	3401      	adds	r4, #1
 8017f60:	d42e      	bmi.n	8017fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8017f62:	45a6      	cmp	lr, r4
 8017f64:	dd2c      	ble.n	8017fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8017f66:	b377      	cbz	r7, 8017fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8017f68:	2d00      	cmp	r5, #0
 8017f6a:	db27      	blt.n	8017fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8017f6c:	42ab      	cmp	r3, r5
 8017f6e:	dd25      	ble.n	8017fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8017f70:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8017f74:	3501      	adds	r5, #1
 8017f76:	d429      	bmi.n	8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017f78:	42ab      	cmp	r3, r5
 8017f7a:	dd27      	ble.n	8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017f7c:	b340      	cbz	r0, 8017fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017f7e:	3301      	adds	r3, #1
 8017f80:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8017f84:	280f      	cmp	r0, #15
 8017f86:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017f8a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017f8e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017f92:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017f96:	d801      	bhi.n	8017f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8017f98:	2f0f      	cmp	r7, #15
 8017f9a:	d91b      	bls.n	8017fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017f9c:	4b84      	ldr	r3, [pc, #528]	; (80181b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 8017f9e:	4a85      	ldr	r2, [pc, #532]	; (80181b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8017fa0:	4885      	ldr	r0, [pc, #532]	; (80181b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8017fa2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017fa6:	f002 fa07 	bl	801a3b8 <__assert_func>
 8017faa:	2200      	movs	r2, #0
 8017fac:	e7d0      	b.n	8017f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 8017fae:	2600      	movs	r6, #0
 8017fb0:	4632      	mov	r2, r6
 8017fb2:	e7d4      	b.n	8017f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017fb4:	2600      	movs	r6, #0
 8017fb6:	e7d2      	b.n	8017f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017fb8:	4606      	mov	r6, r0
 8017fba:	e7d0      	b.n	8017f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017fbc:	2400      	movs	r4, #0
 8017fbe:	e7d9      	b.n	8017f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8017fc0:	2300      	movs	r3, #0
 8017fc2:	461c      	mov	r4, r3
 8017fc4:	e7de      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017fc6:	463b      	mov	r3, r7
 8017fc8:	463c      	mov	r4, r7
 8017fca:	e7db      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017fcc:	2300      	movs	r3, #0
 8017fce:	e7d9      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017fd0:	4603      	mov	r3, r0
 8017fd2:	e7d7      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017fd4:	b280      	uxth	r0, r0
 8017fd6:	b2bf      	uxth	r7, r7
 8017fd8:	fb00 fe07 	mul.w	lr, r0, r7
 8017fdc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017fe0:	0100      	lsls	r0, r0, #4
 8017fe2:	eba0 0c0e 	sub.w	ip, r0, lr
 8017fe6:	b2bf      	uxth	r7, r7
 8017fe8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017fec:	fa1f fc8c 	uxth.w	ip, ip
 8017ff0:	1bed      	subs	r5, r5, r7
 8017ff2:	b2ad      	uxth	r5, r5
 8017ff4:	fb0c f00a 	mul.w	r0, ip, sl
 8017ff8:	fb05 000b 	mla	r0, r5, fp, r0
 8017ffc:	fb07 0009 	mla	r0, r7, r9, r0
 8018000:	fb0e 0008 	mla	r0, lr, r8, r0
 8018004:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018008:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801800c:	9003      	str	r0, [sp, #12]
 801800e:	d018      	beq.n	8018042 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8018010:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018014:	fb0b f000 	mul.w	r0, fp, r0
 8018018:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801801c:	fb0b fb02 	mul.w	fp, fp, r2
 8018020:	0a02      	lsrs	r2, r0, #8
 8018022:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018026:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801802a:	4402      	add	r2, r0
 801802c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018030:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018034:	0a12      	lsrs	r2, r2, #8
 8018036:	0a00      	lsrs	r0, r0, #8
 8018038:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801803c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018040:	4302      	orrs	r2, r0
 8018042:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018046:	d019      	beq.n	801807c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8018048:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801804c:	fb0a fb0b 	mul.w	fp, sl, fp
 8018050:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018054:	fb0a fa06 	mul.w	sl, sl, r6
 8018058:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801805c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018060:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018064:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018068:	445e      	add	r6, fp
 801806a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801806e:	0a36      	lsrs	r6, r6, #8
 8018070:	0a00      	lsrs	r0, r0, #8
 8018072:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018076:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801807a:	4306      	orrs	r6, r0
 801807c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018080:	d019      	beq.n	80180b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8018082:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018086:	fb09 fa0a 	mul.w	sl, r9, sl
 801808a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801808e:	fb09 f904 	mul.w	r9, r9, r4
 8018092:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018096:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801809a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801809e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80180a2:	4454      	add	r4, sl
 80180a4:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80180a8:	0a24      	lsrs	r4, r4, #8
 80180aa:	0a00      	lsrs	r0, r0, #8
 80180ac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80180b0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80180b4:	4304      	orrs	r4, r0
 80180b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80180ba:	d019      	beq.n	80180f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80180bc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80180c0:	fb08 f909 	mul.w	r9, r8, r9
 80180c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80180c8:	fb08 f803 	mul.w	r8, r8, r3
 80180cc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80180d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80180d4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80180d8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80180dc:	444b      	add	r3, r9
 80180de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80180e2:	0a1b      	lsrs	r3, r3, #8
 80180e4:	0a00      	lsrs	r0, r0, #8
 80180e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80180ea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80180ee:	4303      	orrs	r3, r0
 80180f0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80180f4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80180f8:	fb0c f808 	mul.w	r8, ip, r8
 80180fc:	fb05 8800 	mla	r8, r5, r0, r8
 8018100:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8018104:	fb07 8800 	mla	r8, r7, r0, r8
 8018108:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801810c:	fb0e 8000 	mla	r0, lr, r0, r8
 8018110:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018114:	fb0c f606 	mul.w	r6, ip, r6
 8018118:	0a00      	lsrs	r0, r0, #8
 801811a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801811e:	fb05 6202 	mla	r2, r5, r2, r6
 8018122:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8018126:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801812a:	fb07 2700 	mla	r7, r7, r0, r2
 801812e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8018132:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8018136:	9c03      	ldr	r4, [sp, #12]
 8018138:	9e01      	ldr	r6, [sp, #4]
 801813a:	b29b      	uxth	r3, r3
 801813c:	435c      	muls	r4, r3
 801813e:	fb0e 7000 	mla	r0, lr, r0, r7
 8018142:	1c62      	adds	r2, r4, #1
 8018144:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018148:	0a00      	lsrs	r0, r0, #8
 801814a:	9c00      	ldr	r4, [sp, #0]
 801814c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018150:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8018154:	ea48 0000 	orr.w	r0, r8, r0
 8018158:	b2d2      	uxtb	r2, r2
 801815a:	fb14 f402 	smulbb	r4, r4, r2
 801815e:	0c05      	lsrs	r5, r0, #16
 8018160:	fb05 4503 	mla	r5, r5, r3, r4
 8018164:	fb16 f602 	smulbb	r6, r6, r2
 8018168:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801816c:	fb04 6403 	mla	r4, r4, r3, r6
 8018170:	9e02      	ldr	r6, [sp, #8]
 8018172:	b2c0      	uxtb	r0, r0
 8018174:	fb16 f202 	smulbb	r2, r6, r2
 8018178:	fb00 2303 	mla	r3, r0, r3, r2
 801817c:	b2ad      	uxth	r5, r5
 801817e:	b298      	uxth	r0, r3
 8018180:	1c43      	adds	r3, r0, #1
 8018182:	1c6a      	adds	r2, r5, #1
 8018184:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018188:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801818c:	b2a4      	uxth	r4, r4
 801818e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018192:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018196:	4313      	orrs	r3, r2
 8018198:	1c62      	adds	r2, r4, #1
 801819a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801819e:	0952      	lsrs	r2, r2, #5
 80181a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80181a4:	4313      	orrs	r3, r2
 80181a6:	800b      	strh	r3, [r1, #0]
 80181a8:	b005      	add	sp, #20
 80181aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181ae:	bf00      	nop
 80181b0:	0801de7e 	.word	0x0801de7e
 80181b4:	0801e44a 	.word	0x0801e44a
 80181b8:	0801df02 	.word	0x0801df02

080181bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80181bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181c0:	ed2d 8b08 	vpush	{d8-d11}
 80181c4:	b09d      	sub	sp, #116	; 0x74
 80181c6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80181ca:	9219      	str	r2, [sp, #100]	; 0x64
 80181cc:	9307      	str	r3, [sp, #28]
 80181ce:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80181d0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80181d4:	931a      	str	r3, [sp, #104]	; 0x68
 80181d6:	9117      	str	r1, [sp, #92]	; 0x5c
 80181d8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80181dc:	901b      	str	r0, [sp, #108]	; 0x6c
 80181de:	6850      	ldr	r0, [r2, #4]
 80181e0:	6812      	ldr	r2, [r2, #0]
 80181e2:	fb00 1303 	mla	r3, r0, r3, r1
 80181e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80181ea:	930a      	str	r3, [sp, #40]	; 0x28
 80181ec:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80181ee:	681b      	ldr	r3, [r3, #0]
 80181f0:	9310      	str	r3, [sp, #64]	; 0x40
 80181f2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80181f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80181f8:	eeb0 aa40 	vmov.f32	s20, s0
 80181fc:	eef0 9a60 	vmov.f32	s19, s1
 8018200:	eeb0 9a41 	vmov.f32	s18, s2
 8018204:	eeb0 8a62 	vmov.f32	s16, s5
 8018208:	eef0 8a43 	vmov.f32	s17, s6
 801820c:	eef0 ba44 	vmov.f32	s23, s8
 8018210:	eeb0 ba64 	vmov.f32	s22, s9
 8018214:	eef0 aa45 	vmov.f32	s21, s10
 8018218:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801821a:	2b00      	cmp	r3, #0
 801821c:	dc03      	bgt.n	8018226 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801821e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018220:	2b00      	cmp	r3, #0
 8018222:	f340 8375 	ble.w	8018910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8018226:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018228:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801822c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018230:	1e48      	subs	r0, r1, #1
 8018232:	1e57      	subs	r7, r2, #1
 8018234:	9b07      	ldr	r3, [sp, #28]
 8018236:	2b00      	cmp	r3, #0
 8018238:	f340 818e 	ble.w	8018558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801823c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018240:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018244:	d406      	bmi.n	8018254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018246:	4584      	cmp	ip, r0
 8018248:	da04      	bge.n	8018254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801824a:	2b00      	cmp	r3, #0
 801824c:	db02      	blt.n	8018254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801824e:	42bb      	cmp	r3, r7
 8018250:	f2c0 8183 	blt.w	801855a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8018254:	f11c 0c01 	adds.w	ip, ip, #1
 8018258:	f100 8173 	bmi.w	8018542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801825c:	4561      	cmp	r1, ip
 801825e:	f2c0 8170 	blt.w	8018542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018262:	3301      	adds	r3, #1
 8018264:	f100 816d 	bmi.w	8018542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018268:	429a      	cmp	r2, r3
 801826a:	f2c0 816a 	blt.w	8018542 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801826e:	9b07      	ldr	r3, [sp, #28]
 8018270:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018272:	9318      	str	r3, [sp, #96]	; 0x60
 8018274:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018276:	2b00      	cmp	r3, #0
 8018278:	f340 818c 	ble.w	8018594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801827c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801827e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018280:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018284:	689b      	ldr	r3, [r3, #8]
 8018286:	1422      	asrs	r2, r4, #16
 8018288:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801828c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018290:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018294:	f100 81cd 	bmi.w	8018632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018298:	f103 38ff 	add.w	r8, r3, #4294967295
 801829c:	4542      	cmp	r2, r8
 801829e:	f280 81c8 	bge.w	8018632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80182a2:	f1bc 0f00 	cmp.w	ip, #0
 80182a6:	f2c0 81c4 	blt.w	8018632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80182aa:	f10e 38ff 	add.w	r8, lr, #4294967295
 80182ae:	45c4      	cmp	ip, r8
 80182b0:	f280 81bf 	bge.w	8018632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80182b4:	b21b      	sxth	r3, r3
 80182b6:	fb0c 2203 	mla	r2, ip, r3, r2
 80182ba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80182bc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80182c0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80182c4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80182c8:	2800      	cmp	r0, #0
 80182ca:	f000 81a9 	beq.w	8018620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80182ce:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80182d2:	950c      	str	r5, [sp, #48]	; 0x30
 80182d4:	0e2d      	lsrs	r5, r5, #24
 80182d6:	9513      	str	r5, [sp, #76]	; 0x4c
 80182d8:	b181      	cbz	r1, 80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80182da:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80182de:	3b01      	subs	r3, #1
 80182e0:	009b      	lsls	r3, r3, #2
 80182e2:	3304      	adds	r3, #4
 80182e4:	eb08 0c03 	add.w	ip, r8, r3
 80182e8:	f858 3003 	ldr.w	r3, [r8, r3]
 80182ec:	9308      	str	r3, [sp, #32]
 80182ee:	0e1b      	lsrs	r3, r3, #24
 80182f0:	9311      	str	r3, [sp, #68]	; 0x44
 80182f2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80182f6:	930d      	str	r3, [sp, #52]	; 0x34
 80182f8:	0e1b      	lsrs	r3, r3, #24
 80182fa:	9314      	str	r3, [sp, #80]	; 0x50
 80182fc:	b280      	uxth	r0, r0
 80182fe:	b289      	uxth	r1, r1
 8018300:	fb00 f901 	mul.w	r9, r0, r1
 8018304:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018308:	0100      	lsls	r0, r0, #4
 801830a:	eba0 0809 	sub.w	r8, r0, r9
 801830e:	b289      	uxth	r1, r1
 8018310:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018314:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018316:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018318:	fa1f f888 	uxth.w	r8, r8
 801831c:	1a5b      	subs	r3, r3, r1
 801831e:	b29b      	uxth	r3, r3
 8018320:	fb08 f000 	mul.w	r0, r8, r0
 8018324:	fb03 000e 	mla	r0, r3, lr, r0
 8018328:	fb01 0005 	mla	r0, r1, r5, r0
 801832c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801832e:	fb09 0005 	mla	r0, r9, r5, r0
 8018332:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018336:	2800      	cmp	r0, #0
 8018338:	f000 80fa 	beq.w	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801833c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018340:	d01b      	beq.n	801837a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8018342:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8018346:	fb0e fa0a 	mul.w	sl, lr, sl
 801834a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801834e:	fb0e fe02 	mul.w	lr, lr, r2
 8018352:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8018356:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801835a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801835e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018362:	4452      	add	r2, sl
 8018364:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018368:	0a12      	lsrs	r2, r2, #8
 801836a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801836e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018372:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018376:	ea42 020c 	orr.w	r2, r2, ip
 801837a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801837c:	2dff      	cmp	r5, #255	; 0xff
 801837e:	d021      	beq.n	80183c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8018380:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018382:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018386:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018388:	fb05 fb0b 	mul.w	fp, r5, fp
 801838c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801838e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018392:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018394:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018398:	fb05 fa0a 	mul.w	sl, r5, sl
 801839c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80183a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80183a8:	44de      	add	lr, fp
 80183aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80183ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80183b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80183b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80183be:	ea4e 050a 	orr.w	r5, lr, sl
 80183c2:	950c      	str	r5, [sp, #48]	; 0x30
 80183c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80183c6:	2dff      	cmp	r5, #255	; 0xff
 80183c8:	d021      	beq.n	801840e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80183ca:	9d08      	ldr	r5, [sp, #32]
 80183cc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80183d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80183d2:	fb05 fb0b 	mul.w	fp, r5, fp
 80183d6:	9d08      	ldr	r5, [sp, #32]
 80183d8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80183dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80183de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80183e2:	fb05 fa0a 	mul.w	sl, r5, sl
 80183e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80183ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80183f2:	44de      	add	lr, fp
 80183f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80183f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80183fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018400:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018404:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018408:	ea4e 050a 	orr.w	r5, lr, sl
 801840c:	9508      	str	r5, [sp, #32]
 801840e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018410:	2dff      	cmp	r5, #255	; 0xff
 8018412:	d021      	beq.n	8018458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8018414:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018416:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801841a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801841c:	fb05 fb0b 	mul.w	fp, r5, fp
 8018420:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018422:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018426:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018428:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801842c:	fb05 fa0a 	mul.w	sl, r5, sl
 8018430:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018434:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018438:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801843c:	44de      	add	lr, fp
 801843e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018442:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018446:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801844a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801844e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018452:	ea4e 050a 	orr.w	r5, lr, sl
 8018456:	950d      	str	r5, [sp, #52]	; 0x34
 8018458:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801845a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801845e:	9d08      	ldr	r5, [sp, #32]
 8018460:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8018464:	fb08 fc0c 	mul.w	ip, r8, ip
 8018468:	fb03 cc0e 	mla	ip, r3, lr, ip
 801846c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018470:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018472:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018476:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801847a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801847c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018480:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018484:	fb08 f80e 	mul.w	r8, r8, lr
 8018488:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801848c:	fb03 8202 	mla	r2, r3, r2, r8
 8018490:	9b08      	ldr	r3, [sp, #32]
 8018492:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018494:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8018498:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801849a:	fb01 220a 	mla	r2, r1, sl, r2
 801849e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80184a2:	fb09 2901 	mla	r9, r9, r1, r2
 80184a6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80184a8:	883b      	ldrh	r3, [r7, #0]
 80184aa:	4342      	muls	r2, r0
 80184ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80184b4:	1c50      	adds	r0, r2, #1
 80184b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184ba:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80184be:	ea4c 0c09 	orr.w	ip, ip, r9
 80184c2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80184c6:	1219      	asrs	r1, r3, #8
 80184c8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80184cc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80184d0:	b2c0      	uxtb	r0, r0
 80184d2:	fb12 f205 	smulbb	r2, r2, r5
 80184d6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80184da:	fb01 2100 	mla	r1, r1, r0, r2
 80184de:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80184e2:	10da      	asrs	r2, r3, #3
 80184e4:	fa5f fc8c 	uxtb.w	ip, ip
 80184e8:	00db      	lsls	r3, r3, #3
 80184ea:	fb1c fc05 	smulbb	ip, ip, r5
 80184ee:	b2db      	uxtb	r3, r3
 80184f0:	b289      	uxth	r1, r1
 80184f2:	fb03 c300 	mla	r3, r3, r0, ip
 80184f6:	fa1f fc83 	uxth.w	ip, r3
 80184fa:	1c4b      	adds	r3, r1, #1
 80184fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018500:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018504:	fb1e fe05 	smulbb	lr, lr, r5
 8018508:	f10c 0301 	add.w	r3, ip, #1
 801850c:	fb02 e200 	mla	r2, r2, r0, lr
 8018510:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018514:	b292      	uxth	r2, r2
 8018516:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801851a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801851e:	430b      	orrs	r3, r1
 8018520:	1c51      	adds	r1, r2, #1
 8018522:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018526:	0952      	lsrs	r2, r2, #5
 8018528:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801852c:	4313      	orrs	r3, r2
 801852e:	803b      	strh	r3, [r7, #0]
 8018530:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018532:	441c      	add	r4, r3
 8018534:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018536:	441e      	add	r6, r3
 8018538:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801853a:	3b01      	subs	r3, #1
 801853c:	3702      	adds	r7, #2
 801853e:	9318      	str	r3, [sp, #96]	; 0x60
 8018540:	e698      	b.n	8018274 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018542:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018544:	441c      	add	r4, r3
 8018546:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018548:	441e      	add	r6, r3
 801854a:	9b07      	ldr	r3, [sp, #28]
 801854c:	3b01      	subs	r3, #1
 801854e:	9307      	str	r3, [sp, #28]
 8018550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018552:	3302      	adds	r3, #2
 8018554:	930a      	str	r3, [sp, #40]	; 0x28
 8018556:	e66d      	b.n	8018234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018558:	d023      	beq.n	80185a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801855a:	9b07      	ldr	r3, [sp, #28]
 801855c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801855e:	3b01      	subs	r3, #1
 8018560:	fb00 4003 	mla	r0, r0, r3, r4
 8018564:	1400      	asrs	r0, r0, #16
 8018566:	f53f ae82 	bmi.w	801826e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801856a:	3901      	subs	r1, #1
 801856c:	4288      	cmp	r0, r1
 801856e:	f6bf ae7e 	bge.w	801826e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018572:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8018574:	fb01 6303 	mla	r3, r1, r3, r6
 8018578:	141b      	asrs	r3, r3, #16
 801857a:	f53f ae78 	bmi.w	801826e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801857e:	3a01      	subs	r2, #1
 8018580:	4293      	cmp	r3, r2
 8018582:	f6bf ae74 	bge.w	801826e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018586:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801858a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801858e:	f1bb 0f00 	cmp.w	fp, #0
 8018592:	dc6c      	bgt.n	801866e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8018594:	9b07      	ldr	r3, [sp, #28]
 8018596:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801859a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801859c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80185a0:	930a      	str	r3, [sp, #40]	; 0x28
 80185a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80185a4:	2b00      	cmp	r3, #0
 80185a6:	f340 81b3 	ble.w	8018910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80185aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80185ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80185b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80185b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80185b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80185bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80185c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80185c4:	eef0 6a48 	vmov.f32	s13, s16
 80185c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80185cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80185d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80185d4:	ee16 4a90 	vmov	r4, s13
 80185d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80185dc:	eef0 6a68 	vmov.f32	s13, s17
 80185e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80185e4:	ee18 2a10 	vmov	r2, s16
 80185e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80185ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80185f0:	ee18 2a90 	vmov	r2, s17
 80185f4:	9331      	str	r3, [sp, #196]	; 0xc4
 80185f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80185f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80185fc:	9332      	str	r3, [sp, #200]	; 0xc8
 80185fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018600:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8018602:	3b01      	subs	r3, #1
 8018604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018608:	9317      	str	r3, [sp, #92]	; 0x5c
 801860a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801860c:	bf08      	it	eq
 801860e:	4613      	moveq	r3, r2
 8018610:	ee16 6a90 	vmov	r6, s13
 8018614:	9307      	str	r3, [sp, #28]
 8018616:	eef0 8a67 	vmov.f32	s17, s15
 801861a:	eeb0 8a47 	vmov.f32	s16, s14
 801861e:	e5fb      	b.n	8018218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018620:	2900      	cmp	r1, #0
 8018622:	f43f ae6b 	beq.w	80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018626:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801862a:	9308      	str	r3, [sp, #32]
 801862c:	0e1b      	lsrs	r3, r3, #24
 801862e:	9311      	str	r3, [sp, #68]	; 0x44
 8018630:	e664      	b.n	80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018632:	f112 0801 	adds.w	r8, r2, #1
 8018636:	f53f af7b 	bmi.w	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801863a:	4543      	cmp	r3, r8
 801863c:	f6ff af78 	blt.w	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018640:	f11c 0801 	adds.w	r8, ip, #1
 8018644:	f53f af74 	bmi.w	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018648:	45c6      	cmp	lr, r8
 801864a:	f6ff af71 	blt.w	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801864e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018650:	9201      	str	r2, [sp, #4]
 8018652:	fa0f f28e 	sxth.w	r2, lr
 8018656:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801865a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801865e:	9200      	str	r2, [sp, #0]
 8018660:	b21b      	sxth	r3, r3
 8018662:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018664:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8018666:	4639      	mov	r1, r7
 8018668:	f7ff fc4a 	bl	8017f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801866c:	e760      	b.n	8018530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801866e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018670:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018676:	1427      	asrs	r7, r4, #16
 8018678:	1433      	asrs	r3, r6, #16
 801867a:	fb01 7303 	mla	r3, r1, r3, r7
 801867e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8018682:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018686:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801868a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801868e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018692:	2a00      	cmp	r2, #0
 8018694:	f000 8133 	beq.w	80188fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8018698:	687d      	ldr	r5, [r7, #4]
 801869a:	950e      	str	r5, [sp, #56]	; 0x38
 801869c:	0e2d      	lsrs	r5, r5, #24
 801869e:	9515      	str	r5, [sp, #84]	; 0x54
 80186a0:	b178      	cbz	r0, 80186c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80186a2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80186a6:	3901      	subs	r1, #1
 80186a8:	0089      	lsls	r1, r1, #2
 80186aa:	3104      	adds	r1, #4
 80186ac:	eb07 0e01 	add.w	lr, r7, r1
 80186b0:	5879      	ldr	r1, [r7, r1]
 80186b2:	9109      	str	r1, [sp, #36]	; 0x24
 80186b4:	0e09      	lsrs	r1, r1, #24
 80186b6:	9112      	str	r1, [sp, #72]	; 0x48
 80186b8:	f8de 1004 	ldr.w	r1, [lr, #4]
 80186bc:	910f      	str	r1, [sp, #60]	; 0x3c
 80186be:	0e09      	lsrs	r1, r1, #24
 80186c0:	9116      	str	r1, [sp, #88]	; 0x58
 80186c2:	b292      	uxth	r2, r2
 80186c4:	b280      	uxth	r0, r0
 80186c6:	fb02 f800 	mul.w	r8, r2, r0
 80186ca:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80186ce:	0112      	lsls	r2, r2, #4
 80186d0:	eba2 0e08 	sub.w	lr, r2, r8
 80186d4:	b280      	uxth	r0, r0
 80186d6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80186da:	9915      	ldr	r1, [sp, #84]	; 0x54
 80186dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80186de:	fa1f fe8e 	uxth.w	lr, lr
 80186e2:	1a12      	subs	r2, r2, r0
 80186e4:	b292      	uxth	r2, r2
 80186e6:	fb0e f101 	mul.w	r1, lr, r1
 80186ea:	fb02 110c 	mla	r1, r2, ip, r1
 80186ee:	fb00 1105 	mla	r1, r0, r5, r1
 80186f2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80186f4:	fb08 1105 	mla	r1, r8, r5, r1
 80186f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80186fc:	2900      	cmp	r1, #0
 80186fe:	f000 80f5 	beq.w	80188ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8018702:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018706:	d019      	beq.n	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8018708:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801870c:	fb0c fa0a 	mul.w	sl, ip, sl
 8018710:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018714:	fb0c fc03 	mul.w	ip, ip, r3
 8018718:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801871c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018720:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018724:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018728:	4453      	add	r3, sl
 801872a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801872e:	0a1b      	lsrs	r3, r3, #8
 8018730:	0a3f      	lsrs	r7, r7, #8
 8018732:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018736:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801873a:	433b      	orrs	r3, r7
 801873c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801873e:	2dff      	cmp	r5, #255	; 0xff
 8018740:	d020      	beq.n	8018784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8018742:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018744:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018748:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801874a:	436f      	muls	r7, r5
 801874c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801874e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018752:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018754:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018758:	fb05 fa0a 	mul.w	sl, r5, sl
 801875c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018760:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018764:	44bc      	add	ip, r7
 8018766:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801876a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801876e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018776:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801877a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801877e:	ea4c 050a 	orr.w	r5, ip, sl
 8018782:	950e      	str	r5, [sp, #56]	; 0x38
 8018784:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018786:	2dff      	cmp	r5, #255	; 0xff
 8018788:	d020      	beq.n	80187cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801878a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801878c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018790:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018792:	436f      	muls	r7, r5
 8018794:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018796:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801879a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801879c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80187a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80187a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80187a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187ac:	44bc      	add	ip, r7
 80187ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80187b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80187b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80187be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80187c6:	ea4c 050a 	orr.w	r5, ip, sl
 80187ca:	9509      	str	r5, [sp, #36]	; 0x24
 80187cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80187ce:	2dff      	cmp	r5, #255	; 0xff
 80187d0:	d020      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80187d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80187d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80187d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80187da:	436f      	muls	r7, r5
 80187dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80187de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80187e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80187e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80187e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80187ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80187f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187f4:	44bc      	add	ip, r7
 80187f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80187fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80187fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018802:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018806:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801880a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801880e:	ea4c 050a 	orr.w	r5, ip, sl
 8018812:	950f      	str	r5, [sp, #60]	; 0x3c
 8018814:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018816:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801881a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801881c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018820:	fb0e f707 	mul.w	r7, lr, r7
 8018824:	fb02 770c 	mla	r7, r2, ip, r7
 8018828:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801882c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801882e:	fb00 770c 	mla	r7, r0, ip, r7
 8018832:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018836:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018838:	fb08 770c 	mla	r7, r8, ip, r7
 801883c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018840:	fb0e fe0c 	mul.w	lr, lr, ip
 8018844:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018848:	fb02 e303 	mla	r3, r2, r3, lr
 801884c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801884e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018850:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018854:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018856:	fb00 330a 	mla	r3, r0, sl, r3
 801885a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801885e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018862:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018864:	f8b9 0000 	ldrh.w	r0, [r9]
 8018868:	4359      	muls	r1, r3
 801886a:	0a3f      	lsrs	r7, r7, #8
 801886c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018870:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018874:	1c4b      	adds	r3, r1, #1
 8018876:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801887a:	ea47 070c 	orr.w	r7, r7, ip
 801887e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018882:	1202      	asrs	r2, r0, #8
 8018884:	0c3b      	lsrs	r3, r7, #16
 8018886:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801888a:	b2c9      	uxtb	r1, r1
 801888c:	fb13 f305 	smulbb	r3, r3, r5
 8018890:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018894:	fb02 3201 	mla	r2, r2, r1, r3
 8018898:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801889c:	10c3      	asrs	r3, r0, #3
 801889e:	b2ff      	uxtb	r7, r7
 80188a0:	00c0      	lsls	r0, r0, #3
 80188a2:	b2c0      	uxtb	r0, r0
 80188a4:	fb17 f705 	smulbb	r7, r7, r5
 80188a8:	fb00 7001 	mla	r0, r0, r1, r7
 80188ac:	b292      	uxth	r2, r2
 80188ae:	fb1c fc05 	smulbb	ip, ip, r5
 80188b2:	b280      	uxth	r0, r0
 80188b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80188b8:	fb03 c301 	mla	r3, r3, r1, ip
 80188bc:	1c51      	adds	r1, r2, #1
 80188be:	f100 0c01 	add.w	ip, r0, #1
 80188c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80188c6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80188ca:	b29b      	uxth	r3, r3
 80188cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80188d0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80188d4:	ea4c 0202 	orr.w	r2, ip, r2
 80188d8:	f103 0c01 	add.w	ip, r3, #1
 80188dc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80188e0:	095b      	lsrs	r3, r3, #5
 80188e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80188e6:	431a      	orrs	r2, r3
 80188e8:	f8a9 2000 	strh.w	r2, [r9]
 80188ec:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80188ee:	441c      	add	r4, r3
 80188f0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80188f2:	f109 0902 	add.w	r9, r9, #2
 80188f6:	441e      	add	r6, r3
 80188f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80188fc:	e647      	b.n	801858e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 80188fe:	2800      	cmp	r0, #0
 8018900:	f43f aedf 	beq.w	80186c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018904:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8018908:	9109      	str	r1, [sp, #36]	; 0x24
 801890a:	0e09      	lsrs	r1, r1, #24
 801890c:	9112      	str	r1, [sp, #72]	; 0x48
 801890e:	e6d8      	b.n	80186c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018910:	b01d      	add	sp, #116	; 0x74
 8018912:	ecbd 8b08 	vpop	{d8-d11}
 8018916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801891c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801891c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018920:	880e      	ldrh	r6, [r1, #0]
 8018922:	b085      	sub	sp, #20
 8018924:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8018928:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801892c:	4690      	mov	r8, r2
 801892e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8018932:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8018936:	9200      	str	r2, [sp, #0]
 8018938:	00f6      	lsls	r6, r6, #3
 801893a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801893e:	9201      	str	r2, [sp, #4]
 8018940:	2c00      	cmp	r4, #0
 8018942:	b2f2      	uxtb	r2, r6
 8018944:	fb04 5603 	mla	r6, r4, r3, r5
 8018948:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801894c:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8018950:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018954:	9202      	str	r2, [sp, #8]
 8018956:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 801895a:	db37      	blt.n	80189cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801895c:	45a4      	cmp	ip, r4
 801895e:	dd35      	ble.n	80189cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8018960:	2d00      	cmp	r5, #0
 8018962:	db31      	blt.n	80189c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8018964:	42ab      	cmp	r3, r5
 8018966:	dd2f      	ble.n	80189c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 8018968:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801896c:	1c6e      	adds	r6, r5, #1
 801896e:	d430      	bmi.n	80189d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8018970:	42b3      	cmp	r3, r6
 8018972:	dd2e      	ble.n	80189d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8018974:	b378      	cbz	r0, 80189d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 8018976:	f8de 6004 	ldr.w	r6, [lr, #4]
 801897a:	3401      	adds	r4, #1
 801897c:	d42f      	bmi.n	80189de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801897e:	45a4      	cmp	ip, r4
 8018980:	dd2d      	ble.n	80189de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018982:	b37f      	cbz	r7, 80189e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018984:	2d00      	cmp	r5, #0
 8018986:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 801898a:	db26      	blt.n	80189da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801898c:	42ab      	cmp	r3, r5
 801898e:	dd24      	ble.n	80189da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018990:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018994:	3501      	adds	r5, #1
 8018996:	d428      	bmi.n	80189ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8018998:	42ab      	cmp	r3, r5
 801899a:	dd26      	ble.n	80189ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 801899c:	b338      	cbz	r0, 80189ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 801899e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80189a2:	280f      	cmp	r0, #15
 80189a4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80189a8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80189ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80189b0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80189b4:	d801      	bhi.n	80189ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 80189b6:	2f0f      	cmp	r7, #15
 80189b8:	d91b      	bls.n	80189f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 80189ba:	4b7d      	ldr	r3, [pc, #500]	; (8018bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 80189bc:	4a7d      	ldr	r2, [pc, #500]	; (8018bb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 80189be:	487e      	ldr	r0, [pc, #504]	; (8018bb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80189c0:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 80189c4:	f001 fcf8 	bl	801a3b8 <__assert_func>
 80189c8:	2200      	movs	r2, #0
 80189ca:	e7cf      	b.n	801896c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 80189cc:	2600      	movs	r6, #0
 80189ce:	4632      	mov	r2, r6
 80189d0:	e7d3      	b.n	801897a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80189d2:	2600      	movs	r6, #0
 80189d4:	e7d1      	b.n	801897a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80189d6:	4606      	mov	r6, r0
 80189d8:	e7cf      	b.n	801897a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80189da:	2400      	movs	r4, #0
 80189dc:	e7da      	b.n	8018994 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80189de:	2300      	movs	r3, #0
 80189e0:	461c      	mov	r4, r3
 80189e2:	e7de      	b.n	80189a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80189e4:	463b      	mov	r3, r7
 80189e6:	463c      	mov	r4, r7
 80189e8:	e7db      	b.n	80189a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80189ea:	2300      	movs	r3, #0
 80189ec:	e7d9      	b.n	80189a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80189ee:	4603      	mov	r3, r0
 80189f0:	e7d7      	b.n	80189a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80189f2:	b280      	uxth	r0, r0
 80189f4:	b2bf      	uxth	r7, r7
 80189f6:	fb00 fe07 	mul.w	lr, r0, r7
 80189fa:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80189fe:	0100      	lsls	r0, r0, #4
 8018a00:	eba0 0c0e 	sub.w	ip, r0, lr
 8018a04:	b2bf      	uxth	r7, r7
 8018a06:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018a0a:	fa1f fc8c 	uxth.w	ip, ip
 8018a0e:	1bed      	subs	r5, r5, r7
 8018a10:	b2ad      	uxth	r5, r5
 8018a12:	fb0c f00a 	mul.w	r0, ip, sl
 8018a16:	fb05 000b 	mla	r0, r5, fp, r0
 8018a1a:	fb07 0009 	mla	r0, r7, r9, r0
 8018a1e:	fb0e 0008 	mla	r0, lr, r8, r0
 8018a22:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018a26:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018a2a:	9003      	str	r0, [sp, #12]
 8018a2c:	d018      	beq.n	8018a60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 8018a2e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018a32:	fb0b f000 	mul.w	r0, fp, r0
 8018a36:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018a3a:	fb0b fb02 	mul.w	fp, fp, r2
 8018a3e:	0a02      	lsrs	r2, r0, #8
 8018a40:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018a44:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018a48:	4402      	add	r2, r0
 8018a4a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018a4e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018a52:	0a12      	lsrs	r2, r2, #8
 8018a54:	0a00      	lsrs	r0, r0, #8
 8018a56:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018a5a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018a5e:	4302      	orrs	r2, r0
 8018a60:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018a64:	d019      	beq.n	8018a9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 8018a66:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018a6a:	fb0a fb0b 	mul.w	fp, sl, fp
 8018a6e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018a72:	fb0a fa06 	mul.w	sl, sl, r6
 8018a76:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018a7a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018a7e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018a82:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018a86:	445e      	add	r6, fp
 8018a88:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018a8c:	0a36      	lsrs	r6, r6, #8
 8018a8e:	0a00      	lsrs	r0, r0, #8
 8018a90:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018a94:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018a98:	4306      	orrs	r6, r0
 8018a9a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018a9e:	d019      	beq.n	8018ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 8018aa0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018aa4:	fb09 fa0a 	mul.w	sl, r9, sl
 8018aa8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018aac:	fb09 f904 	mul.w	r9, r9, r4
 8018ab0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018ab4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018ab8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018abc:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8018ac0:	4454      	add	r4, sl
 8018ac2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8018ac6:	0a24      	lsrs	r4, r4, #8
 8018ac8:	0a00      	lsrs	r0, r0, #8
 8018aca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018ace:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018ad2:	4304      	orrs	r4, r0
 8018ad4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018ad8:	d019      	beq.n	8018b0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 8018ada:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8018ade:	fb08 f909 	mul.w	r9, r8, r9
 8018ae2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ae6:	fb08 f803 	mul.w	r8, r8, r3
 8018aea:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8018aee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018af2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018af6:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8018afa:	444b      	add	r3, r9
 8018afc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018b00:	0a1b      	lsrs	r3, r3, #8
 8018b02:	0a00      	lsrs	r0, r0, #8
 8018b04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b08:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018b0c:	4303      	orrs	r3, r0
 8018b0e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018b12:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018b16:	fb0c f808 	mul.w	r8, ip, r8
 8018b1a:	fb05 8800 	mla	r8, r5, r0, r8
 8018b1e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8018b22:	fb07 8800 	mla	r8, r7, r0, r8
 8018b26:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8018b2a:	fb0e 8000 	mla	r0, lr, r0, r8
 8018b2e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018b32:	fb0c f606 	mul.w	r6, ip, r6
 8018b36:	0a00      	lsrs	r0, r0, #8
 8018b38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018b3c:	fb05 6202 	mla	r2, r5, r2, r6
 8018b40:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8018b44:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8018b48:	fb07 2700 	mla	r7, r7, r0, r2
 8018b4c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8018b50:	9b03      	ldr	r3, [sp, #12]
 8018b52:	9d00      	ldr	r5, [sp, #0]
 8018b54:	9a02      	ldr	r2, [sp, #8]
 8018b56:	fb0e 7000 	mla	r0, lr, r0, r7
 8018b5a:	43dc      	mvns	r4, r3
 8018b5c:	9b01      	ldr	r3, [sp, #4]
 8018b5e:	b2e4      	uxtb	r4, r4
 8018b60:	0a00      	lsrs	r0, r0, #8
 8018b62:	4363      	muls	r3, r4
 8018b64:	4365      	muls	r5, r4
 8018b66:	4362      	muls	r2, r4
 8018b68:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018b6c:	ea48 0000 	orr.w	r0, r8, r0
 8018b70:	4614      	mov	r4, r2
 8018b72:	1c5e      	adds	r6, r3, #1
 8018b74:	1c6a      	adds	r2, r5, #1
 8018b76:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8018b7a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018b7e:	0a03      	lsrs	r3, r0, #8
 8018b80:	0c02      	lsrs	r2, r0, #16
 8018b82:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8018b86:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018b8a:	00db      	lsls	r3, r3, #3
 8018b8c:	0212      	lsls	r2, r2, #8
 8018b8e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018b92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b96:	4313      	orrs	r3, r2
 8018b98:	1c62      	adds	r2, r4, #1
 8018b9a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018b9e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8018ba2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018ba6:	4318      	orrs	r0, r3
 8018ba8:	8008      	strh	r0, [r1, #0]
 8018baa:	b005      	add	sp, #20
 8018bac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bb0:	0801de7e 	.word	0x0801de7e
 8018bb4:	0801e44a 	.word	0x0801e44a
 8018bb8:	0801df02 	.word	0x0801df02

08018bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bc0:	ed2d 8b08 	vpush	{d8-d11}
 8018bc4:	b09b      	sub	sp, #108	; 0x6c
 8018bc6:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8018bca:	9218      	str	r2, [sp, #96]	; 0x60
 8018bcc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8018bce:	9116      	str	r1, [sp, #88]	; 0x58
 8018bd0:	9307      	str	r3, [sp, #28]
 8018bd2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8018bd6:	9019      	str	r0, [sp, #100]	; 0x64
 8018bd8:	6850      	ldr	r0, [r2, #4]
 8018bda:	6812      	ldr	r2, [r2, #0]
 8018bdc:	fb00 1303 	mla	r3, r0, r3, r1
 8018be0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018be4:	930a      	str	r3, [sp, #40]	; 0x28
 8018be6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018be8:	681b      	ldr	r3, [r3, #0]
 8018bea:	930f      	str	r3, [sp, #60]	; 0x3c
 8018bec:	eeb0 aa40 	vmov.f32	s20, s0
 8018bf0:	eef0 9a60 	vmov.f32	s19, s1
 8018bf4:	eeb0 9a41 	vmov.f32	s18, s2
 8018bf8:	eeb0 8a62 	vmov.f32	s16, s5
 8018bfc:	eef0 8a43 	vmov.f32	s17, s6
 8018c00:	eef0 ba44 	vmov.f32	s23, s8
 8018c04:	eeb0 ba64 	vmov.f32	s22, s9
 8018c08:	eef0 aa45 	vmov.f32	s21, s10
 8018c0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018c0e:	2b00      	cmp	r3, #0
 8018c10:	dc03      	bgt.n	8018c1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018c12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018c14:	2b00      	cmp	r3, #0
 8018c16:	f340 8389 	ble.w	801932c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8018c1a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018c1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018c20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018c24:	1e48      	subs	r0, r1, #1
 8018c26:	1e57      	subs	r7, r2, #1
 8018c28:	9b07      	ldr	r3, [sp, #28]
 8018c2a:	2b00      	cmp	r3, #0
 8018c2c:	f340 818b 	ble.w	8018f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018c30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018c34:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c38:	d406      	bmi.n	8018c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018c3a:	4584      	cmp	ip, r0
 8018c3c:	da04      	bge.n	8018c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018c3e:	2b00      	cmp	r3, #0
 8018c40:	db02      	blt.n	8018c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018c42:	42bb      	cmp	r3, r7
 8018c44:	f2c0 8180 	blt.w	8018f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8018c48:	f11c 0c01 	adds.w	ip, ip, #1
 8018c4c:	f100 8170 	bmi.w	8018f30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018c50:	4561      	cmp	r1, ip
 8018c52:	f2c0 816d 	blt.w	8018f30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018c56:	3301      	adds	r3, #1
 8018c58:	f100 816a 	bmi.w	8018f30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018c5c:	429a      	cmp	r2, r3
 8018c5e:	f2c0 8167 	blt.w	8018f30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018c62:	9b07      	ldr	r3, [sp, #28]
 8018c64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018c66:	9317      	str	r3, [sp, #92]	; 0x5c
 8018c68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018c6a:	2b00      	cmp	r3, #0
 8018c6c:	f340 8189 	ble.w	8018f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8018c70:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8018c72:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018c74:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018c78:	689b      	ldr	r3, [r3, #8]
 8018c7a:	1422      	asrs	r2, r4, #16
 8018c7c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018c80:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018c84:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018c88:	f100 81d4 	bmi.w	8019034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018c8c:	f103 38ff 	add.w	r8, r3, #4294967295
 8018c90:	4542      	cmp	r2, r8
 8018c92:	f280 81cf 	bge.w	8019034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018c96:	f1bc 0f00 	cmp.w	ip, #0
 8018c9a:	f2c0 81cb 	blt.w	8019034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018c9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018ca2:	45c4      	cmp	ip, r8
 8018ca4:	f280 81c6 	bge.w	8019034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018ca8:	b21b      	sxth	r3, r3
 8018caa:	fb0c 2203 	mla	r2, ip, r3, r2
 8018cae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018cb0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8018cb4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8018cb8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018cbc:	2900      	cmp	r1, #0
 8018cbe:	f000 81a6 	beq.w	801900e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018cc2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018cc6:	950b      	str	r5, [sp, #44]	; 0x2c
 8018cc8:	0e2d      	lsrs	r5, r5, #24
 8018cca:	9512      	str	r5, [sp, #72]	; 0x48
 8018ccc:	b180      	cbz	r0, 8018cf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8018cce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8018cd2:	3b01      	subs	r3, #1
 8018cd4:	009b      	lsls	r3, r3, #2
 8018cd6:	3304      	adds	r3, #4
 8018cd8:	eb08 0c03 	add.w	ip, r8, r3
 8018cdc:	f858 3003 	ldr.w	r3, [r8, r3]
 8018ce0:	9308      	str	r3, [sp, #32]
 8018ce2:	0e1b      	lsrs	r3, r3, #24
 8018ce4:	9310      	str	r3, [sp, #64]	; 0x40
 8018ce6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8018cea:	930c      	str	r3, [sp, #48]	; 0x30
 8018cec:	0e1b      	lsrs	r3, r3, #24
 8018cee:	9313      	str	r3, [sp, #76]	; 0x4c
 8018cf0:	b289      	uxth	r1, r1
 8018cf2:	b280      	uxth	r0, r0
 8018cf4:	fb01 f900 	mul.w	r9, r1, r0
 8018cf8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018cfc:	0109      	lsls	r1, r1, #4
 8018cfe:	eba1 0809 	sub.w	r8, r1, r9
 8018d02:	b280      	uxth	r0, r0
 8018d04:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8018d08:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018d0a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018d0c:	fa1f f888 	uxth.w	r8, r8
 8018d10:	1a09      	subs	r1, r1, r0
 8018d12:	b289      	uxth	r1, r1
 8018d14:	fb08 f303 	mul.w	r3, r8, r3
 8018d18:	fb01 330e 	mla	r3, r1, lr, r3
 8018d1c:	fb00 3305 	mla	r3, r0, r5, r3
 8018d20:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018d22:	fb09 3305 	mla	r3, r9, r5, r3
 8018d26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018d2a:	2b00      	cmp	r3, #0
 8018d2c:	f000 80f7 	beq.w	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018d30:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018d34:	d01b      	beq.n	8018d6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8018d36:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8018d3a:	fb0e fa0a 	mul.w	sl, lr, sl
 8018d3e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018d42:	fb0e fe02 	mul.w	lr, lr, r2
 8018d46:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8018d4a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018d4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018d52:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018d56:	4452      	add	r2, sl
 8018d58:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018d5c:	0a12      	lsrs	r2, r2, #8
 8018d5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018d62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018d66:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018d6a:	ea42 020c 	orr.w	r2, r2, ip
 8018d6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018d70:	2dff      	cmp	r5, #255	; 0xff
 8018d72:	d021      	beq.n	8018db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018d74:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018d76:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018d7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018d7c:	fb05 fb0b 	mul.w	fp, r5, fp
 8018d80:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018d82:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018d86:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018d88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018d8c:	fb05 fa0a 	mul.w	sl, r5, sl
 8018d90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018d94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018d98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018d9c:	44de      	add	lr, fp
 8018d9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018da2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018da6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018daa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018dae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018db2:	ea4e 050a 	orr.w	r5, lr, sl
 8018db6:	950b      	str	r5, [sp, #44]	; 0x2c
 8018db8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018dba:	2dff      	cmp	r5, #255	; 0xff
 8018dbc:	d021      	beq.n	8018e02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8018dbe:	9d08      	ldr	r5, [sp, #32]
 8018dc0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018dc4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018dc6:	fb05 fb0b 	mul.w	fp, r5, fp
 8018dca:	9d08      	ldr	r5, [sp, #32]
 8018dcc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018dd0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018dd2:	fb05 fa0e 	mul.w	sl, r5, lr
 8018dd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018dda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018dde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018de2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018de6:	44de      	add	lr, fp
 8018de8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018dec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018df0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018df4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018df8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018dfc:	ea4e 050a 	orr.w	r5, lr, sl
 8018e00:	9508      	str	r5, [sp, #32]
 8018e02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018e04:	2dff      	cmp	r5, #255	; 0xff
 8018e06:	d021      	beq.n	8018e4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8018e08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018e0a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018e0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018e10:	fb05 fb0b 	mul.w	fp, r5, fp
 8018e14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018e16:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018e1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018e1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018e20:	fb05 fa0a 	mul.w	sl, r5, sl
 8018e24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018e2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018e30:	44de      	add	lr, fp
 8018e32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018e36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018e3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018e3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018e46:	ea4e 050a 	orr.w	r5, lr, sl
 8018e4a:	950c      	str	r5, [sp, #48]	; 0x30
 8018e4c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018e4e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018e52:	9d08      	ldr	r5, [sp, #32]
 8018e54:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8018e58:	fb08 fc0c 	mul.w	ip, r8, ip
 8018e5c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018e60:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018e64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018e66:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018e6a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018e6e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018e70:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018e74:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018e78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018e7c:	fb08 f80e 	mul.w	r8, r8, lr
 8018e80:	fb01 8202 	mla	r2, r1, r2, r8
 8018e84:	9908      	ldr	r1, [sp, #32]
 8018e86:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018e8a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018e8c:	fb00 220a 	mla	r2, r0, sl, r2
 8018e90:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8018e94:	fb09 2900 	mla	r9, r9, r0, r2
 8018e98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018ea0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018ea4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018ea8:	ea4c 0c09 	orr.w	ip, ip, r9
 8018eac:	2bff      	cmp	r3, #255	; 0xff
 8018eae:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8018eb2:	f000 80b5 	beq.w	8019020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8018eb6:	8839      	ldrh	r1, [r7, #0]
 8018eb8:	43db      	mvns	r3, r3
 8018eba:	ea4f 2821 	mov.w	r8, r1, asr #8
 8018ebe:	fa5f f983 	uxtb.w	r9, r3
 8018ec2:	10ca      	asrs	r2, r1, #3
 8018ec4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8018ec8:	fb08 f809 	mul.w	r8, r8, r9
 8018ecc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018ed0:	fb02 fe09 	mul.w	lr, r2, r9
 8018ed4:	f108 0201 	add.w	r2, r8, #1
 8018ed8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8018edc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8018ee0:	00cb      	lsls	r3, r1, #3
 8018ee2:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 8018ee6:	4961      	ldr	r1, [pc, #388]	; (801906c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8018ee8:	b2d2      	uxtb	r2, r2
 8018eea:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 8018eee:	f10e 0201 	add.w	r2, lr, #1
 8018ef2:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 8018ef6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018efa:	b2db      	uxtb	r3, r3
 8018efc:	00d2      	lsls	r2, r2, #3
 8018efe:	fb03 f309 	mul.w	r3, r3, r9
 8018f02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018f06:	430a      	orrs	r2, r1
 8018f08:	1c59      	adds	r1, r3, #1
 8018f0a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018f0e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018f12:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018f16:	ea42 0c0c 	orr.w	ip, r2, ip
 8018f1a:	f8a7 c000 	strh.w	ip, [r7]
 8018f1e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018f20:	441c      	add	r4, r3
 8018f22:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018f24:	441e      	add	r6, r3
 8018f26:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018f28:	3b01      	subs	r3, #1
 8018f2a:	3702      	adds	r7, #2
 8018f2c:	9317      	str	r3, [sp, #92]	; 0x5c
 8018f2e:	e69b      	b.n	8018c68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8018f30:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018f32:	441c      	add	r4, r3
 8018f34:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018f36:	441e      	add	r6, r3
 8018f38:	9b07      	ldr	r3, [sp, #28]
 8018f3a:	3b01      	subs	r3, #1
 8018f3c:	9307      	str	r3, [sp, #28]
 8018f3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f40:	3302      	adds	r3, #2
 8018f42:	930a      	str	r3, [sp, #40]	; 0x28
 8018f44:	e670      	b.n	8018c28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018f46:	d023      	beq.n	8018f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8018f48:	9b07      	ldr	r3, [sp, #28]
 8018f4a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8018f4c:	3b01      	subs	r3, #1
 8018f4e:	fb00 4003 	mla	r0, r0, r3, r4
 8018f52:	1400      	asrs	r0, r0, #16
 8018f54:	f53f ae85 	bmi.w	8018c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f58:	3901      	subs	r1, #1
 8018f5a:	4288      	cmp	r0, r1
 8018f5c:	f6bf ae81 	bge.w	8018c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f60:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8018f62:	fb01 6303 	mla	r3, r1, r3, r6
 8018f66:	141b      	asrs	r3, r3, #16
 8018f68:	f53f ae7b 	bmi.w	8018c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f6c:	3a01      	subs	r2, #1
 8018f6e:	4293      	cmp	r3, r2
 8018f70:	f6bf ae77 	bge.w	8018c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f74:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018f78:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8018f7c:	f1bb 0f00 	cmp.w	fp, #0
 8018f80:	dc76      	bgt.n	8019070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018f82:	9b07      	ldr	r3, [sp, #28]
 8018f84:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018f88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f8a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018f8e:	930a      	str	r3, [sp, #40]	; 0x28
 8018f90:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018f92:	2b00      	cmp	r3, #0
 8018f94:	f340 81ca 	ble.w	801932c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8018f98:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018fa0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018fa4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018fa6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018faa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018fae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018fb2:	eef0 6a48 	vmov.f32	s13, s16
 8018fb6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018fba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fbe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018fc2:	ee16 4a90 	vmov	r4, s13
 8018fc6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018fca:	eef0 6a68 	vmov.f32	s13, s17
 8018fce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018fd2:	ee18 2a10 	vmov	r2, s16
 8018fd6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018fda:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fde:	ee18 2a90 	vmov	r2, s17
 8018fe2:	932f      	str	r3, [sp, #188]	; 0xbc
 8018fe4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018fe6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fea:	9330      	str	r3, [sp, #192]	; 0xc0
 8018fec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018fee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018ff0:	3b01      	subs	r3, #1
 8018ff2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ff6:	9316      	str	r3, [sp, #88]	; 0x58
 8018ff8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ffa:	bf08      	it	eq
 8018ffc:	4613      	moveq	r3, r2
 8018ffe:	ee16 6a90 	vmov	r6, s13
 8019002:	9307      	str	r3, [sp, #28]
 8019004:	eef0 8a67 	vmov.f32	s17, s15
 8019008:	eeb0 8a47 	vmov.f32	s16, s14
 801900c:	e5fe      	b.n	8018c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801900e:	2800      	cmp	r0, #0
 8019010:	f43f ae6e 	beq.w	8018cf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019014:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019018:	9308      	str	r3, [sp, #32]
 801901a:	0e1b      	lsrs	r3, r3, #24
 801901c:	9310      	str	r3, [sp, #64]	; 0x40
 801901e:	e667      	b.n	8018cf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019020:	ea4f 125c 	mov.w	r2, ip, lsr #5
 8019024:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 8019028:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 801902c:	f022 0207 	bic.w	r2, r2, #7
 8019030:	431a      	orrs	r2, r3
 8019032:	e76e      	b.n	8018f12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8019034:	f112 0801 	adds.w	r8, r2, #1
 8019038:	f53f af71 	bmi.w	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801903c:	4543      	cmp	r3, r8
 801903e:	f6ff af6e 	blt.w	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019042:	f11c 0801 	adds.w	r8, ip, #1
 8019046:	f53f af6a 	bmi.w	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801904a:	45c6      	cmp	lr, r8
 801904c:	f6ff af67 	blt.w	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8019050:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8019054:	fa0f f28e 	sxth.w	r2, lr
 8019058:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801905c:	9200      	str	r2, [sp, #0]
 801905e:	b21b      	sxth	r3, r3
 8019060:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019062:	9819      	ldr	r0, [sp, #100]	; 0x64
 8019064:	4639      	mov	r1, r7
 8019066:	f7ff fc59 	bl	801891c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801906a:	e758      	b.n	8018f1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801906c:	fffff800 	.word	0xfffff800
 8019070:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019072:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019074:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8019078:	1421      	asrs	r1, r4, #16
 801907a:	1433      	asrs	r3, r6, #16
 801907c:	fb07 1303 	mla	r3, r7, r3, r1
 8019080:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019082:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8019086:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801908a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801908e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019092:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019096:	2a00      	cmp	r2, #0
 8019098:	f000 8131 	beq.w	80192fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801909c:	684d      	ldr	r5, [r1, #4]
 801909e:	950d      	str	r5, [sp, #52]	; 0x34
 80190a0:	0e2d      	lsrs	r5, r5, #24
 80190a2:	9514      	str	r5, [sp, #80]	; 0x50
 80190a4:	b178      	cbz	r0, 80190c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 80190a6:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80190aa:	3f01      	subs	r7, #1
 80190ac:	00bf      	lsls	r7, r7, #2
 80190ae:	3704      	adds	r7, #4
 80190b0:	eb01 0e07 	add.w	lr, r1, r7
 80190b4:	59c9      	ldr	r1, [r1, r7]
 80190b6:	9109      	str	r1, [sp, #36]	; 0x24
 80190b8:	0e09      	lsrs	r1, r1, #24
 80190ba:	9111      	str	r1, [sp, #68]	; 0x44
 80190bc:	f8de 1004 	ldr.w	r1, [lr, #4]
 80190c0:	910e      	str	r1, [sp, #56]	; 0x38
 80190c2:	0e09      	lsrs	r1, r1, #24
 80190c4:	9115      	str	r1, [sp, #84]	; 0x54
 80190c6:	b292      	uxth	r2, r2
 80190c8:	b280      	uxth	r0, r0
 80190ca:	fb02 f900 	mul.w	r9, r2, r0
 80190ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80190d2:	0112      	lsls	r2, r2, #4
 80190d4:	eba2 0e09 	sub.w	lr, r2, r9
 80190d8:	b280      	uxth	r0, r0
 80190da:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80190de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80190e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80190e2:	fa1f fe8e 	uxth.w	lr, lr
 80190e6:	1a09      	subs	r1, r1, r0
 80190e8:	b289      	uxth	r1, r1
 80190ea:	fb0e f202 	mul.w	r2, lr, r2
 80190ee:	fb01 220c 	mla	r2, r1, ip, r2
 80190f2:	fb00 2205 	mla	r2, r0, r5, r2
 80190f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80190f8:	fb09 2205 	mla	r2, r9, r5, r2
 80190fc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019100:	2a00      	cmp	r2, #0
 8019102:	f000 80f3 	beq.w	80192ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019106:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801910a:	d019      	beq.n	8019140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 801910c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019110:	fb0c fa0a 	mul.w	sl, ip, sl
 8019114:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019118:	fb0c fc03 	mul.w	ip, ip, r3
 801911c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019120:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019124:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019128:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801912c:	4453      	add	r3, sl
 801912e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019132:	0a1b      	lsrs	r3, r3, #8
 8019134:	0a3f      	lsrs	r7, r7, #8
 8019136:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801913a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801913e:	433b      	orrs	r3, r7
 8019140:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019142:	2dff      	cmp	r5, #255	; 0xff
 8019144:	d020      	beq.n	8019188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 8019146:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019148:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801914c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801914e:	436f      	muls	r7, r5
 8019150:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019152:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019156:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019158:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801915c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019160:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019164:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019168:	44bc      	add	ip, r7
 801916a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801916e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801917a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801917e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019182:	ea4c 050a 	orr.w	r5, ip, sl
 8019186:	950d      	str	r5, [sp, #52]	; 0x34
 8019188:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801918a:	2dff      	cmp	r5, #255	; 0xff
 801918c:	d020      	beq.n	80191d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 801918e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019190:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019194:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019196:	436f      	muls	r7, r5
 8019198:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801919a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801919e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80191a0:	fb05 fa0c 	mul.w	sl, r5, ip
 80191a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80191a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80191ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80191b0:	44bc      	add	ip, r7
 80191b2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80191b6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80191ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80191be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80191c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80191c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80191ca:	ea4c 050a 	orr.w	r5, ip, sl
 80191ce:	9509      	str	r5, [sp, #36]	; 0x24
 80191d0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80191d2:	2dff      	cmp	r5, #255	; 0xff
 80191d4:	d020      	beq.n	8019218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 80191d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80191d8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80191dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80191de:	436f      	muls	r7, r5
 80191e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80191e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80191e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80191e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80191ec:	fb05 fa0a 	mul.w	sl, r5, sl
 80191f0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80191f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80191f8:	44bc      	add	ip, r7
 80191fa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80191fe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019202:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019206:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801920a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801920e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019212:	ea4c 050a 	orr.w	r5, ip, sl
 8019216:	950e      	str	r5, [sp, #56]	; 0x38
 8019218:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801921a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801921e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019220:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019224:	fb0e f707 	mul.w	r7, lr, r7
 8019228:	fb01 770c 	mla	r7, r1, ip, r7
 801922c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019230:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019232:	fb00 770c 	mla	r7, r0, ip, r7
 8019236:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801923a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801923c:	fb09 770c 	mla	r7, r9, ip, r7
 8019240:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019244:	fb0e fe0c 	mul.w	lr, lr, ip
 8019248:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801924c:	fb01 e303 	mla	r3, r1, r3, lr
 8019250:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019252:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019256:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019258:	fb00 330a 	mla	r3, r0, sl, r3
 801925c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8019260:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019264:	0a3f      	lsrs	r7, r7, #8
 8019266:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801926a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801926e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019272:	ea47 070c 	orr.w	r7, r7, ip
 8019276:	2aff      	cmp	r2, #255	; 0xff
 8019278:	ea4f 2017 	mov.w	r0, r7, lsr #8
 801927c:	d048      	beq.n	8019310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801927e:	f8b8 1000 	ldrh.w	r1, [r8]
 8019282:	43d2      	mvns	r2, r2
 8019284:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8019288:	fa5f f982 	uxtb.w	r9, r2
 801928c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019290:	fb0e fe09 	mul.w	lr, lr, r9
 8019294:	f10e 0301 	add.w	r3, lr, #1
 8019298:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 801929c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 80192a0:	0c3b      	lsrs	r3, r7, #16
 80192a2:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 80192a6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80192aa:	4b23      	ldr	r3, [pc, #140]	; (8019338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 80192ac:	fb0c fc09 	mul.w	ip, ip, r9
 80192b0:	00ca      	lsls	r2, r1, #3
 80192b2:	fa5f fe8e 	uxtb.w	lr, lr
 80192b6:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 80192ba:	b2d2      	uxtb	r2, r2
 80192bc:	f10c 0301 	add.w	r3, ip, #1
 80192c0:	fb02 f209 	mul.w	r2, r2, r9
 80192c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80192c8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80192cc:	1c51      	adds	r1, r2, #1
 80192ce:	00db      	lsls	r3, r3, #3
 80192d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80192d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80192d8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80192dc:	ea4e 0e03 	orr.w	lr, lr, r3
 80192e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80192e4:	ea47 0e0e 	orr.w	lr, r7, lr
 80192e8:	f8a8 e000 	strh.w	lr, [r8]
 80192ec:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80192ee:	441c      	add	r4, r3
 80192f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80192f2:	f108 0802 	add.w	r8, r8, #2
 80192f6:	441e      	add	r6, r3
 80192f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80192fc:	e63e      	b.n	8018f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80192fe:	2800      	cmp	r0, #0
 8019300:	f43f aee1 	beq.w	80190c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 8019304:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8019308:	9109      	str	r1, [sp, #36]	; 0x24
 801930a:	0e09      	lsrs	r1, r1, #24
 801930c:	9111      	str	r1, [sp, #68]	; 0x44
 801930e:	e6da      	b.n	80190c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 8019310:	097a      	lsrs	r2, r7, #5
 8019312:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8019316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801931a:	f020 0007 	bic.w	r0, r0, #7
 801931e:	4310      	orrs	r0, r2
 8019320:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8019324:	4307      	orrs	r7, r0
 8019326:	f8a8 7000 	strh.w	r7, [r8]
 801932a:	e7df      	b.n	80192ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801932c:	b01b      	add	sp, #108	; 0x6c
 801932e:	ecbd 8b08 	vpop	{d8-d11}
 8019332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019336:	bf00      	nop
 8019338:	fffff800 	.word	0xfffff800

0801933c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801933c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019340:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019344:	2c00      	cmp	r4, #0
 8019346:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801934a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801934e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019352:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019356:	fb04 ce03 	mla	lr, r4, r3, ip
 801935a:	db60      	blt.n	801941e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801935c:	45a1      	cmp	r9, r4
 801935e:	dd5e      	ble.n	801941e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019360:	f1bc 0f00 	cmp.w	ip, #0
 8019364:	db59      	blt.n	801941a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019366:	45e0      	cmp	r8, ip
 8019368:	dd57      	ble.n	801941a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801936a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801936e:	f01e 0f01 	tst.w	lr, #1
 8019372:	5c16      	ldrb	r6, [r2, r0]
 8019374:	bf0c      	ite	eq
 8019376:	f006 060f 	andeq.w	r6, r6, #15
 801937a:	1136      	asrne	r6, r6, #4
 801937c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019380:	b2f6      	uxtb	r6, r6
 8019382:	f11c 0001 	adds.w	r0, ip, #1
 8019386:	d44d      	bmi.n	8019424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019388:	4580      	cmp	r8, r0
 801938a:	dd4b      	ble.n	8019424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801938c:	2d00      	cmp	r5, #0
 801938e:	d04b      	beq.n	8019428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8019390:	f10e 0a01 	add.w	sl, lr, #1
 8019394:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019398:	f01a 0f01 	tst.w	sl, #1
 801939c:	5c10      	ldrb	r0, [r2, r0]
 801939e:	bf0c      	ite	eq
 80193a0:	f000 000f 	andeq.w	r0, r0, #15
 80193a4:	1100      	asrne	r0, r0, #4
 80193a6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80193aa:	b2c0      	uxtb	r0, r0
 80193ac:	3401      	adds	r4, #1
 80193ae:	d43f      	bmi.n	8019430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80193b0:	45a1      	cmp	r9, r4
 80193b2:	dd3d      	ble.n	8019430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80193b4:	2f00      	cmp	r7, #0
 80193b6:	f000 809b 	beq.w	80194f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 80193ba:	f1bc 0f00 	cmp.w	ip, #0
 80193be:	db35      	blt.n	801942c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80193c0:	45e0      	cmp	r8, ip
 80193c2:	dd33      	ble.n	801942c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80193c4:	eb03 090e 	add.w	r9, r3, lr
 80193c8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80193cc:	f019 0f01 	tst.w	r9, #1
 80193d0:	5d14      	ldrb	r4, [r2, r4]
 80193d2:	bf0c      	ite	eq
 80193d4:	f004 040f 	andeq.w	r4, r4, #15
 80193d8:	1124      	asrne	r4, r4, #4
 80193da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80193de:	b2e4      	uxtb	r4, r4
 80193e0:	f11c 0c01 	adds.w	ip, ip, #1
 80193e4:	d427      	bmi.n	8019436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80193e6:	45e0      	cmp	r8, ip
 80193e8:	dd25      	ble.n	8019436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80193ea:	b335      	cbz	r5, 801943a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80193ec:	3301      	adds	r3, #1
 80193ee:	449e      	add	lr, r3
 80193f0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80193f4:	f01e 0f01 	tst.w	lr, #1
 80193f8:	5cd2      	ldrb	r2, [r2, r3]
 80193fa:	bf0c      	ite	eq
 80193fc:	f002 020f 	andeq.w	r2, r2, #15
 8019400:	1112      	asrne	r2, r2, #4
 8019402:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019406:	b2d3      	uxtb	r3, r2
 8019408:	2d0f      	cmp	r5, #15
 801940a:	d917      	bls.n	801943c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801940c:	4b3b      	ldr	r3, [pc, #236]	; (80194fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 801940e:	4a3c      	ldr	r2, [pc, #240]	; (8019500 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8019410:	483c      	ldr	r0, [pc, #240]	; (8019504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8019412:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019416:	f000 ffcf 	bl	801a3b8 <__assert_func>
 801941a:	2600      	movs	r6, #0
 801941c:	e7b1      	b.n	8019382 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801941e:	2000      	movs	r0, #0
 8019420:	4606      	mov	r6, r0
 8019422:	e7c3      	b.n	80193ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019424:	2000      	movs	r0, #0
 8019426:	e7c1      	b.n	80193ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019428:	4628      	mov	r0, r5
 801942a:	e7bf      	b.n	80193ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801942c:	2400      	movs	r4, #0
 801942e:	e7d7      	b.n	80193e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019430:	2300      	movs	r3, #0
 8019432:	461c      	mov	r4, r3
 8019434:	e7e8      	b.n	8019408 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019436:	2300      	movs	r3, #0
 8019438:	e7e6      	b.n	8019408 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801943a:	462b      	mov	r3, r5
 801943c:	2f0f      	cmp	r7, #15
 801943e:	d8e5      	bhi.n	801940c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019440:	b2ad      	uxth	r5, r5
 8019442:	b2bf      	uxth	r7, r7
 8019444:	fb05 fc07 	mul.w	ip, r5, r7
 8019448:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801944c:	012d      	lsls	r5, r5, #4
 801944e:	b2bf      	uxth	r7, r7
 8019450:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019454:	eba5 050c 	sub.w	r5, r5, ip
 8019458:	1bd2      	subs	r2, r2, r7
 801945a:	b2ad      	uxth	r5, r5
 801945c:	b292      	uxth	r2, r2
 801945e:	4368      	muls	r0, r5
 8019460:	fb06 0002 	mla	r0, r6, r2, r0
 8019464:	fb07 0404 	mla	r4, r7, r4, r0
 8019468:	fb0c 4303 	mla	r3, ip, r3, r4
 801946c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019470:	2b00      	cmp	r3, #0
 8019472:	d03b      	beq.n	80194ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 8019474:	4a24      	ldr	r2, [pc, #144]	; (8019508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8019476:	880e      	ldrh	r6, [r1, #0]
 8019478:	6815      	ldr	r5, [r2, #0]
 801947a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801947e:	435a      	muls	r2, r3
 8019480:	1c53      	adds	r3, r2, #1
 8019482:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019486:	121b      	asrs	r3, r3, #8
 8019488:	b29a      	uxth	r2, r3
 801948a:	1234      	asrs	r4, r6, #8
 801948c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8019490:	43db      	mvns	r3, r3
 8019492:	b2db      	uxtb	r3, r3
 8019494:	fb10 f002 	smulbb	r0, r0, r2
 8019498:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801949c:	fb04 0403 	mla	r4, r4, r3, r0
 80194a0:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80194a4:	10f0      	asrs	r0, r6, #3
 80194a6:	b2ed      	uxtb	r5, r5
 80194a8:	00f6      	lsls	r6, r6, #3
 80194aa:	fb17 f702 	smulbb	r7, r7, r2
 80194ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80194b2:	fb15 f202 	smulbb	r2, r5, r2
 80194b6:	b2f6      	uxtb	r6, r6
 80194b8:	b2a4      	uxth	r4, r4
 80194ba:	fb00 7003 	mla	r0, r0, r3, r7
 80194be:	fb06 2303 	mla	r3, r6, r3, r2
 80194c2:	b29a      	uxth	r2, r3
 80194c4:	1c63      	adds	r3, r4, #1
 80194c6:	b280      	uxth	r0, r0
 80194c8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80194cc:	1c53      	adds	r3, r2, #1
 80194ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80194d2:	1c42      	adds	r2, r0, #1
 80194d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80194d8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80194dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80194e0:	0940      	lsrs	r0, r0, #5
 80194e2:	4323      	orrs	r3, r4
 80194e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80194e8:	4303      	orrs	r3, r0
 80194ea:	800b      	strh	r3, [r1, #0]
 80194ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80194f0:	2d0f      	cmp	r5, #15
 80194f2:	d88b      	bhi.n	801940c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80194f4:	463b      	mov	r3, r7
 80194f6:	463c      	mov	r4, r7
 80194f8:	e7a2      	b.n	8019440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 80194fa:	bf00      	nop
 80194fc:	0801de7e 	.word	0x0801de7e
 8019500:	0801e44a 	.word	0x0801e44a
 8019504:	0801df02 	.word	0x0801df02
 8019508:	2000a09c 	.word	0x2000a09c

0801950c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801950c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019510:	ed2d 8b08 	vpush	{d8-d11}
 8019514:	b097      	sub	sp, #92	; 0x5c
 8019516:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801951a:	9214      	str	r2, [sp, #80]	; 0x50
 801951c:	9309      	str	r3, [sp, #36]	; 0x24
 801951e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019520:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019524:	910e      	str	r1, [sp, #56]	; 0x38
 8019526:	930f      	str	r3, [sp, #60]	; 0x3c
 8019528:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801952c:	9015      	str	r0, [sp, #84]	; 0x54
 801952e:	6850      	ldr	r0, [r2, #4]
 8019530:	6812      	ldr	r2, [r2, #0]
 8019532:	fb00 1303 	mla	r3, r0, r3, r1
 8019536:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801953a:	930a      	str	r3, [sp, #40]	; 0x28
 801953c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801953e:	689b      	ldr	r3, [r3, #8]
 8019540:	3301      	adds	r3, #1
 8019542:	f023 0301 	bic.w	r3, r3, #1
 8019546:	930b      	str	r3, [sp, #44]	; 0x2c
 8019548:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801954a:	681f      	ldr	r7, [r3, #0]
 801954c:	eeb0 aa40 	vmov.f32	s20, s0
 8019550:	eef0 9a60 	vmov.f32	s19, s1
 8019554:	eeb0 9a41 	vmov.f32	s18, s2
 8019558:	eeb0 8a62 	vmov.f32	s16, s5
 801955c:	eef0 8a43 	vmov.f32	s17, s6
 8019560:	eef0 ba44 	vmov.f32	s23, s8
 8019564:	eeb0 ba64 	vmov.f32	s22, s9
 8019568:	eef0 aa45 	vmov.f32	s21, s10
 801956c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801956e:	2b00      	cmp	r3, #0
 8019570:	dc03      	bgt.n	801957a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019572:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019574:	2b00      	cmp	r3, #0
 8019576:	f340 8257 	ble.w	8019a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801957a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801957c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019580:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019584:	1e48      	subs	r0, r1, #1
 8019586:	f102 3cff 	add.w	ip, r2, #4294967295
 801958a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801958c:	2b00      	cmp	r3, #0
 801958e:	f340 80eb 	ble.w	8019768 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8019592:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019596:	ea4f 4326 	mov.w	r3, r6, asr #16
 801959a:	d406      	bmi.n	80195aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801959c:	4586      	cmp	lr, r0
 801959e:	da04      	bge.n	80195aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80195a0:	2b00      	cmp	r3, #0
 80195a2:	db02      	blt.n	80195aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80195a4:	4563      	cmp	r3, ip
 80195a6:	f2c0 80e0 	blt.w	801976a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80195aa:	f11e 0e01 	adds.w	lr, lr, #1
 80195ae:	f100 80d0 	bmi.w	8019752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80195b2:	4571      	cmp	r1, lr
 80195b4:	f2c0 80cd 	blt.w	8019752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80195b8:	3301      	adds	r3, #1
 80195ba:	f100 80ca 	bmi.w	8019752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80195be:	429a      	cmp	r2, r3
 80195c0:	f2c0 80c7 	blt.w	8019752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80195c4:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 80195c8:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 80195cc:	f1b9 0f00 	cmp.w	r9, #0
 80195d0:	f340 80e8 	ble.w	80197a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80195d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80195d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80195da:	1423      	asrs	r3, r4, #16
 80195dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80195e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80195e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80195e8:	f100 8133 	bmi.w	8019852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80195ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80195f0:	455b      	cmp	r3, fp
 80195f2:	f280 812e 	bge.w	8019852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80195f6:	2800      	cmp	r0, #0
 80195f8:	f2c0 812b 	blt.w	8019852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80195fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019600:	4558      	cmp	r0, fp
 8019602:	f280 8126 	bge.w	8019852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8019606:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019608:	fb00 3305 	mla	r3, r0, r5, r3
 801960c:	0858      	lsrs	r0, r3, #1
 801960e:	07dd      	lsls	r5, r3, #31
 8019610:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019614:	bf54      	ite	pl
 8019616:	f00c 0c0f 	andpl.w	ip, ip, #15
 801961a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801961e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019622:	fa5f fc8c 	uxtb.w	ip, ip
 8019626:	2a00      	cmp	r2, #0
 8019628:	f000 8102 	beq.w	8019830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801962c:	1c58      	adds	r0, r3, #1
 801962e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019632:	07c0      	lsls	r0, r0, #31
 8019634:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019638:	bf54      	ite	pl
 801963a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801963e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8019642:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8019646:	fa5f f08e 	uxtb.w	r0, lr
 801964a:	9010      	str	r0, [sp, #64]	; 0x40
 801964c:	b1c9      	cbz	r1, 8019682 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801964e:	4453      	add	r3, sl
 8019650:	0858      	lsrs	r0, r3, #1
 8019652:	07dd      	lsls	r5, r3, #31
 8019654:	5c38      	ldrb	r0, [r7, r0]
 8019656:	bf54      	ite	pl
 8019658:	f000 000f 	andpl.w	r0, r0, #15
 801965c:	1100      	asrmi	r0, r0, #4
 801965e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019662:	3301      	adds	r3, #1
 8019664:	b2c0      	uxtb	r0, r0
 8019666:	900c      	str	r0, [sp, #48]	; 0x30
 8019668:	0858      	lsrs	r0, r3, #1
 801966a:	07dd      	lsls	r5, r3, #31
 801966c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8019670:	bf54      	ite	pl
 8019672:	f00e 030f 	andpl.w	r3, lr, #15
 8019676:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801967a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801967e:	b2db      	uxtb	r3, r3
 8019680:	9311      	str	r3, [sp, #68]	; 0x44
 8019682:	b292      	uxth	r2, r2
 8019684:	b289      	uxth	r1, r1
 8019686:	fb02 f301 	mul.w	r3, r2, r1
 801968a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801968e:	0112      	lsls	r2, r2, #4
 8019690:	b289      	uxth	r1, r1
 8019692:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8019696:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019698:	1ad2      	subs	r2, r2, r3
 801969a:	1a40      	subs	r0, r0, r1
 801969c:	b292      	uxth	r2, r2
 801969e:	436a      	muls	r2, r5
 80196a0:	b280      	uxth	r0, r0
 80196a2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80196a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80196a8:	fb01 c102 	mla	r1, r1, r2, ip
 80196ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80196ae:	fb03 1302 	mla	r3, r3, r2, r1
 80196b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80196b6:	2b00      	cmp	r3, #0
 80196b8:	d042      	beq.n	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80196ba:	4a76      	ldr	r2, [pc, #472]	; (8019894 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 80196bc:	f8b8 c000 	ldrh.w	ip, [r8]
 80196c0:	6810      	ldr	r0, [r2, #0]
 80196c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80196c4:	4353      	muls	r3, r2
 80196c6:	1c5a      	adds	r2, r3, #1
 80196c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80196cc:	121b      	asrs	r3, r3, #8
 80196ce:	fa1f fe83 	uxth.w	lr, r3
 80196d2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80196d6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80196da:	43db      	mvns	r3, r3
 80196dc:	b2db      	uxtb	r3, r3
 80196de:	fb12 f20e 	smulbb	r2, r2, lr
 80196e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80196e6:	fb01 2103 	mla	r1, r1, r3, r2
 80196ea:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80196ee:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80196f2:	b2c0      	uxtb	r0, r0
 80196f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80196f8:	fb1b fb0e 	smulbb	fp, fp, lr
 80196fc:	b289      	uxth	r1, r1
 80196fe:	fb10 fe0e 	smulbb	lr, r0, lr
 8019702:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019706:	fa5f fc8c 	uxtb.w	ip, ip
 801970a:	fb02 b203 	mla	r2, r2, r3, fp
 801970e:	1c48      	adds	r0, r1, #1
 8019710:	fb0c e303 	mla	r3, ip, r3, lr
 8019714:	b292      	uxth	r2, r2
 8019716:	b29b      	uxth	r3, r3
 8019718:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801971c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8019720:	f102 0b01 	add.w	fp, r2, #1
 8019724:	1c59      	adds	r1, r3, #1
 8019726:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801972a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801972e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019732:	0952      	lsrs	r2, r2, #5
 8019734:	4301      	orrs	r1, r0
 8019736:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801973a:	4311      	orrs	r1, r2
 801973c:	f8a8 1000 	strh.w	r1, [r8]
 8019740:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019742:	441c      	add	r4, r3
 8019744:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019746:	f108 0802 	add.w	r8, r8, #2
 801974a:	441e      	add	r6, r3
 801974c:	f109 39ff 	add.w	r9, r9, #4294967295
 8019750:	e73c      	b.n	80195cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8019752:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019754:	441c      	add	r4, r3
 8019756:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019758:	441e      	add	r6, r3
 801975a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801975c:	3b01      	subs	r3, #1
 801975e:	9309      	str	r3, [sp, #36]	; 0x24
 8019760:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019762:	3302      	adds	r3, #2
 8019764:	930a      	str	r3, [sp, #40]	; 0x28
 8019766:	e710      	b.n	801958a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019768:	d023      	beq.n	80197b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801976a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801976c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801976e:	3b01      	subs	r3, #1
 8019770:	fb00 4003 	mla	r0, r0, r3, r4
 8019774:	1400      	asrs	r0, r0, #16
 8019776:	f53f af25 	bmi.w	80195c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801977a:	3901      	subs	r1, #1
 801977c:	4288      	cmp	r0, r1
 801977e:	f6bf af21 	bge.w	80195c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019782:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019784:	fb01 6303 	mla	r3, r1, r3, r6
 8019788:	141b      	asrs	r3, r3, #16
 801978a:	f53f af1b 	bmi.w	80195c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801978e:	3a01      	subs	r2, #1
 8019790:	4293      	cmp	r3, r2
 8019792:	f6bf af17 	bge.w	80195c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019796:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 801979a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801979e:	f1b8 0f00 	cmp.w	r8, #0
 80197a2:	dc79      	bgt.n	8019898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80197a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197a6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80197aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80197ac:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80197b0:	930a      	str	r3, [sp, #40]	; 0x28
 80197b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197b4:	2b00      	cmp	r3, #0
 80197b6:	f340 8137 	ble.w	8019a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 80197ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80197be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80197c2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80197c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80197c8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80197cc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80197d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80197d4:	eef0 6a48 	vmov.f32	s13, s16
 80197d8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80197dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197e0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80197e4:	ee16 4a90 	vmov	r4, s13
 80197e8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80197ec:	eef0 6a68 	vmov.f32	s13, s17
 80197f0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80197f4:	ee18 2a10 	vmov	r2, s16
 80197f8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80197fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019800:	ee18 2a90 	vmov	r2, s17
 8019804:	932b      	str	r3, [sp, #172]	; 0xac
 8019806:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019808:	fb92 f3f3 	sdiv	r3, r2, r3
 801980c:	932c      	str	r3, [sp, #176]	; 0xb0
 801980e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019810:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019812:	3b01      	subs	r3, #1
 8019814:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019818:	930e      	str	r3, [sp, #56]	; 0x38
 801981a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801981c:	bf08      	it	eq
 801981e:	4613      	moveq	r3, r2
 8019820:	ee16 6a90 	vmov	r6, s13
 8019824:	9309      	str	r3, [sp, #36]	; 0x24
 8019826:	eef0 8a67 	vmov.f32	s17, s15
 801982a:	eeb0 8a47 	vmov.f32	s16, s14
 801982e:	e69d      	b.n	801956c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019830:	2900      	cmp	r1, #0
 8019832:	f43f af26 	beq.w	8019682 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019836:	eb0a 0003 	add.w	r0, sl, r3
 801983a:	0843      	lsrs	r3, r0, #1
 801983c:	07c0      	lsls	r0, r0, #31
 801983e:	5cfb      	ldrb	r3, [r7, r3]
 8019840:	bf54      	ite	pl
 8019842:	f003 030f 	andpl.w	r3, r3, #15
 8019846:	111b      	asrmi	r3, r3, #4
 8019848:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801984c:	b2db      	uxtb	r3, r3
 801984e:	930c      	str	r3, [sp, #48]	; 0x30
 8019850:	e717      	b.n	8019682 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019852:	f113 0b01 	adds.w	fp, r3, #1
 8019856:	f53f af73 	bmi.w	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801985a:	45dc      	cmp	ip, fp
 801985c:	f6ff af70 	blt.w	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019860:	f110 0b01 	adds.w	fp, r0, #1
 8019864:	f53f af6c 	bmi.w	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019868:	45de      	cmp	lr, fp
 801986a:	f6ff af69 	blt.w	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801986e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019870:	9302      	str	r3, [sp, #8]
 8019872:	fa0f f38e 	sxth.w	r3, lr
 8019876:	9301      	str	r3, [sp, #4]
 8019878:	fa0f f38c 	sxth.w	r3, ip
 801987c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019880:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019884:	9300      	str	r3, [sp, #0]
 8019886:	463a      	mov	r2, r7
 8019888:	4653      	mov	r3, sl
 801988a:	4641      	mov	r1, r8
 801988c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801988e:	f7ff fd55 	bl	801933c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019892:	e755      	b.n	8019740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019894:	2000a09c 	.word	0x2000a09c
 8019898:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801989a:	1422      	asrs	r2, r4, #16
 801989c:	1433      	asrs	r3, r6, #16
 801989e:	fb05 2303 	mla	r3, r5, r3, r2
 80198a2:	085a      	lsrs	r2, r3, #1
 80198a4:	07dd      	lsls	r5, r3, #31
 80198a6:	5cba      	ldrb	r2, [r7, r2]
 80198a8:	bf54      	ite	pl
 80198aa:	f002 020f 	andpl.w	r2, r2, #15
 80198ae:	1112      	asrmi	r2, r2, #4
 80198b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80198b4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80198b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80198bc:	b2d2      	uxtb	r2, r2
 80198be:	2900      	cmp	r1, #0
 80198c0:	f000 809f 	beq.w	8019a02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 80198c4:	f103 0901 	add.w	r9, r3, #1
 80198c8:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 80198cc:	f019 0f01 	tst.w	r9, #1
 80198d0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80198d4:	bf0c      	ite	eq
 80198d6:	f00c 0c0f 	andeq.w	ip, ip, #15
 80198da:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80198de:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80198e2:	fa5f f58c 	uxtb.w	r5, ip
 80198e6:	9512      	str	r5, [sp, #72]	; 0x48
 80198e8:	b1f8      	cbz	r0, 801992a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 80198ea:	445b      	add	r3, fp
 80198ec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80198f0:	07dd      	lsls	r5, r3, #31
 80198f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80198f6:	bf54      	ite	pl
 80198f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80198fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019900:	3301      	adds	r3, #1
 8019902:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019906:	fa5f f58c 	uxtb.w	r5, ip
 801990a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801990e:	950d      	str	r5, [sp, #52]	; 0x34
 8019910:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019914:	07dd      	lsls	r5, r3, #31
 8019916:	bf54      	ite	pl
 8019918:	f00c 0c0f 	andpl.w	ip, ip, #15
 801991c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019920:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019924:	fa5f f38c 	uxtb.w	r3, ip
 8019928:	9313      	str	r3, [sp, #76]	; 0x4c
 801992a:	b289      	uxth	r1, r1
 801992c:	b280      	uxth	r0, r0
 801992e:	fb01 f300 	mul.w	r3, r1, r0
 8019932:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8019936:	0109      	lsls	r1, r1, #4
 8019938:	b280      	uxth	r0, r0
 801993a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801993e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019940:	1ac9      	subs	r1, r1, r3
 8019942:	ebac 0c00 	sub.w	ip, ip, r0
 8019946:	b289      	uxth	r1, r1
 8019948:	4369      	muls	r1, r5
 801994a:	fa1f fc8c 	uxth.w	ip, ip
 801994e:	fb02 120c 	mla	r2, r2, ip, r1
 8019952:	990d      	ldr	r1, [sp, #52]	; 0x34
 8019954:	fb00 2001 	mla	r0, r0, r1, r2
 8019958:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801995a:	fb03 0302 	mla	r3, r3, r2, r0
 801995e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019962:	2b00      	cmp	r3, #0
 8019964:	d044      	beq.n	80199f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019966:	4a33      	ldr	r2, [pc, #204]	; (8019a34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 8019968:	f8be c000 	ldrh.w	ip, [lr]
 801996c:	6810      	ldr	r0, [r2, #0]
 801996e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019970:	4353      	muls	r3, r2
 8019972:	1c5a      	adds	r2, r3, #1
 8019974:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019978:	121b      	asrs	r3, r3, #8
 801997a:	fa1f f983 	uxth.w	r9, r3
 801997e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8019982:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8019986:	43db      	mvns	r3, r3
 8019988:	b2db      	uxtb	r3, r3
 801998a:	fb12 f209 	smulbb	r2, r2, r9
 801998e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019992:	fb01 2103 	mla	r1, r1, r3, r2
 8019996:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801999a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801999e:	b2c0      	uxtb	r0, r0
 80199a0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80199a4:	fa5f fc8c 	uxtb.w	ip, ip
 80199a8:	fb10 f009 	smulbb	r0, r0, r9
 80199ac:	fb0c 0003 	mla	r0, ip, r3, r0
 80199b0:	b289      	uxth	r1, r1
 80199b2:	fb1a fa09 	smulbb	sl, sl, r9
 80199b6:	b280      	uxth	r0, r0
 80199b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80199bc:	fb02 a203 	mla	r2, r2, r3, sl
 80199c0:	1c4b      	adds	r3, r1, #1
 80199c2:	f100 0a01 	add.w	sl, r0, #1
 80199c6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80199ca:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80199ce:	b292      	uxth	r2, r2
 80199d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80199d4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80199d8:	ea4a 0101 	orr.w	r1, sl, r1
 80199dc:	f102 0a01 	add.w	sl, r2, #1
 80199e0:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80199e4:	0952      	lsrs	r2, r2, #5
 80199e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199ea:	4311      	orrs	r1, r2
 80199ec:	f8ae 1000 	strh.w	r1, [lr]
 80199f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80199f2:	441c      	add	r4, r3
 80199f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80199f6:	f10e 0e02 	add.w	lr, lr, #2
 80199fa:	441e      	add	r6, r3
 80199fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a00:	e6cd      	b.n	801979e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019a02:	2800      	cmp	r0, #0
 8019a04:	d091      	beq.n	801992a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 8019a06:	445b      	add	r3, fp
 8019a08:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019a0c:	07db      	lsls	r3, r3, #31
 8019a0e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019a12:	bf54      	ite	pl
 8019a14:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019a18:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019a1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019a20:	fa5f f38c 	uxtb.w	r3, ip
 8019a24:	930d      	str	r3, [sp, #52]	; 0x34
 8019a26:	e780      	b.n	801992a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 8019a28:	b017      	add	sp, #92	; 0x5c
 8019a2a:	ecbd 8b08 	vpop	{d8-d11}
 8019a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a32:	bf00      	nop
 8019a34:	2000a09c 	.word	0x2000a09c

08019a38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8019a38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a3c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019a40:	2c00      	cmp	r4, #0
 8019a42:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019a46:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019a4a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019a4e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019a52:	fb04 ce03 	mla	lr, r4, r3, ip
 8019a56:	db60      	blt.n	8019b1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019a58:	45a1      	cmp	r9, r4
 8019a5a:	dd5e      	ble.n	8019b1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019a5c:	f1bc 0f00 	cmp.w	ip, #0
 8019a60:	db59      	blt.n	8019b16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019a62:	45e0      	cmp	r8, ip
 8019a64:	dd57      	ble.n	8019b16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019a66:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019a6a:	f01e 0f01 	tst.w	lr, #1
 8019a6e:	5c16      	ldrb	r6, [r2, r0]
 8019a70:	bf0c      	ite	eq
 8019a72:	f006 060f 	andeq.w	r6, r6, #15
 8019a76:	1136      	asrne	r6, r6, #4
 8019a78:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019a7c:	b2f6      	uxtb	r6, r6
 8019a7e:	f11c 0001 	adds.w	r0, ip, #1
 8019a82:	d44d      	bmi.n	8019b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019a84:	4580      	cmp	r8, r0
 8019a86:	dd4b      	ble.n	8019b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019a88:	2d00      	cmp	r5, #0
 8019a8a:	d04b      	beq.n	8019b24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019a8c:	f10e 0a01 	add.w	sl, lr, #1
 8019a90:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019a94:	f01a 0f01 	tst.w	sl, #1
 8019a98:	5c10      	ldrb	r0, [r2, r0]
 8019a9a:	bf0c      	ite	eq
 8019a9c:	f000 000f 	andeq.w	r0, r0, #15
 8019aa0:	1100      	asrne	r0, r0, #4
 8019aa2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019aa6:	b2c0      	uxtb	r0, r0
 8019aa8:	3401      	adds	r4, #1
 8019aaa:	d43f      	bmi.n	8019b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019aac:	45a1      	cmp	r9, r4
 8019aae:	dd3d      	ble.n	8019b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019ab0:	2f00      	cmp	r7, #0
 8019ab2:	f000 8093 	beq.w	8019bdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8019ab6:	f1bc 0f00 	cmp.w	ip, #0
 8019aba:	db35      	blt.n	8019b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019abc:	45e0      	cmp	r8, ip
 8019abe:	dd33      	ble.n	8019b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019ac0:	eb03 090e 	add.w	r9, r3, lr
 8019ac4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019ac8:	f019 0f01 	tst.w	r9, #1
 8019acc:	5d14      	ldrb	r4, [r2, r4]
 8019ace:	bf0c      	ite	eq
 8019ad0:	f004 040f 	andeq.w	r4, r4, #15
 8019ad4:	1124      	asrne	r4, r4, #4
 8019ad6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019ada:	b2e4      	uxtb	r4, r4
 8019adc:	f11c 0c01 	adds.w	ip, ip, #1
 8019ae0:	d427      	bmi.n	8019b32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019ae2:	45e0      	cmp	r8, ip
 8019ae4:	dd25      	ble.n	8019b32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019ae6:	b335      	cbz	r5, 8019b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8019ae8:	3301      	adds	r3, #1
 8019aea:	449e      	add	lr, r3
 8019aec:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019af0:	f01e 0f01 	tst.w	lr, #1
 8019af4:	5cd2      	ldrb	r2, [r2, r3]
 8019af6:	bf0c      	ite	eq
 8019af8:	f002 020f 	andeq.w	r2, r2, #15
 8019afc:	1112      	asrne	r2, r2, #4
 8019afe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019b02:	b2d3      	uxtb	r3, r2
 8019b04:	2d0f      	cmp	r5, #15
 8019b06:	d917      	bls.n	8019b38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8019b08:	4b37      	ldr	r3, [pc, #220]	; (8019be8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8019b0a:	4a38      	ldr	r2, [pc, #224]	; (8019bec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8019b0c:	4838      	ldr	r0, [pc, #224]	; (8019bf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8019b0e:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8019b12:	f000 fc51 	bl	801a3b8 <__assert_func>
 8019b16:	2600      	movs	r6, #0
 8019b18:	e7b1      	b.n	8019a7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8019b1a:	2000      	movs	r0, #0
 8019b1c:	4606      	mov	r6, r0
 8019b1e:	e7c3      	b.n	8019aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019b20:	2000      	movs	r0, #0
 8019b22:	e7c1      	b.n	8019aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019b24:	4628      	mov	r0, r5
 8019b26:	e7bf      	b.n	8019aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019b28:	2400      	movs	r4, #0
 8019b2a:	e7d7      	b.n	8019adc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8019b2c:	2300      	movs	r3, #0
 8019b2e:	461c      	mov	r4, r3
 8019b30:	e7e8      	b.n	8019b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019b32:	2300      	movs	r3, #0
 8019b34:	e7e6      	b.n	8019b04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019b36:	462b      	mov	r3, r5
 8019b38:	2f0f      	cmp	r7, #15
 8019b3a:	d8e5      	bhi.n	8019b08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019b3c:	b2ad      	uxth	r5, r5
 8019b3e:	b2bf      	uxth	r7, r7
 8019b40:	fb05 fc07 	mul.w	ip, r5, r7
 8019b44:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019b48:	012d      	lsls	r5, r5, #4
 8019b4a:	b2bf      	uxth	r7, r7
 8019b4c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019b50:	eba5 050c 	sub.w	r5, r5, ip
 8019b54:	1bd2      	subs	r2, r2, r7
 8019b56:	b2ad      	uxth	r5, r5
 8019b58:	b292      	uxth	r2, r2
 8019b5a:	4368      	muls	r0, r5
 8019b5c:	fb06 0002 	mla	r0, r6, r2, r0
 8019b60:	fb07 0404 	mla	r4, r7, r4, r0
 8019b64:	fb0c 4303 	mla	r3, ip, r3, r4
 8019b68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019b6c:	b3a3      	cbz	r3, 8019bd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8019b6e:	4a21      	ldr	r2, [pc, #132]	; (8019bf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8019b70:	880e      	ldrh	r6, [r1, #0]
 8019b72:	6815      	ldr	r5, [r2, #0]
 8019b74:	1234      	asrs	r4, r6, #8
 8019b76:	b29a      	uxth	r2, r3
 8019b78:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8019b7c:	43db      	mvns	r3, r3
 8019b7e:	b2db      	uxtb	r3, r3
 8019b80:	fb10 f002 	smulbb	r0, r0, r2
 8019b84:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019b88:	fb04 0403 	mla	r4, r4, r3, r0
 8019b8c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8019b90:	10f0      	asrs	r0, r6, #3
 8019b92:	b2ed      	uxtb	r5, r5
 8019b94:	00f6      	lsls	r6, r6, #3
 8019b96:	fb17 f702 	smulbb	r7, r7, r2
 8019b9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019b9e:	fb15 f202 	smulbb	r2, r5, r2
 8019ba2:	b2f6      	uxtb	r6, r6
 8019ba4:	b2a4      	uxth	r4, r4
 8019ba6:	fb00 7003 	mla	r0, r0, r3, r7
 8019baa:	fb06 2303 	mla	r3, r6, r3, r2
 8019bae:	b29a      	uxth	r2, r3
 8019bb0:	1c63      	adds	r3, r4, #1
 8019bb2:	b280      	uxth	r0, r0
 8019bb4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019bb8:	1c53      	adds	r3, r2, #1
 8019bba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019bbe:	1c42      	adds	r2, r0, #1
 8019bc0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019bc4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019bc8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019bcc:	0940      	lsrs	r0, r0, #5
 8019bce:	4323      	orrs	r3, r4
 8019bd0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019bd4:	4303      	orrs	r3, r0
 8019bd6:	800b      	strh	r3, [r1, #0]
 8019bd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019bdc:	2d0f      	cmp	r5, #15
 8019bde:	d893      	bhi.n	8019b08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019be0:	463b      	mov	r3, r7
 8019be2:	463c      	mov	r4, r7
 8019be4:	e7aa      	b.n	8019b3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8019be6:	bf00      	nop
 8019be8:	0801de7e 	.word	0x0801de7e
 8019bec:	0801e44a 	.word	0x0801e44a
 8019bf0:	0801df02 	.word	0x0801df02
 8019bf4:	2000a09c 	.word	0x2000a09c

08019bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bfc:	ed2d 8b08 	vpush	{d8-d11}
 8019c00:	b093      	sub	sp, #76	; 0x4c
 8019c02:	461d      	mov	r5, r3
 8019c04:	920c      	str	r2, [sp, #48]	; 0x30
 8019c06:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019c08:	9107      	str	r1, [sp, #28]
 8019c0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8019c0e:	9011      	str	r0, [sp, #68]	; 0x44
 8019c10:	6850      	ldr	r0, [r2, #4]
 8019c12:	6812      	ldr	r2, [r2, #0]
 8019c14:	fb00 1303 	mla	r3, r0, r3, r1
 8019c18:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019c1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019c1e:	689b      	ldr	r3, [r3, #8]
 8019c20:	3301      	adds	r3, #1
 8019c22:	f023 0301 	bic.w	r3, r3, #1
 8019c26:	9306      	str	r3, [sp, #24]
 8019c28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019c2a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8019c2e:	681f      	ldr	r7, [r3, #0]
 8019c30:	eeb0 aa40 	vmov.f32	s20, s0
 8019c34:	eef0 9a60 	vmov.f32	s19, s1
 8019c38:	eeb0 9a41 	vmov.f32	s18, s2
 8019c3c:	eeb0 8a62 	vmov.f32	s16, s5
 8019c40:	eef0 8a43 	vmov.f32	s17, s6
 8019c44:	eef0 ba44 	vmov.f32	s23, s8
 8019c48:	eeb0 ba64 	vmov.f32	s22, s9
 8019c4c:	eef0 aa45 	vmov.f32	s21, s10
 8019c50:	9b07      	ldr	r3, [sp, #28]
 8019c52:	2b00      	cmp	r3, #0
 8019c54:	dc03      	bgt.n	8019c5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c58:	2b00      	cmp	r3, #0
 8019c5a:	f340 8267 	ble.w	801a12c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8019c5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019c60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c68:	1e48      	subs	r0, r1, #1
 8019c6a:	f102 3cff 	add.w	ip, r2, #4294967295
 8019c6e:	2d00      	cmp	r5, #0
 8019c70:	f340 80eb 	ble.w	8019e4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019c74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019c78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c7c:	d406      	bmi.n	8019c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c7e:	4586      	cmp	lr, r0
 8019c80:	da04      	bge.n	8019c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c82:	2b00      	cmp	r3, #0
 8019c84:	db02      	blt.n	8019c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c86:	4563      	cmp	r3, ip
 8019c88:	f2c0 80e0 	blt.w	8019e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019c8c:	f11e 0e01 	adds.w	lr, lr, #1
 8019c90:	f100 80d3 	bmi.w	8019e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019c94:	4571      	cmp	r1, lr
 8019c96:	f2c0 80d0 	blt.w	8019e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019c9a:	3301      	adds	r3, #1
 8019c9c:	f100 80cd 	bmi.w	8019e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019ca0:	429a      	cmp	r2, r3
 8019ca2:	f2c0 80ca 	blt.w	8019e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019ca6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8019caa:	9509      	str	r5, [sp, #36]	; 0x24
 8019cac:	46c8      	mov	r8, r9
 8019cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019cb0:	2b00      	cmp	r3, #0
 8019cb2:	f340 80e9 	ble.w	8019e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019cb6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019cba:	9308      	str	r3, [sp, #32]
 8019cbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019cbe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019cc2:	1423      	asrs	r3, r4, #16
 8019cc4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019cc8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019ccc:	f100 813d 	bmi.w	8019f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019cd0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8019cd4:	455b      	cmp	r3, fp
 8019cd6:	f280 8138 	bge.w	8019f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019cda:	2800      	cmp	r0, #0
 8019cdc:	f2c0 8135 	blt.w	8019f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019ce0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019ce4:	4558      	cmp	r0, fp
 8019ce6:	f280 8130 	bge.w	8019f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8019cea:	9a06      	ldr	r2, [sp, #24]
 8019cec:	fb00 3302 	mla	r3, r0, r2, r3
 8019cf0:	0858      	lsrs	r0, r3, #1
 8019cf2:	07da      	lsls	r2, r3, #31
 8019cf4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019cf8:	9a08      	ldr	r2, [sp, #32]
 8019cfa:	bf54      	ite	pl
 8019cfc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019d00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019d04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019d08:	fa5f fc8c 	uxtb.w	ip, ip
 8019d0c:	2a00      	cmp	r2, #0
 8019d0e:	f000 80fe 	beq.w	8019f0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8019d12:	1c58      	adds	r0, r3, #1
 8019d14:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019d18:	07c0      	lsls	r0, r0, #31
 8019d1a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019d1e:	bf54      	ite	pl
 8019d20:	f00e 0e0f 	andpl.w	lr, lr, #15
 8019d24:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8019d28:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8019d2c:	fa5f fe8e 	uxtb.w	lr, lr
 8019d30:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8019d34:	b1b9      	cbz	r1, 8019d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019d36:	4453      	add	r3, sl
 8019d38:	0858      	lsrs	r0, r3, #1
 8019d3a:	07da      	lsls	r2, r3, #31
 8019d3c:	5c38      	ldrb	r0, [r7, r0]
 8019d3e:	bf54      	ite	pl
 8019d40:	f000 000f 	andpl.w	r0, r0, #15
 8019d44:	1100      	asrmi	r0, r0, #4
 8019d46:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019d4a:	b2c0      	uxtb	r0, r0
 8019d4c:	900a      	str	r0, [sp, #40]	; 0x28
 8019d4e:	1c58      	adds	r0, r3, #1
 8019d50:	0843      	lsrs	r3, r0, #1
 8019d52:	07c2      	lsls	r2, r0, #31
 8019d54:	5cfb      	ldrb	r3, [r7, r3]
 8019d56:	bf54      	ite	pl
 8019d58:	f003 030f 	andpl.w	r3, r3, #15
 8019d5c:	111b      	asrmi	r3, r3, #4
 8019d5e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019d62:	b2db      	uxtb	r3, r3
 8019d64:	930e      	str	r3, [sp, #56]	; 0x38
 8019d66:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019d6a:	b289      	uxth	r1, r1
 8019d6c:	fb02 f301 	mul.w	r3, r2, r1
 8019d70:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019d74:	0112      	lsls	r2, r2, #4
 8019d76:	b289      	uxth	r1, r1
 8019d78:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8019d7c:	1a40      	subs	r0, r0, r1
 8019d7e:	fa1f fe80 	uxth.w	lr, r0
 8019d82:	1ad2      	subs	r2, r2, r3
 8019d84:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019d86:	b292      	uxth	r2, r2
 8019d88:	4342      	muls	r2, r0
 8019d8a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8019d8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019d90:	fb01 c102 	mla	r1, r1, r2, ip
 8019d94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019d96:	fb03 1302 	mla	r3, r3, r2, r1
 8019d9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019d9e:	2b00      	cmp	r3, #0
 8019da0:	d041      	beq.n	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019da2:	4a7a      	ldr	r2, [pc, #488]	; (8019f8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 8019da4:	6810      	ldr	r0, [r2, #0]
 8019da6:	2bff      	cmp	r3, #255	; 0xff
 8019da8:	ea4f 4210 	mov.w	r2, r0, lsr #16
 8019dac:	ea4f 2110 	mov.w	r1, r0, lsr #8
 8019db0:	fa5f fe80 	uxtb.w	lr, r0
 8019db4:	f000 80bc 	beq.w	8019f30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8019db8:	f8b8 c000 	ldrh.w	ip, [r8]
 8019dbc:	fa1f fb83 	uxth.w	fp, r3
 8019dc0:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019dc4:	43db      	mvns	r3, r3
 8019dc6:	b2d2      	uxtb	r2, r2
 8019dc8:	b2db      	uxtb	r3, r3
 8019dca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019dce:	fb12 f20b 	smulbb	r2, r2, fp
 8019dd2:	fb00 2203 	mla	r2, r0, r3, r2
 8019dd6:	b2c9      	uxtb	r1, r1
 8019dd8:	ea4f 00ec 	mov.w	r0, ip, asr #3
 8019ddc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019de0:	b292      	uxth	r2, r2
 8019de2:	fb11 f10b 	smulbb	r1, r1, fp
 8019de6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019dea:	fa5f fc8c 	uxtb.w	ip, ip
 8019dee:	fb1e fe0b 	smulbb	lr, lr, fp
 8019df2:	fb00 1003 	mla	r0, r0, r3, r1
 8019df6:	1c51      	adds	r1, r2, #1
 8019df8:	fb0c e303 	mla	r3, ip, r3, lr
 8019dfc:	b29b      	uxth	r3, r3
 8019dfe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019e02:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 8019e06:	1c5a      	adds	r2, r3, #1
 8019e08:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019e0c:	b280      	uxth	r0, r0
 8019e0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019e12:	430a      	orrs	r2, r1
 8019e14:	1c41      	adds	r1, r0, #1
 8019e16:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019e1a:	0940      	lsrs	r0, r0, #5
 8019e1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019e20:	4302      	orrs	r2, r0
 8019e22:	f8a8 2000 	strh.w	r2, [r8]
 8019e26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019e28:	441c      	add	r4, r3
 8019e2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e2c:	441e      	add	r6, r3
 8019e2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e30:	3b01      	subs	r3, #1
 8019e32:	f108 0802 	add.w	r8, r8, #2
 8019e36:	9309      	str	r3, [sp, #36]	; 0x24
 8019e38:	e739      	b.n	8019cae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019e3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019e3c:	441c      	add	r4, r3
 8019e3e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e40:	3d01      	subs	r5, #1
 8019e42:	441e      	add	r6, r3
 8019e44:	f109 0902 	add.w	r9, r9, #2
 8019e48:	e711      	b.n	8019c6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019e4a:	d021      	beq.n	8019e90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8019e4c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8019e4e:	1e6b      	subs	r3, r5, #1
 8019e50:	fb00 4003 	mla	r0, r0, r3, r4
 8019e54:	1400      	asrs	r0, r0, #16
 8019e56:	f53f af26 	bmi.w	8019ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019e5a:	3901      	subs	r1, #1
 8019e5c:	4288      	cmp	r0, r1
 8019e5e:	f6bf af22 	bge.w	8019ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019e62:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019e64:	fb01 6303 	mla	r3, r1, r3, r6
 8019e68:	141b      	asrs	r3, r3, #16
 8019e6a:	f53f af1c 	bmi.w	8019ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019e6e:	3a01      	subs	r2, #1
 8019e70:	4293      	cmp	r3, r2
 8019e72:	f6bf af18 	bge.w	8019ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019e76:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019e7a:	9308      	str	r3, [sp, #32]
 8019e7c:	46aa      	mov	sl, r5
 8019e7e:	46c8      	mov	r8, r9
 8019e80:	f1ba 0f00 	cmp.w	sl, #0
 8019e84:	f300 8086 	bgt.w	8019f94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8019e88:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019e8c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019e90:	9b07      	ldr	r3, [sp, #28]
 8019e92:	2b00      	cmp	r3, #0
 8019e94:	f340 814a 	ble.w	801a12c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8019e98:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019e9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ea0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019ea4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ea6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019eaa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019eae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019eb2:	eef0 6a48 	vmov.f32	s13, s16
 8019eb6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019eba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ebe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019ec2:	ee16 4a90 	vmov	r4, s13
 8019ec6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019eca:	eef0 6a68 	vmov.f32	s13, s17
 8019ece:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019ed2:	ee18 2a10 	vmov	r2, s16
 8019ed6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019eda:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ede:	ee18 2a90 	vmov	r2, s17
 8019ee2:	9327      	str	r3, [sp, #156]	; 0x9c
 8019ee4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ee6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eea:	9328      	str	r3, [sp, #160]	; 0xa0
 8019eec:	9b07      	ldr	r3, [sp, #28]
 8019eee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019ef0:	3b01      	subs	r3, #1
 8019ef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ef6:	9307      	str	r3, [sp, #28]
 8019ef8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019efa:	ee16 6a90 	vmov	r6, s13
 8019efe:	bf14      	ite	ne
 8019f00:	461d      	movne	r5, r3
 8019f02:	4615      	moveq	r5, r2
 8019f04:	eef0 8a67 	vmov.f32	s17, s15
 8019f08:	eeb0 8a47 	vmov.f32	s16, s14
 8019f0c:	e6a0      	b.n	8019c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019f0e:	2900      	cmp	r1, #0
 8019f10:	f43f af29 	beq.w	8019d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019f14:	eb0a 0003 	add.w	r0, sl, r3
 8019f18:	0843      	lsrs	r3, r0, #1
 8019f1a:	07c0      	lsls	r0, r0, #31
 8019f1c:	5cfb      	ldrb	r3, [r7, r3]
 8019f1e:	bf54      	ite	pl
 8019f20:	f003 030f 	andpl.w	r3, r3, #15
 8019f24:	111b      	asrmi	r3, r3, #4
 8019f26:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019f2a:	b2db      	uxtb	r3, r3
 8019f2c:	930a      	str	r3, [sp, #40]	; 0x28
 8019f2e:	e71a      	b.n	8019d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019f30:	4b17      	ldr	r3, [pc, #92]	; (8019f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 8019f32:	00c9      	lsls	r1, r1, #3
 8019f34:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8019f38:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 8019f3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019f40:	ea4e 0e01 	orr.w	lr, lr, r1
 8019f44:	f8a8 e000 	strh.w	lr, [r8]
 8019f48:	e76d      	b.n	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f4a:	f113 0b01 	adds.w	fp, r3, #1
 8019f4e:	f53f af6a 	bmi.w	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f52:	45dc      	cmp	ip, fp
 8019f54:	f6ff af67 	blt.w	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f58:	f110 0b01 	adds.w	fp, r0, #1
 8019f5c:	f53f af63 	bmi.w	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f60:	45de      	cmp	lr, fp
 8019f62:	f6ff af60 	blt.w	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f66:	9a08      	ldr	r2, [sp, #32]
 8019f68:	9302      	str	r3, [sp, #8]
 8019f6a:	fa0f f38e 	sxth.w	r3, lr
 8019f6e:	9301      	str	r3, [sp, #4]
 8019f70:	fa0f f38c 	sxth.w	r3, ip
 8019f74:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019f78:	9105      	str	r1, [sp, #20]
 8019f7a:	9300      	str	r3, [sp, #0]
 8019f7c:	463a      	mov	r2, r7
 8019f7e:	4653      	mov	r3, sl
 8019f80:	4641      	mov	r1, r8
 8019f82:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f84:	f7ff fd58 	bl	8019a38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019f88:	e74d      	b.n	8019e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019f8a:	bf00      	nop
 8019f8c:	2000a09c 	.word	0x2000a09c
 8019f90:	fffff800 	.word	0xfffff800
 8019f94:	9906      	ldr	r1, [sp, #24]
 8019f96:	1422      	asrs	r2, r4, #16
 8019f98:	1433      	asrs	r3, r6, #16
 8019f9a:	fb01 2303 	mla	r3, r1, r3, r2
 8019f9e:	085a      	lsrs	r2, r3, #1
 8019fa0:	07d9      	lsls	r1, r3, #31
 8019fa2:	5cba      	ldrb	r2, [r7, r2]
 8019fa4:	bf54      	ite	pl
 8019fa6:	f002 020f 	andpl.w	r2, r2, #15
 8019faa:	1112      	asrmi	r2, r2, #4
 8019fac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019fb0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019fb4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019fb8:	b2d2      	uxtb	r2, r2
 8019fba:	2800      	cmp	r0, #0
 8019fbc:	f000 8098 	beq.w	801a0f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 8019fc0:	f103 0e01 	add.w	lr, r3, #1
 8019fc4:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8019fc8:	f01e 0f01 	tst.w	lr, #1
 8019fcc:	5c79      	ldrb	r1, [r7, r1]
 8019fce:	bf0c      	ite	eq
 8019fd0:	f001 010f 	andeq.w	r1, r1, #15
 8019fd4:	1109      	asrne	r1, r1, #4
 8019fd6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019fda:	b2c9      	uxtb	r1, r1
 8019fdc:	910f      	str	r1, [sp, #60]	; 0x3c
 8019fde:	f1bc 0f00 	cmp.w	ip, #0
 8019fe2:	d019      	beq.n	801a018 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8019fe4:	9908      	ldr	r1, [sp, #32]
 8019fe6:	440b      	add	r3, r1
 8019fe8:	0859      	lsrs	r1, r3, #1
 8019fea:	f013 0f01 	tst.w	r3, #1
 8019fee:	5c79      	ldrb	r1, [r7, r1]
 8019ff0:	bf0c      	ite	eq
 8019ff2:	f001 010f 	andeq.w	r1, r1, #15
 8019ff6:	1109      	asrne	r1, r1, #4
 8019ff8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019ffc:	b2c9      	uxtb	r1, r1
 8019ffe:	3301      	adds	r3, #1
 801a000:	910b      	str	r1, [sp, #44]	; 0x2c
 801a002:	0859      	lsrs	r1, r3, #1
 801a004:	07db      	lsls	r3, r3, #31
 801a006:	5c79      	ldrb	r1, [r7, r1]
 801a008:	bf54      	ite	pl
 801a00a:	f001 010f 	andpl.w	r1, r1, #15
 801a00e:	1109      	asrmi	r1, r1, #4
 801a010:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a014:	b2c9      	uxtb	r1, r1
 801a016:	9110      	str	r1, [sp, #64]	; 0x40
 801a018:	b280      	uxth	r0, r0
 801a01a:	fa1f fc8c 	uxth.w	ip, ip
 801a01e:	fb00 f30c 	mul.w	r3, r0, ip
 801a022:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a026:	0100      	lsls	r0, r0, #4
 801a028:	fa1f fc8c 	uxth.w	ip, ip
 801a02c:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a030:	eba1 010c 	sub.w	r1, r1, ip
 801a034:	fa1f fe81 	uxth.w	lr, r1
 801a038:	1ac0      	subs	r0, r0, r3
 801a03a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a03c:	b280      	uxth	r0, r0
 801a03e:	4348      	muls	r0, r1
 801a040:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a042:	fb02 020e 	mla	r2, r2, lr, r0
 801a046:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a04a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a04c:	fb03 c302 	mla	r3, r3, r2, ip
 801a050:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a054:	2b00      	cmp	r3, #0
 801a056:	d042      	beq.n	801a0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a058:	4a37      	ldr	r2, [pc, #220]	; (801a138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801a05a:	6810      	ldr	r0, [r2, #0]
 801a05c:	2bff      	cmp	r3, #255	; 0xff
 801a05e:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801a062:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801a066:	fa5f fe80 	uxtb.w	lr, r0
 801a06a:	d052      	beq.n	801a112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801a06c:	f8b8 c000 	ldrh.w	ip, [r8]
 801a070:	fa1f fb83 	uxth.w	fp, r3
 801a074:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a078:	43db      	mvns	r3, r3
 801a07a:	b2d2      	uxtb	r2, r2
 801a07c:	b2db      	uxtb	r3, r3
 801a07e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a082:	fb12 f20b 	smulbb	r2, r2, fp
 801a086:	fb00 2203 	mla	r2, r0, r3, r2
 801a08a:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801a08e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a092:	fa5f fc8c 	uxtb.w	ip, ip
 801a096:	fb1e fe0b 	smulbb	lr, lr, fp
 801a09a:	fb0c ee03 	mla	lr, ip, r3, lr
 801a09e:	b2c9      	uxtb	r1, r1
 801a0a0:	b292      	uxth	r2, r2
 801a0a2:	fb11 f10b 	smulbb	r1, r1, fp
 801a0a6:	fa1f fe8e 	uxth.w	lr, lr
 801a0aa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a0ae:	fb00 1003 	mla	r0, r0, r3, r1
 801a0b2:	1c53      	adds	r3, r2, #1
 801a0b4:	f10e 0101 	add.w	r1, lr, #1
 801a0b8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a0bc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a0c0:	b280      	uxth	r0, r0
 801a0c2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a0c6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a0ca:	430a      	orrs	r2, r1
 801a0cc:	1c41      	adds	r1, r0, #1
 801a0ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a0d2:	0940      	lsrs	r0, r0, #5
 801a0d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a0d8:	4302      	orrs	r2, r0
 801a0da:	f8a8 2000 	strh.w	r2, [r8]
 801a0de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a0e0:	441c      	add	r4, r3
 801a0e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a0e4:	f108 0802 	add.w	r8, r8, #2
 801a0e8:	441e      	add	r6, r3
 801a0ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a0ee:	e6c7      	b.n	8019e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a0f0:	f1bc 0f00 	cmp.w	ip, #0
 801a0f4:	d090      	beq.n	801a018 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801a0f6:	9908      	ldr	r1, [sp, #32]
 801a0f8:	440b      	add	r3, r1
 801a0fa:	0859      	lsrs	r1, r3, #1
 801a0fc:	07db      	lsls	r3, r3, #31
 801a0fe:	5c79      	ldrb	r1, [r7, r1]
 801a100:	bf54      	ite	pl
 801a102:	f001 010f 	andpl.w	r1, r1, #15
 801a106:	1109      	asrmi	r1, r1, #4
 801a108:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a10c:	b2c9      	uxtb	r1, r1
 801a10e:	910b      	str	r1, [sp, #44]	; 0x2c
 801a110:	e782      	b.n	801a018 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801a112:	4b0a      	ldr	r3, [pc, #40]	; (801a13c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801a114:	00c9      	lsls	r1, r1, #3
 801a116:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801a11a:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801a11e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a122:	ea4e 0e01 	orr.w	lr, lr, r1
 801a126:	f8a8 e000 	strh.w	lr, [r8]
 801a12a:	e7d8      	b.n	801a0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a12c:	b013      	add	sp, #76	; 0x4c
 801a12e:	ecbd 8b08 	vpop	{d8-d11}
 801a132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a136:	bf00      	nop
 801a138:	2000a09c 	.word	0x2000a09c
 801a13c:	fffff800 	.word	0xfffff800

0801a140 <CRC_Lock>:
 801a140:	b530      	push	{r4, r5, lr}
 801a142:	4a20      	ldr	r2, [pc, #128]	; (801a1c4 <CRC_Lock+0x84>)
 801a144:	6813      	ldr	r3, [r2, #0]
 801a146:	f023 0301 	bic.w	r3, r3, #1
 801a14a:	6013      	str	r3, [r2, #0]
 801a14c:	4b1e      	ldr	r3, [pc, #120]	; (801a1c8 <CRC_Lock+0x88>)
 801a14e:	681a      	ldr	r2, [r3, #0]
 801a150:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a154:	4022      	ands	r2, r4
 801a156:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a15a:	42aa      	cmp	r2, r5
 801a15c:	d005      	beq.n	801a16a <CRC_Lock+0x2a>
 801a15e:	681b      	ldr	r3, [r3, #0]
 801a160:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a164:	4023      	ands	r3, r4
 801a166:	4293      	cmp	r3, r2
 801a168:	d124      	bne.n	801a1b4 <CRC_Lock+0x74>
 801a16a:	4b18      	ldr	r3, [pc, #96]	; (801a1cc <CRC_Lock+0x8c>)
 801a16c:	681b      	ldr	r3, [r3, #0]
 801a16e:	bb0b      	cbnz	r3, 801a1b4 <CRC_Lock+0x74>
 801a170:	4b17      	ldr	r3, [pc, #92]	; (801a1d0 <CRC_Lock+0x90>)
 801a172:	681a      	ldr	r2, [r3, #0]
 801a174:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801a178:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801a17c:	d00d      	beq.n	801a19a <CRC_Lock+0x5a>
 801a17e:	681a      	ldr	r2, [r3, #0]
 801a180:	f240 4483 	movw	r4, #1155	; 0x483
 801a184:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801a188:	42a2      	cmp	r2, r4
 801a18a:	d006      	beq.n	801a19a <CRC_Lock+0x5a>
 801a18c:	681b      	ldr	r3, [r3, #0]
 801a18e:	f240 4285 	movw	r2, #1157	; 0x485
 801a192:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a196:	4293      	cmp	r3, r2
 801a198:	d10c      	bne.n	801a1b4 <CRC_Lock+0x74>
 801a19a:	4b0e      	ldr	r3, [pc, #56]	; (801a1d4 <CRC_Lock+0x94>)
 801a19c:	2201      	movs	r2, #1
 801a19e:	601a      	str	r2, [r3, #0]
 801a1a0:	681a      	ldr	r2, [r3, #0]
 801a1a2:	2a00      	cmp	r2, #0
 801a1a4:	d1fc      	bne.n	801a1a0 <CRC_Lock+0x60>
 801a1a6:	4b0c      	ldr	r3, [pc, #48]	; (801a1d8 <CRC_Lock+0x98>)
 801a1a8:	6018      	str	r0, [r3, #0]
 801a1aa:	6818      	ldr	r0, [r3, #0]
 801a1ac:	1a43      	subs	r3, r0, r1
 801a1ae:	4258      	negs	r0, r3
 801a1b0:	4158      	adcs	r0, r3
 801a1b2:	bd30      	pop	{r4, r5, pc}
 801a1b4:	4b09      	ldr	r3, [pc, #36]	; (801a1dc <CRC_Lock+0x9c>)
 801a1b6:	2201      	movs	r2, #1
 801a1b8:	601a      	str	r2, [r3, #0]
 801a1ba:	681a      	ldr	r2, [r3, #0]
 801a1bc:	2a00      	cmp	r2, #0
 801a1be:	d1fc      	bne.n	801a1ba <CRC_Lock+0x7a>
 801a1c0:	4b07      	ldr	r3, [pc, #28]	; (801a1e0 <CRC_Lock+0xa0>)
 801a1c2:	e7f1      	b.n	801a1a8 <CRC_Lock+0x68>
 801a1c4:	e0002000 	.word	0xe0002000
 801a1c8:	e000ed00 	.word	0xe000ed00
 801a1cc:	e0042000 	.word	0xe0042000
 801a1d0:	5c001000 	.word	0x5c001000
 801a1d4:	58024c08 	.word	0x58024c08
 801a1d8:	58024c00 	.word	0x58024c00
 801a1dc:	40023008 	.word	0x40023008
 801a1e0:	40023000 	.word	0x40023000

0801a1e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a1e4:	6101      	str	r1, [r0, #16]
 801a1e6:	4770      	bx	lr

0801a1e8 <_ZN8touchgfx8Gestures4tickEv>:
 801a1e8:	7b83      	ldrb	r3, [r0, #14]
 801a1ea:	b14b      	cbz	r3, 801a200 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a1ec:	8903      	ldrh	r3, [r0, #8]
 801a1ee:	3301      	adds	r3, #1
 801a1f0:	b29b      	uxth	r3, r3
 801a1f2:	2b07      	cmp	r3, #7
 801a1f4:	8103      	strh	r3, [r0, #8]
 801a1f6:	bf81      	itttt	hi
 801a1f8:	2300      	movhi	r3, #0
 801a1fa:	8143      	strhhi	r3, [r0, #10]
 801a1fc:	8183      	strhhi	r3, [r0, #12]
 801a1fe:	7383      	strbhi	r3, [r0, #14]
 801a200:	4770      	bx	lr
	...

0801a204 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a204:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a208:	4604      	mov	r4, r0
 801a20a:	8880      	ldrh	r0, [r0, #4]
 801a20c:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a210:	4698      	mov	r8, r3
 801a212:	eba8 0000 	sub.w	r0, r8, r0
 801a216:	4b1c      	ldr	r3, [pc, #112]	; (801a288 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a218:	9300      	str	r3, [sp, #0]
 801a21a:	b280      	uxth	r0, r0
 801a21c:	2300      	movs	r3, #0
 801a21e:	f88d 3004 	strb.w	r3, [sp, #4]
 801a222:	b203      	sxth	r3, r0
 801a224:	2b00      	cmp	r3, #0
 801a226:	bfb8      	it	lt
 801a228:	4240      	neglt	r0, r0
 801a22a:	4617      	mov	r7, r2
 801a22c:	8aa2      	ldrh	r2, [r4, #20]
 801a22e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a232:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a236:	bfb8      	it	lt
 801a238:	b203      	sxthlt	r3, r0
 801a23a:	460e      	mov	r6, r1
 801a23c:	4293      	cmp	r3, r2
 801a23e:	88e1      	ldrh	r1, [r4, #6]
 801a240:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a244:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a248:	dc08      	bgt.n	801a25c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a24a:	1a69      	subs	r1, r5, r1
 801a24c:	b289      	uxth	r1, r1
 801a24e:	b20b      	sxth	r3, r1
 801a250:	2b00      	cmp	r3, #0
 801a252:	bfbc      	itt	lt
 801a254:	4249      	neglt	r1, r1
 801a256:	b20b      	sxthlt	r3, r1
 801a258:	429a      	cmp	r2, r3
 801a25a:	da13      	bge.n	801a284 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801a25c:	6920      	ldr	r0, [r4, #16]
 801a25e:	6803      	ldr	r3, [r0, #0]
 801a260:	4669      	mov	r1, sp
 801a262:	685b      	ldr	r3, [r3, #4]
 801a264:	4798      	blx	r3
 801a266:	eba8 0606 	sub.w	r6, r8, r6
 801a26a:	2300      	movs	r3, #0
 801a26c:	1bef      	subs	r7, r5, r7
 801a26e:	2001      	movs	r0, #1
 801a270:	8123      	strh	r3, [r4, #8]
 801a272:	8166      	strh	r6, [r4, #10]
 801a274:	81a7      	strh	r7, [r4, #12]
 801a276:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a27a:	80e5      	strh	r5, [r4, #6]
 801a27c:	73a0      	strb	r0, [r4, #14]
 801a27e:	b004      	add	sp, #16
 801a280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a284:	2000      	movs	r0, #0
 801a286:	e7fa      	b.n	801a27e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801a288:	0801d314 	.word	0x0801d314

0801a28c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a28c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a28e:	461e      	mov	r6, r3
 801a290:	1e4b      	subs	r3, r1, #1
 801a292:	2b01      	cmp	r3, #1
 801a294:	b085      	sub	sp, #20
 801a296:	4604      	mov	r4, r0
 801a298:	460d      	mov	r5, r1
 801a29a:	4617      	mov	r7, r2
 801a29c:	d84b      	bhi.n	801a336 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a29e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a2a2:	1cd3      	adds	r3, r2, #3
 801a2a4:	b29b      	uxth	r3, r3
 801a2a6:	2b06      	cmp	r3, #6
 801a2a8:	d916      	bls.n	801a2d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a2aa:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801a34c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a2ae:	f8cd c004 	str.w	ip, [sp, #4]
 801a2b2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a2b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a2ba:	6900      	ldr	r0, [r0, #16]
 801a2bc:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a2c0:	f04f 0c00 	mov.w	ip, #0
 801a2c4:	f88d c008 	strb.w	ip, [sp, #8]
 801a2c8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a2cc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a2d0:	6803      	ldr	r3, [r0, #0]
 801a2d2:	a901      	add	r1, sp, #4
 801a2d4:	689b      	ldr	r3, [r3, #8]
 801a2d6:	4798      	blx	r3
 801a2d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a2dc:	1cd3      	adds	r3, r2, #3
 801a2de:	b29b      	uxth	r3, r3
 801a2e0:	2b06      	cmp	r3, #6
 801a2e2:	d916      	bls.n	801a312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a2e4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801a34c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a2e8:	f8cd c004 	str.w	ip, [sp, #4]
 801a2ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a2f0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a2f4:	6920      	ldr	r0, [r4, #16]
 801a2f6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a2fa:	f04f 0c01 	mov.w	ip, #1
 801a2fe:	f88d c008 	strb.w	ip, [sp, #8]
 801a302:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a306:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a30a:	6803      	ldr	r3, [r0, #0]
 801a30c:	a901      	add	r1, sp, #4
 801a30e:	689b      	ldr	r3, [r3, #8]
 801a310:	4798      	blx	r3
 801a312:	4b0d      	ldr	r3, [pc, #52]	; (801a348 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801a314:	9301      	str	r3, [sp, #4]
 801a316:	6920      	ldr	r0, [r4, #16]
 801a318:	f88d 5008 	strb.w	r5, [sp, #8]
 801a31c:	2300      	movs	r3, #0
 801a31e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a322:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a326:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a32a:	6803      	ldr	r3, [r0, #0]
 801a32c:	a901      	add	r1, sp, #4
 801a32e:	681b      	ldr	r3, [r3, #0]
 801a330:	4798      	blx	r3
 801a332:	b005      	add	sp, #20
 801a334:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a336:	2900      	cmp	r1, #0
 801a338:	d1eb      	bne.n	801a312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a33a:	80a2      	strh	r2, [r4, #4]
 801a33c:	80c6      	strh	r6, [r0, #6]
 801a33e:	60a1      	str	r1, [r4, #8]
 801a340:	81a1      	strh	r1, [r4, #12]
 801a342:	73a1      	strb	r1, [r4, #14]
 801a344:	e7e5      	b.n	801a312 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a346:	bf00      	nop
 801a348:	0801d300 	.word	0x0801d300
 801a34c:	0801d328 	.word	0x0801d328

0801a350 <__aeabi_atexit>:
 801a350:	460b      	mov	r3, r1
 801a352:	4601      	mov	r1, r0
 801a354:	4618      	mov	r0, r3
 801a356:	f000 b853 	b.w	801a400 <__cxa_atexit>

0801a35a <_ZdlPvj>:
 801a35a:	f000 b812 	b.w	801a382 <_ZdlPv>

0801a35e <__cxa_guard_acquire>:
 801a35e:	6803      	ldr	r3, [r0, #0]
 801a360:	07db      	lsls	r3, r3, #31
 801a362:	d406      	bmi.n	801a372 <__cxa_guard_acquire+0x14>
 801a364:	7843      	ldrb	r3, [r0, #1]
 801a366:	b103      	cbz	r3, 801a36a <__cxa_guard_acquire+0xc>
 801a368:	deff      	udf	#255	; 0xff
 801a36a:	2301      	movs	r3, #1
 801a36c:	7043      	strb	r3, [r0, #1]
 801a36e:	4618      	mov	r0, r3
 801a370:	4770      	bx	lr
 801a372:	2000      	movs	r0, #0
 801a374:	4770      	bx	lr

0801a376 <__cxa_guard_release>:
 801a376:	2301      	movs	r3, #1
 801a378:	6003      	str	r3, [r0, #0]
 801a37a:	4770      	bx	lr

0801a37c <__cxa_pure_virtual>:
 801a37c:	b508      	push	{r3, lr}
 801a37e:	f000 f80f 	bl	801a3a0 <_ZSt9terminatev>

0801a382 <_ZdlPv>:
 801a382:	f000 b88f 	b.w	801a4a4 <free>

0801a386 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a386:	b508      	push	{r3, lr}
 801a388:	4780      	blx	r0
 801a38a:	f000 f80e 	bl	801a3aa <abort>
	...

0801a390 <_ZSt13get_terminatev>:
 801a390:	4b02      	ldr	r3, [pc, #8]	; (801a39c <_ZSt13get_terminatev+0xc>)
 801a392:	6818      	ldr	r0, [r3, #0]
 801a394:	f3bf 8f5b 	dmb	ish
 801a398:	4770      	bx	lr
 801a39a:	bf00      	nop
 801a39c:	200000d4 	.word	0x200000d4

0801a3a0 <_ZSt9terminatev>:
 801a3a0:	b508      	push	{r3, lr}
 801a3a2:	f7ff fff5 	bl	801a390 <_ZSt13get_terminatev>
 801a3a6:	f7ff ffee 	bl	801a386 <_ZN10__cxxabiv111__terminateEPFvvE>

0801a3aa <abort>:
 801a3aa:	b508      	push	{r3, lr}
 801a3ac:	2006      	movs	r0, #6
 801a3ae:	f000 fc67 	bl	801ac80 <raise>
 801a3b2:	2001      	movs	r0, #1
 801a3b4:	f7e7 fda2 	bl	8001efc <_exit>

0801a3b8 <__assert_func>:
 801a3b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a3ba:	4614      	mov	r4, r2
 801a3bc:	461a      	mov	r2, r3
 801a3be:	4b09      	ldr	r3, [pc, #36]	; (801a3e4 <__assert_func+0x2c>)
 801a3c0:	681b      	ldr	r3, [r3, #0]
 801a3c2:	4605      	mov	r5, r0
 801a3c4:	68d8      	ldr	r0, [r3, #12]
 801a3c6:	b14c      	cbz	r4, 801a3dc <__assert_func+0x24>
 801a3c8:	4b07      	ldr	r3, [pc, #28]	; (801a3e8 <__assert_func+0x30>)
 801a3ca:	9100      	str	r1, [sp, #0]
 801a3cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801a3d0:	4906      	ldr	r1, [pc, #24]	; (801a3ec <__assert_func+0x34>)
 801a3d2:	462b      	mov	r3, r5
 801a3d4:	f000 f828 	bl	801a428 <fiprintf>
 801a3d8:	f7ff ffe7 	bl	801a3aa <abort>
 801a3dc:	4b04      	ldr	r3, [pc, #16]	; (801a3f0 <__assert_func+0x38>)
 801a3de:	461c      	mov	r4, r3
 801a3e0:	e7f3      	b.n	801a3ca <__assert_func+0x12>
 801a3e2:	bf00      	nop
 801a3e4:	200000d8 	.word	0x200000d8
 801a3e8:	0801e685 	.word	0x0801e685
 801a3ec:	0801e692 	.word	0x0801e692
 801a3f0:	0801e6c0 	.word	0x0801e6c0

0801a3f4 <atexit>:
 801a3f4:	2300      	movs	r3, #0
 801a3f6:	4601      	mov	r1, r0
 801a3f8:	461a      	mov	r2, r3
 801a3fa:	4618      	mov	r0, r3
 801a3fc:	f000 bd1c 	b.w	801ae38 <__register_exitproc>

0801a400 <__cxa_atexit>:
 801a400:	b510      	push	{r4, lr}
 801a402:	4c05      	ldr	r4, [pc, #20]	; (801a418 <__cxa_atexit+0x18>)
 801a404:	4613      	mov	r3, r2
 801a406:	b12c      	cbz	r4, 801a414 <__cxa_atexit+0x14>
 801a408:	460a      	mov	r2, r1
 801a40a:	4601      	mov	r1, r0
 801a40c:	2002      	movs	r0, #2
 801a40e:	f000 fd13 	bl	801ae38 <__register_exitproc>
 801a412:	bd10      	pop	{r4, pc}
 801a414:	4620      	mov	r0, r4
 801a416:	e7fc      	b.n	801a412 <__cxa_atexit+0x12>
 801a418:	0801ae39 	.word	0x0801ae39

0801a41c <__errno>:
 801a41c:	4b01      	ldr	r3, [pc, #4]	; (801a424 <__errno+0x8>)
 801a41e:	6818      	ldr	r0, [r3, #0]
 801a420:	4770      	bx	lr
 801a422:	bf00      	nop
 801a424:	200000d8 	.word	0x200000d8

0801a428 <fiprintf>:
 801a428:	b40e      	push	{r1, r2, r3}
 801a42a:	b503      	push	{r0, r1, lr}
 801a42c:	4601      	mov	r1, r0
 801a42e:	ab03      	add	r3, sp, #12
 801a430:	4805      	ldr	r0, [pc, #20]	; (801a448 <fiprintf+0x20>)
 801a432:	f853 2b04 	ldr.w	r2, [r3], #4
 801a436:	6800      	ldr	r0, [r0, #0]
 801a438:	9301      	str	r3, [sp, #4]
 801a43a:	f000 f925 	bl	801a688 <_vfiprintf_r>
 801a43e:	b002      	add	sp, #8
 801a440:	f85d eb04 	ldr.w	lr, [sp], #4
 801a444:	b003      	add	sp, #12
 801a446:	4770      	bx	lr
 801a448:	200000d8 	.word	0x200000d8

0801a44c <__libc_init_array>:
 801a44c:	b570      	push	{r4, r5, r6, lr}
 801a44e:	4d0d      	ldr	r5, [pc, #52]	; (801a484 <__libc_init_array+0x38>)
 801a450:	4c0d      	ldr	r4, [pc, #52]	; (801a488 <__libc_init_array+0x3c>)
 801a452:	1b64      	subs	r4, r4, r5
 801a454:	10a4      	asrs	r4, r4, #2
 801a456:	2600      	movs	r6, #0
 801a458:	42a6      	cmp	r6, r4
 801a45a:	d109      	bne.n	801a470 <__libc_init_array+0x24>
 801a45c:	4d0b      	ldr	r5, [pc, #44]	; (801a48c <__libc_init_array+0x40>)
 801a45e:	4c0c      	ldr	r4, [pc, #48]	; (801a490 <__libc_init_array+0x44>)
 801a460:	f001 f824 	bl	801b4ac <_init>
 801a464:	1b64      	subs	r4, r4, r5
 801a466:	10a4      	asrs	r4, r4, #2
 801a468:	2600      	movs	r6, #0
 801a46a:	42a6      	cmp	r6, r4
 801a46c:	d105      	bne.n	801a47a <__libc_init_array+0x2e>
 801a46e:	bd70      	pop	{r4, r5, r6, pc}
 801a470:	f855 3b04 	ldr.w	r3, [r5], #4
 801a474:	4798      	blx	r3
 801a476:	3601      	adds	r6, #1
 801a478:	e7ee      	b.n	801a458 <__libc_init_array+0xc>
 801a47a:	f855 3b04 	ldr.w	r3, [r5], #4
 801a47e:	4798      	blx	r3
 801a480:	3601      	adds	r6, #1
 801a482:	e7f2      	b.n	801a46a <__libc_init_array+0x1e>
 801a484:	0801e780 	.word	0x0801e780
 801a488:	0801e780 	.word	0x0801e780
 801a48c:	0801e780 	.word	0x0801e780
 801a490:	0801e798 	.word	0x0801e798

0801a494 <malloc>:
 801a494:	4b02      	ldr	r3, [pc, #8]	; (801a4a0 <malloc+0xc>)
 801a496:	4601      	mov	r1, r0
 801a498:	6818      	ldr	r0, [r3, #0]
 801a49a:	f000 b871 	b.w	801a580 <_malloc_r>
 801a49e:	bf00      	nop
 801a4a0:	200000d8 	.word	0x200000d8

0801a4a4 <free>:
 801a4a4:	4b02      	ldr	r3, [pc, #8]	; (801a4b0 <free+0xc>)
 801a4a6:	4601      	mov	r1, r0
 801a4a8:	6818      	ldr	r0, [r3, #0]
 801a4aa:	f000 b819 	b.w	801a4e0 <_free_r>
 801a4ae:	bf00      	nop
 801a4b0:	200000d8 	.word	0x200000d8

0801a4b4 <memcpy>:
 801a4b4:	440a      	add	r2, r1
 801a4b6:	4291      	cmp	r1, r2
 801a4b8:	f100 33ff 	add.w	r3, r0, #4294967295
 801a4bc:	d100      	bne.n	801a4c0 <memcpy+0xc>
 801a4be:	4770      	bx	lr
 801a4c0:	b510      	push	{r4, lr}
 801a4c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a4c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801a4ca:	4291      	cmp	r1, r2
 801a4cc:	d1f9      	bne.n	801a4c2 <memcpy+0xe>
 801a4ce:	bd10      	pop	{r4, pc}

0801a4d0 <memset>:
 801a4d0:	4402      	add	r2, r0
 801a4d2:	4603      	mov	r3, r0
 801a4d4:	4293      	cmp	r3, r2
 801a4d6:	d100      	bne.n	801a4da <memset+0xa>
 801a4d8:	4770      	bx	lr
 801a4da:	f803 1b01 	strb.w	r1, [r3], #1
 801a4de:	e7f9      	b.n	801a4d4 <memset+0x4>

0801a4e0 <_free_r>:
 801a4e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a4e2:	2900      	cmp	r1, #0
 801a4e4:	d048      	beq.n	801a578 <_free_r+0x98>
 801a4e6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801a4ea:	9001      	str	r0, [sp, #4]
 801a4ec:	2b00      	cmp	r3, #0
 801a4ee:	f1a1 0404 	sub.w	r4, r1, #4
 801a4f2:	bfb8      	it	lt
 801a4f4:	18e4      	addlt	r4, r4, r3
 801a4f6:	f000 ff21 	bl	801b33c <__malloc_lock>
 801a4fa:	4a20      	ldr	r2, [pc, #128]	; (801a57c <_free_r+0x9c>)
 801a4fc:	9801      	ldr	r0, [sp, #4]
 801a4fe:	6813      	ldr	r3, [r2, #0]
 801a500:	4615      	mov	r5, r2
 801a502:	b933      	cbnz	r3, 801a512 <_free_r+0x32>
 801a504:	6063      	str	r3, [r4, #4]
 801a506:	6014      	str	r4, [r2, #0]
 801a508:	b003      	add	sp, #12
 801a50a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801a50e:	f000 bf1b 	b.w	801b348 <__malloc_unlock>
 801a512:	42a3      	cmp	r3, r4
 801a514:	d90b      	bls.n	801a52e <_free_r+0x4e>
 801a516:	6821      	ldr	r1, [r4, #0]
 801a518:	1862      	adds	r2, r4, r1
 801a51a:	4293      	cmp	r3, r2
 801a51c:	bf04      	itt	eq
 801a51e:	681a      	ldreq	r2, [r3, #0]
 801a520:	685b      	ldreq	r3, [r3, #4]
 801a522:	6063      	str	r3, [r4, #4]
 801a524:	bf04      	itt	eq
 801a526:	1852      	addeq	r2, r2, r1
 801a528:	6022      	streq	r2, [r4, #0]
 801a52a:	602c      	str	r4, [r5, #0]
 801a52c:	e7ec      	b.n	801a508 <_free_r+0x28>
 801a52e:	461a      	mov	r2, r3
 801a530:	685b      	ldr	r3, [r3, #4]
 801a532:	b10b      	cbz	r3, 801a538 <_free_r+0x58>
 801a534:	42a3      	cmp	r3, r4
 801a536:	d9fa      	bls.n	801a52e <_free_r+0x4e>
 801a538:	6811      	ldr	r1, [r2, #0]
 801a53a:	1855      	adds	r5, r2, r1
 801a53c:	42a5      	cmp	r5, r4
 801a53e:	d10b      	bne.n	801a558 <_free_r+0x78>
 801a540:	6824      	ldr	r4, [r4, #0]
 801a542:	4421      	add	r1, r4
 801a544:	1854      	adds	r4, r2, r1
 801a546:	42a3      	cmp	r3, r4
 801a548:	6011      	str	r1, [r2, #0]
 801a54a:	d1dd      	bne.n	801a508 <_free_r+0x28>
 801a54c:	681c      	ldr	r4, [r3, #0]
 801a54e:	685b      	ldr	r3, [r3, #4]
 801a550:	6053      	str	r3, [r2, #4]
 801a552:	4421      	add	r1, r4
 801a554:	6011      	str	r1, [r2, #0]
 801a556:	e7d7      	b.n	801a508 <_free_r+0x28>
 801a558:	d902      	bls.n	801a560 <_free_r+0x80>
 801a55a:	230c      	movs	r3, #12
 801a55c:	6003      	str	r3, [r0, #0]
 801a55e:	e7d3      	b.n	801a508 <_free_r+0x28>
 801a560:	6825      	ldr	r5, [r4, #0]
 801a562:	1961      	adds	r1, r4, r5
 801a564:	428b      	cmp	r3, r1
 801a566:	bf04      	itt	eq
 801a568:	6819      	ldreq	r1, [r3, #0]
 801a56a:	685b      	ldreq	r3, [r3, #4]
 801a56c:	6063      	str	r3, [r4, #4]
 801a56e:	bf04      	itt	eq
 801a570:	1949      	addeq	r1, r1, r5
 801a572:	6021      	streq	r1, [r4, #0]
 801a574:	6054      	str	r4, [r2, #4]
 801a576:	e7c7      	b.n	801a508 <_free_r+0x28>
 801a578:	b003      	add	sp, #12
 801a57a:	bd30      	pop	{r4, r5, pc}
 801a57c:	2000a190 	.word	0x2000a190

0801a580 <_malloc_r>:
 801a580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a582:	1ccd      	adds	r5, r1, #3
 801a584:	f025 0503 	bic.w	r5, r5, #3
 801a588:	3508      	adds	r5, #8
 801a58a:	2d0c      	cmp	r5, #12
 801a58c:	bf38      	it	cc
 801a58e:	250c      	movcc	r5, #12
 801a590:	2d00      	cmp	r5, #0
 801a592:	4606      	mov	r6, r0
 801a594:	db01      	blt.n	801a59a <_malloc_r+0x1a>
 801a596:	42a9      	cmp	r1, r5
 801a598:	d903      	bls.n	801a5a2 <_malloc_r+0x22>
 801a59a:	230c      	movs	r3, #12
 801a59c:	6033      	str	r3, [r6, #0]
 801a59e:	2000      	movs	r0, #0
 801a5a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a5a2:	f000 fecb 	bl	801b33c <__malloc_lock>
 801a5a6:	4921      	ldr	r1, [pc, #132]	; (801a62c <_malloc_r+0xac>)
 801a5a8:	680a      	ldr	r2, [r1, #0]
 801a5aa:	4614      	mov	r4, r2
 801a5ac:	b99c      	cbnz	r4, 801a5d6 <_malloc_r+0x56>
 801a5ae:	4f20      	ldr	r7, [pc, #128]	; (801a630 <_malloc_r+0xb0>)
 801a5b0:	683b      	ldr	r3, [r7, #0]
 801a5b2:	b923      	cbnz	r3, 801a5be <_malloc_r+0x3e>
 801a5b4:	4621      	mov	r1, r4
 801a5b6:	4630      	mov	r0, r6
 801a5b8:	f000 fb2a 	bl	801ac10 <_sbrk_r>
 801a5bc:	6038      	str	r0, [r7, #0]
 801a5be:	4629      	mov	r1, r5
 801a5c0:	4630      	mov	r0, r6
 801a5c2:	f000 fb25 	bl	801ac10 <_sbrk_r>
 801a5c6:	1c43      	adds	r3, r0, #1
 801a5c8:	d123      	bne.n	801a612 <_malloc_r+0x92>
 801a5ca:	230c      	movs	r3, #12
 801a5cc:	6033      	str	r3, [r6, #0]
 801a5ce:	4630      	mov	r0, r6
 801a5d0:	f000 feba 	bl	801b348 <__malloc_unlock>
 801a5d4:	e7e3      	b.n	801a59e <_malloc_r+0x1e>
 801a5d6:	6823      	ldr	r3, [r4, #0]
 801a5d8:	1b5b      	subs	r3, r3, r5
 801a5da:	d417      	bmi.n	801a60c <_malloc_r+0x8c>
 801a5dc:	2b0b      	cmp	r3, #11
 801a5de:	d903      	bls.n	801a5e8 <_malloc_r+0x68>
 801a5e0:	6023      	str	r3, [r4, #0]
 801a5e2:	441c      	add	r4, r3
 801a5e4:	6025      	str	r5, [r4, #0]
 801a5e6:	e004      	b.n	801a5f2 <_malloc_r+0x72>
 801a5e8:	6863      	ldr	r3, [r4, #4]
 801a5ea:	42a2      	cmp	r2, r4
 801a5ec:	bf0c      	ite	eq
 801a5ee:	600b      	streq	r3, [r1, #0]
 801a5f0:	6053      	strne	r3, [r2, #4]
 801a5f2:	4630      	mov	r0, r6
 801a5f4:	f000 fea8 	bl	801b348 <__malloc_unlock>
 801a5f8:	f104 000b 	add.w	r0, r4, #11
 801a5fc:	1d23      	adds	r3, r4, #4
 801a5fe:	f020 0007 	bic.w	r0, r0, #7
 801a602:	1ac2      	subs	r2, r0, r3
 801a604:	d0cc      	beq.n	801a5a0 <_malloc_r+0x20>
 801a606:	1a1b      	subs	r3, r3, r0
 801a608:	50a3      	str	r3, [r4, r2]
 801a60a:	e7c9      	b.n	801a5a0 <_malloc_r+0x20>
 801a60c:	4622      	mov	r2, r4
 801a60e:	6864      	ldr	r4, [r4, #4]
 801a610:	e7cc      	b.n	801a5ac <_malloc_r+0x2c>
 801a612:	1cc4      	adds	r4, r0, #3
 801a614:	f024 0403 	bic.w	r4, r4, #3
 801a618:	42a0      	cmp	r0, r4
 801a61a:	d0e3      	beq.n	801a5e4 <_malloc_r+0x64>
 801a61c:	1a21      	subs	r1, r4, r0
 801a61e:	4630      	mov	r0, r6
 801a620:	f000 faf6 	bl	801ac10 <_sbrk_r>
 801a624:	3001      	adds	r0, #1
 801a626:	d1dd      	bne.n	801a5e4 <_malloc_r+0x64>
 801a628:	e7cf      	b.n	801a5ca <_malloc_r+0x4a>
 801a62a:	bf00      	nop
 801a62c:	2000a190 	.word	0x2000a190
 801a630:	2000a194 	.word	0x2000a194

0801a634 <__sfputc_r>:
 801a634:	6893      	ldr	r3, [r2, #8]
 801a636:	3b01      	subs	r3, #1
 801a638:	2b00      	cmp	r3, #0
 801a63a:	b410      	push	{r4}
 801a63c:	6093      	str	r3, [r2, #8]
 801a63e:	da08      	bge.n	801a652 <__sfputc_r+0x1e>
 801a640:	6994      	ldr	r4, [r2, #24]
 801a642:	42a3      	cmp	r3, r4
 801a644:	db01      	blt.n	801a64a <__sfputc_r+0x16>
 801a646:	290a      	cmp	r1, #10
 801a648:	d103      	bne.n	801a652 <__sfputc_r+0x1e>
 801a64a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a64e:	f000 bb33 	b.w	801acb8 <__swbuf_r>
 801a652:	6813      	ldr	r3, [r2, #0]
 801a654:	1c58      	adds	r0, r3, #1
 801a656:	6010      	str	r0, [r2, #0]
 801a658:	7019      	strb	r1, [r3, #0]
 801a65a:	4608      	mov	r0, r1
 801a65c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a660:	4770      	bx	lr

0801a662 <__sfputs_r>:
 801a662:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a664:	4606      	mov	r6, r0
 801a666:	460f      	mov	r7, r1
 801a668:	4614      	mov	r4, r2
 801a66a:	18d5      	adds	r5, r2, r3
 801a66c:	42ac      	cmp	r4, r5
 801a66e:	d101      	bne.n	801a674 <__sfputs_r+0x12>
 801a670:	2000      	movs	r0, #0
 801a672:	e007      	b.n	801a684 <__sfputs_r+0x22>
 801a674:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a678:	463a      	mov	r2, r7
 801a67a:	4630      	mov	r0, r6
 801a67c:	f7ff ffda 	bl	801a634 <__sfputc_r>
 801a680:	1c43      	adds	r3, r0, #1
 801a682:	d1f3      	bne.n	801a66c <__sfputs_r+0xa>
 801a684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801a688 <_vfiprintf_r>:
 801a688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a68c:	460d      	mov	r5, r1
 801a68e:	b09d      	sub	sp, #116	; 0x74
 801a690:	4614      	mov	r4, r2
 801a692:	4698      	mov	r8, r3
 801a694:	4606      	mov	r6, r0
 801a696:	b118      	cbz	r0, 801a6a0 <_vfiprintf_r+0x18>
 801a698:	6983      	ldr	r3, [r0, #24]
 801a69a:	b90b      	cbnz	r3, 801a6a0 <_vfiprintf_r+0x18>
 801a69c:	f000 fd48 	bl	801b130 <__sinit>
 801a6a0:	4b89      	ldr	r3, [pc, #548]	; (801a8c8 <_vfiprintf_r+0x240>)
 801a6a2:	429d      	cmp	r5, r3
 801a6a4:	d11b      	bne.n	801a6de <_vfiprintf_r+0x56>
 801a6a6:	6875      	ldr	r5, [r6, #4]
 801a6a8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a6aa:	07d9      	lsls	r1, r3, #31
 801a6ac:	d405      	bmi.n	801a6ba <_vfiprintf_r+0x32>
 801a6ae:	89ab      	ldrh	r3, [r5, #12]
 801a6b0:	059a      	lsls	r2, r3, #22
 801a6b2:	d402      	bmi.n	801a6ba <_vfiprintf_r+0x32>
 801a6b4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a6b6:	f000 fdd9 	bl	801b26c <__retarget_lock_acquire_recursive>
 801a6ba:	89ab      	ldrh	r3, [r5, #12]
 801a6bc:	071b      	lsls	r3, r3, #28
 801a6be:	d501      	bpl.n	801a6c4 <_vfiprintf_r+0x3c>
 801a6c0:	692b      	ldr	r3, [r5, #16]
 801a6c2:	b9eb      	cbnz	r3, 801a700 <_vfiprintf_r+0x78>
 801a6c4:	4629      	mov	r1, r5
 801a6c6:	4630      	mov	r0, r6
 801a6c8:	f000 fb48 	bl	801ad5c <__swsetup_r>
 801a6cc:	b1c0      	cbz	r0, 801a700 <_vfiprintf_r+0x78>
 801a6ce:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a6d0:	07dc      	lsls	r4, r3, #31
 801a6d2:	d50e      	bpl.n	801a6f2 <_vfiprintf_r+0x6a>
 801a6d4:	f04f 30ff 	mov.w	r0, #4294967295
 801a6d8:	b01d      	add	sp, #116	; 0x74
 801a6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6de:	4b7b      	ldr	r3, [pc, #492]	; (801a8cc <_vfiprintf_r+0x244>)
 801a6e0:	429d      	cmp	r5, r3
 801a6e2:	d101      	bne.n	801a6e8 <_vfiprintf_r+0x60>
 801a6e4:	68b5      	ldr	r5, [r6, #8]
 801a6e6:	e7df      	b.n	801a6a8 <_vfiprintf_r+0x20>
 801a6e8:	4b79      	ldr	r3, [pc, #484]	; (801a8d0 <_vfiprintf_r+0x248>)
 801a6ea:	429d      	cmp	r5, r3
 801a6ec:	bf08      	it	eq
 801a6ee:	68f5      	ldreq	r5, [r6, #12]
 801a6f0:	e7da      	b.n	801a6a8 <_vfiprintf_r+0x20>
 801a6f2:	89ab      	ldrh	r3, [r5, #12]
 801a6f4:	0598      	lsls	r0, r3, #22
 801a6f6:	d4ed      	bmi.n	801a6d4 <_vfiprintf_r+0x4c>
 801a6f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a6fa:	f000 fdb9 	bl	801b270 <__retarget_lock_release_recursive>
 801a6fe:	e7e9      	b.n	801a6d4 <_vfiprintf_r+0x4c>
 801a700:	2300      	movs	r3, #0
 801a702:	9309      	str	r3, [sp, #36]	; 0x24
 801a704:	2320      	movs	r3, #32
 801a706:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801a70a:	f8cd 800c 	str.w	r8, [sp, #12]
 801a70e:	2330      	movs	r3, #48	; 0x30
 801a710:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801a8d4 <_vfiprintf_r+0x24c>
 801a714:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801a718:	f04f 0901 	mov.w	r9, #1
 801a71c:	4623      	mov	r3, r4
 801a71e:	469a      	mov	sl, r3
 801a720:	f813 2b01 	ldrb.w	r2, [r3], #1
 801a724:	b10a      	cbz	r2, 801a72a <_vfiprintf_r+0xa2>
 801a726:	2a25      	cmp	r2, #37	; 0x25
 801a728:	d1f9      	bne.n	801a71e <_vfiprintf_r+0x96>
 801a72a:	ebba 0b04 	subs.w	fp, sl, r4
 801a72e:	d00b      	beq.n	801a748 <_vfiprintf_r+0xc0>
 801a730:	465b      	mov	r3, fp
 801a732:	4622      	mov	r2, r4
 801a734:	4629      	mov	r1, r5
 801a736:	4630      	mov	r0, r6
 801a738:	f7ff ff93 	bl	801a662 <__sfputs_r>
 801a73c:	3001      	adds	r0, #1
 801a73e:	f000 80aa 	beq.w	801a896 <_vfiprintf_r+0x20e>
 801a742:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a744:	445a      	add	r2, fp
 801a746:	9209      	str	r2, [sp, #36]	; 0x24
 801a748:	f89a 3000 	ldrb.w	r3, [sl]
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	f000 80a2 	beq.w	801a896 <_vfiprintf_r+0x20e>
 801a752:	2300      	movs	r3, #0
 801a754:	f04f 32ff 	mov.w	r2, #4294967295
 801a758:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801a75c:	f10a 0a01 	add.w	sl, sl, #1
 801a760:	9304      	str	r3, [sp, #16]
 801a762:	9307      	str	r3, [sp, #28]
 801a764:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801a768:	931a      	str	r3, [sp, #104]	; 0x68
 801a76a:	4654      	mov	r4, sl
 801a76c:	2205      	movs	r2, #5
 801a76e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a772:	4858      	ldr	r0, [pc, #352]	; (801a8d4 <_vfiprintf_r+0x24c>)
 801a774:	f7e5 fd44 	bl	8000200 <memchr>
 801a778:	9a04      	ldr	r2, [sp, #16]
 801a77a:	b9d8      	cbnz	r0, 801a7b4 <_vfiprintf_r+0x12c>
 801a77c:	06d1      	lsls	r1, r2, #27
 801a77e:	bf44      	itt	mi
 801a780:	2320      	movmi	r3, #32
 801a782:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a786:	0713      	lsls	r3, r2, #28
 801a788:	bf44      	itt	mi
 801a78a:	232b      	movmi	r3, #43	; 0x2b
 801a78c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a790:	f89a 3000 	ldrb.w	r3, [sl]
 801a794:	2b2a      	cmp	r3, #42	; 0x2a
 801a796:	d015      	beq.n	801a7c4 <_vfiprintf_r+0x13c>
 801a798:	9a07      	ldr	r2, [sp, #28]
 801a79a:	4654      	mov	r4, sl
 801a79c:	2000      	movs	r0, #0
 801a79e:	f04f 0c0a 	mov.w	ip, #10
 801a7a2:	4621      	mov	r1, r4
 801a7a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a7a8:	3b30      	subs	r3, #48	; 0x30
 801a7aa:	2b09      	cmp	r3, #9
 801a7ac:	d94e      	bls.n	801a84c <_vfiprintf_r+0x1c4>
 801a7ae:	b1b0      	cbz	r0, 801a7de <_vfiprintf_r+0x156>
 801a7b0:	9207      	str	r2, [sp, #28]
 801a7b2:	e014      	b.n	801a7de <_vfiprintf_r+0x156>
 801a7b4:	eba0 0308 	sub.w	r3, r0, r8
 801a7b8:	fa09 f303 	lsl.w	r3, r9, r3
 801a7bc:	4313      	orrs	r3, r2
 801a7be:	9304      	str	r3, [sp, #16]
 801a7c0:	46a2      	mov	sl, r4
 801a7c2:	e7d2      	b.n	801a76a <_vfiprintf_r+0xe2>
 801a7c4:	9b03      	ldr	r3, [sp, #12]
 801a7c6:	1d19      	adds	r1, r3, #4
 801a7c8:	681b      	ldr	r3, [r3, #0]
 801a7ca:	9103      	str	r1, [sp, #12]
 801a7cc:	2b00      	cmp	r3, #0
 801a7ce:	bfbb      	ittet	lt
 801a7d0:	425b      	neglt	r3, r3
 801a7d2:	f042 0202 	orrlt.w	r2, r2, #2
 801a7d6:	9307      	strge	r3, [sp, #28]
 801a7d8:	9307      	strlt	r3, [sp, #28]
 801a7da:	bfb8      	it	lt
 801a7dc:	9204      	strlt	r2, [sp, #16]
 801a7de:	7823      	ldrb	r3, [r4, #0]
 801a7e0:	2b2e      	cmp	r3, #46	; 0x2e
 801a7e2:	d10c      	bne.n	801a7fe <_vfiprintf_r+0x176>
 801a7e4:	7863      	ldrb	r3, [r4, #1]
 801a7e6:	2b2a      	cmp	r3, #42	; 0x2a
 801a7e8:	d135      	bne.n	801a856 <_vfiprintf_r+0x1ce>
 801a7ea:	9b03      	ldr	r3, [sp, #12]
 801a7ec:	1d1a      	adds	r2, r3, #4
 801a7ee:	681b      	ldr	r3, [r3, #0]
 801a7f0:	9203      	str	r2, [sp, #12]
 801a7f2:	2b00      	cmp	r3, #0
 801a7f4:	bfb8      	it	lt
 801a7f6:	f04f 33ff 	movlt.w	r3, #4294967295
 801a7fa:	3402      	adds	r4, #2
 801a7fc:	9305      	str	r3, [sp, #20]
 801a7fe:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801a8e4 <_vfiprintf_r+0x25c>
 801a802:	7821      	ldrb	r1, [r4, #0]
 801a804:	2203      	movs	r2, #3
 801a806:	4650      	mov	r0, sl
 801a808:	f7e5 fcfa 	bl	8000200 <memchr>
 801a80c:	b140      	cbz	r0, 801a820 <_vfiprintf_r+0x198>
 801a80e:	2340      	movs	r3, #64	; 0x40
 801a810:	eba0 000a 	sub.w	r0, r0, sl
 801a814:	fa03 f000 	lsl.w	r0, r3, r0
 801a818:	9b04      	ldr	r3, [sp, #16]
 801a81a:	4303      	orrs	r3, r0
 801a81c:	3401      	adds	r4, #1
 801a81e:	9304      	str	r3, [sp, #16]
 801a820:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a824:	482c      	ldr	r0, [pc, #176]	; (801a8d8 <_vfiprintf_r+0x250>)
 801a826:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801a82a:	2206      	movs	r2, #6
 801a82c:	f7e5 fce8 	bl	8000200 <memchr>
 801a830:	2800      	cmp	r0, #0
 801a832:	d03f      	beq.n	801a8b4 <_vfiprintf_r+0x22c>
 801a834:	4b29      	ldr	r3, [pc, #164]	; (801a8dc <_vfiprintf_r+0x254>)
 801a836:	bb1b      	cbnz	r3, 801a880 <_vfiprintf_r+0x1f8>
 801a838:	9b03      	ldr	r3, [sp, #12]
 801a83a:	3307      	adds	r3, #7
 801a83c:	f023 0307 	bic.w	r3, r3, #7
 801a840:	3308      	adds	r3, #8
 801a842:	9303      	str	r3, [sp, #12]
 801a844:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a846:	443b      	add	r3, r7
 801a848:	9309      	str	r3, [sp, #36]	; 0x24
 801a84a:	e767      	b.n	801a71c <_vfiprintf_r+0x94>
 801a84c:	fb0c 3202 	mla	r2, ip, r2, r3
 801a850:	460c      	mov	r4, r1
 801a852:	2001      	movs	r0, #1
 801a854:	e7a5      	b.n	801a7a2 <_vfiprintf_r+0x11a>
 801a856:	2300      	movs	r3, #0
 801a858:	3401      	adds	r4, #1
 801a85a:	9305      	str	r3, [sp, #20]
 801a85c:	4619      	mov	r1, r3
 801a85e:	f04f 0c0a 	mov.w	ip, #10
 801a862:	4620      	mov	r0, r4
 801a864:	f810 2b01 	ldrb.w	r2, [r0], #1
 801a868:	3a30      	subs	r2, #48	; 0x30
 801a86a:	2a09      	cmp	r2, #9
 801a86c:	d903      	bls.n	801a876 <_vfiprintf_r+0x1ee>
 801a86e:	2b00      	cmp	r3, #0
 801a870:	d0c5      	beq.n	801a7fe <_vfiprintf_r+0x176>
 801a872:	9105      	str	r1, [sp, #20]
 801a874:	e7c3      	b.n	801a7fe <_vfiprintf_r+0x176>
 801a876:	fb0c 2101 	mla	r1, ip, r1, r2
 801a87a:	4604      	mov	r4, r0
 801a87c:	2301      	movs	r3, #1
 801a87e:	e7f0      	b.n	801a862 <_vfiprintf_r+0x1da>
 801a880:	ab03      	add	r3, sp, #12
 801a882:	9300      	str	r3, [sp, #0]
 801a884:	462a      	mov	r2, r5
 801a886:	4b16      	ldr	r3, [pc, #88]	; (801a8e0 <_vfiprintf_r+0x258>)
 801a888:	a904      	add	r1, sp, #16
 801a88a:	4630      	mov	r0, r6
 801a88c:	f3af 8000 	nop.w
 801a890:	4607      	mov	r7, r0
 801a892:	1c78      	adds	r0, r7, #1
 801a894:	d1d6      	bne.n	801a844 <_vfiprintf_r+0x1bc>
 801a896:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a898:	07d9      	lsls	r1, r3, #31
 801a89a:	d405      	bmi.n	801a8a8 <_vfiprintf_r+0x220>
 801a89c:	89ab      	ldrh	r3, [r5, #12]
 801a89e:	059a      	lsls	r2, r3, #22
 801a8a0:	d402      	bmi.n	801a8a8 <_vfiprintf_r+0x220>
 801a8a2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a8a4:	f000 fce4 	bl	801b270 <__retarget_lock_release_recursive>
 801a8a8:	89ab      	ldrh	r3, [r5, #12]
 801a8aa:	065b      	lsls	r3, r3, #25
 801a8ac:	f53f af12 	bmi.w	801a6d4 <_vfiprintf_r+0x4c>
 801a8b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a8b2:	e711      	b.n	801a6d8 <_vfiprintf_r+0x50>
 801a8b4:	ab03      	add	r3, sp, #12
 801a8b6:	9300      	str	r3, [sp, #0]
 801a8b8:	462a      	mov	r2, r5
 801a8ba:	4b09      	ldr	r3, [pc, #36]	; (801a8e0 <_vfiprintf_r+0x258>)
 801a8bc:	a904      	add	r1, sp, #16
 801a8be:	4630      	mov	r0, r6
 801a8c0:	f000 f880 	bl	801a9c4 <_printf_i>
 801a8c4:	e7e4      	b.n	801a890 <_vfiprintf_r+0x208>
 801a8c6:	bf00      	nop
 801a8c8:	0801e720 	.word	0x0801e720
 801a8cc:	0801e740 	.word	0x0801e740
 801a8d0:	0801e700 	.word	0x0801e700
 801a8d4:	0801e6c8 	.word	0x0801e6c8
 801a8d8:	0801e6d2 	.word	0x0801e6d2
 801a8dc:	00000000 	.word	0x00000000
 801a8e0:	0801a663 	.word	0x0801a663
 801a8e4:	0801e6ce 	.word	0x0801e6ce

0801a8e8 <_printf_common>:
 801a8e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a8ec:	4616      	mov	r6, r2
 801a8ee:	4699      	mov	r9, r3
 801a8f0:	688a      	ldr	r2, [r1, #8]
 801a8f2:	690b      	ldr	r3, [r1, #16]
 801a8f4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801a8f8:	4293      	cmp	r3, r2
 801a8fa:	bfb8      	it	lt
 801a8fc:	4613      	movlt	r3, r2
 801a8fe:	6033      	str	r3, [r6, #0]
 801a900:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801a904:	4607      	mov	r7, r0
 801a906:	460c      	mov	r4, r1
 801a908:	b10a      	cbz	r2, 801a90e <_printf_common+0x26>
 801a90a:	3301      	adds	r3, #1
 801a90c:	6033      	str	r3, [r6, #0]
 801a90e:	6823      	ldr	r3, [r4, #0]
 801a910:	0699      	lsls	r1, r3, #26
 801a912:	bf42      	ittt	mi
 801a914:	6833      	ldrmi	r3, [r6, #0]
 801a916:	3302      	addmi	r3, #2
 801a918:	6033      	strmi	r3, [r6, #0]
 801a91a:	6825      	ldr	r5, [r4, #0]
 801a91c:	f015 0506 	ands.w	r5, r5, #6
 801a920:	d106      	bne.n	801a930 <_printf_common+0x48>
 801a922:	f104 0a19 	add.w	sl, r4, #25
 801a926:	68e3      	ldr	r3, [r4, #12]
 801a928:	6832      	ldr	r2, [r6, #0]
 801a92a:	1a9b      	subs	r3, r3, r2
 801a92c:	42ab      	cmp	r3, r5
 801a92e:	dc26      	bgt.n	801a97e <_printf_common+0x96>
 801a930:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801a934:	1e13      	subs	r3, r2, #0
 801a936:	6822      	ldr	r2, [r4, #0]
 801a938:	bf18      	it	ne
 801a93a:	2301      	movne	r3, #1
 801a93c:	0692      	lsls	r2, r2, #26
 801a93e:	d42b      	bmi.n	801a998 <_printf_common+0xb0>
 801a940:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a944:	4649      	mov	r1, r9
 801a946:	4638      	mov	r0, r7
 801a948:	47c0      	blx	r8
 801a94a:	3001      	adds	r0, #1
 801a94c:	d01e      	beq.n	801a98c <_printf_common+0xa4>
 801a94e:	6823      	ldr	r3, [r4, #0]
 801a950:	68e5      	ldr	r5, [r4, #12]
 801a952:	6832      	ldr	r2, [r6, #0]
 801a954:	f003 0306 	and.w	r3, r3, #6
 801a958:	2b04      	cmp	r3, #4
 801a95a:	bf08      	it	eq
 801a95c:	1aad      	subeq	r5, r5, r2
 801a95e:	68a3      	ldr	r3, [r4, #8]
 801a960:	6922      	ldr	r2, [r4, #16]
 801a962:	bf0c      	ite	eq
 801a964:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a968:	2500      	movne	r5, #0
 801a96a:	4293      	cmp	r3, r2
 801a96c:	bfc4      	itt	gt
 801a96e:	1a9b      	subgt	r3, r3, r2
 801a970:	18ed      	addgt	r5, r5, r3
 801a972:	2600      	movs	r6, #0
 801a974:	341a      	adds	r4, #26
 801a976:	42b5      	cmp	r5, r6
 801a978:	d11a      	bne.n	801a9b0 <_printf_common+0xc8>
 801a97a:	2000      	movs	r0, #0
 801a97c:	e008      	b.n	801a990 <_printf_common+0xa8>
 801a97e:	2301      	movs	r3, #1
 801a980:	4652      	mov	r2, sl
 801a982:	4649      	mov	r1, r9
 801a984:	4638      	mov	r0, r7
 801a986:	47c0      	blx	r8
 801a988:	3001      	adds	r0, #1
 801a98a:	d103      	bne.n	801a994 <_printf_common+0xac>
 801a98c:	f04f 30ff 	mov.w	r0, #4294967295
 801a990:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a994:	3501      	adds	r5, #1
 801a996:	e7c6      	b.n	801a926 <_printf_common+0x3e>
 801a998:	18e1      	adds	r1, r4, r3
 801a99a:	1c5a      	adds	r2, r3, #1
 801a99c:	2030      	movs	r0, #48	; 0x30
 801a99e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a9a2:	4422      	add	r2, r4
 801a9a4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a9a8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a9ac:	3302      	adds	r3, #2
 801a9ae:	e7c7      	b.n	801a940 <_printf_common+0x58>
 801a9b0:	2301      	movs	r3, #1
 801a9b2:	4622      	mov	r2, r4
 801a9b4:	4649      	mov	r1, r9
 801a9b6:	4638      	mov	r0, r7
 801a9b8:	47c0      	blx	r8
 801a9ba:	3001      	adds	r0, #1
 801a9bc:	d0e6      	beq.n	801a98c <_printf_common+0xa4>
 801a9be:	3601      	adds	r6, #1
 801a9c0:	e7d9      	b.n	801a976 <_printf_common+0x8e>
	...

0801a9c4 <_printf_i>:
 801a9c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a9c8:	460c      	mov	r4, r1
 801a9ca:	4691      	mov	r9, r2
 801a9cc:	7e27      	ldrb	r7, [r4, #24]
 801a9ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a9d0:	2f78      	cmp	r7, #120	; 0x78
 801a9d2:	4680      	mov	r8, r0
 801a9d4:	469a      	mov	sl, r3
 801a9d6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a9da:	d807      	bhi.n	801a9ec <_printf_i+0x28>
 801a9dc:	2f62      	cmp	r7, #98	; 0x62
 801a9de:	d80a      	bhi.n	801a9f6 <_printf_i+0x32>
 801a9e0:	2f00      	cmp	r7, #0
 801a9e2:	f000 80d8 	beq.w	801ab96 <_printf_i+0x1d2>
 801a9e6:	2f58      	cmp	r7, #88	; 0x58
 801a9e8:	f000 80a3 	beq.w	801ab32 <_printf_i+0x16e>
 801a9ec:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801a9f0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801a9f4:	e03a      	b.n	801aa6c <_printf_i+0xa8>
 801a9f6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801a9fa:	2b15      	cmp	r3, #21
 801a9fc:	d8f6      	bhi.n	801a9ec <_printf_i+0x28>
 801a9fe:	a001      	add	r0, pc, #4	; (adr r0, 801aa04 <_printf_i+0x40>)
 801aa00:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801aa04:	0801aa5d 	.word	0x0801aa5d
 801aa08:	0801aa71 	.word	0x0801aa71
 801aa0c:	0801a9ed 	.word	0x0801a9ed
 801aa10:	0801a9ed 	.word	0x0801a9ed
 801aa14:	0801a9ed 	.word	0x0801a9ed
 801aa18:	0801a9ed 	.word	0x0801a9ed
 801aa1c:	0801aa71 	.word	0x0801aa71
 801aa20:	0801a9ed 	.word	0x0801a9ed
 801aa24:	0801a9ed 	.word	0x0801a9ed
 801aa28:	0801a9ed 	.word	0x0801a9ed
 801aa2c:	0801a9ed 	.word	0x0801a9ed
 801aa30:	0801ab7d 	.word	0x0801ab7d
 801aa34:	0801aaa1 	.word	0x0801aaa1
 801aa38:	0801ab5f 	.word	0x0801ab5f
 801aa3c:	0801a9ed 	.word	0x0801a9ed
 801aa40:	0801a9ed 	.word	0x0801a9ed
 801aa44:	0801ab9f 	.word	0x0801ab9f
 801aa48:	0801a9ed 	.word	0x0801a9ed
 801aa4c:	0801aaa1 	.word	0x0801aaa1
 801aa50:	0801a9ed 	.word	0x0801a9ed
 801aa54:	0801a9ed 	.word	0x0801a9ed
 801aa58:	0801ab67 	.word	0x0801ab67
 801aa5c:	680b      	ldr	r3, [r1, #0]
 801aa5e:	1d1a      	adds	r2, r3, #4
 801aa60:	681b      	ldr	r3, [r3, #0]
 801aa62:	600a      	str	r2, [r1, #0]
 801aa64:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801aa68:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801aa6c:	2301      	movs	r3, #1
 801aa6e:	e0a3      	b.n	801abb8 <_printf_i+0x1f4>
 801aa70:	6825      	ldr	r5, [r4, #0]
 801aa72:	6808      	ldr	r0, [r1, #0]
 801aa74:	062e      	lsls	r6, r5, #24
 801aa76:	f100 0304 	add.w	r3, r0, #4
 801aa7a:	d50a      	bpl.n	801aa92 <_printf_i+0xce>
 801aa7c:	6805      	ldr	r5, [r0, #0]
 801aa7e:	600b      	str	r3, [r1, #0]
 801aa80:	2d00      	cmp	r5, #0
 801aa82:	da03      	bge.n	801aa8c <_printf_i+0xc8>
 801aa84:	232d      	movs	r3, #45	; 0x2d
 801aa86:	426d      	negs	r5, r5
 801aa88:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801aa8c:	485e      	ldr	r0, [pc, #376]	; (801ac08 <_printf_i+0x244>)
 801aa8e:	230a      	movs	r3, #10
 801aa90:	e019      	b.n	801aac6 <_printf_i+0x102>
 801aa92:	f015 0f40 	tst.w	r5, #64	; 0x40
 801aa96:	6805      	ldr	r5, [r0, #0]
 801aa98:	600b      	str	r3, [r1, #0]
 801aa9a:	bf18      	it	ne
 801aa9c:	b22d      	sxthne	r5, r5
 801aa9e:	e7ef      	b.n	801aa80 <_printf_i+0xbc>
 801aaa0:	680b      	ldr	r3, [r1, #0]
 801aaa2:	6825      	ldr	r5, [r4, #0]
 801aaa4:	1d18      	adds	r0, r3, #4
 801aaa6:	6008      	str	r0, [r1, #0]
 801aaa8:	0628      	lsls	r0, r5, #24
 801aaaa:	d501      	bpl.n	801aab0 <_printf_i+0xec>
 801aaac:	681d      	ldr	r5, [r3, #0]
 801aaae:	e002      	b.n	801aab6 <_printf_i+0xf2>
 801aab0:	0669      	lsls	r1, r5, #25
 801aab2:	d5fb      	bpl.n	801aaac <_printf_i+0xe8>
 801aab4:	881d      	ldrh	r5, [r3, #0]
 801aab6:	4854      	ldr	r0, [pc, #336]	; (801ac08 <_printf_i+0x244>)
 801aab8:	2f6f      	cmp	r7, #111	; 0x6f
 801aaba:	bf0c      	ite	eq
 801aabc:	2308      	moveq	r3, #8
 801aabe:	230a      	movne	r3, #10
 801aac0:	2100      	movs	r1, #0
 801aac2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801aac6:	6866      	ldr	r6, [r4, #4]
 801aac8:	60a6      	str	r6, [r4, #8]
 801aaca:	2e00      	cmp	r6, #0
 801aacc:	bfa2      	ittt	ge
 801aace:	6821      	ldrge	r1, [r4, #0]
 801aad0:	f021 0104 	bicge.w	r1, r1, #4
 801aad4:	6021      	strge	r1, [r4, #0]
 801aad6:	b90d      	cbnz	r5, 801aadc <_printf_i+0x118>
 801aad8:	2e00      	cmp	r6, #0
 801aada:	d04d      	beq.n	801ab78 <_printf_i+0x1b4>
 801aadc:	4616      	mov	r6, r2
 801aade:	fbb5 f1f3 	udiv	r1, r5, r3
 801aae2:	fb03 5711 	mls	r7, r3, r1, r5
 801aae6:	5dc7      	ldrb	r7, [r0, r7]
 801aae8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801aaec:	462f      	mov	r7, r5
 801aaee:	42bb      	cmp	r3, r7
 801aaf0:	460d      	mov	r5, r1
 801aaf2:	d9f4      	bls.n	801aade <_printf_i+0x11a>
 801aaf4:	2b08      	cmp	r3, #8
 801aaf6:	d10b      	bne.n	801ab10 <_printf_i+0x14c>
 801aaf8:	6823      	ldr	r3, [r4, #0]
 801aafa:	07df      	lsls	r7, r3, #31
 801aafc:	d508      	bpl.n	801ab10 <_printf_i+0x14c>
 801aafe:	6923      	ldr	r3, [r4, #16]
 801ab00:	6861      	ldr	r1, [r4, #4]
 801ab02:	4299      	cmp	r1, r3
 801ab04:	bfde      	ittt	le
 801ab06:	2330      	movle	r3, #48	; 0x30
 801ab08:	f806 3c01 	strble.w	r3, [r6, #-1]
 801ab0c:	f106 36ff 	addle.w	r6, r6, #4294967295
 801ab10:	1b92      	subs	r2, r2, r6
 801ab12:	6122      	str	r2, [r4, #16]
 801ab14:	f8cd a000 	str.w	sl, [sp]
 801ab18:	464b      	mov	r3, r9
 801ab1a:	aa03      	add	r2, sp, #12
 801ab1c:	4621      	mov	r1, r4
 801ab1e:	4640      	mov	r0, r8
 801ab20:	f7ff fee2 	bl	801a8e8 <_printf_common>
 801ab24:	3001      	adds	r0, #1
 801ab26:	d14c      	bne.n	801abc2 <_printf_i+0x1fe>
 801ab28:	f04f 30ff 	mov.w	r0, #4294967295
 801ab2c:	b004      	add	sp, #16
 801ab2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab32:	4835      	ldr	r0, [pc, #212]	; (801ac08 <_printf_i+0x244>)
 801ab34:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801ab38:	6823      	ldr	r3, [r4, #0]
 801ab3a:	680e      	ldr	r6, [r1, #0]
 801ab3c:	061f      	lsls	r7, r3, #24
 801ab3e:	f856 5b04 	ldr.w	r5, [r6], #4
 801ab42:	600e      	str	r6, [r1, #0]
 801ab44:	d514      	bpl.n	801ab70 <_printf_i+0x1ac>
 801ab46:	07d9      	lsls	r1, r3, #31
 801ab48:	bf44      	itt	mi
 801ab4a:	f043 0320 	orrmi.w	r3, r3, #32
 801ab4e:	6023      	strmi	r3, [r4, #0]
 801ab50:	b91d      	cbnz	r5, 801ab5a <_printf_i+0x196>
 801ab52:	6823      	ldr	r3, [r4, #0]
 801ab54:	f023 0320 	bic.w	r3, r3, #32
 801ab58:	6023      	str	r3, [r4, #0]
 801ab5a:	2310      	movs	r3, #16
 801ab5c:	e7b0      	b.n	801aac0 <_printf_i+0xfc>
 801ab5e:	6823      	ldr	r3, [r4, #0]
 801ab60:	f043 0320 	orr.w	r3, r3, #32
 801ab64:	6023      	str	r3, [r4, #0]
 801ab66:	2378      	movs	r3, #120	; 0x78
 801ab68:	4828      	ldr	r0, [pc, #160]	; (801ac0c <_printf_i+0x248>)
 801ab6a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ab6e:	e7e3      	b.n	801ab38 <_printf_i+0x174>
 801ab70:	065e      	lsls	r6, r3, #25
 801ab72:	bf48      	it	mi
 801ab74:	b2ad      	uxthmi	r5, r5
 801ab76:	e7e6      	b.n	801ab46 <_printf_i+0x182>
 801ab78:	4616      	mov	r6, r2
 801ab7a:	e7bb      	b.n	801aaf4 <_printf_i+0x130>
 801ab7c:	680b      	ldr	r3, [r1, #0]
 801ab7e:	6826      	ldr	r6, [r4, #0]
 801ab80:	6960      	ldr	r0, [r4, #20]
 801ab82:	1d1d      	adds	r5, r3, #4
 801ab84:	600d      	str	r5, [r1, #0]
 801ab86:	0635      	lsls	r5, r6, #24
 801ab88:	681b      	ldr	r3, [r3, #0]
 801ab8a:	d501      	bpl.n	801ab90 <_printf_i+0x1cc>
 801ab8c:	6018      	str	r0, [r3, #0]
 801ab8e:	e002      	b.n	801ab96 <_printf_i+0x1d2>
 801ab90:	0671      	lsls	r1, r6, #25
 801ab92:	d5fb      	bpl.n	801ab8c <_printf_i+0x1c8>
 801ab94:	8018      	strh	r0, [r3, #0]
 801ab96:	2300      	movs	r3, #0
 801ab98:	6123      	str	r3, [r4, #16]
 801ab9a:	4616      	mov	r6, r2
 801ab9c:	e7ba      	b.n	801ab14 <_printf_i+0x150>
 801ab9e:	680b      	ldr	r3, [r1, #0]
 801aba0:	1d1a      	adds	r2, r3, #4
 801aba2:	600a      	str	r2, [r1, #0]
 801aba4:	681e      	ldr	r6, [r3, #0]
 801aba6:	6862      	ldr	r2, [r4, #4]
 801aba8:	2100      	movs	r1, #0
 801abaa:	4630      	mov	r0, r6
 801abac:	f7e5 fb28 	bl	8000200 <memchr>
 801abb0:	b108      	cbz	r0, 801abb6 <_printf_i+0x1f2>
 801abb2:	1b80      	subs	r0, r0, r6
 801abb4:	6060      	str	r0, [r4, #4]
 801abb6:	6863      	ldr	r3, [r4, #4]
 801abb8:	6123      	str	r3, [r4, #16]
 801abba:	2300      	movs	r3, #0
 801abbc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801abc0:	e7a8      	b.n	801ab14 <_printf_i+0x150>
 801abc2:	6923      	ldr	r3, [r4, #16]
 801abc4:	4632      	mov	r2, r6
 801abc6:	4649      	mov	r1, r9
 801abc8:	4640      	mov	r0, r8
 801abca:	47d0      	blx	sl
 801abcc:	3001      	adds	r0, #1
 801abce:	d0ab      	beq.n	801ab28 <_printf_i+0x164>
 801abd0:	6823      	ldr	r3, [r4, #0]
 801abd2:	079b      	lsls	r3, r3, #30
 801abd4:	d413      	bmi.n	801abfe <_printf_i+0x23a>
 801abd6:	68e0      	ldr	r0, [r4, #12]
 801abd8:	9b03      	ldr	r3, [sp, #12]
 801abda:	4298      	cmp	r0, r3
 801abdc:	bfb8      	it	lt
 801abde:	4618      	movlt	r0, r3
 801abe0:	e7a4      	b.n	801ab2c <_printf_i+0x168>
 801abe2:	2301      	movs	r3, #1
 801abe4:	4632      	mov	r2, r6
 801abe6:	4649      	mov	r1, r9
 801abe8:	4640      	mov	r0, r8
 801abea:	47d0      	blx	sl
 801abec:	3001      	adds	r0, #1
 801abee:	d09b      	beq.n	801ab28 <_printf_i+0x164>
 801abf0:	3501      	adds	r5, #1
 801abf2:	68e3      	ldr	r3, [r4, #12]
 801abf4:	9903      	ldr	r1, [sp, #12]
 801abf6:	1a5b      	subs	r3, r3, r1
 801abf8:	42ab      	cmp	r3, r5
 801abfa:	dcf2      	bgt.n	801abe2 <_printf_i+0x21e>
 801abfc:	e7eb      	b.n	801abd6 <_printf_i+0x212>
 801abfe:	2500      	movs	r5, #0
 801ac00:	f104 0619 	add.w	r6, r4, #25
 801ac04:	e7f5      	b.n	801abf2 <_printf_i+0x22e>
 801ac06:	bf00      	nop
 801ac08:	0801e6d9 	.word	0x0801e6d9
 801ac0c:	0801e6ea 	.word	0x0801e6ea

0801ac10 <_sbrk_r>:
 801ac10:	b538      	push	{r3, r4, r5, lr}
 801ac12:	4d06      	ldr	r5, [pc, #24]	; (801ac2c <_sbrk_r+0x1c>)
 801ac14:	2300      	movs	r3, #0
 801ac16:	4604      	mov	r4, r0
 801ac18:	4608      	mov	r0, r1
 801ac1a:	602b      	str	r3, [r5, #0]
 801ac1c:	f7e7 f99a 	bl	8001f54 <_sbrk>
 801ac20:	1c43      	adds	r3, r0, #1
 801ac22:	d102      	bne.n	801ac2a <_sbrk_r+0x1a>
 801ac24:	682b      	ldr	r3, [r5, #0]
 801ac26:	b103      	cbz	r3, 801ac2a <_sbrk_r+0x1a>
 801ac28:	6023      	str	r3, [r4, #0]
 801ac2a:	bd38      	pop	{r3, r4, r5, pc}
 801ac2c:	2000a5fc 	.word	0x2000a5fc

0801ac30 <_raise_r>:
 801ac30:	291f      	cmp	r1, #31
 801ac32:	b538      	push	{r3, r4, r5, lr}
 801ac34:	4604      	mov	r4, r0
 801ac36:	460d      	mov	r5, r1
 801ac38:	d904      	bls.n	801ac44 <_raise_r+0x14>
 801ac3a:	2316      	movs	r3, #22
 801ac3c:	6003      	str	r3, [r0, #0]
 801ac3e:	f04f 30ff 	mov.w	r0, #4294967295
 801ac42:	bd38      	pop	{r3, r4, r5, pc}
 801ac44:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801ac46:	b112      	cbz	r2, 801ac4e <_raise_r+0x1e>
 801ac48:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801ac4c:	b94b      	cbnz	r3, 801ac62 <_raise_r+0x32>
 801ac4e:	4620      	mov	r0, r4
 801ac50:	f000 f830 	bl	801acb4 <_getpid_r>
 801ac54:	462a      	mov	r2, r5
 801ac56:	4601      	mov	r1, r0
 801ac58:	4620      	mov	r0, r4
 801ac5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ac5e:	f000 b817 	b.w	801ac90 <_kill_r>
 801ac62:	2b01      	cmp	r3, #1
 801ac64:	d00a      	beq.n	801ac7c <_raise_r+0x4c>
 801ac66:	1c59      	adds	r1, r3, #1
 801ac68:	d103      	bne.n	801ac72 <_raise_r+0x42>
 801ac6a:	2316      	movs	r3, #22
 801ac6c:	6003      	str	r3, [r0, #0]
 801ac6e:	2001      	movs	r0, #1
 801ac70:	e7e7      	b.n	801ac42 <_raise_r+0x12>
 801ac72:	2400      	movs	r4, #0
 801ac74:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801ac78:	4628      	mov	r0, r5
 801ac7a:	4798      	blx	r3
 801ac7c:	2000      	movs	r0, #0
 801ac7e:	e7e0      	b.n	801ac42 <_raise_r+0x12>

0801ac80 <raise>:
 801ac80:	4b02      	ldr	r3, [pc, #8]	; (801ac8c <raise+0xc>)
 801ac82:	4601      	mov	r1, r0
 801ac84:	6818      	ldr	r0, [r3, #0]
 801ac86:	f7ff bfd3 	b.w	801ac30 <_raise_r>
 801ac8a:	bf00      	nop
 801ac8c:	200000d8 	.word	0x200000d8

0801ac90 <_kill_r>:
 801ac90:	b538      	push	{r3, r4, r5, lr}
 801ac92:	4d07      	ldr	r5, [pc, #28]	; (801acb0 <_kill_r+0x20>)
 801ac94:	2300      	movs	r3, #0
 801ac96:	4604      	mov	r4, r0
 801ac98:	4608      	mov	r0, r1
 801ac9a:	4611      	mov	r1, r2
 801ac9c:	602b      	str	r3, [r5, #0]
 801ac9e:	f7e7 f925 	bl	8001eec <_kill>
 801aca2:	1c43      	adds	r3, r0, #1
 801aca4:	d102      	bne.n	801acac <_kill_r+0x1c>
 801aca6:	682b      	ldr	r3, [r5, #0]
 801aca8:	b103      	cbz	r3, 801acac <_kill_r+0x1c>
 801acaa:	6023      	str	r3, [r4, #0]
 801acac:	bd38      	pop	{r3, r4, r5, pc}
 801acae:	bf00      	nop
 801acb0:	2000a5fc 	.word	0x2000a5fc

0801acb4 <_getpid_r>:
 801acb4:	f7e7 b918 	b.w	8001ee8 <_getpid>

0801acb8 <__swbuf_r>:
 801acb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801acba:	460e      	mov	r6, r1
 801acbc:	4614      	mov	r4, r2
 801acbe:	4605      	mov	r5, r0
 801acc0:	b118      	cbz	r0, 801acca <__swbuf_r+0x12>
 801acc2:	6983      	ldr	r3, [r0, #24]
 801acc4:	b90b      	cbnz	r3, 801acca <__swbuf_r+0x12>
 801acc6:	f000 fa33 	bl	801b130 <__sinit>
 801acca:	4b21      	ldr	r3, [pc, #132]	; (801ad50 <__swbuf_r+0x98>)
 801accc:	429c      	cmp	r4, r3
 801acce:	d12b      	bne.n	801ad28 <__swbuf_r+0x70>
 801acd0:	686c      	ldr	r4, [r5, #4]
 801acd2:	69a3      	ldr	r3, [r4, #24]
 801acd4:	60a3      	str	r3, [r4, #8]
 801acd6:	89a3      	ldrh	r3, [r4, #12]
 801acd8:	071a      	lsls	r2, r3, #28
 801acda:	d52f      	bpl.n	801ad3c <__swbuf_r+0x84>
 801acdc:	6923      	ldr	r3, [r4, #16]
 801acde:	b36b      	cbz	r3, 801ad3c <__swbuf_r+0x84>
 801ace0:	6923      	ldr	r3, [r4, #16]
 801ace2:	6820      	ldr	r0, [r4, #0]
 801ace4:	1ac0      	subs	r0, r0, r3
 801ace6:	6963      	ldr	r3, [r4, #20]
 801ace8:	b2f6      	uxtb	r6, r6
 801acea:	4283      	cmp	r3, r0
 801acec:	4637      	mov	r7, r6
 801acee:	dc04      	bgt.n	801acfa <__swbuf_r+0x42>
 801acf0:	4621      	mov	r1, r4
 801acf2:	4628      	mov	r0, r5
 801acf4:	f000 f988 	bl	801b008 <_fflush_r>
 801acf8:	bb30      	cbnz	r0, 801ad48 <__swbuf_r+0x90>
 801acfa:	68a3      	ldr	r3, [r4, #8]
 801acfc:	3b01      	subs	r3, #1
 801acfe:	60a3      	str	r3, [r4, #8]
 801ad00:	6823      	ldr	r3, [r4, #0]
 801ad02:	1c5a      	adds	r2, r3, #1
 801ad04:	6022      	str	r2, [r4, #0]
 801ad06:	701e      	strb	r6, [r3, #0]
 801ad08:	6963      	ldr	r3, [r4, #20]
 801ad0a:	3001      	adds	r0, #1
 801ad0c:	4283      	cmp	r3, r0
 801ad0e:	d004      	beq.n	801ad1a <__swbuf_r+0x62>
 801ad10:	89a3      	ldrh	r3, [r4, #12]
 801ad12:	07db      	lsls	r3, r3, #31
 801ad14:	d506      	bpl.n	801ad24 <__swbuf_r+0x6c>
 801ad16:	2e0a      	cmp	r6, #10
 801ad18:	d104      	bne.n	801ad24 <__swbuf_r+0x6c>
 801ad1a:	4621      	mov	r1, r4
 801ad1c:	4628      	mov	r0, r5
 801ad1e:	f000 f973 	bl	801b008 <_fflush_r>
 801ad22:	b988      	cbnz	r0, 801ad48 <__swbuf_r+0x90>
 801ad24:	4638      	mov	r0, r7
 801ad26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ad28:	4b0a      	ldr	r3, [pc, #40]	; (801ad54 <__swbuf_r+0x9c>)
 801ad2a:	429c      	cmp	r4, r3
 801ad2c:	d101      	bne.n	801ad32 <__swbuf_r+0x7a>
 801ad2e:	68ac      	ldr	r4, [r5, #8]
 801ad30:	e7cf      	b.n	801acd2 <__swbuf_r+0x1a>
 801ad32:	4b09      	ldr	r3, [pc, #36]	; (801ad58 <__swbuf_r+0xa0>)
 801ad34:	429c      	cmp	r4, r3
 801ad36:	bf08      	it	eq
 801ad38:	68ec      	ldreq	r4, [r5, #12]
 801ad3a:	e7ca      	b.n	801acd2 <__swbuf_r+0x1a>
 801ad3c:	4621      	mov	r1, r4
 801ad3e:	4628      	mov	r0, r5
 801ad40:	f000 f80c 	bl	801ad5c <__swsetup_r>
 801ad44:	2800      	cmp	r0, #0
 801ad46:	d0cb      	beq.n	801ace0 <__swbuf_r+0x28>
 801ad48:	f04f 37ff 	mov.w	r7, #4294967295
 801ad4c:	e7ea      	b.n	801ad24 <__swbuf_r+0x6c>
 801ad4e:	bf00      	nop
 801ad50:	0801e720 	.word	0x0801e720
 801ad54:	0801e740 	.word	0x0801e740
 801ad58:	0801e700 	.word	0x0801e700

0801ad5c <__swsetup_r>:
 801ad5c:	4b32      	ldr	r3, [pc, #200]	; (801ae28 <__swsetup_r+0xcc>)
 801ad5e:	b570      	push	{r4, r5, r6, lr}
 801ad60:	681d      	ldr	r5, [r3, #0]
 801ad62:	4606      	mov	r6, r0
 801ad64:	460c      	mov	r4, r1
 801ad66:	b125      	cbz	r5, 801ad72 <__swsetup_r+0x16>
 801ad68:	69ab      	ldr	r3, [r5, #24]
 801ad6a:	b913      	cbnz	r3, 801ad72 <__swsetup_r+0x16>
 801ad6c:	4628      	mov	r0, r5
 801ad6e:	f000 f9df 	bl	801b130 <__sinit>
 801ad72:	4b2e      	ldr	r3, [pc, #184]	; (801ae2c <__swsetup_r+0xd0>)
 801ad74:	429c      	cmp	r4, r3
 801ad76:	d10f      	bne.n	801ad98 <__swsetup_r+0x3c>
 801ad78:	686c      	ldr	r4, [r5, #4]
 801ad7a:	89a3      	ldrh	r3, [r4, #12]
 801ad7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ad80:	0719      	lsls	r1, r3, #28
 801ad82:	d42c      	bmi.n	801adde <__swsetup_r+0x82>
 801ad84:	06dd      	lsls	r5, r3, #27
 801ad86:	d411      	bmi.n	801adac <__swsetup_r+0x50>
 801ad88:	2309      	movs	r3, #9
 801ad8a:	6033      	str	r3, [r6, #0]
 801ad8c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801ad90:	81a3      	strh	r3, [r4, #12]
 801ad92:	f04f 30ff 	mov.w	r0, #4294967295
 801ad96:	e03e      	b.n	801ae16 <__swsetup_r+0xba>
 801ad98:	4b25      	ldr	r3, [pc, #148]	; (801ae30 <__swsetup_r+0xd4>)
 801ad9a:	429c      	cmp	r4, r3
 801ad9c:	d101      	bne.n	801ada2 <__swsetup_r+0x46>
 801ad9e:	68ac      	ldr	r4, [r5, #8]
 801ada0:	e7eb      	b.n	801ad7a <__swsetup_r+0x1e>
 801ada2:	4b24      	ldr	r3, [pc, #144]	; (801ae34 <__swsetup_r+0xd8>)
 801ada4:	429c      	cmp	r4, r3
 801ada6:	bf08      	it	eq
 801ada8:	68ec      	ldreq	r4, [r5, #12]
 801adaa:	e7e6      	b.n	801ad7a <__swsetup_r+0x1e>
 801adac:	0758      	lsls	r0, r3, #29
 801adae:	d512      	bpl.n	801add6 <__swsetup_r+0x7a>
 801adb0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801adb2:	b141      	cbz	r1, 801adc6 <__swsetup_r+0x6a>
 801adb4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801adb8:	4299      	cmp	r1, r3
 801adba:	d002      	beq.n	801adc2 <__swsetup_r+0x66>
 801adbc:	4630      	mov	r0, r6
 801adbe:	f7ff fb8f 	bl	801a4e0 <_free_r>
 801adc2:	2300      	movs	r3, #0
 801adc4:	6363      	str	r3, [r4, #52]	; 0x34
 801adc6:	89a3      	ldrh	r3, [r4, #12]
 801adc8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801adcc:	81a3      	strh	r3, [r4, #12]
 801adce:	2300      	movs	r3, #0
 801add0:	6063      	str	r3, [r4, #4]
 801add2:	6923      	ldr	r3, [r4, #16]
 801add4:	6023      	str	r3, [r4, #0]
 801add6:	89a3      	ldrh	r3, [r4, #12]
 801add8:	f043 0308 	orr.w	r3, r3, #8
 801addc:	81a3      	strh	r3, [r4, #12]
 801adde:	6923      	ldr	r3, [r4, #16]
 801ade0:	b94b      	cbnz	r3, 801adf6 <__swsetup_r+0x9a>
 801ade2:	89a3      	ldrh	r3, [r4, #12]
 801ade4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801ade8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801adec:	d003      	beq.n	801adf6 <__swsetup_r+0x9a>
 801adee:	4621      	mov	r1, r4
 801adf0:	4630      	mov	r0, r6
 801adf2:	f000 fa63 	bl	801b2bc <__smakebuf_r>
 801adf6:	89a0      	ldrh	r0, [r4, #12]
 801adf8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801adfc:	f010 0301 	ands.w	r3, r0, #1
 801ae00:	d00a      	beq.n	801ae18 <__swsetup_r+0xbc>
 801ae02:	2300      	movs	r3, #0
 801ae04:	60a3      	str	r3, [r4, #8]
 801ae06:	6963      	ldr	r3, [r4, #20]
 801ae08:	425b      	negs	r3, r3
 801ae0a:	61a3      	str	r3, [r4, #24]
 801ae0c:	6923      	ldr	r3, [r4, #16]
 801ae0e:	b943      	cbnz	r3, 801ae22 <__swsetup_r+0xc6>
 801ae10:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801ae14:	d1ba      	bne.n	801ad8c <__swsetup_r+0x30>
 801ae16:	bd70      	pop	{r4, r5, r6, pc}
 801ae18:	0781      	lsls	r1, r0, #30
 801ae1a:	bf58      	it	pl
 801ae1c:	6963      	ldrpl	r3, [r4, #20]
 801ae1e:	60a3      	str	r3, [r4, #8]
 801ae20:	e7f4      	b.n	801ae0c <__swsetup_r+0xb0>
 801ae22:	2000      	movs	r0, #0
 801ae24:	e7f7      	b.n	801ae16 <__swsetup_r+0xba>
 801ae26:	bf00      	nop
 801ae28:	200000d8 	.word	0x200000d8
 801ae2c:	0801e720 	.word	0x0801e720
 801ae30:	0801e740 	.word	0x0801e740
 801ae34:	0801e700 	.word	0x0801e700

0801ae38 <__register_exitproc>:
 801ae38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ae3c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801aef8 <__register_exitproc+0xc0>
 801ae40:	4606      	mov	r6, r0
 801ae42:	f8d8 0000 	ldr.w	r0, [r8]
 801ae46:	461f      	mov	r7, r3
 801ae48:	460d      	mov	r5, r1
 801ae4a:	4691      	mov	r9, r2
 801ae4c:	f000 fa0e 	bl	801b26c <__retarget_lock_acquire_recursive>
 801ae50:	4b25      	ldr	r3, [pc, #148]	; (801aee8 <__register_exitproc+0xb0>)
 801ae52:	681c      	ldr	r4, [r3, #0]
 801ae54:	b934      	cbnz	r4, 801ae64 <__register_exitproc+0x2c>
 801ae56:	4c25      	ldr	r4, [pc, #148]	; (801aeec <__register_exitproc+0xb4>)
 801ae58:	601c      	str	r4, [r3, #0]
 801ae5a:	4b25      	ldr	r3, [pc, #148]	; (801aef0 <__register_exitproc+0xb8>)
 801ae5c:	b113      	cbz	r3, 801ae64 <__register_exitproc+0x2c>
 801ae5e:	681b      	ldr	r3, [r3, #0]
 801ae60:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801ae64:	6863      	ldr	r3, [r4, #4]
 801ae66:	2b1f      	cmp	r3, #31
 801ae68:	dd07      	ble.n	801ae7a <__register_exitproc+0x42>
 801ae6a:	f8d8 0000 	ldr.w	r0, [r8]
 801ae6e:	f000 f9ff 	bl	801b270 <__retarget_lock_release_recursive>
 801ae72:	f04f 30ff 	mov.w	r0, #4294967295
 801ae76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ae7a:	b34e      	cbz	r6, 801aed0 <__register_exitproc+0x98>
 801ae7c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801ae80:	b988      	cbnz	r0, 801aea6 <__register_exitproc+0x6e>
 801ae82:	4b1c      	ldr	r3, [pc, #112]	; (801aef4 <__register_exitproc+0xbc>)
 801ae84:	b923      	cbnz	r3, 801ae90 <__register_exitproc+0x58>
 801ae86:	f8d8 0000 	ldr.w	r0, [r8]
 801ae8a:	f000 f9f0 	bl	801b26e <__retarget_lock_release>
 801ae8e:	e7f0      	b.n	801ae72 <__register_exitproc+0x3a>
 801ae90:	f44f 7084 	mov.w	r0, #264	; 0x108
 801ae94:	f7ff fafe 	bl	801a494 <malloc>
 801ae98:	2800      	cmp	r0, #0
 801ae9a:	d0f4      	beq.n	801ae86 <__register_exitproc+0x4e>
 801ae9c:	2300      	movs	r3, #0
 801ae9e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801aea2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801aea6:	6863      	ldr	r3, [r4, #4]
 801aea8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801aeac:	2201      	movs	r2, #1
 801aeae:	409a      	lsls	r2, r3
 801aeb0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801aeb4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801aeb8:	4313      	orrs	r3, r2
 801aeba:	2e02      	cmp	r6, #2
 801aebc:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801aec0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801aec4:	bf02      	ittt	eq
 801aec6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801aeca:	431a      	orreq	r2, r3
 801aecc:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801aed0:	6863      	ldr	r3, [r4, #4]
 801aed2:	f8d8 0000 	ldr.w	r0, [r8]
 801aed6:	1c5a      	adds	r2, r3, #1
 801aed8:	3302      	adds	r3, #2
 801aeda:	6062      	str	r2, [r4, #4]
 801aedc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801aee0:	f000 f9c6 	bl	801b270 <__retarget_lock_release_recursive>
 801aee4:	2000      	movs	r0, #0
 801aee6:	e7c6      	b.n	801ae76 <__register_exitproc+0x3e>
 801aee8:	2000a32c 	.word	0x2000a32c
 801aeec:	2000a2a0 	.word	0x2000a2a0
 801aef0:	0801e6fc 	.word	0x0801e6fc
 801aef4:	0801a495 	.word	0x0801a495
 801aef8:	2000013c 	.word	0x2000013c

0801aefc <__sflush_r>:
 801aefc:	898a      	ldrh	r2, [r1, #12]
 801aefe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801af02:	4605      	mov	r5, r0
 801af04:	0710      	lsls	r0, r2, #28
 801af06:	460c      	mov	r4, r1
 801af08:	d458      	bmi.n	801afbc <__sflush_r+0xc0>
 801af0a:	684b      	ldr	r3, [r1, #4]
 801af0c:	2b00      	cmp	r3, #0
 801af0e:	dc05      	bgt.n	801af1c <__sflush_r+0x20>
 801af10:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801af12:	2b00      	cmp	r3, #0
 801af14:	dc02      	bgt.n	801af1c <__sflush_r+0x20>
 801af16:	2000      	movs	r0, #0
 801af18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801af1c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801af1e:	2e00      	cmp	r6, #0
 801af20:	d0f9      	beq.n	801af16 <__sflush_r+0x1a>
 801af22:	2300      	movs	r3, #0
 801af24:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801af28:	682f      	ldr	r7, [r5, #0]
 801af2a:	602b      	str	r3, [r5, #0]
 801af2c:	d032      	beq.n	801af94 <__sflush_r+0x98>
 801af2e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801af30:	89a3      	ldrh	r3, [r4, #12]
 801af32:	075a      	lsls	r2, r3, #29
 801af34:	d505      	bpl.n	801af42 <__sflush_r+0x46>
 801af36:	6863      	ldr	r3, [r4, #4]
 801af38:	1ac0      	subs	r0, r0, r3
 801af3a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801af3c:	b10b      	cbz	r3, 801af42 <__sflush_r+0x46>
 801af3e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801af40:	1ac0      	subs	r0, r0, r3
 801af42:	2300      	movs	r3, #0
 801af44:	4602      	mov	r2, r0
 801af46:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801af48:	6a21      	ldr	r1, [r4, #32]
 801af4a:	4628      	mov	r0, r5
 801af4c:	47b0      	blx	r6
 801af4e:	1c43      	adds	r3, r0, #1
 801af50:	89a3      	ldrh	r3, [r4, #12]
 801af52:	d106      	bne.n	801af62 <__sflush_r+0x66>
 801af54:	6829      	ldr	r1, [r5, #0]
 801af56:	291d      	cmp	r1, #29
 801af58:	d82c      	bhi.n	801afb4 <__sflush_r+0xb8>
 801af5a:	4a2a      	ldr	r2, [pc, #168]	; (801b004 <__sflush_r+0x108>)
 801af5c:	40ca      	lsrs	r2, r1
 801af5e:	07d6      	lsls	r6, r2, #31
 801af60:	d528      	bpl.n	801afb4 <__sflush_r+0xb8>
 801af62:	2200      	movs	r2, #0
 801af64:	6062      	str	r2, [r4, #4]
 801af66:	04d9      	lsls	r1, r3, #19
 801af68:	6922      	ldr	r2, [r4, #16]
 801af6a:	6022      	str	r2, [r4, #0]
 801af6c:	d504      	bpl.n	801af78 <__sflush_r+0x7c>
 801af6e:	1c42      	adds	r2, r0, #1
 801af70:	d101      	bne.n	801af76 <__sflush_r+0x7a>
 801af72:	682b      	ldr	r3, [r5, #0]
 801af74:	b903      	cbnz	r3, 801af78 <__sflush_r+0x7c>
 801af76:	6560      	str	r0, [r4, #84]	; 0x54
 801af78:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801af7a:	602f      	str	r7, [r5, #0]
 801af7c:	2900      	cmp	r1, #0
 801af7e:	d0ca      	beq.n	801af16 <__sflush_r+0x1a>
 801af80:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801af84:	4299      	cmp	r1, r3
 801af86:	d002      	beq.n	801af8e <__sflush_r+0x92>
 801af88:	4628      	mov	r0, r5
 801af8a:	f7ff faa9 	bl	801a4e0 <_free_r>
 801af8e:	2000      	movs	r0, #0
 801af90:	6360      	str	r0, [r4, #52]	; 0x34
 801af92:	e7c1      	b.n	801af18 <__sflush_r+0x1c>
 801af94:	6a21      	ldr	r1, [r4, #32]
 801af96:	2301      	movs	r3, #1
 801af98:	4628      	mov	r0, r5
 801af9a:	47b0      	blx	r6
 801af9c:	1c41      	adds	r1, r0, #1
 801af9e:	d1c7      	bne.n	801af30 <__sflush_r+0x34>
 801afa0:	682b      	ldr	r3, [r5, #0]
 801afa2:	2b00      	cmp	r3, #0
 801afa4:	d0c4      	beq.n	801af30 <__sflush_r+0x34>
 801afa6:	2b1d      	cmp	r3, #29
 801afa8:	d001      	beq.n	801afae <__sflush_r+0xb2>
 801afaa:	2b16      	cmp	r3, #22
 801afac:	d101      	bne.n	801afb2 <__sflush_r+0xb6>
 801afae:	602f      	str	r7, [r5, #0]
 801afb0:	e7b1      	b.n	801af16 <__sflush_r+0x1a>
 801afb2:	89a3      	ldrh	r3, [r4, #12]
 801afb4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801afb8:	81a3      	strh	r3, [r4, #12]
 801afba:	e7ad      	b.n	801af18 <__sflush_r+0x1c>
 801afbc:	690f      	ldr	r7, [r1, #16]
 801afbe:	2f00      	cmp	r7, #0
 801afc0:	d0a9      	beq.n	801af16 <__sflush_r+0x1a>
 801afc2:	0793      	lsls	r3, r2, #30
 801afc4:	680e      	ldr	r6, [r1, #0]
 801afc6:	bf08      	it	eq
 801afc8:	694b      	ldreq	r3, [r1, #20]
 801afca:	600f      	str	r7, [r1, #0]
 801afcc:	bf18      	it	ne
 801afce:	2300      	movne	r3, #0
 801afd0:	eba6 0807 	sub.w	r8, r6, r7
 801afd4:	608b      	str	r3, [r1, #8]
 801afd6:	f1b8 0f00 	cmp.w	r8, #0
 801afda:	dd9c      	ble.n	801af16 <__sflush_r+0x1a>
 801afdc:	6a21      	ldr	r1, [r4, #32]
 801afde:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801afe0:	4643      	mov	r3, r8
 801afe2:	463a      	mov	r2, r7
 801afe4:	4628      	mov	r0, r5
 801afe6:	47b0      	blx	r6
 801afe8:	2800      	cmp	r0, #0
 801afea:	dc06      	bgt.n	801affa <__sflush_r+0xfe>
 801afec:	89a3      	ldrh	r3, [r4, #12]
 801afee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801aff2:	81a3      	strh	r3, [r4, #12]
 801aff4:	f04f 30ff 	mov.w	r0, #4294967295
 801aff8:	e78e      	b.n	801af18 <__sflush_r+0x1c>
 801affa:	4407      	add	r7, r0
 801affc:	eba8 0800 	sub.w	r8, r8, r0
 801b000:	e7e9      	b.n	801afd6 <__sflush_r+0xda>
 801b002:	bf00      	nop
 801b004:	20400001 	.word	0x20400001

0801b008 <_fflush_r>:
 801b008:	b538      	push	{r3, r4, r5, lr}
 801b00a:	690b      	ldr	r3, [r1, #16]
 801b00c:	4605      	mov	r5, r0
 801b00e:	460c      	mov	r4, r1
 801b010:	b913      	cbnz	r3, 801b018 <_fflush_r+0x10>
 801b012:	2500      	movs	r5, #0
 801b014:	4628      	mov	r0, r5
 801b016:	bd38      	pop	{r3, r4, r5, pc}
 801b018:	b118      	cbz	r0, 801b022 <_fflush_r+0x1a>
 801b01a:	6983      	ldr	r3, [r0, #24]
 801b01c:	b90b      	cbnz	r3, 801b022 <_fflush_r+0x1a>
 801b01e:	f000 f887 	bl	801b130 <__sinit>
 801b022:	4b14      	ldr	r3, [pc, #80]	; (801b074 <_fflush_r+0x6c>)
 801b024:	429c      	cmp	r4, r3
 801b026:	d11b      	bne.n	801b060 <_fflush_r+0x58>
 801b028:	686c      	ldr	r4, [r5, #4]
 801b02a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b02e:	2b00      	cmp	r3, #0
 801b030:	d0ef      	beq.n	801b012 <_fflush_r+0xa>
 801b032:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b034:	07d0      	lsls	r0, r2, #31
 801b036:	d404      	bmi.n	801b042 <_fflush_r+0x3a>
 801b038:	0599      	lsls	r1, r3, #22
 801b03a:	d402      	bmi.n	801b042 <_fflush_r+0x3a>
 801b03c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b03e:	f000 f915 	bl	801b26c <__retarget_lock_acquire_recursive>
 801b042:	4628      	mov	r0, r5
 801b044:	4621      	mov	r1, r4
 801b046:	f7ff ff59 	bl	801aefc <__sflush_r>
 801b04a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b04c:	07da      	lsls	r2, r3, #31
 801b04e:	4605      	mov	r5, r0
 801b050:	d4e0      	bmi.n	801b014 <_fflush_r+0xc>
 801b052:	89a3      	ldrh	r3, [r4, #12]
 801b054:	059b      	lsls	r3, r3, #22
 801b056:	d4dd      	bmi.n	801b014 <_fflush_r+0xc>
 801b058:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b05a:	f000 f909 	bl	801b270 <__retarget_lock_release_recursive>
 801b05e:	e7d9      	b.n	801b014 <_fflush_r+0xc>
 801b060:	4b05      	ldr	r3, [pc, #20]	; (801b078 <_fflush_r+0x70>)
 801b062:	429c      	cmp	r4, r3
 801b064:	d101      	bne.n	801b06a <_fflush_r+0x62>
 801b066:	68ac      	ldr	r4, [r5, #8]
 801b068:	e7df      	b.n	801b02a <_fflush_r+0x22>
 801b06a:	4b04      	ldr	r3, [pc, #16]	; (801b07c <_fflush_r+0x74>)
 801b06c:	429c      	cmp	r4, r3
 801b06e:	bf08      	it	eq
 801b070:	68ec      	ldreq	r4, [r5, #12]
 801b072:	e7da      	b.n	801b02a <_fflush_r+0x22>
 801b074:	0801e720 	.word	0x0801e720
 801b078:	0801e740 	.word	0x0801e740
 801b07c:	0801e700 	.word	0x0801e700

0801b080 <std>:
 801b080:	2300      	movs	r3, #0
 801b082:	b510      	push	{r4, lr}
 801b084:	4604      	mov	r4, r0
 801b086:	e9c0 3300 	strd	r3, r3, [r0]
 801b08a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b08e:	6083      	str	r3, [r0, #8]
 801b090:	8181      	strh	r1, [r0, #12]
 801b092:	6643      	str	r3, [r0, #100]	; 0x64
 801b094:	81c2      	strh	r2, [r0, #14]
 801b096:	6183      	str	r3, [r0, #24]
 801b098:	4619      	mov	r1, r3
 801b09a:	2208      	movs	r2, #8
 801b09c:	305c      	adds	r0, #92	; 0x5c
 801b09e:	f7ff fa17 	bl	801a4d0 <memset>
 801b0a2:	4b05      	ldr	r3, [pc, #20]	; (801b0b8 <std+0x38>)
 801b0a4:	6263      	str	r3, [r4, #36]	; 0x24
 801b0a6:	4b05      	ldr	r3, [pc, #20]	; (801b0bc <std+0x3c>)
 801b0a8:	62a3      	str	r3, [r4, #40]	; 0x28
 801b0aa:	4b05      	ldr	r3, [pc, #20]	; (801b0c0 <std+0x40>)
 801b0ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b0ae:	4b05      	ldr	r3, [pc, #20]	; (801b0c4 <std+0x44>)
 801b0b0:	6224      	str	r4, [r4, #32]
 801b0b2:	6323      	str	r3, [r4, #48]	; 0x30
 801b0b4:	bd10      	pop	{r4, pc}
 801b0b6:	bf00      	nop
 801b0b8:	0801b355 	.word	0x0801b355
 801b0bc:	0801b377 	.word	0x0801b377
 801b0c0:	0801b3af 	.word	0x0801b3af
 801b0c4:	0801b3d3 	.word	0x0801b3d3

0801b0c8 <_cleanup_r>:
 801b0c8:	4901      	ldr	r1, [pc, #4]	; (801b0d0 <_cleanup_r+0x8>)
 801b0ca:	f000 b8af 	b.w	801b22c <_fwalk_reent>
 801b0ce:	bf00      	nop
 801b0d0:	0801b009 	.word	0x0801b009

0801b0d4 <__sfmoreglue>:
 801b0d4:	b570      	push	{r4, r5, r6, lr}
 801b0d6:	1e4a      	subs	r2, r1, #1
 801b0d8:	2568      	movs	r5, #104	; 0x68
 801b0da:	4355      	muls	r5, r2
 801b0dc:	460e      	mov	r6, r1
 801b0de:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b0e2:	f7ff fa4d 	bl	801a580 <_malloc_r>
 801b0e6:	4604      	mov	r4, r0
 801b0e8:	b140      	cbz	r0, 801b0fc <__sfmoreglue+0x28>
 801b0ea:	2100      	movs	r1, #0
 801b0ec:	e9c0 1600 	strd	r1, r6, [r0]
 801b0f0:	300c      	adds	r0, #12
 801b0f2:	60a0      	str	r0, [r4, #8]
 801b0f4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b0f8:	f7ff f9ea 	bl	801a4d0 <memset>
 801b0fc:	4620      	mov	r0, r4
 801b0fe:	bd70      	pop	{r4, r5, r6, pc}

0801b100 <__sfp_lock_acquire>:
 801b100:	4801      	ldr	r0, [pc, #4]	; (801b108 <__sfp_lock_acquire+0x8>)
 801b102:	f000 b8b3 	b.w	801b26c <__retarget_lock_acquire_recursive>
 801b106:	bf00      	nop
 801b108:	2000a5f8 	.word	0x2000a5f8

0801b10c <__sfp_lock_release>:
 801b10c:	4801      	ldr	r0, [pc, #4]	; (801b114 <__sfp_lock_release+0x8>)
 801b10e:	f000 b8af 	b.w	801b270 <__retarget_lock_release_recursive>
 801b112:	bf00      	nop
 801b114:	2000a5f8 	.word	0x2000a5f8

0801b118 <__sinit_lock_acquire>:
 801b118:	4801      	ldr	r0, [pc, #4]	; (801b120 <__sinit_lock_acquire+0x8>)
 801b11a:	f000 b8a7 	b.w	801b26c <__retarget_lock_acquire_recursive>
 801b11e:	bf00      	nop
 801b120:	2000a5f3 	.word	0x2000a5f3

0801b124 <__sinit_lock_release>:
 801b124:	4801      	ldr	r0, [pc, #4]	; (801b12c <__sinit_lock_release+0x8>)
 801b126:	f000 b8a3 	b.w	801b270 <__retarget_lock_release_recursive>
 801b12a:	bf00      	nop
 801b12c:	2000a5f3 	.word	0x2000a5f3

0801b130 <__sinit>:
 801b130:	b510      	push	{r4, lr}
 801b132:	4604      	mov	r4, r0
 801b134:	f7ff fff0 	bl	801b118 <__sinit_lock_acquire>
 801b138:	69a3      	ldr	r3, [r4, #24]
 801b13a:	b11b      	cbz	r3, 801b144 <__sinit+0x14>
 801b13c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b140:	f7ff bff0 	b.w	801b124 <__sinit_lock_release>
 801b144:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801b148:	6523      	str	r3, [r4, #80]	; 0x50
 801b14a:	4b13      	ldr	r3, [pc, #76]	; (801b198 <__sinit+0x68>)
 801b14c:	4a13      	ldr	r2, [pc, #76]	; (801b19c <__sinit+0x6c>)
 801b14e:	681b      	ldr	r3, [r3, #0]
 801b150:	62a2      	str	r2, [r4, #40]	; 0x28
 801b152:	42a3      	cmp	r3, r4
 801b154:	bf04      	itt	eq
 801b156:	2301      	moveq	r3, #1
 801b158:	61a3      	streq	r3, [r4, #24]
 801b15a:	4620      	mov	r0, r4
 801b15c:	f000 f820 	bl	801b1a0 <__sfp>
 801b160:	6060      	str	r0, [r4, #4]
 801b162:	4620      	mov	r0, r4
 801b164:	f000 f81c 	bl	801b1a0 <__sfp>
 801b168:	60a0      	str	r0, [r4, #8]
 801b16a:	4620      	mov	r0, r4
 801b16c:	f000 f818 	bl	801b1a0 <__sfp>
 801b170:	2200      	movs	r2, #0
 801b172:	60e0      	str	r0, [r4, #12]
 801b174:	2104      	movs	r1, #4
 801b176:	6860      	ldr	r0, [r4, #4]
 801b178:	f7ff ff82 	bl	801b080 <std>
 801b17c:	68a0      	ldr	r0, [r4, #8]
 801b17e:	2201      	movs	r2, #1
 801b180:	2109      	movs	r1, #9
 801b182:	f7ff ff7d 	bl	801b080 <std>
 801b186:	68e0      	ldr	r0, [r4, #12]
 801b188:	2202      	movs	r2, #2
 801b18a:	2112      	movs	r1, #18
 801b18c:	f7ff ff78 	bl	801b080 <std>
 801b190:	2301      	movs	r3, #1
 801b192:	61a3      	str	r3, [r4, #24]
 801b194:	e7d2      	b.n	801b13c <__sinit+0xc>
 801b196:	bf00      	nop
 801b198:	0801e6c4 	.word	0x0801e6c4
 801b19c:	0801b0c9 	.word	0x0801b0c9

0801b1a0 <__sfp>:
 801b1a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b1a2:	4607      	mov	r7, r0
 801b1a4:	f7ff ffac 	bl	801b100 <__sfp_lock_acquire>
 801b1a8:	4b1e      	ldr	r3, [pc, #120]	; (801b224 <__sfp+0x84>)
 801b1aa:	681e      	ldr	r6, [r3, #0]
 801b1ac:	69b3      	ldr	r3, [r6, #24]
 801b1ae:	b913      	cbnz	r3, 801b1b6 <__sfp+0x16>
 801b1b0:	4630      	mov	r0, r6
 801b1b2:	f7ff ffbd 	bl	801b130 <__sinit>
 801b1b6:	3648      	adds	r6, #72	; 0x48
 801b1b8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b1bc:	3b01      	subs	r3, #1
 801b1be:	d503      	bpl.n	801b1c8 <__sfp+0x28>
 801b1c0:	6833      	ldr	r3, [r6, #0]
 801b1c2:	b30b      	cbz	r3, 801b208 <__sfp+0x68>
 801b1c4:	6836      	ldr	r6, [r6, #0]
 801b1c6:	e7f7      	b.n	801b1b8 <__sfp+0x18>
 801b1c8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b1cc:	b9d5      	cbnz	r5, 801b204 <__sfp+0x64>
 801b1ce:	4b16      	ldr	r3, [pc, #88]	; (801b228 <__sfp+0x88>)
 801b1d0:	60e3      	str	r3, [r4, #12]
 801b1d2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801b1d6:	6665      	str	r5, [r4, #100]	; 0x64
 801b1d8:	f000 f847 	bl	801b26a <__retarget_lock_init_recursive>
 801b1dc:	f7ff ff96 	bl	801b10c <__sfp_lock_release>
 801b1e0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801b1e4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801b1e8:	6025      	str	r5, [r4, #0]
 801b1ea:	61a5      	str	r5, [r4, #24]
 801b1ec:	2208      	movs	r2, #8
 801b1ee:	4629      	mov	r1, r5
 801b1f0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b1f4:	f7ff f96c 	bl	801a4d0 <memset>
 801b1f8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b1fc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b200:	4620      	mov	r0, r4
 801b202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b204:	3468      	adds	r4, #104	; 0x68
 801b206:	e7d9      	b.n	801b1bc <__sfp+0x1c>
 801b208:	2104      	movs	r1, #4
 801b20a:	4638      	mov	r0, r7
 801b20c:	f7ff ff62 	bl	801b0d4 <__sfmoreglue>
 801b210:	4604      	mov	r4, r0
 801b212:	6030      	str	r0, [r6, #0]
 801b214:	2800      	cmp	r0, #0
 801b216:	d1d5      	bne.n	801b1c4 <__sfp+0x24>
 801b218:	f7ff ff78 	bl	801b10c <__sfp_lock_release>
 801b21c:	230c      	movs	r3, #12
 801b21e:	603b      	str	r3, [r7, #0]
 801b220:	e7ee      	b.n	801b200 <__sfp+0x60>
 801b222:	bf00      	nop
 801b224:	0801e6c4 	.word	0x0801e6c4
 801b228:	ffff0001 	.word	0xffff0001

0801b22c <_fwalk_reent>:
 801b22c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b230:	4606      	mov	r6, r0
 801b232:	4688      	mov	r8, r1
 801b234:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b238:	2700      	movs	r7, #0
 801b23a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801b23e:	f1b9 0901 	subs.w	r9, r9, #1
 801b242:	d505      	bpl.n	801b250 <_fwalk_reent+0x24>
 801b244:	6824      	ldr	r4, [r4, #0]
 801b246:	2c00      	cmp	r4, #0
 801b248:	d1f7      	bne.n	801b23a <_fwalk_reent+0xe>
 801b24a:	4638      	mov	r0, r7
 801b24c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b250:	89ab      	ldrh	r3, [r5, #12]
 801b252:	2b01      	cmp	r3, #1
 801b254:	d907      	bls.n	801b266 <_fwalk_reent+0x3a>
 801b256:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b25a:	3301      	adds	r3, #1
 801b25c:	d003      	beq.n	801b266 <_fwalk_reent+0x3a>
 801b25e:	4629      	mov	r1, r5
 801b260:	4630      	mov	r0, r6
 801b262:	47c0      	blx	r8
 801b264:	4307      	orrs	r7, r0
 801b266:	3568      	adds	r5, #104	; 0x68
 801b268:	e7e9      	b.n	801b23e <_fwalk_reent+0x12>

0801b26a <__retarget_lock_init_recursive>:
 801b26a:	4770      	bx	lr

0801b26c <__retarget_lock_acquire_recursive>:
 801b26c:	4770      	bx	lr

0801b26e <__retarget_lock_release>:
 801b26e:	4770      	bx	lr

0801b270 <__retarget_lock_release_recursive>:
 801b270:	4770      	bx	lr

0801b272 <__swhatbuf_r>:
 801b272:	b570      	push	{r4, r5, r6, lr}
 801b274:	460e      	mov	r6, r1
 801b276:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b27a:	2900      	cmp	r1, #0
 801b27c:	b096      	sub	sp, #88	; 0x58
 801b27e:	4614      	mov	r4, r2
 801b280:	461d      	mov	r5, r3
 801b282:	da07      	bge.n	801b294 <__swhatbuf_r+0x22>
 801b284:	2300      	movs	r3, #0
 801b286:	602b      	str	r3, [r5, #0]
 801b288:	89b3      	ldrh	r3, [r6, #12]
 801b28a:	061a      	lsls	r2, r3, #24
 801b28c:	d410      	bmi.n	801b2b0 <__swhatbuf_r+0x3e>
 801b28e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b292:	e00e      	b.n	801b2b2 <__swhatbuf_r+0x40>
 801b294:	466a      	mov	r2, sp
 801b296:	f000 f8c3 	bl	801b420 <_fstat_r>
 801b29a:	2800      	cmp	r0, #0
 801b29c:	dbf2      	blt.n	801b284 <__swhatbuf_r+0x12>
 801b29e:	9a01      	ldr	r2, [sp, #4]
 801b2a0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b2a4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b2a8:	425a      	negs	r2, r3
 801b2aa:	415a      	adcs	r2, r3
 801b2ac:	602a      	str	r2, [r5, #0]
 801b2ae:	e7ee      	b.n	801b28e <__swhatbuf_r+0x1c>
 801b2b0:	2340      	movs	r3, #64	; 0x40
 801b2b2:	2000      	movs	r0, #0
 801b2b4:	6023      	str	r3, [r4, #0]
 801b2b6:	b016      	add	sp, #88	; 0x58
 801b2b8:	bd70      	pop	{r4, r5, r6, pc}
	...

0801b2bc <__smakebuf_r>:
 801b2bc:	898b      	ldrh	r3, [r1, #12]
 801b2be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b2c0:	079d      	lsls	r5, r3, #30
 801b2c2:	4606      	mov	r6, r0
 801b2c4:	460c      	mov	r4, r1
 801b2c6:	d507      	bpl.n	801b2d8 <__smakebuf_r+0x1c>
 801b2c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b2cc:	6023      	str	r3, [r4, #0]
 801b2ce:	6123      	str	r3, [r4, #16]
 801b2d0:	2301      	movs	r3, #1
 801b2d2:	6163      	str	r3, [r4, #20]
 801b2d4:	b002      	add	sp, #8
 801b2d6:	bd70      	pop	{r4, r5, r6, pc}
 801b2d8:	ab01      	add	r3, sp, #4
 801b2da:	466a      	mov	r2, sp
 801b2dc:	f7ff ffc9 	bl	801b272 <__swhatbuf_r>
 801b2e0:	9900      	ldr	r1, [sp, #0]
 801b2e2:	4605      	mov	r5, r0
 801b2e4:	4630      	mov	r0, r6
 801b2e6:	f7ff f94b 	bl	801a580 <_malloc_r>
 801b2ea:	b948      	cbnz	r0, 801b300 <__smakebuf_r+0x44>
 801b2ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b2f0:	059a      	lsls	r2, r3, #22
 801b2f2:	d4ef      	bmi.n	801b2d4 <__smakebuf_r+0x18>
 801b2f4:	f023 0303 	bic.w	r3, r3, #3
 801b2f8:	f043 0302 	orr.w	r3, r3, #2
 801b2fc:	81a3      	strh	r3, [r4, #12]
 801b2fe:	e7e3      	b.n	801b2c8 <__smakebuf_r+0xc>
 801b300:	4b0d      	ldr	r3, [pc, #52]	; (801b338 <__smakebuf_r+0x7c>)
 801b302:	62b3      	str	r3, [r6, #40]	; 0x28
 801b304:	89a3      	ldrh	r3, [r4, #12]
 801b306:	6020      	str	r0, [r4, #0]
 801b308:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b30c:	81a3      	strh	r3, [r4, #12]
 801b30e:	9b00      	ldr	r3, [sp, #0]
 801b310:	6163      	str	r3, [r4, #20]
 801b312:	9b01      	ldr	r3, [sp, #4]
 801b314:	6120      	str	r0, [r4, #16]
 801b316:	b15b      	cbz	r3, 801b330 <__smakebuf_r+0x74>
 801b318:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b31c:	4630      	mov	r0, r6
 801b31e:	f000 f891 	bl	801b444 <_isatty_r>
 801b322:	b128      	cbz	r0, 801b330 <__smakebuf_r+0x74>
 801b324:	89a3      	ldrh	r3, [r4, #12]
 801b326:	f023 0303 	bic.w	r3, r3, #3
 801b32a:	f043 0301 	orr.w	r3, r3, #1
 801b32e:	81a3      	strh	r3, [r4, #12]
 801b330:	89a0      	ldrh	r0, [r4, #12]
 801b332:	4305      	orrs	r5, r0
 801b334:	81a5      	strh	r5, [r4, #12]
 801b336:	e7cd      	b.n	801b2d4 <__smakebuf_r+0x18>
 801b338:	0801b0c9 	.word	0x0801b0c9

0801b33c <__malloc_lock>:
 801b33c:	4801      	ldr	r0, [pc, #4]	; (801b344 <__malloc_lock+0x8>)
 801b33e:	f7ff bf95 	b.w	801b26c <__retarget_lock_acquire_recursive>
 801b342:	bf00      	nop
 801b344:	2000a5f4 	.word	0x2000a5f4

0801b348 <__malloc_unlock>:
 801b348:	4801      	ldr	r0, [pc, #4]	; (801b350 <__malloc_unlock+0x8>)
 801b34a:	f7ff bf91 	b.w	801b270 <__retarget_lock_release_recursive>
 801b34e:	bf00      	nop
 801b350:	2000a5f4 	.word	0x2000a5f4

0801b354 <__sread>:
 801b354:	b510      	push	{r4, lr}
 801b356:	460c      	mov	r4, r1
 801b358:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b35c:	f000 f894 	bl	801b488 <_read_r>
 801b360:	2800      	cmp	r0, #0
 801b362:	bfab      	itete	ge
 801b364:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801b366:	89a3      	ldrhlt	r3, [r4, #12]
 801b368:	181b      	addge	r3, r3, r0
 801b36a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801b36e:	bfac      	ite	ge
 801b370:	6563      	strge	r3, [r4, #84]	; 0x54
 801b372:	81a3      	strhlt	r3, [r4, #12]
 801b374:	bd10      	pop	{r4, pc}

0801b376 <__swrite>:
 801b376:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b37a:	461f      	mov	r7, r3
 801b37c:	898b      	ldrh	r3, [r1, #12]
 801b37e:	05db      	lsls	r3, r3, #23
 801b380:	4605      	mov	r5, r0
 801b382:	460c      	mov	r4, r1
 801b384:	4616      	mov	r6, r2
 801b386:	d505      	bpl.n	801b394 <__swrite+0x1e>
 801b388:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b38c:	2302      	movs	r3, #2
 801b38e:	2200      	movs	r2, #0
 801b390:	f000 f868 	bl	801b464 <_lseek_r>
 801b394:	89a3      	ldrh	r3, [r4, #12]
 801b396:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b39a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801b39e:	81a3      	strh	r3, [r4, #12]
 801b3a0:	4632      	mov	r2, r6
 801b3a2:	463b      	mov	r3, r7
 801b3a4:	4628      	mov	r0, r5
 801b3a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b3aa:	f000 b817 	b.w	801b3dc <_write_r>

0801b3ae <__sseek>:
 801b3ae:	b510      	push	{r4, lr}
 801b3b0:	460c      	mov	r4, r1
 801b3b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b3b6:	f000 f855 	bl	801b464 <_lseek_r>
 801b3ba:	1c43      	adds	r3, r0, #1
 801b3bc:	89a3      	ldrh	r3, [r4, #12]
 801b3be:	bf15      	itete	ne
 801b3c0:	6560      	strne	r0, [r4, #84]	; 0x54
 801b3c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801b3c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801b3ca:	81a3      	strheq	r3, [r4, #12]
 801b3cc:	bf18      	it	ne
 801b3ce:	81a3      	strhne	r3, [r4, #12]
 801b3d0:	bd10      	pop	{r4, pc}

0801b3d2 <__sclose>:
 801b3d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b3d6:	f000 b813 	b.w	801b400 <_close_r>
	...

0801b3dc <_write_r>:
 801b3dc:	b538      	push	{r3, r4, r5, lr}
 801b3de:	4d07      	ldr	r5, [pc, #28]	; (801b3fc <_write_r+0x20>)
 801b3e0:	4604      	mov	r4, r0
 801b3e2:	4608      	mov	r0, r1
 801b3e4:	4611      	mov	r1, r2
 801b3e6:	2200      	movs	r2, #0
 801b3e8:	602a      	str	r2, [r5, #0]
 801b3ea:	461a      	mov	r2, r3
 801b3ec:	f7e6 fd99 	bl	8001f22 <_write>
 801b3f0:	1c43      	adds	r3, r0, #1
 801b3f2:	d102      	bne.n	801b3fa <_write_r+0x1e>
 801b3f4:	682b      	ldr	r3, [r5, #0]
 801b3f6:	b103      	cbz	r3, 801b3fa <_write_r+0x1e>
 801b3f8:	6023      	str	r3, [r4, #0]
 801b3fa:	bd38      	pop	{r3, r4, r5, pc}
 801b3fc:	2000a5fc 	.word	0x2000a5fc

0801b400 <_close_r>:
 801b400:	b538      	push	{r3, r4, r5, lr}
 801b402:	4d06      	ldr	r5, [pc, #24]	; (801b41c <_close_r+0x1c>)
 801b404:	2300      	movs	r3, #0
 801b406:	4604      	mov	r4, r0
 801b408:	4608      	mov	r0, r1
 801b40a:	602b      	str	r3, [r5, #0]
 801b40c:	f7e6 fd96 	bl	8001f3c <_close>
 801b410:	1c43      	adds	r3, r0, #1
 801b412:	d102      	bne.n	801b41a <_close_r+0x1a>
 801b414:	682b      	ldr	r3, [r5, #0]
 801b416:	b103      	cbz	r3, 801b41a <_close_r+0x1a>
 801b418:	6023      	str	r3, [r4, #0]
 801b41a:	bd38      	pop	{r3, r4, r5, pc}
 801b41c:	2000a5fc 	.word	0x2000a5fc

0801b420 <_fstat_r>:
 801b420:	b538      	push	{r3, r4, r5, lr}
 801b422:	4d07      	ldr	r5, [pc, #28]	; (801b440 <_fstat_r+0x20>)
 801b424:	2300      	movs	r3, #0
 801b426:	4604      	mov	r4, r0
 801b428:	4608      	mov	r0, r1
 801b42a:	4611      	mov	r1, r2
 801b42c:	602b      	str	r3, [r5, #0]
 801b42e:	f7e6 fd88 	bl	8001f42 <_fstat>
 801b432:	1c43      	adds	r3, r0, #1
 801b434:	d102      	bne.n	801b43c <_fstat_r+0x1c>
 801b436:	682b      	ldr	r3, [r5, #0]
 801b438:	b103      	cbz	r3, 801b43c <_fstat_r+0x1c>
 801b43a:	6023      	str	r3, [r4, #0]
 801b43c:	bd38      	pop	{r3, r4, r5, pc}
 801b43e:	bf00      	nop
 801b440:	2000a5fc 	.word	0x2000a5fc

0801b444 <_isatty_r>:
 801b444:	b538      	push	{r3, r4, r5, lr}
 801b446:	4d06      	ldr	r5, [pc, #24]	; (801b460 <_isatty_r+0x1c>)
 801b448:	2300      	movs	r3, #0
 801b44a:	4604      	mov	r4, r0
 801b44c:	4608      	mov	r0, r1
 801b44e:	602b      	str	r3, [r5, #0]
 801b450:	f7e6 fd7c 	bl	8001f4c <_isatty>
 801b454:	1c43      	adds	r3, r0, #1
 801b456:	d102      	bne.n	801b45e <_isatty_r+0x1a>
 801b458:	682b      	ldr	r3, [r5, #0]
 801b45a:	b103      	cbz	r3, 801b45e <_isatty_r+0x1a>
 801b45c:	6023      	str	r3, [r4, #0]
 801b45e:	bd38      	pop	{r3, r4, r5, pc}
 801b460:	2000a5fc 	.word	0x2000a5fc

0801b464 <_lseek_r>:
 801b464:	b538      	push	{r3, r4, r5, lr}
 801b466:	4d07      	ldr	r5, [pc, #28]	; (801b484 <_lseek_r+0x20>)
 801b468:	4604      	mov	r4, r0
 801b46a:	4608      	mov	r0, r1
 801b46c:	4611      	mov	r1, r2
 801b46e:	2200      	movs	r2, #0
 801b470:	602a      	str	r2, [r5, #0]
 801b472:	461a      	mov	r2, r3
 801b474:	f7e6 fd6c 	bl	8001f50 <_lseek>
 801b478:	1c43      	adds	r3, r0, #1
 801b47a:	d102      	bne.n	801b482 <_lseek_r+0x1e>
 801b47c:	682b      	ldr	r3, [r5, #0]
 801b47e:	b103      	cbz	r3, 801b482 <_lseek_r+0x1e>
 801b480:	6023      	str	r3, [r4, #0]
 801b482:	bd38      	pop	{r3, r4, r5, pc}
 801b484:	2000a5fc 	.word	0x2000a5fc

0801b488 <_read_r>:
 801b488:	b538      	push	{r3, r4, r5, lr}
 801b48a:	4d07      	ldr	r5, [pc, #28]	; (801b4a8 <_read_r+0x20>)
 801b48c:	4604      	mov	r4, r0
 801b48e:	4608      	mov	r0, r1
 801b490:	4611      	mov	r1, r2
 801b492:	2200      	movs	r2, #0
 801b494:	602a      	str	r2, [r5, #0]
 801b496:	461a      	mov	r2, r3
 801b498:	f7e6 fd36 	bl	8001f08 <_read>
 801b49c:	1c43      	adds	r3, r0, #1
 801b49e:	d102      	bne.n	801b4a6 <_read_r+0x1e>
 801b4a0:	682b      	ldr	r3, [r5, #0]
 801b4a2:	b103      	cbz	r3, 801b4a6 <_read_r+0x1e>
 801b4a4:	6023      	str	r3, [r4, #0]
 801b4a6:	bd38      	pop	{r3, r4, r5, pc}
 801b4a8:	2000a5fc 	.word	0x2000a5fc

0801b4ac <_init>:
 801b4ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b4ae:	bf00      	nop
 801b4b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b4b2:	bc08      	pop	{r3}
 801b4b4:	469e      	mov	lr, r3
 801b4b6:	4770      	bx	lr

0801b4b8 <_fini>:
 801b4b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b4ba:	bf00      	nop
 801b4bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b4be:	bc08      	pop	{r3}
 801b4c0:	469e      	mov	lr, r3
 801b4c2:	4770      	bx	lr
